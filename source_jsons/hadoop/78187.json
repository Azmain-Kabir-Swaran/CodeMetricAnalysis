{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AclCommands.java",
  "functionName": "printAclEntriesForSingleScope",
  "functionId": "printAclEntriesForSingleScope___aclStatus-AclStatus__fsPerm-FsPermission__entries-List__AclEntry__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
  "functionStartLine": 113,
  "functionEndLine": 127,
  "numCommitsSeen": 29,
  "timeTaken": 2082,
  "changeHistory": [
    "1d330fbaf6b50802750aa461640773fb788ef884",
    "ffe942b82c1208bc7b22899da3a233944cb5ab52",
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05"
  ],
  "changeHistoryShort": {
    "1d330fbaf6b50802750aa461640773fb788ef884": "Ybodychange",
    "ffe942b82c1208bc7b22899da3a233944cb5ab52": "Ymultichange(Yparameterchange,Ybodychange)",
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1d330fbaf6b50802750aa461640773fb788ef884": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13150. Avoid use of toString() in output of HDFS ACL shell commands. Contributed by Chris Nauroth.\n",
      "commitDate": "06/10/16 1:19 PM",
      "commitName": "1d330fbaf6b50802750aa461640773fb788ef884",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "21/07/16 2:12 PM",
      "commitNameOld": "43cf6b101dacd96bacfd199826b717f6946109af",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 76.96,
      "commitsBetweenForRepo": 494,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void printAclEntriesForSingleScope(AclStatus aclStatus,\n         FsPermission fsPerm, List\u003cAclEntry\u003e entries) {\n       if (entries.isEmpty()) {\n         return;\n       }\n       if (AclUtil.isMinimalAcl(entries)) {\n         for (AclEntry entry: entries) {\n-          out.println(entry);\n+          out.println(entry.toStringStable());\n         }\n       } else {\n         for (AclEntry entry: entries) {\n           printExtendedAclEntry(aclStatus, fsPerm, entry);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void printAclEntriesForSingleScope(AclStatus aclStatus,\n        FsPermission fsPerm, List\u003cAclEntry\u003e entries) {\n      if (entries.isEmpty()) {\n        return;\n      }\n      if (AclUtil.isMinimalAcl(entries)) {\n        for (AclEntry entry: entries) {\n          out.println(entry.toStringStable());\n        }\n      } else {\n        for (AclEntry entry: entries) {\n          printExtendedAclEntry(aclStatus, fsPerm, entry);\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
      "extendedDetails": {}
    },
    "ffe942b82c1208bc7b22899da3a233944cb5ab52": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
      "commitDate": "08/12/14 10:23 AM",
      "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
          "commitDate": "08/12/14 10:23 AM",
          "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
          "commitAuthor": "cnauroth",
          "commitDateOld": "12/06/14 11:39 PM",
          "commitNameOld": "be3fdd1c40140e24df1a5414cf91537862b66e82",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 178.49,
          "commitsBetweenForRepo": 1588,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-    private void printAclEntriesForSingleScope(List\u003cAclEntry\u003e entries) {\n+    private void printAclEntriesForSingleScope(AclStatus aclStatus,\n+        FsPermission fsPerm, List\u003cAclEntry\u003e entries) {\n       if (entries.isEmpty()) {\n         return;\n       }\n       if (AclUtil.isMinimalAcl(entries)) {\n         for (AclEntry entry: entries) {\n           out.println(entry);\n         }\n       } else {\n-        // ACL sort order guarantees mask is the second-to-last entry.\n-        FsAction maskPerm \u003d entries.get(entries.size() - 2).getPermission();\n         for (AclEntry entry: entries) {\n-          printExtendedAclEntry(entry, maskPerm);\n+          printExtendedAclEntry(aclStatus, fsPerm, entry);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void printAclEntriesForSingleScope(AclStatus aclStatus,\n        FsPermission fsPerm, List\u003cAclEntry\u003e entries) {\n      if (entries.isEmpty()) {\n        return;\n      }\n      if (AclUtil.isMinimalAcl(entries)) {\n        for (AclEntry entry: entries) {\n          out.println(entry);\n        }\n      } else {\n        for (AclEntry entry: entries) {\n          printExtendedAclEntry(aclStatus, fsPerm, entry);\n        }\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
          "extendedDetails": {
            "oldValue": "[entries-List\u003cAclEntry\u003e]",
            "newValue": "[aclStatus-AclStatus, fsPerm-FsPermission, entries-List\u003cAclEntry\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
          "commitDate": "08/12/14 10:23 AM",
          "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
          "commitAuthor": "cnauroth",
          "commitDateOld": "12/06/14 11:39 PM",
          "commitNameOld": "be3fdd1c40140e24df1a5414cf91537862b66e82",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 178.49,
          "commitsBetweenForRepo": 1588,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-    private void printAclEntriesForSingleScope(List\u003cAclEntry\u003e entries) {\n+    private void printAclEntriesForSingleScope(AclStatus aclStatus,\n+        FsPermission fsPerm, List\u003cAclEntry\u003e entries) {\n       if (entries.isEmpty()) {\n         return;\n       }\n       if (AclUtil.isMinimalAcl(entries)) {\n         for (AclEntry entry: entries) {\n           out.println(entry);\n         }\n       } else {\n-        // ACL sort order guarantees mask is the second-to-last entry.\n-        FsAction maskPerm \u003d entries.get(entries.size() - 2).getPermission();\n         for (AclEntry entry: entries) {\n-          printExtendedAclEntry(entry, maskPerm);\n+          printExtendedAclEntry(aclStatus, fsPerm, entry);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void printAclEntriesForSingleScope(AclStatus aclStatus,\n        FsPermission fsPerm, List\u003cAclEntry\u003e entries) {\n      if (entries.isEmpty()) {\n        return;\n      }\n      if (AclUtil.isMinimalAcl(entries)) {\n        for (AclEntry entry: entries) {\n          out.println(entry);\n        }\n      } else {\n        for (AclEntry entry: entries) {\n          printExtendedAclEntry(aclStatus, fsPerm, entry);\n        }\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
          "extendedDetails": {}
        }
      ]
    },
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/14 11:25 AM",
      "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,16 @@\n+    private void printAclEntriesForSingleScope(List\u003cAclEntry\u003e entries) {\n+      if (entries.isEmpty()) {\n+        return;\n+      }\n+      if (AclUtil.isMinimalAcl(entries)) {\n+        for (AclEntry entry: entries) {\n+          out.println(entry);\n+        }\n+      } else {\n+        // ACL sort order guarantees mask is the second-to-last entry.\n+        FsAction maskPerm \u003d entries.get(entries.size() - 2).getPermission();\n+        for (AclEntry entry: entries) {\n+          printExtendedAclEntry(entry, maskPerm);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void printAclEntriesForSingleScope(List\u003cAclEntry\u003e entries) {\n      if (entries.isEmpty()) {\n        return;\n      }\n      if (AclUtil.isMinimalAcl(entries)) {\n        for (AclEntry entry: entries) {\n          out.println(entry);\n        }\n      } else {\n        // ACL sort order guarantees mask is the second-to-last entry.\n        FsAction maskPerm \u003d entries.get(entries.size() - 2).getPermission();\n        for (AclEntry entry: entries) {\n          printExtendedAclEntry(entry, maskPerm);\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java"
    }
  }
}