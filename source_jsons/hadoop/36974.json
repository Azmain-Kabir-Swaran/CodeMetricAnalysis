{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptBlock.java",
  "functionName": "createResourceRequestsTable",
  "functionId": "createResourceRequestsTable___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
  "functionStartLine": 296,
  "functionEndLine": 368,
  "numCommitsSeen": 39,
  "timeTaken": 6941,
  "changeHistory": [
    "b9d825f178809148a157055509bdceffd46095ca",
    "54d0bf8935e35aad0f4d67df358ceb970cfcd713",
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c",
    "1e6f92977dc5431b117745feb5a3491e88a559c0",
    "0d3188fd25f31b83caf16b77773620f4ee237409",
    "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a",
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d"
  ],
  "changeHistoryShort": {
    "b9d825f178809148a157055509bdceffd46095ca": "Ybodychange",
    "54d0bf8935e35aad0f4d67df358ceb970cfcd713": "Ybodychange",
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c": "Ybodychange",
    "1e6f92977dc5431b117745feb5a3491e88a559c0": "Ybodychange",
    "0d3188fd25f31b83caf16b77773620f4ee237409": "Ybodychange",
    "4e886eb9cbd2dcb128bbfd17309c734083093a4c": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284": "Ybodychange",
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b9d825f178809148a157055509bdceffd46095ca": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9567. Add diagnostics for outstanding resource requests on app attempts page. Contributed by Tao Yang.\n",
      "commitDate": "13/03/20 2:39 PM",
      "commitName": "b9d825f178809148a157055509bdceffd46095ca",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "21/08/18 4:00 AM",
      "commitNameOld": "54d0bf8935e35aad0f4d67df358ceb970cfcd713",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 570.44,
      "commitsBetweenForRepo": 3812,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,69 +1,73 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n \n     List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n     if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     // Requests Table\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n         .h3(\"Total Outstanding Resource Requests: \"\n             + getTotalResource(resourceRequests))\n         .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n         .th(\".allocationRequestId\", \"AllocationRequestId\")\n         .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n         .th(\".containers\", \"NumContainers\")\n         .th(\".relaxlocality\", \"RelaxLocality\")\n         .th(\".labelexpression\", \"NodeLabelExpression\")\n         .th(\".executiontype\", \"ExecutionType\")\n         .th(\".allocationTags\", \"AllocationTags\")\n         .th(\".placementConstraint\", \"PlacementConstraint\").__().__().tbody();\n \n     StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n     for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n       if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n         continue;\n       }\n       resourceRequestTableData.append(\"[\\\"\")\n           .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getAllocationRequestId()))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getResourceName() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getResourceName())\n           .append(\"\\\",\\\"\")\n           .append(StringEscapeUtils.escapeEcmaScript(StringEscapeUtils\n               .escapeHtml4(String.valueOf(resourceRequest.getCapability()))))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getNumContainers()))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getRelaxLocality()))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getNodeLabelExpression())\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getExecutionTypeRequest() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getExecutionTypeRequest().getExecutionType())\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getAllocationTags() \u003d\u003d null ? \"N/A\" :\n               StringUtils.join(resourceRequest.getAllocationTags(), \",\"))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getPlacementConstraint() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getPlacementConstraint())\n           .append(\"\\\"],\\n\");\n     }\n     if (resourceRequestTableData\n         .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n           resourceRequestTableData.length() - 1);\n     }\n     resourceRequestTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n         .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n     tbody.__().__();\n+\n+    // create diagnostics table when CS is enabled\n+    createDiagnosticsTable(html, div);\n+\n     div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    // Requests Table\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n        .h3(\"Total Outstanding Resource Requests: \"\n            + getTotalResource(resourceRequests))\n        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n        .th(\".allocationRequestId\", \"AllocationRequestId\")\n        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n        .th(\".containers\", \"NumContainers\")\n        .th(\".relaxlocality\", \"RelaxLocality\")\n        .th(\".labelexpression\", \"NodeLabelExpression\")\n        .th(\".executiontype\", \"ExecutionType\")\n        .th(\".allocationTags\", \"AllocationTags\")\n        .th(\".placementConstraint\", \"PlacementConstraint\").__().__().tbody();\n\n    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n    for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      resourceRequestTableData.append(\"[\\\"\")\n          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getAllocationRequestId()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getResourceName() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getResourceName())\n          .append(\"\\\",\\\"\")\n          .append(StringEscapeUtils.escapeEcmaScript(StringEscapeUtils\n              .escapeHtml4(String.valueOf(resourceRequest.getCapability()))))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getNumContainers()))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getNodeLabelExpression())\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getExecutionTypeRequest() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getExecutionTypeRequest().getExecutionType())\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getAllocationTags() \u003d\u003d null ? \"N/A\" :\n              StringUtils.join(resourceRequest.getAllocationTags(), \",\"))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getPlacementConstraint() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getPlacementConstraint())\n          .append(\"\\\"],\\n\");\n    }\n    if (resourceRequestTableData\n        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n          resourceRequestTableData.length() - 1);\n    }\n    resourceRequestTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n        .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n    tbody.__().__();\n\n    // create diagnostics table when CS is enabled\n    createDiagnosticsTable(html, div);\n\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "54d0bf8935e35aad0f4d67df358ceb970cfcd713": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8683. Support to display pending scheduling requests in RM app attempt page. Contributed by Tao Yang.\n",
      "commitDate": "21/08/18 4:00 AM",
      "commitName": "54d0bf8935e35aad0f4d67df358ceb970cfcd713",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "13/07/18 8:42 AM",
      "commitNameOld": "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 38.8,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,69 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n \n     List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n     if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     // Requests Table\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n         .h3(\"Total Outstanding Resource Requests: \"\n             + getTotalResource(resourceRequests))\n         .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n+        .th(\".allocationRequestId\", \"AllocationRequestId\")\n         .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n         .th(\".containers\", \"NumContainers\")\n         .th(\".relaxlocality\", \"RelaxLocality\")\n-        .th(\".labelexpression\", \"NodeLabelExpression\").__().__().tbody();\n+        .th(\".labelexpression\", \"NodeLabelExpression\")\n+        .th(\".executiontype\", \"ExecutionType\")\n+        .th(\".allocationTags\", \"AllocationTags\")\n+        .th(\".placementConstraint\", \"PlacementConstraint\").__().__().tbody();\n \n     StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n     for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n       if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n         continue;\n       }\n       resourceRequestTableData.append(\"[\\\"\")\n           .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n-          .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n+          .append(String.valueOf(resourceRequest.getAllocationRequestId()))\n+          .append(\"\\\",\\\"\")\n+          .append(resourceRequest.getResourceName() \u003d\u003d null ? \"N/A\"\n+              : resourceRequest.getResourceName())\n+          .append(\"\\\",\\\"\")\n           .append(StringEscapeUtils.escapeEcmaScript(StringEscapeUtils\n               .escapeHtml4(String.valueOf(resourceRequest.getCapability()))))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getNumContainers()))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getRelaxLocality()))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getNodeLabelExpression())\n+          .append(\"\\\",\\\"\")\n+          .append(resourceRequest.getExecutionTypeRequest() \u003d\u003d null ? \"N/A\"\n+              : resourceRequest.getExecutionTypeRequest().getExecutionType())\n+          .append(\"\\\",\\\"\")\n+          .append(resourceRequest.getAllocationTags() \u003d\u003d null ? \"N/A\" :\n+              StringUtils.join(resourceRequest.getAllocationTags(), \",\"))\n+          .append(\"\\\",\\\"\")\n+          .append(resourceRequest.getPlacementConstraint() \u003d\u003d null ? \"N/A\"\n+              : resourceRequest.getPlacementConstraint())\n           .append(\"\\\"],\\n\");\n     }\n     if (resourceRequestTableData\n         .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n           resourceRequestTableData.length() - 1);\n     }\n     resourceRequestTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n         .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n     tbody.__().__();\n     div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    // Requests Table\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n        .h3(\"Total Outstanding Resource Requests: \"\n            + getTotalResource(resourceRequests))\n        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n        .th(\".allocationRequestId\", \"AllocationRequestId\")\n        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n        .th(\".containers\", \"NumContainers\")\n        .th(\".relaxlocality\", \"RelaxLocality\")\n        .th(\".labelexpression\", \"NodeLabelExpression\")\n        .th(\".executiontype\", \"ExecutionType\")\n        .th(\".allocationTags\", \"AllocationTags\")\n        .th(\".placementConstraint\", \"PlacementConstraint\").__().__().tbody();\n\n    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n    for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      resourceRequestTableData.append(\"[\\\"\")\n          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getAllocationRequestId()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getResourceName() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getResourceName())\n          .append(\"\\\",\\\"\")\n          .append(StringEscapeUtils.escapeEcmaScript(StringEscapeUtils\n              .escapeHtml4(String.valueOf(resourceRequest.getCapability()))))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getNumContainers()))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getNodeLabelExpression())\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getExecutionTypeRequest() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getExecutionTypeRequest().getExecutionType())\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getAllocationTags() \u003d\u003d null ? \"N/A\" :\n              StringUtils.join(resourceRequest.getAllocationTags(), \",\"))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getPlacementConstraint() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getPlacementConstraint())\n          .append(\"\\\"],\\n\");\n    }\n    if (resourceRequestTableData\n        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n          resourceRequestTableData.length() - 1);\n    }\n    resourceRequestTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n        .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n    tbody.__().__();\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
      "commitDate": "12/06/18 8:35 AM",
      "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/09/17 9:58 PM",
      "commitNameOld": "722ee841948db1f246f0056acec9a1ac464fe1f9",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 274.44,
      "commitsBetweenForRepo": 2609,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n \n     List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n     if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     // Requests Table\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n         .h3(\"Total Outstanding Resource Requests: \"\n             + getTotalResource(resourceRequests))\n         .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n         .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n         .th(\".containers\", \"NumContainers\")\n         .th(\".relaxlocality\", \"RelaxLocality\")\n         .th(\".labelexpression\", \"NodeLabelExpression\").__().__().tbody();\n \n     StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n     for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n       if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n         continue;\n       }\n       resourceRequestTableData.append(\"[\\\"\")\n           .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n           .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n-          .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n-              .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n+          .append(StringEscapeUtils.escapeEcmaScript(StringEscapeUtils\n+              .escapeHtml4(String.valueOf(resourceRequest.getCapability()))))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getNumContainers()))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getRelaxLocality()))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getNodeLabelExpression())\n           .append(\"\\\"],\\n\");\n     }\n     if (resourceRequestTableData\n         .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n           resourceRequestTableData.length() - 1);\n     }\n     resourceRequestTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n         .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n     tbody.__().__();\n     div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    // Requests Table\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n        .h3(\"Total Outstanding Resource Requests: \"\n            + getTotalResource(resourceRequests))\n        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n        .th(\".containers\", \"NumContainers\")\n        .th(\".relaxlocality\", \"RelaxLocality\")\n        .th(\".labelexpression\", \"NodeLabelExpression\").__().__().tbody();\n\n    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n    for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      resourceRequestTableData.append(\"[\\\"\")\n          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n          .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n          .append(StringEscapeUtils.escapeEcmaScript(StringEscapeUtils\n              .escapeHtml4(String.valueOf(resourceRequest.getCapability()))))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getNumContainers()))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getNodeLabelExpression())\n          .append(\"\\\"],\\n\");\n    }\n    if (resourceRequestTableData\n        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n          resourceRequestTableData.length() - 1);\n    }\n    resourceRequestTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n        .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n    tbody.__().__();\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "28/07/16 4:03 PM",
      "commitNameOld": "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 364.05,
      "commitsBetweenForRepo": 2150,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n \n     List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n     if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     // Requests Table\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n         .h3(\"Total Outstanding Resource Requests: \"\n             + getTotalResource(resourceRequests))\n         .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n         .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n         .th(\".containers\", \"NumContainers\")\n         .th(\".relaxlocality\", \"RelaxLocality\")\n-        .th(\".labelexpression\", \"NodeLabelExpression\")._()._().tbody();\n+        .th(\".labelexpression\", \"NodeLabelExpression\").__().__().tbody();\n \n     StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n     for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n       if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n         continue;\n       }\n       resourceRequestTableData.append(\"[\\\"\")\n           .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n           .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n           .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n               .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getNumContainers()))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getRelaxLocality()))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getNodeLabelExpression())\n           .append(\"\\\"],\\n\");\n     }\n     if (resourceRequestTableData\n         .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n           resourceRequestTableData.length() - 1);\n     }\n     resourceRequestTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n-        ._(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData)._();\n-    tbody._()._();\n-    div._();\n+        .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n+    tbody.__().__();\n+    div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    // Requests Table\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n        .h3(\"Total Outstanding Resource Requests: \"\n            + getTotalResource(resourceRequests))\n        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n        .th(\".containers\", \"NumContainers\")\n        .th(\".relaxlocality\", \"RelaxLocality\")\n        .th(\".labelexpression\", \"NodeLabelExpression\").__().__().tbody();\n\n    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n    for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      resourceRequestTableData.append(\"[\\\"\")\n          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n          .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n          .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n              .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getNumContainers()))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getNodeLabelExpression())\n          .append(\"\\\"],\\n\");\n    }\n    if (resourceRequestTableData\n        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n          resourceRequestTableData.length() - 1);\n    }\n    resourceRequestTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n        .__(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData).__();\n    tbody.__().__();\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5203.Return ResourceRequest JAXB object in ResourceManager Cluster Applications REST API. Contributed by Ellen Hui.\n",
      "commitDate": "28/07/16 4:03 PM",
      "commitName": "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "07/06/16 3:06 PM",
      "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 51.04,
      "commitsBetweenForRepo": 461,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n \n-    List\u003cResourceRequest\u003e resourceRequests \u003d app.getResourceRequests();\n+    List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n     if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     // Requests Table\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n         .h3(\"Total Outstanding Resource Requests: \"\n             + getTotalResource(resourceRequests))\n         .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n         .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n         .th(\".containers\", \"NumContainers\")\n         .th(\".relaxlocality\", \"RelaxLocality\")\n         .th(\".labelexpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n-    for (ResourceRequest resourceRequest : resourceRequests) {\n+    for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n       if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n         continue;\n       }\n       resourceRequestTableData.append(\"[\\\"\")\n           .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n           .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n           .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n               .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getNumContainers()))\n           .append(\"\\\",\\\"\")\n           .append(String.valueOf(resourceRequest.getRelaxLocality()))\n           .append(\"\\\",\\\"\")\n           .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n               : resourceRequest.getNodeLabelExpression())\n           .append(\"\\\"],\\n\");\n     }\n     if (resourceRequestTableData\n         .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n           resourceRequestTableData.length() - 1);\n     }\n     resourceRequestTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n         ._(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData)._();\n     tbody._()._();\n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequestInfo\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    // Requests Table\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n        .h3(\"Total Outstanding Resource Requests: \"\n            + getTotalResource(resourceRequests))\n        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n        .th(\".containers\", \"NumContainers\")\n        .th(\".relaxlocality\", \"RelaxLocality\")\n        .th(\".labelexpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n    for (ResourceRequestInfo resourceRequest  : resourceRequests) {\n      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      resourceRequestTableData.append(\"[\\\"\")\n          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n          .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n          .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n              .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getNumContainers()))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getNodeLabelExpression())\n          .append(\"\\\"],\\n\");\n    }\n    if (resourceRequestTableData\n        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n          resourceRequestTableData.length() - 1);\n    }\n    resourceRequestTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n        ._(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData)._();\n    tbody._()._();\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "1e6f92977dc5431b117745feb5a3491e88a559c0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4607. Pagination support for AppAttempt page TotalOutstandingResource Requests table. Contributed by Bibin A Chundatt\n",
      "commitDate": "03/04/16 7:39 PM",
      "commitName": "1e6f92977dc5431b117745feb5a3491e88a559c0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "04/02/16 12:02 AM",
      "commitNameOld": "308d63f382e1992ea2b8ccf3130edaaa751c644d",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 59.78,
      "commitsBetweenForRepo": 362,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,52 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n \n     List\u003cResourceRequest\u003e resourceRequests \u003d app.getResourceRequests();\n     if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n-    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n-        div.h3(\"Total Outstanding Resource Requests: \"\n-          + getTotalResource(resourceRequests)).table(\n-              \"#ResourceRequests\");\n+    // Requests Table\n+    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n+        .h3(\"Total Outstanding Resource Requests: \"\n+            + getTotalResource(resourceRequests))\n+        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n+        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n+        .th(\".containers\", \"NumContainers\")\n+        .th(\".relaxlocality\", \"RelaxLocality\")\n+        .th(\".labelexpression\", \"NodeLabelExpression\")._()._().tbody();\n \n-    table.tr().\n-      th(_TH, \"Priority\").\n-      th(_TH, \"ResourceName\").\n-      th(_TH, \"Capability\").\n-      th(_TH, \"NumContainers\").\n-      th(_TH, \"RelaxLocality\").\n-      th(_TH, \"NodeLabelExpression\").\n-    _();\n-\n-    boolean odd \u003d false;\n-    for (ResourceRequest request : resourceRequests) {\n-      if (request.getNumContainers() \u003d\u003d 0) {\n+    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n+    for (ResourceRequest resourceRequest : resourceRequests) {\n+      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n         continue;\n       }\n-      table.tr((odd \u003d !odd) ? _ODD : _EVEN)\n-        .td(String.valueOf(request.getPriority()))\n-        .td(request.getResourceName())\n-        .td(String.valueOf(request.getCapability()))\n-        .td(String.valueOf(request.getNumContainers()))\n-        .td(String.valueOf(request.getRelaxLocality()))\n-        .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n-            .getNodeLabelExpression())._();\n+      resourceRequestTableData.append(\"[\\\"\")\n+          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n+          .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n+          .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n+              .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n+          .append(\"\\\",\\\"\")\n+          .append(String.valueOf(resourceRequest.getNumContainers()))\n+          .append(\"\\\",\\\"\")\n+          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n+          .append(\"\\\",\\\"\")\n+          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n+              : resourceRequest.getNodeLabelExpression())\n+          .append(\"\\\"],\\n\");\n     }\n-    table._();\n+    if (resourceRequestTableData\n+        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n+      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n+          resourceRequestTableData.length() - 1);\n+    }\n+    resourceRequestTableData.append(\"]\");\n+    html.script().$type(\"text/javascript\")\n+        ._(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData)._();\n+    tbody._()._();\n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequest\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    // Requests Table\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d div\n        .h3(\"Total Outstanding Resource Requests: \"\n            + getTotalResource(resourceRequests))\n        .table(\"#resourceRequests\").thead().tr().th(\".priority\", \"Priority\")\n        .th(\".resource\", \"ResourceName\").th(\".capacity\", \"Capability\")\n        .th(\".containers\", \"NumContainers\")\n        .th(\".relaxlocality\", \"RelaxLocality\")\n        .th(\".labelexpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    StringBuilder resourceRequestTableData \u003d new StringBuilder(\"[\\n\");\n    for (ResourceRequest resourceRequest : resourceRequests) {\n      if (resourceRequest.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      resourceRequestTableData.append(\"[\\\"\")\n          .append(String.valueOf(resourceRequest.getPriority())).append(\"\\\",\\\"\")\n          .append(resourceRequest.getResourceName()).append(\"\\\",\\\"\")\n          .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils\n              .escapeHtml(String.valueOf(resourceRequest.getCapability()))))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getNumContainers()))\n          .append(\"\\\",\\\"\")\n          .append(String.valueOf(resourceRequest.getRelaxLocality()))\n          .append(\"\\\",\\\"\")\n          .append(resourceRequest.getNodeLabelExpression() \u003d\u003d null ? \"N/A\"\n              : resourceRequest.getNodeLabelExpression())\n          .append(\"\\\"],\\n\");\n    }\n    if (resourceRequestTableData\n        .charAt(resourceRequestTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      resourceRequestTableData.delete(resourceRequestTableData.length() - 2,\n          resourceRequestTableData.length() - 1);\n    }\n    resourceRequestTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n        ._(\"var resourceRequestsTableData\u003d\" + resourceRequestTableData)._();\n    tbody._()._();\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "0d3188fd25f31b83caf16b77773620f4ee237409": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3301. Fixed the format issue of the new RM attempt web page. Contributed by Xuan Gong\n",
      "commitDate": "06/05/15 1:45 PM",
      "commitName": "0d3188fd25f31b83caf16b77773620f4ee237409",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/04/15 3:55 PM",
      "commitNameOld": "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 18.91,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,43 @@\n   private void createResourceRequestsTable(Block html) {\n     AppInfo app \u003d\n         new AppInfo(rm, rm.getRMContext().getRMApps()\n           .get(this.appAttemptId.getApplicationId()), true,\n           WebAppUtils.getHttpSchemePrefix(conf));\n-    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n-        html.table(\"#ResourceRequests\").thead().tr()\n-          .th(\".priority\", \"Priority\")\n-          .th(\".resourceName\", \"ResourceName\")\n-          .th(\".totalResource\", \"Capability\")\n-          .th(\".numContainers\", \"NumContainers\")\n-          .th(\".relaxLocality\", \"RelaxLocality\")\n-          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n-    Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (app.getResourceRequests() !\u003d null) {\n-      for (ResourceRequest request : app.getResourceRequests()) {\n-        if (request.getNumContainers() \u003d\u003d 0) {\n-          continue;\n-        }\n-\n-        tbody.tr()\n-          .td(String.valueOf(request.getPriority()))\n-          .td(request.getResourceName())\n-          .td(String.valueOf(request.getCapability()))\n-          .td(String.valueOf(request.getNumContainers()))\n-          .td(String.valueOf(request.getRelaxLocality()))\n-          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n-              .getNodeLabelExpression())._();\n-        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n-          Resources.addTo(totalResource,\n-            Resources.multiply(request.getCapability(),\n-              request.getNumContainers()));\n-        }\n-      }\n+    List\u003cResourceRequest\u003e resourceRequests \u003d app.getResourceRequests();\n+    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n+      return;\n     }\n-    html.div().$class(\"totalResourceRequests\")\n-      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n-    tbody._()._();\n+\n+    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n+    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n+        div.h3(\"Total Outstanding Resource Requests: \"\n+          + getTotalResource(resourceRequests)).table(\n+              \"#ResourceRequests\");\n+\n+    table.tr().\n+      th(_TH, \"Priority\").\n+      th(_TH, \"ResourceName\").\n+      th(_TH, \"Capability\").\n+      th(_TH, \"NumContainers\").\n+      th(_TH, \"RelaxLocality\").\n+      th(_TH, \"NodeLabelExpression\").\n+    _();\n+\n+    boolean odd \u003d false;\n+    for (ResourceRequest request : resourceRequests) {\n+      if (request.getNumContainers() \u003d\u003d 0) {\n+        continue;\n+      }\n+      table.tr((odd \u003d !odd) ? _ODD : _EVEN)\n+        .td(String.valueOf(request.getPriority()))\n+        .td(request.getResourceName())\n+        .td(String.valueOf(request.getCapability()))\n+        .td(String.valueOf(request.getNumContainers()))\n+        .td(String.valueOf(request.getRelaxLocality()))\n+        .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n+            .getNodeLabelExpression())._();\n+    }\n+    table._();\n+    div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n\n    List\u003cResourceRequest\u003e resourceRequests \u003d app.getResourceRequests();\n    if (resourceRequests \u003d\u003d null || resourceRequests.isEmpty()) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\"Total Outstanding Resource Requests: \"\n          + getTotalResource(resourceRequests)).table(\n              \"#ResourceRequests\");\n\n    table.tr().\n      th(_TH, \"Priority\").\n      th(_TH, \"ResourceName\").\n      th(_TH, \"Capability\").\n      th(_TH, \"NumContainers\").\n      th(_TH, \"RelaxLocality\").\n      th(_TH, \"NodeLabelExpression\").\n    _();\n\n    boolean odd \u003d false;\n    for (ResourceRequest request : resourceRequests) {\n      if (request.getNumContainers() \u003d\u003d 0) {\n        continue;\n      }\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN)\n        .td(String.valueOf(request.getPriority()))\n        .td(request.getResourceName())\n        .td(String.valueOf(request.getCapability()))\n        .td(String.valueOf(request.getNumContainers()))\n        .td(String.valueOf(request.getRelaxLocality()))\n        .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n            .getNodeLabelExpression())._();\n    }\n    table._();\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "4e886eb9cbd2dcb128bbfd17309c734083093a4c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
      "commitDate": "19/03/15 10:27 PM",
      "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
          "commitDate": "19/03/15 10:27 PM",
          "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "19/03/15 8:23 AM",
          "commitNameOld": "e37ca221bf4e9ae5d5e667d8ca284df9fdb33199",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 0.59,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,40 @@\n-  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n+  private void createResourceRequestsTable(Block html) {\n+    AppInfo app \u003d\n+        new AppInfo(rm, rm.getRMContext().getRMApps()\n+          .get(this.appAttemptId.getApplicationId()), true,\n+          WebAppUtils.getHttpSchemePrefix(conf));\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n           .th(\".resourceName\", \"ResourceName\")\n           .th(\".totalResource\", \"Capability\")\n           .th(\".numContainers\", \"NumContainers\")\n           .th(\".relaxLocality\", \"RelaxLocality\")\n           .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (resouceRequests !\u003d null) {\n-      for (ResourceRequest request : resouceRequests) {\n+    if (app.getResourceRequests() !\u003d null) {\n+      for (ResourceRequest request : app.getResourceRequests()) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (app.getResourceRequests() !\u003d null) {\n      for (ResourceRequest request : app.getResourceRequests()) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
            "oldMethodName": "createResourceRequestsTable",
            "newMethodName": "createResourceRequestsTable"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
          "commitDate": "19/03/15 10:27 PM",
          "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "19/03/15 8:23 AM",
          "commitNameOld": "e37ca221bf4e9ae5d5e667d8ca284df9fdb33199",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 0.59,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,40 @@\n-  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n+  private void createResourceRequestsTable(Block html) {\n+    AppInfo app \u003d\n+        new AppInfo(rm, rm.getRMContext().getRMApps()\n+          .get(this.appAttemptId.getApplicationId()), true,\n+          WebAppUtils.getHttpSchemePrefix(conf));\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n           .th(\".resourceName\", \"ResourceName\")\n           .th(\".totalResource\", \"Capability\")\n           .th(\".numContainers\", \"NumContainers\")\n           .th(\".relaxLocality\", \"RelaxLocality\")\n           .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (resouceRequests !\u003d null) {\n-      for (ResourceRequest request : resouceRequests) {\n+    if (app.getResourceRequests() !\u003d null) {\n+      for (ResourceRequest request : app.getResourceRequests()) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (app.getResourceRequests() !\u003d null) {\n      for (ResourceRequest request : app.getResourceRequests()) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
          "commitDate": "19/03/15 10:27 PM",
          "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "19/03/15 8:23 AM",
          "commitNameOld": "e37ca221bf4e9ae5d5e667d8ca284df9fdb33199",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 0.59,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,40 @@\n-  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n+  private void createResourceRequestsTable(Block html) {\n+    AppInfo app \u003d\n+        new AppInfo(rm, rm.getRMContext().getRMApps()\n+          .get(this.appAttemptId.getApplicationId()), true,\n+          WebAppUtils.getHttpSchemePrefix(conf));\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n           .th(\".resourceName\", \"ResourceName\")\n           .th(\".totalResource\", \"Capability\")\n           .th(\".numContainers\", \"NumContainers\")\n           .th(\".relaxLocality\", \"RelaxLocality\")\n           .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (resouceRequests !\u003d null) {\n-      for (ResourceRequest request : resouceRequests) {\n+    if (app.getResourceRequests() !\u003d null) {\n+      for (ResourceRequest request : app.getResourceRequests()) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createResourceRequestsTable(Block html) {\n    AppInfo app \u003d\n        new AppInfo(rm, rm.getRMContext().getRMApps()\n          .get(this.appAttemptId.getApplicationId()), true,\n          WebAppUtils.getHttpSchemePrefix(conf));\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (app.getResourceRequests() !\u003d null) {\n      for (ResourceRequest request : app.getResourceRequests()) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
          "extendedDetails": {
            "oldValue": "[html-Block, resouceRequests-List\u003cResourceRequest\u003e]",
            "newValue": "[html-Block]"
          }
        }
      ]
    },
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
      "commitDate": "05/03/15 9:20 PM",
      "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-  private void createResourceRequestsTable(Block html, AppInfo app) {\n+  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n-          .th(\".resourceName\", \"Resource Name\")\n+          .th(\".resourceName\", \"ResourceName\")\n           .th(\".totalResource\", \"Capability\")\n-          .th(\".numContainers\", \"Num Containers\")\n-          .th(\".relaxLocality\", \"Relax Locality\")\n-          .th(\".nodeLabelExpression\", \"Node Label Expression\")._()._().tbody();\n+          .th(\".numContainers\", \"NumContainers\")\n+          .th(\".relaxLocality\", \"RelaxLocality\")\n+          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (app.getResourceRequests() !\u003d null) {\n-      for (ResourceRequest request : app.getResourceRequests()) {\n+    if (resouceRequests !\u003d null) {\n+      for (ResourceRequest request : resouceRequests) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (resouceRequests !\u003d null) {\n      for (ResourceRequest request : resouceRequests) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/AppBlock.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
            "oldMethodName": "createResourceRequestsTable",
            "newMethodName": "createResourceRequestsTable"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-  private void createResourceRequestsTable(Block html, AppInfo app) {\n+  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n-          .th(\".resourceName\", \"Resource Name\")\n+          .th(\".resourceName\", \"ResourceName\")\n           .th(\".totalResource\", \"Capability\")\n-          .th(\".numContainers\", \"Num Containers\")\n-          .th(\".relaxLocality\", \"Relax Locality\")\n-          .th(\".nodeLabelExpression\", \"Node Label Expression\")._()._().tbody();\n+          .th(\".numContainers\", \"NumContainers\")\n+          .th(\".relaxLocality\", \"RelaxLocality\")\n+          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (app.getResourceRequests() !\u003d null) {\n-      for (ResourceRequest request : app.getResourceRequests()) {\n+    if (resouceRequests !\u003d null) {\n+      for (ResourceRequest request : resouceRequests) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (resouceRequests !\u003d null) {\n      for (ResourceRequest request : resouceRequests) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-  private void createResourceRequestsTable(Block html, AppInfo app) {\n+  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n-          .th(\".resourceName\", \"Resource Name\")\n+          .th(\".resourceName\", \"ResourceName\")\n           .th(\".totalResource\", \"Capability\")\n-          .th(\".numContainers\", \"Num Containers\")\n-          .th(\".relaxLocality\", \"Relax Locality\")\n-          .th(\".nodeLabelExpression\", \"Node Label Expression\")._()._().tbody();\n+          .th(\".numContainers\", \"NumContainers\")\n+          .th(\".relaxLocality\", \"RelaxLocality\")\n+          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n-    if (app.getResourceRequests() !\u003d null) {\n-      for (ResourceRequest request : app.getResourceRequests()) {\n+    if (resouceRequests !\u003d null) {\n+      for (ResourceRequest request : resouceRequests) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createResourceRequestsTable(Block html, List\u003cResourceRequest\u003e resouceRequests) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (resouceRequests !\u003d null) {\n      for (ResourceRequest request : resouceRequests) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
          "extendedDetails": {
            "oldValue": "[html-Block, app-AppInfo]",
            "newValue": "[html-Block, resouceRequests-List\u003cResourceRequest\u003e]"
          }
        }
      ]
    },
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3272. Surface container locality info in RM web UI (Jian He via wangda)\n",
      "commitDate": "03/03/15 11:49 AM",
      "commitName": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/02/15 4:13 PM",
      "commitNameOld": "edcecedc1c39d54db0f86a1325b4db26c38d2d4d",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 3.82,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private void createResourceRequestsTable(Block html, AppInfo app) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#ResourceRequests\").thead().tr()\n           .th(\".priority\", \"Priority\")\n-          .th(\".resourceName\", \"ResourceName\")\n+          .th(\".resourceName\", \"Resource Name\")\n           .th(\".totalResource\", \"Capability\")\n-          .th(\".numContainers\", \"NumContainers\")\n-          .th(\".relaxLocality\", \"RelaxLocality\")\n-          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n+          .th(\".numContainers\", \"Num Containers\")\n+          .th(\".relaxLocality\", \"Relax Locality\")\n+          .th(\".nodeLabelExpression\", \"Node Label Expression\")._()._().tbody();\n \n     Resource totalResource \u003d Resource.newInstance(0, 0);\n     if (app.getResourceRequests() !\u003d null) {\n       for (ResourceRequest request : app.getResourceRequests()) {\n         if (request.getNumContainers() \u003d\u003d 0) {\n           continue;\n         }\n \n         tbody.tr()\n           .td(String.valueOf(request.getPriority()))\n           .td(request.getResourceName())\n           .td(String.valueOf(request.getCapability()))\n           .td(String.valueOf(request.getNumContainers()))\n           .td(String.valueOf(request.getRelaxLocality()))\n           .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n               .getNodeLabelExpression())._();\n         if (request.getResourceName().equals(ResourceRequest.ANY)) {\n           Resources.addTo(totalResource,\n             Resources.multiply(request.getCapability(),\n               request.getNumContainers()));\n         }\n       }\n     }\n     html.div().$class(\"totalResourceRequests\")\n       .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html, AppInfo app) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"Resource Name\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"Num Containers\")\n          .th(\".relaxLocality\", \"Relax Locality\")\n          .th(\".nodeLabelExpression\", \"Node Label Expression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (app.getResourceRequests() !\u003d null) {\n      for (ResourceRequest request : app.getResourceRequests()) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/AppBlock.java",
      "extendedDetails": {}
    },
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3262. Surface application outstanding resource requests table in RM web UI. (Jian He via wangda)\n",
      "commitDate": "27/02/15 4:13 PM",
      "commitName": "edcecedc1c39d54db0f86a1325b4db26c38d2d4d",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,36 @@\n+  private void createResourceRequestsTable(Block html, AppInfo app) {\n+    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n+        html.table(\"#ResourceRequests\").thead().tr()\n+          .th(\".priority\", \"Priority\")\n+          .th(\".resourceName\", \"ResourceName\")\n+          .th(\".totalResource\", \"Capability\")\n+          .th(\".numContainers\", \"NumContainers\")\n+          .th(\".relaxLocality\", \"RelaxLocality\")\n+          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n+\n+    Resource totalResource \u003d Resource.newInstance(0, 0);\n+    if (app.getResourceRequests() !\u003d null) {\n+      for (ResourceRequest request : app.getResourceRequests()) {\n+        if (request.getNumContainers() \u003d\u003d 0) {\n+          continue;\n+        }\n+\n+        tbody.tr()\n+          .td(String.valueOf(request.getPriority()))\n+          .td(request.getResourceName())\n+          .td(String.valueOf(request.getCapability()))\n+          .td(String.valueOf(request.getNumContainers()))\n+          .td(String.valueOf(request.getRelaxLocality()))\n+          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n+              .getNodeLabelExpression())._();\n+        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n+          Resources.addTo(totalResource,\n+            Resources.multiply(request.getCapability(),\n+              request.getNumContainers()));\n+        }\n+      }\n+    }\n+    html.div().$class(\"totalResourceRequests\")\n+      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n+    tbody._()._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void createResourceRequestsTable(Block html, AppInfo app) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#ResourceRequests\").thead().tr()\n          .th(\".priority\", \"Priority\")\n          .th(\".resourceName\", \"ResourceName\")\n          .th(\".totalResource\", \"Capability\")\n          .th(\".numContainers\", \"NumContainers\")\n          .th(\".relaxLocality\", \"RelaxLocality\")\n          .th(\".nodeLabelExpression\", \"NodeLabelExpression\")._()._().tbody();\n\n    Resource totalResource \u003d Resource.newInstance(0, 0);\n    if (app.getResourceRequests() !\u003d null) {\n      for (ResourceRequest request : app.getResourceRequests()) {\n        if (request.getNumContainers() \u003d\u003d 0) {\n          continue;\n        }\n\n        tbody.tr()\n          .td(String.valueOf(request.getPriority()))\n          .td(request.getResourceName())\n          .td(String.valueOf(request.getCapability()))\n          .td(String.valueOf(request.getNumContainers()))\n          .td(String.valueOf(request.getRelaxLocality()))\n          .td(request.getNodeLabelExpression() \u003d\u003d null ? \"N/A\" : request\n              .getNodeLabelExpression())._();\n        if (request.getResourceName().equals(ResourceRequest.ANY)) {\n          Resources.addTo(totalResource,\n            Resources.multiply(request.getCapability(),\n              request.getNumContainers()));\n        }\n      }\n    }\n    html.div().$class(\"totalResourceRequests\")\n      .h3(\"Total Outstanding Resource Requests: \" + totalResource)._();\n    tbody._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/AppBlock.java"
    }
  }
}