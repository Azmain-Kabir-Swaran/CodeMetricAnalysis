{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "checkResponse",
  "functionId": "checkResponse___header-RpcResponseHeaderProto",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
  "functionStartLine": 301,
  "functionEndLine": 316,
  "numCommitsSeen": 125,
  "timeTaken": 2771,
  "changeHistory": [
    "769507bd7a501929d9a2fd56c72c3f50673488a4",
    "349f25a13225d6a240b577d988a8b1ac6a722578",
    "9ff01d626118a97ea4bf2fd72f022e11e69ee17d"
  ],
  "changeHistoryShort": {
    "769507bd7a501929d9a2fd56c72c3f50673488a4": "Ybodychange",
    "349f25a13225d6a240b577d988a8b1ac6a722578": "Ybodychange",
    "9ff01d626118a97ea4bf2fd72f022e11e69ee17d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "769507bd7a501929d9a2fd56c72c3f50673488a4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7009. Active NN and standby NN have different live nodes. Contributed by Ming Ma.\n",
      "commitDate": "23/02/15 3:12 PM",
      "commitName": "769507bd7a501929d9a2fd56c72c3f50673488a4",
      "commitAuthor": "cnauroth",
      "commitDateOld": "18/02/15 12:35 AM",
      "commitNameOld": "3f56a4cb0c57583e285e85a4d0c1584c4de9f1f1",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.61,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   void checkResponse(RpcResponseHeaderProto header) throws IOException {\n     if (header \u003d\u003d null) {\n-      throw new IOException(\"Response is null.\");\n+      throw new EOFException(\"Response is null.\");\n     }\n     if (header.hasClientId()) {\n       // check client IDs\n       final byte[] id \u003d header.getClientId().toByteArray();\n       if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) {\n         if (!Arrays.equals(id, clientId)) {\n           throw new IOException(\"Client IDs not matched: local ID\u003d\"\n               + StringUtils.byteToHexString(clientId) + \", ID in response\u003d\"\n               + StringUtils.byteToHexString(header.getClientId().toByteArray()));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkResponse(RpcResponseHeaderProto header) throws IOException {\n    if (header \u003d\u003d null) {\n      throw new EOFException(\"Response is null.\");\n    }\n    if (header.hasClientId()) {\n      // check client IDs\n      final byte[] id \u003d header.getClientId().toByteArray();\n      if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) {\n        if (!Arrays.equals(id, clientId)) {\n          throw new IOException(\"Client IDs not matched: local ID\u003d\"\n              + StringUtils.byteToHexString(clientId) + \", ID in response\u003d\"\n              + StringUtils.byteToHexString(header.getClientId().toByteArray()));\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "349f25a13225d6a240b577d988a8b1ac6a722578": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10236. Fix typo in o.a.h.ipc.Client#checkResponse. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1558498 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/01/14 10:27 AM",
      "commitName": "349f25a13225d6a240b577d988a8b1ac6a722578",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "05/12/13 8:00 AM",
      "commitNameOld": "419783d99294cc153fe819d69fa28f6b6e556ba9",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 41.1,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   void checkResponse(RpcResponseHeaderProto header) throws IOException {\n     if (header \u003d\u003d null) {\n       throw new IOException(\"Response is null.\");\n     }\n     if (header.hasClientId()) {\n       // check client IDs\n       final byte[] id \u003d header.getClientId().toByteArray();\n       if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) {\n         if (!Arrays.equals(id, clientId)) {\n           throw new IOException(\"Client IDs not matched: local ID\u003d\"\n-              + StringUtils.byteToHexString(clientId) + \", ID in reponse\u003d\"\n+              + StringUtils.byteToHexString(clientId) + \", ID in response\u003d\"\n               + StringUtils.byteToHexString(header.getClientId().toByteArray()));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkResponse(RpcResponseHeaderProto header) throws IOException {\n    if (header \u003d\u003d null) {\n      throw new IOException(\"Response is null.\");\n    }\n    if (header.hasClientId()) {\n      // check client IDs\n      final byte[] id \u003d header.getClientId().toByteArray();\n      if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) {\n        if (!Arrays.equals(id, clientId)) {\n          throw new IOException(\"Client IDs not matched: local ID\u003d\"\n              + StringUtils.byteToHexString(clientId) + \", ID in response\u003d\"\n              + StringUtils.byteToHexString(header.getClientId().toByteArray()));\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "9ff01d626118a97ea4bf2fd72f022e11e69ee17d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9751. Add clientId and retryCount to RpcResponseHeaderProto.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1505036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/13 2:49 PM",
      "commitName": "9ff01d626118a97ea4bf2fd72f022e11e69ee17d",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,16 @@\n+  void checkResponse(RpcResponseHeaderProto header) throws IOException {\n+    if (header \u003d\u003d null) {\n+      throw new IOException(\"Response is null.\");\n+    }\n+    if (header.hasClientId()) {\n+      // check client IDs\n+      final byte[] id \u003d header.getClientId().toByteArray();\n+      if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) {\n+        if (!Arrays.equals(id, clientId)) {\n+          throw new IOException(\"Client IDs not matched: local ID\u003d\"\n+              + StringUtils.byteToHexString(clientId) + \", ID in reponse\u003d\"\n+              + StringUtils.byteToHexString(header.getClientId().toByteArray()));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void checkResponse(RpcResponseHeaderProto header) throws IOException {\n    if (header \u003d\u003d null) {\n      throw new IOException(\"Response is null.\");\n    }\n    if (header.hasClientId()) {\n      // check client IDs\n      final byte[] id \u003d header.getClientId().toByteArray();\n      if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) {\n        if (!Arrays.equals(id, clientId)) {\n          throw new IOException(\"Client IDs not matched: local ID\u003d\"\n              + StringUtils.byteToHexString(clientId) + \", ID in reponse\u003d\"\n              + StringUtils.byteToHexString(header.getClientId().toByteArray()));\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
    }
  }
}