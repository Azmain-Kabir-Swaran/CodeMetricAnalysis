{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegisterDistributedSchedulingAMResponsePBImpl.java",
  "functionName": "getMinContainerResource",
  "functionId": "getMinContainerResource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterDistributedSchedulingAMResponsePBImpl.java",
  "functionStartLine": 187,
  "functionEndLine": 202,
  "numCommitsSeen": 3,
  "timeTaken": 558,
  "changeHistory": [
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8"
  ],
  "changeHistoryShort": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,16 @@\n+  public Resource getMinContainerResource() {\n+    if (this.minContainerResource !\u003d null) {\n+      return this.minContainerResource;\n+    }\n+\n+    YarnServerCommonServiceProtos.\n+        RegisterDistributedSchedulingAMResponseProtoOrBuilder p \u003d\n+            viaProto ? proto : builder;\n+    if (!p.hasMinContainerResource()) {\n+      return null;\n+    }\n+\n+    this.minContainerResource \u003d ProtoUtils.convertFromProtoFormat(p\n+        .getMinContainerResource());\n+    return this.minContainerResource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getMinContainerResource() {\n    if (this.minContainerResource !\u003d null) {\n      return this.minContainerResource;\n    }\n\n    YarnServerCommonServiceProtos.\n        RegisterDistributedSchedulingAMResponseProtoOrBuilder p \u003d\n            viaProto ? proto : builder;\n    if (!p.hasMinContainerResource()) {\n      return null;\n    }\n\n    this.minContainerResource \u003d ProtoUtils.convertFromProtoFormat(p\n        .getMinContainerResource());\n    return this.minContainerResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterDistributedSchedulingAMResponsePBImpl.java"
    }
  }
}