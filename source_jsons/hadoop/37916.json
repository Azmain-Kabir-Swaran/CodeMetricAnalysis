{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecondaryGroupExistingPlacementRule.java",
  "functionName": "initialize",
  "functionId": "initialize___scheduler-ResourceScheduler",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SecondaryGroupExistingPlacementRule.java",
  "functionStartLine": 54,
  "functionEndLine": 60,
  "numCommitsSeen": 4,
  "timeTaken": 2338,
  "changeHistory": [
    "eca7e14c2fa95ded5ae47c149f9feb953138cd5b",
    "21ada4d1b029e08c0729a5d54b4235d2e8399205",
    "217b56ffdd5fa254f06734bc8cb6f04a02066f1a",
    "0aefe2846fbda5b3402879e343e65484355849c9"
  ],
  "changeHistoryShort": {
    "eca7e14c2fa95ded5ae47c149f9feb953138cd5b": "Ybodychange",
    "21ada4d1b029e08c0729a5d54b4235d2e8399205": "Ybodychange",
    "217b56ffdd5fa254f06734bc8cb6f04a02066f1a": "Ybodychange",
    "0aefe2846fbda5b3402879e343e65484355849c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eca7e14c2fa95ded5ae47c149f9feb953138cd5b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10053. Use Shared Group Mapping Service in Placement Rules.\n\nContributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/20 12:43 AM",
      "commitName": "eca7e14c2fa95ded5ae47c149f9feb953138cd5b",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "02/01/20 12:42 AM",
      "commitNameOld": "21ada4d1b029e08c0729a5d54b4235d2e8399205",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   public boolean initialize(ResourceScheduler scheduler) throws IOException {\n     super.initialize(scheduler);\n-    groupProvider \u003d new Groups(((FairScheduler)scheduler).getConfig());\n+    groupProvider \u003d Groups.\n+        getUserToGroupsMappingService(((FairScheduler)scheduler).getConfig());\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean initialize(ResourceScheduler scheduler) throws IOException {\n    super.initialize(scheduler);\n    groupProvider \u003d Groups.\n        getUserToGroupsMappingService(((FairScheduler)scheduler).getConfig());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SecondaryGroupExistingPlacementRule.java",
      "extendedDetails": {}
    },
    "21ada4d1b029e08c0729a5d54b4235d2e8399205": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-10053. Use Shared Group Mapping Service in Placement Rules.\"\n\nThis reverts commit 217b56ffdd5fa254f06734bc8cb6f04a02066f1a.\n",
      "commitDate": "02/01/20 12:42 AM",
      "commitName": "21ada4d1b029e08c0729a5d54b4235d2e8399205",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "02/01/20 12:37 AM",
      "commitNameOld": "217b56ffdd5fa254f06734bc8cb6f04a02066f1a",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,6 @@\n   public boolean initialize(ResourceScheduler scheduler) throws IOException {\n     super.initialize(scheduler);\n-    groupProvider \u003d Groups.\n-        getUserToGroupsMappingService(((FairScheduler)scheduler).getConfig());\n+    groupProvider \u003d new Groups(((FairScheduler)scheduler).getConfig());\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean initialize(ResourceScheduler scheduler) throws IOException {\n    super.initialize(scheduler);\n    groupProvider \u003d new Groups(((FairScheduler)scheduler).getConfig());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SecondaryGroupExistingPlacementRule.java",
      "extendedDetails": {}
    },
    "217b56ffdd5fa254f06734bc8cb6f04a02066f1a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10053. Use Shared Group Mapping Service in Placement Rules.\n\nContributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/20 12:37 AM",
      "commitName": "217b56ffdd5fa254f06734bc8cb6f04a02066f1a",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "04/03/19 11:49 PM",
      "commitNameOld": "0aefe2846fbda5b3402879e343e65484355849c9",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 303.03,
      "commitsBetweenForRepo": 2007,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   public boolean initialize(ResourceScheduler scheduler) throws IOException {\n     super.initialize(scheduler);\n-    groupProvider \u003d new Groups(((FairScheduler)scheduler).getConfig());\n+    groupProvider \u003d Groups.\n+        getUserToGroupsMappingService(((FairScheduler)scheduler).getConfig());\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean initialize(ResourceScheduler scheduler) throws IOException {\n    super.initialize(scheduler);\n    groupProvider \u003d Groups.\n        getUserToGroupsMappingService(((FairScheduler)scheduler).getConfig());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SecondaryGroupExistingPlacementRule.java",
      "extendedDetails": {}
    },
    "0aefe2846fbda5b3402879e343e65484355849c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9298. Implement FS placement rules using PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "04/03/19 11:49 PM",
      "commitName": "0aefe2846fbda5b3402879e343e65484355849c9",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,6 @@\n+  public boolean initialize(ResourceScheduler scheduler) throws IOException {\n+    super.initialize(scheduler);\n+    groupProvider \u003d new Groups(((FairScheduler)scheduler).getConfig());\n+\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean initialize(ResourceScheduler scheduler) throws IOException {\n    super.initialize(scheduler);\n    groupProvider \u003d new Groups(((FairScheduler)scheduler).getConfig());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SecondaryGroupExistingPlacementRule.java"
    }
  }
}