{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSAssignment.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSAssignment.java",
  "functionStartLine": 136,
  "functionEndLine": 155,
  "numCommitsSeen": 15,
  "timeTaken": 1274,
  "changeHistory": [
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "4a343c9d4ab4c993b545f0c1062c6b5449b065f0"
  ],
  "changeHistoryShort": {
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "4a343c9d4ab4c993b545f0c1062c6b5449b065f0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3293. Track and display capacity scheduler health metrics in web\nUI. Contributed by Varun Vasudev\n",
      "commitDate": "09/04/15 11:38 PM",
      "commitName": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthor": "Xuan",
      "commitDateOld": "21/06/13 11:28 AM",
      "commitNameOld": "37d7935a9d7b86635c9c1ffc03f88b49857f88a0",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 657.51,
      "commitsBetweenForRepo": 4914,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,20 @@\n   public String toString() {\n-    return resource.getMemory() + \":\" + type;\n+    String ret \u003d \"resource:\" + resource.toString();\n+    ret +\u003d \"; type:\" + type;\n+    ret +\u003d \"; excessReservation:\" + excessReservation;\n+    ret +\u003d\n+        \"; applicationid:\"\n+            + (application !\u003d null ? application.getApplicationId().toString()\n+                : \"null\");\n+    ret +\u003d \"; skipped:\" + skipped;\n+    ret +\u003d \"; fulfilled reservation:\" + fulfilledReservation;\n+    ret +\u003d\n+        \"; allocations(count/resource):\"\n+            + assignmentInformation.getNumAllocations() + \"/\"\n+            + assignmentInformation.getAllocated().toString();\n+    ret +\u003d\n+        \"; reservations(count/resource):\"\n+            + assignmentInformation.getNumReservations() + \"/\"\n+            + assignmentInformation.getReserved().toString();\n+    return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    String ret \u003d \"resource:\" + resource.toString();\n    ret +\u003d \"; type:\" + type;\n    ret +\u003d \"; excessReservation:\" + excessReservation;\n    ret +\u003d\n        \"; applicationid:\"\n            + (application !\u003d null ? application.getApplicationId().toString()\n                : \"null\");\n    ret +\u003d \"; skipped:\" + skipped;\n    ret +\u003d \"; fulfilled reservation:\" + fulfilledReservation;\n    ret +\u003d\n        \"; allocations(count/resource):\"\n            + assignmentInformation.getNumAllocations() + \"/\"\n            + assignmentInformation.getAllocated().toString();\n    ret +\u003d\n        \"; reservations(count/resource):\"\n            + assignmentInformation.getNumReservations() + \"/\"\n            + assignmentInformation.getReserved().toString();\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSAssignment.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString() {\n    return resource.getMemory() + \":\" + type;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSAssignment.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSAssignment.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSAssignment.java"
      }
    },
    "4a343c9d4ab4c993b545f0c1062c6b5449b065f0": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3641. Making CapacityScheduler more conservative so as to assign only one off-switch container in a single scheduling iteration. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1232182 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/01/12 1:56 PM",
      "commitName": "4a343c9d4ab4c993b545f0c1062c6b5449b065f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,3 @@\n+  public String toString() {\n+    return resource.getMemory() + \":\" + type;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return resource.getMemory() + \":\" + type;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSAssignment.java"
    }
  }
}