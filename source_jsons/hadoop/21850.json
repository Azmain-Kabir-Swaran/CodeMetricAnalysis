{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedCache.java",
  "functionName": "checkURIs",
  "functionId": "checkURIs___uriFiles-URI[]__uriArchives-URI[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
  "functionStartLine": 510,
  "functionEndLine": 548,
  "numCommitsSeen": 13,
  "timeTaken": 9732,
  "changeHistory": [
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n     if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n       return true;\n     }\n     // check if fragment is null for any uri\n     // also check if there are any conflicts in fragment names\n     Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n     \n     // iterate over file uris\n     if (uriFiles !\u003d null) {\n       for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n         String fragment \u003d uriFiles[i].getFragment();\n         if (fragment \u003d\u003d null) {\n           return false;\n         }\n-        String lowerCaseFragment \u003d fragment.toLowerCase();\n+        String lowerCaseFragment \u003d StringUtils.toLowerCase(fragment);\n         if (fragments.contains(lowerCaseFragment)) {\n           return false;\n         }\n         fragments.add(lowerCaseFragment);\n       }\n     }\n     \n     // iterate over archive uris\n     if (uriArchives !\u003d null) {\n       for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n         String fragment \u003d uriArchives[i].getFragment();\n         if (fragment \u003d\u003d null) {\n           return false;\n         }\n-        String lowerCaseFragment \u003d fragment.toLowerCase();\n+        String lowerCaseFragment \u003d StringUtils.toLowerCase(fragment);\n         if (fragments.contains(lowerCaseFragment)) {\n           return false;\n         }\n         fragments.add(lowerCaseFragment);\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n      return true;\n    }\n    // check if fragment is null for any uri\n    // also check if there are any conflicts in fragment names\n    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n    \n    // iterate over file uris\n    if (uriFiles !\u003d null) {\n      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n        String fragment \u003d uriFiles[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d StringUtils.toLowerCase(fragment);\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    \n    // iterate over archive uris\n    if (uriArchives !\u003d null) {\n      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n        String fragment \u003d uriArchives[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d StringUtils.toLowerCase(fragment);\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "18/02/15 8:06 PM",
      "commitNameOld": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n     if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n       return true;\n     }\n     // check if fragment is null for any uri\n     // also check if there are any conflicts in fragment names\n     Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n     \n     // iterate over file uris\n     if (uriFiles !\u003d null) {\n       for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n         String fragment \u003d uriFiles[i].getFragment();\n         if (fragment \u003d\u003d null) {\n           return false;\n         }\n-        String lowerCaseFragment \u003d fragment.toLowerCase(Locale.ENGLISH);\n+        String lowerCaseFragment \u003d fragment.toLowerCase();\n         if (fragments.contains(lowerCaseFragment)) {\n           return false;\n         }\n         fragments.add(lowerCaseFragment);\n       }\n     }\n     \n     // iterate over archive uris\n     if (uriArchives !\u003d null) {\n       for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n         String fragment \u003d uriArchives[i].getFragment();\n         if (fragment \u003d\u003d null) {\n           return false;\n         }\n-        String lowerCaseFragment \u003d fragment.toLowerCase(Locale.ENGLISH);\n+        String lowerCaseFragment \u003d fragment.toLowerCase();\n         if (fragments.contains(lowerCaseFragment)) {\n           return false;\n         }\n         fragments.add(lowerCaseFragment);\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n      return true;\n    }\n    // check if fragment is null for any uri\n    // also check if there are any conflicts in fragment names\n    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n    \n    // iterate over file uris\n    if (uriFiles !\u003d null) {\n      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n        String fragment \u003d uriFiles[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    \n    // iterate over archive uris\n    if (uriArchives !\u003d null) {\n      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n        String fragment \u003d uriArchives[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "03/06/13 4:42 PM",
      "commitNameOld": "78331cfecacdf12639ef4c4023418ddf875e87bf",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 625.18,
      "commitsBetweenForRepo": 4639,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n     if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n       return true;\n     }\n     // check if fragment is null for any uri\n     // also check if there are any conflicts in fragment names\n     Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n     \n     // iterate over file uris\n     if (uriFiles !\u003d null) {\n       for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n         String fragment \u003d uriFiles[i].getFragment();\n         if (fragment \u003d\u003d null) {\n           return false;\n         }\n-        String lowerCaseFragment \u003d fragment.toLowerCase();\n+        String lowerCaseFragment \u003d fragment.toLowerCase(Locale.ENGLISH);\n         if (fragments.contains(lowerCaseFragment)) {\n           return false;\n         }\n         fragments.add(lowerCaseFragment);\n       }\n     }\n     \n     // iterate over archive uris\n     if (uriArchives !\u003d null) {\n       for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n         String fragment \u003d uriArchives[i].getFragment();\n         if (fragment \u003d\u003d null) {\n           return false;\n         }\n-        String lowerCaseFragment \u003d fragment.toLowerCase();\n+        String lowerCaseFragment \u003d fragment.toLowerCase(Locale.ENGLISH);\n         if (fragments.contains(lowerCaseFragment)) {\n           return false;\n         }\n         fragments.add(lowerCaseFragment);\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n      return true;\n    }\n    // check if fragment is null for any uri\n    // also check if there are any conflicts in fragment names\n    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n    \n    // iterate over file uris\n    if (uriFiles !\u003d null) {\n      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n        String fragment \u003d uriFiles[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase(Locale.ENGLISH);\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    \n    // iterate over archive uris\n    if (uriArchives !\u003d null) {\n      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n        String fragment \u003d uriArchives[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase(Locale.ENGLISH);\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n      return true;\n    }\n    // check if fragment is null for any uri\n    // also check if there are any conflicts in fragment names\n    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n    \n    // iterate over file uris\n    if (uriFiles !\u003d null) {\n      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n        String fragment \u003d uriFiles[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    \n    // iterate over archive uris\n    if (uriArchives !\u003d null) {\n      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n        String fragment \u003d uriArchives[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n      return true;\n    }\n    // check if fragment is null for any uri\n    // also check if there are any conflicts in fragment names\n    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n    \n    // iterate over file uris\n    if (uriFiles !\u003d null) {\n      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n        String fragment \u003d uriFiles[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    \n    // iterate over archive uris\n    if (uriArchives !\u003d null) {\n      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n        String fragment \u003d uriArchives[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
        "oldMethodName": "checkURIs",
        "newMethodName": "checkURIs"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,39 @@\n+  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n+    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n+      return true;\n+    }\n+    // check if fragment is null for any uri\n+    // also check if there are any conflicts in fragment names\n+    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n+    \n+    // iterate over file uris\n+    if (uriFiles !\u003d null) {\n+      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n+        String fragment \u003d uriFiles[i].getFragment();\n+        if (fragment \u003d\u003d null) {\n+          return false;\n+        }\n+        String lowerCaseFragment \u003d fragment.toLowerCase();\n+        if (fragments.contains(lowerCaseFragment)) {\n+          return false;\n+        }\n+        fragments.add(lowerCaseFragment);\n+      }\n+    }\n+    \n+    // iterate over archive uris\n+    if (uriArchives !\u003d null) {\n+      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n+        String fragment \u003d uriArchives[i].getFragment();\n+        if (fragment \u003d\u003d null) {\n+          return false;\n+        }\n+        String lowerCaseFragment \u003d fragment.toLowerCase();\n+        if (fragments.contains(lowerCaseFragment)) {\n+          return false;\n+        }\n+        fragments.add(lowerCaseFragment);\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean checkURIs(URI[] uriFiles, URI[] uriArchives) {\n    if ((uriFiles \u003d\u003d null) \u0026\u0026 (uriArchives \u003d\u003d null)) {\n      return true;\n    }\n    // check if fragment is null for any uri\n    // also check if there are any conflicts in fragment names\n    Set\u003cString\u003e fragments \u003d new HashSet\u003cString\u003e();\n    \n    // iterate over file uris\n    if (uriFiles !\u003d null) {\n      for (int i \u003d 0; i \u003c uriFiles.length; i++) {\n        String fragment \u003d uriFiles[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    \n    // iterate over archive uris\n    if (uriArchives !\u003d null) {\n      for (int i \u003d 0; i \u003c uriArchives.length; i++) {\n        String fragment \u003d uriArchives[i].getFragment();\n        if (fragment \u003d\u003d null) {\n          return false;\n        }\n        String lowerCaseFragment \u003d fragment.toLowerCase();\n        if (fragments.contains(lowerCaseFragment)) {\n          return false;\n        }\n        fragments.add(lowerCaseFragment);\n      }\n    }\n    return true;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java"
    }
  }
}