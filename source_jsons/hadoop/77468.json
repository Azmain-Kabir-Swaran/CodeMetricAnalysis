{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ElasticByteBufferPool.java",
  "functionName": "getBuffer",
  "functionId": "getBuffer___direct-boolean__length-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ElasticByteBufferPool.java",
  "functionStartLine": 90,
  "functionEndLine": 100,
  "numCommitsSeen": 5,
  "timeTaken": 963,
  "changeHistory": [
    "eccdb9aa8bcdee750583d16a1253f1c5faabd036"
  ],
  "changeHistoryShort": {
    "eccdb9aa8bcdee750583d16a1253f1c5faabd036": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eccdb9aa8bcdee750583d16a1253f1c5faabd036": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5260. Merge zero-copy memory-mapped HDFS client reads to trunk and branch-2. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527113 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 3:51 PM",
      "commitName": "eccdb9aa8bcdee750583d16a1253f1c5faabd036",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,11 @@\n+  public synchronized ByteBuffer getBuffer(boolean direct, int length) {\n+    TreeMap\u003cKey, ByteBuffer\u003e tree \u003d getBufferTree(direct);\n+    Map.Entry\u003cKey, ByteBuffer\u003e entry \u003d\n+        tree.ceilingEntry(new Key(length, 0));\n+    if (entry \u003d\u003d null) {\n+      return direct ? ByteBuffer.allocateDirect(length) :\n+                      ByteBuffer.allocate(length);\n+    }\n+    tree.remove(entry.getKey());\n+    return entry.getValue();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ByteBuffer getBuffer(boolean direct, int length) {\n    TreeMap\u003cKey, ByteBuffer\u003e tree \u003d getBufferTree(direct);\n    Map.Entry\u003cKey, ByteBuffer\u003e entry \u003d\n        tree.ceilingEntry(new Key(length, 0));\n    if (entry \u003d\u003d null) {\n      return direct ? ByteBuffer.allocateDirect(length) :\n                      ByteBuffer.allocate(length);\n    }\n    tree.remove(entry.getKey());\n    return entry.getValue();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ElasticByteBufferPool.java"
    }
  }
}