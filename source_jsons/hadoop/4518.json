{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelper.java",
  "functionName": "convert",
  "functionId": "convert___b-RecoveringBlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
  "functionStartLine": 368,
  "functionEndLine": 384,
  "numCommitsSeen": 197,
  "timeTaken": 7608,
  "changeHistory": [
    "70d6f201260086a3f12beaa317fede2a99639fef",
    "61ab0440f7eaff0f631cbae0378403912f88d7ad",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "f05c21285ef23b6a973d69f045b1cb46c5abc039",
    "08ac06283a3e9bf0d49d873823aabd419b08e41f",
    "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
    "2740112bb64e1cc8132a1dc450d9e461c2e4729e",
    "7a59150bff64fc81f838de586eacd6d062172605",
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9"
  ],
  "changeHistoryShort": {
    "70d6f201260086a3f12beaa317fede2a99639fef": "Ybodychange",
    "61ab0440f7eaff0f631cbae0378403912f88d7ad": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "f05c21285ef23b6a973d69f045b1cb46c5abc039": "Ybodychange",
    "08ac06283a3e9bf0d49d873823aabd419b08e41f": "Ybodychange",
    "7e9358feb326d48b8c4f00249e7af5023cebd2e2": "Ybodychange",
    "2740112bb64e1cc8132a1dc450d9e461c2e4729e": "Ybodychange",
    "7a59150bff64fc81f838de586eacd6d062172605": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70d6f201260086a3f12beaa317fede2a99639fef": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9575. Use byte array for internal block indices in a striped block.  Contributed by jing9\n",
      "commitDate": "21/12/15 10:47 PM",
      "commitName": "70d6f201260086a3f12beaa317fede2a99639fef",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "18/12/15 3:57 PM",
      "commitNameOld": "61ab0440f7eaff0f631cbae0378403912f88d7ad",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 3.28,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n     if (b \u003d\u003d null) {\n       return null;\n     }\n     LocatedBlockProto lb \u003d PBHelperClient.convertLocatedBlock(b);\n     RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n     builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n     if(b.getNewBlock() !\u003d null)\n       builder.setTruncateBlock(PBHelperClient.convert(b.getNewBlock()));\n     if (b instanceof RecoveringStripedBlock) {\n       RecoveringStripedBlock sb \u003d (RecoveringStripedBlock) b;\n       builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n           sb.getErasureCodingPolicy()));\n-      builder.addAllBlockIndices(asList(sb.getBlockIndices()));\n+      builder.setBlockIndices(PBHelperClient.getByteString(sb.getBlockIndices()));\n     }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelperClient.convertLocatedBlock(b);\n    RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n    builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n    if(b.getNewBlock() !\u003d null)\n      builder.setTruncateBlock(PBHelperClient.convert(b.getNewBlock()));\n    if (b instanceof RecoveringStripedBlock) {\n      RecoveringStripedBlock sb \u003d (RecoveringStripedBlock) b;\n      builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n          sb.getErasureCodingPolicy()));\n      builder.setBlockIndices(PBHelperClient.getByteString(sb.getBlockIndices()));\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "61ab0440f7eaff0f631cbae0378403912f88d7ad": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9173. Erasure Coding: Lease recovery for striped file. Contributed by Walter Su and Jing Zhao.\n\nChange-Id: I51703a61c9d8454f883028f3f6acb5729fde1b15\n",
      "commitDate": "18/12/15 3:57 PM",
      "commitName": "61ab0440f7eaff0f631cbae0378403912f88d7ad",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "16/12/15 11:10 AM",
      "commitNameOld": "c470c8953d4927043b6383fad8e792289c634c09",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,17 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n     if (b \u003d\u003d null) {\n       return null;\n     }\n     LocatedBlockProto lb \u003d PBHelperClient.convertLocatedBlock(b);\n     RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n     builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n     if(b.getNewBlock() !\u003d null)\n       builder.setTruncateBlock(PBHelperClient.convert(b.getNewBlock()));\n+    if (b instanceof RecoveringStripedBlock) {\n+      RecoveringStripedBlock sb \u003d (RecoveringStripedBlock) b;\n+      builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n+          sb.getErasureCodingPolicy()));\n+      builder.addAllBlockIndices(asList(sb.getBlockIndices()));\n+    }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelperClient.convertLocatedBlock(b);\n    RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n    builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n    if(b.getNewBlock() !\u003d null)\n      builder.setTruncateBlock(PBHelperClient.convert(b.getNewBlock()));\n    if (b instanceof RecoveringStripedBlock) {\n      RecoveringStripedBlock sb \u003d (RecoveringStripedBlock) b;\n      builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n          sb.getErasureCodingPolicy()));\n      builder.addAllBlockIndices(asList(sb.getBlockIndices()));\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/09/15 6:08 PM",
      "commitNameOld": "3a9c7076e81c1cc47c0ecf30c60abd9a65d8a501",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n     if (b \u003d\u003d null) {\n       return null;\n     }\n-    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n+    LocatedBlockProto lb \u003d PBHelperClient.convert((LocatedBlock) b);\n     RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n     builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n     if(b.getNewBlock() !\u003d null)\n-      builder.setTruncateBlock(PBHelper.convert(b.getNewBlock()));\n+      builder.setTruncateBlock(PBHelperClient.convert(b.getNewBlock()));\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelperClient.convert((LocatedBlock) b);\n    RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n    builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n    if(b.getNewBlock() !\u003d null)\n      builder.setTruncateBlock(PBHelperClient.convert(b.getNewBlock()));\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "f05c21285ef23b6a973d69f045b1cb46c5abc039": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7853. Erasure coding: extend LocatedBlocks to support reading from striped files. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:32 AM",
      "commitName": "f05c21285ef23b6a973d69f045b1cb46c5abc039",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/05/15 11:07 AM",
      "commitNameOld": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n     if (b \u003d\u003d null) {\n       return null;\n     }\n-    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n+    LocatedBlockProto lb \u003d PBHelper.convertLocatedBlock(b);\n     RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n     builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n     if(b.getNewBlock() !\u003d null)\n       builder.setTruncateBlock(PBHelper.convert(b.getNewBlock()));\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelper.convertLocatedBlock(b);\n    RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n    builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n    if(b.getNewBlock() !\u003d null)\n      builder.setTruncateBlock(PBHelper.convert(b.getNewBlock()));\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "08ac06283a3e9bf0d49d873823aabd419b08e41f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7056. Snapshot support for truncate. Contributed by Konstantin Shvachko and Plamen Jeliazkov.",
      "commitDate": "13/01/15 12:24 AM",
      "commitName": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "12/01/15 10:50 PM",
      "commitNameOld": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
      "commitAuthorOld": "Plamen Jeliazkov",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n     if (b \u003d\u003d null) {\n       return null;\n     }\n     LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n-    return RecoveringBlockProto.newBuilder().setBlock(lb)\n-        .setNewGenStamp(b.getNewGenerationStamp())\n-        .setTruncateFlag(b.getTruncateFlag()).build();\n+    RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n+    builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n+    if(b.getNewBlock() !\u003d null)\n+      builder.setTruncateBlock(PBHelper.convert(b.getNewBlock()));\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n    RecoveringBlockProto.Builder builder \u003d RecoveringBlockProto.newBuilder();\n    builder.setBlock(lb).setNewGenStamp(b.getNewGenerationStamp());\n    if(b.getNewBlock() !\u003d null)\n      builder.setTruncateBlock(PBHelper.convert(b.getNewBlock()));\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "7e9358feb326d48b8c4f00249e7af5023cebd2e2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3107. Introduce truncate. Contributed by Plamen Jeliazkov.",
      "commitDate": "12/01/15 10:50 PM",
      "commitName": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
      "commitAuthor": "Plamen Jeliazkov",
      "commitDateOld": "15/12/14 10:30 AM",
      "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 28.51,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n     if (b \u003d\u003d null) {\n       return null;\n     }\n     LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n     return RecoveringBlockProto.newBuilder().setBlock(lb)\n-        .setNewGenStamp(b.getNewGenerationStamp()).build();\n+        .setNewGenStamp(b.getNewGenerationStamp())\n+        .setTruncateFlag(b.getTruncateFlag()).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n    return RecoveringBlockProto.newBuilder().setBlock(lb)\n        .setNewGenStamp(b.getNewGenerationStamp())\n        .setTruncateFlag(b.getTruncateFlag()).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "2740112bb64e1cc8132a1dc450d9e461c2e4729e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2647. Used protobuf based RPC for InterDatanodeProtocol, ClientDatanodeProtocol, JournalProtocol, NamenodeProtocol. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/11 10:53 AM",
      "commitName": "2740112bb64e1cc8132a1dc450d9e461c2e4729e",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "09/12/11 12:02 PM",
      "commitNameOld": "38a19bc293dec6221ae96e304fc6ab660d94e706",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,8 @@\n   public static RecoveringBlockProto convert(RecoveringBlock b) {\n+    if (b \u003d\u003d null) {\n+      return null;\n+    }\n     LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n     return RecoveringBlockProto.newBuilder().setBlock(lb)\n         .setNewGenStamp(b.getNewGenerationStamp()).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    if (b \u003d\u003d null) {\n      return null;\n    }\n    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n    return RecoveringBlockProto.newBuilder().setBlock(lb)\n        .setNewGenStamp(b.getNewGenerationStamp()).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "7a59150bff64fc81f838de586eacd6d062172605": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-2629. Implement protobuf service for InterDatanodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211206 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/11 2:19 PM",
      "commitName": "7a59150bff64fc81f838de586eacd6d062172605",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2629. Implement protobuf service for InterDatanodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211206 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/12/11 2:19 PM",
          "commitName": "7a59150bff64fc81f838de586eacd6d062172605",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "05/12/11 4:25 PM",
          "commitNameOld": "0a713035f2fb1a222291cfdb2cbde906814c2fd9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,5 @@\n-  public static BlockWithLocations[] convert(List\u003cBlockWithLocationsProto\u003e b) {\n-    BlockWithLocations[] ret \u003d new BlockWithLocations[b.size()];\n-    int i \u003d 0;\n-    for (BlockWithLocationsProto entry : b) {\n-      ret[i++] \u003d convert(entry);\n-    }\n-    return ret;\n+  public static RecoveringBlockProto convert(RecoveringBlock b) {\n+    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n+    return RecoveringBlockProto.newBuilder().setBlock(lb)\n+        .setNewGenStamp(b.getNewGenerationStamp()).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n    return RecoveringBlockProto.newBuilder().setBlock(lb)\n        .setNewGenStamp(b.getNewGenerationStamp()).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[b-List\u003cBlockWithLocationsProto\u003e]",
            "newValue": "[b-RecoveringBlock]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2629. Implement protobuf service for InterDatanodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211206 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/12/11 2:19 PM",
          "commitName": "7a59150bff64fc81f838de586eacd6d062172605",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "05/12/11 4:25 PM",
          "commitNameOld": "0a713035f2fb1a222291cfdb2cbde906814c2fd9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,5 @@\n-  public static BlockWithLocations[] convert(List\u003cBlockWithLocationsProto\u003e b) {\n-    BlockWithLocations[] ret \u003d new BlockWithLocations[b.size()];\n-    int i \u003d 0;\n-    for (BlockWithLocationsProto entry : b) {\n-      ret[i++] \u003d convert(entry);\n-    }\n-    return ret;\n+  public static RecoveringBlockProto convert(RecoveringBlock b) {\n+    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n+    return RecoveringBlockProto.newBuilder().setBlock(lb)\n+        .setNewGenStamp(b.getNewGenerationStamp()).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n    return RecoveringBlockProto.newBuilder().setBlock(lb)\n        .setNewGenStamp(b.getNewGenerationStamp()).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "BlockWithLocations[]",
            "newValue": "RecoveringBlockProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2629. Implement protobuf service for InterDatanodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211206 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/12/11 2:19 PM",
          "commitName": "7a59150bff64fc81f838de586eacd6d062172605",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "05/12/11 4:25 PM",
          "commitNameOld": "0a713035f2fb1a222291cfdb2cbde906814c2fd9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,5 @@\n-  public static BlockWithLocations[] convert(List\u003cBlockWithLocationsProto\u003e b) {\n-    BlockWithLocations[] ret \u003d new BlockWithLocations[b.size()];\n-    int i \u003d 0;\n-    for (BlockWithLocationsProto entry : b) {\n-      ret[i++] \u003d convert(entry);\n-    }\n-    return ret;\n+  public static RecoveringBlockProto convert(RecoveringBlock b) {\n+    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n+    return RecoveringBlockProto.newBuilder().setBlock(lb)\n+        .setNewGenStamp(b.getNewGenerationStamp()).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RecoveringBlockProto convert(RecoveringBlock b) {\n    LocatedBlockProto lb \u003d PBHelper.convert((LocatedBlock)b);\n    return RecoveringBlockProto.newBuilder().setBlock(lb)\n        .setNewGenStamp(b.getNewGenerationStamp()).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2618. Implement protobuf service for NamenodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1210719 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/11 4:25 PM",
      "commitName": "0a713035f2fb1a222291cfdb2cbde906814c2fd9",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,8 @@\n+  public static BlockWithLocations[] convert(List\u003cBlockWithLocationsProto\u003e b) {\n+    BlockWithLocations[] ret \u003d new BlockWithLocations[b.size()];\n+    int i \u003d 0;\n+    for (BlockWithLocationsProto entry : b) {\n+      ret[i++] \u003d convert(entry);\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockWithLocations[] convert(List\u003cBlockWithLocationsProto\u003e b) {\n    BlockWithLocations[] ret \u003d new BlockWithLocations[b.size()];\n    int i \u003d 0;\n    for (BlockWithLocationsProto entry : b) {\n      ret[i++] \u003d convert(entry);\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}