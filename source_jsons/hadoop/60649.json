{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationSubmissionContextPBImpl.java",
  "functionName": "addApplicationSchedulingProperties",
  "functionId": "addApplicationSchedulingProperties",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
  "functionStartLine": 655,
  "functionEndLine": 690,
  "numCommitsSeen": 25,
  "timeTaken": 2263,
  "changeHistory": [
    "a81144daa012e13590725f67f53e35ef84a6f1ec"
  ],
  "changeHistoryShort": {
    "a81144daa012e13590725f67f53e35ef84a6f1ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a81144daa012e13590725f67f53e35ef84a6f1ec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7666. Introduce scheduler specific environment variable support in ApplicationSubmissionContext for better scheduling placement configurations. (Sunil G via wangda)\n\nChange-Id: I0fd826490f5160d47d42af2a9ac0bd8ec4e959dc\n",
      "commitDate": "05/01/18 3:12 PM",
      "commitName": "a81144daa012e13590725f67f53e35ef84a6f1ec",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,36 @@\n+  private void addApplicationSchedulingProperties() {\n+    maybeInitBuilder();\n+    builder.clearApplicationSchedulingProperties();\n+    if (this.schedulingProperties \u003d\u003d null) {\n+      return;\n+    }\n+    Iterable\u003c? extends StringStringMapProto\u003e values \u003d\n+        new Iterable\u003cStringStringMapProto\u003e() {\n+\n+      @Override\n+      public Iterator\u003cStringStringMapProto\u003e iterator() {\n+        return new Iterator\u003cStringStringMapProto\u003e() {\n+          private Iterator\u003cString\u003e iterator \u003d schedulingProperties.keySet()\n+              .iterator();\n+\n+          @Override\n+          public boolean hasNext() {\n+            return iterator.hasNext();\n+          }\n+\n+          @Override\n+          public StringStringMapProto next() {\n+            String key \u003d iterator.next();\n+            return StringStringMapProto.newBuilder()\n+                .setValue(schedulingProperties.get(key)).setKey(key).build();\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+          }\n+        };\n+      }\n+    };\n+    this.builder.addAllApplicationSchedulingProperties(values);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addApplicationSchedulingProperties() {\n    maybeInitBuilder();\n    builder.clearApplicationSchedulingProperties();\n    if (this.schedulingProperties \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003c? extends StringStringMapProto\u003e values \u003d\n        new Iterable\u003cStringStringMapProto\u003e() {\n\n      @Override\n      public Iterator\u003cStringStringMapProto\u003e iterator() {\n        return new Iterator\u003cStringStringMapProto\u003e() {\n          private Iterator\u003cString\u003e iterator \u003d schedulingProperties.keySet()\n              .iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iterator.hasNext();\n          }\n\n          @Override\n          public StringStringMapProto next() {\n            String key \u003d iterator.next();\n            return StringStringMapProto.newBuilder()\n                .setValue(schedulingProperties.get(key)).setKey(key).build();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n    this.builder.addAllApplicationSchedulingProperties(values);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java"
    }
  }
}