{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "checkConfiguration",
  "functionId": "checkConfiguration___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 713,
  "functionEndLine": 755,
  "numCommitsSeen": 873,
  "timeTaken": 40567,
  "changeHistory": [
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1",
    "78b9321539f973c7a1da5ce14acb49cdab41737a"
  ],
  "changeHistoryShort": {
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1": "Ybodychange",
    "78b9321539f973c7a1da5ce14acb49cdab41737a": "Ybodychange"
  },
  "changeHistoryDetails": {
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9528. Cleanup namenode audit/log/exception messages. (szetszwo via umamahesh)\n",
      "commitDate": "11/12/15 5:57 PM",
      "commitName": "796a676d18bd7cd3ed4113d002e0e69cf261d6d1",
      "commitAuthor": "Uma Mahesh",
      "commitDateOld": "09/12/15 5:55 PM",
      "commitNameOld": "132478e805ba0f955345217b8ad87c2d17cccb2d",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,43 @@\n   private static void checkConfiguration(Configuration conf)\n       throws IOException {\n \n     final Collection\u003cURI\u003e namespaceDirs \u003d\n         FSNamesystem.getNamespaceDirs(conf);\n     final Collection\u003cURI\u003e editsDirs \u003d\n         FSNamesystem.getNamespaceEditsDirs(conf);\n     final Collection\u003cURI\u003e requiredEditsDirs \u003d\n         FSNamesystem.getRequiredNamespaceEditsDirs(conf);\n     final Collection\u003cURI\u003e sharedEditsDirs \u003d\n         FSNamesystem.getSharedEditsDirs(conf);\n \n     for (URI u : requiredEditsDirs) {\n       if (u.toString().compareTo(\n               DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_DEFAULT) \u003d\u003d 0) {\n         continue;\n       }\n \n       // Each required directory must also be in editsDirs or in\n       // sharedEditsDirs.\n       if (!editsDirs.contains(u) \u0026\u0026\n           !sharedEditsDirs.contains(u)) {\n-        throw new IllegalArgumentException(\n-            \"Required edits directory \" + u.toString() + \" not present in \" +\n-            DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \". \" +\n-            DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \"\u003d\" +\n-            editsDirs.toString() + \"; \" +\n-            DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY + \"\u003d\" +\n-            requiredEditsDirs.toString() + \". \" +\n-            DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \"\u003d\" +\n-            sharedEditsDirs.toString() + \".\");\n+        throw new IllegalArgumentException(\"Required edits directory \" + u\n+            + \" not found: \"\n+            + DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \"\u003d\" + editsDirs + \"; \"\n+            + DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY\n+            + \"\u003d\" + requiredEditsDirs + \"; \"\n+            + DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY\n+            + \"\u003d\" + sharedEditsDirs);\n       }\n     }\n \n     if (namespaceDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one image storage directory (\"\n           + DFS_NAMENODE_NAME_DIR_KEY + \") configured. Beware of data loss\"\n           + \" due to lack of redundant storage directories!\");\n     }\n     if (editsDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one namespace edits storage directory (\"\n           + DFS_NAMENODE_EDITS_DIR_KEY + \") configured. Beware of data loss\"\n           + \" due to lack of redundant storage directories!\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkConfiguration(Configuration conf)\n      throws IOException {\n\n    final Collection\u003cURI\u003e namespaceDirs \u003d\n        FSNamesystem.getNamespaceDirs(conf);\n    final Collection\u003cURI\u003e editsDirs \u003d\n        FSNamesystem.getNamespaceEditsDirs(conf);\n    final Collection\u003cURI\u003e requiredEditsDirs \u003d\n        FSNamesystem.getRequiredNamespaceEditsDirs(conf);\n    final Collection\u003cURI\u003e sharedEditsDirs \u003d\n        FSNamesystem.getSharedEditsDirs(conf);\n\n    for (URI u : requiredEditsDirs) {\n      if (u.toString().compareTo(\n              DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_DEFAULT) \u003d\u003d 0) {\n        continue;\n      }\n\n      // Each required directory must also be in editsDirs or in\n      // sharedEditsDirs.\n      if (!editsDirs.contains(u) \u0026\u0026\n          !sharedEditsDirs.contains(u)) {\n        throw new IllegalArgumentException(\"Required edits directory \" + u\n            + \" not found: \"\n            + DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \"\u003d\" + editsDirs + \"; \"\n            + DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY\n            + \"\u003d\" + requiredEditsDirs + \"; \"\n            + DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY\n            + \"\u003d\" + sharedEditsDirs);\n      }\n    }\n\n    if (namespaceDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one image storage directory (\"\n          + DFS_NAMENODE_NAME_DIR_KEY + \") configured. Beware of data loss\"\n          + \" due to lack of redundant storage directories!\");\n    }\n    if (editsDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one namespace edits storage directory (\"\n          + DFS_NAMENODE_EDITS_DIR_KEY + \") configured. Beware of data loss\"\n          + \" due to lack of redundant storage directories!\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "78b9321539f973c7a1da5ce14acb49cdab41737a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6119. FSNamesystem code cleanup. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582073 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 2:32 PM",
      "commitName": "78b9321539f973c7a1da5ce14acb49cdab41737a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "26/03/14 9:32 AM",
      "commitNameOld": "c00703dd082474fea98a63b871c2183ca01147ed",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   private static void checkConfiguration(Configuration conf)\n       throws IOException {\n \n     final Collection\u003cURI\u003e namespaceDirs \u003d\n         FSNamesystem.getNamespaceDirs(conf);\n     final Collection\u003cURI\u003e editsDirs \u003d\n         FSNamesystem.getNamespaceEditsDirs(conf);\n     final Collection\u003cURI\u003e requiredEditsDirs \u003d\n         FSNamesystem.getRequiredNamespaceEditsDirs(conf);\n     final Collection\u003cURI\u003e sharedEditsDirs \u003d\n         FSNamesystem.getSharedEditsDirs(conf);\n \n     for (URI u : requiredEditsDirs) {\n       if (u.toString().compareTo(\n               DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_DEFAULT) \u003d\u003d 0) {\n         continue;\n       }\n \n       // Each required directory must also be in editsDirs or in\n       // sharedEditsDirs.\n       if (!editsDirs.contains(u) \u0026\u0026\n           !sharedEditsDirs.contains(u)) {\n         throw new IllegalArgumentException(\n             \"Required edits directory \" + u.toString() + \" not present in \" +\n             DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \". \" +\n             DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \"\u003d\" +\n             editsDirs.toString() + \"; \" +\n             DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY + \"\u003d\" +\n             requiredEditsDirs.toString() + \". \" +\n             DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \"\u003d\" +\n             sharedEditsDirs.toString() + \".\");\n       }\n     }\n \n     if (namespaceDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one image storage directory (\"\n-          + DFS_NAMENODE_NAME_DIR_KEY + \") configured. Beware of dataloss\"\n+          + DFS_NAMENODE_NAME_DIR_KEY + \") configured. Beware of data loss\"\n           + \" due to lack of redundant storage directories!\");\n     }\n     if (editsDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one namespace edits storage directory (\"\n-          + DFS_NAMENODE_EDITS_DIR_KEY + \") configured. Beware of dataloss\"\n+          + DFS_NAMENODE_EDITS_DIR_KEY + \") configured. Beware of data loss\"\n           + \" due to lack of redundant storage directories!\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkConfiguration(Configuration conf)\n      throws IOException {\n\n    final Collection\u003cURI\u003e namespaceDirs \u003d\n        FSNamesystem.getNamespaceDirs(conf);\n    final Collection\u003cURI\u003e editsDirs \u003d\n        FSNamesystem.getNamespaceEditsDirs(conf);\n    final Collection\u003cURI\u003e requiredEditsDirs \u003d\n        FSNamesystem.getRequiredNamespaceEditsDirs(conf);\n    final Collection\u003cURI\u003e sharedEditsDirs \u003d\n        FSNamesystem.getSharedEditsDirs(conf);\n\n    for (URI u : requiredEditsDirs) {\n      if (u.toString().compareTo(\n              DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_DEFAULT) \u003d\u003d 0) {\n        continue;\n      }\n\n      // Each required directory must also be in editsDirs or in\n      // sharedEditsDirs.\n      if (!editsDirs.contains(u) \u0026\u0026\n          !sharedEditsDirs.contains(u)) {\n        throw new IllegalArgumentException(\n            \"Required edits directory \" + u.toString() + \" not present in \" +\n            DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \". \" +\n            DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY + \"\u003d\" +\n            editsDirs.toString() + \"; \" +\n            DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY + \"\u003d\" +\n            requiredEditsDirs.toString() + \". \" +\n            DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \"\u003d\" +\n            sharedEditsDirs.toString() + \".\");\n      }\n    }\n\n    if (namespaceDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one image storage directory (\"\n          + DFS_NAMENODE_NAME_DIR_KEY + \") configured. Beware of data loss\"\n          + \" due to lack of redundant storage directories!\");\n    }\n    if (editsDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one namespace edits storage directory (\"\n          + DFS_NAMENODE_EDITS_DIR_KEY + \") configured. Beware of data loss\"\n          + \" due to lack of redundant storage directories!\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}