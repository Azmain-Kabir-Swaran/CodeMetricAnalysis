{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceManager.java",
  "functionName": "upgradeNextCompIfAny",
  "functionId": "upgradeNextCompIfAny___cancelUpgrade-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
  "functionStartLine": 285,
  "functionEndLine": 301,
  "numCommitsSeen": 13,
  "timeTaken": 3236,
  "changeHistory": [
    "913f87dada27776c539dfb352400ecf8d40e7943",
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6"
  ],
  "changeHistoryShort": {
    "913f87dada27776c539dfb352400ecf8d40e7943": "Ymultichange(Yparameterchange,Ybodychange)",
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
          "commitDate": "26/09/18 11:51 AM",
          "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "21/08/18 4:49 PM",
          "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 35.79,
          "commitsBetweenForRepo": 332,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  private void upgradeNextCompIfAny() {\n-    if (!compsToUpgradeInOrder.isEmpty()) {\n+  private void upgradeNextCompIfAny(boolean cancelUpgrade) {\n+    if (!componentsToUpgrade.isEmpty()) {\n       org.apache.hadoop.yarn.service.api.records.Component component \u003d\n-          compsToUpgradeInOrder.peek();\n+          componentsToUpgrade.get(0);\n \n-      ComponentEvent needUpgradeEvent \u003d new ComponentEvent(\n-          component.getName(), ComponentEventType.UPGRADE).setTargetSpec(\n-          component).setUpgradeVersion(upgradeVersion).setExpressUpgrade(true);\n-      context.scheduler.getDispatcher().getEventHandler().handle(\n-          needUpgradeEvent);\n+      serviceSpec.getComponent(component.getName()).getContainers().forEach(\n+          container -\u003e {\n+            ComponentInstanceEvent upgradeEvent \u003d new ComponentInstanceEvent(\n+                ContainerId.fromString(container.getId()),\n+                !cancelUpgrade ? ComponentInstanceEventType.UPGRADE :\n+                    ComponentInstanceEventType.CANCEL_UPGRADE);\n+            LOG.info(\"Upgrade container {} {}\", container.getId(),\n+                cancelUpgrade);\n+            dispatcher.getEventHandler().handle(upgradeEvent);\n+          });\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void upgradeNextCompIfAny(boolean cancelUpgrade) {\n    if (!componentsToUpgrade.isEmpty()) {\n      org.apache.hadoop.yarn.service.api.records.Component component \u003d\n          componentsToUpgrade.get(0);\n\n      serviceSpec.getComponent(component.getName()).getContainers().forEach(\n          container -\u003e {\n            ComponentInstanceEvent upgradeEvent \u003d new ComponentInstanceEvent(\n                ContainerId.fromString(container.getId()),\n                !cancelUpgrade ? ComponentInstanceEventType.UPGRADE :\n                    ComponentInstanceEventType.CANCEL_UPGRADE);\n            LOG.info(\"Upgrade container {} {}\", container.getId(),\n                cancelUpgrade);\n            dispatcher.getEventHandler().handle(upgradeEvent);\n          });\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[cancelUpgrade-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
          "commitDate": "26/09/18 11:51 AM",
          "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "21/08/18 4:49 PM",
          "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 35.79,
          "commitsBetweenForRepo": 332,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  private void upgradeNextCompIfAny() {\n-    if (!compsToUpgradeInOrder.isEmpty()) {\n+  private void upgradeNextCompIfAny(boolean cancelUpgrade) {\n+    if (!componentsToUpgrade.isEmpty()) {\n       org.apache.hadoop.yarn.service.api.records.Component component \u003d\n-          compsToUpgradeInOrder.peek();\n+          componentsToUpgrade.get(0);\n \n-      ComponentEvent needUpgradeEvent \u003d new ComponentEvent(\n-          component.getName(), ComponentEventType.UPGRADE).setTargetSpec(\n-          component).setUpgradeVersion(upgradeVersion).setExpressUpgrade(true);\n-      context.scheduler.getDispatcher().getEventHandler().handle(\n-          needUpgradeEvent);\n+      serviceSpec.getComponent(component.getName()).getContainers().forEach(\n+          container -\u003e {\n+            ComponentInstanceEvent upgradeEvent \u003d new ComponentInstanceEvent(\n+                ContainerId.fromString(container.getId()),\n+                !cancelUpgrade ? ComponentInstanceEventType.UPGRADE :\n+                    ComponentInstanceEventType.CANCEL_UPGRADE);\n+            LOG.info(\"Upgrade container {} {}\", container.getId(),\n+                cancelUpgrade);\n+            dispatcher.getEventHandler().handle(upgradeEvent);\n+          });\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void upgradeNextCompIfAny(boolean cancelUpgrade) {\n    if (!componentsToUpgrade.isEmpty()) {\n      org.apache.hadoop.yarn.service.api.records.Component component \u003d\n          componentsToUpgrade.get(0);\n\n      serviceSpec.getComponent(component.getName()).getContainers().forEach(\n          container -\u003e {\n            ComponentInstanceEvent upgradeEvent \u003d new ComponentInstanceEvent(\n                ContainerId.fromString(container.getId()),\n                !cancelUpgrade ? ComponentInstanceEventType.UPGRADE :\n                    ComponentInstanceEventType.CANCEL_UPGRADE);\n            LOG.info(\"Upgrade container {} {}\", container.getId(),\n                cancelUpgrade);\n            dispatcher.getEventHandler().handle(upgradeEvent);\n          });\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8298.  Added express upgrade for YARN service.\n            Contributed by Chandni Singh\n",
      "commitDate": "21/08/18 4:49 PM",
      "commitName": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,12 @@\n+  private void upgradeNextCompIfAny() {\n+    if (!compsToUpgradeInOrder.isEmpty()) {\n+      org.apache.hadoop.yarn.service.api.records.Component component \u003d\n+          compsToUpgradeInOrder.peek();\n+\n+      ComponentEvent needUpgradeEvent \u003d new ComponentEvent(\n+          component.getName(), ComponentEventType.UPGRADE).setTargetSpec(\n+          component).setUpgradeVersion(upgradeVersion).setExpressUpgrade(true);\n+      context.scheduler.getDispatcher().getEventHandler().handle(\n+          needUpgradeEvent);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void upgradeNextCompIfAny() {\n    if (!compsToUpgradeInOrder.isEmpty()) {\n      org.apache.hadoop.yarn.service.api.records.Component component \u003d\n          compsToUpgradeInOrder.peek();\n\n      ComponentEvent needUpgradeEvent \u003d new ComponentEvent(\n          component.getName(), ComponentEventType.UPGRADE).setTargetSpec(\n          component).setUpgradeVersion(upgradeVersion).setExpressUpgrade(true);\n      context.scheduler.getDispatcher().getEventHandler().handle(\n          needUpgradeEvent);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java"
    }
  }
}