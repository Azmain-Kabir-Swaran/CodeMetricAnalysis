{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "getClassByNameOrNull",
  "functionId": "getClassByNameOrNull___name-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 2586,
  "functionEndLine": 2621,
  "numCommitsSeen": 174,
  "timeTaken": 4568,
  "changeHistory": [
    "42beb56a2ed0176bf0c47fe1b844f01d459130d1",
    "76817c28a264968c294391827e6ae06ceb41014e",
    "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "168bf7b71d2e8fc54e316c0b7d739be9de9157a3",
    "f95ec3f5bf12bee07c90943cff3b135e6a7e7a8b",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "42beb56a2ed0176bf0c47fe1b844f01d459130d1": "Ybodychange",
    "76817c28a264968c294391827e6ae06ceb41014e": "Ybodychange",
    "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "168bf7b71d2e8fc54e316c0b7d739be9de9157a3": "Ybodychange",
    "f95ec3f5bf12bee07c90943cff3b135e6a7e7a8b": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "42beb56a2ed0176bf0c47fe1b844f01d459130d1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8632. Configuration leaking class-loaders (Costin Leau via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1376543 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/12 8:24 AM",
      "commitName": "42beb56a2ed0176bf0c47fe1b844f01d459130d1",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "26/07/12 5:26 PM",
      "commitNameOld": "c1ea9b4490e7d6d030eeaeeff2fad3767d2cfd4a",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 27.62,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,36 @@\n   public Class\u003c?\u003e getClassByNameOrNull(String name) {\n-    Map\u003cString, Class\u003c?\u003e\u003e map;\n+    Map\u003cString, WeakReference\u003cClass\u003c?\u003e\u003e\u003e map;\n     \n     synchronized (CACHE_CLASSES) {\n       map \u003d CACHE_CLASSES.get(classLoader);\n       if (map \u003d\u003d null) {\n         map \u003d Collections.synchronizedMap(\n-          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n+          new WeakHashMap\u003cString, WeakReference\u003cClass\u003c?\u003e\u003e\u003e());\n         CACHE_CLASSES.put(classLoader, map);\n       }\n     }\n \n-    Class\u003c?\u003e clazz \u003d map.get(name);\n+    Class\u003c?\u003e clazz \u003d null;\n+    WeakReference\u003cClass\u003c?\u003e\u003e ref \u003d map.get(name); \n+    if (ref !\u003d null) {\n+       clazz \u003d ref.get();\n+    }\n+     \n     if (clazz \u003d\u003d null) {\n       try {\n         clazz \u003d Class.forName(name, true, classLoader);\n       } catch (ClassNotFoundException e) {\n         // Leave a marker that the class isn\u0027t found\n-        map.put(name, NEGATIVE_CACHE_SENTINEL);\n+        map.put(name, new WeakReference\u003cClass\u003c?\u003e\u003e(NEGATIVE_CACHE_SENTINEL));\n         return null;\n       }\n       // two putters can race here, but they\u0027ll put the same class\n-      map.put(name, clazz);\n+      map.put(name, new WeakReference\u003cClass\u003c?\u003e\u003e(clazz));\n       return clazz;\n     } else if (clazz \u003d\u003d NEGATIVE_CACHE_SENTINEL) {\n       return null; // not found\n     } else {\n       // cache hit\n       return clazz;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n    Map\u003cString, WeakReference\u003cClass\u003c?\u003e\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, WeakReference\u003cClass\u003c?\u003e\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d null;\n    WeakReference\u003cClass\u003c?\u003e\u003e ref \u003d map.get(name); \n    if (ref !\u003d null) {\n       clazz \u003d ref.get();\n    }\n     \n    if (clazz \u003d\u003d null) {\n      try {\n        clazz \u003d Class.forName(name, true, classLoader);\n      } catch (ClassNotFoundException e) {\n        // Leave a marker that the class isn\u0027t found\n        map.put(name, new WeakReference\u003cClass\u003c?\u003e\u003e(NEGATIVE_CACHE_SENTINEL));\n        return null;\n      }\n      // two putters can race here, but they\u0027ll put the same class\n      map.put(name, new WeakReference\u003cClass\u003c?\u003e\u003e(clazz));\n      return clazz;\n    } else if (clazz \u003d\u003d NEGATIVE_CACHE_SENTINEL) {\n      return null; // not found\n    } else {\n      // cache hit\n      return clazz;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "76817c28a264968c294391827e6ae06ceb41014e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8157. Fix race condition in Configuration that could cause spurious ClassNotFoundExceptions after a GC. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303634 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/12 5:49 PM",
      "commitName": "76817c28a264968c294391827e6ae06ceb41014e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "16/03/12 7:39 AM",
      "commitNameOld": "3e8c273f3721416f84fb530a0d73ab8442a5c025",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 5.42,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public Class\u003c?\u003e getClassByNameOrNull(String name) {\n     Map\u003cString, Class\u003c?\u003e\u003e map;\n     \n     synchronized (CACHE_CLASSES) {\n       map \u003d CACHE_CLASSES.get(classLoader);\n       if (map \u003d\u003d null) {\n         map \u003d Collections.synchronizedMap(\n           new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n         CACHE_CLASSES.put(classLoader, map);\n       }\n     }\n \n-    Class\u003c?\u003e clazz \u003d null;\n-    if (!map.containsKey(name)) {\n+    Class\u003c?\u003e clazz \u003d map.get(name);\n+    if (clazz \u003d\u003d null) {\n       try {\n         clazz \u003d Class.forName(name, true, classLoader);\n       } catch (ClassNotFoundException e) {\n-        map.put(name, null); //cache negative that class is not found\n+        // Leave a marker that the class isn\u0027t found\n+        map.put(name, NEGATIVE_CACHE_SENTINEL);\n         return null;\n       }\n       // two putters can race here, but they\u0027ll put the same class\n       map.put(name, clazz);\n-    } else { // check already performed on this class name\n-      clazz \u003d map.get(name);\n-      if (clazz \u003d\u003d null) { // found the negative\n-        return null;\n-      }\n+      return clazz;\n+    } else if (clazz \u003d\u003d NEGATIVE_CACHE_SENTINEL) {\n+      return null; // not found\n+    } else {\n+      // cache hit\n+      return clazz;\n     }\n-\n-    return clazz;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d map.get(name);\n    if (clazz \u003d\u003d null) {\n      try {\n        clazz \u003d Class.forName(name, true, classLoader);\n      } catch (ClassNotFoundException e) {\n        // Leave a marker that the class isn\u0027t found\n        map.put(name, NEGATIVE_CACHE_SENTINEL);\n        return null;\n      }\n      // two putters can race here, but they\u0027ll put the same class\n      map.put(name, clazz);\n      return clazz;\n    } else if (clazz \u003d\u003d NEGATIVE_CACHE_SENTINEL) {\n      return null; // not found\n    } else {\n      // cache hit\n      return clazz;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa": {
      "type": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-6502. Improve the performance of Configuration.getClassByName when the class is not found by caching negative results. Contributed by Sharad Agarwal and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1244620 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/02/12 10:10 AM",
      "commitName": "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-6502. Improve the performance of Configuration.getClassByName when the class is not found by caching negative results. Contributed by Sharad Agarwal and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1244620 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/02/12 10:10 AM",
          "commitName": "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/01/12 7:42 PM",
          "commitNameOld": "c8bb6f59b8de48f533414fb92f8220ea60b701bc",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 19.6,
          "commitsBetweenForRepo": 148,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,31 @@\n-  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n+  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n     Map\u003cString, Class\u003c?\u003e\u003e map;\n     \n     synchronized (CACHE_CLASSES) {\n       map \u003d CACHE_CLASSES.get(classLoader);\n       if (map \u003d\u003d null) {\n         map \u003d Collections.synchronizedMap(\n           new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n         CACHE_CLASSES.put(classLoader, map);\n       }\n     }\n \n-    Class\u003c?\u003e clazz \u003d map.get(name);\n-    if (clazz \u003d\u003d null) {\n-      clazz \u003d Class.forName(name, true, classLoader);\n-      if (clazz !\u003d null) {\n-        // two putters can race here, but they\u0027ll put the same class\n-        map.put(name, clazz);\n+    Class\u003c?\u003e clazz \u003d null;\n+    if (!map.containsKey(name)) {\n+      try {\n+        clazz \u003d Class.forName(name, true, classLoader);\n+      } catch (ClassNotFoundException e) {\n+        map.put(name, null); //cache negative that class is not found\n+        return null;\n+      }\n+      // two putters can race here, but they\u0027ll put the same class\n+      map.put(name, clazz);\n+    } else { // check already performed on this class name\n+      clazz \u003d map.get(name);\n+      if (clazz \u003d\u003d null) { // found the negative\n+        return null;\n       }\n     }\n \n     return clazz;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d null;\n    if (!map.containsKey(name)) {\n      try {\n        clazz \u003d Class.forName(name, true, classLoader);\n      } catch (ClassNotFoundException e) {\n        map.put(name, null); //cache negative that class is not found\n        return null;\n      }\n      // two putters can race here, but they\u0027ll put the same class\n      map.put(name, clazz);\n    } else { // check already performed on this class name\n      clazz \u003d map.get(name);\n      if (clazz \u003d\u003d null) { // found the negative\n        return null;\n      }\n    }\n\n    return clazz;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "getClassByName",
            "newValue": "getClassByNameOrNull"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-6502. Improve the performance of Configuration.getClassByName when the class is not found by caching negative results. Contributed by Sharad Agarwal and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1244620 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/02/12 10:10 AM",
          "commitName": "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/01/12 7:42 PM",
          "commitNameOld": "c8bb6f59b8de48f533414fb92f8220ea60b701bc",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 19.6,
          "commitsBetweenForRepo": 148,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,31 @@\n-  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n+  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n     Map\u003cString, Class\u003c?\u003e\u003e map;\n     \n     synchronized (CACHE_CLASSES) {\n       map \u003d CACHE_CLASSES.get(classLoader);\n       if (map \u003d\u003d null) {\n         map \u003d Collections.synchronizedMap(\n           new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n         CACHE_CLASSES.put(classLoader, map);\n       }\n     }\n \n-    Class\u003c?\u003e clazz \u003d map.get(name);\n-    if (clazz \u003d\u003d null) {\n-      clazz \u003d Class.forName(name, true, classLoader);\n-      if (clazz !\u003d null) {\n-        // two putters can race here, but they\u0027ll put the same class\n-        map.put(name, clazz);\n+    Class\u003c?\u003e clazz \u003d null;\n+    if (!map.containsKey(name)) {\n+      try {\n+        clazz \u003d Class.forName(name, true, classLoader);\n+      } catch (ClassNotFoundException e) {\n+        map.put(name, null); //cache negative that class is not found\n+        return null;\n+      }\n+      // two putters can race here, but they\u0027ll put the same class\n+      map.put(name, clazz);\n+    } else { // check already performed on this class name\n+      clazz \u003d map.get(name);\n+      if (clazz \u003d\u003d null) { // found the negative\n+        return null;\n       }\n     }\n \n     return clazz;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d null;\n    if (!map.containsKey(name)) {\n      try {\n        clazz \u003d Class.forName(name, true, classLoader);\n      } catch (ClassNotFoundException e) {\n        map.put(name, null); //cache negative that class is not found\n        return null;\n      }\n      // two putters can race here, but they\u0027ll put the same class\n      map.put(name, clazz);\n    } else { // check already performed on this class name\n      clazz \u003d map.get(name);\n      if (clazz \u003d\u003d null) { // found the negative\n        return null;\n      }\n    }\n\n    return clazz;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "[ClassNotFoundException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6502. Improve the performance of Configuration.getClassByName when the class is not found by caching negative results. Contributed by Sharad Agarwal and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1244620 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/02/12 10:10 AM",
          "commitName": "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/01/12 7:42 PM",
          "commitNameOld": "c8bb6f59b8de48f533414fb92f8220ea60b701bc",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 19.6,
          "commitsBetweenForRepo": 148,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,31 @@\n-  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n+  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n     Map\u003cString, Class\u003c?\u003e\u003e map;\n     \n     synchronized (CACHE_CLASSES) {\n       map \u003d CACHE_CLASSES.get(classLoader);\n       if (map \u003d\u003d null) {\n         map \u003d Collections.synchronizedMap(\n           new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n         CACHE_CLASSES.put(classLoader, map);\n       }\n     }\n \n-    Class\u003c?\u003e clazz \u003d map.get(name);\n-    if (clazz \u003d\u003d null) {\n-      clazz \u003d Class.forName(name, true, classLoader);\n-      if (clazz !\u003d null) {\n-        // two putters can race here, but they\u0027ll put the same class\n-        map.put(name, clazz);\n+    Class\u003c?\u003e clazz \u003d null;\n+    if (!map.containsKey(name)) {\n+      try {\n+        clazz \u003d Class.forName(name, true, classLoader);\n+      } catch (ClassNotFoundException e) {\n+        map.put(name, null); //cache negative that class is not found\n+        return null;\n+      }\n+      // two putters can race here, but they\u0027ll put the same class\n+      map.put(name, clazz);\n+    } else { // check already performed on this class name\n+      clazz \u003d map.get(name);\n+      if (clazz \u003d\u003d null) { // found the negative\n+        return null;\n       }\n     }\n \n     return clazz;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Class\u003c?\u003e getClassByNameOrNull(String name) {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d null;\n    if (!map.containsKey(name)) {\n      try {\n        clazz \u003d Class.forName(name, true, classLoader);\n      } catch (ClassNotFoundException e) {\n        map.put(name, null); //cache negative that class is not found\n        return null;\n      }\n      // two putters can race here, but they\u0027ll put the same class\n      map.put(name, clazz);\n    } else { // check already performed on this class name\n      clazz \u003d map.get(name);\n      if (clazz \u003d\u003d null) { // found the negative\n        return null;\n      }\n    }\n\n    return clazz;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d map.get(name);\n    if (clazz \u003d\u003d null) {\n      clazz \u003d Class.forName(name, true, classLoader);\n      if (clazz !\u003d null) {\n        // two putters can race here, but they\u0027ll put the same class\n        map.put(name, clazz);\n      }\n    }\n\n    return clazz;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d map.get(name);\n    if (clazz \u003d\u003d null) {\n      clazz \u003d Class.forName(name, true, classLoader);\n      if (clazz !\u003d null) {\n        // two putters can race here, but they\u0027ll put the same class\n        map.put(name, clazz);\n      }\n    }\n\n    return clazz;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d map.get(name);\n    if (clazz \u003d\u003d null) {\n      clazz \u003d Class.forName(name, true, classLoader);\n      if (clazz !\u003d null) {\n        // two putters can race here, but they\u0027ll put the same class\n        map.put(name, clazz);\n      }\n    }\n\n    return clazz;\n  }",
      "path": "common/src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "common/src/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "168bf7b71d2e8fc54e316c0b7d739be9de9157a3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6578. Configuration should trim whitespace around a lot of value types. Contributed by Michele Catasta\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1054903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/11 9:28 PM",
      "commitName": "168bf7b71d2e8fc54e316c0b7d739be9de9157a3",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "23/11/10 9:13 PM",
      "commitNameOld": "04f1e7a41874bb93434c91c80544eda24afbb215",
      "commitAuthorOld": "Dhruba Borthakur",
      "daysBetweenCommits": 41.01,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n     Map\u003cString, Class\u003c?\u003e\u003e map;\n     \n     synchronized (CACHE_CLASSES) {\n       map \u003d CACHE_CLASSES.get(classLoader);\n       if (map \u003d\u003d null) {\n         map \u003d Collections.synchronizedMap(\n           new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n         CACHE_CLASSES.put(classLoader, map);\n       }\n     }\n \n-    Class clazz \u003d map.get(name);\n+    Class\u003c?\u003e clazz \u003d map.get(name);\n     if (clazz \u003d\u003d null) {\n       clazz \u003d Class.forName(name, true, classLoader);\n       if (clazz !\u003d null) {\n         // two putters can race here, but they\u0027ll put the same class\n         map.put(name, clazz);\n       }\n     }\n \n     return clazz;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class\u003c?\u003e clazz \u003d map.get(name);\n    if (clazz \u003d\u003d null) {\n      clazz \u003d Class.forName(name, true, classLoader);\n      if (clazz !\u003d null) {\n        // two putters can race here, but they\u0027ll put the same class\n        map.put(name, clazz);\n      }\n    }\n\n    return clazz;\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "f95ec3f5bf12bee07c90943cff3b135e6a7e7a8b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6133. Add a caching layer to Configuration::getClassByName to\nalleviate a performance regression introduced in a compatibility layer.\nContributed by Todd Lipcon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812285 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/09 2:54 PM",
      "commitName": "f95ec3f5bf12bee07c90943cff3b135e6a7e7a8b",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "07/09/09 4:04 AM",
      "commitNameOld": "e24071be0aec7e63a0b73bf01f4bbd9930ece066",
      "commitAuthorOld": "Hemanth Yamijala",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,23 @@\n   public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n-    return Class.forName(name, true, classLoader);\n+    Map\u003cString, Class\u003c?\u003e\u003e map;\n+    \n+    synchronized (CACHE_CLASSES) {\n+      map \u003d CACHE_CLASSES.get(classLoader);\n+      if (map \u003d\u003d null) {\n+        map \u003d Collections.synchronizedMap(\n+          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n+        CACHE_CLASSES.put(classLoader, map);\n+      }\n+    }\n+\n+    Class clazz \u003d map.get(name);\n+    if (clazz \u003d\u003d null) {\n+      clazz \u003d Class.forName(name, true, classLoader);\n+      if (clazz !\u003d null) {\n+        // two putters can race here, but they\u0027ll put the same class\n+        map.put(name, clazz);\n+      }\n+    }\n+\n+    return clazz;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n    Map\u003cString, Class\u003c?\u003e\u003e map;\n    \n    synchronized (CACHE_CLASSES) {\n      map \u003d CACHE_CLASSES.get(classLoader);\n      if (map \u003d\u003d null) {\n        map \u003d Collections.synchronizedMap(\n          new WeakHashMap\u003cString, Class\u003c?\u003e\u003e());\n        CACHE_CLASSES.put(classLoader, map);\n      }\n    }\n\n    Class clazz \u003d map.get(name);\n    if (clazz \u003d\u003d null) {\n      clazz \u003d Class.forName(name, true, classLoader);\n      if (clazz !\u003d null) {\n        // two putters can race here, but they\u0027ll put the same class\n        map.put(name, clazz);\n      }\n    }\n\n    return clazz;\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,3 @@\n+  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n+    return Class.forName(name, true, classLoader);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Class\u003c?\u003e getClassByName(String name) throws ClassNotFoundException {\n    return Class.forName(name, true, classLoader);\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}