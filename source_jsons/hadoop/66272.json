{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RumenToSLSConverter.java",
  "functionName": "createSLSTasks",
  "functionId": "createSLSTasks___taskType-String__rumenTasks-List__offset-long",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java",
  "functionStartLine": 201,
  "functionEndLine": 232,
  "numCommitsSeen": 6,
  "timeTaken": 471,
  "changeHistory": [
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,32 @@\n+  private static List createSLSTasks(String taskType,\n+                                     List rumenTasks, long offset) {\n+    int priority \u003d taskType.equals(\"reduce\") ? 10 : 20;\n+    List array \u003d new ArrayList();\n+    for (Object e : rumenTasks) {\n+      Map rumenTask \u003d (Map) e;\n+      for (Object ee : (List) rumenTask.get(\"attempts\"))  {\n+        Map rumenAttempt \u003d (Map) ee;\n+        long taskStart \u003d (Long) rumenAttempt.get(\"startTime\");\n+        long taskFinish \u003d (Long) rumenAttempt.get(\"finishTime\");\n+        String hostname \u003d (String) rumenAttempt.get(\"hostName\");\n+        taskStart \u003d taskStart - baseline + offset;\n+        taskFinish \u003d taskFinish - baseline + offset;\n+        Map task \u003d new LinkedHashMap();\n+        task.put(\"container.host\", hostname);\n+        task.put(\"container.start.ms\", taskStart);\n+        task.put(\"container.end.ms\", taskFinish);\n+        task.put(\"container.priority\", priority);\n+        task.put(\"container.type\", taskType);\n+        array.add(task);\n+        String rackHost[] \u003d SLSUtils.getRackHostName(hostname);\n+        if (rackNodeMap.containsKey(rackHost[0])) {\n+          rackNodeMap.get(rackHost[0]).add(rackHost[1]);\n+        } else {\n+          Set\u003cString\u003e hosts \u003d new TreeSet\u003cString\u003e();\n+          hosts.add(rackHost[1]);\n+          rackNodeMap.put(rackHost[0], hosts);\n+        }\n+      }\n+    }\n+    return array;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static List createSLSTasks(String taskType,\n                                     List rumenTasks, long offset) {\n    int priority \u003d taskType.equals(\"reduce\") ? 10 : 20;\n    List array \u003d new ArrayList();\n    for (Object e : rumenTasks) {\n      Map rumenTask \u003d (Map) e;\n      for (Object ee : (List) rumenTask.get(\"attempts\"))  {\n        Map rumenAttempt \u003d (Map) ee;\n        long taskStart \u003d (Long) rumenAttempt.get(\"startTime\");\n        long taskFinish \u003d (Long) rumenAttempt.get(\"finishTime\");\n        String hostname \u003d (String) rumenAttempt.get(\"hostName\");\n        taskStart \u003d taskStart - baseline + offset;\n        taskFinish \u003d taskFinish - baseline + offset;\n        Map task \u003d new LinkedHashMap();\n        task.put(\"container.host\", hostname);\n        task.put(\"container.start.ms\", taskStart);\n        task.put(\"container.end.ms\", taskFinish);\n        task.put(\"container.priority\", priority);\n        task.put(\"container.type\", taskType);\n        array.add(task);\n        String rackHost[] \u003d SLSUtils.getRackHostName(hostname);\n        if (rackNodeMap.containsKey(rackHost[0])) {\n          rackNodeMap.get(rackHost[0]).add(rackHost[1]);\n        } else {\n          Set\u003cString\u003e hosts \u003d new TreeSet\u003cString\u003e();\n          hosts.add(rackHost[1]);\n          rackNodeMap.put(rackHost[0], hosts);\n        }\n      }\n    }\n    return array;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java"
    }
  }
}