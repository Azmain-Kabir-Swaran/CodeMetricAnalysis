{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageSerialization.java",
  "functionName": "readCachePoolInfo",
  "functionId": "readCachePoolInfo___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
  "functionStartLine": 667,
  "functionEndLine": 694,
  "numCommitsSeen": 62,
  "timeTaken": 3249,
  "changeHistory": [
    "01643020d24b606c26cb2dcaefdb6e47a5f06c8f",
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
    "991c453ca3ac141a3f286f74af8401f83c38b230"
  ],
  "changeHistoryShort": {
    "01643020d24b606c26cb2dcaefdb6e47a5f06c8f": "Ybodychange",
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": "Ybodychange",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": "Ybodychange",
    "991c453ca3ac141a3f286f74af8401f83c38b230": "Yintroduced"
  },
  "changeHistoryDetails": {
    "01643020d24b606c26cb2dcaefdb6e47a5f06c8f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10555: Unable to loadFSEdits due to a failure in readCachePoolInfo. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "22/06/16 10:06 PM",
      "commitName": "01643020d24b606c26cb2dcaefdb6e47a5f06c8f",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "20/06/16 10:42 AM",
      "commitNameOld": "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 2.47,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static CachePoolInfo readCachePoolInfo(DataInput in)\n       throws IOException {\n     String poolName \u003d readString(in);\n     CachePoolInfo info \u003d new CachePoolInfo(poolName);\n     int flags \u003d readInt(in);\n     if ((flags \u0026 0x1) !\u003d 0) {\n       info.setOwnerName(readString(in));\n     }\n     if ((flags \u0026 0x2) !\u003d 0)  {\n       info.setGroupName(readString(in));\n     }\n     if ((flags \u0026 0x4) !\u003d 0) {\n       info.setMode(FsPermission.read(in));\n     }\n     if ((flags \u0026 0x8) !\u003d 0) {\n       info.setLimit(readLong(in));\n     }\n     if ((flags \u0026 0x10) !\u003d 0) {\n       info.setMaxRelativeExpiryMs(readLong(in));\n     }\n     if ((flags \u0026 0x20) !\u003d 0) {\n       info.setDefaultReplication(readShort(in));\n     }\n-    if ((flags \u0026 ~0x2F) !\u003d 0) {\n+    if ((flags \u0026 ~0x3F) !\u003d 0) {\n       throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo readCachePoolInfo(DataInput in)\n      throws IOException {\n    String poolName \u003d readString(in);\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    int flags \u003d readInt(in);\n    if ((flags \u0026 0x1) !\u003d 0) {\n      info.setOwnerName(readString(in));\n    }\n    if ((flags \u0026 0x2) !\u003d 0)  {\n      info.setGroupName(readString(in));\n    }\n    if ((flags \u0026 0x4) !\u003d 0) {\n      info.setMode(FsPermission.read(in));\n    }\n    if ((flags \u0026 0x8) !\u003d 0) {\n      info.setLimit(readLong(in));\n    }\n    if ((flags \u0026 0x10) !\u003d 0) {\n      info.setMaxRelativeExpiryMs(readLong(in));\n    }\n    if ((flags \u0026 0x20) !\u003d 0) {\n      info.setDefaultReplication(readShort(in));\n    }\n    if ((flags \u0026 ~0x3F) !\u003d 0) {\n      throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10328. Add per-cache-pool default replication num configuration (xupeng via cmccabe)\n",
      "commitDate": "20/06/16 10:42 AM",
      "commitName": "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "01/09/15 2:30 PM",
      "commitNameOld": "ab56fcdb1219d03713b408dd3a95d7405635254d",
      "commitAuthorOld": "",
      "daysBetweenCommits": 292.84,
      "commitsBetweenForRepo": 1951,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public static CachePoolInfo readCachePoolInfo(DataInput in)\n       throws IOException {\n     String poolName \u003d readString(in);\n     CachePoolInfo info \u003d new CachePoolInfo(poolName);\n     int flags \u003d readInt(in);\n     if ((flags \u0026 0x1) !\u003d 0) {\n       info.setOwnerName(readString(in));\n     }\n     if ((flags \u0026 0x2) !\u003d 0)  {\n       info.setGroupName(readString(in));\n     }\n     if ((flags \u0026 0x4) !\u003d 0) {\n       info.setMode(FsPermission.read(in));\n     }\n     if ((flags \u0026 0x8) !\u003d 0) {\n       info.setLimit(readLong(in));\n     }\n     if ((flags \u0026 0x10) !\u003d 0) {\n       info.setMaxRelativeExpiryMs(readLong(in));\n     }\n-    if ((flags \u0026 ~0x1F) !\u003d 0) {\n+    if ((flags \u0026 0x20) !\u003d 0) {\n+      info.setDefaultReplication(readShort(in));\n+    }\n+    if ((flags \u0026 ~0x2F) !\u003d 0) {\n       throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo readCachePoolInfo(DataInput in)\n      throws IOException {\n    String poolName \u003d readString(in);\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    int flags \u003d readInt(in);\n    if ((flags \u0026 0x1) !\u003d 0) {\n      info.setOwnerName(readString(in));\n    }\n    if ((flags \u0026 0x2) !\u003d 0)  {\n      info.setGroupName(readString(in));\n    }\n    if ((flags \u0026 0x4) !\u003d 0) {\n      info.setMode(FsPermission.read(in));\n    }\n    if ((flags \u0026 0x8) !\u003d 0) {\n      info.setLimit(readLong(in));\n    }\n    if ((flags \u0026 0x10) !\u003d 0) {\n      info.setMaxRelativeExpiryMs(readLong(in));\n    }\n    if ((flags \u0026 0x20) !\u003d 0) {\n      info.setDefaultReplication(readShort(in));\n    }\n    if ((flags \u0026 ~0x2F) !\u003d 0) {\n      throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5636. Enforce a max TTL per cache pool (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 3:27 PM",
      "commitName": "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "17/12/13 10:47 AM",
      "commitNameOld": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   public static CachePoolInfo readCachePoolInfo(DataInput in)\n       throws IOException {\n     String poolName \u003d readString(in);\n     CachePoolInfo info \u003d new CachePoolInfo(poolName);\n     int flags \u003d readInt(in);\n     if ((flags \u0026 0x1) !\u003d 0) {\n       info.setOwnerName(readString(in));\n     }\n     if ((flags \u0026 0x2) !\u003d 0)  {\n       info.setGroupName(readString(in));\n     }\n     if ((flags \u0026 0x4) !\u003d 0) {\n       info.setMode(FsPermission.read(in));\n     }\n     if ((flags \u0026 0x8) !\u003d 0) {\n       info.setLimit(readLong(in));\n     }\n-    if ((flags \u0026 ~0xF) !\u003d 0) {\n+    if ((flags \u0026 0x10) !\u003d 0) {\n+      info.setMaxRelativeExpiryMs(readLong(in));\n+    }\n+    if ((flags \u0026 ~0x1F) !\u003d 0) {\n       throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo readCachePoolInfo(DataInput in)\n      throws IOException {\n    String poolName \u003d readString(in);\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    int flags \u003d readInt(in);\n    if ((flags \u0026 0x1) !\u003d 0) {\n      info.setOwnerName(readString(in));\n    }\n    if ((flags \u0026 0x2) !\u003d 0)  {\n      info.setGroupName(readString(in));\n    }\n    if ((flags \u0026 0x4) !\u003d 0) {\n      info.setMode(FsPermission.read(in));\n    }\n    if ((flags \u0026 0x8) !\u003d 0) {\n      info.setLimit(readLong(in));\n    }\n    if ((flags \u0026 0x10) !\u003d 0) {\n      info.setMaxRelativeExpiryMs(readLong(in));\n    }\n    if ((flags \u0026 ~0x1F) !\u003d 0) {\n      throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "991c453ca3ac141a3f286f74af8401f83c38b230": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 10:47 AM",
      "commitName": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,22 @@\n+  public static CachePoolInfo readCachePoolInfo(DataInput in)\n+      throws IOException {\n+    String poolName \u003d readString(in);\n+    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n+    int flags \u003d readInt(in);\n+    if ((flags \u0026 0x1) !\u003d 0) {\n+      info.setOwnerName(readString(in));\n+    }\n+    if ((flags \u0026 0x2) !\u003d 0)  {\n+      info.setGroupName(readString(in));\n+    }\n+    if ((flags \u0026 0x4) !\u003d 0) {\n+      info.setMode(FsPermission.read(in));\n+    }\n+    if ((flags \u0026 0x8) !\u003d 0) {\n+      info.setLimit(readLong(in));\n+    }\n+    if ((flags \u0026 ~0xF) !\u003d 0) {\n+      throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n+    }\n+    return info;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo readCachePoolInfo(DataInput in)\n      throws IOException {\n    String poolName \u003d readString(in);\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    int flags \u003d readInt(in);\n    if ((flags \u0026 0x1) !\u003d 0) {\n      info.setOwnerName(readString(in));\n    }\n    if ((flags \u0026 0x2) !\u003d 0)  {\n      info.setGroupName(readString(in));\n    }\n    if ((flags \u0026 0x4) !\u003d 0) {\n      info.setMode(FsPermission.read(in));\n    }\n    if ((flags \u0026 0x8) !\u003d 0) {\n      info.setLimit(readLong(in));\n    }\n    if ((flags \u0026 ~0xF) !\u003d 0) {\n      throw new IOException(\"Unknown flag in CachePoolInfo: \" + flags);\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java"
    }
  }
}