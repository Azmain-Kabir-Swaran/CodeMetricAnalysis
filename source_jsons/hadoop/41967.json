{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SubmissionContextPreProcessor.java",
  "functionName": "start",
  "functionId": "start___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/preprocessor/SubmissionContextPreProcessor.java",
  "functionStartLine": 74,
  "functionEndLine": 107,
  "numCommitsSeen": 1,
  "timeTaken": 972,
  "changeHistory": [
    "e7d44e48f708ba41e14d2a9e32a6760a62617485"
  ],
  "changeHistoryShort": {
    "e7d44e48f708ba41e14d2a9e32a6760a62617485": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e7d44e48f708ba41e14d2a9e32a6760a62617485": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9761. Allow overriding application submissions based on server side configs. Contributed by Pralabh Kumar\n",
      "commitDate": "06/09/19 10:17 AM",
      "commitName": "e7d44e48f708ba41e14d2a9e32a6760a62617485",
      "commitAuthor": "Jonathan Hung",
      "diff": "@@ -0,0 +1,34 @@\n+  public void start(Configuration conf) {\n+    this.hostsFilePath \u003d\n+        conf.get(\n+            YarnConfiguration.RM_SUBMISSION_PREPROCESSOR_FILE_PATH,\n+            YarnConfiguration.DEFAULT_RM_SUBMISSION_PREPROCESSOR_FILE_PATH);\n+    int refreshPeriod \u003d\n+        conf.getInt(\n+            YarnConfiguration.RM_SUBMISSION_PREPROCESSOR_REFRESH_INTERVAL_MS,\n+            YarnConfiguration.\n+                DEFAULT_RM_SUBMISSION_PREPROCESSOR_REFRESH_INTERVAL_MS);\n+\n+    LOG.info(\"Submission Context Preprocessor enabled: file\u003d[{}], \"\n+            + \"interval\u003d[{}]\", this.hostsFilePath, refreshPeriod);\n+\n+    executorService \u003d Executors.newSingleThreadScheduledExecutor();\n+    Runnable refreshConf \u003d new Runnable() {\n+      @Override\n+      public void run() {\n+        try {\n+          refresh();\n+        } catch (Exception ex) {\n+          LOG.error(\"Error while refreshing Submission PreProcessor file [{}]\",\n+              hostsFilePath, ex);\n+        }\n+      }\n+    };\n+    if (refreshPeriod \u003e 0) {\n+      executorService.scheduleAtFixedRate(refreshConf, INITIAL_DELAY,\n+          refreshPeriod, TimeUnit.MILLISECONDS);\n+    } else {\n+      executorService.schedule(refreshConf, INITIAL_DELAY,\n+          TimeUnit.MILLISECONDS);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start(Configuration conf) {\n    this.hostsFilePath \u003d\n        conf.get(\n            YarnConfiguration.RM_SUBMISSION_PREPROCESSOR_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_SUBMISSION_PREPROCESSOR_FILE_PATH);\n    int refreshPeriod \u003d\n        conf.getInt(\n            YarnConfiguration.RM_SUBMISSION_PREPROCESSOR_REFRESH_INTERVAL_MS,\n            YarnConfiguration.\n                DEFAULT_RM_SUBMISSION_PREPROCESSOR_REFRESH_INTERVAL_MS);\n\n    LOG.info(\"Submission Context Preprocessor enabled: file\u003d[{}], \"\n            + \"interval\u003d[{}]\", this.hostsFilePath, refreshPeriod);\n\n    executorService \u003d Executors.newSingleThreadScheduledExecutor();\n    Runnable refreshConf \u003d new Runnable() {\n      @Override\n      public void run() {\n        try {\n          refresh();\n        } catch (Exception ex) {\n          LOG.error(\"Error while refreshing Submission PreProcessor file [{}]\",\n              hostsFilePath, ex);\n        }\n      }\n    };\n    if (refreshPeriod \u003e 0) {\n      executorService.scheduleAtFixedRate(refreshConf, INITIAL_DELAY,\n          refreshPeriod, TimeUnit.MILLISECONDS);\n    } else {\n      executorService.schedule(refreshConf, INITIAL_DELAY,\n          TimeUnit.MILLISECONDS);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/preprocessor/SubmissionContextPreProcessor.java"
    }
  }
}