{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AvailableSpaceBlockPlacementPolicy.java",
  "functionName": "initialize",
  "functionId": "initialize___conf-Configuration__stats-FSClusterStats__clusterMap-NetworkTopology__host2datanodeMap-Host2NodesMap",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
  "functionStartLine": 53,
  "functionEndLine": 81,
  "numCommitsSeen": 7,
  "timeTaken": 1394,
  "changeHistory": [
    "cebce0a348d60ded20eb4a55d1c26ee20017ed17",
    "de30d66b2673d0344346fb985e786247ca682317"
  ],
  "changeHistoryShort": {
    "cebce0a348d60ded20eb4a55d1c26ee20017ed17": "Ybodychange",
    "de30d66b2673d0344346fb985e786247ca682317": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cebce0a348d60ded20eb4a55d1c26ee20017ed17": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14578. AvailableSpaceBlockPlacementPolicy always prefers local node. Contributed by Ayush Saxena.\n",
      "commitDate": "10/01/20 8:59 PM",
      "commitName": "cebce0a348d60ded20eb4a55d1c26ee20017ed17",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 491.3,
      "commitsBetweenForRepo": 3510,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n   public void initialize(Configuration conf, FSClusterStats stats,\n       NetworkTopology clusterMap, Host2NodesMap host2datanodeMap) {\n     super.initialize(conf, stats, clusterMap, host2datanodeMap);\n     float balancedPreferencePercent \u003d\n         conf.getFloat(\n           DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY,\n           DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT);\n \n     LOG.info(\"Available space block placement policy initialized: \"\n         + DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n         + \" \u003d \" + balancedPreferencePercent);\n \n+    optimizeLocal \u003d conf.getBoolean(\n+        DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCE_LOCAL_NODE_KEY,\n+        DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCE_LOCAL_NODE_DEFAULT);\n+\n     if (balancedPreferencePercent \u003e 1.0) {\n       LOG.warn(\"The value of \"\n           + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n           + \" is greater than 1.0 but should be in the range 0.0 - 1.0\");\n     }\n     if (balancedPreferencePercent \u003c 0.5) {\n       LOG.warn(\"The value of \"\n           + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n           + \" is less than 0.5 so datanodes with more used percent will\"\n           + \" receive  more block allocations.\");\n     }\n     balancedPreference \u003d (int) (100 * balancedPreferencePercent);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf, FSClusterStats stats,\n      NetworkTopology clusterMap, Host2NodesMap host2datanodeMap) {\n    super.initialize(conf, stats, clusterMap, host2datanodeMap);\n    float balancedPreferencePercent \u003d\n        conf.getFloat(\n          DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY,\n          DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT);\n\n    LOG.info(\"Available space block placement policy initialized: \"\n        + DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n        + \" \u003d \" + balancedPreferencePercent);\n\n    optimizeLocal \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCE_LOCAL_NODE_KEY,\n        DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCE_LOCAL_NODE_DEFAULT);\n\n    if (balancedPreferencePercent \u003e 1.0) {\n      LOG.warn(\"The value of \"\n          + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n          + \" is greater than 1.0 but should be in the range 0.0 - 1.0\");\n    }\n    if (balancedPreferencePercent \u003c 0.5) {\n      LOG.warn(\"The value of \"\n          + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n          + \" is less than 0.5 so datanodes with more used percent will\"\n          + \" receive  more block allocations.\");\n    }\n    balancedPreference \u003d (int) (100 * balancedPreferencePercent);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
      "extendedDetails": {}
    },
    "de30d66b2673d0344346fb985e786247ca682317": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8131. Implement a space balanced block placement policy. Contributed by Liu Shaohui.\n",
      "commitDate": "19/05/15 6:04 AM",
      "commitName": "de30d66b2673d0344346fb985e786247ca682317",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,25 @@\n+  public void initialize(Configuration conf, FSClusterStats stats,\n+      NetworkTopology clusterMap, Host2NodesMap host2datanodeMap) {\n+    super.initialize(conf, stats, clusterMap, host2datanodeMap);\n+    float balancedPreferencePercent \u003d\n+        conf.getFloat(\n+          DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY,\n+          DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT);\n+\n+    LOG.info(\"Available space block placement policy initialized: \"\n+        + DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n+        + \" \u003d \" + balancedPreferencePercent);\n+\n+    if (balancedPreferencePercent \u003e 1.0) {\n+      LOG.warn(\"The value of \"\n+          + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n+          + \" is greater than 1.0 but should be in the range 0.0 - 1.0\");\n+    }\n+    if (balancedPreferencePercent \u003c 0.5) {\n+      LOG.warn(\"The value of \"\n+          + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n+          + \" is less than 0.5 so datanodes with more used percent will\"\n+          + \" receive  more block allocations.\");\n+    }\n+    balancedPreference \u003d (int) (100 * balancedPreferencePercent);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf, FSClusterStats stats,\n      NetworkTopology clusterMap, Host2NodesMap host2datanodeMap) {\n    super.initialize(conf, stats, clusterMap, host2datanodeMap);\n    float balancedPreferencePercent \u003d\n        conf.getFloat(\n          DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY,\n          DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT);\n\n    LOG.info(\"Available space block placement policy initialized: \"\n        + DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n        + \" \u003d \" + balancedPreferencePercent);\n\n    if (balancedPreferencePercent \u003e 1.0) {\n      LOG.warn(\"The value of \"\n          + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n          + \" is greater than 1.0 but should be in the range 0.0 - 1.0\");\n    }\n    if (balancedPreferencePercent \u003c 0.5) {\n      LOG.warn(\"The value of \"\n          + DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n          + \" is less than 0.5 so datanodes with more used percent will\"\n          + \" receive  more block allocations.\");\n    }\n    balancedPreference \u003d (int) (100 * balancedPreferencePercent);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java"
    }
  }
}