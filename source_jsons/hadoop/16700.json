{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterRpcServer.java",
  "functionName": "getLocationsForPath",
  "functionId": "getLocationsForPath___path-String__failIfLocked-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
  "functionStartLine": 1473,
  "functionEndLine": 1476,
  "numCommitsSeen": 75,
  "timeTaken": 5534,
  "changeHistory": [
    "e9b9f48dad5ebb58ee529f918723089e8356c480",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "d98a2e6e2383f8b66def346409b0517aa32d298d",
    "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30",
    "bc9e588a19c0aaf518de8dab719362be4a8d6a54",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7"
  ],
  "changeHistoryShort": {
    "e9b9f48dad5ebb58ee529f918723089e8356c480": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "d98a2e6e2383f8b66def346409b0517aa32d298d": "Ymultichange(Ymodifierchange,Ybodychange)",
    "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30": "Ybodychange",
    "bc9e588a19c0aaf518de8dab719362be4a8d6a54": "Ybodychange",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e9b9f48dad5ebb58ee529f918723089e8356c480": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13380. RBF: mv/rm fail after the directory exceeded the quota limit. Contributed by Yiqun Lin.\n",
      "commitDate": "09/04/18 10:09 AM",
      "commitName": "e9b9f48dad5ebb58ee529f918723089e8356c480",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/04/18 12:08 AM",
      "commitNameOld": "2be64eb201134502a92f7239bef8aa780771ca0b",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 6.42,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,4 @@\n-  protected List\u003cRemoteLocation\u003e getLocationsForPath(\n-      String path, boolean failIfLocked) throws IOException {\n-    try {\n-      // Check the location for this path\n-      final PathLocation location \u003d\n-          this.subclusterResolver.getDestinationForPath(path);\n-      if (location \u003d\u003d null) {\n-        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n-            this.subclusterResolver);\n-      }\n-\n-      // We may block some write operations\n-      if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n-        // Check if the path is in a read only mount point\n-        if (isPathReadOnly(path)) {\n-          if (this.rpcMonitor !\u003d null) {\n-            this.rpcMonitor.routerFailureReadOnly();\n-          }\n-          throw new IOException(path + \" is in a read only mount point\");\n-        }\n-\n-        // Check quota\n-        if (this.router.isQuotaEnabled()) {\n-          RouterQuotaUsage quotaUsage \u003d this.router.getQuotaManager()\n-              .getQuotaUsage(path);\n-          if (quotaUsage !\u003d null) {\n-            quotaUsage.verifyNamespaceQuota();\n-            quotaUsage.verifyStoragespaceQuota();\n-          }\n-        }\n-      }\n-\n-      return location.getDestinations();\n-    } catch (IOException ioe) {\n-      if (this.rpcMonitor !\u003d null) {\n-        this.rpcMonitor.routerFailureStateStore();\n-      }\n-      throw ioe;\n-    }\n+  protected List\u003cRemoteLocation\u003e getLocationsForPath(String path,\n+      boolean failIfLocked) throws IOException {\n+    return getLocationsForPath(path, failIfLocked, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cRemoteLocation\u003e getLocationsForPath(String path,\n      boolean failIfLocked) throws IOException {\n    return getLocationsForPath(path, failIfLocked, true);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected List\u003cRemoteLocation\u003e getLocationsForPath(\n      String path, boolean failIfLocked) throws IOException {\n    try {\n      // Check the location for this path\n      final PathLocation location \u003d\n          this.subclusterResolver.getDestinationForPath(path);\n      if (location \u003d\u003d null) {\n        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n            this.subclusterResolver);\n      }\n\n      // We may block some write operations\n      if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n        // Check if the path is in a read only mount point\n        if (isPathReadOnly(path)) {\n          if (this.rpcMonitor !\u003d null) {\n            this.rpcMonitor.routerFailureReadOnly();\n          }\n          throw new IOException(path + \" is in a read only mount point\");\n        }\n\n        // Check quota\n        if (this.router.isQuotaEnabled()) {\n          RouterQuotaUsage quotaUsage \u003d this.router.getQuotaManager()\n              .getQuotaUsage(path);\n          if (quotaUsage !\u003d null) {\n            quotaUsage.verifyNamespaceQuota();\n            quotaUsage.verifyStoragespaceQuota();\n          }\n        }\n      }\n\n      return location.getDestinations();\n    } catch (IOException ioe) {\n      if (this.rpcMonitor !\u003d null) {\n        this.rpcMonitor.routerFailureStateStore();\n      }\n      throw ioe;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
      }
    },
    "d98a2e6e2383f8b66def346409b0517aa32d298d": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
      "commitDate": "09/01/18 9:59 PM",
      "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthor": "Yiqun Lin",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
          "commitDate": "09/01/18 9:59 PM",
          "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "05/01/18 10:31 PM",
          "commitNameOld": "bf5c94899537011465350d5d999fad9ffaeb605d",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 3.98,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,40 @@\n-  private List\u003cRemoteLocation\u003e getLocationsForPath(\n+  protected List\u003cRemoteLocation\u003e getLocationsForPath(\n       String path, boolean failIfLocked) throws IOException {\n     try {\n       // Check the location for this path\n       final PathLocation location \u003d\n           this.subclusterResolver.getDestinationForPath(path);\n       if (location \u003d\u003d null) {\n         throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n             this.subclusterResolver);\n       }\n \n       // We may block some write operations\n       if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n         // Check if the path is in a read only mount point\n         if (isPathReadOnly(path)) {\n           if (this.rpcMonitor !\u003d null) {\n             this.rpcMonitor.routerFailureReadOnly();\n           }\n           throw new IOException(path + \" is in a read only mount point\");\n         }\n+\n+        // Check quota\n+        if (this.router.isQuotaEnabled()) {\n+          RouterQuotaUsage quotaUsage \u003d this.router.getQuotaManager()\n+              .getQuotaUsage(path);\n+          if (quotaUsage !\u003d null) {\n+            quotaUsage.verifyNamespaceQuota();\n+            quotaUsage.verifyStoragespaceQuota();\n+          }\n+        }\n       }\n \n       return location.getDestinations();\n     } catch (IOException ioe) {\n       if (this.rpcMonitor !\u003d null) {\n         this.rpcMonitor.routerFailureStateStore();\n       }\n       throw ioe;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected List\u003cRemoteLocation\u003e getLocationsForPath(\n      String path, boolean failIfLocked) throws IOException {\n    try {\n      // Check the location for this path\n      final PathLocation location \u003d\n          this.subclusterResolver.getDestinationForPath(path);\n      if (location \u003d\u003d null) {\n        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n            this.subclusterResolver);\n      }\n\n      // We may block some write operations\n      if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n        // Check if the path is in a read only mount point\n        if (isPathReadOnly(path)) {\n          if (this.rpcMonitor !\u003d null) {\n            this.rpcMonitor.routerFailureReadOnly();\n          }\n          throw new IOException(path + \" is in a read only mount point\");\n        }\n\n        // Check quota\n        if (this.router.isQuotaEnabled()) {\n          RouterQuotaUsage quotaUsage \u003d this.router.getQuotaManager()\n              .getQuotaUsage(path);\n          if (quotaUsage !\u003d null) {\n            quotaUsage.verifyNamespaceQuota();\n            quotaUsage.verifyStoragespaceQuota();\n          }\n        }\n      }\n\n      return location.getDestinations();\n    } catch (IOException ioe) {\n      if (this.rpcMonitor !\u003d null) {\n        this.rpcMonitor.routerFailureStateStore();\n      }\n      throw ioe;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
          "commitDate": "09/01/18 9:59 PM",
          "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "05/01/18 10:31 PM",
          "commitNameOld": "bf5c94899537011465350d5d999fad9ffaeb605d",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 3.98,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,40 @@\n-  private List\u003cRemoteLocation\u003e getLocationsForPath(\n+  protected List\u003cRemoteLocation\u003e getLocationsForPath(\n       String path, boolean failIfLocked) throws IOException {\n     try {\n       // Check the location for this path\n       final PathLocation location \u003d\n           this.subclusterResolver.getDestinationForPath(path);\n       if (location \u003d\u003d null) {\n         throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n             this.subclusterResolver);\n       }\n \n       // We may block some write operations\n       if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n         // Check if the path is in a read only mount point\n         if (isPathReadOnly(path)) {\n           if (this.rpcMonitor !\u003d null) {\n             this.rpcMonitor.routerFailureReadOnly();\n           }\n           throw new IOException(path + \" is in a read only mount point\");\n         }\n+\n+        // Check quota\n+        if (this.router.isQuotaEnabled()) {\n+          RouterQuotaUsage quotaUsage \u003d this.router.getQuotaManager()\n+              .getQuotaUsage(path);\n+          if (quotaUsage !\u003d null) {\n+            quotaUsage.verifyNamespaceQuota();\n+            quotaUsage.verifyStoragespaceQuota();\n+          }\n+        }\n       }\n \n       return location.getDestinations();\n     } catch (IOException ioe) {\n       if (this.rpcMonitor !\u003d null) {\n         this.rpcMonitor.routerFailureStateStore();\n       }\n       throw ioe;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected List\u003cRemoteLocation\u003e getLocationsForPath(\n      String path, boolean failIfLocked) throws IOException {\n    try {\n      // Check the location for this path\n      final PathLocation location \u003d\n          this.subclusterResolver.getDestinationForPath(path);\n      if (location \u003d\u003d null) {\n        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n            this.subclusterResolver);\n      }\n\n      // We may block some write operations\n      if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n        // Check if the path is in a read only mount point\n        if (isPathReadOnly(path)) {\n          if (this.rpcMonitor !\u003d null) {\n            this.rpcMonitor.routerFailureReadOnly();\n          }\n          throw new IOException(path + \" is in a read only mount point\");\n        }\n\n        // Check quota\n        if (this.router.isQuotaEnabled()) {\n          RouterQuotaUsage quotaUsage \u003d this.router.getQuotaManager()\n              .getQuotaUsage(path);\n          if (quotaUsage !\u003d null) {\n            quotaUsage.verifyNamespaceQuota();\n            quotaUsage.verifyStoragespaceQuota();\n          }\n        }\n      }\n\n      return location.getDestinations();\n    } catch (IOException ioe) {\n      if (this.rpcMonitor !\u003d null) {\n        this.rpcMonitor.routerFailureStateStore();\n      }\n      throw ioe;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12875. RBF: Complete logic for -readonly option of dfsrouteradmin add command. Contributed by Inigo Goiri.\n",
      "commitDate": "11/12/17 3:14 PM",
      "commitName": "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "30/11/17 12:18 PM",
      "commitNameOld": "b1c7654ee40b372ed777525a42981c7cf55b5c72",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 11.12,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,30 @@\n   private List\u003cRemoteLocation\u003e getLocationsForPath(\n       String path, boolean failIfLocked) throws IOException {\n     try {\n       // Check the location for this path\n       final PathLocation location \u003d\n           this.subclusterResolver.getDestinationForPath(path);\n       if (location \u003d\u003d null) {\n         throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n             this.subclusterResolver);\n       }\n \n+      // We may block some write operations\n+      if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n+        // Check if the path is in a read only mount point\n+        if (isPathReadOnly(path)) {\n+          if (this.rpcMonitor !\u003d null) {\n+            this.rpcMonitor.routerFailureReadOnly();\n+          }\n+          throw new IOException(path + \" is in a read only mount point\");\n+        }\n+      }\n+\n       return location.getDestinations();\n     } catch (IOException ioe) {\n       if (this.rpcMonitor !\u003d null) {\n         this.rpcMonitor.routerFailureStateStore();\n       }\n       throw ioe;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getLocationsForPath(\n      String path, boolean failIfLocked) throws IOException {\n    try {\n      // Check the location for this path\n      final PathLocation location \u003d\n          this.subclusterResolver.getDestinationForPath(path);\n      if (location \u003d\u003d null) {\n        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n            this.subclusterResolver);\n      }\n\n      // We may block some write operations\n      if (opCategory.get() \u003d\u003d OperationCategory.WRITE) {\n        // Check if the path is in a read only mount point\n        if (isPathReadOnly(path)) {\n          if (this.rpcMonitor !\u003d null) {\n            this.rpcMonitor.routerFailureReadOnly();\n          }\n          throw new IOException(path + \" is in a read only mount point\");\n        }\n      }\n\n      return location.getDestinations();\n    } catch (IOException ioe) {\n      if (this.rpcMonitor !\u003d null) {\n        this.rpcMonitor.routerFailureStateStore();\n      }\n      throw ioe;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "bc9e588a19c0aaf518de8dab719362be4a8d6a54": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12335. Federation Metrics. Contributed by Inigo Goiri.\n\n(cherry picked from commit 3b19e77752afce87936f5c0d1e6d272fba798d7b)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "bc9e588a19c0aaf518de8dab719362be4a8d6a54",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/10/17 6:50 PM",
      "commitNameOld": "cc58e7a983d8f1351089462f531993f7b4f0a9c5",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,19 @@\n   private List\u003cRemoteLocation\u003e getLocationsForPath(\n       String path, boolean failIfLocked) throws IOException {\n-    // Check the location for this path\n-    final PathLocation location \u003d\n-        this.subclusterResolver.getDestinationForPath(path);\n-    if (location \u003d\u003d null) {\n-      throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n-          this.subclusterResolver);\n-    }\n+    try {\n+      // Check the location for this path\n+      final PathLocation location \u003d\n+          this.subclusterResolver.getDestinationForPath(path);\n+      if (location \u003d\u003d null) {\n+        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n+            this.subclusterResolver);\n+      }\n \n-    // Log the access to a path\n-    return location.getDestinations();\n+      return location.getDestinations();\n+    } catch (IOException ioe) {\n+      if (this.rpcMonitor !\u003d null) {\n+        this.rpcMonitor.routerFailureStateStore();\n+      }\n+      throw ioe;\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getLocationsForPath(\n      String path, boolean failIfLocked) throws IOException {\n    try {\n      // Check the location for this path\n      final PathLocation location \u003d\n          this.subclusterResolver.getDestinationForPath(path);\n      if (location \u003d\u003d null) {\n        throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n            this.subclusterResolver);\n      }\n\n      return location.getDestinations();\n    } catch (IOException ioe) {\n      if (this.rpcMonitor !\u003d null) {\n        this.rpcMonitor.routerFailureStateStore();\n      }\n      throw ioe;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11546. Federation Router RPC server. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 8a9cdebebf26841a0f1e99fb08135f4597f2eba2)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "ca4f209b49e3aad6a80306f7342c9b6b560a79a7",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,13 @@\n+  private List\u003cRemoteLocation\u003e getLocationsForPath(\n+      String path, boolean failIfLocked) throws IOException {\n+    // Check the location for this path\n+    final PathLocation location \u003d\n+        this.subclusterResolver.getDestinationForPath(path);\n+    if (location \u003d\u003d null) {\n+      throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n+          this.subclusterResolver);\n+    }\n+\n+    // Log the access to a path\n+    return location.getDestinations();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getLocationsForPath(\n      String path, boolean failIfLocked) throws IOException {\n    // Check the location for this path\n    final PathLocation location \u003d\n        this.subclusterResolver.getDestinationForPath(path);\n    if (location \u003d\u003d null) {\n      throw new IOException(\"Cannot find locations for \" + path + \" in \" +\n          this.subclusterResolver);\n    }\n\n    // Log the access to a path\n    return location.getDestinations();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
    }
  }
}