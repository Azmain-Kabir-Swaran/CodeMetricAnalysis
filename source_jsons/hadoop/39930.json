{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKConfigurationStore.java",
  "functionName": "logMutation",
  "functionId": "logMutation___logMutation-LogMutation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
  "functionStartLine": 157,
  "functionEndLine": 170,
  "numCommitsSeen": 14,
  "timeTaken": 3171,
  "changeHistory": [
    "5ead9c15ca6766769d2dd73e91d050ecdede724c",
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
    "5cc6f945da648a48441b00aca89f3cc1a9777143",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634"
  ],
  "changeHistoryShort": {
    "5ead9c15ca6766769d2dd73e91d050ecdede724c": "Ybodychange",
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": "Ybodychange",
    "5cc6f945da648a48441b00aca89f3cc1a9777143": "Ybodychange",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ead9c15ca6766769d2dd73e91d050ecdede724c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9997. Code cleanup in ZKConfigurationStore. Contributed by Andras Gyori\n",
      "commitDate": "12/03/20 4:29 AM",
      "commitName": "5ead9c15ca6766769d2dd73e91d050ecdede724c",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "10/03/20 8:35 AM",
      "commitNameOld": "61f4cf3055e60e64a95f4599ebceac5a924bba02",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 1.83,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public void logMutation(LogMutation logMutation) throws Exception {\n     if (maxLogs \u003e 0) {\n-      byte[] storedLogs \u003d zkManager.getData(logsPath);\n+      byte[] storedLogs \u003d getZkData(logsPath);\n       LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n       if (storedLogs !\u003d null) {\n-        logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n+        logs \u003d unsafeCast(deserializeObject(storedLogs));\n       }\n       logs.add(logMutation);\n       if (logs.size() \u003e maxLogs) {\n         logs.remove(logs.removeFirst());\n       }\n-      zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n-              fencingNodePath);\n+      safeSetZkData(logsPath, logs);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logMutation(LogMutation logMutation) throws Exception {\n    if (maxLogs \u003e 0) {\n      byte[] storedLogs \u003d getZkData(logsPath);\n      LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n      if (storedLogs !\u003d null) {\n        logs \u003d unsafeCast(deserializeObject(storedLogs));\n      }\n      logs.add(logMutation);\n      if (logs.size() \u003e maxLogs) {\n        logs.remove(logs.removeFirst());\n      }\n      safeSetZkData(logsPath, logs);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
      "commitDate": "14/01/20 3:26 AM",
      "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "05/12/19 11:43 AM",
      "commitNameOld": "5cc6f945da648a48441b00aca89f3cc1a9777143",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 39.65,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public void logMutation(LogMutation logMutation) throws Exception {\n     if (maxLogs \u003e 0) {\n       byte[] storedLogs \u003d zkManager.getData(logsPath);\n       LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n       if (storedLogs !\u003d null) {\n         logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n       }\n       logs.add(logMutation);\n       if (logs.size() \u003e maxLogs) {\n         logs.remove(logs.removeFirst());\n       }\n       zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n               fencingNodePath);\n     }\n-    pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logMutation(LogMutation logMutation) throws Exception {\n    if (maxLogs \u003e 0) {\n      byte[] storedLogs \u003d zkManager.getData(logsPath);\n      LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n      if (storedLogs !\u003d null) {\n        logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n      }\n      logs.add(logMutation);\n      if (logs.size() \u003e maxLogs) {\n        logs.remove(logs.removeFirst());\n      }\n      zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n              fencingNodePath);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "5cc6f945da648a48441b00aca89f3cc1a9777143": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9789. Disable Option for Write Ahead Logs of LogMutation. Contributed by Prabhu Joseph\n",
      "commitDate": "05/12/19 11:43 AM",
      "commitName": "5cc6f945da648a48441b00aca89f3cc1a9777143",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "09/10/19 3:23 AM",
      "commitNameOld": "be901f49628a553cfe6a3942478cb528cce2b266",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 57.39,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   public void logMutation(LogMutation logMutation) throws Exception {\n-    byte[] storedLogs \u003d zkManager.getData(logsPath);\n-    LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n-    if (storedLogs !\u003d null) {\n-      logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n+    if (maxLogs \u003e 0) {\n+      byte[] storedLogs \u003d zkManager.getData(logsPath);\n+      LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n+      if (storedLogs !\u003d null) {\n+        logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n+      }\n+      logs.add(logMutation);\n+      if (logs.size() \u003e maxLogs) {\n+        logs.remove(logs.removeFirst());\n+      }\n+      zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n+              fencingNodePath);\n     }\n-    logs.add(logMutation);\n-    if (logs.size() \u003e maxLogs) {\n-      logs.remove(logs.removeFirst());\n-    }\n-    zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n-        fencingNodePath);\n     pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logMutation(LogMutation logMutation) throws Exception {\n    if (maxLogs \u003e 0) {\n      byte[] storedLogs \u003d zkManager.getData(logsPath);\n      LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n      if (storedLogs !\u003d null) {\n        logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n      }\n      logs.add(logMutation);\n      if (logs.size() \u003e maxLogs) {\n        logs.remove(logs.removeFirst());\n      }\n      zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n              fencingNodePath);\n    }\n    pendingMutation \u003d logMutation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,14 @@\n+  public void logMutation(LogMutation logMutation) throws Exception {\n+    byte[] storedLogs \u003d zkManager.getData(logsPath);\n+    LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n+    if (storedLogs !\u003d null) {\n+      logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n+    }\n+    logs.add(logMutation);\n+    if (logs.size() \u003e maxLogs) {\n+      logs.remove(logs.removeFirst());\n+    }\n+    zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n+        fencingNodePath);\n+    pendingMutation \u003d logMutation;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void logMutation(LogMutation logMutation) throws Exception {\n    byte[] storedLogs \u003d zkManager.getData(logsPath);\n    LinkedList\u003cLogMutation\u003e logs \u003d new LinkedList\u003c\u003e();\n    if (storedLogs !\u003d null) {\n      logs \u003d (LinkedList\u003cLogMutation\u003e) deserializeObject(storedLogs);\n    }\n    logs.add(logMutation);\n    if (logs.size() \u003e maxLogs) {\n      logs.remove(logs.removeFirst());\n    }\n    zkManager.safeSetData(logsPath, serializeObject(logs), -1, zkAcl,\n        fencingNodePath);\n    pendingMutation \u003d logMutation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java"
    }
  }
}