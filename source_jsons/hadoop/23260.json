{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TotalOrderPartitioner.java",
  "functionName": "readPartitions",
  "functionId": "readPartitions___fs-FileSystem__p-Path__keyClass-Class__K____conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
  "functionStartLine": 300,
  "functionEndLine": 318,
  "numCommitsSeen": 7,
  "timeTaken": 4648,
  "changeHistory": [
    "178751ed8c9d47038acf8616c226f1f52e884feb",
    "5c3a3310402c37320c6b28eb3dd72cfb79c39971",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "7e18c90d396e51b2dbf9f647822dc233c73518fc",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "178751ed8c9d47038acf8616c226f1f52e884feb": "Ybodychange",
    "5c3a3310402c37320c6b28eb3dd72cfb79c39971": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "7e18c90d396e51b2dbf9f647822dc233c73518fc": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "178751ed8c9d47038acf8616c226f1f52e884feb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6983. Moving logging APIs over to slf4j in hadoop-mapreduce-client-core. Contributed by Jinjiang Ling.\n",
      "commitDate": "02/11/17 1:43 AM",
      "commitName": "178751ed8c9d47038acf8616c226f1f52e884feb",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/02/15 2:30 PM",
      "commitNameOld": "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 1002.43,
      "commitsBetweenForRepo": 7221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n       Configuration conf) throws IOException {\n     SequenceFile.Reader reader \u003d new SequenceFile.Reader(\n         conf,\n         SequenceFile.Reader.file(p));\n     ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n     K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n     try {\n       while ((key \u003d (K) reader.next(key)) !\u003d null) {\n         parts.add(key);\n         key \u003d ReflectionUtils.newInstance(keyClass, conf);\n       }\n       reader.close();\n       reader \u003d null;\n     } finally {\n-      IOUtils.cleanup(LOG, reader);\n+      IOUtils.cleanupWithLogger(LOG, reader);\n     }\n     return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n      Configuration conf) throws IOException {\n    SequenceFile.Reader reader \u003d new SequenceFile.Reader(\n        conf,\n        SequenceFile.Reader.file(p));\n    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    try {\n      while ((key \u003d (K) reader.next(key)) !\u003d null) {\n        parts.add(key);\n        key \u003d ReflectionUtils.newInstance(keyClass, conf);\n      }\n      reader.close();\n      reader \u003d null;\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, reader);\n    }\n    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
      "extendedDetails": {}
    },
    "5c3a3310402c37320c6b28eb3dd72cfb79c39971": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4574. Fix TotalOrderParitioner to work with non-WritableComparable key types. Contributed by Harsh J. (harsh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1395936 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/10/12 2:58 AM",
      "commitName": "5c3a3310402c37320c6b28eb3dd72cfb79c39971",
      "commitAuthor": "Harsh J",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 411.41,
      "commitsBetweenForRepo": 2677,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n       Configuration conf) throws IOException {\n-    SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n+    SequenceFile.Reader reader \u003d new SequenceFile.Reader(\n+        conf,\n+        SequenceFile.Reader.file(p));\n     ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n     K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n-    NullWritable value \u003d NullWritable.get();\n     try {\n-      while (reader.next(key, value)) {\n+      while ((key \u003d (K) reader.next(key)) !\u003d null) {\n         parts.add(key);\n         key \u003d ReflectionUtils.newInstance(keyClass, conf);\n       }\n       reader.close();\n       reader \u003d null;\n     } finally {\n       IOUtils.cleanup(LOG, reader);\n     }\n     return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n      Configuration conf) throws IOException {\n    SequenceFile.Reader reader \u003d new SequenceFile.Reader(\n        conf,\n        SequenceFile.Reader.file(p));\n    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    try {\n      while ((key \u003d (K) reader.next(key)) !\u003d null) {\n        parts.add(key);\n        key \u003d ReflectionUtils.newInstance(keyClass, conf);\n      }\n      reader.close();\n      reader \u003d null;\n    } finally {\n      IOUtils.cleanup(LOG, reader);\n    }\n    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n      Configuration conf) throws IOException {\n    SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    NullWritable value \u003d NullWritable.get();\n    try {\n      while (reader.next(key, value)) {\n        parts.add(key);\n        key \u003d ReflectionUtils.newInstance(keyClass, conf);\n      }\n      reader.close();\n      reader \u003d null;\n    } finally {\n      IOUtils.cleanup(LOG, reader);\n    }\n    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n      Configuration conf) throws IOException {\n    SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    NullWritable value \u003d NullWritable.get();\n    try {\n      while (reader.next(key, value)) {\n        parts.add(key);\n        key \u003d ReflectionUtils.newInstance(keyClass, conf);\n      }\n      reader.close();\n      reader \u003d null;\n    } finally {\n      IOUtils.cleanup(LOG, reader);\n    }\n    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java"
      }
    },
    "7e18c90d396e51b2dbf9f647822dc233c73518fc": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2243. Close streams propely in a finally-block to avoid leakage in CompletedJobStatusStore, TaskLog, EventWriter and TotalOrderPartitioner.  Contributed by Devaraj K\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152787 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/11 7:11 AM",
      "commitName": "7e18c90d396e51b2dbf9f647822dc233c73518fc",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 49.67,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n   private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n       Configuration conf) throws IOException {\n     SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n     ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n     K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n     NullWritable value \u003d NullWritable.get();\n-    while (reader.next(key, value)) {\n-      parts.add(key);\n-      key \u003d ReflectionUtils.newInstance(keyClass, conf);\n+    try {\n+      while (reader.next(key, value)) {\n+        parts.add(key);\n+        key \u003d ReflectionUtils.newInstance(keyClass, conf);\n+      }\n+      reader.close();\n+      reader \u003d null;\n+    } finally {\n+      IOUtils.cleanup(LOG, reader);\n     }\n-    reader.close();\n     return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n      Configuration conf) throws IOException {\n    SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    NullWritable value \u003d NullWritable.get();\n    try {\n      while (reader.next(key, value)) {\n        parts.add(key);\n        key \u003d ReflectionUtils.newInstance(keyClass, conf);\n      }\n      reader.close();\n      reader \u003d null;\n    } finally {\n      IOUtils.cleanup(LOG, reader);\n    }\n    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n+      Configuration conf) throws IOException {\n+    SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n+    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n+    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n+    NullWritable value \u003d NullWritable.get();\n+    while (reader.next(key, value)) {\n+      parts.add(key);\n+      key \u003d ReflectionUtils.newInstance(keyClass, conf);\n+    }\n+    reader.close();\n+    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private K[] readPartitions(FileSystem fs, Path p, Class\u003cK\u003e keyClass,\n      Configuration conf) throws IOException {\n    SequenceFile.Reader reader \u003d new SequenceFile.Reader(fs, p, conf);\n    ArrayList\u003cK\u003e parts \u003d new ArrayList\u003cK\u003e();\n    K key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    NullWritable value \u003d NullWritable.get();\n    while (reader.next(key, value)) {\n      parts.add(key);\n      key \u003d ReflectionUtils.newInstance(keyClass, conf);\n    }\n    reader.close();\n    return parts.toArray((K[])Array.newInstance(keyClass, parts.size()));\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner.java"
    }
  }
}