{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "doAs",
  "functionId": "doAs___action-PrivilegedExceptionAction__T__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 1838,
  "functionEndLine": 1864,
  "numCommitsSeen": 147,
  "timeTaken": 4972,
  "changeHistory": [
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
    "6d5713a8a84b5fdae9b371fb692a818352758bd5",
    "f89ede8d8645ee752961754ddc19bdfc72a03681",
    "52372eba8e06150185661d74d7c903391c542190",
    "52703c2d0d9e2ad89d0ffca079e37eee339b89b7",
    "d8930feeae116fc53cb0676dad8521992762528c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "0c5734e4aca873f405fbf994e5fe7061e31731c8"
  ],
  "changeHistoryShort": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": "Ybodychange",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": "Ybodychange",
    "6d5713a8a84b5fdae9b371fb692a818352758bd5": "Ybodychange",
    "f89ede8d8645ee752961754ddc19bdfc72a03681": "Ybodychange",
    "52372eba8e06150185661d74d7c903391c542190": "Ybodychange",
    "52703c2d0d9e2ad89d0ffca079e37eee339b89b7": "Ybodychange",
    "d8930feeae116fc53cb0676dad8521992762528c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "0c5734e4aca873f405fbf994e5fe7061e31731c8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16691. Unify Logging in UserGroupInformation.\n\nUnify Logging in UserGroupInformation.",
      "commitDate": "14/11/19 10:28 AM",
      "commitName": "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
      "commitAuthor": "belugabehr",
      "commitDateOld": "28/02/19 10:34 AM",
      "commitNameOld": "0d61facd3777c26178a9974e646b6ff351fedcb5",
      "commitAuthorOld": "Ajay Kumar",
      "daysBetweenCommits": 259.0,
      "commitsBetweenForRepo": 1874,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n-      logPrivilegedAction(subject, action);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"PrivilegedAction [as: {}][action: {}]\", this, action,\n+            new Exception());\n+      }\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n-      }\n+      LOG.debug(\"PrivilegedActionException as: {}\", this, cause);\n       if (cause \u003d\u003d null) {\n         throw new RuntimeException(\"PrivilegedActionException with no \" +\n                 \"underlying cause. UGI [\" + this + \"]\" +\": \" + pae, pae);\n       } else if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n         throw new UndeclaredThrowableException(cause);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PrivilegedAction [as: {}][action: {}]\", this, action,\n            new Exception());\n      }\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      LOG.debug(\"PrivilegedActionException as: {}\", this, cause);\n      if (cause \u003d\u003d null) {\n        throw new RuntimeException(\"PrivilegedActionException with no \" +\n                \"underlying cause. UGI [\" + this + \"]\" +\": \" + pae, pae);\n      } else if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12426. Add Entry point for Kerberos health check. Contributed by Steve Loughran.\n",
      "commitDate": "05/02/16 3:47 PM",
      "commitName": "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
      "commitAuthor": "cnauroth",
      "commitDateOld": "22/01/16 12:15 PM",
      "commitNameOld": "d22c4239a40a1c7ed49c06038138f0e3f387b4a0",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 14.15,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n       logPrivilegedAction(subject, action);\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n       }\n       if (cause \u003d\u003d null) {\n         throw new RuntimeException(\"PrivilegedActionException with no \" +\n-                \"underlying cause. UGI [\" + this + \"]\", pae);\n+                \"underlying cause. UGI [\" + this + \"]\" +\": \" + pae, pae);\n       } else if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n         throw new UndeclaredThrowableException(cause);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n      }\n      if (cause \u003d\u003d null) {\n        throw new RuntimeException(\"PrivilegedActionException with no \" +\n                \"underlying cause. UGI [\" + this + \"]\" +\": \" + pae, pae);\n      } else if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "6d5713a8a84b5fdae9b371fb692a818352758bd5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12284. UserGroupInformation doAs can throw misleading exception (Aaron Dosset via stevel)\n",
      "commitDate": "06/10/15 1:39 PM",
      "commitName": "6d5713a8a84b5fdae9b371fb692a818352758bd5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "20/07/15 7:21 PM",
      "commitNameOld": "773c670943757681feeafb227a2d0c29d48f38f1",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 77.76,
      "commitsBetweenForRepo": 501,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n       logPrivilegedAction(subject, action);\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n       }\n-      if (cause instanceof IOException) {\n+      if (cause \u003d\u003d null) {\n+        throw new RuntimeException(\"PrivilegedActionException with no \" +\n+                \"underlying cause. UGI [\" + this + \"]\", pae);\n+      } else if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n         throw new UndeclaredThrowableException(cause);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n      }\n      if (cause \u003d\u003d null) {\n        throw new RuntimeException(\"PrivilegedActionException with no \" +\n                \"underlying cause. UGI [\" + this + \"]\", pae);\n      } else if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "f89ede8d8645ee752961754ddc19bdfc72a03681": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10015. UserGroupInformation prints out excessive warnings.  Contributed by Nicolas Liochon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580977 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 11:36 AM",
      "commitName": "f89ede8d8645ee752961754ddc19bdfc72a03681",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "14/02/14 1:25 PM",
      "commitNameOld": "943d3f641cd7256ee6c9c0fe72314aee7ce15e91",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 37.88,
      "commitsBetweenForRepo": 329,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n       logPrivilegedAction(subject, action);\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n-      LOG.warn(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n+      }\n       if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n         throw new UndeclaredThrowableException(cause);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n      }\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "52372eba8e06150185661d74d7c903391c542190": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10274 Lower the logging level from ERROR to WARN for UGI.doAs method (Takeshi Miao via stack)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561934 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 8:57 PM",
      "commitName": "52372eba8e06150185661d74d7c903391c542190",
      "commitAuthor": "Michael Stack",
      "commitDateOld": "06/01/14 10:59 AM",
      "commitNameOld": "2a1ecd00dadb1577da9e02822469e8194f1d3cee",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 21.42,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n       logPrivilegedAction(subject, action);\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n-      LOG.error(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n+      LOG.warn(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n       if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n         throw new UndeclaredThrowableException(cause);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      LOG.warn(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "52703c2d0d9e2ad89d0ffca079e37eee339b89b7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9343. Allow additional exceptions through the RPC layer. (sseth)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1452918 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/13 9:56 AM",
      "commitName": "52703c2d0d9e2ad89d0ffca079e37eee339b89b7",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "04/03/13 6:59 AM",
      "commitNameOld": "84567faa92f72b52011d712b5b1467af82abc00a",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 1.12,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n       logPrivilegedAction(subject, action);\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n       LOG.error(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n       if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n-        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n+        throw new UndeclaredThrowableException(cause);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      LOG.error(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "d8930feeae116fc53cb0676dad8521992762528c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7853. multiple javax security configurations cause conflicts. (daryn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208751 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 12:26 PM",
      "commitName": "d8930feeae116fc53cb0676dad8521992762528c",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "13/10/11 6:24 PM",
      "commitNameOld": "002dd6968b89ded6a77858ccb50c9b2df074c226",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 47.79,
      "commitsBetweenForRepo": 331,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                     ) throws IOException, InterruptedException {\n     try {\n+      logPrivilegedAction(subject, action);\n       return Subject.doAs(subject, action);\n     } catch (PrivilegedActionException pae) {\n       Throwable cause \u003d pae.getCause();\n+      LOG.error(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n       if (cause instanceof IOException) {\n         throw (IOException) cause;\n       } else if (cause instanceof Error) {\n         throw (Error) cause;\n       } else if (cause instanceof RuntimeException) {\n         throw (RuntimeException) cause;\n       } else if (cause instanceof InterruptedException) {\n         throw (InterruptedException) cause;\n       } else {\n         throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      LOG.error(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "0c5734e4aca873f405fbf994e5fe7061e31731c8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6299. Reimplement the UserGroupInformation to use the OS\nspecific and Kerberos JAAS login. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@903560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/10 12:08 AM",
      "commitName": "0c5734e4aca873f405fbf994e5fe7061e31731c8",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,19 @@\n+  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n+                    ) throws IOException, InterruptedException {\n+    try {\n+      return Subject.doAs(subject, action);\n+    } catch (PrivilegedActionException pae) {\n+      Throwable cause \u003d pae.getCause();\n+      if (cause instanceof IOException) {\n+        throw (IOException) cause;\n+      } else if (cause instanceof Error) {\n+        throw (Error) cause;\n+      } else if (cause instanceof RuntimeException) {\n+        throw (RuntimeException) cause;\n+      } else if (cause instanceof InterruptedException) {\n+        throw (InterruptedException) cause;\n+      } else {\n+        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T doAs(PrivilegedExceptionAction\u003cT\u003e action\n                    ) throws IOException, InterruptedException {\n    try {\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause \u003d pae.getCause();\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(pae,\"Unknown exception in doAs\");\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}