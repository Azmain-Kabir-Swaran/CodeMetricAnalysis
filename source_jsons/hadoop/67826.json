{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCpOptions.java",
  "functionName": "appendToConf",
  "functionId": "appendToConf___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
  "functionStartLine": 361,
  "functionEndLine": 406,
  "numCommitsSeen": 36,
  "timeTaken": 5401,
  "changeHistory": [
    "19a001826f6ab9ac2caa92b66864f62218557beb",
    "ee3115f488ce8e44bffac15af9c646190bf67b88",
    "de804e53b9d20a2df75a4c7252bf83ed52011488",
    "ca8b80bf59c0570bb9172208d3a6c993a6854514",
    "1976e0066e9ae8852715fa69d8aea3769330e933",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30",
    "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
    "bf3fb585aaf2b179836e139c041fc87920a3c886",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "9faccd104672dfef123735ca8ada178fc3a6196f",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
    "3671a5e16fbddbe5a0516289ce98e1305e02291c",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "19a001826f6ab9ac2caa92b66864f62218557beb": "Ybodychange",
    "ee3115f488ce8e44bffac15af9c646190bf67b88": "Ybodychange",
    "de804e53b9d20a2df75a4c7252bf83ed52011488": "Ybodychange",
    "ca8b80bf59c0570bb9172208d3a6c993a6854514": "Ybodychange",
    "1976e0066e9ae8852715fa69d8aea3769330e933": "Ybodychange",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": "Ybodychange",
    "b4adc8392c1314d6d6fbdd00f2afb306ef20a650": "Ybodychange",
    "bf3fb585aaf2b179836e139c041fc87920a3c886": "Ybodychange",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": "Ybodychange",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": "Ybodychange",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ybodychange",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ybodychange",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ybodychange",
    "9faccd104672dfef123735ca8ada178fc3a6196f": "Ybodychange",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": "Ybodychange",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": "Ybodychange",
    "3671a5e16fbddbe5a0516289ce98e1305e02291c": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19a001826f6ab9ac2caa92b66864f62218557beb": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9913. DistCp to add -useTrash to move deleted files to Trash.\"\n\nReverting due to test failures if ~/.Trash not present during test setup.\n\nThis reverts commit ee3115f488ce8e44bffac15af9c646190bf67b88.\n\nChange-Id: Icbeeb261570b9131ff99d765ac0945c335b26658\n",
      "commitDate": "17/07/19 5:13 AM",
      "commitName": "19a001826f6ab9ac2caa92b66864f62218557beb",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/19 3:50 AM",
      "commitNameOld": "ee3115f488ce8e44bffac15af9c646190bf67b88",
      "commitAuthorOld": "Shen Yinjie",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,46 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n-    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_USETRASH,\n-        String.valueOf(deleteUseTrash));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n         String.valueOf(copyBufferSize));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n         String.valueOf(verboseLog));\n     if (trackPath !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n           String.valueOf(trackPath));\n     }\n     if (numListstatusThreads \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n           Integer.toString(numListstatusThreads));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIRECT_WRITE,\n             String.valueOf(directWrite));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n        String.valueOf(verboseLog));\n    if (trackPath !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n          String.valueOf(trackPath));\n    }\n    if (numListstatusThreads \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n          Integer.toString(numListstatusThreads));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIRECT_WRITE,\n            String.valueOf(directWrite));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ee3115f488ce8e44bffac15af9c646190bf67b88": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9913. DistCp to add -useTrash to move deleted files to Trash.\n\nContributed by Shen Yinjie.\n\nChange-Id: I03ac7d22ab1054f8e5de4aa7552909c734438f4a\n",
      "commitDate": "17/07/19 3:50 AM",
      "commitName": "ee3115f488ce8e44bffac15af9c646190bf67b88",
      "commitAuthor": "Shen Yinjie",
      "commitDateOld": "07/02/19 2:07 AM",
      "commitNameOld": "de804e53b9d20a2df75a4c7252bf83ed52011488",
      "commitAuthorOld": "Andrew Olson",
      "daysBetweenCommits": 160.03,
      "commitsBetweenForRepo": 1184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,48 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_USETRASH,\n+        String.valueOf(deleteUseTrash));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n         String.valueOf(copyBufferSize));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n         String.valueOf(verboseLog));\n     if (trackPath !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n           String.valueOf(trackPath));\n     }\n     if (numListstatusThreads \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n           Integer.toString(numListstatusThreads));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIRECT_WRITE,\n             String.valueOf(directWrite));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_USETRASH,\n        String.valueOf(deleteUseTrash));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n        String.valueOf(verboseLog));\n    if (trackPath !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n          String.valueOf(trackPath));\n    }\n    if (numListstatusThreads \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n          Integer.toString(numListstatusThreads));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIRECT_WRITE,\n            String.valueOf(directWrite));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "de804e53b9d20a2df75a4c7252bf83ed52011488": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15281. Distcp to add no-rename copy option.\n\nContributed by Andrew Olson.\n",
      "commitDate": "07/02/19 2:07 AM",
      "commitName": "de804e53b9d20a2df75a4c7252bf83ed52011488",
      "commitAuthor": "Andrew Olson",
      "commitDateOld": "10/07/18 2:43 AM",
      "commitNameOld": "ca8b80bf59c0570bb9172208d3a6c993a6854514",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 212.02,
      "commitsBetweenForRepo": 1660,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,46 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n         String.valueOf(copyBufferSize));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n         String.valueOf(verboseLog));\n     if (trackPath !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n           String.valueOf(trackPath));\n     }\n     if (numListstatusThreads \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n           Integer.toString(numListstatusThreads));\n     }\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIRECT_WRITE,\n+            String.valueOf(directWrite));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n        String.valueOf(verboseLog));\n    if (trackPath !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n          String.valueOf(trackPath));\n    }\n    if (numListstatusThreads \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n          Integer.toString(numListstatusThreads));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIRECT_WRITE,\n            String.valueOf(directWrite));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ca8b80bf59c0570bb9172208d3a6c993a6854514": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15384. distcp numListstatusThreads option doesn\u0027t get to -delete scan.\nContributed by Steve Loughran.\n",
      "commitDate": "10/07/18 2:43 AM",
      "commitName": "ca8b80bf59c0570bb9172208d3a6c993a6854514",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 12.17,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,44 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n         String.valueOf(copyBufferSize));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n         String.valueOf(verboseLog));\n     if (trackPath !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n           String.valueOf(trackPath));\n     }\n-\n+    if (numListstatusThreads \u003e 0) {\n+      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n+          Integer.toString(numListstatusThreads));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n        String.valueOf(verboseLog));\n    if (trackPath !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n          String.valueOf(trackPath));\n    }\n    if (numListstatusThreads \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.NUM_LISTSTATUS_THREADS,\n          Integer.toString(numListstatusThreads));\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "1976e0066e9ae8852715fa69d8aea3769330e933": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15209. DistCp to eliminate needless deletion of files under already-deleted directories.\nContributed by Steve Loughran.\n",
      "commitDate": "15/03/18 11:05 AM",
      "commitName": "1976e0066e9ae8852715fa69d8aea3769330e933",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "08/03/18 3:24 AM",
      "commitNameOld": "7ef4d942dd96232b0743a40ed25f77065254f94d",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 7.28,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,41 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n         String.valueOf(copyBufferSize));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n         String.valueOf(verboseLog));\n+    if (trackPath !\u003d null) {\n+      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n+          String.valueOf(trackPath));\n+    }\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n        String.valueOf(verboseLog));\n    if (trackPath !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.TRACK_MISSING,\n          String.valueOf(trackPath));\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
      "commitDate": "05/09/17 11:34 PM",
      "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "18/05/17 3:35 PM",
      "commitNameOld": "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 110.33,
      "commitsBetweenForRepo": 692,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n         String.valueOf(copyBufferSize));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n+        String.valueOf(verboseLog));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.VERBOSE_LOG,\n        String.valueOf(verboseLog));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "b4adc8392c1314d6d6fbdd00f2afb306ef20a650": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14407. DistCp - Introduce a configurable copy buffer size. (Omkar Aradhya K S via Yongjun Zhang)\n",
      "commitDate": "18/05/17 3:35 PM",
      "commitName": "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "31/03/17 8:04 PM",
      "commitNameOld": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 47.81,
      "commitsBetweenForRepo": 260,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,34 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n         String.valueOf(blocksPerChunk));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n+        String.valueOf(copyBufferSize));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.COPY_BUFFER_SIZE,\n        String.valueOf(copyBufferSize));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "bf3fb585aaf2b179836e139c041fc87920a3c886": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n+        String.valueOf(blocksPerChunk));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:01 PM",
      "commitNameOld": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,30 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n-    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n-        String.valueOf(blocksPerChunk));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
      "commitDate": "30/03/17 5:01 PM",
      "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "19/10/16 5:37 PM",
      "commitNameOld": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 161.97,
      "commitsBetweenForRepo": 997,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n         String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n+        String.valueOf(blocksPerChunk));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BLOCKS_PER_CHUNK,\n        String.valueOf(blocksPerChunk));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 10:47 PM",
      "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n+        String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 11:04 AM",
      "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,28 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n-    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n-        String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "12/09/16 8:26 AM",
      "commitNameOld": "9faccd104672dfef123735ca8ada178fc3a6196f",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 35.11,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n+        String.valueOf(useRdiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     if (mapBandwidth \u003e 0) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n           String.valueOf(mapBandwidth));\n     }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.RDIFF,\n        String.valueOf(useRdiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "9faccd104672dfef123735ca8ada178fc3a6196f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13587. distcp.map.bandwidth.mb is overwritten even when -bandwidth flag isn\u0027t set. Contributed by Zoran Dimitrijevic\n",
      "commitDate": "12/09/16 8:26 AM",
      "commitName": "9faccd104672dfef123735ca8ada178fc3a6196f",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "28/06/16 7:21 AM",
      "commitNameOld": "422c73a8657d8699920f7db13d4be200e16c4272",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 76.05,
      "commitsBetweenForRepo": 587,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n-    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n-        String.valueOf(mapBandwidth));\n+    if (mapBandwidth \u003e 0) {\n+      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n+          String.valueOf(mapBandwidth));\n+    }\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n     if (filtersFile !\u003d null) {\n       DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n           filtersFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    if (mapBandwidth \u003e 0) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n          String.valueOf(mapBandwidth));\n    }\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-1540. Support file exclusion list in distcp. Contributed by Rich Haase.\n",
      "commitDate": "18/05/15 1:24 PM",
      "commitName": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "21/04/15 4:49 PM",
      "commitNameOld": "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 26.86,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n         String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n         String.valueOf(mapBandwidth));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n+    if (filtersFile !\u003d null) {\n+      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n+          filtersFile);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n        String.valueOf(mapBandwidth));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n    if (filtersFile !\u003d null) {\n      DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.FILTERS,\n          filtersFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7535. Utilize Snapshot diff report for distcp. Contributed by Jing Zhao.\n",
      "commitDate": "04/03/15 10:30 AM",
      "commitName": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/09/14 3:38 PM",
      "commitNameOld": "3cde37c991b18370cc1b383f920a9d5bd2d91adb",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 160.83,
      "commitsBetweenForRepo": 1314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n         String.valueOf(append));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n+        String.valueOf(useDiff));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n         String.valueOf(mapBandwidth));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DIFF,\n        String.valueOf(useDiff));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n        String.valueOf(mapBandwidth));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "3671a5e16fbddbe5a0516289ce98e1305e02291c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5899. Support incremental data copy in DistCp. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596931 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/14 11:17 AM",
      "commitName": "3671a5e16fbddbe5a0516289ce98e1305e02291c",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "16/05/14 11:25 AM",
      "commitNameOld": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 5.99,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   public void appendToConf(Configuration conf) {\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n         String.valueOf(atomicCommit));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n         String.valueOf(ignoreFailures));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n         String.valueOf(syncFolder));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n         String.valueOf(deleteMissing));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n         String.valueOf(overwrite));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n+        String.valueOf(append));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n         String.valueOf(skipCRC));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n         String.valueOf(mapBandwidth));\n     DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n         DistCpUtils.packAttributes(preserveStatus));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.APPEND,\n        String.valueOf(append));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n        String.valueOf(mapBandwidth));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,18 @@\n+  public void appendToConf(Configuration conf) {\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n+        String.valueOf(atomicCommit));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n+        String.valueOf(ignoreFailures));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n+        String.valueOf(syncFolder));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n+        String.valueOf(deleteMissing));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n+        String.valueOf(overwrite));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n+        String.valueOf(skipCRC));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n+        String.valueOf(mapBandwidth));\n+    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n+        DistCpUtils.packAttributes(preserveStatus));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void appendToConf(Configuration conf) {\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.ATOMIC_COMMIT,\n        String.valueOf(atomicCommit));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.IGNORE_FAILURES,\n        String.valueOf(ignoreFailures));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SYNC_FOLDERS,\n        String.valueOf(syncFolder));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.DELETE_MISSING,\n        String.valueOf(deleteMissing));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.OVERWRITE,\n        String.valueOf(overwrite));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.SKIP_CRC,\n        String.valueOf(skipCRC));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.BANDWIDTH,\n        String.valueOf(mapBandwidth));\n    DistCpOptionSwitch.addToConf(conf, DistCpOptionSwitch.PRESERVE_STATUS,\n        DistCpUtils.packAttributes(preserveStatus));\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java"
    }
  }
}