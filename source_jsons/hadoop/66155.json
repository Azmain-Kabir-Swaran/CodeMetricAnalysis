{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeS3FileSystem.java",
  "functionName": "getFileStatus",
  "functionId": "getFileStatus___f-Path",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
  "functionStartLine": 86,
  "functionEndLine": 88,
  "numCommitsSeen": 27,
  "timeTaken": 1756,
  "changeHistory": [
    "49467165a57fb77932d1d526796624b88ebacd91",
    "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7efb9640be26aabe3878310e82248a1b6b767a9a",
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "49467165a57fb77932d1d526796624b88ebacd91": "Ybodychange",
    "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7efb9640be26aabe3878310e82248a1b6b767a9a": "Ybodychange",
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49467165a57fb77932d1d526796624b88ebacd91": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14738 Remove S3N and obsolete bits of S3A; rework docs.  Contributed by Steve Loughran.\n",
      "commitDate": "14/09/17 2:10 PM",
      "commitName": "49467165a57fb77932d1d526796624b88ebacd91",
      "commitAuthor": "Aaron Fabbri",
      "commitDateOld": "30/11/16 1:01 PM",
      "commitNameOld": "3fd844b99fdfae6be6e5e261f371d175aad14229",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 288.01,
      "commitsBetweenForRepo": 1721,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,3 @@\n   public FileStatus getFileStatus(Path f) throws IOException {\n-    Path absolutePath \u003d makeAbsolute(f);\n-    String key \u003d pathToKey(absolutePath);\n-    \n-    if (key.length() \u003d\u003d 0) { // root always exists\n-      return newDirectory(absolutePath);\n-    }\n-    \n-    if(LOG.isDebugEnabled()) {\n-      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n-    }\n-    FileMetadata meta \u003d store.retrieveMetadata(key);\n-    if (meta !\u003d null) {\n-      if(LOG.isDebugEnabled()) {\n-        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n-      }\n-      return newFile(meta, absolutePath);\n-    }\n-    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n-      if(LOG.isDebugEnabled()) {\n-        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n-            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n-      }\n-      return newDirectory(absolutePath);\n-    }\n-    \n-    if(LOG.isDebugEnabled()) {\n-      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n-    }\n-    PartialListing listing \u003d store.list(key, 1);\n-    if (listing.getFiles().length \u003e 0 ||\n-        listing.getCommonPrefixes().length \u003e 0) {\n-      if(LOG.isDebugEnabled()) {\n-        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n-            \"\u0027 as it has contents\");\n-      }\n-      return newDirectory(absolutePath);\n-    }\n-    \n-    if(LOG.isDebugEnabled()) {\n-      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n-    }\n-    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n+    throw new UnsupportedOperationException(UNSUPPORTED);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    throw new UnsupportedOperationException(UNSUPPORTED);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-11074. Move s3-related FS connector code to hadoop-aws. (David S. Wang via Colin Patrick McCabe)\n",
      "commitDate": "10/09/14 4:14 PM",
      "commitName": "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/09/14 3:22 PM",
      "commitNameOld": "7f80e142096ab21b4852635a127589e34a747bc4",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n    }\n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n      }\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n    }\n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as it has contents\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n    }\n    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n    }\n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n      }\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n    }\n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as it has contents\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n    }\n    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n    }\n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n      }\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n    }\n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as it has contents\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n    }\n    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n    }\n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n      }\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n    }\n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as it has contents\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n    }\n    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "7efb9640be26aabe3878310e82248a1b6b767a9a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6884. Add LOG.isDebugEnabled() guard for each LOG.debug(..).  Contributed by Erik Steffl\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@990460 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/08/10 3:44 PM",
      "commitName": "7efb9640be26aabe3878310e82248a1b6b767a9a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "21/06/10 2:45 PM",
      "commitNameOld": "35a4624771f84a60deb62a3807a3ac0701b0d7d0",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 68.04,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,44 @@\n   public FileStatus getFileStatus(Path f) throws IOException {\n     Path absolutePath \u003d makeAbsolute(f);\n     String key \u003d pathToKey(absolutePath);\n     \n     if (key.length() \u003d\u003d 0) { // root always exists\n       return newDirectory(absolutePath);\n     }\n     \n-    LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n+    if(LOG.isDebugEnabled()) {\n+      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n+    }\n     FileMetadata meta \u003d store.retrieveMetadata(key);\n     if (meta !\u003d null) {\n-      LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n+      }\n       return newFile(meta, absolutePath);\n     }\n     if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n-      LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key + \"\u0027 as \u0027\"\n-          + key + FOLDER_SUFFIX + \"\u0027 exists\");\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n+            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n+      }\n       return newDirectory(absolutePath);\n     }\n     \n-    LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n+    if(LOG.isDebugEnabled()) {\n+      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n+    }\n     PartialListing listing \u003d store.list(key, 1);\n     if (listing.getFiles().length \u003e 0 ||\n         listing.getCommonPrefixes().length \u003e 0) {\n-      LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key + \"\u0027 as it has contents\");\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n+            \"\u0027 as it has contents\");\n+      }\n       return newDirectory(absolutePath);\n     }\n     \n-    LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n+    if(LOG.isDebugEnabled()) {\n+      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n+    }\n     throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n    }\n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n      }\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as \u0027\" + key + FOLDER_SUFFIX + \"\u0027 exists\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n    }\n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key +\n            \"\u0027 as it has contents\");\n      }\n      return newDirectory(absolutePath);\n    }\n    \n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n    }\n    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58": {
      "type": "Ybodychange",
      "commitMessage": "Merged src/core, src/test/core, src/contrib/eclipse-plugin, and\nsrc/contrib/ec2 from trunk 776174:784663\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/09 1:28 PM",
      "commitName": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 27.67,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n   public FileStatus getFileStatus(Path f) throws IOException {\n-    \n     Path absolutePath \u003d makeAbsolute(f);\n     String key \u003d pathToKey(absolutePath);\n     \n     if (key.length() \u003d\u003d 0) { // root always exists\n       return newDirectory(absolutePath);\n     }\n     \n+    LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n     FileMetadata meta \u003d store.retrieveMetadata(key);\n     if (meta !\u003d null) {\n+      LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n       return newFile(meta, absolutePath);\n     }\n     if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n+      LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key + \"\u0027 as \u0027\"\n+          + key + FOLDER_SUFFIX + \"\u0027 exists\");\n       return newDirectory(absolutePath);\n     }\n     \n+    LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n     PartialListing listing \u003d store.list(key, 1);\n     if (listing.getFiles().length \u003e 0 ||\n         listing.getCommonPrefixes().length \u003e 0) {\n+      LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key + \"\u0027 as it has contents\");\n       return newDirectory(absolutePath);\n     }\n     \n-    throw new FileNotFoundException(absolutePath +\n-        \": No such file or directory.\");\n-    \n+    LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n+    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    LOG.debug(\"getFileStatus retrieving metadata for key \u0027\" + key + \"\u0027\");\n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      LOG.debug(\"getFileStatus returning \u0027file\u0027 for key \u0027\" + key + \"\u0027\");\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key + \"\u0027 as \u0027\"\n          + key + FOLDER_SUFFIX + \"\u0027 exists\");\n      return newDirectory(absolutePath);\n    }\n    \n    LOG.debug(\"getFileStatus listing key \u0027\" + key + \"\u0027\");\n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      LOG.debug(\"getFileStatus returning \u0027directory\u0027 for key \u0027\" + key + \"\u0027 as it has contents\");\n      return newDirectory(absolutePath);\n    }\n    \n    LOG.debug(\"getFileStatus could not find key \u0027\" + key + \"\u0027\");\n    throw new FileNotFoundException(\"No such file or directory \u0027\" + absolutePath + \"\u0027\");\n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,27 @@\n+  public FileStatus getFileStatus(Path f) throws IOException {\n+    \n+    Path absolutePath \u003d makeAbsolute(f);\n+    String key \u003d pathToKey(absolutePath);\n+    \n+    if (key.length() \u003d\u003d 0) { // root always exists\n+      return newDirectory(absolutePath);\n+    }\n+    \n+    FileMetadata meta \u003d store.retrieveMetadata(key);\n+    if (meta !\u003d null) {\n+      return newFile(meta, absolutePath);\n+    }\n+    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n+      return newDirectory(absolutePath);\n+    }\n+    \n+    PartialListing listing \u003d store.list(key, 1);\n+    if (listing.getFiles().length \u003e 0 ||\n+        listing.getCommonPrefixes().length \u003e 0) {\n+      return newDirectory(absolutePath);\n+    }\n+    \n+    throw new FileNotFoundException(absolutePath +\n+        \": No such file or directory.\");\n+    \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    \n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003d\u003d 0) { // root always exists\n      return newDirectory(absolutePath);\n    }\n    \n    FileMetadata meta \u003d store.retrieveMetadata(key);\n    if (meta !\u003d null) {\n      return newFile(meta, absolutePath);\n    }\n    if (store.retrieveMetadata(key + FOLDER_SUFFIX) !\u003d null) {\n      return newDirectory(absolutePath);\n    }\n    \n    PartialListing listing \u003d store.list(key, 1);\n    if (listing.getFiles().length \u003e 0 ||\n        listing.getCommonPrefixes().length \u003e 0) {\n      return newDirectory(absolutePath);\n    }\n    \n    throw new FileNotFoundException(absolutePath +\n        \": No such file or directory.\");\n    \n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
    }
  }
}