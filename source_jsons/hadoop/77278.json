{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Utils.java",
  "functionName": "writeVLong",
  "functionId": "writeVLong___out-DataOutput__n-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java",
  "functionStartLine": 101,
  "functionEndLine": 164,
  "numCommitsSeen": 9,
  "timeTaken": 1148,
  "changeHistory": [
    "7b988e88992528a0cac2ca8893652c5d4a90c6b9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "8246aa28ff72e3ae81eb6ce59852abd5828fadc6"
  ],
  "changeHistoryShort": {
    "7b988e88992528a0cac2ca8893652c5d4a90c6b9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "8246aa28ff72e3ae81eb6ce59852abd5828fadc6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b988e88992528a0cac2ca8893652c5d4a90c6b9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13861. Spelling errors in logging and exceptions for code. Contributed by Grant Sohn.\n",
      "commitDate": "05/12/16 11:18 PM",
      "commitName": "7b988e88992528a0cac2ca8893652c5d4a90c6b9",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1930.29,
      "commitsBetweenForRepo": 13659,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,64 +1,64 @@\n   public static void writeVLong(DataOutput out, long n) throws IOException {\n     if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n       out.writeByte((int) n);\n       return;\n     }\n \n     long un \u003d (n \u003c 0) ? ~n : n;\n     // how many bytes do we need to represent the number with sign bit?\n     int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n     int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n     switch (len) {\n       case 1:\n         // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n         firstByte \u003e\u003e\u003d 8;\n       case 2:\n         if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n           out.writeByte(firstByte - 52);\n           out.writeByte((int) n);\n           return;\n         }\n         // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n         firstByte \u003e\u003e\u003d 8;\n       case 3:\n         if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n           out.writeByte(firstByte - 88);\n           out.writeShort((int) n);\n           return;\n         }\n         // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n         firstByte \u003e\u003e\u003d 8;\n       case 4:\n         if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n           out.writeByte(firstByte - 112);\n           out.writeShort(((int) n) \u003e\u003e\u003e 8);\n           out.writeByte((int) n);\n           return;\n         }\n         out.writeByte(len - 129);\n         out.writeInt((int) n);\n         return;\n       case 5:\n         out.writeByte(len - 129);\n         out.writeInt((int) (n \u003e\u003e\u003e 8));\n         out.writeByte((int) n);\n         return;\n       case 6:\n         out.writeByte(len - 129);\n         out.writeInt((int) (n \u003e\u003e\u003e 16));\n         out.writeShort((int) n);\n         return;\n       case 7:\n         out.writeByte(len - 129);\n         out.writeInt((int) (n \u003e\u003e\u003e 24));\n         out.writeShort((int) (n \u003e\u003e\u003e 8));\n         out.writeByte((int) n);\n         return;\n       case 8:\n         out.writeByte(len - 129);\n         out.writeLong(n);\n         return;\n       default:\n-        throw new RuntimeException(\"Internel error\");\n+        throw new RuntimeException(\"Internal error\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeVLong(DataOutput out, long n) throws IOException {\n    if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n      out.writeByte((int) n);\n      return;\n    }\n\n    long un \u003d (n \u003c 0) ? ~n : n;\n    // how many bytes do we need to represent the number with sign bit?\n    int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n    int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n    switch (len) {\n      case 1:\n        // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n        firstByte \u003e\u003e\u003d 8;\n      case 2:\n        if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n          out.writeByte(firstByte - 52);\n          out.writeByte((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n        firstByte \u003e\u003e\u003d 8;\n      case 3:\n        if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n          out.writeByte(firstByte - 88);\n          out.writeShort((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n        firstByte \u003e\u003e\u003d 8;\n      case 4:\n        if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n          out.writeByte(firstByte - 112);\n          out.writeShort(((int) n) \u003e\u003e\u003e 8);\n          out.writeByte((int) n);\n          return;\n        }\n        out.writeByte(len - 129);\n        out.writeInt((int) n);\n        return;\n      case 5:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 6:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 16));\n        out.writeShort((int) n);\n        return;\n      case 7:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 24));\n        out.writeShort((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 8:\n        out.writeByte(len - 129);\n        out.writeLong(n);\n        return;\n      default:\n        throw new RuntimeException(\"Internal error\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void writeVLong(DataOutput out, long n) throws IOException {\n    if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n      out.writeByte((int) n);\n      return;\n    }\n\n    long un \u003d (n \u003c 0) ? ~n : n;\n    // how many bytes do we need to represent the number with sign bit?\n    int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n    int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n    switch (len) {\n      case 1:\n        // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n        firstByte \u003e\u003e\u003d 8;\n      case 2:\n        if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n          out.writeByte(firstByte - 52);\n          out.writeByte((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n        firstByte \u003e\u003e\u003d 8;\n      case 3:\n        if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n          out.writeByte(firstByte - 88);\n          out.writeShort((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n        firstByte \u003e\u003e\u003d 8;\n      case 4:\n        if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n          out.writeByte(firstByte - 112);\n          out.writeShort(((int) n) \u003e\u003e\u003e 8);\n          out.writeByte((int) n);\n          return;\n        }\n        out.writeByte(len - 129);\n        out.writeInt((int) n);\n        return;\n      case 5:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 6:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 16));\n        out.writeShort((int) n);\n        return;\n      case 7:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 24));\n        out.writeShort((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 8:\n        out.writeByte(len - 129);\n        out.writeLong(n);\n        return;\n      default:\n        throw new RuntimeException(\"Internel error\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void writeVLong(DataOutput out, long n) throws IOException {\n    if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n      out.writeByte((int) n);\n      return;\n    }\n\n    long un \u003d (n \u003c 0) ? ~n : n;\n    // how many bytes do we need to represent the number with sign bit?\n    int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n    int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n    switch (len) {\n      case 1:\n        // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n        firstByte \u003e\u003e\u003d 8;\n      case 2:\n        if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n          out.writeByte(firstByte - 52);\n          out.writeByte((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n        firstByte \u003e\u003e\u003d 8;\n      case 3:\n        if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n          out.writeByte(firstByte - 88);\n          out.writeShort((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n        firstByte \u003e\u003e\u003d 8;\n      case 4:\n        if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n          out.writeByte(firstByte - 112);\n          out.writeShort(((int) n) \u003e\u003e\u003e 8);\n          out.writeByte((int) n);\n          return;\n        }\n        out.writeByte(len - 129);\n        out.writeInt((int) n);\n        return;\n      case 5:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 6:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 16));\n        out.writeShort((int) n);\n        return;\n      case 7:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 24));\n        out.writeShort((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 8:\n        out.writeByte(len - 129);\n        out.writeLong(n);\n        return;\n      default:\n        throw new RuntimeException(\"Internel error\");\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/file/tfile/Utils.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/file/tfile/Utils.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void writeVLong(DataOutput out, long n) throws IOException {\n    if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n      out.writeByte((int) n);\n      return;\n    }\n\n    long un \u003d (n \u003c 0) ? ~n : n;\n    // how many bytes do we need to represent the number with sign bit?\n    int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n    int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n    switch (len) {\n      case 1:\n        // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n        firstByte \u003e\u003e\u003d 8;\n      case 2:\n        if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n          out.writeByte(firstByte - 52);\n          out.writeByte((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n        firstByte \u003e\u003e\u003d 8;\n      case 3:\n        if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n          out.writeByte(firstByte - 88);\n          out.writeShort((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n        firstByte \u003e\u003e\u003d 8;\n      case 4:\n        if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n          out.writeByte(firstByte - 112);\n          out.writeShort(((int) n) \u003e\u003e\u003e 8);\n          out.writeByte((int) n);\n          return;\n        }\n        out.writeByte(len - 129);\n        out.writeInt((int) n);\n        return;\n      case 5:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 6:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 16));\n        out.writeShort((int) n);\n        return;\n      case 7:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 24));\n        out.writeShort((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 8:\n        out.writeByte(len - 129);\n        out.writeLong(n);\n        return;\n      default:\n        throw new RuntimeException(\"Internel error\");\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/io/file/tfile/Utils.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/file/tfile/Utils.java",
        "newPath": "common/src/java/org/apache/hadoop/io/file/tfile/Utils.java"
      }
    },
    "8246aa28ff72e3ae81eb6ce59852abd5828fadc6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-3315. Add a new, binary file foramt, TFile. Contributed by Hong Tang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@787913 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/06/09 10:48 PM",
      "commitName": "8246aa28ff72e3ae81eb6ce59852abd5828fadc6",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,64 @@\n+  public static void writeVLong(DataOutput out, long n) throws IOException {\n+    if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n+      out.writeByte((int) n);\n+      return;\n+    }\n+\n+    long un \u003d (n \u003c 0) ? ~n : n;\n+    // how many bytes do we need to represent the number with sign bit?\n+    int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n+    int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n+    switch (len) {\n+      case 1:\n+        // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n+        firstByte \u003e\u003e\u003d 8;\n+      case 2:\n+        if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n+          out.writeByte(firstByte - 52);\n+          out.writeByte((int) n);\n+          return;\n+        }\n+        // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n+        firstByte \u003e\u003e\u003d 8;\n+      case 3:\n+        if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n+          out.writeByte(firstByte - 88);\n+          out.writeShort((int) n);\n+          return;\n+        }\n+        // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n+        firstByte \u003e\u003e\u003d 8;\n+      case 4:\n+        if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n+          out.writeByte(firstByte - 112);\n+          out.writeShort(((int) n) \u003e\u003e\u003e 8);\n+          out.writeByte((int) n);\n+          return;\n+        }\n+        out.writeByte(len - 129);\n+        out.writeInt((int) n);\n+        return;\n+      case 5:\n+        out.writeByte(len - 129);\n+        out.writeInt((int) (n \u003e\u003e\u003e 8));\n+        out.writeByte((int) n);\n+        return;\n+      case 6:\n+        out.writeByte(len - 129);\n+        out.writeInt((int) (n \u003e\u003e\u003e 16));\n+        out.writeShort((int) n);\n+        return;\n+      case 7:\n+        out.writeByte(len - 129);\n+        out.writeInt((int) (n \u003e\u003e\u003e 24));\n+        out.writeShort((int) (n \u003e\u003e\u003e 8));\n+        out.writeByte((int) n);\n+        return;\n+      case 8:\n+        out.writeByte(len - 129);\n+        out.writeLong(n);\n+        return;\n+      default:\n+        throw new RuntimeException(\"Internel error\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeVLong(DataOutput out, long n) throws IOException {\n    if ((n \u003c 128) \u0026\u0026 (n \u003e\u003d -32)) {\n      out.writeByte((int) n);\n      return;\n    }\n\n    long un \u003d (n \u003c 0) ? ~n : n;\n    // how many bytes do we need to represent the number with sign bit?\n    int len \u003d (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1;\n    int firstByte \u003d (int) (n \u003e\u003e ((len - 1) * 8));\n    switch (len) {\n      case 1:\n        // fall it through to firstByte\u003d\u003d-1, len\u003d2.\n        firstByte \u003e\u003e\u003d 8;\n      case 2:\n        if ((firstByte \u003c 20) \u0026\u0026 (firstByte \u003e\u003d -20)) {\n          out.writeByte(firstByte - 52);\n          out.writeByte((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d3.\n        firstByte \u003e\u003e\u003d 8;\n      case 3:\n        if ((firstByte \u003c 16) \u0026\u0026 (firstByte \u003e\u003d -16)) {\n          out.writeByte(firstByte - 88);\n          out.writeShort((int) n);\n          return;\n        }\n        // fall it through to firstByte\u003d\u003d0/-1, len\u003d4.\n        firstByte \u003e\u003e\u003d 8;\n      case 4:\n        if ((firstByte \u003c 8) \u0026\u0026 (firstByte \u003e\u003d -8)) {\n          out.writeByte(firstByte - 112);\n          out.writeShort(((int) n) \u003e\u003e\u003e 8);\n          out.writeByte((int) n);\n          return;\n        }\n        out.writeByte(len - 129);\n        out.writeInt((int) n);\n        return;\n      case 5:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 6:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 16));\n        out.writeShort((int) n);\n        return;\n      case 7:\n        out.writeByte(len - 129);\n        out.writeInt((int) (n \u003e\u003e\u003e 24));\n        out.writeShort((int) (n \u003e\u003e\u003e 8));\n        out.writeByte((int) n);\n        return;\n      case 8:\n        out.writeByte(len - 129);\n        out.writeLong(n);\n        return;\n      default:\n        throw new RuntimeException(\"Internel error\");\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/file/tfile/Utils.java"
    }
  }
}