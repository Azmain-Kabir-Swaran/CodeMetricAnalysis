{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnitsConversionUtil.java",
  "functionName": "compareUnits",
  "functionId": "compareUnits___unitA-String__unitB-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/UnitsConversionUtil.java",
  "functionStartLine": 237,
  "functionEndLine": 244,
  "numCommitsSeen": 6,
  "timeTaken": 1857,
  "changeHistory": [
    "c8b53c43644b4ad22d5385c22cad8ed573c0b1ba"
  ],
  "changeHistoryShort": {
    "c8b53c43644b4ad22d5385c22cad8ed573c0b1ba": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c8b53c43644b4ad22d5385c22cad8ed573c0b1ba": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8202. DefaultAMSProcessor should properly check units of requested custom resource types against minimum/maximum allocation (snemeth via rkanter)\n",
      "commitDate": "10/05/18 9:31 AM",
      "commitName": "c8b53c43644b4ad22d5385c22cad8ed573c0b1ba",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,8 @@\n+  public static int compareUnits(String unitA, String unitB) {\n+    checkUnitArgument(unitA);\n+    checkUnitArgument(unitB);\n+    int unitAPos \u003d SORTED_UNITS.indexOf(unitA);\n+    int unitBPos \u003d SORTED_UNITS.indexOf(unitB);\n+\n+    return Integer.compare(unitAPos, unitBPos);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int compareUnits(String unitA, String unitB) {\n    checkUnitArgument(unitA);\n    checkUnitArgument(unitB);\n    int unitAPos \u003d SORTED_UNITS.indexOf(unitA);\n    int unitBPos \u003d SORTED_UNITS.indexOf(unitB);\n\n    return Integer.compare(unitAPos, unitBPos);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/UnitsConversionUtil.java"
    }
  }
}