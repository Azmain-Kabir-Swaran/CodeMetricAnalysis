{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EntityGroupFSTimelineStore.java",
  "functionName": "scanActiveLogs",
  "functionId": "scanActiveLogs___dir-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
  "functionStartLine": 361,
  "functionEndLine": 383,
  "numCommitsSeen": 17,
  "timeTaken": 2474,
  "changeHistory": [
    "44850f67848bd6fe5bfc2ebad693da77184053b7",
    "f44b349b813508f0f6d99ca10bddba683dedf6c4"
  ],
  "changeHistoryShort": {
    "44850f67848bd6fe5bfc2ebad693da77184053b7": "Ybodychange",
    "f44b349b813508f0f6d99ca10bddba683dedf6c4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "44850f67848bd6fe5bfc2ebad693da77184053b7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9816. EntityGroupFSTimelineStore#scanActiveLogs fails when undesired files are present under /ats/active. Contribued by Prabhu Joseph.\n",
      "commitDate": "12/09/19 12:20 AM",
      "commitName": "44850f67848bd6fe5bfc2ebad693da77184053b7",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "01/09/19 10:28 PM",
      "commitNameOld": "f4d6e82075b06bf09c1e2848af465c2d33f8531e",
      "commitAuthorOld": "Abhishek Modi",
      "daysBetweenCommits": 10.08,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,23 @@\n   int scanActiveLogs(Path dir) throws IOException {\n     RemoteIterator\u003cFileStatus\u003e iter \u003d list(dir);\n     int logsToScanCount \u003d 0;\n     while (iter.hasNext()) {\n       FileStatus stat \u003d iter.next();\n       String name \u003d stat.getPath().getName();\n       ApplicationId appId \u003d parseApplicationId(name);\n       if (appId !\u003d null) {\n         LOG.debug(\"scan logs for {} in {}\", appId, stat.getPath());\n         logsToScanCount++;\n         AppLogs logs \u003d getAndSetActiveLog(appId, stat.getPath());\n         executor.execute(new ActiveLogParser(logs));\n       } else {\n-        logsToScanCount +\u003d scanActiveLogs(stat.getPath());\n+        if (stat.isDirectory()) {\n+          logsToScanCount +\u003d scanActiveLogs(stat.getPath());\n+        } else {\n+          LOG.warn(\"Ignoring unexpected file in active directory {}\",\n+              stat.getPath());\n+        }\n       }\n     }\n     return logsToScanCount;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  int scanActiveLogs(Path dir) throws IOException {\n    RemoteIterator\u003cFileStatus\u003e iter \u003d list(dir);\n    int logsToScanCount \u003d 0;\n    while (iter.hasNext()) {\n      FileStatus stat \u003d iter.next();\n      String name \u003d stat.getPath().getName();\n      ApplicationId appId \u003d parseApplicationId(name);\n      if (appId !\u003d null) {\n        LOG.debug(\"scan logs for {} in {}\", appId, stat.getPath());\n        logsToScanCount++;\n        AppLogs logs \u003d getAndSetActiveLog(appId, stat.getPath());\n        executor.execute(new ActiveLogParser(logs));\n      } else {\n        if (stat.isDirectory()) {\n          logsToScanCount +\u003d scanActiveLogs(stat.getPath());\n        } else {\n          LOG.warn(\"Ignoring unexpected file in active directory {}\",\n              stat.getPath());\n        }\n      }\n    }\n    return logsToScanCount;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
      "extendedDetails": {}
    },
    "f44b349b813508f0f6d99ca10bddba683dedf6c4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6811. [ATS1.5] All history logs should be kept under its own User Directory. Contributed by Rohith Sharma K S.\n",
      "commitDate": "04/08/17 4:03 PM",
      "commitName": "f44b349b813508f0f6d99ca10bddba683dedf6c4",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,18 @@\n+  int scanActiveLogs(Path dir) throws IOException {\n+    RemoteIterator\u003cFileStatus\u003e iter \u003d list(dir);\n+    int logsToScanCount \u003d 0;\n+    while (iter.hasNext()) {\n+      FileStatus stat \u003d iter.next();\n+      String name \u003d stat.getPath().getName();\n+      ApplicationId appId \u003d parseApplicationId(name);\n+      if (appId !\u003d null) {\n+        LOG.debug(\"scan logs for {} in {}\", appId, stat.getPath());\n+        logsToScanCount++;\n+        AppLogs logs \u003d getAndSetActiveLog(appId, stat.getPath());\n+        executor.execute(new ActiveLogParser(logs));\n+      } else {\n+        logsToScanCount +\u003d scanActiveLogs(stat.getPath());\n+      }\n+    }\n+    return logsToScanCount;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  int scanActiveLogs(Path dir) throws IOException {\n    RemoteIterator\u003cFileStatus\u003e iter \u003d list(dir);\n    int logsToScanCount \u003d 0;\n    while (iter.hasNext()) {\n      FileStatus stat \u003d iter.next();\n      String name \u003d stat.getPath().getName();\n      ApplicationId appId \u003d parseApplicationId(name);\n      if (appId !\u003d null) {\n        LOG.debug(\"scan logs for {} in {}\", appId, stat.getPath());\n        logsToScanCount++;\n        AppLogs logs \u003d getAndSetActiveLog(appId, stat.getPath());\n        executor.execute(new ActiveLogParser(logs));\n      } else {\n        logsToScanCount +\u003d scanActiveLogs(stat.getPath());\n      }\n    }\n    return logsToScanCount;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java"
    }
  }
}