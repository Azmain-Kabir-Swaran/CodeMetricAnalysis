{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "getMaximumResourceCapability",
  "functionId": "getMaximumResourceCapability___queueName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 834,
  "functionEndLine": 851,
  "numCommitsSeen": 226,
  "timeTaken": 2726,
  "changeHistory": [
    "fd6be5898ad1a650e3bceacb8169a53520da57e5"
  ],
  "changeHistoryShort": {
    "fd6be5898ad1a650e3bceacb8169a53520da57e5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd6be5898ad1a650e3bceacb8169a53520da57e5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8468. Enable the use of queue based maximum container allocation limit and implement it in FairScheduler. Contributed by Antal BÃ¡lint Steinbach.\n",
      "commitDate": "29/09/18 2:47 AM",
      "commitName": "fd6be5898ad1a650e3bceacb8169a53520da57e5",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,18 @@\n+  public Resource getMaximumResourceCapability(String queueName) {\n+    if(queueName \u003d\u003d null || queueName.isEmpty()) {\n+      return  getMaximumResourceCapability();\n+    }\n+    FSQueue queue \u003d queueMgr.getQueue(queueName);\n+    Resource schedulerLevelMaxResourceCapability \u003d\n+        getMaximumResourceCapability();\n+    if (queue \u003d\u003d null) {\n+      return schedulerLevelMaxResourceCapability;\n+    }\n+    Resource queueMaxResourceCapability \u003d queue.getMaximumContainerAllocation();\n+    if (queueMaxResourceCapability.equals(Resources.unbounded())) {\n+      return schedulerLevelMaxResourceCapability;\n+    } else {\n+      return Resources.componentwiseMin(schedulerLevelMaxResourceCapability,\n+          queueMaxResourceCapability);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getMaximumResourceCapability(String queueName) {\n    if(queueName \u003d\u003d null || queueName.isEmpty()) {\n      return  getMaximumResourceCapability();\n    }\n    FSQueue queue \u003d queueMgr.getQueue(queueName);\n    Resource schedulerLevelMaxResourceCapability \u003d\n        getMaximumResourceCapability();\n    if (queue \u003d\u003d null) {\n      return schedulerLevelMaxResourceCapability;\n    }\n    Resource queueMaxResourceCapability \u003d queue.getMaximumContainerAllocation();\n    if (queueMaxResourceCapability.equals(Resources.unbounded())) {\n      return schedulerLevelMaxResourceCapability;\n    } else {\n      return Resources.componentwiseMin(schedulerLevelMaxResourceCapability,\n          queueMaxResourceCapability);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}