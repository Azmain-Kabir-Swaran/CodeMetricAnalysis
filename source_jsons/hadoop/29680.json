{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedSchedulingAMProtocolPBClientImpl.java",
  "functionName": "allocate",
  "functionId": "allocate___request-AllocateRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/client/DistributedSchedulingAMProtocolPBClientImpl.java",
  "functionStartLine": 142,
  "functionEndLine": 152,
  "numCommitsSeen": 4,
  "timeTaken": 1803,
  "changeHistory": [
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b"
  ],
  "changeHistoryShort": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Yfilerename",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "30/07/16 7:29 PM",
      "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  public AllocateResponse allocate(AllocateRequest request) throws\n-      YarnException, IOException {\n+  public AllocateResponse allocate(AllocateRequest request)\n+      throws YarnException, IOException {\n     YarnServiceProtos.AllocateRequestProto requestProto \u003d\n         ((AllocateRequestPBImpl) request).getProto();\n     try {\n       return new AllocateResponsePBImpl(proxy.allocate(null, requestProto));\n     } catch (ServiceException e) {\n       RPCUtil.unwrapAndThrowException(e);\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(AllocateRequest request)\n      throws YarnException, IOException {\n    YarnServiceProtos.AllocateRequestProto requestProto \u003d\n        ((AllocateRequestPBImpl) request).getProto();\n    try {\n      return new AllocateResponsePBImpl(proxy.allocate(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/client/DistributedSchedulingAMProtocolPBClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/client/DistributedSchedulerProtocolPBClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/client/DistributedSchedulingAMProtocolPBClientImpl.java"
      }
    },
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2885. Create AMRMProxy request interceptor and ContainerAllocator to distribute OPPORTUNISTIC containers to appropriate Nodes (asuresh)\n\n(cherry picked from commit 2bf025278a318b0452fdc9ece4427b4c42124e39)\n",
      "commitDate": "24/04/16 10:38 PM",
      "commitName": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,11 @@\n+  public AllocateResponse allocate(AllocateRequest request) throws\n+      YarnException, IOException {\n+    YarnServiceProtos.AllocateRequestProto requestProto \u003d\n+        ((AllocateRequestPBImpl) request).getProto();\n+    try {\n+      return new AllocateResponsePBImpl(proxy.allocate(null, requestProto));\n+    } catch (ServiceException e) {\n+      RPCUtil.unwrapAndThrowException(e);\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(AllocateRequest request) throws\n      YarnException, IOException {\n    YarnServiceProtos.AllocateRequestProto requestProto \u003d\n        ((AllocateRequestPBImpl) request).getProto();\n    try {\n      return new AllocateResponsePBImpl(proxy.allocate(null, requestProto));\n    } catch (ServiceException e) {\n      RPCUtil.unwrapAndThrowException(e);\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/client/DistributedSchedulerProtocolPBClientImpl.java"
    }
  }
}