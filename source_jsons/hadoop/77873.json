{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PathData.java",
  "functionName": "checkIfSchemeInferredFromPath",
  "functionId": "checkIfSchemeInferredFromPath___pathString-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
  "functionStartLine": 115,
  "functionEndLine": 139,
  "numCommitsSeen": 31,
  "timeTaken": 2205,
  "changeHistory": [
    "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f",
    "638801cce16fc1dc3259c541dc30a599faaddda1"
  ],
  "changeHistoryShort": {
    "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-4329. DFSShell issues with directories with spaces in name (Cristina L. Abad via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/13 8:48 AM",
      "commitName": "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f",
      "commitAuthor": "Jonathan Turner Eagles",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-4329. DFSShell issues with directories with spaces in name (Cristina L. Abad via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/08/13 8:48 AM",
          "commitName": "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f",
          "commitAuthor": "Jonathan Turner Eagles",
          "commitDateOld": "07/03/13 1:32 PM",
          "commitNameOld": "a3c4488efd3556cb9a14a520e2c06a9fa022ec29",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 168.76,
          "commitsBetweenForRepo": 1050,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n-  private void ValidateWindowsPath(String pathString)\n+  private static boolean checkIfSchemeInferredFromPath(String pathString)\n   throws IOException\n   {\n     if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n       // Forward slashes disallowed in a backslash-separated path.\n       if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n         throw new IOException(\"Invalid path string \" + pathString);\n       }\n \n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Is it a forward slash-separated absolute path?\n     if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Does it look like a URI? If so then just leave it alone.\n     if (potentialUri.matcher(pathString).find()) {\n-      return;\n+      return false;\n     }\n \n     // Looks like a relative path on Windows.\n-    return;\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean checkIfSchemeInferredFromPath(String pathString)\n  throws IOException\n  {\n    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n      // Forward slashes disallowed in a backslash-separated path.\n      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n        throw new IOException(\"Invalid path string \" + pathString);\n      }\n\n      return true;\n    }\n\n    // Is it a forward slash-separated absolute path?\n    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n      return true;\n    }\n\n    // Does it look like a URI? If so then just leave it alone.\n    if (potentialUri.matcher(pathString).find()) {\n      return false;\n    }\n\n    // Looks like a relative path on Windows.\n    return false;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
          "extendedDetails": {
            "oldValue": "ValidateWindowsPath",
            "newValue": "checkIfSchemeInferredFromPath"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4329. DFSShell issues with directories with spaces in name (Cristina L. Abad via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/08/13 8:48 AM",
          "commitName": "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f",
          "commitAuthor": "Jonathan Turner Eagles",
          "commitDateOld": "07/03/13 1:32 PM",
          "commitNameOld": "a3c4488efd3556cb9a14a520e2c06a9fa022ec29",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 168.76,
          "commitsBetweenForRepo": 1050,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n-  private void ValidateWindowsPath(String pathString)\n+  private static boolean checkIfSchemeInferredFromPath(String pathString)\n   throws IOException\n   {\n     if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n       // Forward slashes disallowed in a backslash-separated path.\n       if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n         throw new IOException(\"Invalid path string \" + pathString);\n       }\n \n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Is it a forward slash-separated absolute path?\n     if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Does it look like a URI? If so then just leave it alone.\n     if (potentialUri.matcher(pathString).find()) {\n-      return;\n+      return false;\n     }\n \n     // Looks like a relative path on Windows.\n-    return;\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean checkIfSchemeInferredFromPath(String pathString)\n  throws IOException\n  {\n    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n      // Forward slashes disallowed in a backslash-separated path.\n      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n        throw new IOException(\"Invalid path string \" + pathString);\n      }\n\n      return true;\n    }\n\n    // Is it a forward slash-separated absolute path?\n    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n      return true;\n    }\n\n    // Does it look like a URI? If so then just leave it alone.\n    if (potentialUri.matcher(pathString).find()) {\n      return false;\n    }\n\n    // Looks like a relative path on Windows.\n    return false;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-4329. DFSShell issues with directories with spaces in name (Cristina L. Abad via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/08/13 8:48 AM",
          "commitName": "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f",
          "commitAuthor": "Jonathan Turner Eagles",
          "commitDateOld": "07/03/13 1:32 PM",
          "commitNameOld": "a3c4488efd3556cb9a14a520e2c06a9fa022ec29",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 168.76,
          "commitsBetweenForRepo": 1050,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n-  private void ValidateWindowsPath(String pathString)\n+  private static boolean checkIfSchemeInferredFromPath(String pathString)\n   throws IOException\n   {\n     if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n       // Forward slashes disallowed in a backslash-separated path.\n       if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n         throw new IOException(\"Invalid path string \" + pathString);\n       }\n \n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Is it a forward slash-separated absolute path?\n     if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Does it look like a URI? If so then just leave it alone.\n     if (potentialUri.matcher(pathString).find()) {\n-      return;\n+      return false;\n     }\n \n     // Looks like a relative path on Windows.\n-    return;\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean checkIfSchemeInferredFromPath(String pathString)\n  throws IOException\n  {\n    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n      // Forward slashes disallowed in a backslash-separated path.\n      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n        throw new IOException(\"Invalid path string \" + pathString);\n      }\n\n      return true;\n    }\n\n    // Is it a forward slash-separated absolute path?\n    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n      return true;\n    }\n\n    // Does it look like a URI? If so then just leave it alone.\n    if (potentialUri.matcher(pathString).find()) {\n      return false;\n    }\n\n    // Looks like a relative path on Windows.\n    return false;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4329. DFSShell issues with directories with spaces in name (Cristina L. Abad via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/08/13 8:48 AM",
          "commitName": "e588ffe3c09c74c94eb6bfc3071310191fbf9e1f",
          "commitAuthor": "Jonathan Turner Eagles",
          "commitDateOld": "07/03/13 1:32 PM",
          "commitNameOld": "a3c4488efd3556cb9a14a520e2c06a9fa022ec29",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 168.76,
          "commitsBetweenForRepo": 1050,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n-  private void ValidateWindowsPath(String pathString)\n+  private static boolean checkIfSchemeInferredFromPath(String pathString)\n   throws IOException\n   {\n     if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n       // Forward slashes disallowed in a backslash-separated path.\n       if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n         throw new IOException(\"Invalid path string \" + pathString);\n       }\n \n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Is it a forward slash-separated absolute path?\n     if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n-      inferredSchemeFromPath \u003d true;\n-      return;\n+      return true;\n     }\n \n     // Does it look like a URI? If so then just leave it alone.\n     if (potentialUri.matcher(pathString).find()) {\n-      return;\n+      return false;\n     }\n \n     // Looks like a relative path on Windows.\n-    return;\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean checkIfSchemeInferredFromPath(String pathString)\n  throws IOException\n  {\n    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n      // Forward slashes disallowed in a backslash-separated path.\n      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n        throw new IOException(\"Invalid path string \" + pathString);\n      }\n\n      return true;\n    }\n\n    // Is it a forward slash-separated absolute path?\n    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n      return true;\n    }\n\n    // Does it look like a URI? If so then just leave it alone.\n    if (potentialUri.matcher(pathString).find()) {\n      return false;\n    }\n\n    // Looks like a relative path on Windows.\n    return false;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
          "extendedDetails": {}
        }
      ]
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,27 @@\n+  private void ValidateWindowsPath(String pathString)\n+  throws IOException\n+  {\n+    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n+      // Forward slashes disallowed in a backslash-separated path.\n+      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n+        throw new IOException(\"Invalid path string \" + pathString);\n+      }\n+\n+      inferredSchemeFromPath \u003d true;\n+      return;\n+    }\n+\n+    // Is it a forward slash-separated absolute path?\n+    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n+      inferredSchemeFromPath \u003d true;\n+      return;\n+    }\n+\n+    // Does it look like a URI? If so then just leave it alone.\n+    if (potentialUri.matcher(pathString).find()) {\n+      return;\n+    }\n+\n+    // Looks like a relative path on Windows.\n+    return;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void ValidateWindowsPath(String pathString)\n  throws IOException\n  {\n    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n      // Forward slashes disallowed in a backslash-separated path.\n      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n        throw new IOException(\"Invalid path string \" + pathString);\n      }\n\n      inferredSchemeFromPath \u003d true;\n      return;\n    }\n\n    // Is it a forward slash-separated absolute path?\n    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n      inferredSchemeFromPath \u003d true;\n      return;\n    }\n\n    // Does it look like a URI? If so then just leave it alone.\n    if (potentialUri.matcher(pathString).find()) {\n      return;\n    }\n\n    // Looks like a relative path on Windows.\n    return;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java"
    }
  }
}