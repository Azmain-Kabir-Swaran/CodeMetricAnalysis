{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractReservationSystem.java",
  "functionName": "initializeNewPlans",
  "functionId": "initializeNewPlans___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
  "functionStartLine": 220,
  "functionEndLine": 244,
  "numCommitsSeen": 15,
  "timeTaken": 1447,
  "changeHistory": [
    "2798723a5443d04455b9d79c48d61f435ab52267",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "2798723a5443d04455b9d79c48d61f435ab52267": "Ybodychange",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2798723a5443d04455b9d79c48d61f435ab52267": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3739. Add reservation system recovery to RM recovery process. Contributed by  Subru Krishnan.\n",
      "commitDate": "22/10/15 6:51 AM",
      "commitName": "2798723a5443d04455b9d79c48d61f435ab52267",
      "commitAuthor": "Anubhav Dhoot",
      "commitDateOld": "20/10/15 4:46 PM",
      "commitNameOld": "506d1b1dbcb7ae5dad4a3dc4d415af241c72887c",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 1.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private void initializeNewPlans(Configuration conf) {\n     LOG.info(\"Refreshing Reservation system\");\n     writeLock.lock();\n     try {\n       // Create a plan corresponding to every new reservable queue\n       Set\u003cString\u003e planQueueNames \u003d scheduler.getPlanQueues();\n       for (String planQueueName : planQueueNames) {\n         if (!plans.containsKey(planQueueName)) {\n           Plan plan \u003d initializePlan(planQueueName);\n           plans.put(planQueueName, plan);\n         } else {\n-          LOG.warn(\"Plan based on reservation queue {0} already exists.\",\n+          LOG.warn(\"Plan based on reservation queue {} already exists.\",\n               planQueueName);\n         }\n       }\n       // Update the plan follower with the active plans\n       if (planFollower !\u003d null) {\n         planFollower.setPlans(plans.values());\n       }\n     } catch (YarnException e) {\n       LOG.warn(\"Exception while trying to refresh reservable queues\", e);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeNewPlans(Configuration conf) {\n    LOG.info(\"Refreshing Reservation system\");\n    writeLock.lock();\n    try {\n      // Create a plan corresponding to every new reservable queue\n      Set\u003cString\u003e planQueueNames \u003d scheduler.getPlanQueues();\n      for (String planQueueName : planQueueNames) {\n        if (!plans.containsKey(planQueueName)) {\n          Plan plan \u003d initializePlan(planQueueName);\n          plans.put(planQueueName, plan);\n        } else {\n          LOG.warn(\"Plan based on reservation queue {} already exists.\",\n              planQueueName);\n        }\n      }\n      // Update the plan follower with the active plans\n      if (planFollower !\u003d null) {\n        planFollower.setPlans(plans.values());\n      }\n    } catch (YarnException e) {\n      LOG.warn(\"Exception while trying to refresh reservable queues\", e);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,25 @@\n+  private void initializeNewPlans(Configuration conf) {\n+    LOG.info(\"Refreshing Reservation system\");\n+    writeLock.lock();\n+    try {\n+      // Create a plan corresponding to every new reservable queue\n+      Set\u003cString\u003e planQueueNames \u003d scheduler.getPlanQueues();\n+      for (String planQueueName : planQueueNames) {\n+        if (!plans.containsKey(planQueueName)) {\n+          Plan plan \u003d initializePlan(planQueueName);\n+          plans.put(planQueueName, plan);\n+        } else {\n+          LOG.warn(\"Plan based on reservation queue {0} already exists.\",\n+              planQueueName);\n+        }\n+      }\n+      // Update the plan follower with the active plans\n+      if (planFollower !\u003d null) {\n+        planFollower.setPlans(plans.values());\n+      }\n+    } catch (YarnException e) {\n+      LOG.warn(\"Exception while trying to refresh reservable queues\", e);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeNewPlans(Configuration conf) {\n    LOG.info(\"Refreshing Reservation system\");\n    writeLock.lock();\n    try {\n      // Create a plan corresponding to every new reservable queue\n      Set\u003cString\u003e planQueueNames \u003d scheduler.getPlanQueues();\n      for (String planQueueName : planQueueNames) {\n        if (!plans.containsKey(planQueueName)) {\n          Plan plan \u003d initializePlan(planQueueName);\n          plans.put(planQueueName, plan);\n        } else {\n          LOG.warn(\"Plan based on reservation queue {0} already exists.\",\n              planQueueName);\n        }\n      }\n      // Update the plan follower with the active plans\n      if (planFollower !\u003d null) {\n        planFollower.setPlans(plans.values());\n      }\n    } catch (YarnException e) {\n      LOG.warn(\"Exception while trying to refresh reservable queues\", e);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java"
    }
  }
}