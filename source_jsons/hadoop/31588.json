{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineReaderImpl.java",
  "functionName": "getEntity",
  "functionId": "getEntity___context-TimelineReaderContext__dataToRetrieve-TimelineDataToRetrieve",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
  "functionStartLine": 82,
  "functionEndLine": 89,
  "numCommitsSeen": 39,
  "timeTaken": 5284,
  "changeHistory": [
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
    "ba683204498c97654be4727ab9e128c433a45498",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9",
    "00e85e7a2b9446dc37265feba07473b156d66367",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65"
  ],
  "changeHistoryShort": {
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58": "Ybodychange",
    "ba683204498c97654be4727ab9e128c433a45498": "Ybodychange",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": "Ymultichange(Yparameterchange,Ybodychange)",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": "Ymultichange(Yparameterchange,Ybodychange)",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": "Ybodychange",
    "00e85e7a2b9446dc37265feba07473b156d66367": "Ybodychange",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8499 ATSv2 Generalize TimelineStorageMonitor.\n           Contributed by Prabhu Joseph\n",
      "commitDate": "14/06/19 3:59 PM",
      "commitName": "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "30/05/19 9:58 PM",
      "commitNameOld": "e49162f4b3791dbf51079e3b19dd0c8bc2a85158",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 14.75,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public TimelineEntity getEntity(TimelineReaderContext context,\n       TimelineDataToRetrieve dataToRetrieve) throws IOException {\n-    checkHBaseDown();\n+    storageMonitor.checkStorageIsUp();\n     TimelineEntityReader reader \u003d\n         TimelineEntityReaderFactory.createSingleEntityReader(context,\n             dataToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntity getEntity(TimelineReaderContext context,\n      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n    storageMonitor.checkStorageIsUp();\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(context,\n            dataToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "ba683204498c97654be4727ab9e128c433a45498": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8302. ATS v2 should handle HBase connection issue properly. Contributed by Billie Rinaldi.\n",
      "commitDate": "06/07/18 3:19 PM",
      "commitName": "ba683204498c97654be4727ab9e128c433a45498",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 7:00 AM",
      "commitNameOld": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 139.3,
      "commitsBetweenForRepo": 1585,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   public TimelineEntity getEntity(TimelineReaderContext context,\n       TimelineDataToRetrieve dataToRetrieve) throws IOException {\n+    checkHBaseDown();\n     TimelineEntityReader reader \u003d\n         TimelineEntityReaderFactory.createSingleEntityReader(context,\n             dataToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntity getEntity(TimelineReaderContext context,\n      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n    checkHBaseDown();\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(context,\n            dataToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public TimelineEntity getEntity(TimelineReaderContext context,\n      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(context,\n            dataToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public TimelineEntity getEntity(TimelineReaderContext context,\n      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(context,\n            dataToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java"
      }
    },
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,7 @@\n-  public TimelineEntity getEntity(String userId, String clusterId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      String entityId, TimelineFilterList confsToRetrieve,\n-      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n-      throws IOException {\n+  public TimelineEntity getEntity(TimelineReaderContext context,\n+      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n     TimelineEntityReader reader \u003d\n-        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n-            flowName, flowRunId, appId, entityType, entityId, confsToRetrieve,\n-            metricsToRetrieve, fieldsToRetrieve);\n+        TimelineEntityReaderFactory.createSingleEntityReader(context,\n+            dataToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntity getEntity(TimelineReaderContext context,\n      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(context,\n            dataToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, entityId-String, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[context-TimelineReaderContext, dataToRetrieve-TimelineDataToRetrieve]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,7 @@\n-  public TimelineEntity getEntity(String userId, String clusterId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      String entityId, TimelineFilterList confsToRetrieve,\n-      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n-      throws IOException {\n+  public TimelineEntity getEntity(TimelineReaderContext context,\n+      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n     TimelineEntityReader reader \u003d\n-        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n-            flowName, flowRunId, appId, entityType, entityId, confsToRetrieve,\n-            metricsToRetrieve, fieldsToRetrieve);\n+        TimelineEntityReaderFactory.createSingleEntityReader(context,\n+            dataToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntity getEntity(TimelineReaderContext context,\n      TimelineDataToRetrieve dataToRetrieve) throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(context,\n            dataToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n   public TimelineEntity getEntity(String userId, String clusterId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       String entityId, TimelineFilterList confsToRetrieve,\n       TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n       throws IOException {\n     TimelineEntityReader reader \u003d\n         TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n-            flowId, flowRunId, appId, entityType, entityId, confsToRetrieve,\n+            flowName, flowRunId, appId, entityType, entityId, confsToRetrieve,\n             metricsToRetrieve, fieldsToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      String entityId, TimelineFilterList confsToRetrieve,\n      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n            flowName, flowRunId, appId, entityType, entityId, confsToRetrieve,\n            metricsToRetrieve, fieldsToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, entityId-String, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, entityId-String, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n   public TimelineEntity getEntity(String userId, String clusterId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       String entityId, TimelineFilterList confsToRetrieve,\n       TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n       throws IOException {\n     TimelineEntityReader reader \u003d\n         TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n-            flowId, flowRunId, appId, entityType, entityId, confsToRetrieve,\n+            flowName, flowRunId, appId, entityType, entityId, confsToRetrieve,\n             metricsToRetrieve, fieldsToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      String entityId, TimelineFilterList confsToRetrieve,\n      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n            flowName, flowRunId, appId, entityType, entityId, confsToRetrieve,\n            metricsToRetrieve, fieldsToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
          "commitAuthorOld": "Vrushali",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n   public TimelineEntity getEntity(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n-      String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n+      String entityId, TimelineFilterList confsToRetrieve,\n+      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n       throws IOException {\n     TimelineEntityReader reader \u003d\n         TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n-            flowId, flowRunId, appId, entityType, entityId, fieldsToRetrieve);\n+            flowId, flowRunId, appId, entityType, entityId, confsToRetrieve,\n+            metricsToRetrieve, fieldsToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId, TimelineFilterList confsToRetrieve,\n      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n            flowId, flowRunId, appId, entityType, entityId, confsToRetrieve,\n            metricsToRetrieve, fieldsToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, entityId-String, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, entityId-String, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
          "commitAuthorOld": "Vrushali",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n   public TimelineEntity getEntity(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n-      String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n+      String entityId, TimelineFilterList confsToRetrieve,\n+      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n       throws IOException {\n     TimelineEntityReader reader \u003d\n         TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n-            flowId, flowRunId, appId, entityType, entityId, fieldsToRetrieve);\n+            flowId, flowRunId, appId, entityType, entityId, confsToRetrieve,\n+            metricsToRetrieve, fieldsToRetrieve);\n     return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId, TimelineFilterList confsToRetrieve,\n      TimelineFilterList metricsToRetrieve, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n            flowId, flowRunId, appId, entityType, entityId, confsToRetrieve,\n            metricsToRetrieve, fieldsToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthor": "Vrushali",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "7a41b5501ea76f94f15f53f6380b3c63f14b5a78",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,9 @@\n   public TimelineEntity getEntity(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n       throws IOException {\n-    validateParams(userId, clusterId, appId, entityType, entityId, true);\n-    // In reality both should be null or neither should be null\n-    if (flowId \u003d\u003d null || flowRunId \u003d\u003d null) {\n-      FlowContext context \u003d lookupFlowContext(clusterId, appId);\n-      flowId \u003d context.flowId;\n-      flowRunId \u003d context.flowRunId;\n-    }\n-    if (fieldsToRetrieve \u003d\u003d null) {\n-      fieldsToRetrieve \u003d EnumSet.noneOf(Field.class);\n-    }\n-\n-    boolean isApplication \u003d isApplicationEntity(entityType);\n-    byte[] rowKey \u003d isApplication ?\n-        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n-            appId) :\n-        EntityRowKey.getRowKey(clusterId, userId, flowId, flowRunId, appId,\n-            entityType, entityId);\n-    Get get \u003d new Get(rowKey);\n-    get.setMaxVersions(Integer.MAX_VALUE);\n-    Result result \u003d isApplication ?\n-        applicationTable.getResult(hbaseConf, conn, get) :\n-        entityTable.getResult(hbaseConf, conn, get);\n-    return parseEntity(result, fieldsToRetrieve,\n-        false, DEFAULT_BEGIN_TIME, DEFAULT_END_TIME, false, DEFAULT_BEGIN_TIME,\n-        DEFAULT_END_TIME, null, null, null, null, null, null, isApplication);\n+    TimelineEntityReader reader \u003d\n+        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n+            flowId, flowRunId, appId, entityType, entityId, fieldsToRetrieve);\n+    return reader.readEntity(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    TimelineEntityReader reader \u003d\n        TimelineEntityReaderFactory.createSingleEntityReader(userId, clusterId,\n            flowId, flowRunId, appId, entityType, entityId, fieldsToRetrieve);\n    return reader.readEntity(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "00e85e7a2b9446dc37265feba07473b156d66367": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3906. Split the application table from the entity table. Contributed by Sangjin Lee.\n\n(cherry picked from commit bcd755eba9466ce277d3c14192c31da6462c4ab3)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "00e85e7a2b9446dc37265feba07473b156d66367",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,30 @@\n   public TimelineEntity getEntity(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n       throws IOException {\n     validateParams(userId, clusterId, appId, entityType, entityId, true);\n     // In reality both should be null or neither should be null\n     if (flowId \u003d\u003d null || flowRunId \u003d\u003d null) {\n       FlowContext context \u003d lookupFlowContext(clusterId, appId);\n       flowId \u003d context.flowId;\n       flowRunId \u003d context.flowRunId;\n     }\n     if (fieldsToRetrieve \u003d\u003d null) {\n       fieldsToRetrieve \u003d EnumSet.noneOf(Field.class);\n     }\n \n-    byte[] rowKey \u003d EntityRowKey.getRowKey(\n-        clusterId, userId, flowId, flowRunId, appId, entityType, entityId);\n+    boolean isApplication \u003d isApplicationEntity(entityType);\n+    byte[] rowKey \u003d isApplication ?\n+        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n+            appId) :\n+        EntityRowKey.getRowKey(clusterId, userId, flowId, flowRunId, appId,\n+            entityType, entityId);\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(Integer.MAX_VALUE);\n-    return parseEntity(\n-        entityTable.getResult(hbaseConf, conn, get), fieldsToRetrieve,\n+    Result result \u003d isApplication ?\n+        applicationTable.getResult(hbaseConf, conn, get) :\n+        entityTable.getResult(hbaseConf, conn, get);\n+    return parseEntity(result, fieldsToRetrieve,\n         false, DEFAULT_BEGIN_TIME, DEFAULT_END_TIME, false, DEFAULT_BEGIN_TIME,\n-        DEFAULT_END_TIME, null, null, null, null, null, null);\n+        DEFAULT_END_TIME, null, null, null, null, null, null, isApplication);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    validateParams(userId, clusterId, appId, entityType, entityId, true);\n    // In reality both should be null or neither should be null\n    if (flowId \u003d\u003d null || flowRunId \u003d\u003d null) {\n      FlowContext context \u003d lookupFlowContext(clusterId, appId);\n      flowId \u003d context.flowId;\n      flowRunId \u003d context.flowRunId;\n    }\n    if (fieldsToRetrieve \u003d\u003d null) {\n      fieldsToRetrieve \u003d EnumSet.noneOf(Field.class);\n    }\n\n    boolean isApplication \u003d isApplicationEntity(entityType);\n    byte[] rowKey \u003d isApplication ?\n        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n            appId) :\n        EntityRowKey.getRowKey(clusterId, userId, flowId, flowRunId, appId,\n            entityType, entityId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    Result result \u003d isApplication ?\n        applicationTable.getResult(hbaseConf, conn, get) :\n        entityTable.getResult(hbaseConf, conn, get);\n    return parseEntity(result, fieldsToRetrieve,\n        false, DEFAULT_BEGIN_TIME, DEFAULT_END_TIME, false, DEFAULT_BEGIN_TIME,\n        DEFAULT_END_TIME, null, null, null, null, null, null, isApplication);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,24 @@\n+  public TimelineEntity getEntity(String userId, String clusterId,\n+      String flowId, Long flowRunId, String appId, String entityType,\n+      String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n+      throws IOException {\n+    validateParams(userId, clusterId, appId, entityType, entityId, true);\n+    // In reality both should be null or neither should be null\n+    if (flowId \u003d\u003d null || flowRunId \u003d\u003d null) {\n+      FlowContext context \u003d lookupFlowContext(clusterId, appId);\n+      flowId \u003d context.flowId;\n+      flowRunId \u003d context.flowRunId;\n+    }\n+    if (fieldsToRetrieve \u003d\u003d null) {\n+      fieldsToRetrieve \u003d EnumSet.noneOf(Field.class);\n+    }\n+\n+    byte[] rowKey \u003d EntityRowKey.getRowKey(\n+        clusterId, userId, flowId, flowRunId, appId, entityType, entityId);\n+    Get get \u003d new Get(rowKey);\n+    get.setMaxVersions(Integer.MAX_VALUE);\n+    return parseEntity(\n+        entityTable.getResult(hbaseConf, conn, get), fieldsToRetrieve,\n+        false, DEFAULT_BEGIN_TIME, DEFAULT_END_TIME, false, DEFAULT_BEGIN_TIME,\n+        DEFAULT_END_TIME, null, null, null, null, null, null);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntity getEntity(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId, EnumSet\u003cField\u003e fieldsToRetrieve)\n      throws IOException {\n    validateParams(userId, clusterId, appId, entityType, entityId, true);\n    // In reality both should be null or neither should be null\n    if (flowId \u003d\u003d null || flowRunId \u003d\u003d null) {\n      FlowContext context \u003d lookupFlowContext(clusterId, appId);\n      flowId \u003d context.flowId;\n      flowRunId \u003d context.flowRunId;\n    }\n    if (fieldsToRetrieve \u003d\u003d null) {\n      fieldsToRetrieve \u003d EnumSet.noneOf(Field.class);\n    }\n\n    byte[] rowKey \u003d EntityRowKey.getRowKey(\n        clusterId, userId, flowId, flowRunId, appId, entityType, entityId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    return parseEntity(\n        entityTable.getResult(hbaseConf, conn, get), fieldsToRetrieve,\n        false, DEFAULT_BEGIN_TIME, DEFAULT_END_TIME, false, DEFAULT_BEGIN_TIME,\n        DEFAULT_END_TIME, null, null, null, null, null, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java"
    }
  }
}