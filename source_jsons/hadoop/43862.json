{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceTimelinePublisher.java",
  "functionName": "componentInstanceStarted",
  "functionId": "componentInstanceStarted___container-Container__instance-ComponentInstance",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
  "functionStartLine": 152,
  "functionEndLine": 180,
  "numCommitsSeen": 13,
  "timeTaken": 2596,
  "changeHistory": [
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2"
  ],
  "changeHistoryShort": {
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void componentInstanceStarted(Container container,\n      ComponentInstance instance) {\n\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    entity.setCreatedTime(container.getLaunchTime().getTime());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n        container.getBareHost());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n        container.getLaunchTime().getTime());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n        instance.getCompName());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n        instance.getCompInstanceName());\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n    startEvent.setTimestamp(container.getLaunchTime().getTime());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n   public void componentInstanceStarted(Container container,\n-      String componentName) {\n+      ComponentInstance instance) {\n \n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n     entity.setCreatedTime(container.getLaunchTime().getTime());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.BARE_HOST,\n+    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n         container.getBareHost());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n         container.getState().toString());\n-    entityInfos.put(SliderTimelineMetricsConstants.LAUNCH_TIME,\n+    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n         container.getLaunchTime().getTime());\n-    entityInfos.put(SliderTimelineMetricsConstants.COMPONENT_NAME,\n-        componentName);\n+    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n+        instance.getCompName());\n+    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n+        instance.getCompInstanceName());\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n     startEvent.setTimestamp(container.getLaunchTime().getTime());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceStarted(Container container,\n      ComponentInstance instance) {\n\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    entity.setCreatedTime(container.getLaunchTime().getTime());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n        container.getBareHost());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n        container.getLaunchTime().getTime());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n        instance.getCompName());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n        instance.getCompInstanceName());\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n    startEvent.setTimestamp(container.getLaunchTime().getTime());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n   public void componentInstanceStarted(Container container,\n-      String componentName) {\n+      ComponentInstance instance) {\n \n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n     entity.setCreatedTime(container.getLaunchTime().getTime());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.BARE_HOST,\n+    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n         container.getBareHost());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n         container.getState().toString());\n-    entityInfos.put(SliderTimelineMetricsConstants.LAUNCH_TIME,\n+    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n         container.getLaunchTime().getTime());\n-    entityInfos.put(SliderTimelineMetricsConstants.COMPONENT_NAME,\n-        componentName);\n+    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n+        instance.getCompName());\n+    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n+        instance.getCompInstanceName());\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n     startEvent.setTimestamp(container.getLaunchTime().getTime());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceStarted(Container container,\n      ComponentInstance instance) {\n\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    entity.setCreatedTime(container.getLaunchTime().getTime());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n        container.getBareHost());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n        container.getLaunchTime().getTime());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n        instance.getCompName());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n        instance.getCompInstanceName());\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n    startEvent.setTimestamp(container.getLaunchTime().getTime());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n   public void componentInstanceStarted(Container container,\n-      String componentName) {\n+      ComponentInstance instance) {\n \n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n     entity.setCreatedTime(container.getLaunchTime().getTime());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.BARE_HOST,\n+    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n         container.getBareHost());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n         container.getState().toString());\n-    entityInfos.put(SliderTimelineMetricsConstants.LAUNCH_TIME,\n+    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n         container.getLaunchTime().getTime());\n-    entityInfos.put(SliderTimelineMetricsConstants.COMPONENT_NAME,\n-        componentName);\n+    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n+        instance.getCompName());\n+    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n+        instance.getCompInstanceName());\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n     startEvent.setTimestamp(container.getLaunchTime().getTime());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceStarted(Container container,\n      ComponentInstance instance) {\n\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    entity.setCreatedTime(container.getLaunchTime().getTime());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.BARE_HOST,\n        container.getBareHost());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entityInfos.put(ServiceTimelineMetricsConstants.LAUNCH_TIME,\n        container.getLaunchTime().getTime());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_NAME,\n        instance.getCompName());\n    entityInfos.put(ServiceTimelineMetricsConstants.COMPONENT_INSTANCE_NAME,\n        instance.getCompInstanceName());\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n    startEvent.setTimestamp(container.getLaunchTime().getTime());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[container-Container, componentName-String]",
            "newValue": "[container-Container, instance-ComponentInstance]"
          }
        }
      ]
    },
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6395. Integrate service app master to write data into ATSv2. Contributed by Rohith Sharma K S\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f4216b7bba511cc79439e7dab9f0282d831a16b2",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,27 @@\n+  public void componentInstanceStarted(Container container,\n+      String componentName) {\n+\n+    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n+    entity.setCreatedTime(container.getLaunchTime().getTime());\n+\n+    // create info keys\n+    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfos.put(SliderTimelineMetricsConstants.BARE_HOST,\n+        container.getBareHost());\n+    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+        container.getState().toString());\n+    entityInfos.put(SliderTimelineMetricsConstants.LAUNCH_TIME,\n+        container.getLaunchTime().getTime());\n+    entityInfos.put(SliderTimelineMetricsConstants.COMPONENT_NAME,\n+        componentName);\n+    entity.addInfo(entityInfos);\n+\n+    // add an event\n+    TimelineEvent startEvent \u003d new TimelineEvent();\n+    startEvent\n+        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n+    startEvent.setTimestamp(container.getLaunchTime().getTime());\n+    entity.addEvent(startEvent);\n+\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void componentInstanceStarted(Container container,\n      String componentName) {\n\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    entity.setCreatedTime(container.getLaunchTime().getTime());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(SliderTimelineMetricsConstants.BARE_HOST,\n        container.getBareHost());\n    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entityInfos.put(SliderTimelineMetricsConstants.LAUNCH_TIME,\n        container.getLaunchTime().getTime());\n    entityInfos.put(SliderTimelineMetricsConstants.COMPONENT_NAME,\n        componentName);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_REGISTERED.toString());\n    startEvent.setTimestamp(container.getLaunchTime().getTime());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java"
    }
  }
}