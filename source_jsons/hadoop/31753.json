{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowRunRowKey.java",
  "functionName": "parseRowKey",
  "functionId": "parseRowKey___rowKey-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
  "functionStartLine": 80,
  "functionEndLine": 82,
  "numCommitsSeen": 13,
  "timeTaken": 2795,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "892b193bd77c15932b4c084c1d525b7017def0d4",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "b51d0fef56a59b15489f5b932025718b4e9613d2",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "892b193bd77c15932b4c084c1d525b7017def0d4": "Ybodychange",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": "Ybodychange",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ybodychange",
    "b51d0fef56a59b15489f5b932025718b4e9613d2": "Ybodychange",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    return new FlowRunRowKeyConverter().decode(rowKey);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    return new FlowRunRowKeyConverter().decode(rowKey);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java"
      }
    },
    "892b193bd77c15932b4c084c1d525b7017def0d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n-    return FlowRunRowKeyConverter.getInstance().decode(rowKey);\n+    return new FlowRunRowKeyConverter().decode(rowKey);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    return new FlowRunRowKeyConverter().decode(rowKey);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
      "extendedDetails": {}
    },
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5109. timestamps are stored unencoded causing parse errors (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9bdd455dced15c84430ea0a0a59410df924f02a7",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,3 @@\n   public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n-    byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n-\n-    if (rowKeyComponents.length \u003c 4) {\n-      throw new IllegalArgumentException(\"the row key is not valid for \" +\n-          \"a flow run\");\n-    }\n-\n-    String clusterId \u003d\n-        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n-    String userId \u003d\n-        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n-    String flowName \u003d\n-        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n-    long flowRunId \u003d\n-        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[3]));\n-    return new FlowRunRowKey(clusterId, userId, flowName, flowRunId);\n+    return FlowRunRowKeyConverter.getInstance().decode(rowKey);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    return FlowRunRowKeyConverter.getInstance().decode(rowKey);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
      "extendedDetails": {}
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d014f2ffd24c1aaebda7503ce0e5a81334a5f266",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n     byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n \n     if (rowKeyComponents.length \u003c 4) {\n       throw new IllegalArgumentException(\"the row key is not valid for \" +\n           \"a flow run\");\n     }\n \n     String clusterId \u003d\n         Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n     String userId \u003d\n         Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n-    String flowId \u003d\n+    String flowName \u003d\n         Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n     long flowRunId \u003d\n         TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[3]));\n-    return new FlowRunRowKey(clusterId, userId, flowId, flowRunId);\n+    return new FlowRunRowKey(clusterId, userId, flowName, flowRunId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n\n    if (rowKeyComponents.length \u003c 4) {\n      throw new IllegalArgumentException(\"the row key is not valid for \" +\n          \"a flow run\");\n    }\n\n    String clusterId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n    String userId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n    String flowName \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n    long flowRunId \u003d\n        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[3]));\n    return new FlowRunRowKey(clusterId, userId, flowName, flowRunId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
      "extendedDetails": {}
    },
    "b51d0fef56a59b15489f5b932025718b4e9613d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4178. [storage implementation] app id as string in row keys can cause incorrect ordering (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "b51d0fef56a59b15489f5b932025718b4e9613d2",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthorOld": "Vrushali",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n     byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n \n     if (rowKeyComponents.length \u003c 4) {\n       throw new IllegalArgumentException(\"the row key is not valid for \" +\n           \"a flow run\");\n     }\n \n     String clusterId \u003d\n         Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n     String userId \u003d\n         Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n     String flowId \u003d\n         Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n     long flowRunId \u003d\n-        TimelineWriterUtils.invert(Bytes.toLong(rowKeyComponents[3]));\n+        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[3]));\n     return new FlowRunRowKey(clusterId, userId, flowId, flowRunId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n\n    if (rowKeyComponents.length \u003c 4) {\n      throw new IllegalArgumentException(\"the row key is not valid for \" +\n          \"a flow run\");\n    }\n\n    String clusterId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n    String userId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n    String flowId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n    long flowRunId \u003d\n        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[3]));\n    return new FlowRunRowKey(clusterId, userId, flowId, flowRunId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java",
      "extendedDetails": {}
    },
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthor": "Vrushali",
      "diff": "@@ -0,0 +1,18 @@\n+  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n+    byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n+\n+    if (rowKeyComponents.length \u003c 4) {\n+      throw new IllegalArgumentException(\"the row key is not valid for \" +\n+          \"a flow run\");\n+    }\n+\n+    String clusterId \u003d\n+        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n+    String userId \u003d\n+        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n+    String flowId \u003d\n+        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n+    long flowRunId \u003d\n+        TimelineWriterUtils.invert(Bytes.toLong(rowKeyComponents[3]));\n+    return new FlowRunRowKey(clusterId, userId, flowId, flowRunId);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FlowRunRowKey parseRowKey(byte[] rowKey) {\n    byte[][] rowKeyComponents \u003d Separator.QUALIFIERS.split(rowKey);\n\n    if (rowKeyComponents.length \u003c 4) {\n      throw new IllegalArgumentException(\"the row key is not valid for \" +\n          \"a flow run\");\n    }\n\n    String clusterId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[0]));\n    String userId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[1]));\n    String flowId \u003d\n        Separator.QUALIFIERS.decode(Bytes.toString(rowKeyComponents[2]));\n    long flowRunId \u003d\n        TimelineWriterUtils.invert(Bytes.toLong(rowKeyComponents[3]));\n    return new FlowRunRowKey(clusterId, userId, flowId, flowRunId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunRowKey.java"
    }
  }
}