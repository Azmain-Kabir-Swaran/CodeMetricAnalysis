{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OCIContainerRuntime.java",
  "functionName": "prepareContainer",
  "functionId": "prepareContainer___ctx-ContainerRuntimeContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
  "functionStartLine": 149,
  "functionEndLine": 151,
  "numCommitsSeen": 90,
  "timeTaken": 4187,
  "changeHistory": [
    "29465bf169a7e348a4f32265083450faf66d5631",
    "fe7dab8ef55f08cf18c2d62c782c1ab8930a5a15",
    "556aea3f367bdbd4e4db601bea0ca9bf2adde063",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
    "3e6fce91a471b4a5099de109582e7c6417e8a822"
  ],
  "changeHistoryShort": {
    "29465bf169a7e348a4f32265083450faf66d5631": "Ymovefromfile",
    "fe7dab8ef55f08cf18c2d62c782c1ab8930a5a15": "Ybodychange",
    "556aea3f367bdbd4e4db601bea0ca9bf2adde063": "Ybodychange",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": "Ybodychange",
    "3e6fce91a471b4a5099de109582e7c6417e8a822": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29465bf169a7e348a4f32265083450faf66d5631": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
      "commitDate": "28/06/19 2:18 PM",
      "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/06/19 2:05 PM",
      "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
      "commitAuthorOld": "Bharat Viswanadham",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void prepareContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
        "oldMethodName": "prepareContainer",
        "newMethodName": "prepareContainer"
      }
    },
    "fe7dab8ef55f08cf18c2d62c782c1ab8930a5a15": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8989. [YARN-8851] Move DockerCommandPlugin volume related APIs\u0027 invocation from DockerLinuxContainerRuntime#prepareContainer to #launchContainer. (Zhankun Tang via wangda)\n\nChange-Id: Ia6d532c687168448416dfdf46f0ac34bff20e6ca\n",
      "commitDate": "28/11/18 3:03 PM",
      "commitName": "fe7dab8ef55f08cf18c2d62c782c1ab8930a5a15",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/11/18 4:45 PM",
      "commitNameOld": "33e0df4b3558bea4a7977695d2c564af9a0c57e7",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,3 @@\n   public void prepareContainer(ContainerRuntimeContext ctx)\n       throws ContainerExecutionException {\n-    Container container \u003d ctx.getContainer();\n-\n-    // Create volumes when needed.\n-    if (nmContext !\u003d null\n-        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n-      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n-          .getNameToPlugins().values()) {\n-        DockerCommandPlugin dockerCommandPlugin \u003d\n-            plugin.getDockerCommandPluginInstance();\n-        if (dockerCommandPlugin !\u003d null) {\n-          DockerVolumeCommand dockerVolumeCommand \u003d\n-              dockerCommandPlugin.getCreateDockerVolumeCommand(\n-                  ctx.getContainer());\n-          if (dockerVolumeCommand !\u003d null) {\n-            runDockerVolumeCommand(dockerVolumeCommand, container);\n-\n-            // After volume created, run inspect to make sure volume properly\n-            // created.\n-            if (dockerVolumeCommand.getSubCommand().equals(\n-                DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND)) {\n-              checkDockerVolumeCreated(dockerVolumeCommand, container);\n-            }\n-          }\n-        }\n-      }\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void prepareContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "556aea3f367bdbd4e4db601bea0ca9bf2adde063": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7487. Ensure volume to include GPU base libraries after created by plugin. Contributed by Wangda Tan.\n",
      "commitDate": "01/12/17 12:06 AM",
      "commitName": "556aea3f367bdbd4e4db601bea0ca9bf2adde063",
      "commitAuthor": "Sunil G",
      "commitDateOld": "22/11/17 10:05 AM",
      "commitNameOld": "d42a336cfab106d052aa30d80d9d30904123cb55",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.58,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,29 @@\n   public void prepareContainer(ContainerRuntimeContext ctx)\n       throws ContainerExecutionException {\n     Container container \u003d ctx.getContainer();\n \n     // Create volumes when needed.\n     if (nmContext !\u003d null\n         \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n       for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n           .getNameToPlugins().values()) {\n         DockerCommandPlugin dockerCommandPlugin \u003d\n             plugin.getDockerCommandPluginInstance();\n         if (dockerCommandPlugin !\u003d null) {\n           DockerVolumeCommand dockerVolumeCommand \u003d\n-              dockerCommandPlugin.getCreateDockerVolumeCommand(ctx.getContainer());\n+              dockerCommandPlugin.getCreateDockerVolumeCommand(\n+                  ctx.getContainer());\n           if (dockerVolumeCommand !\u003d null) {\n             runDockerVolumeCommand(dockerVolumeCommand, container);\n+\n+            // After volume created, run inspect to make sure volume properly\n+            // created.\n+            if (dockerVolumeCommand.getSubCommand().equals(\n+                DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND)) {\n+              checkDockerVolumeCreated(dockerVolumeCommand, container);\n+            }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void prepareContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n    Container container \u003d ctx.getContainer();\n\n    // Create volumes when needed.\n    if (nmContext !\u003d null\n        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n          .getNameToPlugins().values()) {\n        DockerCommandPlugin dockerCommandPlugin \u003d\n            plugin.getDockerCommandPluginInstance();\n        if (dockerCommandPlugin !\u003d null) {\n          DockerVolumeCommand dockerVolumeCommand \u003d\n              dockerCommandPlugin.getCreateDockerVolumeCommand(\n                  ctx.getContainer());\n          if (dockerVolumeCommand !\u003d null) {\n            runDockerVolumeCommand(dockerVolumeCommand, container);\n\n            // After volume created, run inspect to make sure volume properly\n            // created.\n            if (dockerVolumeCommand.getSubCommand().equals(\n                DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND)) {\n              checkDockerVolumeCreated(dockerVolumeCommand, container);\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
      "commitDate": "28/10/17 10:38 PM",
      "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthor": "Sunil G",
      "commitDateOld": "02/10/17 7:04 PM",
      "commitNameOld": "7eb8499996869cdb63743f1c9eca2ba91d57ad08",
      "commitAuthorOld": "Sidharta S",
      "daysBetweenCommits": 26.15,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,21 @@\n   public void prepareContainer(ContainerRuntimeContext ctx)\n       throws ContainerExecutionException {\n+    Container container \u003d ctx.getContainer();\n+\n+    // Create volumes when needed.\n+    if (nmContext !\u003d null\n+        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n+      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n+          .getNameToPlugins().values()) {\n+        DockerCommandPlugin dockerCommandPlugin \u003d\n+            plugin.getDockerCommandPluginInstance();\n+        if (dockerCommandPlugin !\u003d null) {\n+          DockerVolumeCommand dockerVolumeCommand \u003d\n+              dockerCommandPlugin.getCreateDockerVolumeCommand(ctx.getContainer());\n+          if (dockerVolumeCommand !\u003d null) {\n+            runDockerVolumeCommand(dockerVolumeCommand, container);\n+          }\n+        }\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void prepareContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n    Container container \u003d ctx.getContainer();\n\n    // Create volumes when needed.\n    if (nmContext !\u003d null\n        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n          .getNameToPlugins().values()) {\n        DockerCommandPlugin dockerCommandPlugin \u003d\n            plugin.getDockerCommandPluginInstance();\n        if (dockerCommandPlugin !\u003d null) {\n          DockerVolumeCommand dockerVolumeCommand \u003d\n              dockerCommandPlugin.getCreateDockerVolumeCommand(ctx.getContainer());\n          if (dockerVolumeCommand !\u003d null) {\n            runDockerVolumeCommand(dockerVolumeCommand, container);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "3e6fce91a471b4a5099de109582e7c6417e8a822": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3853. Add docker container runtime support to LinuxContainterExecutor. Contributed by Sidharta Seethana.\n",
      "commitDate": "27/07/15 11:57 AM",
      "commitName": "3e6fce91a471b4a5099de109582e7c6417e8a822",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,4 @@\n+  public void prepareContainer(ContainerRuntimeContext ctx)\n+      throws ContainerExecutionException {\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void prepareContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}