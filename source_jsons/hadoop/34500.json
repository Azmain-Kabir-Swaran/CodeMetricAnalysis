{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerImpl.java",
  "functionName": "sendLaunchEvent",
  "functionId": "sendLaunchEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
  "functionStartLine": 1005,
  "functionEndLine": 1025,
  "numCommitsSeen": 103,
  "timeTaken": 4386,
  "changeHistory": [
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
    "4f8194430fc6a69d9cc99b78828fd7045d5683e8",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
    "233b61e495e136a843dabb7315bbb9ea37e7adce",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b"
  ],
  "changeHistoryShort": {
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0": "Ybodychange",
    "4f8194430fc6a69d9cc99b78828fd7045d5683e8": "Ybodychange",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": "Ymodifierchange",
    "233b61e495e136a843dabb7315bbb9ea37e7adce": "Ybodychange",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "16/10/17 1:12 PM",
      "commitName": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "28/09/17 12:10 PM",
      "commitNameOld": "85d81ae58ec4361a944c84753a900460a0888b9b",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 18.04,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n   public void sendLaunchEvent() {\n     if (ContainerState.PAUSED \u003d\u003d getContainerState()) {\n       dispatcher.getEventHandler().handle(\n           new ContainerResumeEvent(containerId,\n               \"Container Resumed as some resources freed up\"));\n     } else {\n       ContainersLauncherEventType launcherEvent \u003d\n           ContainersLauncherEventType.LAUNCH_CONTAINER;\n       if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n         // try to recover a container that was previously launched\n         launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n+      } else if (recoveredStatus \u003d\u003d RecoveredContainerStatus.PAUSED) {\n+        launcherEvent \u003d ContainersLauncherEventType.RECOVER_PAUSED_CONTAINER;\n       }\n+\n       containerLaunchStartTime \u003d clock.getTime();\n       dispatcher.getEventHandler().handle(\n           new ContainersLauncherEvent(this, launcherEvent));\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void sendLaunchEvent() {\n    if (ContainerState.PAUSED \u003d\u003d getContainerState()) {\n      dispatcher.getEventHandler().handle(\n          new ContainerResumeEvent(containerId,\n              \"Container Resumed as some resources freed up\"));\n    } else {\n      ContainersLauncherEventType launcherEvent \u003d\n          ContainersLauncherEventType.LAUNCH_CONTAINER;\n      if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n        // try to recover a container that was previously launched\n        launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n      } else if (recoveredStatus \u003d\u003d RecoveredContainerStatus.PAUSED) {\n        launcherEvent \u003d ContainersLauncherEventType.RECOVER_PAUSED_CONTAINER;\n      }\n\n      containerLaunchStartTime \u003d clock.getTime();\n      dispatcher.getEventHandler().handle(\n          new ContainersLauncherEvent(this, launcherEvent));\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "4f8194430fc6a69d9cc99b78828fd7045d5683e8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5216. Expose configurable preemption policy for OPPORTUNISTIC containers running on the NM. (Hitesh Sharma via asuresh)\n",
      "commitDate": "14/09/17 8:51 AM",
      "commitName": "4f8194430fc6a69d9cc99b78828fd7045d5683e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "14/09/17 8:48 AM",
      "commitNameOld": "864fbacd4548004b1de8b0812627976acd22aff5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,18 @@\n   public void sendLaunchEvent() {\n-    ContainersLauncherEventType launcherEvent \u003d\n-        ContainersLauncherEventType.LAUNCH_CONTAINER;\n-    if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n-      // try to recover a container that was previously launched\n-      launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n+    if (ContainerState.PAUSED \u003d\u003d getContainerState()) {\n+      dispatcher.getEventHandler().handle(\n+          new ContainerResumeEvent(containerId,\n+              \"Container Resumed as some resources freed up\"));\n+    } else {\n+      ContainersLauncherEventType launcherEvent \u003d\n+          ContainersLauncherEventType.LAUNCH_CONTAINER;\n+      if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n+        // try to recover a container that was previously launched\n+        launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n+      }\n+      containerLaunchStartTime \u003d clock.getTime();\n+      dispatcher.getEventHandler().handle(\n+          new ContainersLauncherEvent(this, launcherEvent));\n     }\n-    containerLaunchStartTime \u003d clock.getTime();\n-    dispatcher.getEventHandler().handle(\n-        new ContainersLauncherEvent(this, launcherEvent));\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void sendLaunchEvent() {\n    if (ContainerState.PAUSED \u003d\u003d getContainerState()) {\n      dispatcher.getEventHandler().handle(\n          new ContainerResumeEvent(containerId,\n              \"Container Resumed as some resources freed up\"));\n    } else {\n      ContainersLauncherEventType launcherEvent \u003d\n          ContainersLauncherEventType.LAUNCH_CONTAINER;\n      if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n        // try to recover a container that was previously launched\n        launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n      }\n      containerLaunchStartTime \u003d clock.getTime();\n      dispatcher.getEventHandler().handle(\n          new ContainersLauncherEvent(this, launcherEvent));\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
      "commitDate": "15/11/16 7:56 AM",
      "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/11/16 2:21 AM",
      "commitNameOld": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 14.27,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  private void sendLaunchEvent() {\n+  public void sendLaunchEvent() {\n     ContainersLauncherEventType launcherEvent \u003d\n         ContainersLauncherEventType.LAUNCH_CONTAINER;\n     if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n       // try to recover a container that was previously launched\n       launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n     }\n     containerLaunchStartTime \u003d clock.getTime();\n     dispatcher.getEventHandler().handle(\n         new ContainersLauncherEvent(this, launcherEvent));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void sendLaunchEvent() {\n    ContainersLauncherEventType launcherEvent \u003d\n        ContainersLauncherEventType.LAUNCH_CONTAINER;\n    if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n      // try to recover a container that was previously launched\n      launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n    }\n    containerLaunchStartTime \u003d clock.getTime();\n    dispatcher.getEventHandler().handle(\n        new ContainersLauncherEvent(this, launcherEvent));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "233b61e495e136a843dabb7315bbb9ea37e7adce": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2679. Add metric for container launch duration. (Zhihai Xu via kasha)\n",
      "commitDate": "21/11/14 2:22 PM",
      "commitName": "233b61e495e136a843dabb7315bbb9ea37e7adce",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "12/11/14 9:31 AM",
      "commitNameOld": "a04143039e7fe310d807f40584633096181cfada",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 9.2,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   private void sendLaunchEvent() {\n     ContainersLauncherEventType launcherEvent \u003d\n         ContainersLauncherEventType.LAUNCH_CONTAINER;\n     if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n       // try to recover a container that was previously launched\n       launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n     }\n+    containerLaunchStartTime \u003d clock.getTime();\n     dispatcher.getEventHandler().handle(\n         new ContainersLauncherEvent(this, launcherEvent));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendLaunchEvent() {\n    ContainersLauncherEventType launcherEvent \u003d\n        ContainersLauncherEventType.LAUNCH_CONTAINER;\n    if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n      // try to recover a container that was previously launched\n      launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n    }\n    containerLaunchStartTime \u003d clock.getTime();\n    dispatcher.getEventHandler().handle(\n        new ContainersLauncherEvent(this, launcherEvent));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,10 @@\n+  private void sendLaunchEvent() {\n+    ContainersLauncherEventType launcherEvent \u003d\n+        ContainersLauncherEventType.LAUNCH_CONTAINER;\n+    if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n+      // try to recover a container that was previously launched\n+      launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n+    }\n+    dispatcher.getEventHandler().handle(\n+        new ContainersLauncherEvent(this, launcherEvent));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendLaunchEvent() {\n    ContainersLauncherEventType launcherEvent \u003d\n        ContainersLauncherEventType.LAUNCH_CONTAINER;\n    if (recoveredStatus \u003d\u003d RecoveredContainerStatus.LAUNCHED) {\n      // try to recover a container that was previously launched\n      launcherEvent \u003d ContainersLauncherEventType.RECOVER_CONTAINER;\n    }\n    dispatcher.getEventHandler().handle(\n        new ContainersLauncherEvent(this, launcherEvent));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java"
    }
  }
}