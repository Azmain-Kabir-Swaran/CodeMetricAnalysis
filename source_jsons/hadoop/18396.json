{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedPentomino.java",
  "functionName": "createInputDirectory",
  "functionId": "createInputDirectory___fs-FileSystem__dir-Path__pent-Pentomino__depth-int",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
  "functionStartLine": 134,
  "functionEndLine": 156,
  "numCommitsSeen": 9,
  "timeTaken": 11030,
  "changeHistory": [
    "905b17876c44634545a68300ff2f2d73fb86d3b7",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "905b17876c44634545a68300ff2f2d73fb86d3b7": "Ybodychange",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "905b17876c44634545a68300ff2f2d73fb86d3b7": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4723. Fix warnings found by findbugs 2. Contributed by Sandy Ryza\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1409601 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/12 4:16 PM",
      "commitName": "905b17876c44634545a68300ff2f2d73fb86d3b7",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "28/09/12 9:48 AM",
      "commitNameOld": "e45b10365568185d0fd22546a4b666fa77dea7a9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 47.31,
      "commitsBetweenForRepo": 279,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private static long createInputDirectory(FileSystem fs, \n                                            Path dir,\n                                            Pentomino pent,\n                                            int depth\n                                            ) throws IOException {\n     fs.mkdirs(dir);\n     List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n     Path input \u003d new Path(dir, \"part1\");\n-    PrintStream file \u003d \n-      new PrintStream(new BufferedOutputStream\n-                      (fs.create(input), 64*1024));\n+    PrintWriter file \u003d \n+      new PrintWriter(new OutputStreamWriter(new BufferedOutputStream\n+                      (fs.create(input), 64*1024), Charsets.UTF_8));\n     for(int[] prefix: splits) {\n       for(int i\u003d0; i \u003c prefix.length; ++i) {\n         if (i !\u003d 0) {\n           file.print(\u0027,\u0027);          \n         }\n         file.print(prefix[i]);\n       }\n       file.print(\u0027\\n\u0027);\n     }\n     file.close();\n     return fs.getFileStatus(input).getLen();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static long createInputDirectory(FileSystem fs, \n                                           Path dir,\n                                           Pentomino pent,\n                                           int depth\n                                           ) throws IOException {\n    fs.mkdirs(dir);\n    List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n    Path input \u003d new Path(dir, \"part1\");\n    PrintWriter file \u003d \n      new PrintWriter(new OutputStreamWriter(new BufferedOutputStream\n                      (fs.create(input), 64*1024), Charsets.UTF_8));\n    for(int[] prefix: splits) {\n      for(int i\u003d0; i \u003c prefix.length; ++i) {\n        if (i !\u003d 0) {\n          file.print(\u0027,\u0027);          \n        }\n        file.print(prefix[i]);\n      }\n      file.print(\u0027\\n\u0027);\n    }\n    file.close();\n    return fs.getFileStatus(input).getLen();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
      "extendedDetails": {}
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static long createInputDirectory(FileSystem fs, \n                                           Path dir,\n                                           Pentomino pent,\n                                           int depth\n                                           ) throws IOException {\n    fs.mkdirs(dir);\n    List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n    Path input \u003d new Path(dir, \"part1\");\n    PrintStream file \u003d \n      new PrintStream(new BufferedOutputStream\n                      (fs.create(input), 64*1024));\n    for(int[] prefix: splits) {\n      for(int i\u003d0; i \u003c prefix.length; ++i) {\n        if (i !\u003d 0) {\n          file.print(\u0027,\u0027);          \n        }\n        file.print(prefix[i]);\n      }\n      file.print(\u0027\\n\u0027);\n    }\n    file.close();\n    return fs.getFileStatus(input).getLen();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static long createInputDirectory(FileSystem fs, \n                                           Path dir,\n                                           Pentomino pent,\n                                           int depth\n                                           ) throws IOException {\n    fs.mkdirs(dir);\n    List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n    Path input \u003d new Path(dir, \"part1\");\n    PrintStream file \u003d \n      new PrintStream(new BufferedOutputStream\n                      (fs.create(input), 64*1024));\n    for(int[] prefix: splits) {\n      for(int i\u003d0; i \u003c prefix.length; ++i) {\n        if (i !\u003d 0) {\n          file.print(\u0027,\u0027);          \n        }\n        file.print(prefix[i]);\n      }\n      file.print(\u0027\\n\u0027);\n    }\n    file.close();\n    return fs.getFileStatus(input).getLen();\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static long createInputDirectory(FileSystem fs, \n                                           Path dir,\n                                           Pentomino pent,\n                                           int depth\n                                           ) throws IOException {\n    fs.mkdirs(dir);\n    List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n    Path input \u003d new Path(dir, \"part1\");\n    PrintStream file \u003d \n      new PrintStream(new BufferedOutputStream\n                      (fs.create(input), 64*1024));\n    for(int[] prefix: splits) {\n      for(int i\u003d0; i \u003c prefix.length; ++i) {\n        if (i !\u003d 0) {\n          file.print(\u0027,\u0027);          \n        }\n        file.print(prefix[i]);\n      }\n      file.print(\u0027\\n\u0027);\n    }\n    file.close();\n    return fs.getFileStatus(input).getLen();\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,23 @@\n+  private static long createInputDirectory(FileSystem fs, \n+                                           Path dir,\n+                                           Pentomino pent,\n+                                           int depth\n+                                           ) throws IOException {\n+    fs.mkdirs(dir);\n+    List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n+    Path input \u003d new Path(dir, \"part1\");\n+    PrintStream file \u003d \n+      new PrintStream(new BufferedOutputStream\n+                      (fs.create(input), 64*1024));\n+    for(int[] prefix: splits) {\n+      for(int i\u003d0; i \u003c prefix.length; ++i) {\n+        if (i !\u003d 0) {\n+          file.print(\u0027,\u0027);          \n+        }\n+        file.print(prefix[i]);\n+      }\n+      file.print(\u0027\\n\u0027);\n+    }\n+    file.close();\n+    return fs.getFileStatus(input).getLen();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static long createInputDirectory(FileSystem fs, \n                                           Path dir,\n                                           Pentomino pent,\n                                           int depth\n                                           ) throws IOException {\n    fs.mkdirs(dir);\n    List\u003cint[]\u003e splits \u003d pent.getSplits(depth);\n    Path input \u003d new Path(dir, \"part1\");\n    PrintStream file \u003d \n      new PrintStream(new BufferedOutputStream\n                      (fs.create(input), 64*1024));\n    for(int[] prefix: splits) {\n      for(int i\u003d0; i \u003c prefix.length; ++i) {\n        if (i !\u003d 0) {\n          file.print(\u0027,\u0027);          \n        }\n        file.print(prefix[i]);\n      }\n      file.print(\u0027\\n\u0027);\n    }\n    file.close();\n    return fs.getFileStatus(input).getLen();\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/dancing/DistributedPentomino.java"
    }
  }
}