{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirSnapshotOp.java",
  "functionName": "deleteSnapshot",
  "functionId": "deleteSnapshot___fsd-FSDirectory__pc-FSPermissionChecker__snapshotManager-SnapshotManager__snapshotRoot-String__snapshotName-String__logRetryCache-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
  "functionStartLine": 243,
  "functionEndLine": 273,
  "numCommitsSeen": 32,
  "timeTaken": 4424,
  "changeHistory": [
    "300505c56277982ea4369dce1a2b323b4822fe47",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "745d04be59accf80feda0ad38efcc74ba362f2ca",
    "b2c85db86c9a62b0a03ee87547265077f664970a",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "4a3161182905afaf450a60d02528161ed1f97471"
  ],
  "changeHistoryShort": {
    "300505c56277982ea4369dce1a2b323b4822fe47": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ymultichange(Yparameterchange,Ybodychange)",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "745d04be59accf80feda0ad38efcc74ba362f2ca": "Ybodychange",
    "b2c85db86c9a62b0a03ee87547265077f664970a": "Ybodychange",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ybodychange",
    "4a3161182905afaf450a60d02528161ed1f97471": "Yintroduced"
  },
  "changeHistoryDetails": {
    "300505c56277982ea4369dce1a2b323b4822fe47": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15054. Delete Snapshot not updating new modification time. Contributed by hemanthboyina.\n",
      "commitDate": "24/12/19 11:12 PM",
      "commitName": "300505c56277982ea4369dce1a2b323b4822fe47",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "21/11/19 8:48 PM",
      "commitNameOld": "b25e94ce29b311a37334317d72e46373b256c111",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 33.1,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n       FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n       String snapshotRoot, String snapshotName, boolean logRetryCache)\n       throws IOException {\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n     ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n     INode.ReclaimContext context \u003d new INode.ReclaimContext(\n         fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n+    // time of snapshot deletion\n+    final long now \u003d Time.now();\n     fsd.writeLock();\n     try {\n-      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n+      snapshotManager.deleteSnapshot(iip, snapshotName, context, now);\n       fsd.updateCount(iip, context.quotaDelta(), false);\n       fsd.removeFromInodeMap(removedINodes);\n       fsd.updateReplicationFactor(context.collectedBlocks()\n                                       .toUpdateReplicationInfo());\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n-        logRetryCache);\n+        logRetryCache, now);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n      String snapshotRoot, String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n    // time of snapshot deletion\n    final long now \u003d Time.now();\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, context, now);\n      fsd.updateCount(iip, context.quotaDelta(), false);\n      fsd.removeFromInodeMap(removedINodes);\n      fsd.updateReplicationFactor(context.collectedBlocks()\n                                      .toUpdateReplicationInfo());\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache, now);\n\n    return collectedBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "11/12/17 8:14 PM",
          "commitNameOld": "693169ef34f856a27dc09d90a45fb4ec5b66ed2c",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 72.64,
          "commitsBetweenForRepo": 423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,29 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n-      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n-      String snapshotName, boolean logRetryCache)\n+      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n+      String snapshotRoot, String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n     ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n     INode.ReclaimContext context \u003d new INode.ReclaimContext(\n         fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n     fsd.writeLock();\n     try {\n       snapshotManager.deleteSnapshot(iip, snapshotName, context);\n       fsd.updateCount(iip, context.quotaDelta(), false);\n       fsd.removeFromInodeMap(removedINodes);\n       fsd.updateReplicationFactor(context.collectedBlocks()\n                                       .toUpdateReplicationInfo());\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n      String snapshotRoot, String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n      fsd.updateCount(iip, context.quotaDelta(), false);\n      fsd.removeFromInodeMap(removedINodes);\n      fsd.updateReplicationFactor(context.collectedBlocks()\n                                      .toUpdateReplicationInfo());\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, snapshotManager-SnapshotManager, snapshotRoot-String, snapshotName-String, logRetryCache-boolean]",
            "newValue": "[fsd-FSDirectory, pc-FSPermissionChecker, snapshotManager-SnapshotManager, snapshotRoot-String, snapshotName-String, logRetryCache-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "11/12/17 8:14 PM",
          "commitNameOld": "693169ef34f856a27dc09d90a45fb4ec5b66ed2c",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 72.64,
          "commitsBetweenForRepo": 423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,29 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n-      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n-      String snapshotName, boolean logRetryCache)\n+      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n+      String snapshotRoot, String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n     ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n     INode.ReclaimContext context \u003d new INode.ReclaimContext(\n         fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n     fsd.writeLock();\n     try {\n       snapshotManager.deleteSnapshot(iip, snapshotName, context);\n       fsd.updateCount(iip, context.quotaDelta(), false);\n       fsd.removeFromInodeMap(removedINodes);\n       fsd.updateReplicationFactor(context.collectedBlocks()\n                                       .toUpdateReplicationInfo());\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n      String snapshotRoot, String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n      fsd.updateCount(iip, context.quotaDelta(), false);\n      fsd.removeFromInodeMap(removedINodes);\n      fsd.updateReplicationFactor(context.collectedBlocks()\n                                      .toUpdateReplicationInfo());\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/10/16 1:05 PM",
      "commitNameOld": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 20.09,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n-      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n       fsd.checkOwner(pc, iip);\n     }\n \n     INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n     ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n     INode.ReclaimContext context \u003d new INode.ReclaimContext(\n         fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n     fsd.writeLock();\n     try {\n       snapshotManager.deleteSnapshot(iip, snapshotName, context);\n       fsd.updateCount(iip, context.quotaDelta(), false);\n       fsd.removeFromInodeMap(removedINodes);\n       fsd.updateReplicationFactor(context.collectedBlocks()\n                                       .toUpdateReplicationInfo());\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n      fsd.updateCount(iip, context.quotaDelta(), false);\n      fsd.removeFromInodeMap(removedINodes);\n      fsd.updateReplicationFactor(context.collectedBlocks()\n                                      .toUpdateReplicationInfo());\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "745d04be59accf80feda0ad38efcc74ba362f2ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8823. Move replication factor into individual blocks. Contributed by Haohui Mai.\n",
      "commitDate": "22/08/15 12:09 AM",
      "commitName": "745d04be59accf80feda0ad38efcc74ba362f2ca",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "13/05/15 9:50 PM",
      "commitNameOld": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 100.1,
      "commitsBetweenForRepo": 639,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n     final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n     if (fsd.isPermissionEnabled()) {\n       FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n       fsd.checkOwner(pc, iip);\n     }\n \n     INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n     ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n     INode.ReclaimContext context \u003d new INode.ReclaimContext(\n         fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n     fsd.writeLock();\n     try {\n       snapshotManager.deleteSnapshot(iip, snapshotName, context);\n       fsd.updateCount(iip, context.quotaDelta(), false);\n       fsd.removeFromInodeMap(removedINodes);\n+      fsd.updateReplicationFactor(context.collectedBlocks()\n+                                      .toUpdateReplicationInfo());\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n    if (fsd.isPermissionEnabled()) {\n      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n      fsd.updateCount(iip, context.quotaDelta(), false);\n      fsd.removeFromInodeMap(removedINodes);\n      fsd.updateReplicationFactor(context.collectedBlocks()\n                                      .toUpdateReplicationInfo());\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "b2c85db86c9a62b0a03ee87547265077f664970a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
      "commitDate": "13/05/15 9:50 PM",
      "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "17/12/14 10:32 AM",
      "commitNameOld": "4281c96e24739387bc2084f819c0176d0051a5e9",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 147.43,
      "commitsBetweenForRepo": 1278,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n     final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n     if (fsd.isPermissionEnabled()) {\n       FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n       fsd.checkOwner(pc, iip);\n     }\n \n     INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n-    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003cINode\u003e();\n+    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n+    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n+        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n     fsd.writeLock();\n     try {\n-      snapshotManager.deleteSnapshot(iip, snapshotName, collectedBlocks,\n-          removedINodes);\n+      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n+      fsd.updateCount(iip, context.quotaDelta(), false);\n       fsd.removeFromInodeMap(removedINodes);\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n    if (fsd.isPermissionEnabled()) {\n      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003c\u003e();\n    INode.ReclaimContext context \u003d new INode.ReclaimContext(\n        fsd.getBlockStoragePolicySuite(), collectedBlocks, removedINodes, null);\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, context);\n      fsd.updateCount(iip, context.quotaDelta(), false);\n      fsd.removeFromInodeMap(removedINodes);\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/12/14 2:09 PM",
      "commitNameOld": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.01,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   static INode.BlocksMapUpdateInfo deleteSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-\n-    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n+    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n     if (fsd.isPermissionEnabled()) {\n-      fsd.checkOwner(pc, snapshotRoot);\n+      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+      fsd.checkOwner(pc, iip);\n     }\n \n+    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n     ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003cINode\u003e();\n     fsd.writeLock();\n     try {\n-      snapshotManager.deleteSnapshot(snapshotRoot, snapshotName,\n-          collectedBlocks, removedINodes);\n+      snapshotManager.deleteSnapshot(iip, snapshotName, collectedBlocks,\n+          removedINodes);\n       fsd.removeFromInodeMap(removedINodes);\n     } finally {\n       fsd.writeUnlock();\n     }\n     removedINodes.clear();\n     fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return collectedBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n    if (fsd.isPermissionEnabled()) {\n      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n      fsd.checkOwner(pc, iip);\n    }\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003cINode\u003e();\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(iip, snapshotName, collectedBlocks,\n          removedINodes);\n      fsd.removeFromInodeMap(removedINodes);\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "4a3161182905afaf450a60d02528161ed1f97471": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7440. Consolidate snapshot related operations in a single class. Contributed by Haohui Mai.\n",
      "commitDate": "25/11/14 9:04 PM",
      "commitName": "4a3161182905afaf450a60d02528161ed1f97471",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,26 @@\n+  static INode.BlocksMapUpdateInfo deleteSnapshot(\n+      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n+      String snapshotName, boolean logRetryCache)\n+      throws IOException {\n+    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+\n+    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n+    if (fsd.isPermissionEnabled()) {\n+      fsd.checkOwner(pc, snapshotRoot);\n+    }\n+\n+    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003cINode\u003e();\n+    fsd.writeLock();\n+    try {\n+      snapshotManager.deleteSnapshot(snapshotRoot, snapshotName,\n+          collectedBlocks, removedINodes);\n+      fsd.removeFromInodeMap(removedINodes);\n+    } finally {\n+      fsd.writeUnlock();\n+    }\n+    removedINodes.clear();\n+    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n+        logRetryCache);\n+\n+    return collectedBlocks;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static INode.BlocksMapUpdateInfo deleteSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n\n    INode.BlocksMapUpdateInfo collectedBlocks \u003d new INode.BlocksMapUpdateInfo();\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, snapshotRoot);\n    }\n\n    ChunkedArrayList\u003cINode\u003e removedINodes \u003d new ChunkedArrayList\u003cINode\u003e();\n    fsd.writeLock();\n    try {\n      snapshotManager.deleteSnapshot(snapshotRoot, snapshotName,\n          collectedBlocks, removedINodes);\n      fsd.removeFromInodeMap(removedINodes);\n    } finally {\n      fsd.writeUnlock();\n    }\n    removedINodes.clear();\n    fsd.getEditLog().logDeleteSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return collectedBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java"
    }
  }
}