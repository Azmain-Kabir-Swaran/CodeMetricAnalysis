{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "killReservedContainer",
  "functionId": "killReservedContainer___container-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 2181,
  "functionEndLine": 2191,
  "numCommitsSeen": 779,
  "timeTaken": 10760,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
    "3fe57285635e8058c34aa40a103845b49ca7d6ff",
    "adf260a728df427eb729abe8fb9ad7248991ea54",
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
    "9b272ccae78918e7d756d84920a9322187d61eed",
    "43589a8df70d4dbaf86609961e27cc4e23dda993",
    "d16470025aa0c51a04c530863a96108895d72ddf",
    "1cd7b067f7aebda201541e309ba27fc28e0b16db",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e": "Ymultichange(Yrename,Ybodychange)",
    "3fe57285635e8058c34aa40a103845b49ca7d6ff": "Ymultichange(Yrename,Ybodychange)",
    "adf260a728df427eb729abe8fb9ad7248991ea54": "Ymultichange(Yrename,Ybodychange)",
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579": "Ymultichange(Yrename,Ybodychange)",
    "9b272ccae78918e7d756d84920a9322187d61eed": "Ybodychange",
    "43589a8df70d4dbaf86609961e27cc4e23dda993": "Ybodychange",
    "d16470025aa0c51a04c530863a96108895d72ddf": "Ybodychange",
    "1cd7b067f7aebda201541e309ba27fc28e0b16db": "Ybodychange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   public void killReservedContainer(RMContainer container) {\n-    if(LOG.isDebugEnabled()){\n-      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n-          + container.toString());\n-    }\n+    LOG.debug(\"{}:{}\", SchedulerEventType.KILL_RESERVED_CONTAINER, container);\n+\n     // To think: What happens if this is no longer a reserved container, for\n     // e.g if the reservation became an allocation.\n     super.completedContainer(container,\n         SchedulerUtils.createAbnormalContainerStatus(\n             container.getContainerId(),\n             SchedulerUtils.UNRESERVED_CONTAINER),\n         RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void killReservedContainer(RMContainer container) {\n    LOG.debug(\"{}:{}\", SchedulerEventType.KILL_RESERVED_CONTAINER, container);\n\n    // To think: What happens if this is no longer a reserved container, for\n    // e.g if the reservation became an allocation.\n    super.completedContainer(container,\n        SchedulerUtils.createAbnormalContainerStatus(\n            container.getContainerId(),\n            SchedulerUtils.UNRESERVED_CONTAINER),\n        RMContainerEventType.KILL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
      "commitDate": "18/01/16 5:30 PM",
      "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "18/01/16 5:30 PM",
          "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 5:27 PM",
          "commitNameOld": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public void killContainer(RMContainer cont) {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+  public void killReservedContainer(RMContainer container) {\n+    if(LOG.isDebugEnabled()){\n+      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n+          + container.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    // To think: What happens if this is no longer a reserved container, for\n+    // e.g if the reservation became an allocation.\n+    super.completedContainer(container,\n+        SchedulerUtils.createAbnormalContainerStatus(\n+            container.getContainerId(),\n+            SchedulerUtils.UNRESERVED_CONTAINER),\n+        RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killReservedContainer(RMContainer container) {\n    if(LOG.isDebugEnabled()){\n      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n          + container.toString());\n    }\n    // To think: What happens if this is no longer a reserved container, for\n    // e.g if the reservation became an allocation.\n    super.completedContainer(container,\n        SchedulerUtils.createAbnormalContainerStatus(\n            container.getContainerId(),\n            SchedulerUtils.UNRESERVED_CONTAINER),\n        RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "killContainer",
            "newValue": "killReservedContainer"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "18/01/16 5:30 PM",
          "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 5:27 PM",
          "commitNameOld": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public void killContainer(RMContainer cont) {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+  public void killReservedContainer(RMContainer container) {\n+    if(LOG.isDebugEnabled()){\n+      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n+          + container.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    // To think: What happens if this is no longer a reserved container, for\n+    // e.g if the reservation became an allocation.\n+    super.completedContainer(container,\n+        SchedulerUtils.createAbnormalContainerStatus(\n+            container.getContainerId(),\n+            SchedulerUtils.UNRESERVED_CONTAINER),\n+        RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killReservedContainer(RMContainer container) {\n    if(LOG.isDebugEnabled()){\n      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n          + container.toString());\n    }\n    // To think: What happens if this is no longer a reserved container, for\n    // e.g if the reservation became an allocation.\n    super.completedContainer(container,\n        SchedulerUtils.createAbnormalContainerStatus(\n            container.getContainerId(),\n            SchedulerUtils.UNRESERVED_CONTAINER),\n        RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "[cont-RMContainer]",
            "newValue": "[container-RMContainer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "18/01/16 5:30 PM",
          "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 5:27 PM",
          "commitNameOld": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public void killContainer(RMContainer cont) {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+  public void killReservedContainer(RMContainer container) {\n+    if(LOG.isDebugEnabled()){\n+      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n+          + container.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    // To think: What happens if this is no longer a reserved container, for\n+    // e.g if the reservation became an allocation.\n+    super.completedContainer(container,\n+        SchedulerUtils.createAbnormalContainerStatus(\n+            container.getContainerId(),\n+            SchedulerUtils.UNRESERVED_CONTAINER),\n+        RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killReservedContainer(RMContainer container) {\n    if(LOG.isDebugEnabled()){\n      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + \":\"\n          + container.toString());\n    }\n    // To think: What happens if this is no longer a reserved container, for\n    // e.g if the reservation became an allocation.\n    super.completedContainer(container,\n        SchedulerUtils.createAbnormalContainerStatus(\n            container.getContainerId(),\n            SchedulerUtils.UNRESERVED_CONTAINER),\n        RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
      "commitDate": "18/01/16 5:27 PM",
      "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
          "commitDate": "18/01/16 5:27 PM",
          "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 1:06 AM",
          "commitNameOld": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  public void killPreemptedContainer(RMContainer cont) {\n+  public void killContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n-          + cont.toString());\n+      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n-    super.completedContainer(cont, SchedulerUtils\n-      .createPreemptedContainerStatus(cont.getContainerId(),\n-        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n+    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n+      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n+      RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "killPreemptedContainer",
            "newValue": "killContainer"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
          "commitDate": "18/01/16 5:27 PM",
          "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 1:06 AM",
          "commitNameOld": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  public void killPreemptedContainer(RMContainer cont) {\n+  public void killContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n-          + cont.toString());\n+      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n-    super.completedContainer(cont, SchedulerUtils\n-      .createPreemptedContainerStatus(cont.getContainerId(),\n-        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n+    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n+      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n+      RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "3fe57285635e8058c34aa40a103845b49ca7d6ff": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
      "commitDate": "18/01/16 1:06 AM",
      "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
          "commitDate": "18/01/16 1:06 AM",
          "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 12:50 AM",
          "commitNameOld": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public void killContainer(RMContainer cont) {\n+  public void killPreemptedContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n+          + cont.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    super.completedContainer(cont, SchedulerUtils\n+      .createPreemptedContainerStatus(cont.getContainerId(),\n+        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killPreemptedContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n          + cont.toString());\n    }\n    super.completedContainer(cont, SchedulerUtils\n      .createPreemptedContainerStatus(cont.getContainerId(),\n        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "killContainer",
            "newValue": "killPreemptedContainer"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
          "commitDate": "18/01/16 1:06 AM",
          "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 12:50 AM",
          "commitNameOld": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public void killContainer(RMContainer cont) {\n+  public void killPreemptedContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n+          + cont.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    super.completedContainer(cont, SchedulerUtils\n+      .createPreemptedContainerStatus(cont.getContainerId(),\n+        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killPreemptedContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n          + cont.toString());\n    }\n    super.completedContainer(cont, SchedulerUtils\n      .createPreemptedContainerStatus(cont.getContainerId(),\n        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "adf260a728df427eb729abe8fb9ad7248991ea54": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
      "commitDate": "18/01/16 12:50 AM",
      "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
          "commitDate": "18/01/16 12:50 AM",
          "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "17/01/16 7:04 PM",
          "commitNameOld": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  public void killPreemptedContainer(RMContainer cont) {\n+  public void killContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n-          + cont.toString());\n+      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n-    super.completedContainer(cont, SchedulerUtils\n-      .createPreemptedContainerStatus(cont.getContainerId(),\n-        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n+    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n+      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n+      RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "killPreemptedContainer",
            "newValue": "killContainer"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
          "commitDate": "18/01/16 12:50 AM",
          "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "17/01/16 7:04 PM",
          "commitNameOld": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  public void killPreemptedContainer(RMContainer cont) {\n+  public void killContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n-          + cont.toString());\n+      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n-    super.completedContainer(cont, SchedulerUtils\n-      .createPreemptedContainerStatus(cont.getContainerId(),\n-        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n+    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n+      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n+      RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
      "commitDate": "17/01/16 7:04 PM",
      "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "17/01/16 7:04 PM",
          "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/01/16 9:18 PM",
          "commitNameOld": "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 4.91,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public void killContainer(RMContainer cont) {\n+  public void killPreemptedContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n+          + cont.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    super.completedContainer(cont, SchedulerUtils\n+      .createPreemptedContainerStatus(cont.getContainerId(),\n+        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killPreemptedContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n          + cont.toString());\n    }\n    super.completedContainer(cont, SchedulerUtils\n      .createPreemptedContainerStatus(cont.getContainerId(),\n        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "killContainer",
            "newValue": "killPreemptedContainer"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "17/01/16 7:04 PM",
          "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/01/16 9:18 PM",
          "commitNameOld": "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 4.91,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public void killContainer(RMContainer cont) {\n+  public void killPreemptedContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n+          + cont.toString());\n     }\n-    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n-      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n-      RMContainerEventType.KILL);\n+    super.completedContainer(cont, SchedulerUtils\n+      .createPreemptedContainerStatus(cont.getContainerId(),\n+        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void killPreemptedContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + \": container\"\n          + cont.toString());\n    }\n    super.completedContainer(cont, SchedulerUtils\n      .createPreemptedContainerStatus(cont.getContainerId(),\n        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b272ccae78918e7d756d84920a9322187d61eed": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3535. Scheduler must re-request container resources when RMContainer transitions from ALLOCATED to KILLED (rohithsharma and peng.zhang via asuresh)\n",
      "commitDate": "17/07/15 4:31 AM",
      "commitName": "9b272ccae78918e7d756d84920a9322187d61eed",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/07/15 5:32 PM",
      "commitNameOld": "0e4b06690ff51fbde3ab26f68fde8aeb32af69af",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 15.46,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n   public void killContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n-    recoverResourceRequestForContainer(cont);\n     completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n       cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n       RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "43589a8df70d4dbaf86609961e27cc4e23dda993": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1408 Preemption caused Invalid State Event: ACQUIRED at KILLED and caused a task timeout for 30mins. (Sunil G via mayank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610860 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 2:48 PM",
      "commitName": "43589a8df70d4dbaf86609961e27cc4e23dda993",
      "commitAuthor": "Mayank Bansal",
      "commitDateOld": "25/06/14 2:56 PM",
      "commitNameOld": "9571db19ebe39a2e654f754fd82c73c8fc865c15",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.99,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   public void killContainer(RMContainer cont) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n+    recoverResourceRequestForContainer(cont);\n     completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n       cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n       RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    recoverResourceRequestForContainer(cont);\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "d16470025aa0c51a04c530863a96108895d72ddf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 8:15 AM",
      "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/06/14 8:09 PM",
      "commitNameOld": "424fd9494f144c035fdef8c533be51e2027ad8d9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 15.5,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,8 @@\n   public void killContainer(RMContainer cont) {\n-    if(LOG.isDebugEnabled()){\n+    if (LOG.isDebugEnabled()) {\n       LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n-    completedContainer(cont,\n-        SchedulerUtils.createPreemptedContainerStatus(\n-            cont.getContainerId(),\"Container being forcibly preempted:\"\n-        + cont.getContainerId()),\n-        RMContainerEventType.KILL);\n+    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n+      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n+      RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void killContainer(RMContainer cont) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(\n      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),\n      RMContainerEventType.KILL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "1cd7b067f7aebda201541e309ba27fc28e0b16db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1049. ContainerExistStatus should define a status for preempted containers. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1521036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/09/13 4:07 AM",
      "commitName": "1cd7b067f7aebda201541e309ba27fc28e0b16db",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "26/08/13 8:39 AM",
      "commitNameOld": "942e2ebaa54306ffc5b0ffb403e552764a40d58c",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 13.81,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public void killContainer(RMContainer cont) {\n     if(LOG.isDebugEnabled()){\n       LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n     }\n     completedContainer(cont,\n-        SchedulerUtils.createAbnormalContainerStatus(\n+        SchedulerUtils.createPreemptedContainerStatus(\n             cont.getContainerId(),\"Container being forcibly preempted:\"\n         + cont.getContainerId()),\n         RMContainerEventType.KILL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void killContainer(RMContainer cont) {\n    if(LOG.isDebugEnabled()){\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont,\n        SchedulerUtils.createPreemptedContainerStatus(\n            cont.getContainerId(),\"Container being forcibly preempted:\"\n        + cont.getContainerId()),\n        RMContainerEventType.KILL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,10 @@\n+  public void killContainer(RMContainer cont) {\n+    if(LOG.isDebugEnabled()){\n+      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n+    }\n+    completedContainer(cont,\n+        SchedulerUtils.createAbnormalContainerStatus(\n+            cont.getContainerId(),\"Container being forcibly preempted:\"\n+        + cont.getContainerId()),\n+        RMContainerEventType.KILL);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void killContainer(RMContainer cont) {\n    if(LOG.isDebugEnabled()){\n      LOG.debug(\"KILL_CONTAINER: container\" + cont.toString());\n    }\n    completedContainer(cont,\n        SchedulerUtils.createAbnormalContainerStatus(\n            cont.getContainerId(),\"Container being forcibly preempted:\"\n        + cont.getContainerId()),\n        RMContainerEventType.KILL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}