{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationHistoryManagerImpl.java",
  "functionName": "convertToApplicationReport",
  "functionId": "convertToApplicationReport___appHistory-ApplicationHistoryData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
  "functionStartLine": 131,
  "functionEndLine": 153,
  "numCommitsSeen": 18,
  "timeTaken": 3255,
  "changeHistory": [
    "04105bbfdb041a41062c856632641140de84fba8",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
    "bc85959eddcb11037e8b9f0e06780b7c3e1cbab6",
    "4a9ec1a8243e2394ff7221b1c20dfaa80e9f5111",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "04105bbfdb041a41062c856632641140de84fba8": "Ybodychange",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": "Ybodychange",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": "Ybodychange",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": "Ybodychange",
    "bc85959eddcb11037e8b9f0e06780b7c3e1cbab6": "Ybodychange",
    "4a9ec1a8243e2394ff7221b1c20dfaa80e9f5111": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "04105bbfdb041a41062c856632641140de84fba8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6616: YARN AHS shows submitTime for jobs same as startTime. Contributed by  Prabhu Joseph\n",
      "commitDate": "29/01/19 9:22 AM",
      "commitName": "04105bbfdb041a41062c856632641140de84fba8",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "21/12/18 4:44 PM",
      "commitNameOld": "f82922dcfae0b7e3e68ce970c441d8b7edc59acf",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 38.69,
      "commitsBetweenForRepo": 259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private ApplicationReport convertToApplicationReport(\n       ApplicationHistoryData appHistory) throws IOException {\n     ApplicationAttemptId currentApplicationAttemptId \u003d null;\n     String trackingUrl \u003d UNAVAILABLE;\n     String host \u003d UNAVAILABLE;\n     int rpcPort \u003d -1;\n \n     ApplicationAttemptHistoryData lastAttempt \u003d\n         getLastAttempt(appHistory.getApplicationId());\n     if (lastAttempt !\u003d null) {\n       currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n       trackingUrl \u003d lastAttempt.getTrackingURL();\n       host \u003d lastAttempt.getHost();\n       rpcPort \u003d lastAttempt.getRPCPort();\n     }\n     return ApplicationReport.newInstance(appHistory.getApplicationId(),\n       currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n       appHistory.getApplicationName(), host, rpcPort, null,\n       appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n-      trackingUrl, appHistory.getStartTime(), 0, appHistory.getFinishTime(),\n-      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n-      appHistory.getApplicationType(), null);\n+      trackingUrl, appHistory.getStartTime(), appHistory.getSubmitTime(), 0,\n+      appHistory.getFinishTime(), appHistory.getFinalApplicationStatus(),\n+      null, \"\", 100, appHistory.getApplicationType(), null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), appHistory.getSubmitTime(), 0,\n      appHistory.getFinishTime(), appHistory.getFinalApplicationStatus(),\n      null, \"\", 100, appHistory.getApplicationType(), null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
      "extendedDetails": {}
    },
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 11:15 AM",
      "commitName": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 6:04 AM",
      "commitNameOld": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private ApplicationReport convertToApplicationReport(\n       ApplicationHistoryData appHistory) throws IOException {\n     ApplicationAttemptId currentApplicationAttemptId \u003d null;\n     String trackingUrl \u003d UNAVAILABLE;\n     String host \u003d UNAVAILABLE;\n     int rpcPort \u003d -1;\n \n     ApplicationAttemptHistoryData lastAttempt \u003d\n         getLastAttempt(appHistory.getApplicationId());\n     if (lastAttempt !\u003d null) {\n       currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n       trackingUrl \u003d lastAttempt.getTrackingURL();\n       host \u003d lastAttempt.getHost();\n       rpcPort \u003d lastAttempt.getRPCPort();\n     }\n     return ApplicationReport.newInstance(appHistory.getApplicationId(),\n       currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n       appHistory.getApplicationName(), host, rpcPort, null,\n       appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n-      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n+      trackingUrl, appHistory.getStartTime(), 0, appHistory.getFinishTime(),\n       appHistory.getFinalApplicationStatus(), null, \"\", 100,\n       appHistory.getApplicationType(), null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), 0, appHistory.getFinishTime(),\n      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n      appHistory.getApplicationType(), null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
      "extendedDetails": {}
    },
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\"\n\nThis reverts commit 0c14b6f0d80d847be7ef3eda1614eadbf835181c.\n",
      "commitDate": "17/04/18 6:04 AM",
      "commitName": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 5:59 AM",
      "commitNameOld": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private ApplicationReport convertToApplicationReport(\n       ApplicationHistoryData appHistory) throws IOException {\n     ApplicationAttemptId currentApplicationAttemptId \u003d null;\n     String trackingUrl \u003d UNAVAILABLE;\n     String host \u003d UNAVAILABLE;\n     int rpcPort \u003d -1;\n \n     ApplicationAttemptHistoryData lastAttempt \u003d\n         getLastAttempt(appHistory.getApplicationId());\n     if (lastAttempt !\u003d null) {\n       currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n       trackingUrl \u003d lastAttempt.getTrackingURL();\n       host \u003d lastAttempt.getHost();\n       rpcPort \u003d lastAttempt.getRPCPort();\n     }\n     return ApplicationReport.newInstance(appHistory.getApplicationId(),\n       currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n       appHistory.getApplicationName(), host, rpcPort, null,\n       appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n-      trackingUrl, appHistory.getStartTime(), 0, appHistory.getFinishTime(),\n+      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n       appHistory.getFinalApplicationStatus(), null, \"\", 100,\n       appHistory.getApplicationType(), null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n      appHistory.getApplicationType(), null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
      "extendedDetails": {}
    },
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 5:59 AM",
      "commitName": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "07/08/17 2:56 AM",
      "commitNameOld": "839e077faf4019d6efdcd89d95930023cd0b0a08",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 253.13,
      "commitsBetweenForRepo": 1953,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private ApplicationReport convertToApplicationReport(\n       ApplicationHistoryData appHistory) throws IOException {\n     ApplicationAttemptId currentApplicationAttemptId \u003d null;\n     String trackingUrl \u003d UNAVAILABLE;\n     String host \u003d UNAVAILABLE;\n     int rpcPort \u003d -1;\n \n     ApplicationAttemptHistoryData lastAttempt \u003d\n         getLastAttempt(appHistory.getApplicationId());\n     if (lastAttempt !\u003d null) {\n       currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n       trackingUrl \u003d lastAttempt.getTrackingURL();\n       host \u003d lastAttempt.getHost();\n       rpcPort \u003d lastAttempt.getRPCPort();\n     }\n     return ApplicationReport.newInstance(appHistory.getApplicationId(),\n       currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n       appHistory.getApplicationName(), host, rpcPort, null,\n       appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n-      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n+      trackingUrl, appHistory.getStartTime(), 0, appHistory.getFinishTime(),\n       appHistory.getFinalApplicationStatus(), null, \"\", 100,\n       appHistory.getApplicationType(), null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), 0, appHistory.getFinishTime(),\n      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n      appHistory.getApplicationType(), null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
      "extendedDetails": {}
    },
    "bc85959eddcb11037e8b9f0e06780b7c3e1cbab6": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-1462. Made RM write application tags to timeline server and exposed them to users via generic history web UI and REST API. Contributed by Xuan Gong.\"\n\nThis reverts commit 4a9ec1a8243e2394ff7221b1c20dfaa80e9f5111.\n",
      "commitDate": "03/06/15 2:15 PM",
      "commitName": "bc85959eddcb11037e8b9f0e06780b7c3e1cbab6",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "30/05/15 9:05 PM",
      "commitNameOld": "4a9ec1a8243e2394ff7221b1c20dfaa80e9f5111",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 3.72,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private ApplicationReport convertToApplicationReport(\n       ApplicationHistoryData appHistory) throws IOException {\n     ApplicationAttemptId currentApplicationAttemptId \u003d null;\n     String trackingUrl \u003d UNAVAILABLE;\n     String host \u003d UNAVAILABLE;\n     int rpcPort \u003d -1;\n \n     ApplicationAttemptHistoryData lastAttempt \u003d\n         getLastAttempt(appHistory.getApplicationId());\n     if (lastAttempt !\u003d null) {\n       currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n       trackingUrl \u003d lastAttempt.getTrackingURL();\n       host \u003d lastAttempt.getHost();\n       rpcPort \u003d lastAttempt.getRPCPort();\n     }\n     return ApplicationReport.newInstance(appHistory.getApplicationId(),\n       currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n       appHistory.getApplicationName(), host, rpcPort, null,\n       appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n       trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n       appHistory.getFinalApplicationStatus(), null, \"\", 100,\n-      appHistory.getApplicationType(), null, null);\n+      appHistory.getApplicationType(), null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n      appHistory.getApplicationType(), null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
      "extendedDetails": {}
    },
    "4a9ec1a8243e2394ff7221b1c20dfaa80e9f5111": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1462. Made RM write application tags to timeline server and exposed them to users via generic history web UI and REST API. Contributed by Xuan Gong.\n",
      "commitDate": "30/05/15 9:05 PM",
      "commitName": "4a9ec1a8243e2394ff7221b1c20dfaa80e9f5111",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "27/05/15 4:52 PM",
      "commitNameOld": "54504133f41e36eaea6bb06c7b9ddb249468ecd7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 3.18,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private ApplicationReport convertToApplicationReport(\n       ApplicationHistoryData appHistory) throws IOException {\n     ApplicationAttemptId currentApplicationAttemptId \u003d null;\n     String trackingUrl \u003d UNAVAILABLE;\n     String host \u003d UNAVAILABLE;\n     int rpcPort \u003d -1;\n \n     ApplicationAttemptHistoryData lastAttempt \u003d\n         getLastAttempt(appHistory.getApplicationId());\n     if (lastAttempt !\u003d null) {\n       currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n       trackingUrl \u003d lastAttempt.getTrackingURL();\n       host \u003d lastAttempt.getHost();\n       rpcPort \u003d lastAttempt.getRPCPort();\n     }\n     return ApplicationReport.newInstance(appHistory.getApplicationId(),\n       currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n       appHistory.getApplicationName(), host, rpcPort, null,\n       appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n       trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n       appHistory.getFinalApplicationStatus(), null, \"\", 100,\n-      appHistory.getApplicationType(), null);\n+      appHistory.getApplicationType(), null, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n      appHistory.getApplicationType(), null, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  private ApplicationReport convertToApplicationReport(\n+      ApplicationHistoryData appHistory) throws IOException {\n+    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n+    String trackingUrl \u003d UNAVAILABLE;\n+    String host \u003d UNAVAILABLE;\n+    int rpcPort \u003d -1;\n+\n+    ApplicationAttemptHistoryData lastAttempt \u003d\n+        getLastAttempt(appHistory.getApplicationId());\n+    if (lastAttempt !\u003d null) {\n+      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n+      trackingUrl \u003d lastAttempt.getTrackingURL();\n+      host \u003d lastAttempt.getHost();\n+      rpcPort \u003d lastAttempt.getRPCPort();\n+    }\n+    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n+      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n+      appHistory.getApplicationName(), host, rpcPort, null,\n+      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n+      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n+      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n+      appHistory.getApplicationType(), null);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationReport convertToApplicationReport(\n      ApplicationHistoryData appHistory) throws IOException {\n    ApplicationAttemptId currentApplicationAttemptId \u003d null;\n    String trackingUrl \u003d UNAVAILABLE;\n    String host \u003d UNAVAILABLE;\n    int rpcPort \u003d -1;\n\n    ApplicationAttemptHistoryData lastAttempt \u003d\n        getLastAttempt(appHistory.getApplicationId());\n    if (lastAttempt !\u003d null) {\n      currentApplicationAttemptId \u003d lastAttempt.getApplicationAttemptId();\n      trackingUrl \u003d lastAttempt.getTrackingURL();\n      host \u003d lastAttempt.getHost();\n      rpcPort \u003d lastAttempt.getRPCPort();\n    }\n    return ApplicationReport.newInstance(appHistory.getApplicationId(),\n      currentApplicationAttemptId, appHistory.getUser(), appHistory.getQueue(),\n      appHistory.getApplicationName(), host, rpcPort, null,\n      appHistory.getYarnApplicationState(), appHistory.getDiagnosticsInfo(),\n      trackingUrl, appHistory.getStartTime(), appHistory.getFinishTime(),\n      appHistory.getFinalApplicationStatus(), null, \"\", 100,\n      appHistory.getApplicationType(), null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerImpl.java"
    }
  }
}