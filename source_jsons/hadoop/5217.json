{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirWriteFileOp.java",
  "functionName": "persistBlocks",
  "functionId": "persistBlocks___fsd-FSDirectory__path-String__file-INodeFile__logRetryCache-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
  "functionStartLine": 105,
  "functionEndLine": 115,
  "numCommitsSeen": 1495,
  "timeTaken": 28421,
  "changeHistory": [
    "e5afac5896a1a88e152746598527d91f73cbb724",
    "05af0ff4be871ddbb4c4cb4f0b5b506ecee36fb8",
    "88209ce181b5ecc55c0ae2bceff4893ab4817e88",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
    "fd2ba4911bec60386a106c85aedd5cc99cd8cab3",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75",
    "8c7a7e619699386f9e6991842558d78aa0c8053d",
    "f138ae68f9be0ae072a6a4ee50e94a1608c90edb"
  ],
  "changeHistoryShort": {
    "e5afac5896a1a88e152746598527d91f73cbb724": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "05af0ff4be871ddbb4c4cb4f0b5b506ecee36fb8": "Ymodifierchange",
    "88209ce181b5ecc55c0ae2bceff4893ab4817e88": "Ymodifierchange",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "fd2ba4911bec60386a106c85aedd5cc99cd8cab3": "Ybodychange",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": "Yparameterchange",
    "8c7a7e619699386f9e6991842558d78aa0c8053d": "Ymultichange(Yparameterchange,Ybodychange)",
    "f138ae68f9be0ae072a6a4ee50e94a1608c90edb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5afac5896a1a88e152746598527d91f73cbb724": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
      "commitDate": "15/05/15 7:09 PM",
      "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private void persistBlocks(String path, INodeFile file,\n-                             boolean logRetryCache) {\n-    assert hasWriteLock();\n+  static void persistBlocks(\n+      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n+    assert fsd.getFSNamesystem().hasWriteLock();\n     Preconditions.checkArgument(file.isUnderConstruction());\n-    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n     if(NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n               + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n               \" the file system\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void persistBlocks(\n      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
            "oldMethodName": "persistBlocks",
            "newMethodName": "persistBlocks"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private void persistBlocks(String path, INodeFile file,\n-                             boolean logRetryCache) {\n-    assert hasWriteLock();\n+  static void persistBlocks(\n+      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n+    assert fsd.getFSNamesystem().hasWriteLock();\n     Preconditions.checkArgument(file.isUnderConstruction());\n-    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n     if(NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n               + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n               \" the file system\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void persistBlocks(\n      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private void persistBlocks(String path, INodeFile file,\n-                             boolean logRetryCache) {\n-    assert hasWriteLock();\n+  static void persistBlocks(\n+      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n+    assert fsd.getFSNamesystem().hasWriteLock();\n     Preconditions.checkArgument(file.isUnderConstruction());\n-    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n     if(NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n               + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n               \" the file system\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void persistBlocks(\n      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private void persistBlocks(String path, INodeFile file,\n-                             boolean logRetryCache) {\n-    assert hasWriteLock();\n+  static void persistBlocks(\n+      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n+    assert fsd.getFSNamesystem().hasWriteLock();\n     Preconditions.checkArgument(file.isUnderConstruction());\n-    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n     if(NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n               + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n               \" the file system\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void persistBlocks(\n      FSDirectory fsd, String path, INodeFile file, boolean logRetryCache) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    fsd.getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {
            "oldValue": "[path-String, file-INodeFile, logRetryCache-boolean]",
            "newValue": "[fsd-FSDirectory, path-String, file-INodeFile, logRetryCache-boolean]"
          }
        }
      ]
    },
    "05af0ff4be871ddbb4c4cb4f0b5b506ecee36fb8": {
      "type": "Ymodifierchange",
      "commitMessage": "Revert HDFS-6940.",
      "commitDate": "09/09/14 5:30 PM",
      "commitName": "05af0ff4be871ddbb4c4cb4f0b5b506ecee36fb8",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "06/09/14 12:07 PM",
      "commitNameOld": "88209ce181b5ecc55c0ae2bceff4893ab4817e88",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 3.22,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  protected void persistBlocks(String path, INodeFile file,\n-                               boolean logRetryCache) {\n+  private void persistBlocks(String path, INodeFile file,\n+                             boolean logRetryCache) {\n     assert hasWriteLock();\n     Preconditions.checkArgument(file.isUnderConstruction());\n     getEditLog().logUpdateBlocks(path, file, logRetryCache);\n     if(NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n               + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n               \" the file system\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void persistBlocks(String path, INodeFile file,\n                             boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[private]"
      }
    },
    "88209ce181b5ecc55c0ae2bceff4893ab4817e88": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6940. Refactoring to allow ConsensusNode implementation.\nContributed by Konstantin Shvachko.",
      "commitDate": "06/09/14 12:07 PM",
      "commitName": "88209ce181b5ecc55c0ae2bceff4893ab4817e88",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "04/09/14 6:54 PM",
      "commitNameOld": "6104520369045dfaa4b543cbad21236ed322249b",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.72,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  private void persistBlocks(String path, INodeFile file,\n-                             boolean logRetryCache) {\n+  protected void persistBlocks(String path, INodeFile file,\n+                               boolean logRetryCache) {\n     assert hasWriteLock();\n     Preconditions.checkArgument(file.isUnderConstruction());\n     getEditLog().logUpdateBlocks(path, file, logRetryCache);\n     if(NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n               + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n               \" the file system\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void persistBlocks(String path, INodeFile file,\n                               boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 10:22 AM",
      "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 7.95,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n-      throws IOException {\n-    String src \u003d pendingFile.getFullPathName();\n-    dir.persistBlocks(src, pendingFile, logRetryCache);\n-    return src;\n+  private void persistBlocks(String path, INodeFile file,\n+                             boolean logRetryCache) {\n+    assert hasWriteLock();\n+    Preconditions.checkArgument(file.isUnderConstruction());\n+    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    if(NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n+              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n+              \" the file system\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void persistBlocks(String path, INodeFile file,\n                             boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[pendingFile-INodeFile, logRetryCache-boolean]",
            "newValue": "[path-String, file-INodeFile, logRetryCache-boolean]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 7.95,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n-      throws IOException {\n-    String src \u003d pendingFile.getFullPathName();\n-    dir.persistBlocks(src, pendingFile, logRetryCache);\n-    return src;\n+  private void persistBlocks(String path, INodeFile file,\n+                             boolean logRetryCache) {\n+    assert hasWriteLock();\n+    Preconditions.checkArgument(file.isUnderConstruction());\n+    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    if(NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n+              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n+              \" the file system\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void persistBlocks(String path, INodeFile file,\n                             boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 7.95,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n-      throws IOException {\n-    String src \u003d pendingFile.getFullPathName();\n-    dir.persistBlocks(src, pendingFile, logRetryCache);\n-    return src;\n+  private void persistBlocks(String path, INodeFile file,\n+                             boolean logRetryCache) {\n+    assert hasWriteLock();\n+    Preconditions.checkArgument(file.isUnderConstruction());\n+    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    if(NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n+              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n+              \" the file system\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void persistBlocks(String path, INodeFile file,\n                             boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 7.95,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n-      throws IOException {\n-    String src \u003d pendingFile.getFullPathName();\n-    dir.persistBlocks(src, pendingFile, logRetryCache);\n-    return src;\n+  private void persistBlocks(String path, INodeFile file,\n+                             boolean logRetryCache) {\n+    assert hasWriteLock();\n+    Preconditions.checkArgument(file.isUnderConstruction());\n+    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    if(NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n+              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n+              \" the file system\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void persistBlocks(String path, INodeFile file,\n                             boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 7.95,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n-      throws IOException {\n-    String src \u003d pendingFile.getFullPathName();\n-    dir.persistBlocks(src, pendingFile, logRetryCache);\n-    return src;\n+  private void persistBlocks(String path, INodeFile file,\n+                             boolean logRetryCache) {\n+    assert hasWriteLock();\n+    Preconditions.checkArgument(file.isUnderConstruction());\n+    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n+    if(NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n+              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n+              \" the file system\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void persistBlocks(String path, INodeFile file,\n                             boolean logRetryCache) {\n    assert hasWriteLock();\n    Preconditions.checkArgument(file.isUnderConstruction());\n    getEditLog().logUpdateBlocks(path, file, logRetryCache);\n    if(NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"persistBlocks: \" + path\n              + \" with \" + file.getBlocks().length + \" blocks is persisted to\" +\n              \" the file system\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "fd2ba4911bec60386a106c85aedd5cc99cd8cab3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5790. LeaseManager.findPath is very slow when many leases need recovery. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1562970 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 1:21 PM",
      "commitName": "fd2ba4911bec60386a106c85aedd5cc99cd8cab3",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "29/01/14 3:59 PM",
      "commitNameOld": "c96d0780335de83a694e93cf8b8fc46d2288fe9d",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n       throws IOException {\n-    String src \u003d leaseManager.findPath(pendingFile);\n+    String src \u003d pendingFile.getFullPathName();\n     dir.persistBlocks(src, pendingFile, logRetryCache);\n     return src;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n      throws IOException {\n    String src \u003d pendingFile.getFullPathName();\n    dir.persistBlocks(src, pendingFile, logRetryCache);\n    return src;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-5285. Flatten INodeFile hierarchy: Replace INodeFileUnderConstruction and INodeFileUnderConstructionWithSnapshot with FileUnderContructionFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/13 5:39 PM",
      "commitName": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "21/11/13 9:12 AM",
      "commitNameOld": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  String persistBlocks(INodeFileUnderConstruction pendingFile,\n-      boolean logRetryCache) throws IOException {\n+  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n+      throws IOException {\n     String src \u003d leaseManager.findPath(pendingFile);\n     dir.persistBlocks(src, pendingFile, logRetryCache);\n     return src;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String persistBlocks(INodeFile pendingFile, boolean logRetryCache)\n      throws IOException {\n    String src \u003d leaseManager.findPath(pendingFile);\n    dir.persistBlocks(src, pendingFile, logRetryCache);\n    return src;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[pendingFile-INodeFileUnderConstruction, logRetryCache-boolean]",
        "newValue": "[pendingFile-INodeFile, logRetryCache-boolean]"
      }
    },
    "8c7a7e619699386f9e6991842558d78aa0c8053d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/07/13 12:51 AM",
      "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/07/13 12:51 AM",
          "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "26/07/13 4:59 PM",
          "commitNameOld": "dc17bda4b677e30c02c2a9a053895a43e41f7a12",
          "commitAuthorOld": "Konstantin Boudnik",
          "daysBetweenCommits": 3.33,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  String persistBlocks(INodeFileUnderConstruction pendingFile)\n-      throws IOException {\n+  String persistBlocks(INodeFileUnderConstruction pendingFile,\n+      boolean logRetryCache) throws IOException {\n     String src \u003d leaseManager.findPath(pendingFile);\n-    dir.persistBlocks(src, pendingFile);\n+    dir.persistBlocks(src, pendingFile, logRetryCache);\n     return src;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String persistBlocks(INodeFileUnderConstruction pendingFile,\n      boolean logRetryCache) throws IOException {\n    String src \u003d leaseManager.findPath(pendingFile);\n    dir.persistBlocks(src, pendingFile, logRetryCache);\n    return src;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[pendingFile-INodeFileUnderConstruction]",
            "newValue": "[pendingFile-INodeFileUnderConstruction, logRetryCache-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/07/13 12:51 AM",
          "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "26/07/13 4:59 PM",
          "commitNameOld": "dc17bda4b677e30c02c2a9a053895a43e41f7a12",
          "commitAuthorOld": "Konstantin Boudnik",
          "daysBetweenCommits": 3.33,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  String persistBlocks(INodeFileUnderConstruction pendingFile)\n-      throws IOException {\n+  String persistBlocks(INodeFileUnderConstruction pendingFile,\n+      boolean logRetryCache) throws IOException {\n     String src \u003d leaseManager.findPath(pendingFile);\n-    dir.persistBlocks(src, pendingFile);\n+    dir.persistBlocks(src, pendingFile, logRetryCache);\n     return src;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String persistBlocks(INodeFileUnderConstruction pendingFile,\n      boolean logRetryCache) throws IOException {\n    String src \u003d leaseManager.findPath(pendingFile);\n    dir.persistBlocks(src, pendingFile, logRetryCache);\n    return src;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "f138ae68f9be0ae072a6a4ee50e94a1608c90edb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5024. Make DatanodeProtocol#commitBlockSynchronization idempotent. Contributed by Arpit Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506789 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/07/13 5:32 PM",
      "commitName": "f138ae68f9be0ae072a6a4ee50e94a1608c90edb",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,6 @@\n+  String persistBlocks(INodeFileUnderConstruction pendingFile)\n+      throws IOException {\n+    String src \u003d leaseManager.findPath(pendingFile);\n+    dir.persistBlocks(src, pendingFile);\n+    return src;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String persistBlocks(INodeFileUnderConstruction pendingFile)\n      throws IOException {\n    String src \u003d leaseManager.findPath(pendingFile);\n    dir.persistBlocks(src, pendingFile);\n    return src;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}