{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "checkFileProgress",
  "functionId": "checkFileProgress___src-String__v-INodeFile__checkall-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 3153,
  "functionEndLine": 3163,
  "numCommitsSeen": 1359,
  "timeTaken": 54737,
  "changeHistory": [
    "bd909ed9f2d853f614f04a50e2230a7932732776",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b",
    "75c545486080042952c775f7964212c15ce65f73",
    "96649c38f9ab00a9845d2c6e35e6264894da5309",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
    "18312804e9c86c0ea6a259e288994fea6fa366ef",
    "7af12ab207cf6e5e63ccb359e928db7fe2350585",
    "cea7bbc630deede93dbe6a1bbda56ad49de4f3de",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": "Ybodychange",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Ybodychange",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": "Ybodychange",
    "75c545486080042952c775f7964212c15ce65f73": "Ymultichange(Ymodifierchange,Ybodychange)",
    "96649c38f9ab00a9845d2c6e35e6264894da5309": "Ybodychange",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": "Ybodychange",
    "18312804e9c86c0ea6a259e288994fea6fa366ef": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "7af12ab207cf6e5e63ccb359e928db7fe2350585": "Ybodychange",
    "cea7bbc630deede93dbe6a1bbda56ad49de4f3de": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
      "commitDate": "25/01/16 6:32 PM",
      "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "24/01/16 2:19 PM",
      "commitNameOld": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 1.18,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     assert hasReadLock();\n     if (checkall) {\n-      return blockManager.checkBlocksProperlyReplicated(src, v\n-          .getBlocks());\n+      return checkBlocksComplete(src, true, v.getBlocks());\n     } else {\n-      // check the penultimate block of this file\n-      BlockInfo b \u003d v.getPenultimateBlock();\n-      return b \u003d\u003d null ||\n-          blockManager.checkBlocksProperlyReplicated(\n-              src, new BlockInfo[] { b });\n+      final BlockInfo[] blocks \u003d v.getBlocks();\n+      final int i \u003d blocks.length - numCommittedAllowed - 2;\n+      return i \u003c 0 || blocks[i] \u003d\u003d null\n+          || checkBlocksComplete(src, false, blocks[i]);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    assert hasReadLock();\n    if (checkall) {\n      return checkBlocksComplete(src, true, v.getBlocks());\n    } else {\n      final BlockInfo[] blocks \u003d v.getBlocks();\n      final int i \u003d blocks.length - numCommittedAllowed - 2;\n      return i \u003c 0 || blocks[i] \u003d\u003d null\n          || checkBlocksComplete(src, false, blocks[i]);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/05/15 8:08 AM",
      "commitNameOld": "2b6bcfdafa91223a4116e3e9304579f5f91dccac",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.32,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     assert hasReadLock();\n     if (checkall) {\n       return blockManager.checkBlocksProperlyReplicated(src, v\n           .getBlocks());\n     } else {\n       // check the penultimate block of this file\n-      BlockInfoContiguous b \u003d v.getPenultimateBlock();\n+      BlockInfo b \u003d v.getPenultimateBlock();\n       return b \u003d\u003d null ||\n           blockManager.checkBlocksProperlyReplicated(\n-              src, new BlockInfoContiguous[] { b });\n+              src, new BlockInfo[] { b });\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    assert hasReadLock();\n    if (checkall) {\n      return blockManager.checkBlocksProperlyReplicated(src, v\n          .getBlocks());\n    } else {\n      // check the penultimate block of this file\n      BlockInfo b \u003d v.getPenultimateBlock();\n      return b \u003d\u003d null ||\n          blockManager.checkBlocksProperlyReplicated(\n              src, new BlockInfo[] { b });\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:07 AM",
      "commitName": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/05/15 11:07 AM",
      "commitNameOld": "ba9371492036983a9899398907ab41fe548f29b3",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     assert hasReadLock();\n     if (checkall) {\n       return blockManager.checkBlocksProperlyReplicated(src, v\n           .getBlocks());\n     } else {\n       // check the penultimate block of this file\n-      BlockInfoContiguous b \u003d v.getPenultimateBlock();\n+      BlockInfo b \u003d v.getPenultimateBlock();\n       return b \u003d\u003d null ||\n           blockManager.checkBlocksProperlyReplicated(\n-              src, new BlockInfoContiguous[] { b });\n+              src, new BlockInfo[] { b });\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    assert hasReadLock();\n    if (checkall) {\n      return blockManager.checkBlocksProperlyReplicated(src, v\n          .getBlocks());\n    } else {\n      // check the penultimate block of this file\n      BlockInfo b \u003d v.getPenultimateBlock();\n      return b \u003d\u003d null ||\n          blockManager.checkBlocksProperlyReplicated(\n              src, new BlockInfo[] { b });\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "75c545486080042952c775f7964212c15ce65f73": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-8071. Redundant checkFileProgress() in PART II of getAdditionalBlock(). Contributed by Konstantin Shvachko.",
      "commitDate": "06/04/15 10:20 PM",
      "commitName": "75c545486080042952c775f7964212c15ce65f73",
      "commitAuthor": "Konstantin V Shvachko",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8071. Redundant checkFileProgress() in PART II of getAdditionalBlock(). Contributed by Konstantin Shvachko.",
          "commitDate": "06/04/15 10:20 PM",
          "commitName": "75c545486080042952c775f7964212c15ce65f73",
          "commitAuthor": "Konstantin V Shvachko",
          "commitDateOld": "02/04/15 11:36 AM",
          "commitNameOld": "96649c38f9ab00a9845d2c6e35e6264894da5309",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 4.45,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n-    readLock();\n-    try {\n-      if (checkall) {\n-        return blockManager.checkBlocksProperlyReplicated(src, v\n-            .getBlocks());\n-      } else {\n-        // check the penultimate block of this file\n-        BlockInfoContiguous b \u003d v.getPenultimateBlock();\n-        return b \u003d\u003d null ||\n-            blockManager.checkBlocksProperlyReplicated(\n-                src, new BlockInfoContiguous[] { b });\n-      }\n-    } finally {\n-      readUnlock();\n+  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n+    assert hasReadLock();\n+    if (checkall) {\n+      return blockManager.checkBlocksProperlyReplicated(src, v\n+          .getBlocks());\n+    } else {\n+      // check the penultimate block of this file\n+      BlockInfoContiguous b \u003d v.getPenultimateBlock();\n+      return b \u003d\u003d null ||\n+          blockManager.checkBlocksProperlyReplicated(\n+              src, new BlockInfoContiguous[] { b });\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    assert hasReadLock();\n    if (checkall) {\n      return blockManager.checkBlocksProperlyReplicated(src, v\n          .getBlocks());\n    } else {\n      // check the penultimate block of this file\n      BlockInfoContiguous b \u003d v.getPenultimateBlock();\n      return b \u003d\u003d null ||\n          blockManager.checkBlocksProperlyReplicated(\n              src, new BlockInfoContiguous[] { b });\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8071. Redundant checkFileProgress() in PART II of getAdditionalBlock(). Contributed by Konstantin Shvachko.",
          "commitDate": "06/04/15 10:20 PM",
          "commitName": "75c545486080042952c775f7964212c15ce65f73",
          "commitAuthor": "Konstantin V Shvachko",
          "commitDateOld": "02/04/15 11:36 AM",
          "commitNameOld": "96649c38f9ab00a9845d2c6e35e6264894da5309",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 4.45,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n-    readLock();\n-    try {\n-      if (checkall) {\n-        return blockManager.checkBlocksProperlyReplicated(src, v\n-            .getBlocks());\n-      } else {\n-        // check the penultimate block of this file\n-        BlockInfoContiguous b \u003d v.getPenultimateBlock();\n-        return b \u003d\u003d null ||\n-            blockManager.checkBlocksProperlyReplicated(\n-                src, new BlockInfoContiguous[] { b });\n-      }\n-    } finally {\n-      readUnlock();\n+  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n+    assert hasReadLock();\n+    if (checkall) {\n+      return blockManager.checkBlocksProperlyReplicated(src, v\n+          .getBlocks());\n+    } else {\n+      // check the penultimate block of this file\n+      BlockInfoContiguous b \u003d v.getPenultimateBlock();\n+      return b \u003d\u003d null ||\n+          blockManager.checkBlocksProperlyReplicated(\n+              src, new BlockInfoContiguous[] { b });\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    assert hasReadLock();\n    if (checkall) {\n      return blockManager.checkBlocksProperlyReplicated(src, v\n          .getBlocks());\n    } else {\n      // check the penultimate block of this file\n      BlockInfoContiguous b \u003d v.getPenultimateBlock();\n      return b \u003d\u003d null ||\n          blockManager.checkBlocksProperlyReplicated(\n              src, new BlockInfoContiguous[] { b });\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "96649c38f9ab00a9845d2c6e35e6264894da5309": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8035. Move checkBlocksProperlyReplicated() in FSNamesystem to BlockManager. Contributed by Haohui Mai.\n",
      "commitDate": "02/04/15 11:36 AM",
      "commitName": "96649c38f9ab00a9845d2c6e35e6264894da5309",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/03/15 3:25 PM",
      "commitNameOld": "1a495fbb489c9e9a23b341a52696d10e9e272b04",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.84,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,17 @@\n   private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n-        // check all blocks of the file.\n-        for (BlockInfoContiguous block: v.getBlocks()) {\n-          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n-            return false;\n-          }\n-        }\n+        return blockManager.checkBlocksProperlyReplicated(src, v\n+            .getBlocks());\n       } else {\n         // check the penultimate block of this file\n         BlockInfoContiguous b \u003d v.getPenultimateBlock();\n-        if (b !\u003d null\n-            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n-          return false;\n-        }\n+        return b \u003d\u003d null ||\n+            blockManager.checkBlocksProperlyReplicated(\n+                src, new BlockInfoContiguous[] { b });\n       }\n-      return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        return blockManager.checkBlocksProperlyReplicated(src, v\n            .getBlocks());\n      } else {\n        // check the penultimate block of this file\n        BlockInfoContiguous b \u003d v.getPenultimateBlock();\n        return b \u003d\u003d null ||\n            blockManager.checkBlocksProperlyReplicated(\n                src, new BlockInfoContiguous[] { b });\n      }\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7743. Code cleanup of BlockInfo and rename BlockInfo to BlockInfoContiguous. Contributed by Jing Zhao.\n",
      "commitDate": "08/02/15 11:51 AM",
      "commitName": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "07/02/15 3:21 PM",
      "commitNameOld": "8f7d4bb09f760780dd193c97796ebf4d22cfd2d7",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n         // check all blocks of the file.\n-        for (BlockInfo block: v.getBlocks()) {\n+        for (BlockInfoContiguous block: v.getBlocks()) {\n           if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n             return false;\n           }\n         }\n       } else {\n         // check the penultimate block of this file\n-        BlockInfo b \u003d v.getPenultimateBlock();\n+        BlockInfoContiguous b \u003d v.getPenultimateBlock();\n         if (b !\u003d null\n             \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n           return false;\n         }\n       }\n       return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        // check all blocks of the file.\n        for (BlockInfoContiguous block: v.getBlocks()) {\n          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n            return false;\n          }\n        }\n      } else {\n        // check the penultimate block of this file\n        BlockInfoContiguous b \u003d v.getPenultimateBlock();\n        if (b !\u003d null\n            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "18312804e9c86c0ea6a259e288994fea6fa366ef": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-7357. FSNamesystem.checkFileProgress should log file path. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "05/11/14 10:14 AM",
      "commitName": "18312804e9c86c0ea6a259e288994fea6fa366ef",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7357. FSNamesystem.checkFileProgress should log file path. Contributed by Tsz Wo Nicholas Sze.\n",
          "commitDate": "05/11/14 10:14 AM",
          "commitName": "18312804e9c86c0ea6a259e288994fea6fa366ef",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "05/11/14 9:32 AM",
          "commitNameOld": "6e8722e49c29a19dd13e161001d2464bb1f22189",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,23 @@\n-  boolean checkFileProgress(INodeFile v, boolean checkall) {\n+  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n-        //\n         // check all blocks of the file.\n-        //\n         for (BlockInfo block: v.getBlocks()) {\n-          if (!block.isComplete()) {\n-            LOG.info(\"BLOCK* checkFileProgress: \" + block\n-                + \" has not reached minimal replication \"\n-                + blockManager.minReplication);\n+          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n             return false;\n           }\n         }\n       } else {\n-        //\n         // check the penultimate block of this file\n-        //\n         BlockInfo b \u003d v.getPenultimateBlock();\n-        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n-          LOG.warn(\"BLOCK* checkFileProgress: \" + b\n-              + \" has not reached minimal replication \"\n-              + blockManager.minReplication);\n+        if (b !\u003d null\n+            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n           return false;\n         }\n       }\n       return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        // check all blocks of the file.\n        for (BlockInfo block: v.getBlocks()) {\n          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n            return false;\n          }\n        }\n      } else {\n        // check the penultimate block of this file\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null\n            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[v-INodeFile, checkall-boolean]",
            "newValue": "[src-String, v-INodeFile, checkall-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7357. FSNamesystem.checkFileProgress should log file path. Contributed by Tsz Wo Nicholas Sze.\n",
          "commitDate": "05/11/14 10:14 AM",
          "commitName": "18312804e9c86c0ea6a259e288994fea6fa366ef",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "05/11/14 9:32 AM",
          "commitNameOld": "6e8722e49c29a19dd13e161001d2464bb1f22189",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,23 @@\n-  boolean checkFileProgress(INodeFile v, boolean checkall) {\n+  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n-        //\n         // check all blocks of the file.\n-        //\n         for (BlockInfo block: v.getBlocks()) {\n-          if (!block.isComplete()) {\n-            LOG.info(\"BLOCK* checkFileProgress: \" + block\n-                + \" has not reached minimal replication \"\n-                + blockManager.minReplication);\n+          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n             return false;\n           }\n         }\n       } else {\n-        //\n         // check the penultimate block of this file\n-        //\n         BlockInfo b \u003d v.getPenultimateBlock();\n-        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n-          LOG.warn(\"BLOCK* checkFileProgress: \" + b\n-              + \" has not reached minimal replication \"\n-              + blockManager.minReplication);\n+        if (b !\u003d null\n+            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n           return false;\n         }\n       }\n       return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        // check all blocks of the file.\n        for (BlockInfo block: v.getBlocks()) {\n          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n            return false;\n          }\n        }\n      } else {\n        // check the penultimate block of this file\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null\n            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7357. FSNamesystem.checkFileProgress should log file path. Contributed by Tsz Wo Nicholas Sze.\n",
          "commitDate": "05/11/14 10:14 AM",
          "commitName": "18312804e9c86c0ea6a259e288994fea6fa366ef",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "05/11/14 9:32 AM",
          "commitNameOld": "6e8722e49c29a19dd13e161001d2464bb1f22189",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,23 @@\n-  boolean checkFileProgress(INodeFile v, boolean checkall) {\n+  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n-        //\n         // check all blocks of the file.\n-        //\n         for (BlockInfo block: v.getBlocks()) {\n-          if (!block.isComplete()) {\n-            LOG.info(\"BLOCK* checkFileProgress: \" + block\n-                + \" has not reached minimal replication \"\n-                + blockManager.minReplication);\n+          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n             return false;\n           }\n         }\n       } else {\n-        //\n         // check the penultimate block of this file\n-        //\n         BlockInfo b \u003d v.getPenultimateBlock();\n-        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n-          LOG.warn(\"BLOCK* checkFileProgress: \" + b\n-              + \" has not reached minimal replication \"\n-              + blockManager.minReplication);\n+        if (b !\u003d null\n+            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n           return false;\n         }\n       }\n       return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkFileProgress(String src, INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        // check all blocks of the file.\n        for (BlockInfo block: v.getBlocks()) {\n          if (!isCompleteBlock(src, block, blockManager.minReplication)) {\n            return false;\n          }\n        }\n      } else {\n        // check the penultimate block of this file\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null\n            \u0026\u0026 !isCompleteBlock(src, b, blockManager.minReplication)) {\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "7af12ab207cf6e5e63ccb359e928db7fe2350585": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5558. LeaseManager monitor thread can crash if the last block is complete but another block is not. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547393 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/12/13 6:12 AM",
      "commitName": "7af12ab207cf6e5e63ccb359e928db7fe2350585",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "27/11/13 9:55 AM",
      "commitNameOld": "13edb391d06c479720202eb5ac81f1c71fe64748",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   boolean checkFileProgress(INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n         //\n         // check all blocks of the file.\n         //\n         for (BlockInfo block: v.getBlocks()) {\n           if (!block.isComplete()) {\n             LOG.info(\"BLOCK* checkFileProgress: \" + block\n                 + \" has not reached minimal replication \"\n                 + blockManager.minReplication);\n             return false;\n           }\n         }\n       } else {\n         //\n         // check the penultimate block of this file\n         //\n         BlockInfo b \u003d v.getPenultimateBlock();\n         if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n-          LOG.info(\"BLOCK* checkFileProgress: \" + b\n+          LOG.warn(\"BLOCK* checkFileProgress: \" + b\n               + \" has not reached minimal replication \"\n               + blockManager.minReplication);\n           return false;\n         }\n       }\n       return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkFileProgress(INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        //\n        // check all blocks of the file.\n        //\n        for (BlockInfo block: v.getBlocks()) {\n          if (!block.isComplete()) {\n            LOG.info(\"BLOCK* checkFileProgress: \" + block\n                + \" has not reached minimal replication \"\n                + blockManager.minReplication);\n            return false;\n          }\n        }\n      } else {\n        //\n        // check the penultimate block of this file\n        //\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n          LOG.warn(\"BLOCK* checkFileProgress: \" + b\n              + \" has not reached minimal replication \"\n              + blockManager.minReplication);\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cea7bbc630deede93dbe6a1bbda56ad49de4f3de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4122. Cleanup HDFS logs and reduce the size of logged messages. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1403120 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/10/12 4:10 PM",
      "commitName": "cea7bbc630deede93dbe6a1bbda56ad49de4f3de",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "26/10/12 11:08 AM",
      "commitNameOld": "0e796b61e829c4bf763caf13b0f53cb1bcefdeee",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.21,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   boolean checkFileProgress(INodeFile v, boolean checkall) {\n     readLock();\n     try {\n       if (checkall) {\n         //\n         // check all blocks of the file.\n         //\n         for (BlockInfo block: v.getBlocks()) {\n           if (!block.isComplete()) {\n-            LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n-                + \"block \" + block + \" has not reached minimal replication \"\n+            LOG.info(\"BLOCK* checkFileProgress: \" + block\n+                + \" has not reached minimal replication \"\n                 + blockManager.minReplication);\n             return false;\n           }\n         }\n       } else {\n         //\n         // check the penultimate block of this file\n         //\n         BlockInfo b \u003d v.getPenultimateBlock();\n         if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n-          LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n-              + \"block \" + b + \" has not reached minimal replication \"\n+          LOG.info(\"BLOCK* checkFileProgress: \" + b\n+              + \" has not reached minimal replication \"\n               + blockManager.minReplication);\n           return false;\n         }\n       }\n       return true;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkFileProgress(INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        //\n        // check all blocks of the file.\n        //\n        for (BlockInfo block: v.getBlocks()) {\n          if (!block.isComplete()) {\n            LOG.info(\"BLOCK* checkFileProgress: \" + block\n                + \" has not reached minimal replication \"\n                + blockManager.minReplication);\n            return false;\n          }\n        }\n      } else {\n        //\n        // check the penultimate block of this file\n        //\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n          LOG.info(\"BLOCK* checkFileProgress: \" + b\n              + \" has not reached minimal replication \"\n              + blockManager.minReplication);\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean checkFileProgress(INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        //\n        // check all blocks of the file.\n        //\n        for (BlockInfo block: v.getBlocks()) {\n          if (!block.isComplete()) {\n            LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n                + \"block \" + block + \" has not reached minimal replication \"\n                + blockManager.minReplication);\n            return false;\n          }\n        }\n      } else {\n        //\n        // check the penultimate block of this file\n        //\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n          LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n              + \"block \" + b + \" has not reached minimal replication \"\n              + blockManager.minReplication);\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean checkFileProgress(INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        //\n        // check all blocks of the file.\n        //\n        for (BlockInfo block: v.getBlocks()) {\n          if (!block.isComplete()) {\n            LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n                + \"block \" + block + \" has not reached minimal replication \"\n                + blockManager.minReplication);\n            return false;\n          }\n        }\n      } else {\n        //\n        // check the penultimate block of this file\n        //\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n          LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n              + \"block \" + b + \" has not reached minimal replication \"\n              + blockManager.minReplication);\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,32 @@\n+  boolean checkFileProgress(INodeFile v, boolean checkall) {\n+    readLock();\n+    try {\n+      if (checkall) {\n+        //\n+        // check all blocks of the file.\n+        //\n+        for (BlockInfo block: v.getBlocks()) {\n+          if (!block.isComplete()) {\n+            LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n+                + \"block \" + block + \" has not reached minimal replication \"\n+                + blockManager.minReplication);\n+            return false;\n+          }\n+        }\n+      } else {\n+        //\n+        // check the penultimate block of this file\n+        //\n+        BlockInfo b \u003d v.getPenultimateBlock();\n+        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n+          LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n+              + \"block \" + b + \" has not reached minimal replication \"\n+              + blockManager.minReplication);\n+          return false;\n+        }\n+      }\n+      return true;\n+    } finally {\n+      readUnlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkFileProgress(INodeFile v, boolean checkall) {\n    readLock();\n    try {\n      if (checkall) {\n        //\n        // check all blocks of the file.\n        //\n        for (BlockInfo block: v.getBlocks()) {\n          if (!block.isComplete()) {\n            LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n                + \"block \" + block + \" has not reached minimal replication \"\n                + blockManager.minReplication);\n            return false;\n          }\n        }\n      } else {\n        //\n        // check the penultimate block of this file\n        //\n        BlockInfo b \u003d v.getPenultimateBlock();\n        if (b !\u003d null \u0026\u0026 !b.isComplete()) {\n          LOG.info(\"BLOCK* NameSystem.checkFileProgress: \"\n              + \"block \" + b + \" has not reached minimal replication \"\n              + blockManager.minReplication);\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}