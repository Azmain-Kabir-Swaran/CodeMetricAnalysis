{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericEntityReader.java",
  "functionName": "needCreateFilterListBasedOnFields",
  "functionId": "needCreateFilterListBasedOnFields",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
  "functionStartLine": 194,
  "functionEndLine": 220,
  "numCommitsSeen": 19,
  "timeTaken": 2292,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected boolean needCreateFilterListBasedOnFields() {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Check if all fields are to be retrieved or not. If all fields have to\n    // be retrieved, also check if we have some metrics or configs to\n    // retrieve specified for the query because then a filter list will have\n    // to be created.\n    boolean flag \u003d\n        !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL)\n            || (dataToRetrieve.getConfsToRetrieve() !\u003d null \u0026\u0026 !dataToRetrieve\n                .getConfsToRetrieve().getFilterList().isEmpty())\n            || (dataToRetrieve.getMetricsToRetrieve() !\u003d null \u0026\u0026 !dataToRetrieve\n                .getMetricsToRetrieve().getFilterList().isEmpty());\n    // Filters need to be checked only if we are reading multiple entities. If\n    // condition above is false, we check if there are relationships(relatesTo/\n    // isRelatedTo) and event filters specified for the query.\n    if (!flag \u0026\u0026 !isSingleEntityRead()) {\n      TimelineEntityFilters filters \u003d getFilters();\n      flag \u003d\n          (filters.getEventFilters() !\u003d null \u0026\u0026 !filters.getEventFilters()\n              .getFilterList().isEmpty())\n              || (filters.getIsRelatedTo() !\u003d null \u0026\u0026 !filters.getIsRelatedTo()\n                  .getFilterList().isEmpty())\n              || (filters.getRelatesTo() !\u003d null \u0026\u0026 !filters.getRelatesTo()\n                  .getFilterList().isEmpty());\n    }\n    return flag;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected boolean needCreateFilterListBasedOnFields() {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Check if all fields are to be retrieved or not. If all fields have to\n    // be retrieved, also check if we have some metrics or configs to\n    // retrieve specified for the query because then a filter list will have\n    // to be created.\n    boolean flag \u003d\n        !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL)\n            || (dataToRetrieve.getConfsToRetrieve() !\u003d null \u0026\u0026 !dataToRetrieve\n                .getConfsToRetrieve().getFilterList().isEmpty())\n            || (dataToRetrieve.getMetricsToRetrieve() !\u003d null \u0026\u0026 !dataToRetrieve\n                .getMetricsToRetrieve().getFilterList().isEmpty());\n    // Filters need to be checked only if we are reading multiple entities. If\n    // condition above is false, we check if there are relationships(relatesTo/\n    // isRelatedTo) and event filters specified for the query.\n    if (!flag \u0026\u0026 !isSingleEntityRead()) {\n      TimelineEntityFilters filters \u003d getFilters();\n      flag \u003d\n          (filters.getEventFilters() !\u003d null \u0026\u0026 !filters.getEventFilters()\n              .getFilterList().isEmpty())\n              || (filters.getIsRelatedTo() !\u003d null \u0026\u0026 !filters.getIsRelatedTo()\n                  .getFilterList().isEmpty())\n              || (filters.getRelatesTo() !\u003d null \u0026\u0026 !filters.getRelatesTo()\n                  .getFilterList().isEmpty());\n    }\n    return flag;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java"
      }
    },
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,25 @@\n+  protected boolean needCreateFilterListBasedOnFields() {\n+    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n+    // Check if all fields are to be retrieved or not. If all fields have to\n+    // be retrieved, also check if we have some metrics or configs to\n+    // retrieve specified for the query because then a filter list will have\n+    // to be created.\n+    boolean flag \u003d !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) ||\n+        (dataToRetrieve.getConfsToRetrieve() !\u003d null \u0026\u0026\n+        !dataToRetrieve.getConfsToRetrieve().getFilterList().isEmpty()) ||\n+        (dataToRetrieve.getMetricsToRetrieve() !\u003d null \u0026\u0026\n+        !dataToRetrieve.getMetricsToRetrieve().getFilterList().isEmpty());\n+    // Filters need to be checked only if we are reading multiple entities. If\n+    // condition above is false, we check if there are relationships(relatesTo/\n+    // isRelatedTo) and event filters specified for the query.\n+    if (!flag \u0026\u0026 !isSingleEntityRead()) {\n+      TimelineEntityFilters filters \u003d getFilters();\n+      flag \u003d (filters.getEventFilters() !\u003d null \u0026\u0026\n+          !filters.getEventFilters().getFilterList().isEmpty()) ||\n+          (filters.getIsRelatedTo() !\u003d null \u0026\u0026\n+          !filters.getIsRelatedTo().getFilterList().isEmpty()) ||\n+          (filters.getRelatesTo() !\u003d null \u0026\u0026\n+          !filters.getRelatesTo().getFilterList().isEmpty());\n+    }\n+    return flag;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean needCreateFilterListBasedOnFields() {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Check if all fields are to be retrieved or not. If all fields have to\n    // be retrieved, also check if we have some metrics or configs to\n    // retrieve specified for the query because then a filter list will have\n    // to be created.\n    boolean flag \u003d !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) ||\n        (dataToRetrieve.getConfsToRetrieve() !\u003d null \u0026\u0026\n        !dataToRetrieve.getConfsToRetrieve().getFilterList().isEmpty()) ||\n        (dataToRetrieve.getMetricsToRetrieve() !\u003d null \u0026\u0026\n        !dataToRetrieve.getMetricsToRetrieve().getFilterList().isEmpty());\n    // Filters need to be checked only if we are reading multiple entities. If\n    // condition above is false, we check if there are relationships(relatesTo/\n    // isRelatedTo) and event filters specified for the query.\n    if (!flag \u0026\u0026 !isSingleEntityRead()) {\n      TimelineEntityFilters filters \u003d getFilters();\n      flag \u003d (filters.getEventFilters() !\u003d null \u0026\u0026\n          !filters.getEventFilters().getFilterList().isEmpty()) ||\n          (filters.getIsRelatedTo() !\u003d null \u0026\u0026\n          !filters.getIsRelatedTo().getFilterList().isEmpty()) ||\n          (filters.getRelatesTo() !\u003d null \u0026\u0026\n          !filters.getRelatesTo().getFilterList().isEmpty());\n    }\n    return flag;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java"
    }
  }
}