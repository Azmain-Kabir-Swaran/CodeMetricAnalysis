{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKDelegationTokenSecretManager.java",
  "functionName": "loadFromZKCache",
  "functionId": "loadFromZKCache___isTokenCache-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
  "functionStartLine": 409,
  "functionEndLine": 438,
  "numCommitsSeen": 16,
  "timeTaken": 794,
  "changeHistory": [
    "f4d4d3474cfd2d1f2d243f5ae5cec17af38270b1"
  ],
  "changeHistoryShort": {
    "f4d4d3474cfd2d1f2d243f5ae5cec17af38270b1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f4d4d3474cfd2d1f2d243f5ae5cec17af38270b1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13487. Hadoop KMS should load old delegation tokens from Zookeeper on startup. Contributed by Xiao Chen.\n",
      "commitDate": "22/08/16 2:42 PM",
      "commitName": "f4d4d3474cfd2d1f2d243f5ae5cec17af38270b1",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,30 @@\n+  private void loadFromZKCache(final boolean isTokenCache) {\n+    final String cacheName \u003d isTokenCache ? \"token\" : \"key\";\n+    LOG.info(\"Starting to load {} cache.\", cacheName);\n+    final List\u003cChildData\u003e children;\n+    if (isTokenCache) {\n+      children \u003d tokenCache.getCurrentData();\n+    } else {\n+      children \u003d keyCache.getCurrentData();\n+    }\n+\n+    int count \u003d 0;\n+    for (ChildData child : children) {\n+      try {\n+        if (isTokenCache) {\n+          processTokenAddOrUpdate(child);\n+        } else {\n+          processKeyAddOrUpdate(child.getData());\n+        }\n+      } catch (Exception e) {\n+        LOG.info(\"Ignoring node {} because it failed to load.\",\n+            child.getPath());\n+        LOG.debug(\"Failure exception:\", e);\n+        ++count;\n+      }\n+    }\n+    if (count \u003e 0) {\n+      LOG.warn(\"Ignored {} nodes while loading {} cache.\", count, cacheName);\n+    }\n+    LOG.info(\"Loaded {} cache.\", cacheName);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadFromZKCache(final boolean isTokenCache) {\n    final String cacheName \u003d isTokenCache ? \"token\" : \"key\";\n    LOG.info(\"Starting to load {} cache.\", cacheName);\n    final List\u003cChildData\u003e children;\n    if (isTokenCache) {\n      children \u003d tokenCache.getCurrentData();\n    } else {\n      children \u003d keyCache.getCurrentData();\n    }\n\n    int count \u003d 0;\n    for (ChildData child : children) {\n      try {\n        if (isTokenCache) {\n          processTokenAddOrUpdate(child);\n        } else {\n          processKeyAddOrUpdate(child.getData());\n        }\n      } catch (Exception e) {\n        LOG.info(\"Ignoring node {} because it failed to load.\",\n            child.getPath());\n        LOG.debug(\"Failure exception:\", e);\n        ++count;\n      }\n    }\n    if (count \u003e 0) {\n      LOG.warn(\"Ignored {} nodes while loading {} cache.\", count, cacheName);\n    }\n    LOG.info(\"Loaded {} cache.\", cacheName);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java"
    }
  }
}