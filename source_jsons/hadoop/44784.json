{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAdminCLI.java",
  "functionName": "replaceLabelsOnNodes",
  "functionId": "replaceLabelsOnNodes___map-Map__NodeId,Set__String______failOnUnknownNodes-boolean__directlyAccessNodeLabelStore-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
  "functionStartLine": 686,
  "functionEndLine": 700,
  "numCommitsSeen": 124,
  "timeTaken": 3711,
  "changeHistory": [
    "aacf214a274fb5149437f287c542339966c03ea5",
    "6e130c308cf1b97e8386b6a43c26d72d2850119c",
    "82567664988b673f1b819a42a4baf31cb0dcb331"
  ],
  "changeHistoryShort": {
    "aacf214a274fb5149437f287c542339966c03ea5": "Yparameterchange",
    "6e130c308cf1b97e8386b6a43c26d72d2850119c": "Ymultichange(Yparameterchange,Ybodychange)",
    "82567664988b673f1b819a42a4baf31cb0dcb331": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aacf214a274fb5149437f287c542339966c03ea5": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-5697. Use CliParser to parse options in RMAdminCLI. Contributed by Tao jie\n",
      "commitDate": "01/11/16 4:14 PM",
      "commitName": "aacf214a274fb5149437f287c542339966c03ea5",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "02/10/16 11:02 PM",
      "commitNameOld": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 29.72,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map,\n-      boolean failOnUnknownNodes) throws IOException, YarnException {\n+      boolean failOnUnknownNodes, boolean directlyAccessNodeLabelStore)\n+      throws IOException, YarnException {\n     if (directlyAccessNodeLabelStore) {\n       getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n     } else {\n       ResourceManagerAdministrationProtocol adminProtocol \u003d\n           createAdminProtocol();\n       ReplaceLabelsOnNodeRequest request \u003d\n           ReplaceLabelsOnNodeRequest.newInstance(map);\n       request.setFailOnUnknownNodes(failOnUnknownNodes);\n       adminProtocol.replaceLabelsOnNode(request);\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map,\n      boolean failOnUnknownNodes, boolean directlyAccessNodeLabelStore)\n      throws IOException, YarnException {\n    if (directlyAccessNodeLabelStore) {\n      getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n    } else {\n      ResourceManagerAdministrationProtocol adminProtocol \u003d\n          createAdminProtocol();\n      ReplaceLabelsOnNodeRequest request \u003d\n          ReplaceLabelsOnNodeRequest.newInstance(map);\n      request.setFailOnUnknownNodes(failOnUnknownNodes);\n      adminProtocol.replaceLabelsOnNode(request);\n    }\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {
        "oldValue": "[map-Map\u003cNodeId,Set\u003cString\u003e\u003e, failOnUnknownNodes-boolean]",
        "newValue": "[map-Map\u003cNodeId,Set\u003cString\u003e\u003e, failOnUnknownNodes-boolean, directlyAccessNodeLabelStore-boolean]"
      }
    },
    "6e130c308cf1b97e8386b6a43c26d72d2850119c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4855. Should check if node exists when replace nodelabels. Contributeed by Tao Jie\n",
      "commitDate": "02/10/16 11:02 PM",
      "commitName": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4855. Should check if node exists when replace nodelabels. Contributeed by Tao Jie\n",
          "commitDate": "02/10/16 11:02 PM",
          "commitName": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "13/09/16 2:53 AM",
          "commitNameOld": "729de3e6b6ae1fcfe1c6bec7102d758ad489df47",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 19.84,
          "commitsBetweenForRepo": 119,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map)\n-      throws IOException, YarnException {\n+  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map,\n+      boolean failOnUnknownNodes) throws IOException, YarnException {\n     if (directlyAccessNodeLabelStore) {\n       getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n     } else {\n       ResourceManagerAdministrationProtocol adminProtocol \u003d\n           createAdminProtocol();\n       ReplaceLabelsOnNodeRequest request \u003d\n           ReplaceLabelsOnNodeRequest.newInstance(map);\n+      request.setFailOnUnknownNodes(failOnUnknownNodes);\n       adminProtocol.replaceLabelsOnNode(request);\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map,\n      boolean failOnUnknownNodes) throws IOException, YarnException {\n    if (directlyAccessNodeLabelStore) {\n      getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n    } else {\n      ResourceManagerAdministrationProtocol adminProtocol \u003d\n          createAdminProtocol();\n      ReplaceLabelsOnNodeRequest request \u003d\n          ReplaceLabelsOnNodeRequest.newInstance(map);\n      request.setFailOnUnknownNodes(failOnUnknownNodes);\n      adminProtocol.replaceLabelsOnNode(request);\n    }\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {
            "oldValue": "[map-Map\u003cNodeId,Set\u003cString\u003e\u003e]",
            "newValue": "[map-Map\u003cNodeId,Set\u003cString\u003e\u003e, failOnUnknownNodes-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4855. Should check if node exists when replace nodelabels. Contributeed by Tao Jie\n",
          "commitDate": "02/10/16 11:02 PM",
          "commitName": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "13/09/16 2:53 AM",
          "commitNameOld": "729de3e6b6ae1fcfe1c6bec7102d758ad489df47",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 19.84,
          "commitsBetweenForRepo": 119,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map)\n-      throws IOException, YarnException {\n+  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map,\n+      boolean failOnUnknownNodes) throws IOException, YarnException {\n     if (directlyAccessNodeLabelStore) {\n       getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n     } else {\n       ResourceManagerAdministrationProtocol adminProtocol \u003d\n           createAdminProtocol();\n       ReplaceLabelsOnNodeRequest request \u003d\n           ReplaceLabelsOnNodeRequest.newInstance(map);\n+      request.setFailOnUnknownNodes(failOnUnknownNodes);\n       adminProtocol.replaceLabelsOnNode(request);\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map,\n      boolean failOnUnknownNodes) throws IOException, YarnException {\n    if (directlyAccessNodeLabelStore) {\n      getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n    } else {\n      ResourceManagerAdministrationProtocol adminProtocol \u003d\n          createAdminProtocol();\n      ReplaceLabelsOnNodeRequest request \u003d\n          ReplaceLabelsOnNodeRequest.newInstance(map);\n      request.setFailOnUnknownNodes(failOnUnknownNodes);\n      adminProtocol.replaceLabelsOnNode(request);\n    }\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "82567664988b673f1b819a42a4baf31cb0dcb331": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2504. Enhanced RM Admin CLI to support management of node-labels. Contribyted by Wangda Tan.\n",
      "commitDate": "18/10/14 12:07 PM",
      "commitName": "82567664988b673f1b819a42a4baf31cb0dcb331",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map)\n+      throws IOException, YarnException {\n+    if (directlyAccessNodeLabelStore) {\n+      getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n+    } else {\n+      ResourceManagerAdministrationProtocol adminProtocol \u003d\n+          createAdminProtocol();\n+      ReplaceLabelsOnNodeRequest request \u003d\n+          ReplaceLabelsOnNodeRequest.newInstance(map);\n+      adminProtocol.replaceLabelsOnNode(request);\n+    }\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int replaceLabelsOnNodes(Map\u003cNodeId, Set\u003cString\u003e\u003e map)\n      throws IOException, YarnException {\n    if (directlyAccessNodeLabelStore) {\n      getNodeLabelManagerInstance(getConf()).replaceLabelsOnNode(map);\n    } else {\n      ResourceManagerAdministrationProtocol adminProtocol \u003d\n          createAdminProtocol();\n      ReplaceLabelsOnNodeRequest request \u003d\n          ReplaceLabelsOnNodeRequest.newInstance(map);\n      adminProtocol.replaceLabelsOnNode(request);\n    }\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java"
    }
  }
}