{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalizerHeartbeatResponsePBImpl.java",
  "functionName": "addResourcesToProto",
  "functionId": "addResourcesToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java",
  "functionStartLine": 129,
  "functionEndLine": 164,
  "numCommitsSeen": 5,
  "timeTaken": 10815,
  "changeHistory": [
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-99. Modify private distributed cache to localize files such that no local directory hits unix file count limits and thus prevent job failures. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465853 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/04/13 6:33 PM",
      "commitName": "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 243.84,
      "commitsBetweenForRepo": 1250,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   private void addResourcesToProto() {\n     maybeInitBuilder();\n     builder.clearResources();\n-    if (this.resources \u003d\u003d null) \n+    if (this.resourceSpecs \u003d\u003d null) \n       return;\n-    Iterable\u003cLocalResourceProto\u003e iterable \u003d\n-        new Iterable\u003cLocalResourceProto\u003e() {\n+    Iterable\u003cResourceLocalizationSpecProto\u003e iterable \u003d\n+        new Iterable\u003cResourceLocalizationSpecProto\u003e() {\n       @Override\n-      public Iterator\u003cLocalResourceProto\u003e iterator() {\n-        return new Iterator\u003cLocalResourceProto\u003e() {\n+      public Iterator\u003cResourceLocalizationSpecProto\u003e iterator() {\n+        return new Iterator\u003cResourceLocalizationSpecProto\u003e() {\n \n-          Iterator\u003cLocalResource\u003e iter \u003d resources.iterator();\n+          Iterator\u003cResourceLocalizationSpec\u003e iter \u003d resourceSpecs.iterator();\n \n           @Override\n           public boolean hasNext() {\n             return iter.hasNext();\n           }\n \n           @Override\n-          public LocalResourceProto next() {\n-            return convertToProtoFormat(iter.next());\n+          public ResourceLocalizationSpecProto next() {\n+            ResourceLocalizationSpec resource \u003d iter.next();\n+            \n+            return ((ResourceLocalizationSpecPBImpl)resource).getProto();\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n \n           }\n         };\n \n       }\n     };\n     builder.addAllResources(iterable);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourcesToProto() {\n    maybeInitBuilder();\n    builder.clearResources();\n    if (this.resourceSpecs \u003d\u003d null) \n      return;\n    Iterable\u003cResourceLocalizationSpecProto\u003e iterable \u003d\n        new Iterable\u003cResourceLocalizationSpecProto\u003e() {\n      @Override\n      public Iterator\u003cResourceLocalizationSpecProto\u003e iterator() {\n        return new Iterator\u003cResourceLocalizationSpecProto\u003e() {\n\n          Iterator\u003cResourceLocalizationSpec\u003e iter \u003d resourceSpecs.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ResourceLocalizationSpecProto next() {\n            ResourceLocalizationSpec resource \u003d iter.next();\n            \n            return ((ResourceLocalizationSpecPBImpl)resource).getProto();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }\n    };\n    builder.addAllResources(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void addResourcesToProto() {\n    maybeInitBuilder();\n    builder.clearResources();\n    if (this.resources \u003d\u003d null) \n      return;\n    Iterable\u003cLocalResourceProto\u003e iterable \u003d\n        new Iterable\u003cLocalResourceProto\u003e() {\n      @Override\n      public Iterator\u003cLocalResourceProto\u003e iterator() {\n        return new Iterator\u003cLocalResourceProto\u003e() {\n\n          Iterator\u003cLocalResource\u003e iter \u003d resources.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public LocalResourceProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }\n    };\n    builder.addAllResources(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void addResourcesToProto() {\n    maybeInitBuilder();\n    builder.clearResources();\n    if (this.resources \u003d\u003d null) \n      return;\n    Iterable\u003cLocalResourceProto\u003e iterable \u003d\n        new Iterable\u003cLocalResourceProto\u003e() {\n      @Override\n      public Iterator\u003cLocalResourceProto\u003e iterator() {\n        return new Iterator\u003cLocalResourceProto\u003e() {\n\n          Iterator\u003cLocalResource\u003e iter \u003d resources.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public LocalResourceProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }\n    };\n    builder.addAllResources(iterable);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,34 @@\n+  private void addResourcesToProto() {\n+    maybeInitBuilder();\n+    builder.clearResources();\n+    if (this.resources \u003d\u003d null) \n+      return;\n+    Iterable\u003cLocalResourceProto\u003e iterable \u003d\n+        new Iterable\u003cLocalResourceProto\u003e() {\n+      @Override\n+      public Iterator\u003cLocalResourceProto\u003e iterator() {\n+        return new Iterator\u003cLocalResourceProto\u003e() {\n+\n+          Iterator\u003cLocalResource\u003e iter \u003d resources.iterator();\n+\n+          @Override\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public LocalResourceProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+\n+          }\n+        };\n+\n+      }\n+    };\n+    builder.addAllResources(iterable);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourcesToProto() {\n    maybeInitBuilder();\n    builder.clearResources();\n    if (this.resources \u003d\u003d null) \n      return;\n    Iterable\u003cLocalResourceProto\u003e iterable \u003d\n        new Iterable\u003cLocalResourceProto\u003e() {\n      @Override\n      public Iterator\u003cLocalResourceProto\u003e iterator() {\n        return new Iterator\u003cLocalResourceProto\u003e() {\n\n          Iterator\u003cLocalResource\u003e iter \u003d resources.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public LocalResourceProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }\n    };\n    builder.addAllResources(iterable);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/protocolrecords/impl/pb/LocalizerHeartbeatResponsePBImpl.java"
    }
  }
}