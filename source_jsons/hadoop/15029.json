{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageCorruptionDetector.java",
  "functionName": "build",
  "functionId": "build",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruptionDetector.java",
  "functionStartLine": 108,
  "functionEndLine": 123,
  "numCommitsSeen": 1,
  "timeTaken": 804,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "diff": "@@ -0,0 +1,16 @@\n+    public String build() {\n+      StringBuffer buffer \u003d new StringBuffer();\n+      buffer.append(corruption.getType());\n+      corrDetector.append(buffer, corruption.getId());\n+      corrDetector.append(buffer, String.valueOf(isSnapshot));\n+      corrDetector.append(buffer, parentPath);\n+      if (parentId \u003d\u003d -1) {\n+        corrDetector.append(buffer, MISSING);\n+      } else {\n+        corrDetector.append(buffer, parentId);\n+      }\n+      corrDetector.append(buffer, name);\n+      corrDetector.append(buffer, nodeType);\n+      corrDetector.append(buffer, corruption.getNumOfCorruptChildren());\n+      return buffer.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String build() {\n      StringBuffer buffer \u003d new StringBuffer();\n      buffer.append(corruption.getType());\n      corrDetector.append(buffer, corruption.getId());\n      corrDetector.append(buffer, String.valueOf(isSnapshot));\n      corrDetector.append(buffer, parentPath);\n      if (parentId \u003d\u003d -1) {\n        corrDetector.append(buffer, MISSING);\n      } else {\n        corrDetector.append(buffer, parentId);\n      }\n      corrDetector.append(buffer, name);\n      corrDetector.append(buffer, nodeType);\n      corrDetector.append(buffer, corruption.getNumOfCorruptChildren());\n      return buffer.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruptionDetector.java"
    }
  }
}