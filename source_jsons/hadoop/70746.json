{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SelfRenewingLease.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/SelfRenewingLease.java",
  "functionStartLine": 170,
  "functionEndLine": 210,
  "numCommitsSeen": 7,
  "timeTaken": 1018,
  "changeHistory": [
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40"
  ],
  "changeHistoryShort": {
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,41 @@\n+    public void run() {\n+      LOG.debug(\"Starting lease keep-alive thread.\");\n+      AccessCondition accessCondition \u003d\n+          AccessCondition.generateEmptyCondition();\n+      accessCondition.setLeaseID(leaseID);\n+\n+      while(!leaseFreed) {\n+        try {\n+          Thread.sleep(LEASE_RENEWAL_PERIOD);\n+        } catch (InterruptedException e) {\n+          LOG.debug(\"Keep-alive thread for lease \" + leaseID +\n+              \" interrupted.\");\n+\n+          // Restore the interrupted status\n+          Thread.currentThread().interrupt();\n+        }\n+        try {\n+          if (!leaseFreed) {\n+            blobWrapper.getBlob().renewLease(accessCondition);\n+\n+            // It\u0027ll be very rare to renew the lease (most will be short)\n+            // so log that we did it, to help with system debugging.\n+            LOG.info(\"Renewed lease \" + leaseID + \" on \"\n+                + getCloudBlob().getUri());\n+          }\n+        } catch (StorageException e) {\n+          if (!leaseFreed) {\n+\n+            // Free the lease so we don\u0027t leave this thread running forever.\n+            leaseFreed \u003d true;\n+\n+            // Normally leases should be freed and there should be no\n+            // exceptions, so log a warning.\n+            LOG.warn(\"Attempt to renew lease \" + leaseID + \" on \"\n+                + getCloudBlob().getUri()\n+                + \" failed, but lease not yet freed. Reason: \" +\n+                e.getMessage());\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      LOG.debug(\"Starting lease keep-alive thread.\");\n      AccessCondition accessCondition \u003d\n          AccessCondition.generateEmptyCondition();\n      accessCondition.setLeaseID(leaseID);\n\n      while(!leaseFreed) {\n        try {\n          Thread.sleep(LEASE_RENEWAL_PERIOD);\n        } catch (InterruptedException e) {\n          LOG.debug(\"Keep-alive thread for lease \" + leaseID +\n              \" interrupted.\");\n\n          // Restore the interrupted status\n          Thread.currentThread().interrupt();\n        }\n        try {\n          if (!leaseFreed) {\n            blobWrapper.getBlob().renewLease(accessCondition);\n\n            // It\u0027ll be very rare to renew the lease (most will be short)\n            // so log that we did it, to help with system debugging.\n            LOG.info(\"Renewed lease \" + leaseID + \" on \"\n                + getCloudBlob().getUri());\n          }\n        } catch (StorageException e) {\n          if (!leaseFreed) {\n\n            // Free the lease so we don\u0027t leave this thread running forever.\n            leaseFreed \u003d true;\n\n            // Normally leases should be freed and there should be no\n            // exceptions, so log a warning.\n            LOG.warn(\"Attempt to renew lease \" + leaseID + \" on \"\n                + getCloudBlob().getUri()\n                + \" failed, but lease not yet freed. Reason: \" +\n                e.getMessage());\n          }\n        }\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/SelfRenewingLease.java"
    }
  }
}