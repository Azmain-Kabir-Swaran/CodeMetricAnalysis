{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "writeXml",
  "functionId": "writeXml___out-OutputStream",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 3490,
  "functionEndLine": 3492,
  "numCommitsSeen": 166,
  "timeTaken": 4253,
  "changeHistory": [
    "dc119ef7da055d4f5d19367bba6454511129a89a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "889528e387680f18472b45e63f7857dbd0117eb9",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "dc119ef7da055d4f5d19367bba6454511129a89a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "889528e387680f18472b45e63f7857dbd0117eb9": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dc119ef7da055d4f5d19367bba6454511129a89a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9801. Configuration#writeXml uses platform defaulting encoding, which may mishandle multi-byte characters. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1509405 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/13 1:03 PM",
      "commitName": "dc119ef7da055d4f5d19367bba6454511129a89a",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "26/07/13 3:59 AM",
      "commitNameOld": "a690a215dba6180090214675393431a589c37f24",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 6.38,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public void writeXml(OutputStream out) throws IOException {\n-    writeXml(new OutputStreamWriter(out));\n+    writeXml(new OutputStreamWriter(out, \"UTF-8\"));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeXml(OutputStream out) throws IOException {\n    writeXml(new OutputStreamWriter(out, \"UTF-8\"));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void writeXml(OutputStream out) throws IOException {\n    writeXml(new OutputStreamWriter(out));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void writeXml(OutputStream out) throws IOException {\n    writeXml(new OutputStreamWriter(out));\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void writeXml(OutputStream out) throws IOException {\n    writeXml(new OutputStreamWriter(out));\n  }",
      "path": "common/src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "common/src/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "889528e387680f18472b45e63f7857dbd0117eb9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6408. Add a /conf servlet to dump running configuration. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@896641 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/10 11:44 AM",
      "commitName": "889528e387680f18472b45e63f7857dbd0117eb9",
      "commitAuthor": "Thomas White",
      "commitDateOld": "09/12/09 3:25 PM",
      "commitNameOld": "a473f3773342695cdb47e3ae4fe432b81e7787fd",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 27.85,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,3 @@\n   public void writeXml(OutputStream out) throws IOException {\n-    Properties properties \u003d getProps();\n-    try {\n-      Document doc \u003d\n-        DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n-      Element conf \u003d doc.createElement(\"configuration\");\n-      doc.appendChild(conf);\n-      conf.appendChild(doc.createTextNode(\"\\n\"));\n-      for (Enumeration e \u003d properties.keys(); e.hasMoreElements();) {\n-        String name \u003d (String)e.nextElement();\n-        Object object \u003d properties.get(name);\n-        String value \u003d null;\n-        if (object instanceof String) {\n-          value \u003d (String) object;\n-        }else {\n-          continue;\n-        }\n-        Element propNode \u003d doc.createElement(\"property\");\n-        conf.appendChild(propNode);\n-      \n-        Element nameNode \u003d doc.createElement(\"name\");\n-        nameNode.appendChild(doc.createTextNode(name));\n-        propNode.appendChild(nameNode);\n-      \n-        Element valueNode \u003d doc.createElement(\"value\");\n-        valueNode.appendChild(doc.createTextNode(value));\n-        propNode.appendChild(valueNode);\n-\n-        conf.appendChild(doc.createTextNode(\"\\n\"));\n-      }\n-    \n-      DOMSource source \u003d new DOMSource(doc);\n-      StreamResult result \u003d new StreamResult(out);\n-      TransformerFactory transFactory \u003d TransformerFactory.newInstance();\n-      Transformer transformer \u003d transFactory.newTransformer();\n-      transformer.transform(source, result);\n-    } catch (Exception e) {\n-      throw new RuntimeException(e);\n-    }\n+    writeXml(new OutputStreamWriter(out));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeXml(OutputStream out) throws IOException {\n    writeXml(new OutputStreamWriter(out));\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,40 @@\n+  public void writeXml(OutputStream out) throws IOException {\n+    Properties properties \u003d getProps();\n+    try {\n+      Document doc \u003d\n+        DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n+      Element conf \u003d doc.createElement(\"configuration\");\n+      doc.appendChild(conf);\n+      conf.appendChild(doc.createTextNode(\"\\n\"));\n+      for (Enumeration e \u003d properties.keys(); e.hasMoreElements();) {\n+        String name \u003d (String)e.nextElement();\n+        Object object \u003d properties.get(name);\n+        String value \u003d null;\n+        if (object instanceof String) {\n+          value \u003d (String) object;\n+        }else {\n+          continue;\n+        }\n+        Element propNode \u003d doc.createElement(\"property\");\n+        conf.appendChild(propNode);\n+      \n+        Element nameNode \u003d doc.createElement(\"name\");\n+        nameNode.appendChild(doc.createTextNode(name));\n+        propNode.appendChild(nameNode);\n+      \n+        Element valueNode \u003d doc.createElement(\"value\");\n+        valueNode.appendChild(doc.createTextNode(value));\n+        propNode.appendChild(valueNode);\n+\n+        conf.appendChild(doc.createTextNode(\"\\n\"));\n+      }\n+    \n+      DOMSource source \u003d new DOMSource(doc);\n+      StreamResult result \u003d new StreamResult(out);\n+      TransformerFactory transFactory \u003d TransformerFactory.newInstance();\n+      Transformer transformer \u003d transFactory.newTransformer();\n+      transformer.transform(source, result);\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeXml(OutputStream out) throws IOException {\n    Properties properties \u003d getProps();\n    try {\n      Document doc \u003d\n        DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n      Element conf \u003d doc.createElement(\"configuration\");\n      doc.appendChild(conf);\n      conf.appendChild(doc.createTextNode(\"\\n\"));\n      for (Enumeration e \u003d properties.keys(); e.hasMoreElements();) {\n        String name \u003d (String)e.nextElement();\n        Object object \u003d properties.get(name);\n        String value \u003d null;\n        if (object instanceof String) {\n          value \u003d (String) object;\n        }else {\n          continue;\n        }\n        Element propNode \u003d doc.createElement(\"property\");\n        conf.appendChild(propNode);\n      \n        Element nameNode \u003d doc.createElement(\"name\");\n        nameNode.appendChild(doc.createTextNode(name));\n        propNode.appendChild(nameNode);\n      \n        Element valueNode \u003d doc.createElement(\"value\");\n        valueNode.appendChild(doc.createTextNode(value));\n        propNode.appendChild(valueNode);\n\n        conf.appendChild(doc.createTextNode(\"\\n\"));\n      }\n    \n      DOMSource source \u003d new DOMSource(doc);\n      StreamResult result \u003d new StreamResult(out);\n      TransformerFactory transFactory \u003d TransformerFactory.newInstance();\n      Transformer transformer \u003d transFactory.newTransformer();\n      transformer.transform(source, result);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}