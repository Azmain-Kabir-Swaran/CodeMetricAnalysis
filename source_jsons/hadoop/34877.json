{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptor.java",
  "functionName": "mergeAllocateResponse",
  "functionId": "mergeAllocateResponse___homeResponse-AllocateResponse__otherResponse-AllocateResponse__otherRMAddress-SubClusterId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
  "functionStartLine": 1407,
  "functionEndLine": 1513,
  "numCommitsSeen": 21,
  "timeTaken": 4502,
  "changeHistory": [
    "570eee30e5ab5cf37b1a758934987cbf61140f6a",
    "f09c31a97e1646a1089e87d859040ebfe0c047f5",
    "5e7caf128719aac7d16d0efc8334b3b5a4b01e89",
    "657aa433e2098f28337175b6f81721739b3184b3",
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
    "3090922805699b8374a359e92323884a4177dc4e",
    "ca669f9f8bc7abe5b7d4648c589aa1756bd336d1",
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e"
  ],
  "changeHistoryShort": {
    "570eee30e5ab5cf37b1a758934987cbf61140f6a": "Ybodychange",
    "f09c31a97e1646a1089e87d859040ebfe0c047f5": "Ybodychange",
    "5e7caf128719aac7d16d0efc8334b3b5a4b01e89": "Ybodychange",
    "657aa433e2098f28337175b6f81721739b3184b3": "Ymultichange(Ymodifierchange,Ybodychange)",
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa": "Ybodychange",
    "3090922805699b8374a359e92323884a4177dc4e": "Ybodychange",
    "ca669f9f8bc7abe5b7d4648c589aa1756bd336d1": "Ybodychange",
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "570eee30e5ab5cf37b1a758934987cbf61140f6a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9655. AllocateResponse in FederationInterceptor lost applicationPriority. Contributed by hunshenshi.\n",
      "commitDate": "01/07/19 6:55 PM",
      "commitName": "570eee30e5ab5cf37b1a758934987cbf61140f6a",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "28/06/19 9:29 AM",
      "commitNameOld": "f09c31a97e1646a1089e87d859040ebfe0c047f5",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 3.39,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,102 +1,107 @@\n   protected void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (otherResponse.getAMRMToken() !\u003d null) {\n       // Propagate only the new amrmToken from home sub-cluster back to\n       // AMRMProxyService\n       if (otherRMAddress.equals(this.homeSubClusterId)) {\n         homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n       } else {\n         throw new YarnRuntimeException(\n             \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n+    if (otherResponse.getApplicationPriority() !\u003d null) {\n+      homeResponse.setApplicationPriority(\n+          otherResponse.getApplicationPriority());\n+    }\n+\n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n         par1.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    if (otherResponse.getApplicationPriority() !\u003d null) {\n      homeResponse.setApplicationPriority(\n          otherResponse.getApplicationPriority());\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par1.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "f09c31a97e1646a1089e87d859040ebfe0c047f5": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9655. AllocateResponse in FederationInterceptor lost applicationPriority. (hunshenshi via wwei) closes apache/hadoop#1023\"\n\nThis reverts commit 5e7caf128719aac7d16d0efc8334b3b5a4b01e89.\n",
      "commitDate": "28/06/19 9:29 AM",
      "commitName": "f09c31a97e1646a1089e87d859040ebfe0c047f5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "28/06/19 9:08 AM",
      "commitNameOld": "5e7caf128719aac7d16d0efc8334b3b5a4b01e89",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,107 +1,102 @@\n   protected void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (otherResponse.getAMRMToken() !\u003d null) {\n       // Propagate only the new amrmToken from home sub-cluster back to\n       // AMRMProxyService\n       if (otherRMAddress.equals(this.homeSubClusterId)) {\n         homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n       } else {\n         throw new YarnRuntimeException(\n             \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n-    if (otherResponse.getApplicationPriority() !\u003d null) {\n-      homeResponse.setApplicationPriority(\n-          otherResponse.getApplicationPriority());\n-    }\n-\n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n         par1.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par1.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "5e7caf128719aac7d16d0efc8334b3b5a4b01e89": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9655. AllocateResponse in FederationInterceptor lost applicationPriority. (hunshenshi via wwei) closes apache/hadoop#1023\n",
      "commitDate": "28/06/19 9:08 AM",
      "commitName": "5e7caf128719aac7d16d0efc8334b3b5a4b01e89",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 104.7,
      "commitsBetweenForRepo": 739,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,102 +1,107 @@\n   protected void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (otherResponse.getAMRMToken() !\u003d null) {\n       // Propagate only the new amrmToken from home sub-cluster back to\n       // AMRMProxyService\n       if (otherRMAddress.equals(this.homeSubClusterId)) {\n         homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n       } else {\n         throw new YarnRuntimeException(\n             \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n+    if (otherResponse.getApplicationPriority() !\u003d null) {\n+      homeResponse.setApplicationPriority(\n+          otherResponse.getApplicationPriority());\n+    }\n+\n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n         par1.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    if (otherResponse.getApplicationPriority() !\u003d null) {\n      homeResponse.setApplicationPriority(\n          otherResponse.getApplicationPriority());\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par1.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "657aa433e2098f28337175b6f81721739b3184b3": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN 9108. Fix FederationIntercepter merge home and secondary allocate response typo. Contributed by Abhishek Modi.\n",
      "commitDate": "22/12/18 12:41 PM",
      "commitName": "657aa433e2098f28337175b6f81721739b3184b3",
      "commitAuthor": "Botong Huang",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN 9108. Fix FederationIntercepter merge home and secondary allocate response typo. Contributed by Abhishek Modi.\n",
          "commitDate": "22/12/18 12:41 PM",
          "commitName": "657aa433e2098f28337175b6f81721739b3184b3",
          "commitAuthor": "Botong Huang",
          "commitDateOld": "11/11/18 11:12 AM",
          "commitNameOld": "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
          "commitAuthorOld": "Botong Huang",
          "daysBetweenCommits": 41.06,
          "commitsBetweenForRepo": 270,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,102 +1,102 @@\n-  private void mergeAllocateResponse(AllocateResponse homeResponse,\n+  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (otherResponse.getAMRMToken() !\u003d null) {\n       // Propagate only the new amrmToken from home sub-cluster back to\n       // AMRMProxyService\n       if (otherRMAddress.equals(this.homeSubClusterId)) {\n         homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n       } else {\n         throw new YarnRuntimeException(\n             \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n-        par2.getContainers().addAll(par2.getContainers());\n+        par1.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par1.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN 9108. Fix FederationIntercepter merge home and secondary allocate response typo. Contributed by Abhishek Modi.\n",
          "commitDate": "22/12/18 12:41 PM",
          "commitName": "657aa433e2098f28337175b6f81721739b3184b3",
          "commitAuthor": "Botong Huang",
          "commitDateOld": "11/11/18 11:12 AM",
          "commitNameOld": "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
          "commitAuthorOld": "Botong Huang",
          "daysBetweenCommits": 41.06,
          "commitsBetweenForRepo": 270,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,102 +1,102 @@\n-  private void mergeAllocateResponse(AllocateResponse homeResponse,\n+  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (otherResponse.getAMRMToken() !\u003d null) {\n       // Propagate only the new amrmToken from home sub-cluster back to\n       // AMRMProxyService\n       if (otherRMAddress.equals(this.homeSubClusterId)) {\n         homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n       } else {\n         throw new YarnRuntimeException(\n             \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n-        par2.getContainers().addAll(par2.getContainers());\n+        par1.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par1.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
          "extendedDetails": {}
        }
      ]
    },
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8933. [AMRMProxy] Fix potential empty fields in allocation response, move SubClusterTimeout to FederationInterceptor. Contributed by Botong Huang.\n",
      "commitDate": "11/11/18 11:12 AM",
      "commitName": "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
      "commitAuthor": "Botong Huang",
      "commitDateOld": "02/11/18 3:30 PM",
      "commitNameOld": "989715ec5066c6ac7868e25ad9234dc64723e61e",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 8.86,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,113 +1,102 @@\n   private void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (otherResponse.getAMRMToken() !\u003d null) {\n       // Propagate only the new amrmToken from home sub-cluster back to\n       // AMRMProxyService\n       if (otherRMAddress.equals(this.homeSubClusterId)) {\n         homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n       } else {\n         throw new YarnRuntimeException(\n             \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n-    if (otherResponse.getAvailableResources() !\u003d null) {\n-      if (homeResponse.getAvailableResources() !\u003d null) {\n-        homeResponse.setAvailableResources(\n-            Resources.add(homeResponse.getAvailableResources(),\n-                otherResponse.getAvailableResources()));\n-      } else {\n-        homeResponse\n-            .setAvailableResources(otherResponse.getAvailableResources());\n-      }\n-    }\n-\n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n         par2.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par2.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "3090922805699b8374a359e92323884a4177dc4e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8696. [AMRMProxy] FederationInterceptor upgrade: home sub-cluster heartbeat async. Contributed by Botong Huang.\n",
      "commitDate": "24/09/18 11:37 AM",
      "commitName": "3090922805699b8374a359e92323884a4177dc4e",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "12/09/18 11:46 AM",
      "commitNameOld": "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 11.99,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,102 +1,113 @@\n   private void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n+    if (otherResponse.getAMRMToken() !\u003d null) {\n+      // Propagate only the new amrmToken from home sub-cluster back to\n+      // AMRMProxyService\n+      if (otherRMAddress.equals(this.homeSubClusterId)) {\n+        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n+      } else {\n+        throw new YarnRuntimeException(\n+            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n+      }\n+    }\n+\n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (otherResponse.getAvailableResources() !\u003d null) {\n       if (homeResponse.getAvailableResources() !\u003d null) {\n         homeResponse.setAvailableResources(\n             Resources.add(homeResponse.getAvailableResources(),\n                 otherResponse.getAvailableResources()));\n       } else {\n         homeResponse\n             .setAvailableResources(otherResponse.getAvailableResources());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n     homeResponse.setNumClusterNodes(\n         homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n         par2.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n       if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n         homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n       } else {\n         homeResponse.setNMTokens(otherResponse.getNMTokens());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n         homeResponse.getUpdatedContainers()\n             .addAll(otherResponse.getUpdatedContainers());\n       } else {\n         homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n       if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n         homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n       } else {\n         homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (otherResponse.getAMRMToken() !\u003d null) {\n      // Propagate only the new amrmToken from home sub-cluster back to\n      // AMRMProxyService\n      if (otherRMAddress.equals(this.homeSubClusterId)) {\n        homeResponse.setAMRMToken(otherResponse.getAMRMToken());\n      } else {\n        throw new YarnRuntimeException(\n            \"amrmToken from UAM \" + otherRMAddress + \" should be null here\");\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (otherResponse.getAvailableResources() !\u003d null) {\n      if (homeResponse.getAvailableResources() !\u003d null) {\n        homeResponse.setAvailableResources(\n            Resources.add(homeResponse.getAvailableResources(),\n                otherResponse.getAvailableResources()));\n      } else {\n        homeResponse\n            .setAvailableResources(otherResponse.getAvailableResources());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par2.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "ca669f9f8bc7abe5b7d4648c589aa1756bd336d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6962. Add support for updateContainers when allocating using FederationInterceptor. (Botong Huang via Subru).\n",
      "commitDate": "28/09/17 1:04 PM",
      "commitName": "ca669f9f8bc7abe5b7d4648c589aa1756bd336d1",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "07/08/17 4:58 PM",
      "commitNameOld": "c61f2c419830e40bb47fb2b1fe1f7d6109ed29a9",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 51.84,
      "commitsBetweenForRepo": 471,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,82 +1,102 @@\n   private void mergeAllocateResponse(AllocateResponse homeResponse,\n       AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n \n     if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n       if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n         homeResponse.getAllocatedContainers()\n             .addAll(otherResponse.getAllocatedContainers());\n       } else {\n         homeResponse\n             .setAllocatedContainers(otherResponse.getAllocatedContainers());\n       }\n     }\n \n     if (otherResponse.getAvailableResources() !\u003d null) {\n       if (homeResponse.getAvailableResources() !\u003d null) {\n         homeResponse.setAvailableResources(\n             Resources.add(homeResponse.getAvailableResources(),\n                 otherResponse.getAvailableResources()));\n       } else {\n         homeResponse\n             .setAvailableResources(otherResponse.getAvailableResources());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n       if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n         homeResponse.getCompletedContainersStatuses()\n             .addAll(otherResponse.getCompletedContainersStatuses());\n       } else {\n         homeResponse.setCompletedContainersStatuses(\n             otherResponse.getCompletedContainersStatuses());\n       }\n     }\n \n     if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n       if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n         homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n       } else {\n         homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n       }\n     }\n \n-    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n-      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n-        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n-      } else {\n-        homeResponse.setNMTokens(otherResponse.getNMTokens());\n-      }\n-    }\n+    homeResponse.setNumClusterNodes(\n+        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n \n     PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n     PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n \n     if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       homeResponse.setPreemptionMessage(otherPreempMessage);\n     }\n \n     if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n       PreemptionContract par1 \u003d homePreempMessage.getContract();\n       PreemptionContract par2 \u003d otherPreempMessage.getContract();\n \n       if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n         homePreempMessage.setContract(par2);\n       }\n \n       if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n         par1.getResourceRequest().addAll(par2.getResourceRequest());\n         par2.getContainers().addAll(par2.getContainers());\n       }\n \n       StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n       StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n \n       if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n         homePreempMessage.setStrictContract(spar2);\n       }\n \n       if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n         spar1.getContainers().addAll(spar2.getContainers());\n       }\n     }\n+\n+    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n+      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n+        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n+      } else {\n+        homeResponse.setNMTokens(otherResponse.getNMTokens());\n+      }\n+    }\n+\n+    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n+      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n+        homeResponse.getUpdatedContainers()\n+            .addAll(otherResponse.getUpdatedContainers());\n+      } else {\n+        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n+      }\n+    }\n+\n+    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n+      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n+        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n+      } else {\n+        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (otherResponse.getAvailableResources() !\u003d null) {\n      if (homeResponse.getAvailableResources() !\u003d null) {\n        homeResponse.setAvailableResources(\n            Resources.add(homeResponse.getAvailableResources(),\n                otherResponse.getAvailableResources()));\n      } else {\n        homeResponse\n            .setAvailableResources(otherResponse.getAvailableResources());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    homeResponse.setNumClusterNodes(\n        homeResponse.getNumClusterNodes() + otherResponse.getNumClusterNodes());\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par2.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedContainers())) {\n        homeResponse.getUpdatedContainers()\n            .addAll(otherResponse.getUpdatedContainers());\n      } else {\n        homeResponse.setUpdatedContainers(otherResponse.getUpdatedContainers());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdateErrors())) {\n      if (!isNullOrEmpty(homeResponse.getUpdateErrors())) {\n        homeResponse.getUpdateErrors().addAll(otherResponse.getUpdateErrors());\n      } else {\n        homeResponse.setUpdateErrors(otherResponse.getUpdateErrors());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,82 @@\n+  private void mergeAllocateResponse(AllocateResponse homeResponse,\n+      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n+\n+    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n+      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n+        homeResponse.getAllocatedContainers()\n+            .addAll(otherResponse.getAllocatedContainers());\n+      } else {\n+        homeResponse\n+            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n+      }\n+    }\n+\n+    if (otherResponse.getAvailableResources() !\u003d null) {\n+      if (homeResponse.getAvailableResources() !\u003d null) {\n+        homeResponse.setAvailableResources(\n+            Resources.add(homeResponse.getAvailableResources(),\n+                otherResponse.getAvailableResources()));\n+      } else {\n+        homeResponse\n+            .setAvailableResources(otherResponse.getAvailableResources());\n+      }\n+    }\n+\n+    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n+      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n+        homeResponse.getCompletedContainersStatuses()\n+            .addAll(otherResponse.getCompletedContainersStatuses());\n+      } else {\n+        homeResponse.setCompletedContainersStatuses(\n+            otherResponse.getCompletedContainersStatuses());\n+      }\n+    }\n+\n+    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n+      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n+        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n+      } else {\n+        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n+      }\n+    }\n+\n+    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n+      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n+        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n+      } else {\n+        homeResponse.setNMTokens(otherResponse.getNMTokens());\n+      }\n+    }\n+\n+    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n+    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n+\n+    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n+      homeResponse.setPreemptionMessage(otherPreempMessage);\n+    }\n+\n+    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n+      PreemptionContract par1 \u003d homePreempMessage.getContract();\n+      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n+\n+      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n+        homePreempMessage.setContract(par2);\n+      }\n+\n+      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n+        par1.getResourceRequest().addAll(par2.getResourceRequest());\n+        par2.getContainers().addAll(par2.getContainers());\n+      }\n+\n+      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n+      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n+\n+      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n+        homePreempMessage.setStrictContract(spar2);\n+      }\n+\n+      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n+        spar1.getContainers().addAll(spar2.getContainers());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeAllocateResponse(AllocateResponse homeResponse,\n      AllocateResponse otherResponse, SubClusterId otherRMAddress) {\n\n    if (!isNullOrEmpty(otherResponse.getAllocatedContainers())) {\n      if (!isNullOrEmpty(homeResponse.getAllocatedContainers())) {\n        homeResponse.getAllocatedContainers()\n            .addAll(otherResponse.getAllocatedContainers());\n      } else {\n        homeResponse\n            .setAllocatedContainers(otherResponse.getAllocatedContainers());\n      }\n    }\n\n    if (otherResponse.getAvailableResources() !\u003d null) {\n      if (homeResponse.getAvailableResources() !\u003d null) {\n        homeResponse.setAvailableResources(\n            Resources.add(homeResponse.getAvailableResources(),\n                otherResponse.getAvailableResources()));\n      } else {\n        homeResponse\n            .setAvailableResources(otherResponse.getAvailableResources());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getCompletedContainersStatuses())) {\n      if (!isNullOrEmpty(homeResponse.getCompletedContainersStatuses())) {\n        homeResponse.getCompletedContainersStatuses()\n            .addAll(otherResponse.getCompletedContainersStatuses());\n      } else {\n        homeResponse.setCompletedContainersStatuses(\n            otherResponse.getCompletedContainersStatuses());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getUpdatedNodes())) {\n      if (!isNullOrEmpty(homeResponse.getUpdatedNodes())) {\n        homeResponse.getUpdatedNodes().addAll(otherResponse.getUpdatedNodes());\n      } else {\n        homeResponse.setUpdatedNodes(otherResponse.getUpdatedNodes());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokens())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokens())) {\n        homeResponse.getNMTokens().addAll(otherResponse.getNMTokens());\n      } else {\n        homeResponse.setNMTokens(otherResponse.getNMTokens());\n      }\n    }\n\n    PreemptionMessage homePreempMessage \u003d homeResponse.getPreemptionMessage();\n    PreemptionMessage otherPreempMessage \u003d otherResponse.getPreemptionMessage();\n\n    if (homePreempMessage \u003d\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      homeResponse.setPreemptionMessage(otherPreempMessage);\n    }\n\n    if (homePreempMessage !\u003d null \u0026\u0026 otherPreempMessage !\u003d null) {\n      PreemptionContract par1 \u003d homePreempMessage.getContract();\n      PreemptionContract par2 \u003d otherPreempMessage.getContract();\n\n      if (par1 \u003d\u003d null \u0026\u0026 par2 !\u003d null) {\n        homePreempMessage.setContract(par2);\n      }\n\n      if (par1 !\u003d null \u0026\u0026 par2 !\u003d null) {\n        par1.getResourceRequest().addAll(par2.getResourceRequest());\n        par2.getContainers().addAll(par2.getContainers());\n      }\n\n      StrictPreemptionContract spar1 \u003d homePreempMessage.getStrictContract();\n      StrictPreemptionContract spar2 \u003d otherPreempMessage.getStrictContract();\n\n      if (spar1 \u003d\u003d null \u0026\u0026 spar2 !\u003d null) {\n        homePreempMessage.setStrictContract(spar2);\n      }\n\n      if (spar1 !\u003d null \u0026\u0026 spar2 !\u003d null) {\n        spar1.getContainers().addAll(spar2.getContainers());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java"
    }
  }
}