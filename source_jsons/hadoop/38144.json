{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PreemptionCandidatesSelector.java",
  "functionName": "compare",
  "functionId": "compare___a-RMContainer__b-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/PreemptionCandidatesSelector.java",
  "functionStartLine": 70,
  "functionEndLine": 77,
  "numCommitsSeen": 34,
  "timeTaken": 4146,
  "changeHistory": [
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "60e4116bf1d00afed91010e57357fe54057e4e39",
    "3122daa80261b466e309e88d88d1e2c030525e3f",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Ymovefromfile",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ybodychange",
    "60e4116bf1d00afed91010e57357fe54057e4e39": "Ymovefromfile",
    "3122daa80261b466e309e88d88d1e2c030525e3f": "Ybodychange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "31/10/16 2:47 PM",
      "commitNameOld": "773c60bd7bd00651dc3016799b424b9bd2233eb3",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n       public int compare(RMContainer a, RMContainer b) {\n         int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n-                .compareTo(a.getAllocatedSchedulerKey());\n+            .compareTo(a.getAllocatedSchedulerKey());\n         if (schedKeyComp !\u003d 0) {\n           return schedKeyComp;\n         }\n         return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n            .compareTo(a.getAllocatedSchedulerKey());\n        if (schedKeyComp !\u003d 0) {\n          return schedKeyComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/PreemptionCandidatesSelector.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/PreemptionCandidatesSelector.java",
        "oldMethodName": "compare",
        "newMethodName": "compare"
      }
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 82.08,
      "commitsBetweenForRepo": 671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,8 @@\n       public int compare(RMContainer a, RMContainer b) {\n-        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n-            .resourcemanager.resource.Priority.Comparator();\n-        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n-            a.getContainer().getPriority());\n-        if (priorityComp !\u003d 0) {\n-          return priorityComp;\n+        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n+                .compareTo(a.getAllocatedSchedulerKey());\n+        if (schedKeyComp !\u003d 0) {\n+          return schedKeyComp;\n         }\n         return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n                .compareTo(a.getAllocatedSchedulerKey());\n        if (schedKeyComp !\u003d 0) {\n          return schedKeyComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
      "extendedDetails": {}
    },
    "60e4116bf1d00afed91010e57357fe54057e4e39": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
      "commitDate": "30/03/16 12:43 PM",
      "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/03/16 11:22 PM",
      "commitNameOld": "09d63d5a192b5d6b172f94ff6c94da348fd49ea6",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n       public int compare(RMContainer a, RMContainer b) {\n         Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n             .resourcemanager.resource.Priority.Comparator();\n         int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n-                                     a.getContainer().getPriority());\n+            a.getContainer().getPriority());\n         if (priorityComp !\u003d 0) {\n           return priorityComp;\n         }\n         return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n            .resourcemanager.resource.Priority.Comparator();\n        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n            a.getContainer().getPriority());\n        if (priorityComp !\u003d 0) {\n          return priorityComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
        "oldMethodName": "compare",
        "newMethodName": "compare"
      }
    },
    "3122daa80261b466e309e88d88d1e2c030525e3f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2229. Changed the integer field of ContainerId to be long type. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "12/09/14 10:33 AM",
      "commitName": "3122daa80261b466e309e88d88d1e2c030525e3f",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/07/14 6:54 PM",
      "commitNameOld": "03a25d2cc1a2fb124d00edf874d67e329c65a5e6",
      "commitAuthorOld": "Mayank Bansal",
      "daysBetweenCommits": 72.65,
      "commitsBetweenForRepo": 597,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n       public int compare(RMContainer a, RMContainer b) {\n         Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n             .resourcemanager.resource.Priority.Comparator();\n         int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n                                      a.getContainer().getPriority());\n         if (priorityComp !\u003d 0) {\n           return priorityComp;\n         }\n-        return b.getContainerId().getId() -\n-               a.getContainerId().getId();\n+        return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n            .resourcemanager.resource.Priority.Comparator();\n        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n                                     a.getContainer().getPriority());\n        if (priorityComp !\u003d 0) {\n          return priorityComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,11 @@\n+      public int compare(RMContainer a, RMContainer b) {\n+        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n+            .resourcemanager.resource.Priority.Comparator();\n+        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n+                                     a.getContainer().getPriority());\n+        if (priorityComp !\u003d 0) {\n+          return priorityComp;\n+        }\n+        return b.getContainerId().getId() -\n+               a.getContainerId().getId();\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n            .resourcemanager.resource.Priority.Comparator();\n        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n                                     a.getContainer().getPriority());\n        if (priorityComp !\u003d 0) {\n          return priorityComp;\n        }\n        return b.getContainerId().getId() -\n               a.getContainerId().getId();\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java"
    }
  }
}