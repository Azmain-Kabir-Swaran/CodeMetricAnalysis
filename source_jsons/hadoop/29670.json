{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServerRMProxy.java",
  "functionName": "createRMProxy",
  "functionId": "createRMProxy___configuration-Configuration(modifiers-final)__protocol-Class__T__(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
  "functionStartLine": 54,
  "functionEndLine": 76,
  "numCommitsSeen": 14,
  "timeTaken": 2354,
  "changeHistory": [
    "9855225a790e66835c79816712f432ffa8c599b4",
    "4ac6799d4a8b071e0d367c2d709e84d8ea06942d",
    "2cddd21db9ce2e896e11225af3ae50d547884ca4",
    "ca125153b319a8f5d75585d25cb0f37ae717be01",
    "cbab04727bf24ec77f34677d0060cfa54263faf5",
    "33b5a81509ed08e88bb692682e75fb779f8e2e19"
  ],
  "changeHistoryShort": {
    "9855225a790e66835c79816712f432ffa8c599b4": "Ybodychange",
    "4ac6799d4a8b071e0d367c2d709e84d8ea06942d": "Ybodychange",
    "2cddd21db9ce2e896e11225af3ae50d547884ca4": "Ybodychange",
    "ca125153b319a8f5d75585d25cb0f37ae717be01": "Ybodychange",
    "cbab04727bf24ec77f34677d0060cfa54263faf5": "Ymultichange(Yparameterchange,Ybodychange)",
    "33b5a81509ed08e88bb692682e75fb779f8e2e19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9855225a790e66835c79816712f432ffa8c599b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6602. Impersonation does not work if standby RM is contacted first (rkanter)\n",
      "commitDate": "19/05/17 3:43 PM",
      "commitName": "9855225a790e66835c79816712f432ffa8c599b4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "31/07/16 11:48 AM",
      "commitNameOld": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 292.16,
      "commitsBetweenForRepo": 1813,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol) throws IOException {\n     long rmConnectWait \u003d\n         configuration.getLong(\n             YarnConfiguration.RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n             YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS);\n     long rmRetryInterval \u003d\n         configuration.getLong(\n             YarnConfiguration.RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n             YarnConfiguration\n                 .DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS);\n     long nmRmConnectWait \u003d\n         configuration.getLong(\n             YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n                 rmConnectWait);\n     long nmRmRetryInterval \u003d\n         configuration.getLong(\n             YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n                 rmRetryInterval);\n-    return createRMProxy(configuration, protocol, INSTANCE,\n+    ServerRMProxy\u003cT\u003e serverRMProxy \u003d new ServerRMProxy\u003c\u003e();\n+    return createRMProxy(configuration, protocol, serverRMProxy,\n         nmRmConnectWait, nmRmRetryInterval);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    long rmConnectWait \u003d\n        configuration.getLong(\n            YarnConfiguration.RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS);\n    long rmRetryInterval \u003d\n        configuration.getLong(\n            YarnConfiguration.RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n            YarnConfiguration\n                .DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS);\n    long nmRmConnectWait \u003d\n        configuration.getLong(\n            YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n                rmConnectWait);\n    long nmRmRetryInterval \u003d\n        configuration.getLong(\n            YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n                rmRetryInterval);\n    ServerRMProxy\u003cT\u003e serverRMProxy \u003d new ServerRMProxy\u003c\u003e();\n    return createRMProxy(configuration, protocol, serverRMProxy,\n        nmRmConnectWait, nmRmRetryInterval);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
      "extendedDetails": {}
    },
    "4ac6799d4a8b071e0d367c2d709e84d8ea06942d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4132. Separate configs for nodemanager to resourcemanager connection timeout and retries. Contributed by Chang Li\n",
      "commitDate": "24/11/15 2:35 PM",
      "commitName": "4ac6799d4a8b071e0d367c2d709e84d8ea06942d",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "06/01/14 10:40 AM",
      "commitNameOld": "2cddd21db9ce2e896e11225af3ae50d547884ca4",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 687.16,
      "commitsBetweenForRepo": 5630,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,22 @@\n   public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol) throws IOException {\n-    return createRMProxy(configuration, protocol, INSTANCE);\n-}\n\\ No newline at end of file\n+    long rmConnectWait \u003d\n+        configuration.getLong(\n+            YarnConfiguration.RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n+            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS);\n+    long rmRetryInterval \u003d\n+        configuration.getLong(\n+            YarnConfiguration.RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n+            YarnConfiguration\n+                .DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS);\n+    long nmRmConnectWait \u003d\n+        configuration.getLong(\n+            YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n+                rmConnectWait);\n+    long nmRmRetryInterval \u003d\n+        configuration.getLong(\n+            YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n+                rmRetryInterval);\n+    return createRMProxy(configuration, protocol, INSTANCE,\n+        nmRmConnectWait, nmRmRetryInterval);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    long rmConnectWait \u003d\n        configuration.getLong(\n            YarnConfiguration.RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS);\n    long rmRetryInterval \u003d\n        configuration.getLong(\n            YarnConfiguration.RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n            YarnConfiguration\n                .DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS);\n    long nmRmConnectWait \u003d\n        configuration.getLong(\n            YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_MAX_WAIT_MS,\n                rmConnectWait);\n    long nmRmRetryInterval \u003d\n        configuration.getLong(\n            YarnConfiguration.NM_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS,\n                rmRetryInterval);\n    return createRMProxy(configuration, protocol, INSTANCE,\n        nmRmConnectWait, nmRmRetryInterval);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
      "extendedDetails": {}
    },
    "2cddd21db9ce2e896e11225af3ae50d547884ca4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1559. Race between ServerRMProxy and ClientRMProxy setting RMProxy#INSTANCE. (kasha and vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1555970 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 10:40 AM",
      "commitName": "2cddd21db9ce2e896e11225af3ae50d547884ca4",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/12/13 2:32 PM",
      "commitNameOld": "ca125153b319a8f5d75585d25cb0f37ae717be01",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.84,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,4 @@\n   public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol) throws IOException {\n-    // This method exists only to initiate this class\u0027 static INSTANCE. TODO:\n-    // FIX if possible\n-    return RMProxy.createRMProxy(configuration, protocol);\n-  }\n\\ No newline at end of file\n+    return createRMProxy(configuration, protocol, INSTANCE);\n+}\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    return createRMProxy(configuration, protocol, INSTANCE);\n}",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
      "extendedDetails": {}
    },
    "ca125153b319a8f5d75585d25cb0f37ae717be01": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1028. Added FailoverProxyProvider capability to ResourceManager to help with RM failover. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551739 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 2:32 PM",
      "commitName": "ca125153b319a8f5d75585d25cb0f37ae717be01",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/10/13 11:40 AM",
      "commitNameOld": "cbab04727bf24ec77f34677d0060cfa54263faf5",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 74.16,
      "commitsBetweenForRepo": 479,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,6 @@\n   public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol) throws IOException {\n-    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n-        ? (YarnConfiguration) configuration\n-        : new YarnConfiguration(configuration);\n-    InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n-    return createRMProxy(conf, protocol, rmAddress);\n+    // This method exists only to initiate this class\u0027 static INSTANCE. TODO:\n+    // FIX if possible\n+    return RMProxy.createRMProxy(configuration, protocol);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    // This method exists only to initiate this class\u0027 static INSTANCE. TODO:\n    // FIX if possible\n    return RMProxy.createRMProxy(configuration, protocol);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
      "extendedDetails": {}
    },
    "cbab04727bf24ec77f34677d0060cfa54263faf5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1232. Configuration to support multiple RMs (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/10/13 11:40 AM",
      "commitName": "cbab04727bf24ec77f34677d0060cfa54263faf5",
      "commitAuthor": "Bikas Saha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1232. Configuration to support multiple RMs (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529251 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/10/13 11:40 AM",
          "commitName": "cbab04727bf24ec77f34677d0060cfa54263faf5",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "29/07/13 4:17 PM",
          "commitNameOld": "817a6543465a3228cdb28a2eeb8e4f96a2d0f9e6",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 66.81,
          "commitsBetweenForRepo": 397,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,8 @@\n-  public static \u003cT\u003e T createRMProxy(final Configuration conf,\n+  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol) throws IOException {\n+    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n+        ? (YarnConfiguration) configuration\n+        : new YarnConfiguration(configuration);\n     InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n     return createRMProxy(conf, protocol, rmAddress);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n    return createRMProxy(conf, protocol, rmAddress);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final)]",
            "newValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1232. Configuration to support multiple RMs (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529251 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/10/13 11:40 AM",
          "commitName": "cbab04727bf24ec77f34677d0060cfa54263faf5",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "29/07/13 4:17 PM",
          "commitNameOld": "817a6543465a3228cdb28a2eeb8e4f96a2d0f9e6",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 66.81,
          "commitsBetweenForRepo": 397,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,8 @@\n-  public static \u003cT\u003e T createRMProxy(final Configuration conf,\n+  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol) throws IOException {\n+    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n+        ? (YarnConfiguration) configuration\n+        : new YarnConfiguration(configuration);\n     InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n     return createRMProxy(conf, protocol, rmAddress);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n    return createRMProxy(conf, protocol, rmAddress);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "33b5a81509ed08e88bb692682e75fb779f8e2e19": {
      "type": "Yintroduced",
      "commitMessage": "YARN-513. Create common proxy client for communicating with RM (Xuan Gong \u0026 Jian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 3:47 PM",
      "commitName": "33b5a81509ed08e88bb692682e75fb779f8e2e19",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,5 @@\n+  public static \u003cT\u003e T createRMProxy(final Configuration conf,\n+      final Class\u003cT\u003e protocol) throws IOException {\n+    InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n+    return createRMProxy(conf, protocol, rmAddress);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration conf,\n      final Class\u003cT\u003e protocol) throws IOException {\n    InetSocketAddress rmAddress \u003d getRMAddress(conf, protocol);\n    return createRMProxy(conf, protocol, rmAddress);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/ServerRMProxy.java"
    }
  }
}