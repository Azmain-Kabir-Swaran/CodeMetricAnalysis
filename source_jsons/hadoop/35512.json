{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CgroupsLCEResourcesHandler.java",
  "functionName": "updateCgroup",
  "functionId": "updateCgroup___controller-String__groupName-String__param-String__value-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
  "functionStartLine": 213,
  "functionEndLine": 242,
  "numCommitsSeen": 22,
  "timeTaken": 1536,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "41a548a916d4248164cb9495320f123ec215d70e",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "41a548a916d4248164cb9495320f123ec215d70e": "Ybodychange",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "22/08/17 1:14 AM",
      "commitNameOld": "d5ff57a08fac983f8b5d201064ce07945f0f216e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 570.63,
      "commitsBetweenForRepo": 4960,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,30 @@\n   private void updateCgroup(String controller, String groupName, String param,\n                             String value) throws IOException {\n     String path \u003d pathForCgroup(controller, groupName);\n     param \u003d controller + \".\" + param;\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"updateCgroup: \" + path + \": \" + param + \"\u003d\" + value);\n-    }\n+    LOG.debug(\"updateCgroup: {}: {}\u003d{}\", path, param, value);\n \n     PrintWriter pw \u003d null;\n     try {\n       File file \u003d new File(path + \"/\" + param);\n       Writer w \u003d new OutputStreamWriter(new FileOutputStream(file), \"UTF-8\");\n       pw \u003d new PrintWriter(w);\n       pw.write(value);\n     } catch (IOException e) {\n       throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n           \" for cgroup at: \" + path, e);\n     } finally {\n       if (pw !\u003d null) {\n         boolean hasError \u003d pw.checkError();\n         pw.close();\n         if(hasError) {\n           throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n                 \" for cgroup at: \" + path);\n         }\n         if(pw.checkError()) {\n           throw new IOException(\"Error while closing cgroup file \" + path);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCgroup(String controller, String groupName, String param,\n                            String value) throws IOException {\n    String path \u003d pathForCgroup(controller, groupName);\n    param \u003d controller + \".\" + param;\n\n    LOG.debug(\"updateCgroup: {}: {}\u003d{}\", path, param, value);\n\n    PrintWriter pw \u003d null;\n    try {\n      File file \u003d new File(path + \"/\" + param);\n      Writer w \u003d new OutputStreamWriter(new FileOutputStream(file), \"UTF-8\");\n      pw \u003d new PrintWriter(w);\n      pw.write(value);\n    } catch (IOException e) {\n      throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n          \" for cgroup at: \" + path, e);\n    } finally {\n      if (pw !\u003d null) {\n        boolean hasError \u003d pw.checkError();\n        pw.close();\n        if(hasError) {\n          throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n                \" for cgroup at: \" + path);\n        }\n        if(pw.checkError()) {\n          throw new IOException(\"Error while closing cgroup file \" + path);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "41a548a916d4248164cb9495320f123ec215d70e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2937. Fixed new findbugs warnings in hadoop-yarn-nodemanager. Contributed by Varun Saxena.\n",
      "commitDate": "23/12/14 8:32 PM",
      "commitName": "41a548a916d4248164cb9495320f123ec215d70e",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "16/09/14 10:14 AM",
      "commitNameOld": "9f6891d9ef7064d121305ca783eb62586c8aa018",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 98.47,
      "commitsBetweenForRepo": 893,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n   private void updateCgroup(String controller, String groupName, String param,\n                             String value) throws IOException {\n-    FileWriter f \u003d null;\n     String path \u003d pathForCgroup(controller, groupName);\n     param \u003d controller + \".\" + param;\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"updateCgroup: \" + path + \": \" + param + \"\u003d\" + value);\n     }\n \n+    PrintWriter pw \u003d null;\n     try {\n-      f \u003d new FileWriter(path + \"/\" + param, false);\n-      f.write(value);\n+      File file \u003d new File(path + \"/\" + param);\n+      Writer w \u003d new OutputStreamWriter(new FileOutputStream(file), \"UTF-8\");\n+      pw \u003d new PrintWriter(w);\n+      pw.write(value);\n     } catch (IOException e) {\n       throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n           \" for cgroup at: \" + path, e);\n     } finally {\n-      if (f !\u003d null) {\n-        try {\n-          f.close();\n-        } catch (IOException e) {\n-          LOG.warn(\"Unable to close cgroup file: \" +\n-              path, e);\n+      if (pw !\u003d null) {\n+        boolean hasError \u003d pw.checkError();\n+        pw.close();\n+        if(hasError) {\n+          throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n+                \" for cgroup at: \" + path);\n+        }\n+        if(pw.checkError()) {\n+          throw new IOException(\"Error while closing cgroup file \" + path);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCgroup(String controller, String groupName, String param,\n                            String value) throws IOException {\n    String path \u003d pathForCgroup(controller, groupName);\n    param \u003d controller + \".\" + param;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"updateCgroup: \" + path + \": \" + param + \"\u003d\" + value);\n    }\n\n    PrintWriter pw \u003d null;\n    try {\n      File file \u003d new File(path + \"/\" + param);\n      Writer w \u003d new OutputStreamWriter(new FileOutputStream(file), \"UTF-8\");\n      pw \u003d new PrintWriter(w);\n      pw.write(value);\n    } catch (IOException e) {\n      throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n          \" for cgroup at: \" + path, e);\n    } finally {\n      if (pw !\u003d null) {\n        boolean hasError \u003d pw.checkError();\n        pw.close();\n        if(hasError) {\n          throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n                \" for cgroup at: \" + path);\n        }\n        if(pw.checkError()) {\n          throw new IOException(\"Error while closing cgroup file \" + path);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 2:58 PM",
      "commitName": "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,27 @@\n+  private void updateCgroup(String controller, String groupName, String param,\n+                            String value) throws IOException {\n+    FileWriter f \u003d null;\n+    String path \u003d pathForCgroup(controller, groupName);\n+    param \u003d controller + \".\" + param;\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"updateCgroup: \" + path + \": \" + param + \"\u003d\" + value);\n+    }\n+\n+    try {\n+      f \u003d new FileWriter(path + \"/\" + param, false);\n+      f.write(value);\n+    } catch (IOException e) {\n+      throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n+          \" for cgroup at: \" + path, e);\n+    } finally {\n+      if (f !\u003d null) {\n+        try {\n+          f.close();\n+        } catch (IOException e) {\n+          LOG.warn(\"Unable to close cgroup file: \" +\n+              path, e);\n+        }\n+      }\n+    }\n+  }\t\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCgroup(String controller, String groupName, String param,\n                            String value) throws IOException {\n    FileWriter f \u003d null;\n    String path \u003d pathForCgroup(controller, groupName);\n    param \u003d controller + \".\" + param;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"updateCgroup: \" + path + \": \" + param + \"\u003d\" + value);\n    }\n\n    try {\n      f \u003d new FileWriter(path + \"/\" + param, false);\n      f.write(value);\n    } catch (IOException e) {\n      throw new IOException(\"Unable to set \" + param + \"\u003d\" + value +\n          \" for cgroup at: \" + path, e);\n    } finally {\n      if (f !\u003d null) {\n        try {\n          f.close();\n        } catch (IOException e) {\n          LOG.warn(\"Unable to close cgroup file: \" +\n              path, e);\n        }\n      }\n    }\n  }\t",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java"
    }
  }
}