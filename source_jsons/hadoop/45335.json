{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AutoRefreshRMFailoverProxyProvider.java",
  "functionName": "performFailover",
  "functionId": "performFailover___currentProxy-T",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/AutoRefreshRMFailoverProxyProvider.java",
  "functionStartLine": 46,
  "functionEndLine": 63,
  "numCommitsSeen": 1,
  "timeTaken": 445,
  "changeHistory": [
    "50f7f6dfd10031df142cb9105bddf2d0cd74f017"
  ],
  "changeHistoryShort": {
    "50f7f6dfd10031df142cb9105bddf2d0cd74f017": "Yintroduced"
  },
  "changeHistoryDetails": {
    "50f7f6dfd10031df142cb9105bddf2d0cd74f017": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10210. Add a RMFailoverProxyProvider that does DNS resolution on failover.\n\n",
      "commitDate": "26/03/20 8:14 AM",
      "commitName": "50f7f6dfd10031df142cb9105bddf2d0cd74f017",
      "commitAuthor": "RogPodge",
      "diff": "@@ -0,0 +1,18 @@\n+  public synchronized void performFailover(T currentProxy) {\n+    RPC.stopProxy(currentProxy);\n+\n+    //clears out all keys that map to currentProxy\n+    Set\u003cString\u003e rmIds \u003d new HashSet\u003c\u003e();\n+    for (Entry\u003cString, T\u003e entry : proxies.entrySet()) {\n+      T proxy \u003d entry.getValue();\n+      if (proxy.equals(currentProxy)) {\n+        String rmId \u003d entry.getKey();\n+        rmIds.add(rmId);\n+      }\n+    }\n+    for (String rmId : rmIds) {\n+      proxies.remove(rmId);\n+    }\n+\n+    super.performFailover(currentProxy);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void performFailover(T currentProxy) {\n    RPC.stopProxy(currentProxy);\n\n    //clears out all keys that map to currentProxy\n    Set\u003cString\u003e rmIds \u003d new HashSet\u003c\u003e();\n    for (Entry\u003cString, T\u003e entry : proxies.entrySet()) {\n      T proxy \u003d entry.getValue();\n      if (proxy.equals(currentProxy)) {\n        String rmId \u003d entry.getKey();\n        rmIds.add(rmId);\n      }\n    }\n    for (String rmId : rmIds) {\n      proxies.remove(rmId);\n    }\n\n    super.performFailover(currentProxy);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/AutoRefreshRMFailoverProxyProvider.java"
    }
  }
}