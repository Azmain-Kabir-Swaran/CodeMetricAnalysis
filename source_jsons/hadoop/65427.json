{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3Guard.java",
  "functionName": "logS3GuardDisabled",
  "functionId": "logS3GuardDisabled___logger-Logger__warnLevelStr-String__bucket-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
  "functionStartLine": 1078,
  "functionEndLine": 1105,
  "numCommitsSeen": 25,
  "timeTaken": 2143,
  "changeHistory": [
    "93b662db47aa4e9bd0e2cecabddf949c0fea19f2",
    "dca19fc3aa509949daf29bc902b2f74760407fc4"
  ],
  "changeHistoryShort": {
    "93b662db47aa4e9bd0e2cecabddf949c0fea19f2": "Ymultichange(Yexceptionschange,Ybodychange)",
    "dca19fc3aa509949daf29bc902b2f74760407fc4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "93b662db47aa4e9bd0e2cecabddf949c0fea19f2": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-16953. tuning s3guard disabled warnings (#1962)\n\n\r\nContributed by Steve Loughran.\r\n\r\nThe S3Guard absence warning of HADOOP-16484 has been changed\r\nso that by default the S3A connector only logs at debug\r\nwhen the connection to the S3 Store does not have S3Guard\r\nenabled.\r\n\r\nThe option to control this log level is now\r\nfs.s3a.s3guard.disabled.warn.level\r\nand can be one of: silent, inform, warn, fail.\r\n\r\nOn a failure, an ExitException is raised with exit code 49.\r\n\r\nFor details on this safety feature, consult the s3guard documentation.\r\n",
      "commitDate": "20/04/20 7:05 AM",
      "commitName": "93b662db47aa4e9bd0e2cecabddf949c0fea19f2",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-16953. tuning s3guard disabled warnings (#1962)\n\n\r\nContributed by Steve Loughran.\r\n\r\nThe S3Guard absence warning of HADOOP-16484 has been changed\r\nso that by default the S3A connector only logs at debug\r\nwhen the connection to the S3 Store does not have S3Guard\r\nenabled.\r\n\r\nThe option to control this log level is now\r\nfs.s3a.s3guard.disabled.warn.level\r\nand can be one of: silent, inform, warn, fail.\r\n\r\nOn a failure, an ExitException is raised with exit code 49.\r\n\r\nFor details on this safety feature, consult the s3guard documentation.\r\n",
          "commitDate": "20/04/20 7:05 AM",
          "commitName": "93b662db47aa4e9bd0e2cecabddf949c0fea19f2",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "26/03/20 11:59 AM",
          "commitNameOld": "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 24.8,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,28 @@\n   public static void logS3GuardDisabled(Logger logger, String warnLevelStr,\n       String bucket)\n-      throws UnsupportedOperationException, IllegalArgumentException {\n+      throws ExitUtil.ExitException, IllegalArgumentException {\n     final DisabledWarnLevel warnLevel;\n     try {\n       warnLevel \u003d DisabledWarnLevel.valueOf(warnLevelStr.toUpperCase(Locale.US));\n     } catch (IllegalArgumentException e) {\n       throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr, e);\n     }\n \n+    String text \u003d String.format(DISABLED_LOG_MSG, bucket);\n     switch (warnLevel) {\n     case SILENT:\n-      logger.debug(DISABLED_LOG_MSG, bucket);\n+      logger.debug(text);\n       break;\n     case INFORM:\n-      logger.info(DISABLED_LOG_MSG, bucket);\n+      logger.info(text);\n       break;\n     case WARN:\n-      logger.warn(DISABLED_LOG_MSG, bucket);\n+      logger.warn(text);\n       break;\n     case FAIL:\n-      logger.error(DISABLED_LOG_MSG, bucket);\n-      throw new UnsupportedOperationException(DISABLED_LOG_MSG + bucket);\n+      logger.error(text);\n+      throw new ExitUtil.ExitException(EXIT_BAD_CONFIGURATION, text);\n     default:\n       throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void logS3GuardDisabled(Logger logger, String warnLevelStr,\n      String bucket)\n      throws ExitUtil.ExitException, IllegalArgumentException {\n    final DisabledWarnLevel warnLevel;\n    try {\n      warnLevel \u003d DisabledWarnLevel.valueOf(warnLevelStr.toUpperCase(Locale.US));\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr, e);\n    }\n\n    String text \u003d String.format(DISABLED_LOG_MSG, bucket);\n    switch (warnLevel) {\n    case SILENT:\n      logger.debug(text);\n      break;\n    case INFORM:\n      logger.info(text);\n      break;\n    case WARN:\n      logger.warn(text);\n      break;\n    case FAIL:\n      logger.error(text);\n      throw new ExitUtil.ExitException(EXIT_BAD_CONFIGURATION, text);\n    default:\n      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr);\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "[UnsupportedOperationException, IllegalArgumentException]",
            "newValue": "[ExitUtil.ExitException, IllegalArgumentException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16953. tuning s3guard disabled warnings (#1962)\n\n\r\nContributed by Steve Loughran.\r\n\r\nThe S3Guard absence warning of HADOOP-16484 has been changed\r\nso that by default the S3A connector only logs at debug\r\nwhen the connection to the S3 Store does not have S3Guard\r\nenabled.\r\n\r\nThe option to control this log level is now\r\nfs.s3a.s3guard.disabled.warn.level\r\nand can be one of: silent, inform, warn, fail.\r\n\r\nOn a failure, an ExitException is raised with exit code 49.\r\n\r\nFor details on this safety feature, consult the s3guard documentation.\r\n",
          "commitDate": "20/04/20 7:05 AM",
          "commitName": "93b662db47aa4e9bd0e2cecabddf949c0fea19f2",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "26/03/20 11:59 AM",
          "commitNameOld": "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 24.8,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,28 @@\n   public static void logS3GuardDisabled(Logger logger, String warnLevelStr,\n       String bucket)\n-      throws UnsupportedOperationException, IllegalArgumentException {\n+      throws ExitUtil.ExitException, IllegalArgumentException {\n     final DisabledWarnLevel warnLevel;\n     try {\n       warnLevel \u003d DisabledWarnLevel.valueOf(warnLevelStr.toUpperCase(Locale.US));\n     } catch (IllegalArgumentException e) {\n       throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr, e);\n     }\n \n+    String text \u003d String.format(DISABLED_LOG_MSG, bucket);\n     switch (warnLevel) {\n     case SILENT:\n-      logger.debug(DISABLED_LOG_MSG, bucket);\n+      logger.debug(text);\n       break;\n     case INFORM:\n-      logger.info(DISABLED_LOG_MSG, bucket);\n+      logger.info(text);\n       break;\n     case WARN:\n-      logger.warn(DISABLED_LOG_MSG, bucket);\n+      logger.warn(text);\n       break;\n     case FAIL:\n-      logger.error(DISABLED_LOG_MSG, bucket);\n-      throw new UnsupportedOperationException(DISABLED_LOG_MSG + bucket);\n+      logger.error(text);\n+      throw new ExitUtil.ExitException(EXIT_BAD_CONFIGURATION, text);\n     default:\n       throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void logS3GuardDisabled(Logger logger, String warnLevelStr,\n      String bucket)\n      throws ExitUtil.ExitException, IllegalArgumentException {\n    final DisabledWarnLevel warnLevel;\n    try {\n      warnLevel \u003d DisabledWarnLevel.valueOf(warnLevelStr.toUpperCase(Locale.US));\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr, e);\n    }\n\n    String text \u003d String.format(DISABLED_LOG_MSG, bucket);\n    switch (warnLevel) {\n    case SILENT:\n      logger.debug(text);\n      break;\n    case INFORM:\n      logger.info(text);\n      break;\n    case WARN:\n      logger.warn(text);\n      break;\n    case FAIL:\n      logger.error(text);\n      throw new ExitUtil.ExitException(EXIT_BAD_CONFIGURATION, text);\n    default:\n      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr);\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {}
        }
      ]
    },
    "dca19fc3aa509949daf29bc902b2f74760407fc4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16484. S3A to warn or fail if S3Guard is disabled (#1661). Contributed by Gabor Bota.\n\n\r\n",
      "commitDate": "04/11/19 3:55 AM",
      "commitName": "dca19fc3aa509949daf29bc902b2f74760407fc4",
      "commitAuthor": "Gabor Bota",
      "diff": "@@ -0,0 +1,27 @@\n+  public static void logS3GuardDisabled(Logger logger, String warnLevelStr,\n+      String bucket)\n+      throws UnsupportedOperationException, IllegalArgumentException {\n+    final DisabledWarnLevel warnLevel;\n+    try {\n+      warnLevel \u003d DisabledWarnLevel.valueOf(warnLevelStr.toUpperCase(Locale.US));\n+    } catch (IllegalArgumentException e) {\n+      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr, e);\n+    }\n+\n+    switch (warnLevel) {\n+    case SILENT:\n+      logger.debug(DISABLED_LOG_MSG, bucket);\n+      break;\n+    case INFORM:\n+      logger.info(DISABLED_LOG_MSG, bucket);\n+      break;\n+    case WARN:\n+      logger.warn(DISABLED_LOG_MSG, bucket);\n+      break;\n+    case FAIL:\n+      logger.error(DISABLED_LOG_MSG, bucket);\n+      throw new UnsupportedOperationException(DISABLED_LOG_MSG + bucket);\n+    default:\n+      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void logS3GuardDisabled(Logger logger, String warnLevelStr,\n      String bucket)\n      throws UnsupportedOperationException, IllegalArgumentException {\n    final DisabledWarnLevel warnLevel;\n    try {\n      warnLevel \u003d DisabledWarnLevel.valueOf(warnLevelStr.toUpperCase(Locale.US));\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr, e);\n    }\n\n    switch (warnLevel) {\n    case SILENT:\n      logger.debug(DISABLED_LOG_MSG, bucket);\n      break;\n    case INFORM:\n      logger.info(DISABLED_LOG_MSG, bucket);\n      break;\n    case WARN:\n      logger.warn(DISABLED_LOG_MSG, bucket);\n      break;\n    case FAIL:\n      logger.error(DISABLED_LOG_MSG, bucket);\n      throw new UnsupportedOperationException(DISABLED_LOG_MSG + bucket);\n    default:\n      throw new IllegalArgumentException(UNKNOWN_WARN_LEVEL + warnLevelStr);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java"
    }
  }
}