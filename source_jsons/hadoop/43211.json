{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "getStatusByAppId",
  "functionId": "getStatusByAppId___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1556,
  "functionEndLine": 1571,
  "numCommitsSeen": 85,
  "timeTaken": 2702,
  "changeHistory": [
    "d553799030a5a64df328319aceb35734d0b2de20",
    "53f2768926700d2a27ce6223f1ccbfd3be49fc29",
    "d30d57828fddaa8667de49af879cde999907c7f6",
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca"
  ],
  "changeHistoryShort": {
    "d553799030a5a64df328319aceb35734d0b2de20": "Ymultichange(Yparameterchange,Ybodychange)",
    "53f2768926700d2a27ce6223f1ccbfd3be49fc29": "Ymultichange(Yrename,Ymodifierchange)",
    "d30d57828fddaa8667de49af879cde999907c7f6": "Ybodychange",
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d553799030a5a64df328319aceb35734d0b2de20": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7984. Improved YARN service stop/destroy and clean up.\n           Contributed by Billie Rinaldi\n",
      "commitDate": "10/04/18 2:40 PM",
      "commitName": "d553799030a5a64df328319aceb35734d0b2de20",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7984. Improved YARN service stop/destroy and clean up.\n           Contributed by Billie Rinaldi\n",
          "commitDate": "10/04/18 2:40 PM",
          "commitName": "d553799030a5a64df328319aceb35734d0b2de20",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "26/03/18 3:46 PM",
          "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 14.95,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  private String getStatusByAppId(String appId)\n+  private String getStatusByAppId(ApplicationId appId)\n       throws IOException, YarnException {\n     ApplicationReport appReport \u003d\n-        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n+        yarnClient.getApplicationReport(appId);\n \n     if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n       return \"\";\n     }\n     if (StringUtils.isEmpty(appReport.getHost())) {\n       return \"\";\n     }\n     ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n     GetStatusResponseProto response \u003d\n         amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n     return response.getStatus();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getStatusByAppId(ApplicationId appId)\n      throws IOException, YarnException {\n    ApplicationReport appReport \u003d\n        yarnClient.getApplicationReport(appId);\n\n    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n      return \"\";\n    }\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      return \"\";\n    }\n    ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n    GetStatusResponseProto response \u003d\n        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n    return response.getStatus();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appId-String]",
            "newValue": "[appId-ApplicationId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7984. Improved YARN service stop/destroy and clean up.\n           Contributed by Billie Rinaldi\n",
          "commitDate": "10/04/18 2:40 PM",
          "commitName": "d553799030a5a64df328319aceb35734d0b2de20",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "26/03/18 3:46 PM",
          "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 14.95,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  private String getStatusByAppId(String appId)\n+  private String getStatusByAppId(ApplicationId appId)\n       throws IOException, YarnException {\n     ApplicationReport appReport \u003d\n-        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n+        yarnClient.getApplicationReport(appId);\n \n     if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n       return \"\";\n     }\n     if (StringUtils.isEmpty(appReport.getHost())) {\n       return \"\";\n     }\n     ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n     GetStatusResponseProto response \u003d\n         amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n     return response.getStatus();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getStatusByAppId(ApplicationId appId)\n      throws IOException, YarnException {\n    ApplicationReport appReport \u003d\n        yarnClient.getApplicationReport(appId);\n\n    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n      return \"\";\n    }\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      return \"\";\n    }\n    ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n    GetStatusResponseProto response \u003d\n        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n    return response.getStatus();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "53f2768926700d2a27ce6223f1ccbfd3be49fc29": {
      "type": "Ymultichange(Yrename,Ymodifierchange)",
      "commitMessage": "YARN-7724. yarn application status should support application name. Contributed by Jian He\n",
      "commitDate": "12/01/18 3:33 PM",
      "commitName": "53f2768926700d2a27ce6223f1ccbfd3be49fc29",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7724. yarn application status should support application name. Contributed by Jian He\n",
          "commitDate": "12/01/18 3:33 PM",
          "commitName": "53f2768926700d2a27ce6223f1ccbfd3be49fc29",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "19/12/17 4:14 PM",
          "commitNameOld": "41b581012a83a17db785343362c718363e13e8f5",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 23.97,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-  public String getStatusString(String appId)\n+  private String getStatusByAppId(String appId)\n       throws IOException, YarnException {\n     ApplicationReport appReport \u003d\n         yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n \n     if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n       return \"\";\n     }\n     if (StringUtils.isEmpty(appReport.getHost())) {\n       return \"\";\n     }\n-    ClientAMProtocol amProxy \u003d\n-        createAMProxy(appReport.getName(), appReport);\n+    ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n     GetStatusResponseProto response \u003d\n         amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n     return response.getStatus();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getStatusByAppId(String appId)\n      throws IOException, YarnException {\n    ApplicationReport appReport \u003d\n        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n\n    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n      return \"\";\n    }\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      return \"\";\n    }\n    ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n    GetStatusResponseProto response \u003d\n        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n    return response.getStatus();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "getStatusString",
            "newValue": "getStatusByAppId"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7724. yarn application status should support application name. Contributed by Jian He\n",
          "commitDate": "12/01/18 3:33 PM",
          "commitName": "53f2768926700d2a27ce6223f1ccbfd3be49fc29",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "19/12/17 4:14 PM",
          "commitNameOld": "41b581012a83a17db785343362c718363e13e8f5",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 23.97,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-  public String getStatusString(String appId)\n+  private String getStatusByAppId(String appId)\n       throws IOException, YarnException {\n     ApplicationReport appReport \u003d\n         yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n \n     if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n       return \"\";\n     }\n     if (StringUtils.isEmpty(appReport.getHost())) {\n       return \"\";\n     }\n-    ClientAMProtocol amProxy \u003d\n-        createAMProxy(appReport.getName(), appReport);\n+    ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n     GetStatusResponseProto response \u003d\n         amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n     return response.getStatus();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getStatusByAppId(String appId)\n      throws IOException, YarnException {\n    ApplicationReport appReport \u003d\n        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n\n    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n      return \"\";\n    }\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      return \"\";\n    }\n    ClientAMProtocol amProxy \u003d createAMProxy(appReport.getName(), appReport);\n    GetStatusResponseProto response \u003d\n        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n    return response.getStatus();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        }
      ]
    },
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/11/17 10:53 AM",
      "commitNameOld": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 18.05,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public String getStatusString(String appId)\n       throws IOException, YarnException {\n     ApplicationReport appReport \u003d\n         yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n \n     if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n       return \"\";\n     }\n     if (StringUtils.isEmpty(appReport.getHost())) {\n       return \"\";\n     }\n     ClientAMProtocol amProxy \u003d\n-        createAMProxy(appReport.getHost(), appReport.getRpcPort());\n+        createAMProxy(appReport.getName(), appReport);\n     GetStatusResponseProto response \u003d\n         amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n     return response.getStatus();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStatusString(String appId)\n      throws IOException, YarnException {\n    ApplicationReport appReport \u003d\n        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n\n    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n      return \"\";\n    }\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      return \"\";\n    }\n    ClientAMProtocol amProxy \u003d\n        createAMProxy(appReport.getName(), appReport);\n    GetStatusResponseProto response \u003d\n        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n    return response.getStatus();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7384. Remove apiserver cmd and merge service cmd into application cmd. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,17 @@\n+  public String getStatusString(String appId)\n+      throws IOException, YarnException {\n+    ApplicationReport appReport \u003d\n+        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n+\n+    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n+      return \"\";\n+    }\n+    if (StringUtils.isEmpty(appReport.getHost())) {\n+      return \"\";\n+    }\n+    ClientAMProtocol amProxy \u003d\n+        createAMProxy(appReport.getHost(), appReport.getRpcPort());\n+    GetStatusResponseProto response \u003d\n+        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n+    return response.getStatus();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStatusString(String appId)\n      throws IOException, YarnException {\n    ApplicationReport appReport \u003d\n        yarnClient.getApplicationReport(ApplicationId.fromString(appId));\n\n    if (appReport.getYarnApplicationState() !\u003d RUNNING) {\n      return \"\";\n    }\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      return \"\";\n    }\n    ClientAMProtocol amProxy \u003d\n        createAMProxy(appReport.getHost(), appReport.getRpcPort());\n    GetStatusResponseProto response \u003d\n        amProxy.getStatus(GetStatusRequestProto.newBuilder().build());\n    return response.getStatus();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}