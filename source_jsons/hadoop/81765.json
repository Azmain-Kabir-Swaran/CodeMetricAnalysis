{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Shell.java",
  "functionName": "checkHadoopHomeInner",
  "functionId": "checkHadoopHomeInner___home-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
  "functionStartLine": 465,
  "functionEndLine": 499,
  "numCommitsSeen": 52,
  "timeTaken": 1499,
  "changeHistory": [
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec"
  ],
  "changeHistoryShort": {
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10775. Shell operations to fail with meaningful errors on windows if winutils.exe not found. (stevel)\n",
      "commitDate": "13/10/15 1:49 PM",
      "commitName": "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,35 @@\n+  static File checkHadoopHomeInner(String home) throws FileNotFoundException {\n+    // couldn\u0027t find either setting for hadoop\u0027s home directory\n+    if (home \u003d\u003d null) {\n+      throw new FileNotFoundException(E_HADOOP_PROPS_UNSET);\n+    }\n+    // strip off leading and trailing double quotes\n+    while (home.startsWith(\"\\\"\")) {\n+      home \u003d home.substring(1);\n+    }\n+    while (home.endsWith(\"\\\"\")) {\n+      home \u003d home.substring(0, home.length() - 1);\n+    }\n+\n+    // after stripping any quotes, check for home dir being non-empty\n+    if (home.isEmpty()) {\n+      throw new FileNotFoundException(E_HADOOP_PROPS_EMPTY);\n+    }\n+\n+    // check that the hadoop home dir value\n+    // is an absolute reference to a directory\n+    File homedir \u003d new File(home);\n+    if (!homedir.isAbsolute()) {\n+      throw new FileNotFoundException(\"Hadoop home directory \" + homedir\n+          + \" \" + E_IS_RELATIVE);\n+    }\n+    if (!homedir.exists()) {\n+      throw new FileNotFoundException(\"Hadoop home directory \" + homedir\n+          + \" \" + E_DOES_NOT_EXIST);\n+    }\n+    if (!homedir.isDirectory()) {\n+      throw new FileNotFoundException(\"Hadoop home directory \" + homedir\n+          + \" \"+ E_NOT_DIRECTORY);\n+    }\n+    return homedir;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static File checkHadoopHomeInner(String home) throws FileNotFoundException {\n    // couldn\u0027t find either setting for hadoop\u0027s home directory\n    if (home \u003d\u003d null) {\n      throw new FileNotFoundException(E_HADOOP_PROPS_UNSET);\n    }\n    // strip off leading and trailing double quotes\n    while (home.startsWith(\"\\\"\")) {\n      home \u003d home.substring(1);\n    }\n    while (home.endsWith(\"\\\"\")) {\n      home \u003d home.substring(0, home.length() - 1);\n    }\n\n    // after stripping any quotes, check for home dir being non-empty\n    if (home.isEmpty()) {\n      throw new FileNotFoundException(E_HADOOP_PROPS_EMPTY);\n    }\n\n    // check that the hadoop home dir value\n    // is an absolute reference to a directory\n    File homedir \u003d new File(home);\n    if (!homedir.isAbsolute()) {\n      throw new FileNotFoundException(\"Hadoop home directory \" + homedir\n          + \" \" + E_IS_RELATIVE);\n    }\n    if (!homedir.exists()) {\n      throw new FileNotFoundException(\"Hadoop home directory \" + homedir\n          + \" \" + E_DOES_NOT_EXIST);\n    }\n    if (!homedir.isDirectory()) {\n      throw new FileNotFoundException(\"Hadoop home directory \" + homedir\n          + \" \"+ E_NOT_DIRECTORY);\n    }\n    return homedir;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java"
    }
  }
}