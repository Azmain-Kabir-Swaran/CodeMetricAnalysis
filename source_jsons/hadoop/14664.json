{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonUtil.java",
  "functionName": "toJsonMap",
  "functionId": "toJsonMap___status-HdfsFileStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
  "functionStartLine": 119,
  "functionEndLine": 158,
  "numCommitsSeen": 79,
  "timeTaken": 4682,
  "changeHistory": [
    "0fc988e6a3dc6b435cbeea680549c06ef6147e3f",
    "9a082fbe6e302df7139b65a23be9a39acd87715d",
    "107c177782a24a16c66113841f2fc5144f56207b",
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
    "52b00600df921763725396ed92194d3338167655",
    "85bab5fb572194fda38854f1f21c670925058009"
  ],
  "changeHistoryShort": {
    "0fc988e6a3dc6b435cbeea680549c06ef6147e3f": "Ybodychange",
    "9a082fbe6e302df7139b65a23be9a39acd87715d": "Ybodychange",
    "107c177782a24a16c66113841f2fc5144f56207b": "Ybodychange",
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": "Ybodychange",
    "52b00600df921763725396ed92194d3338167655": "Ybodychange",
    "85bab5fb572194fda38854f1f21c670925058009": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0fc988e6a3dc6b435cbeea680549c06ef6147e3f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13512. WebHdfs getFileStatus doesn\u0027t return ecPolicy. Contributed by Ajay Kumar.\n",
      "commitDate": "16/05/18 11:28 AM",
      "commitName": "0fc988e6a3dc6b435cbeea680549c06ef6147e3f",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "15/03/18 11:02 AM",
      "commitNameOld": "78b05fde6c41f7a6b2dc2d99b435d1d83242590c",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 62.02,
      "commitsBetweenForRepo": 1045,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,40 @@\n   private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"pathSuffix\", status.getLocalName());\n     m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n     if (status.isSymlink()) {\n       m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n     }\n     m.put(\"length\", status.getLen());\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     FsPermission perm \u003d status.getPermission();\n     m.put(\"permission\", toString(perm));\n     if (status.hasAcl()) {\n       m.put(\"aclBit\", true);\n     }\n     if (status.isEncrypted()) {\n       m.put(\"encBit\", true);\n     }\n     if (status.isErasureCoded()) {\n       m.put(\"ecBit\", true);\n       if (status.getErasureCodingPolicy() !\u003d null) {\n+        // to maintain backward comparability\n         m.put(\"ecPolicy\", status.getErasureCodingPolicy().getName());\n+        // to re-construct HdfsFileStatus object via WebHdfs\n+        m.put(\"ecPolicyObj\", getEcPolicyAsMap(status.getErasureCodingPolicy()));\n       }\n     }\n     if (status.isSnapshotEnabled()) {\n       m.put(\"snapshotEnabled\", status.isSnapshotEnabled());\n     }\n \n     m.put(\"accessTime\", status.getAccessTime());\n     m.put(\"modificationTime\", status.getModificationTime());\n     m.put(\"blockSize\", status.getBlockSize());\n     m.put(\"replication\", status.getReplication());\n     m.put(\"fileId\", status.getFileId());\n     m.put(\"childrenNum\", status.getChildrenNum());\n     m.put(\"storagePolicy\", status.getStoragePolicy());\n     return m;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"pathSuffix\", status.getLocalName());\n    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n    if (status.isSymlink()) {\n      m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n    }\n    m.put(\"length\", status.getLen());\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    FsPermission perm \u003d status.getPermission();\n    m.put(\"permission\", toString(perm));\n    if (status.hasAcl()) {\n      m.put(\"aclBit\", true);\n    }\n    if (status.isEncrypted()) {\n      m.put(\"encBit\", true);\n    }\n    if (status.isErasureCoded()) {\n      m.put(\"ecBit\", true);\n      if (status.getErasureCodingPolicy() !\u003d null) {\n        // to maintain backward comparability\n        m.put(\"ecPolicy\", status.getErasureCodingPolicy().getName());\n        // to re-construct HdfsFileStatus object via WebHdfs\n        m.put(\"ecPolicyObj\", getEcPolicyAsMap(status.getErasureCodingPolicy()));\n      }\n    }\n    if (status.isSnapshotEnabled()) {\n      m.put(\"snapshotEnabled\", status.isSnapshotEnabled());\n    }\n\n    m.put(\"accessTime\", status.getAccessTime());\n    m.put(\"modificationTime\", status.getModificationTime());\n    m.put(\"blockSize\", status.getBlockSize());\n    m.put(\"replication\", status.getReplication());\n    m.put(\"fileId\", status.getFileId());\n    m.put(\"childrenNum\", status.getChildrenNum());\n    m.put(\"storagePolicy\", status.getStoragePolicy());\n    return m;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "9a082fbe6e302df7139b65a23be9a39acd87715d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11394. Support for getting erasure coding policy through WebHDFS#FileStatus.\n",
      "commitDate": "09/03/18 1:20 PM",
      "commitName": "9a082fbe6e302df7139b65a23be9a39acd87715d",
      "commitAuthor": "Hanisha Koneru",
      "commitDateOld": "23/02/18 7:35 PM",
      "commitNameOld": "1e84e46f1621fe694f806bfc41d3b2a06c9500b6",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 13.74,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,37 @@\n   private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"pathSuffix\", status.getLocalName());\n     m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n     if (status.isSymlink()) {\n       m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n     }\n     m.put(\"length\", status.getLen());\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     FsPermission perm \u003d status.getPermission();\n     m.put(\"permission\", toString(perm));\n     if (status.hasAcl()) {\n       m.put(\"aclBit\", true);\n     }\n     if (status.isEncrypted()) {\n       m.put(\"encBit\", true);\n     }\n     if (status.isErasureCoded()) {\n       m.put(\"ecBit\", true);\n+      if (status.getErasureCodingPolicy() !\u003d null) {\n+        m.put(\"ecPolicy\", status.getErasureCodingPolicy().getName());\n+      }\n     }\n     if (status.isSnapshotEnabled()) {\n       m.put(\"snapshotEnabled\", status.isSnapshotEnabled());\n     }\n \n     m.put(\"accessTime\", status.getAccessTime());\n     m.put(\"modificationTime\", status.getModificationTime());\n     m.put(\"blockSize\", status.getBlockSize());\n     m.put(\"replication\", status.getReplication());\n     m.put(\"fileId\", status.getFileId());\n     m.put(\"childrenNum\", status.getChildrenNum());\n     m.put(\"storagePolicy\", status.getStoragePolicy());\n     return m;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"pathSuffix\", status.getLocalName());\n    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n    if (status.isSymlink()) {\n      m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n    }\n    m.put(\"length\", status.getLen());\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    FsPermission perm \u003d status.getPermission();\n    m.put(\"permission\", toString(perm));\n    if (status.hasAcl()) {\n      m.put(\"aclBit\", true);\n    }\n    if (status.isEncrypted()) {\n      m.put(\"encBit\", true);\n    }\n    if (status.isErasureCoded()) {\n      m.put(\"ecBit\", true);\n      if (status.getErasureCodingPolicy() !\u003d null) {\n        m.put(\"ecPolicy\", status.getErasureCodingPolicy().getName());\n      }\n    }\n    if (status.isSnapshotEnabled()) {\n      m.put(\"snapshotEnabled\", status.isSnapshotEnabled());\n    }\n\n    m.put(\"accessTime\", status.getAccessTime());\n    m.put(\"modificationTime\", status.getModificationTime());\n    m.put(\"blockSize\", status.getBlockSize());\n    m.put(\"replication\", status.getReplication());\n    m.put(\"fileId\", status.getFileId());\n    m.put(\"childrenNum\", status.getChildrenNum());\n    m.put(\"storagePolicy\", status.getStoragePolicy());\n    return m;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "107c177782a24a16c66113841f2fc5144f56207b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12455. WebHDFS - Adding \"snapshot enabled\" status to ListStatus query result. Contributed by Ajay Kumar.\n",
      "commitDate": "03/10/17 1:02 PM",
      "commitName": "107c177782a24a16c66113841f2fc5144f56207b",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "26/09/17 1:15 PM",
      "commitNameOld": "0da29cbeea40cb7839abcd72566b997962829329",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,34 @@\n   private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"pathSuffix\", status.getLocalName());\n     m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n     if (status.isSymlink()) {\n       m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n     }\n     m.put(\"length\", status.getLen());\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     FsPermission perm \u003d status.getPermission();\n     m.put(\"permission\", toString(perm));\n     if (status.hasAcl()) {\n       m.put(\"aclBit\", true);\n     }\n     if (status.isEncrypted()) {\n       m.put(\"encBit\", true);\n     }\n     if (status.isErasureCoded()) {\n       m.put(\"ecBit\", true);\n     }\n+    if (status.isSnapshotEnabled()) {\n+      m.put(\"snapshotEnabled\", status.isSnapshotEnabled());\n+    }\n+\n     m.put(\"accessTime\", status.getAccessTime());\n     m.put(\"modificationTime\", status.getModificationTime());\n     m.put(\"blockSize\", status.getBlockSize());\n     m.put(\"replication\", status.getReplication());\n     m.put(\"fileId\", status.getFileId());\n     m.put(\"childrenNum\", status.getChildrenNum());\n     m.put(\"storagePolicy\", status.getStoragePolicy());\n     return m;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"pathSuffix\", status.getLocalName());\n    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n    if (status.isSymlink()) {\n      m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n    }\n    m.put(\"length\", status.getLen());\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    FsPermission perm \u003d status.getPermission();\n    m.put(\"permission\", toString(perm));\n    if (status.hasAcl()) {\n      m.put(\"aclBit\", true);\n    }\n    if (status.isEncrypted()) {\n      m.put(\"encBit\", true);\n    }\n    if (status.isErasureCoded()) {\n      m.put(\"ecBit\", true);\n    }\n    if (status.isSnapshotEnabled()) {\n      m.put(\"snapshotEnabled\", status.isSnapshotEnabled());\n    }\n\n    m.put(\"accessTime\", status.getAccessTime());\n    m.put(\"modificationTime\", status.getModificationTime());\n    m.put(\"blockSize\", status.getBlockSize());\n    m.put(\"replication\", status.getReplication());\n    m.put(\"fileId\", status.getFileId());\n    m.put(\"childrenNum\", status.getChildrenNum());\n    m.put(\"storagePolicy\", status.getStoragePolicy());\n    return m;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6984. Serialize FileStatus via protobuf.\n",
      "commitDate": "02/08/17 12:12 PM",
      "commitName": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "24/03/17 11:44 AM",
      "commitNameOld": "52b00600df921763725396ed92194d3338167655",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 131.02,
      "commitsBetweenForRepo": 741,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n   private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"pathSuffix\", status.getLocalName());\n     m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n     if (status.isSymlink()) {\n-      m.put(\"symlink\", status.getSymlink());\n+      m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n     }\n-\n     m.put(\"length\", status.getLen());\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     FsPermission perm \u003d status.getPermission();\n     m.put(\"permission\", toString(perm));\n-    if (perm.getAclBit()) {\n+    if (status.hasAcl()) {\n       m.put(\"aclBit\", true);\n     }\n-    if (perm.getEncryptedBit()) {\n+    if (status.isEncrypted()) {\n       m.put(\"encBit\", true);\n     }\n-    if (perm.getErasureCodedBit()) {\n+    if (status.isErasureCoded()) {\n       m.put(\"ecBit\", true);\n     }\n     m.put(\"accessTime\", status.getAccessTime());\n     m.put(\"modificationTime\", status.getModificationTime());\n     m.put(\"blockSize\", status.getBlockSize());\n     m.put(\"replication\", status.getReplication());\n     m.put(\"fileId\", status.getFileId());\n     m.put(\"childrenNum\", status.getChildrenNum());\n     m.put(\"storagePolicy\", status.getStoragePolicy());\n     return m;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"pathSuffix\", status.getLocalName());\n    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n    if (status.isSymlink()) {\n      m.put(\"symlink\", DFSUtilClient.bytes2String(status.getSymlinkInBytes()));\n    }\n    m.put(\"length\", status.getLen());\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    FsPermission perm \u003d status.getPermission();\n    m.put(\"permission\", toString(perm));\n    if (status.hasAcl()) {\n      m.put(\"aclBit\", true);\n    }\n    if (status.isEncrypted()) {\n      m.put(\"encBit\", true);\n    }\n    if (status.isErasureCoded()) {\n      m.put(\"ecBit\", true);\n    }\n    m.put(\"accessTime\", status.getAccessTime());\n    m.put(\"modificationTime\", status.getModificationTime());\n    m.put(\"blockSize\", status.getBlockSize());\n    m.put(\"replication\", status.getReplication());\n    m.put(\"fileId\", status.getFileId());\n    m.put(\"childrenNum\", status.getChildrenNum());\n    m.put(\"storagePolicy\", status.getStoragePolicy());\n    return m;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "52b00600df921763725396ed92194d3338167655": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13715. Add isErasureCoded() API to FileStatus class. Contributed by Manoj Govindassamy.\n",
      "commitDate": "24/03/17 11:44 AM",
      "commitName": "52b00600df921763725396ed92194d3338167655",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "06/03/17 4:39 PM",
      "commitNameOld": "b5adc5c3011f111f86d232cb33ec522547f68a95",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 17.75,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n   private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"pathSuffix\", status.getLocalName());\n     m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n     if (status.isSymlink()) {\n       m.put(\"symlink\", status.getSymlink());\n     }\n \n     m.put(\"length\", status.getLen());\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     FsPermission perm \u003d status.getPermission();\n     m.put(\"permission\", toString(perm));\n     if (perm.getAclBit()) {\n       m.put(\"aclBit\", true);\n     }\n     if (perm.getEncryptedBit()) {\n       m.put(\"encBit\", true);\n     }\n+    if (perm.getErasureCodedBit()) {\n+      m.put(\"ecBit\", true);\n+    }\n     m.put(\"accessTime\", status.getAccessTime());\n     m.put(\"modificationTime\", status.getModificationTime());\n     m.put(\"blockSize\", status.getBlockSize());\n     m.put(\"replication\", status.getReplication());\n     m.put(\"fileId\", status.getFileId());\n     m.put(\"childrenNum\", status.getChildrenNum());\n     m.put(\"storagePolicy\", status.getStoragePolicy());\n     return m;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"pathSuffix\", status.getLocalName());\n    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n    if (status.isSymlink()) {\n      m.put(\"symlink\", status.getSymlink());\n    }\n\n    m.put(\"length\", status.getLen());\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    FsPermission perm \u003d status.getPermission();\n    m.put(\"permission\", toString(perm));\n    if (perm.getAclBit()) {\n      m.put(\"aclBit\", true);\n    }\n    if (perm.getEncryptedBit()) {\n      m.put(\"encBit\", true);\n    }\n    if (perm.getErasureCodedBit()) {\n      m.put(\"ecBit\", true);\n    }\n    m.put(\"accessTime\", status.getAccessTime());\n    m.put(\"modificationTime\", status.getModificationTime());\n    m.put(\"blockSize\", status.getBlockSize());\n    m.put(\"replication\", status.getReplication());\n    m.put(\"fileId\", status.getFileId());\n    m.put(\"childrenNum\", status.getChildrenNum());\n    m.put(\"storagePolicy\", status.getStoragePolicy());\n    return m;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "85bab5fb572194fda38854f1f21c670925058009": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10784. Implement WebHdfsFileSystem#listStatusIterator.\n",
      "commitDate": "31/08/16 2:29 PM",
      "commitName": "85bab5fb572194fda38854f1f21c670925058009",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,28 @@\n+  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n+    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n+    m.put(\"pathSuffix\", status.getLocalName());\n+    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n+    if (status.isSymlink()) {\n+      m.put(\"symlink\", status.getSymlink());\n+    }\n+\n+    m.put(\"length\", status.getLen());\n+    m.put(\"owner\", status.getOwner());\n+    m.put(\"group\", status.getGroup());\n+    FsPermission perm \u003d status.getPermission();\n+    m.put(\"permission\", toString(perm));\n+    if (perm.getAclBit()) {\n+      m.put(\"aclBit\", true);\n+    }\n+    if (perm.getEncryptedBit()) {\n+      m.put(\"encBit\", true);\n+    }\n+    m.put(\"accessTime\", status.getAccessTime());\n+    m.put(\"modificationTime\", status.getModificationTime());\n+    m.put(\"blockSize\", status.getBlockSize());\n+    m.put(\"replication\", status.getReplication());\n+    m.put(\"fileId\", status.getFileId());\n+    m.put(\"childrenNum\", status.getChildrenNum());\n+    m.put(\"storagePolicy\", status.getStoragePolicy());\n+    return m;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Object\u003e toJsonMap(HdfsFileStatus status) {\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"pathSuffix\", status.getLocalName());\n    m.put(\"type\", WebHdfsConstants.PathType.valueOf(status));\n    if (status.isSymlink()) {\n      m.put(\"symlink\", status.getSymlink());\n    }\n\n    m.put(\"length\", status.getLen());\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    FsPermission perm \u003d status.getPermission();\n    m.put(\"permission\", toString(perm));\n    if (perm.getAclBit()) {\n      m.put(\"aclBit\", true);\n    }\n    if (perm.getEncryptedBit()) {\n      m.put(\"encBit\", true);\n    }\n    m.put(\"accessTime\", status.getAccessTime());\n    m.put(\"modificationTime\", status.getModificationTime());\n    m.put(\"blockSize\", status.getBlockSize());\n    m.put(\"replication\", status.getReplication());\n    m.put(\"fileId\", status.getFileId());\n    m.put(\"childrenNum\", status.getChildrenNum());\n    m.put(\"storagePolicy\", status.getStoragePolicy());\n    return m;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java"
    }
  }
}