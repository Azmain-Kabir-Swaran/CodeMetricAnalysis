{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RetryInvocationHandler.java",
  "functionName": "failover",
  "functionId": "failover___expectedFailoverCount-long__method-Method__callId-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
  "functionStartLine": 212,
  "functionEndLine": 224,
  "numCommitsSeen": 72,
  "timeTaken": 1718,
  "changeHistory": [
    "d328e667067743f723e332d92154da8e84e65742",
    "a9a8297cad4122961b34265c0a31d87134a4a028"
  ],
  "changeHistoryShort": {
    "d328e667067743f723e332d92154da8e84e65742": "Ymultichange(Yparameterchange,Ybodychange)",
    "a9a8297cad4122961b34265c0a31d87134a4a028": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d328e667067743f723e332d92154da8e84e65742": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
      "commitDate": "25/06/16 12:45 AM",
      "commitName": "d328e667067743f723e332d92154da8e84e65742",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
          "commitDate": "25/06/16 12:45 AM",
          "commitName": "d328e667067743f723e332d92154da8e84e65742",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "10/06/16 10:38 AM",
          "commitNameOld": "0bbb4ddd793063c87927035969884a34f60f2076",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.59,
          "commitsBetweenForRepo": 130,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-    synchronized void failover(long expectedFailoverCount, Method method) {\n+    synchronized void failover(long expectedFailoverCount, Method method,\n+                               int callId) {\n       // Make sure that concurrent failed invocations only cause a single\n       // actual failover.\n       if (failoverCount \u003d\u003d expectedFailoverCount) {\n         fpp.performFailover(proxyInfo.proxy);\n         failoverCount++;\n       } else {\n-        LOG.warn(\"A failover has occurred since the start of \"\n-            + proxyInfo.getString(method.getName()));\n+        LOG.warn(\"A failover has occurred since the start of call #\" + callId\n+            + \" \" + proxyInfo.getString(method.getName()));\n       }\n       proxyInfo \u003d fpp.getProxy();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized void failover(long expectedFailoverCount, Method method,\n                               int callId) {\n      // Make sure that concurrent failed invocations only cause a single\n      // actual failover.\n      if (failoverCount \u003d\u003d expectedFailoverCount) {\n        fpp.performFailover(proxyInfo.proxy);\n        failoverCount++;\n      } else {\n        LOG.warn(\"A failover has occurred since the start of call #\" + callId\n            + \" \" + proxyInfo.getString(method.getName()));\n      }\n      proxyInfo \u003d fpp.getProxy();\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
          "extendedDetails": {
            "oldValue": "[expectedFailoverCount-long, method-Method]",
            "newValue": "[expectedFailoverCount-long, method-Method, callId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
          "commitDate": "25/06/16 12:45 AM",
          "commitName": "d328e667067743f723e332d92154da8e84e65742",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "10/06/16 10:38 AM",
          "commitNameOld": "0bbb4ddd793063c87927035969884a34f60f2076",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.59,
          "commitsBetweenForRepo": 130,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-    synchronized void failover(long expectedFailoverCount, Method method) {\n+    synchronized void failover(long expectedFailoverCount, Method method,\n+                               int callId) {\n       // Make sure that concurrent failed invocations only cause a single\n       // actual failover.\n       if (failoverCount \u003d\u003d expectedFailoverCount) {\n         fpp.performFailover(proxyInfo.proxy);\n         failoverCount++;\n       } else {\n-        LOG.warn(\"A failover has occurred since the start of \"\n-            + proxyInfo.getString(method.getName()));\n+        LOG.warn(\"A failover has occurred since the start of call #\" + callId\n+            + \" \" + proxyInfo.getString(method.getName()));\n       }\n       proxyInfo \u003d fpp.getProxy();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized void failover(long expectedFailoverCount, Method method,\n                               int callId) {\n      // Make sure that concurrent failed invocations only cause a single\n      // actual failover.\n      if (failoverCount \u003d\u003d expectedFailoverCount) {\n        fpp.performFailover(proxyInfo.proxy);\n        failoverCount++;\n      } else {\n        LOG.warn(\"A failover has occurred since the start of call #\" + callId\n            + \" \" + proxyInfo.getString(method.getName()));\n      }\n      proxyInfo \u003d fpp.getProxy();\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "a9a8297cad4122961b34265c0a31d87134a4a028": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13146. Refactor RetryInvocationHandler. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "16/05/16 3:23 PM",
      "commitName": "a9a8297cad4122961b34265c0a31d87134a4a028",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,12 @@\n+    synchronized void failover(long expectedFailoverCount, Method method) {\n+      // Make sure that concurrent failed invocations only cause a single\n+      // actual failover.\n+      if (failoverCount \u003d\u003d expectedFailoverCount) {\n+        fpp.performFailover(proxyInfo.proxy);\n+        failoverCount++;\n+      } else {\n+        LOG.warn(\"A failover has occurred since the start of \"\n+            + proxyInfo.getString(method.getName()));\n+      }\n+      proxyInfo \u003d fpp.getProxy();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized void failover(long expectedFailoverCount, Method method) {\n      // Make sure that concurrent failed invocations only cause a single\n      // actual failover.\n      if (failoverCount \u003d\u003d expectedFailoverCount) {\n        fpp.performFailover(proxyInfo.proxy);\n        failoverCount++;\n      } else {\n        LOG.warn(\"A failover has occurred since the start of \"\n            + proxyInfo.getString(method.getName()));\n      }\n      proxyInfo \u003d fpp.getProxy();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java"
    }
  }
}