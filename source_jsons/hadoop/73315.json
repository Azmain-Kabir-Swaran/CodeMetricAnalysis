{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DecayRpcScheduler.java",
  "functionName": "addResponseTime",
  "functionId": "addResponseTime___callName-String__schedulable-Schedulable__details-ProcessingDetails",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
  "functionStartLine": 628,
  "functionEndLine": 651,
  "numCommitsSeen": 35,
  "timeTaken": 3691,
  "changeHistory": [
    "e3fbdcbc141bff6c78c24387906a277d518660ae",
    "129576f628d370def74e56112aba3a93e97bbf70",
    "f96a2df38d889f29314c57f4d94227b2e419a11f",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc"
  ],
  "changeHistoryShort": {
    "e3fbdcbc141bff6c78c24387906a277d518660ae": "Ybodychange",
    "129576f628d370def74e56112aba3a93e97bbf70": "Ybodychange",
    "f96a2df38d889f29314c57f4d94227b2e419a11f": "Ymultichange(Yparameterchange,Ybodychange)",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3fbdcbc141bff6c78c24387906a277d518660ae": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16912. Emit per priority RPC queue time and processing time from DecayRpcScheduler. Contributed by Fengnan Li.\n",
      "commitDate": "25/03/20 10:21 AM",
      "commitName": "e3fbdcbc141bff6c78c24387906a277d518660ae",
      "commitAuthor": "Chao Sun",
      "commitDateOld": "24/06/19 12:09 PM",
      "commitNameOld": "129576f628d370def74e56112aba3a93e97bbf70",
      "commitAuthorOld": "Christopher Gregorian",
      "daysBetweenCommits": 274.93,
      "commitsBetweenForRepo": 1470,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,24 @@\n   public void addResponseTime(String callName, Schedulable schedulable,\n       ProcessingDetails details) {\n     String user \u003d identityProvider.makeIdentity(schedulable);\n     long processingCost \u003d costProvider.getCost(details);\n     addCost(user, processingCost);\n \n     int priorityLevel \u003d schedulable.getPriorityLevel();\n     long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n     long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n \n+    this.decayRpcSchedulerDetailedMetrics.addQueueTime(\n+        priorityLevel, queueTime);\n+    this.decayRpcSchedulerDetailedMetrics.addProcessingTime(\n+        priorityLevel, processingTime);\n+\n     responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n     responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n         queueTime+processingTime);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n           \"processingTime: {} \", callName, priorityLevel, queueTime,\n           processingTime);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addResponseTime(String callName, Schedulable schedulable,\n      ProcessingDetails details) {\n    String user \u003d identityProvider.makeIdentity(schedulable);\n    long processingCost \u003d costProvider.getCost(details);\n    addCost(user, processingCost);\n\n    int priorityLevel \u003d schedulable.getPriorityLevel();\n    long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n    long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n\n    this.decayRpcSchedulerDetailedMetrics.addQueueTime(\n        priorityLevel, queueTime);\n    this.decayRpcSchedulerDetailedMetrics.addProcessingTime(\n        priorityLevel, processingTime);\n\n    responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n    responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n        queueTime+processingTime);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n          \"processingTime: {} \", callName, priorityLevel, queueTime,\n          processingTime);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "129576f628d370def74e56112aba3a93e97bbf70": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
      "commitDate": "24/06/19 12:09 PM",
      "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
      "commitAuthor": "Christopher Gregorian",
      "commitDateOld": "23/05/19 10:28 AM",
      "commitNameOld": "f96a2df38d889f29314c57f4d94227b2e419a11f",
      "commitAuthorOld": "Christopher Gregorian",
      "daysBetweenCommits": 32.07,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   public void addResponseTime(String callName, Schedulable schedulable,\n       ProcessingDetails details) {\n+    String user \u003d identityProvider.makeIdentity(schedulable);\n+    long processingCost \u003d costProvider.getCost(details);\n+    addCost(user, processingCost);\n+\n     int priorityLevel \u003d schedulable.getPriorityLevel();\n     long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n     long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n \n     responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n     responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n         queueTime+processingTime);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n           \"processingTime: {} \", callName, priorityLevel, queueTime,\n           processingTime);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addResponseTime(String callName, Schedulable schedulable,\n      ProcessingDetails details) {\n    String user \u003d identityProvider.makeIdentity(schedulable);\n    long processingCost \u003d costProvider.getCost(details);\n    addCost(user, processingCost);\n\n    int priorityLevel \u003d schedulable.getPriorityLevel();\n    long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n    long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n\n    responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n    responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n        queueTime+processingTime);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n          \"processingTime: {} \", callName, priorityLevel, queueTime,\n          processingTime);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "f96a2df38d889f29314c57f4d94227b2e419a11f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16266. Add more fine-grained processing time metrics to the RPC layer. Contributed by Christopher Gregorian.\n",
      "commitDate": "23/05/19 10:28 AM",
      "commitName": "f96a2df38d889f29314c57f4d94227b2e419a11f",
      "commitAuthor": "Christopher Gregorian",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16266. Add more fine-grained processing time metrics to the RPC layer. Contributed by Christopher Gregorian.\n",
          "commitDate": "23/05/19 10:28 AM",
          "commitName": "f96a2df38d889f29314c57f4d94227b2e419a11f",
          "commitAuthor": "Christopher Gregorian",
          "commitDateOld": "11/01/19 12:51 PM",
          "commitNameOld": "01cb958af44b2376bcf579cc65d90566530f733d",
          "commitAuthorOld": "Chen Liang",
          "daysBetweenCommits": 131.86,
          "commitsBetweenForRepo": 923,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  public void addResponseTime(String name, int priorityLevel, int queueTime,\n-      int processingTime) {\n+  public void addResponseTime(String callName, Schedulable schedulable,\n+      ProcessingDetails details) {\n+    int priorityLevel \u003d schedulable.getPriorityLevel();\n+    long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n+    long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n+\n     responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n     responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n         queueTime+processingTime);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n-          \"processingTime: {} \", name, priorityLevel, queueTime,\n+          \"processingTime: {} \", callName, priorityLevel, queueTime,\n           processingTime);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addResponseTime(String callName, Schedulable schedulable,\n      ProcessingDetails details) {\n    int priorityLevel \u003d schedulable.getPriorityLevel();\n    long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n    long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n\n    responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n    responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n        queueTime+processingTime);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n          \"processingTime: {} \", callName, priorityLevel, queueTime,\n          processingTime);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
          "extendedDetails": {
            "oldValue": "[name-String, priorityLevel-int, queueTime-int, processingTime-int]",
            "newValue": "[callName-String, schedulable-Schedulable, details-ProcessingDetails]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16266. Add more fine-grained processing time metrics to the RPC layer. Contributed by Christopher Gregorian.\n",
          "commitDate": "23/05/19 10:28 AM",
          "commitName": "f96a2df38d889f29314c57f4d94227b2e419a11f",
          "commitAuthor": "Christopher Gregorian",
          "commitDateOld": "11/01/19 12:51 PM",
          "commitNameOld": "01cb958af44b2376bcf579cc65d90566530f733d",
          "commitAuthorOld": "Chen Liang",
          "daysBetweenCommits": 131.86,
          "commitsBetweenForRepo": 923,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  public void addResponseTime(String name, int priorityLevel, int queueTime,\n-      int processingTime) {\n+  public void addResponseTime(String callName, Schedulable schedulable,\n+      ProcessingDetails details) {\n+    int priorityLevel \u003d schedulable.getPriorityLevel();\n+    long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n+    long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n+\n     responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n     responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n         queueTime+processingTime);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n-          \"processingTime: {} \", name, priorityLevel, queueTime,\n+          \"processingTime: {} \", callName, priorityLevel, queueTime,\n           processingTime);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addResponseTime(String callName, Schedulable schedulable,\n      ProcessingDetails details) {\n    int priorityLevel \u003d schedulable.getPriorityLevel();\n    long queueTime \u003d details.get(Timing.QUEUE, TimeUnit.MILLISECONDS);\n    long processingTime \u003d details.get(Timing.PROCESSING, TimeUnit.MILLISECONDS);\n\n    responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n    responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n        queueTime+processingTime);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n          \"processingTime: {} \", callName, priorityLevel, queueTime,\n          processingTime);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,11 @@\n+  public void addResponseTime(String name, int priorityLevel, int queueTime,\n+      int processingTime) {\n+    responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n+    responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n+        queueTime+processingTime);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n+          \"processingTime: {} \", name, priorityLevel, queueTime,\n+          processingTime);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addResponseTime(String name, int priorityLevel, int queueTime,\n      int processingTime) {\n    responseTimeCountInCurrWindow.getAndIncrement(priorityLevel);\n    responseTimeTotalInCurrWindow.getAndAdd(priorityLevel,\n        queueTime+processingTime);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResponseTime for call: {}  priority: {} queueTime: {} \" +\n          \"processingTime: {} \", name, priorityLevel, queueTime,\n          processingTime);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java"
    }
  }
}