{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebAppUtil.java",
  "functionName": "createAppSubmissionContext",
  "functionId": "createAppSubmissionContext___newApp-ApplicationSubmissionContextInfo__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
  "functionStartLine": 191,
  "functionEndLine": 229,
  "numCommitsSeen": 70,
  "timeTaken": 5694,
  "changeHistory": [
    "bcde66bed1e41b5644811fe90bfbf3d56827db36",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "620325e81696fca140195b74929ed9eda2d5eb16",
    "1adb64e09bd453f97e83d31b1587079e30b4b274",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade",
    "075ff276ca9e8c192717a50b0e18485afc8571a6"
  ],
  "changeHistoryShort": {
    "bcde66bed1e41b5644811fe90bfbf3d56827db36": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "620325e81696fca140195b74929ed9eda2d5eb16": "Ybodychange",
    "1adb64e09bd453f97e83d31b1587079e30b4b274": "Ybodychange",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": "Ybodychange",
    "075ff276ca9e8c192717a50b0e18485afc8571a6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcde66bed1e41b5644811fe90bfbf3d56827db36": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
      "commitDate": "28/07/17 3:44 PM",
      "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "28/07/17 3:44 PM",
          "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "28/07/17 2:21 PM",
          "commitNameOld": "713349a9af4654dad4d4c372454552bfd063ca5f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,39 @@\n-  protected ApplicationSubmissionContext createAppSubmissionContext(\n-      ApplicationSubmissionContextInfo newApp) throws IOException {\n+  public static ApplicationSubmissionContext createAppSubmissionContext(\n+      ApplicationSubmissionContextInfo newApp, Configuration conf)\n+      throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n         .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n             Priority.newInstance(newApp.getPriority()),\n             createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n             newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n-            createAppSubmissionContextResource(newApp),\n+            createAppSubmissionContextResource(newApp, conf),\n             newApp.getApplicationType(),\n             newApp.getKeepContainersAcrossApplicationAttempts(),\n             newApp.getAppNodeLabelExpression(),\n             newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n     appContext.setAttemptFailuresValidityInterval(\n         newApp.getAttemptFailuresValidityInterval());\n     if (newApp.getLogAggregationContextInfo() !\u003d null) {\n       appContext.setLogAggregationContext(\n           createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n     }\n     String reservationIdStr \u003d newApp.getReservationId();\n     if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n       ReservationId reservationId \u003d\n           ReservationId.parseReservationId(reservationIdStr);\n       appContext.setReservationID(reservationId);\n     }\n     return appContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp, Configuration conf)\n      throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n        .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n            Priority.newInstance(newApp.getPriority()),\n            createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n            newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n            createAppSubmissionContextResource(newApp, conf),\n            newApp.getApplicationType(),\n            newApp.getKeepContainersAcrossApplicationAttempts(),\n            newApp.getAppNodeLabelExpression(),\n            newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(\n          createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d\n          ReservationId.parseReservationId(reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    return appContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
            "oldMethodName": "createAppSubmissionContext",
            "newMethodName": "createAppSubmissionContext"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "28/07/17 3:44 PM",
          "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "28/07/17 2:21 PM",
          "commitNameOld": "713349a9af4654dad4d4c372454552bfd063ca5f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,39 @@\n-  protected ApplicationSubmissionContext createAppSubmissionContext(\n-      ApplicationSubmissionContextInfo newApp) throws IOException {\n+  public static ApplicationSubmissionContext createAppSubmissionContext(\n+      ApplicationSubmissionContextInfo newApp, Configuration conf)\n+      throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n         .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n             Priority.newInstance(newApp.getPriority()),\n             createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n             newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n-            createAppSubmissionContextResource(newApp),\n+            createAppSubmissionContextResource(newApp, conf),\n             newApp.getApplicationType(),\n             newApp.getKeepContainersAcrossApplicationAttempts(),\n             newApp.getAppNodeLabelExpression(),\n             newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n     appContext.setAttemptFailuresValidityInterval(\n         newApp.getAttemptFailuresValidityInterval());\n     if (newApp.getLogAggregationContextInfo() !\u003d null) {\n       appContext.setLogAggregationContext(\n           createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n     }\n     String reservationIdStr \u003d newApp.getReservationId();\n     if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n       ReservationId reservationId \u003d\n           ReservationId.parseReservationId(reservationIdStr);\n       appContext.setReservationID(reservationId);\n     }\n     return appContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp, Configuration conf)\n      throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n        .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n            Priority.newInstance(newApp.getPriority()),\n            createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n            newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n            createAppSubmissionContextResource(newApp, conf),\n            newApp.getApplicationType(),\n            newApp.getKeepContainersAcrossApplicationAttempts(),\n            newApp.getAppNodeLabelExpression(),\n            newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(\n          createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d\n          ReservationId.parseReservationId(reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    return appContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "28/07/17 3:44 PM",
          "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "28/07/17 2:21 PM",
          "commitNameOld": "713349a9af4654dad4d4c372454552bfd063ca5f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,39 @@\n-  protected ApplicationSubmissionContext createAppSubmissionContext(\n-      ApplicationSubmissionContextInfo newApp) throws IOException {\n+  public static ApplicationSubmissionContext createAppSubmissionContext(\n+      ApplicationSubmissionContextInfo newApp, Configuration conf)\n+      throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n         .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n             Priority.newInstance(newApp.getPriority()),\n             createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n             newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n-            createAppSubmissionContextResource(newApp),\n+            createAppSubmissionContextResource(newApp, conf),\n             newApp.getApplicationType(),\n             newApp.getKeepContainersAcrossApplicationAttempts(),\n             newApp.getAppNodeLabelExpression(),\n             newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n     appContext.setAttemptFailuresValidityInterval(\n         newApp.getAttemptFailuresValidityInterval());\n     if (newApp.getLogAggregationContextInfo() !\u003d null) {\n       appContext.setLogAggregationContext(\n           createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n     }\n     String reservationIdStr \u003d newApp.getReservationId();\n     if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n       ReservationId reservationId \u003d\n           ReservationId.parseReservationId(reservationIdStr);\n       appContext.setReservationID(reservationId);\n     }\n     return appContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp, Configuration conf)\n      throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n        .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n            Priority.newInstance(newApp.getPriority()),\n            createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n            newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n            createAppSubmissionContextResource(newApp, conf),\n            newApp.getApplicationType(),\n            newApp.getKeepContainersAcrossApplicationAttempts(),\n            newApp.getAppNodeLabelExpression(),\n            newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(\n          createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d\n          ReservationId.parseReservationId(reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    return appContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "28/07/17 3:44 PM",
          "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "28/07/17 2:21 PM",
          "commitNameOld": "713349a9af4654dad4d4c372454552bfd063ca5f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,39 @@\n-  protected ApplicationSubmissionContext createAppSubmissionContext(\n-      ApplicationSubmissionContextInfo newApp) throws IOException {\n+  public static ApplicationSubmissionContext createAppSubmissionContext(\n+      ApplicationSubmissionContextInfo newApp, Configuration conf)\n+      throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n         .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n             Priority.newInstance(newApp.getPriority()),\n             createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n             newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n-            createAppSubmissionContextResource(newApp),\n+            createAppSubmissionContextResource(newApp, conf),\n             newApp.getApplicationType(),\n             newApp.getKeepContainersAcrossApplicationAttempts(),\n             newApp.getAppNodeLabelExpression(),\n             newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n     appContext.setAttemptFailuresValidityInterval(\n         newApp.getAttemptFailuresValidityInterval());\n     if (newApp.getLogAggregationContextInfo() !\u003d null) {\n       appContext.setLogAggregationContext(\n           createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n     }\n     String reservationIdStr \u003d newApp.getReservationId();\n     if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n       ReservationId reservationId \u003d\n           ReservationId.parseReservationId(reservationIdStr);\n       appContext.setReservationID(reservationId);\n     }\n     return appContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp, Configuration conf)\n      throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d ApplicationSubmissionContext\n        .newInstance(appid, newApp.getApplicationName(), newApp.getQueue(),\n            Priority.newInstance(newApp.getPriority()),\n            createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n            newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n            createAppSubmissionContextResource(newApp, conf),\n            newApp.getApplicationType(),\n            newApp.getKeepContainersAcrossApplicationAttempts(),\n            newApp.getAppNodeLabelExpression(),\n            newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(\n          createLogAggregationContext(newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d\n          ReservationId.parseReservationId(reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    return appContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
          "extendedDetails": {
            "oldValue": "[newApp-ApplicationSubmissionContextInfo]",
            "newValue": "[newApp-ApplicationSubmissionContextInfo, conf-Configuration]"
          }
        }
      ]
    },
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/06/16 3:06 PM",
      "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 7.0,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,39 @@\n   protected ApplicationSubmissionContext createAppSubmissionContext(\n       ApplicationSubmissionContextInfo newApp) throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n-      appid \u003d\n-          ConverterUtils.toApplicationId(recordFactory,\n-            newApp.getApplicationId());\n+      appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d\n         ApplicationSubmissionContext.newInstance(appid,\n           newApp.getApplicationName(), newApp.getQueue(),\n           Priority.newInstance(newApp.getPriority()),\n           createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n           newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n           createAppSubmissionContextResource(newApp),\n           newApp.getApplicationType(),\n           newApp.getKeepContainersAcrossApplicationAttempts(),\n           newApp.getAppNodeLabelExpression(),\n           newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n     appContext.setAttemptFailuresValidityInterval(\n         newApp.getAttemptFailuresValidityInterval());\n     if (newApp.getLogAggregationContextInfo() !\u003d null) {\n       appContext.setLogAggregationContext(createLogAggregationContext(\n           newApp.getLogAggregationContextInfo()));\n     }\n     String reservationIdStr \u003d newApp.getReservationId();\n     if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n       ReservationId reservationId \u003d ReservationId.parseReservationId(\n           reservationIdStr);\n       appContext.setReservationID(reservationId);\n     }\n     return appContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp) throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d\n        ApplicationSubmissionContext.newInstance(appid,\n          newApp.getApplicationName(), newApp.getQueue(),\n          Priority.newInstance(newApp.getPriority()),\n          createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n          newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n          createAppSubmissionContextResource(newApp),\n          newApp.getApplicationType(),\n          newApp.getKeepContainersAcrossApplicationAttempts(),\n          newApp.getAppNodeLabelExpression(),\n          newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(createLogAggregationContext(\n          newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d ReservationId.parseReservationId(\n          reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    return appContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "620325e81696fca140195b74929ed9eda2d5eb16": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
      "commitDate": "07/06/16 3:06 PM",
      "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 9.26,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,41 @@\n   protected ApplicationSubmissionContext createAppSubmissionContext(\n       ApplicationSubmissionContextInfo newApp) throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d\n           ConverterUtils.toApplicationId(recordFactory,\n             newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d\n         ApplicationSubmissionContext.newInstance(appid,\n           newApp.getApplicationName(), newApp.getQueue(),\n           Priority.newInstance(newApp.getPriority()),\n           createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n           newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n           createAppSubmissionContextResource(newApp),\n           newApp.getApplicationType(),\n           newApp.getKeepContainersAcrossApplicationAttempts(),\n           newApp.getAppNodeLabelExpression(),\n           newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n     appContext.setAttemptFailuresValidityInterval(\n         newApp.getAttemptFailuresValidityInterval());\n     if (newApp.getLogAggregationContextInfo() !\u003d null) {\n       appContext.setLogAggregationContext(createLogAggregationContext(\n           newApp.getLogAggregationContextInfo()));\n     }\n     String reservationIdStr \u003d newApp.getReservationId();\n     if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n       ReservationId reservationId \u003d ReservationId.parseReservationId(\n           reservationIdStr);\n       appContext.setReservationID(reservationId);\n     }\n-    if (newApp.getAMBlackListingRequestInfo() !\u003d null) {\n-      appContext.setAMBlackListRequest(createAMBlackListingRequest(\n-          newApp.getAMBlackListingRequestInfo()));\n-    }\n     return appContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp) throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d\n          ConverterUtils.toApplicationId(recordFactory,\n            newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d\n        ApplicationSubmissionContext.newInstance(appid,\n          newApp.getApplicationName(), newApp.getQueue(),\n          Priority.newInstance(newApp.getPriority()),\n          createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n          newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n          createAppSubmissionContextResource(newApp),\n          newApp.getApplicationType(),\n          newApp.getKeepContainersAcrossApplicationAttempts(),\n          newApp.getAppNodeLabelExpression(),\n          newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(createLogAggregationContext(\n          newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d ReservationId.parseReservationId(\n          reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    return appContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "1adb64e09bd453f97e83d31b1587079e30b4b274": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4625. Make ApplicationSubmissionContext and ApplicationSubmissionContextInfo more consistent. Contributed by Xuan Gong.\n",
      "commitDate": "03/02/16 2:56 AM",
      "commitName": "1adb64e09bd453f97e83d31b1587079e30b4b274",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/01/16 9:18 PM",
      "commitNameOld": "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 21.23,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,45 @@\n   protected ApplicationSubmissionContext createAppSubmissionContext(\n       ApplicationSubmissionContextInfo newApp) throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d\n           ConverterUtils.toApplicationId(recordFactory,\n             newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d\n         ApplicationSubmissionContext.newInstance(appid,\n           newApp.getApplicationName(), newApp.getQueue(),\n           Priority.newInstance(newApp.getPriority()),\n           createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n           newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n           createAppSubmissionContextResource(newApp),\n           newApp.getApplicationType(),\n           newApp.getKeepContainersAcrossApplicationAttempts(),\n           newApp.getAppNodeLabelExpression(),\n           newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n-\n+    appContext.setAttemptFailuresValidityInterval(\n+        newApp.getAttemptFailuresValidityInterval());\n+    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n+      appContext.setLogAggregationContext(createLogAggregationContext(\n+          newApp.getLogAggregationContextInfo()));\n+    }\n+    String reservationIdStr \u003d newApp.getReservationId();\n+    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n+      ReservationId reservationId \u003d ReservationId.parseReservationId(\n+          reservationIdStr);\n+      appContext.setReservationID(reservationId);\n+    }\n+    if (newApp.getAMBlackListingRequestInfo() !\u003d null) {\n+      appContext.setAMBlackListRequest(createAMBlackListingRequest(\n+          newApp.getAMBlackListingRequestInfo()));\n+    }\n     return appContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp) throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d\n          ConverterUtils.toApplicationId(recordFactory,\n            newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d\n        ApplicationSubmissionContext.newInstance(appid,\n          newApp.getApplicationName(), newApp.getQueue(),\n          Priority.newInstance(newApp.getPriority()),\n          createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n          newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n          createAppSubmissionContextResource(newApp),\n          newApp.getApplicationType(),\n          newApp.getKeepContainersAcrossApplicationAttempts(),\n          newApp.getAppNodeLabelExpression(),\n          newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n    appContext.setAttemptFailuresValidityInterval(\n        newApp.getAttemptFailuresValidityInterval());\n    if (newApp.getLogAggregationContextInfo() !\u003d null) {\n      appContext.setLogAggregationContext(createLogAggregationContext(\n          newApp.getLogAggregationContextInfo()));\n    }\n    String reservationIdStr \u003d newApp.getReservationId();\n    if (reservationIdStr !\u003d null \u0026\u0026 !reservationIdStr.isEmpty()) {\n      ReservationId reservationId \u003d ReservationId.parseReservationId(\n          reservationIdStr);\n      appContext.setReservationID(reservationId);\n    }\n    if (newApp.getAMBlackListingRequestInfo() !\u003d null) {\n      appContext.setAMBlackListRequest(createAMBlackListingRequest(\n          newApp.getAMBlackListingRequestInfo()));\n    }\n    return appContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2505. Supported get/add/remove/change labels in RM REST API. Contributed by Craig Welch.\n",
      "commitDate": "07/11/14 8:35 PM",
      "commitName": "9a4e0d343e9e891c10ef6682e7b2231a59e69ade",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "14/10/14 9:50 PM",
      "commitNameOld": "1220bb72d452521c6f09cebe1dd77341054ee9dd",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 23.99,
      "commitsBetweenForRepo": 250,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   protected ApplicationSubmissionContext createAppSubmissionContext(\n       ApplicationSubmissionContextInfo newApp) throws IOException {\n \n     // create local resources and app submission context\n \n     ApplicationId appid;\n     String error \u003d\n         \"Could not parse application id \" + newApp.getApplicationId();\n     try {\n       appid \u003d\n           ConverterUtils.toApplicationId(recordFactory,\n             newApp.getApplicationId());\n     } catch (Exception e) {\n       throw new BadRequestException(error);\n     }\n     ApplicationSubmissionContext appContext \u003d\n         ApplicationSubmissionContext.newInstance(appid,\n           newApp.getApplicationName(), newApp.getQueue(),\n           Priority.newInstance(newApp.getPriority()),\n           createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n           newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n           createAppSubmissionContextResource(newApp),\n           newApp.getApplicationType(),\n-          newApp.getKeepContainersAcrossApplicationAttempts());\n+          newApp.getKeepContainersAcrossApplicationAttempts(),\n+          newApp.getAppNodeLabelExpression(),\n+          newApp.getAMContainerNodeLabelExpression());\n     appContext.setApplicationTags(newApp.getApplicationTags());\n \n     return appContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp) throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d\n          ConverterUtils.toApplicationId(recordFactory,\n            newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d\n        ApplicationSubmissionContext.newInstance(appid,\n          newApp.getApplicationName(), newApp.getQueue(),\n          Priority.newInstance(newApp.getPriority()),\n          createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n          newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n          createAppSubmissionContextResource(newApp),\n          newApp.getApplicationType(),\n          newApp.getKeepContainersAcrossApplicationAttempts(),\n          newApp.getAppNodeLabelExpression(),\n          newApp.getAMContainerNodeLabelExpression());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n\n    return appContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "075ff276ca9e8c192717a50b0e18485afc8571a6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1713. Added get-new-app and submit-app functionality to RM web services. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/07/14 5:23 PM",
      "commitName": "075ff276ca9e8c192717a50b0e18485afc8571a6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  protected ApplicationSubmissionContext createAppSubmissionContext(\n+      ApplicationSubmissionContextInfo newApp) throws IOException {\n+\n+    // create local resources and app submission context\n+\n+    ApplicationId appid;\n+    String error \u003d\n+        \"Could not parse application id \" + newApp.getApplicationId();\n+    try {\n+      appid \u003d\n+          ConverterUtils.toApplicationId(recordFactory,\n+            newApp.getApplicationId());\n+    } catch (Exception e) {\n+      throw new BadRequestException(error);\n+    }\n+    ApplicationSubmissionContext appContext \u003d\n+        ApplicationSubmissionContext.newInstance(appid,\n+          newApp.getApplicationName(), newApp.getQueue(),\n+          Priority.newInstance(newApp.getPriority()),\n+          createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n+          newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n+          createAppSubmissionContextResource(newApp),\n+          newApp.getApplicationType(),\n+          newApp.getKeepContainersAcrossApplicationAttempts());\n+    appContext.setApplicationTags(newApp.getApplicationTags());\n+\n+    return appContext;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp) throws IOException {\n\n    // create local resources and app submission context\n\n    ApplicationId appid;\n    String error \u003d\n        \"Could not parse application id \" + newApp.getApplicationId();\n    try {\n      appid \u003d\n          ConverterUtils.toApplicationId(recordFactory,\n            newApp.getApplicationId());\n    } catch (Exception e) {\n      throw new BadRequestException(error);\n    }\n    ApplicationSubmissionContext appContext \u003d\n        ApplicationSubmissionContext.newInstance(appid,\n          newApp.getApplicationName(), newApp.getQueue(),\n          Priority.newInstance(newApp.getPriority()),\n          createContainerLaunchContext(newApp), newApp.getUnmanagedAM(),\n          newApp.getCancelTokensWhenComplete(), newApp.getMaxAppAttempts(),\n          createAppSubmissionContextResource(newApp),\n          newApp.getApplicationType(),\n          newApp.getKeepContainersAcrossApplicationAttempts());\n    appContext.setApplicationTags(newApp.getApplicationTags());\n\n    return appContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}