{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppCatalogSolrClient.java",
  "functionName": "findAppStoreEntry",
  "functionId": "findAppStoreEntry___id-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
  "functionStartLine": 177,
  "functionEndLine": 221,
  "numCommitsSeen": 7,
  "timeTaken": 1293,
  "changeHistory": [
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06",
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e"
  ],
  "changeHistoryShort": {
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06": "Ybodychange",
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9255. Improve recommend applications order and fix findbugs warnings. Contributed by Eric Yang\n",
      "commitDate": "01/04/19 9:21 AM",
      "commitName": "35b0a381e7bc8bbf74adfa51feee1d54d8675c06",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "29/03/19 1:51 PM",
      "commitNameOld": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public AppStoreEntry findAppStoreEntry(String id) {\n     AppStoreEntry entry \u003d new AppStoreEntry();\n     ObjectMapper mapper \u003d new ObjectMapper();\n     mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n \n     SolrClient solr \u003d getSolrClient();\n     SolrQuery query \u003d new SolrQuery();\n     query.setQuery(\"id:\" + id);\n     query.setFilterQueries(\"type_s:AppStoreEntry\");\n     query.setRows(1);\n \n     QueryResponse response;\n     try {\n       response \u003d solr.query(query);\n       Iterator\u003cSolrDocument\u003e appList \u003d response.getResults().listIterator();\n       while (appList.hasNext()) {\n         SolrDocument d \u003d appList.next();\n         entry.setId(d.get(\"id\").toString());\n         entry.setOrg(d.get(\"org_s\").toString());\n         entry.setName(d.get(\"name_s\").toString());\n         entry.setDesc(d.get(\"desc_s\").toString());\n-        entry.setLike(Integer.valueOf(d.get(\"like_i\").toString()));\n-        entry.setDownload(Integer.valueOf(d.get(\"download_i\").toString()));\n+        entry.setLike(Integer.parseInt(d.get(\"like_i\").toString()));\n+        entry.setDownload(Integer.parseInt(d.get(\"download_i\").toString()));\n         Service yarnApp \u003d mapper.readValue(d.get(\"yarnfile_s\").toString(),\n             Service.class);\n         String name;\n         try {\n           Random r \u003d new Random();\n           int low \u003d 3;\n           int high \u003d 10;\n           int seed \u003d r.nextInt(high-low) + low;\n           int seed2 \u003d r.nextInt(high-low) + low;\n           name \u003d RandomWord.getNewWord(seed).toLowerCase() + \"-\" + RandomWord\n               .getNewWord(seed2).toLowerCase();\n         } catch (WordLengthException e) {\n           name \u003d \"c\" + java.util.UUID.randomUUID().toString().substring(0, 11);\n         }\n         yarnApp.setName(name);\n         entry.setApp(yarnApp);\n       }\n     } catch (SolrServerException | IOException e) {\n       LOG.error(\"Error in finding deployed application: \" + id, e);\n     }\n     return entry;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppStoreEntry findAppStoreEntry(String id) {\n    AppStoreEntry entry \u003d new AppStoreEntry();\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n\n    SolrClient solr \u003d getSolrClient();\n    SolrQuery query \u003d new SolrQuery();\n    query.setQuery(\"id:\" + id);\n    query.setFilterQueries(\"type_s:AppStoreEntry\");\n    query.setRows(1);\n\n    QueryResponse response;\n    try {\n      response \u003d solr.query(query);\n      Iterator\u003cSolrDocument\u003e appList \u003d response.getResults().listIterator();\n      while (appList.hasNext()) {\n        SolrDocument d \u003d appList.next();\n        entry.setId(d.get(\"id\").toString());\n        entry.setOrg(d.get(\"org_s\").toString());\n        entry.setName(d.get(\"name_s\").toString());\n        entry.setDesc(d.get(\"desc_s\").toString());\n        entry.setLike(Integer.parseInt(d.get(\"like_i\").toString()));\n        entry.setDownload(Integer.parseInt(d.get(\"download_i\").toString()));\n        Service yarnApp \u003d mapper.readValue(d.get(\"yarnfile_s\").toString(),\n            Service.class);\n        String name;\n        try {\n          Random r \u003d new Random();\n          int low \u003d 3;\n          int high \u003d 10;\n          int seed \u003d r.nextInt(high-low) + low;\n          int seed2 \u003d r.nextInt(high-low) + low;\n          name \u003d RandomWord.getNewWord(seed).toLowerCase() + \"-\" + RandomWord\n              .getNewWord(seed2).toLowerCase();\n        } catch (WordLengthException e) {\n          name \u003d \"c\" + java.util.UUID.randomUUID().toString().substring(0, 11);\n        }\n        yarnApp.setName(name);\n        entry.setApp(yarnApp);\n      }\n    } catch (SolrServerException | IOException e) {\n      LOG.error(\"Error in finding deployed application: \" + id, e);\n    }\n    return entry;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
      "extendedDetails": {}
    },
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,45 @@\n+  public AppStoreEntry findAppStoreEntry(String id) {\n+    AppStoreEntry entry \u003d new AppStoreEntry();\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+\n+    SolrClient solr \u003d getSolrClient();\n+    SolrQuery query \u003d new SolrQuery();\n+    query.setQuery(\"id:\" + id);\n+    query.setFilterQueries(\"type_s:AppStoreEntry\");\n+    query.setRows(1);\n+\n+    QueryResponse response;\n+    try {\n+      response \u003d solr.query(query);\n+      Iterator\u003cSolrDocument\u003e appList \u003d response.getResults().listIterator();\n+      while (appList.hasNext()) {\n+        SolrDocument d \u003d appList.next();\n+        entry.setId(d.get(\"id\").toString());\n+        entry.setOrg(d.get(\"org_s\").toString());\n+        entry.setName(d.get(\"name_s\").toString());\n+        entry.setDesc(d.get(\"desc_s\").toString());\n+        entry.setLike(Integer.valueOf(d.get(\"like_i\").toString()));\n+        entry.setDownload(Integer.valueOf(d.get(\"download_i\").toString()));\n+        Service yarnApp \u003d mapper.readValue(d.get(\"yarnfile_s\").toString(),\n+            Service.class);\n+        String name;\n+        try {\n+          Random r \u003d new Random();\n+          int low \u003d 3;\n+          int high \u003d 10;\n+          int seed \u003d r.nextInt(high-low) + low;\n+          int seed2 \u003d r.nextInt(high-low) + low;\n+          name \u003d RandomWord.getNewWord(seed).toLowerCase() + \"-\" + RandomWord\n+              .getNewWord(seed2).toLowerCase();\n+        } catch (WordLengthException e) {\n+          name \u003d \"c\" + java.util.UUID.randomUUID().toString().substring(0, 11);\n+        }\n+        yarnApp.setName(name);\n+        entry.setApp(yarnApp);\n+      }\n+    } catch (SolrServerException | IOException e) {\n+      LOG.error(\"Error in finding deployed application: \" + id, e);\n+    }\n+    return entry;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppStoreEntry findAppStoreEntry(String id) {\n    AppStoreEntry entry \u003d new AppStoreEntry();\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n\n    SolrClient solr \u003d getSolrClient();\n    SolrQuery query \u003d new SolrQuery();\n    query.setQuery(\"id:\" + id);\n    query.setFilterQueries(\"type_s:AppStoreEntry\");\n    query.setRows(1);\n\n    QueryResponse response;\n    try {\n      response \u003d solr.query(query);\n      Iterator\u003cSolrDocument\u003e appList \u003d response.getResults().listIterator();\n      while (appList.hasNext()) {\n        SolrDocument d \u003d appList.next();\n        entry.setId(d.get(\"id\").toString());\n        entry.setOrg(d.get(\"org_s\").toString());\n        entry.setName(d.get(\"name_s\").toString());\n        entry.setDesc(d.get(\"desc_s\").toString());\n        entry.setLike(Integer.valueOf(d.get(\"like_i\").toString()));\n        entry.setDownload(Integer.valueOf(d.get(\"download_i\").toString()));\n        Service yarnApp \u003d mapper.readValue(d.get(\"yarnfile_s\").toString(),\n            Service.class);\n        String name;\n        try {\n          Random r \u003d new Random();\n          int low \u003d 3;\n          int high \u003d 10;\n          int seed \u003d r.nextInt(high-low) + low;\n          int seed2 \u003d r.nextInt(high-low) + low;\n          name \u003d RandomWord.getNewWord(seed).toLowerCase() + \"-\" + RandomWord\n              .getNewWord(seed2).toLowerCase();\n        } catch (WordLengthException e) {\n          name \u003d \"c\" + java.util.UUID.randomUUID().toString().substring(0, 11);\n        }\n        yarnApp.setName(name);\n        entry.setApp(yarnApp);\n      }\n    } catch (SolrServerException | IOException e) {\n      LOG.error(\"Error in finding deployed application: \" + id, e);\n    }\n    return entry;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java"
    }
  }
}