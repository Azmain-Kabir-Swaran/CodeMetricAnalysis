{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "checkIfClusterIsNowMultiRack",
  "functionId": "checkIfClusterIsNowMultiRack___node-DatanodeDescriptor",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 1421,
  "functionEndLine": 1439,
  "numCommitsSeen": 172,
  "timeTaken": 4684,
  "changeHistory": [
    "715b9c649982bff91d1f9eae656ba3b82178e1a3",
    "4f230adc13c70b09083a928b9dc65fa404e6d177"
  ],
  "changeHistoryShort": {
    "715b9c649982bff91d1f9eae656ba3b82178e1a3": "Ybodychange",
    "4f230adc13c70b09083a928b9dc65fa404e6d177": "Yintroduced"
  },
  "changeHistoryDetails": {
    "715b9c649982bff91d1f9eae656ba3b82178e1a3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8984. Move replication queues related methods in FSNamesystem to BlockManager. Contributed by Haohui Mai.\n",
      "commitDate": "04/09/15 11:45 AM",
      "commitName": "715b9c649982bff91d1f9eae656ba3b82178e1a3",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/08/15 2:21 PM",
      "commitNameOld": "b94b56806d3d6e04984e229b479f7ac15b62bbfa",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 6.89,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   void checkIfClusterIsNowMultiRack(DatanodeDescriptor node) {\n     if (!hasClusterEverBeenMultiRack \u0026\u0026 networktopology.getNumOfRacks() \u003e 1) {\n       String message \u003d \"DN \" + node + \" joining cluster has expanded a formerly \" +\n           \"single-rack cluster to be multi-rack. \";\n-      if (namesystem.isPopulatingReplQueues()) {\n+      if (blockManager.isPopulatingReplQueues()) {\n         message +\u003d \"Re-checking all blocks for replication, since they should \" +\n             \"now be replicated cross-rack\";\n         LOG.info(message);\n       } else {\n         message +\u003d \"Not checking for mis-replicated blocks because this NN is \" +\n             \"not yet processing repl queues.\";\n         LOG.debug(message);\n       }\n       hasClusterEverBeenMultiRack \u003d true;\n-      if (namesystem.isPopulatingReplQueues()) {\n+      if (blockManager.isPopulatingReplQueues()) {\n         blockManager.processMisReplicatedBlocks();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkIfClusterIsNowMultiRack(DatanodeDescriptor node) {\n    if (!hasClusterEverBeenMultiRack \u0026\u0026 networktopology.getNumOfRacks() \u003e 1) {\n      String message \u003d \"DN \" + node + \" joining cluster has expanded a formerly \" +\n          \"single-rack cluster to be multi-rack. \";\n      if (blockManager.isPopulatingReplQueues()) {\n        message +\u003d \"Re-checking all blocks for replication, since they should \" +\n            \"now be replicated cross-rack\";\n        LOG.info(message);\n      } else {\n        message +\u003d \"Not checking for mis-replicated blocks because this NN is \" +\n            \"not yet processing repl queues.\";\n        LOG.debug(message);\n      }\n      hasClusterEverBeenMultiRack \u003d true;\n      if (blockManager.isPopulatingReplQueues()) {\n        blockManager.processMisReplicatedBlocks();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "4f230adc13c70b09083a928b9dc65fa404e6d177": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3256. HDFS considers blocks under-replicated if topology script is configured with only 1 rack. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1325531 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/12 2:28 PM",
      "commitName": "4f230adc13c70b09083a928b9dc65fa404e6d177",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,19 @@\n+  void checkIfClusterIsNowMultiRack(DatanodeDescriptor node) {\n+    if (!hasClusterEverBeenMultiRack \u0026\u0026 networktopology.getNumOfRacks() \u003e 1) {\n+      String message \u003d \"DN \" + node + \" joining cluster has expanded a formerly \" +\n+          \"single-rack cluster to be multi-rack. \";\n+      if (namesystem.isPopulatingReplQueues()) {\n+        message +\u003d \"Re-checking all blocks for replication, since they should \" +\n+            \"now be replicated cross-rack\";\n+        LOG.info(message);\n+      } else {\n+        message +\u003d \"Not checking for mis-replicated blocks because this NN is \" +\n+            \"not yet processing repl queues.\";\n+        LOG.debug(message);\n+      }\n+      hasClusterEverBeenMultiRack \u003d true;\n+      if (namesystem.isPopulatingReplQueues()) {\n+        blockManager.processMisReplicatedBlocks();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void checkIfClusterIsNowMultiRack(DatanodeDescriptor node) {\n    if (!hasClusterEverBeenMultiRack \u0026\u0026 networktopology.getNumOfRacks() \u003e 1) {\n      String message \u003d \"DN \" + node + \" joining cluster has expanded a formerly \" +\n          \"single-rack cluster to be multi-rack. \";\n      if (namesystem.isPopulatingReplQueues()) {\n        message +\u003d \"Re-checking all blocks for replication, since they should \" +\n            \"now be replicated cross-rack\";\n        LOG.info(message);\n      } else {\n        message +\u003d \"Not checking for mis-replicated blocks because this NN is \" +\n            \"not yet processing repl queues.\";\n        LOG.debug(message);\n      }\n      hasClusterEverBeenMultiRack \u003d true;\n      if (namesystem.isPopulatingReplQueues()) {\n        blockManager.processMisReplicatedBlocks();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
    }
  }
}