{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeCollectorOnlyHandler.java",
  "functionName": "create",
  "functionId": "create___context-TaskContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/handlers/NativeCollectorOnlyHandler.java",
  "functionStartLine": 67,
  "functionEndLine": 94,
  "numCommitsSeen": 4,
  "timeTaken": 821,
  "changeHistory": [
    "1081d9cee23aa661d7c9165bc9855865a38b528e",
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139"
  ],
  "changeHistoryShort": {
    "1081d9cee23aa661d7c9165bc9855865a38b528e": "Ybodychange",
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1081d9cee23aa661d7c9165bc9855865a38b528e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6055. native-task: findbugs, interface annotations, and other misc cleanup\n",
      "commitDate": "03/09/14 12:22 PM",
      "commitName": "1081d9cee23aa661d7c9165bc9855865a38b528e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "17/07/14 10:44 AM",
      "commitNameOld": "b2551c06a09fb80a9e69adbc01c4c34b93ad0139",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 48.07,
      "commitsBetweenForRepo": 405,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   public static \u003cK, V\u003e NativeCollectorOnlyHandler\u003cK, V\u003e create(TaskContext context) throws IOException {\n \n     \n     ICombineHandler combinerHandler \u003d null;\n     try {\n       final TaskContext combineContext \u003d context.copyOf();\n-      combineContext.setInputKeyClass(context.getOuputKeyClass());\n+      combineContext.setInputKeyClass(context.getOutputKeyClass());\n       combineContext.setInputValueClass(context.getOutputValueClass());\n \n       combinerHandler \u003d CombinerHandler.create(combineContext);\n     } catch (final ClassNotFoundException e) {\n       throw new IOException(e);\n     }\n     \n     if (null !\u003d combinerHandler) {\n       LOG.info(\"[NativeCollectorOnlyHandler] combiner is not null\");\n     }\n \n     final INativeHandler nativeHandler \u003d NativeBatchProcessor.create(NAME, context.getConf(), DataChannel.OUT);\n-    final BufferPusher\u003cK, V\u003e kvPusher \u003d new BufferPusher\u003cK, V\u003e(context.getOuputKeyClass(), context.getOutputValueClass(),\n+    final BufferPusher\u003cK, V\u003e kvPusher \u003d new BufferPusher\u003cK, V\u003e(\n+        (Class\u003cK\u003e)context.getOutputKeyClass(),\n+        (Class\u003cV\u003e)context.getOutputValueClass(),\n         nativeHandler);\n \n     return new NativeCollectorOnlyHandler\u003cK, V\u003e(context, nativeHandler, kvPusher, combinerHandler);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cK, V\u003e NativeCollectorOnlyHandler\u003cK, V\u003e create(TaskContext context) throws IOException {\n\n    \n    ICombineHandler combinerHandler \u003d null;\n    try {\n      final TaskContext combineContext \u003d context.copyOf();\n      combineContext.setInputKeyClass(context.getOutputKeyClass());\n      combineContext.setInputValueClass(context.getOutputValueClass());\n\n      combinerHandler \u003d CombinerHandler.create(combineContext);\n    } catch (final ClassNotFoundException e) {\n      throw new IOException(e);\n    }\n    \n    if (null !\u003d combinerHandler) {\n      LOG.info(\"[NativeCollectorOnlyHandler] combiner is not null\");\n    }\n\n    final INativeHandler nativeHandler \u003d NativeBatchProcessor.create(NAME, context.getConf(), DataChannel.OUT);\n    final BufferPusher\u003cK, V\u003e kvPusher \u003d new BufferPusher\u003cK, V\u003e(\n        (Class\u003cK\u003e)context.getOutputKeyClass(),\n        (Class\u003cV\u003e)context.getOutputValueClass(),\n        nativeHandler);\n\n    return new NativeCollectorOnlyHandler\u003cK, V\u003e(context, nativeHandler, kvPusher, combinerHandler);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/handlers/NativeCollectorOnlyHandler.java",
      "extendedDetails": {}
    },
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": {
      "type": "Yintroduced",
      "commitMessage": "Import initial code for MAPREDUCE-2841 (native output collector)\n\nContributed by:\n  Binglin Chang\n  Yang Dong\n  Sean Zhong\n  Manu Zhang\n  Zhongliang Zhu\n  Vincent Wang\n  Yan Dong\n  Cheng Lian\n  Xusen Yin\n  Fangqin Dai\n  Jiang Weihua\n  Gansha Wu\n  Avik Dey\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/MR-2841@1611413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 10:44 AM",
      "commitName": "b2551c06a09fb80a9e69adbc01c4c34b93ad0139",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,24 @@\n+  public static \u003cK, V\u003e NativeCollectorOnlyHandler\u003cK, V\u003e create(TaskContext context) throws IOException {\n+\n+    \n+    ICombineHandler combinerHandler \u003d null;\n+    try {\n+      final TaskContext combineContext \u003d context.copyOf();\n+      combineContext.setInputKeyClass(context.getOuputKeyClass());\n+      combineContext.setInputValueClass(context.getOutputValueClass());\n+\n+      combinerHandler \u003d CombinerHandler.create(combineContext);\n+    } catch (final ClassNotFoundException e) {\n+      throw new IOException(e);\n+    }\n+    \n+    if (null !\u003d combinerHandler) {\n+      LOG.info(\"[NativeCollectorOnlyHandler] combiner is not null\");\n+    }\n+\n+    final INativeHandler nativeHandler \u003d NativeBatchProcessor.create(NAME, context.getConf(), DataChannel.OUT);\n+    final BufferPusher\u003cK, V\u003e kvPusher \u003d new BufferPusher\u003cK, V\u003e(context.getOuputKeyClass(), context.getOutputValueClass(),\n+        nativeHandler);\n+\n+    return new NativeCollectorOnlyHandler\u003cK, V\u003e(context, nativeHandler, kvPusher, combinerHandler);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cK, V\u003e NativeCollectorOnlyHandler\u003cK, V\u003e create(TaskContext context) throws IOException {\n\n    \n    ICombineHandler combinerHandler \u003d null;\n    try {\n      final TaskContext combineContext \u003d context.copyOf();\n      combineContext.setInputKeyClass(context.getOuputKeyClass());\n      combineContext.setInputValueClass(context.getOutputValueClass());\n\n      combinerHandler \u003d CombinerHandler.create(combineContext);\n    } catch (final ClassNotFoundException e) {\n      throw new IOException(e);\n    }\n    \n    if (null !\u003d combinerHandler) {\n      LOG.info(\"[NativeCollectorOnlyHandler] combiner is not null\");\n    }\n\n    final INativeHandler nativeHandler \u003d NativeBatchProcessor.create(NAME, context.getConf(), DataChannel.OUT);\n    final BufferPusher\u003cK, V\u003e kvPusher \u003d new BufferPusher\u003cK, V\u003e(context.getOuputKeyClass(), context.getOutputValueClass(),\n        nativeHandler);\n\n    return new NativeCollectorOnlyHandler\u003cK, V\u003e(context, nativeHandler, kvPusher, combinerHandler);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/handlers/NativeCollectorOnlyHandler.java"
    }
  }
}