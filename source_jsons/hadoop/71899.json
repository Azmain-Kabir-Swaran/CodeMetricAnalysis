{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSAudit.java",
  "functionName": "initializeAuditLoggers",
  "functionId": "initializeAuditLoggers___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAudit.java",
  "functionStartLine": 147,
  "functionEndLine": 164,
  "numCommitsSeen": 9,
  "timeTaken": 631,
  "changeHistory": [
    "3476156807733505746951f0c9346592742bbbb2"
  ],
  "changeHistoryShort": {
    "3476156807733505746951f0c9346592742bbbb2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3476156807733505746951f0c9346592742bbbb2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13396. Allow pluggable audit loggers in KMS. Contributed by Xiao Chen\n",
      "commitDate": "24/08/16 10:14 AM",
      "commitName": "3476156807733505746951f0c9346592742bbbb2",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,18 @@\n+  private void initializeAuditLoggers(Configuration conf) {\n+    Set\u003cClass\u003c? extends KMSAuditLogger\u003e\u003e classes \u003d getAuditLoggerClasses(conf);\n+    Preconditions\n+        .checkState(!classes.isEmpty(), \"Should have at least 1 audit logger.\");\n+    for (Class\u003c? extends KMSAuditLogger\u003e c : classes) {\n+      final KMSAuditLogger logger \u003d ReflectionUtils.newInstance(c, conf);\n+      auditLoggers.add(logger);\n+    }\n+    for (KMSAuditLogger logger: auditLoggers) {\n+      try {\n+        LOG.info(\"Initializing audit logger {}\", logger.getClass());\n+        logger.initialize(conf);\n+      } catch (Exception ex) {\n+        throw new RuntimeException(\n+            \"Failed to initialize \" + logger.getClass().getName(), ex);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeAuditLoggers(Configuration conf) {\n    Set\u003cClass\u003c? extends KMSAuditLogger\u003e\u003e classes \u003d getAuditLoggerClasses(conf);\n    Preconditions\n        .checkState(!classes.isEmpty(), \"Should have at least 1 audit logger.\");\n    for (Class\u003c? extends KMSAuditLogger\u003e c : classes) {\n      final KMSAuditLogger logger \u003d ReflectionUtils.newInstance(c, conf);\n      auditLoggers.add(logger);\n    }\n    for (KMSAuditLogger logger: auditLoggers) {\n      try {\n        LOG.info(\"Initializing audit logger {}\", logger.getClass());\n        logger.initialize(conf);\n      } catch (Exception ex) {\n        throw new RuntimeException(\n            \"Failed to initialize \" + logger.getClass().getName(), ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAudit.java"
    }
  }
}