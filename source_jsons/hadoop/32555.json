{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerShellWebSocket.java",
  "functionName": "checkAuthorization",
  "functionId": "checkAuthorization___session-Session__container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
  "functionStartLine": 162,
  "functionEndLine": 187,
  "numCommitsSeen": 7,
  "timeTaken": 831,
  "changeHistory": [
    "49824ed260d31350d9b836a4c31319e2b3501dd0"
  ],
  "changeHistoryShort": {
    "49824ed260d31350d9b836a4c31319e2b3501dd0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49824ed260d31350d9b836a4c31319e2b3501dd0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8838. Check that container user is same as websocket user for interactive shell. Contributed by Eric Yang\n",
      "commitDate": "20/11/18 11:12 AM",
      "commitName": "49824ed260d31350d9b836a4c31319e2b3501dd0",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,26 @@\n+  protected boolean checkAuthorization(Session session, Container container)\n+      throws IOException {\n+    boolean authorized \u003d true;\n+    String user \u003d \"\";\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      user \u003d new HadoopKerberosName(session.getUpgradeRequest()\n+          .getUserPrincipal().getName()).getShortName();\n+    } else {\n+      Map\u003cString, List\u003cString\u003e\u003e parameters \u003d session.getUpgradeRequest()\n+          .getParameterMap();\n+      if (parameters.containsKey(\"user.name\")) {\n+        List\u003cString\u003e users \u003d parameters.get(\"user.name\");\n+        user \u003d users.get(0);\n+      }\n+    }\n+    boolean isAdmin \u003d false;\n+    if (nmContext.getApplicationACLsManager().areACLsEnabled()) {\n+      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n+      isAdmin \u003d nmContext.getApplicationACLsManager().isAdmin(ugi);\n+    }\n+    String containerUser \u003d container.getUser();\n+    if (!user.equals(containerUser) \u0026\u0026 !isAdmin) {\n+      authorized \u003d false;\n+    }\n+    return authorized;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean checkAuthorization(Session session, Container container)\n      throws IOException {\n    boolean authorized \u003d true;\n    String user \u003d \"\";\n    if (UserGroupInformation.isSecurityEnabled()) {\n      user \u003d new HadoopKerberosName(session.getUpgradeRequest()\n          .getUserPrincipal().getName()).getShortName();\n    } else {\n      Map\u003cString, List\u003cString\u003e\u003e parameters \u003d session.getUpgradeRequest()\n          .getParameterMap();\n      if (parameters.containsKey(\"user.name\")) {\n        List\u003cString\u003e users \u003d parameters.get(\"user.name\");\n        user \u003d users.get(0);\n      }\n    }\n    boolean isAdmin \u003d false;\n    if (nmContext.getApplicationACLsManager().areACLsEnabled()) {\n      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n      isAdmin \u003d nmContext.getApplicationACLsManager().isAdmin(ugi);\n    }\n    String containerUser \u003d container.getUser();\n    if (!user.equals(containerUser) \u0026\u0026 !isAdmin) {\n      authorized \u003d false;\n    }\n    return authorized;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java"
    }
  }
}