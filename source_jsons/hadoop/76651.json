{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ArrayPrimitiveWritable.java",
  "functionName": "readFields",
  "functionId": "readFields___in-DataInput",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
  "functionStartLine": 204,
  "functionEndLine": 249,
  "numCommitsSeen": 4,
  "timeTaken": 952,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "0d55e1a14430ee18a84de6f985da86dc61d7ae80"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "0d55e1a14430ee18a84de6f985da86dc61d7ae80": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // read and set the component type of the array\n    @SuppressWarnings(\"deprecation\")\n    String className \u003d UTF8.readString(in);\n    Class\u003c?\u003e componentType \u003d getPrimitiveClass(className);\n    if (componentType \u003d\u003d null) {\n      throw new IOException(\"encoded array component type \"\n          + className + \" is not a candidate primitive type\");\n    }\n    checkDeclaredComponentType(componentType);\n    this.componentType \u003d componentType;\n  \n    // read and set the length of the array\n    int length \u003d in.readInt();\n    if (length \u003c 0) {\n      throw new IOException(\"encoded array length is negative \" + length);\n    }\n    this.length \u003d length;\n    \n    // construct and read in the array\n    value \u003d Array.newInstance(componentType, length);\n\n    // do the inner loop.  Walk the decision tree only once.\n    if (componentType \u003d\u003d Boolean.TYPE) {             // boolean\n      readBooleanArray(in);\n    } else if (componentType \u003d\u003d Character.TYPE) {    // char\n      readCharArray(in);\n    } else if (componentType \u003d\u003d Byte.TYPE) {         // byte\n      readByteArray(in);\n    } else if (componentType \u003d\u003d Short.TYPE) {        // short\n      readShortArray(in);\n    } else if (componentType \u003d\u003d Integer.TYPE) {      // int\n      readIntArray(in);\n    } else if (componentType \u003d\u003d Long.TYPE) {         // long\n      readLongArray(in);\n    } else if (componentType \u003d\u003d Float.TYPE) {        // float\n      readFloatArray(in);\n    } else if (componentType \u003d\u003d Double.TYPE) {       // double\n      readDoubleArray(in);\n    } else {\n      throw new IOException(\"Encoded type \" + className\n          + \" converted to valid component type \" + componentType.toString()\n          + \" but no encoding is implemented for this type.\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // read and set the component type of the array\n    @SuppressWarnings(\"deprecation\")\n    String className \u003d UTF8.readString(in);\n    Class\u003c?\u003e componentType \u003d getPrimitiveClass(className);\n    if (componentType \u003d\u003d null) {\n      throw new IOException(\"encoded array component type \"\n          + className + \" is not a candidate primitive type\");\n    }\n    checkDeclaredComponentType(componentType);\n    this.componentType \u003d componentType;\n  \n    // read and set the length of the array\n    int length \u003d in.readInt();\n    if (length \u003c 0) {\n      throw new IOException(\"encoded array length is negative \" + length);\n    }\n    this.length \u003d length;\n    \n    // construct and read in the array\n    value \u003d Array.newInstance(componentType, length);\n\n    // do the inner loop.  Walk the decision tree only once.\n    if (componentType \u003d\u003d Boolean.TYPE) {             // boolean\n      readBooleanArray(in);\n    } else if (componentType \u003d\u003d Character.TYPE) {    // char\n      readCharArray(in);\n    } else if (componentType \u003d\u003d Byte.TYPE) {         // byte\n      readByteArray(in);\n    } else if (componentType \u003d\u003d Short.TYPE) {        // short\n      readShortArray(in);\n    } else if (componentType \u003d\u003d Integer.TYPE) {      // int\n      readIntArray(in);\n    } else if (componentType \u003d\u003d Long.TYPE) {         // long\n      readLongArray(in);\n    } else if (componentType \u003d\u003d Float.TYPE) {        // float\n      readFloatArray(in);\n    } else if (componentType \u003d\u003d Double.TYPE) {       // double\n      readDoubleArray(in);\n    } else {\n      throw new IOException(\"Encoded type \" + className\n          + \" converted to valid component type \" + componentType.toString()\n          + \" but no encoding is implemented for this type.\");\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // read and set the component type of the array\n    @SuppressWarnings(\"deprecation\")\n    String className \u003d UTF8.readString(in);\n    Class\u003c?\u003e componentType \u003d getPrimitiveClass(className);\n    if (componentType \u003d\u003d null) {\n      throw new IOException(\"encoded array component type \"\n          + className + \" is not a candidate primitive type\");\n    }\n    checkDeclaredComponentType(componentType);\n    this.componentType \u003d componentType;\n  \n    // read and set the length of the array\n    int length \u003d in.readInt();\n    if (length \u003c 0) {\n      throw new IOException(\"encoded array length is negative \" + length);\n    }\n    this.length \u003d length;\n    \n    // construct and read in the array\n    value \u003d Array.newInstance(componentType, length);\n\n    // do the inner loop.  Walk the decision tree only once.\n    if (componentType \u003d\u003d Boolean.TYPE) {             // boolean\n      readBooleanArray(in);\n    } else if (componentType \u003d\u003d Character.TYPE) {    // char\n      readCharArray(in);\n    } else if (componentType \u003d\u003d Byte.TYPE) {         // byte\n      readByteArray(in);\n    } else if (componentType \u003d\u003d Short.TYPE) {        // short\n      readShortArray(in);\n    } else if (componentType \u003d\u003d Integer.TYPE) {      // int\n      readIntArray(in);\n    } else if (componentType \u003d\u003d Long.TYPE) {         // long\n      readLongArray(in);\n    } else if (componentType \u003d\u003d Float.TYPE) {        // float\n      readFloatArray(in);\n    } else if (componentType \u003d\u003d Double.TYPE) {       // double\n      readDoubleArray(in);\n    } else {\n      throw new IOException(\"Encoded type \" + className\n          + \" converted to valid component type \" + componentType.toString()\n          + \" but no encoding is implemented for this type.\");\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java",
        "newPath": "common/src/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java"
      }
    },
    "0d55e1a14430ee18a84de6f985da86dc61d7ae80": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6949. Reduce RPC packet size of primitive arrays using ArrayPrimitiveWritable instead of ObjectWritable. Contributed by Matt Foley.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1083957 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/11 2:10 PM",
      "commitName": "0d55e1a14430ee18a84de6f985da86dc61d7ae80",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,46 @@\n+  public void readFields(DataInput in) throws IOException {\n+    \n+    // read and set the component type of the array\n+    @SuppressWarnings(\"deprecation\")\n+    String className \u003d UTF8.readString(in);\n+    Class\u003c?\u003e componentType \u003d getPrimitiveClass(className);\n+    if (componentType \u003d\u003d null) {\n+      throw new IOException(\"encoded array component type \"\n+          + className + \" is not a candidate primitive type\");\n+    }\n+    checkDeclaredComponentType(componentType);\n+    this.componentType \u003d componentType;\n+  \n+    // read and set the length of the array\n+    int length \u003d in.readInt();\n+    if (length \u003c 0) {\n+      throw new IOException(\"encoded array length is negative \" + length);\n+    }\n+    this.length \u003d length;\n+    \n+    // construct and read in the array\n+    value \u003d Array.newInstance(componentType, length);\n+\n+    // do the inner loop.  Walk the decision tree only once.\n+    if (componentType \u003d\u003d Boolean.TYPE) {             // boolean\n+      readBooleanArray(in);\n+    } else if (componentType \u003d\u003d Character.TYPE) {    // char\n+      readCharArray(in);\n+    } else if (componentType \u003d\u003d Byte.TYPE) {         // byte\n+      readByteArray(in);\n+    } else if (componentType \u003d\u003d Short.TYPE) {        // short\n+      readShortArray(in);\n+    } else if (componentType \u003d\u003d Integer.TYPE) {      // int\n+      readIntArray(in);\n+    } else if (componentType \u003d\u003d Long.TYPE) {         // long\n+      readLongArray(in);\n+    } else if (componentType \u003d\u003d Float.TYPE) {        // float\n+      readFloatArray(in);\n+    } else if (componentType \u003d\u003d Double.TYPE) {       // double\n+      readDoubleArray(in);\n+    } else {\n+      throw new IOException(\"Encoded type \" + className\n+          + \" converted to valid component type \" + componentType.toString()\n+          + \" but no encoding is implemented for this type.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // read and set the component type of the array\n    @SuppressWarnings(\"deprecation\")\n    String className \u003d UTF8.readString(in);\n    Class\u003c?\u003e componentType \u003d getPrimitiveClass(className);\n    if (componentType \u003d\u003d null) {\n      throw new IOException(\"encoded array component type \"\n          + className + \" is not a candidate primitive type\");\n    }\n    checkDeclaredComponentType(componentType);\n    this.componentType \u003d componentType;\n  \n    // read and set the length of the array\n    int length \u003d in.readInt();\n    if (length \u003c 0) {\n      throw new IOException(\"encoded array length is negative \" + length);\n    }\n    this.length \u003d length;\n    \n    // construct and read in the array\n    value \u003d Array.newInstance(componentType, length);\n\n    // do the inner loop.  Walk the decision tree only once.\n    if (componentType \u003d\u003d Boolean.TYPE) {             // boolean\n      readBooleanArray(in);\n    } else if (componentType \u003d\u003d Character.TYPE) {    // char\n      readCharArray(in);\n    } else if (componentType \u003d\u003d Byte.TYPE) {         // byte\n      readByteArray(in);\n    } else if (componentType \u003d\u003d Short.TYPE) {        // short\n      readShortArray(in);\n    } else if (componentType \u003d\u003d Integer.TYPE) {      // int\n      readIntArray(in);\n    } else if (componentType \u003d\u003d Long.TYPE) {         // long\n      readLongArray(in);\n    } else if (componentType \u003d\u003d Float.TYPE) {        // float\n      readFloatArray(in);\n    } else if (componentType \u003d\u003d Double.TYPE) {       // double\n      readDoubleArray(in);\n    } else {\n      throw new IOException(\"Encoded type \" + className\n          + \" converted to valid component type \" + componentType.toString()\n          + \" but no encoding is implemented for this type.\");\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/ArrayPrimitiveWritable.java"
    }
  }
}