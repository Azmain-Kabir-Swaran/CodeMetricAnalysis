{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageSerialization.java",
  "functionName": "writeCachePoolInfo",
  "functionId": "writeCachePoolInfo___out-DataOutputStream__info-CachePoolInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
  "functionStartLine": 617,
  "functionEndLine": 665,
  "numCommitsSeen": 62,
  "timeTaken": 2766,
  "changeHistory": [
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
    "991c453ca3ac141a3f286f74af8401f83c38b230"
  ],
  "changeHistoryShort": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": "Ybodychange",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": "Ybodychange",
    "991c453ca3ac141a3f286f74af8401f83c38b230": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10328. Add per-cache-pool default replication num configuration (xupeng via cmccabe)\n",
      "commitDate": "20/06/16 10:42 AM",
      "commitName": "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "01/09/15 2:30 PM",
      "commitNameOld": "ab56fcdb1219d03713b408dd3a95d7405635254d",
      "commitAuthorOld": "",
      "daysBetweenCommits": 292.84,
      "commitsBetweenForRepo": 1951,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,49 @@\n   public static void writeCachePoolInfo(DataOutputStream out, CachePoolInfo info)\n       throws IOException {\n     writeString(info.getPoolName(), out);\n \n     final String ownerName \u003d info.getOwnerName();\n     final String groupName \u003d info.getGroupName();\n     final Long limit \u003d info.getLimit();\n     final FsPermission mode \u003d info.getMode();\n     final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n+    final Short defaultReplication \u003d info.getDefaultReplication();\n \n-    boolean hasOwner, hasGroup, hasMode, hasLimit, hasMaxRelativeExpiry;\n+    boolean hasOwner, hasGroup, hasMode, hasLimit,\n+            hasMaxRelativeExpiry, hasDefaultReplication;\n     hasOwner \u003d ownerName !\u003d null;\n     hasGroup \u003d groupName !\u003d null;\n     hasMode \u003d mode !\u003d null;\n     hasLimit \u003d limit !\u003d null;\n     hasMaxRelativeExpiry \u003d maxRelativeExpiry !\u003d null;\n+    hasDefaultReplication \u003d defaultReplication !\u003d null;\n \n     int flags \u003d\n         (hasOwner ? 0x1 : 0) |\n         (hasGroup ? 0x2 : 0) |\n         (hasMode  ? 0x4 : 0) |\n         (hasLimit ? 0x8 : 0) |\n-        (hasMaxRelativeExpiry ? 0x10 : 0);\n+        (hasMaxRelativeExpiry ? 0x10 : 0) |\n+        (hasDefaultReplication ? 0x20 : 0);\n \n     writeInt(flags, out);\n \n     if (hasOwner) {\n       writeString(ownerName, out);\n     }\n     if (hasGroup) {\n       writeString(groupName, out);\n     }\n     if (hasMode) {\n       mode.write(out);\n     }\n     if (hasLimit) {\n       writeLong(limit, out);\n     }\n     if (hasMaxRelativeExpiry) {\n       writeLong(maxRelativeExpiry, out);\n     }\n+    if (hasDefaultReplication) {\n+      writeShort(defaultReplication, out);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeCachePoolInfo(DataOutputStream out, CachePoolInfo info)\n      throws IOException {\n    writeString(info.getPoolName(), out);\n\n    final String ownerName \u003d info.getOwnerName();\n    final String groupName \u003d info.getGroupName();\n    final Long limit \u003d info.getLimit();\n    final FsPermission mode \u003d info.getMode();\n    final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n    final Short defaultReplication \u003d info.getDefaultReplication();\n\n    boolean hasOwner, hasGroup, hasMode, hasLimit,\n            hasMaxRelativeExpiry, hasDefaultReplication;\n    hasOwner \u003d ownerName !\u003d null;\n    hasGroup \u003d groupName !\u003d null;\n    hasMode \u003d mode !\u003d null;\n    hasLimit \u003d limit !\u003d null;\n    hasMaxRelativeExpiry \u003d maxRelativeExpiry !\u003d null;\n    hasDefaultReplication \u003d defaultReplication !\u003d null;\n\n    int flags \u003d\n        (hasOwner ? 0x1 : 0) |\n        (hasGroup ? 0x2 : 0) |\n        (hasMode  ? 0x4 : 0) |\n        (hasLimit ? 0x8 : 0) |\n        (hasMaxRelativeExpiry ? 0x10 : 0) |\n        (hasDefaultReplication ? 0x20 : 0);\n\n    writeInt(flags, out);\n\n    if (hasOwner) {\n      writeString(ownerName, out);\n    }\n    if (hasGroup) {\n      writeString(groupName, out);\n    }\n    if (hasMode) {\n      mode.write(out);\n    }\n    if (hasLimit) {\n      writeLong(limit, out);\n    }\n    if (hasMaxRelativeExpiry) {\n      writeLong(maxRelativeExpiry, out);\n    }\n    if (hasDefaultReplication) {\n      writeShort(defaultReplication, out);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5636. Enforce a max TTL per cache pool (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 3:27 PM",
      "commitName": "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "17/12/13 10:47 AM",
      "commitNameOld": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,42 @@\n   public static void writeCachePoolInfo(DataOutputStream out, CachePoolInfo info)\n       throws IOException {\n     writeString(info.getPoolName(), out);\n \n     final String ownerName \u003d info.getOwnerName();\n     final String groupName \u003d info.getGroupName();\n     final Long limit \u003d info.getLimit();\n     final FsPermission mode \u003d info.getMode();\n+    final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n \n-    boolean hasOwner, hasGroup, hasMode, hasLimit;\n+    boolean hasOwner, hasGroup, hasMode, hasLimit, hasMaxRelativeExpiry;\n     hasOwner \u003d ownerName !\u003d null;\n     hasGroup \u003d groupName !\u003d null;\n     hasMode \u003d mode !\u003d null;\n     hasLimit \u003d limit !\u003d null;\n+    hasMaxRelativeExpiry \u003d maxRelativeExpiry !\u003d null;\n \n     int flags \u003d\n         (hasOwner ? 0x1 : 0) |\n         (hasGroup ? 0x2 : 0) |\n         (hasMode  ? 0x4 : 0) |\n-        (hasLimit ? 0x8 : 0);\n+        (hasLimit ? 0x8 : 0) |\n+        (hasMaxRelativeExpiry ? 0x10 : 0);\n+\n     writeInt(flags, out);\n \n     if (hasOwner) {\n       writeString(ownerName, out);\n     }\n     if (hasGroup) {\n       writeString(groupName, out);\n     }\n     if (hasMode) {\n       mode.write(out);\n     }\n     if (hasLimit) {\n       writeLong(limit, out);\n     }\n+    if (hasMaxRelativeExpiry) {\n+      writeLong(maxRelativeExpiry, out);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeCachePoolInfo(DataOutputStream out, CachePoolInfo info)\n      throws IOException {\n    writeString(info.getPoolName(), out);\n\n    final String ownerName \u003d info.getOwnerName();\n    final String groupName \u003d info.getGroupName();\n    final Long limit \u003d info.getLimit();\n    final FsPermission mode \u003d info.getMode();\n    final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n\n    boolean hasOwner, hasGroup, hasMode, hasLimit, hasMaxRelativeExpiry;\n    hasOwner \u003d ownerName !\u003d null;\n    hasGroup \u003d groupName !\u003d null;\n    hasMode \u003d mode !\u003d null;\n    hasLimit \u003d limit !\u003d null;\n    hasMaxRelativeExpiry \u003d maxRelativeExpiry !\u003d null;\n\n    int flags \u003d\n        (hasOwner ? 0x1 : 0) |\n        (hasGroup ? 0x2 : 0) |\n        (hasMode  ? 0x4 : 0) |\n        (hasLimit ? 0x8 : 0) |\n        (hasMaxRelativeExpiry ? 0x10 : 0);\n\n    writeInt(flags, out);\n\n    if (hasOwner) {\n      writeString(ownerName, out);\n    }\n    if (hasGroup) {\n      writeString(groupName, out);\n    }\n    if (hasMode) {\n      mode.write(out);\n    }\n    if (hasLimit) {\n      writeLong(limit, out);\n    }\n    if (hasMaxRelativeExpiry) {\n      writeLong(maxRelativeExpiry, out);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "991c453ca3ac141a3f286f74af8401f83c38b230": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 10:47 AM",
      "commitName": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,35 @@\n+  public static void writeCachePoolInfo(DataOutputStream out, CachePoolInfo info)\n+      throws IOException {\n+    writeString(info.getPoolName(), out);\n+\n+    final String ownerName \u003d info.getOwnerName();\n+    final String groupName \u003d info.getGroupName();\n+    final Long limit \u003d info.getLimit();\n+    final FsPermission mode \u003d info.getMode();\n+\n+    boolean hasOwner, hasGroup, hasMode, hasLimit;\n+    hasOwner \u003d ownerName !\u003d null;\n+    hasGroup \u003d groupName !\u003d null;\n+    hasMode \u003d mode !\u003d null;\n+    hasLimit \u003d limit !\u003d null;\n+\n+    int flags \u003d\n+        (hasOwner ? 0x1 : 0) |\n+        (hasGroup ? 0x2 : 0) |\n+        (hasMode  ? 0x4 : 0) |\n+        (hasLimit ? 0x8 : 0);\n+    writeInt(flags, out);\n+\n+    if (hasOwner) {\n+      writeString(ownerName, out);\n+    }\n+    if (hasGroup) {\n+      writeString(groupName, out);\n+    }\n+    if (hasMode) {\n+      mode.write(out);\n+    }\n+    if (hasLimit) {\n+      writeLong(limit, out);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeCachePoolInfo(DataOutputStream out, CachePoolInfo info)\n      throws IOException {\n    writeString(info.getPoolName(), out);\n\n    final String ownerName \u003d info.getOwnerName();\n    final String groupName \u003d info.getGroupName();\n    final Long limit \u003d info.getLimit();\n    final FsPermission mode \u003d info.getMode();\n\n    boolean hasOwner, hasGroup, hasMode, hasLimit;\n    hasOwner \u003d ownerName !\u003d null;\n    hasGroup \u003d groupName !\u003d null;\n    hasMode \u003d mode !\u003d null;\n    hasLimit \u003d limit !\u003d null;\n\n    int flags \u003d\n        (hasOwner ? 0x1 : 0) |\n        (hasGroup ? 0x2 : 0) |\n        (hasMode  ? 0x4 : 0) |\n        (hasLimit ? 0x8 : 0);\n    writeInt(flags, out);\n\n    if (hasOwner) {\n      writeString(ownerName, out);\n    }\n    if (hasGroup) {\n      writeString(groupName, out);\n    }\n    if (hasMode) {\n      mode.write(out);\n    }\n    if (hasLimit) {\n      writeLong(limit, out);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java"
    }
  }
}