{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientRMService.java",
  "functionName": "createNodeReports",
  "functionId": "createNodeReports___rmNode-RMNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
  "functionStartLine": 1080,
  "functionEndLine": 1101,
  "numCommitsSeen": 156,
  "timeTaken": 10398,
  "changeHistory": [
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4",
    "e0233c16ebd06bb3aabeb523cd17259008e243ef",
    "af8514eef297574240652672d048748100c97733",
    "453926397182078c65a4428eb5de5a90d6af6448",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "407cfa3b56a0645d64d2d9af305f6ef24307e775",
    "606114d6029758f2be130960b8fc3102457406ba",
    "c7d64769c1a72f2aab9958e33a7cf28d02612306",
    "69dd2844527f4d6fba99a13ed25538055e0613dd",
    "dcf9d475e0de05a2e1a7fe9239034c0a6d8a9456",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Ybodychange",
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2": "Ybodychange",
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4": "Ybodychange",
    "e0233c16ebd06bb3aabeb523cd17259008e243ef": "Ybodychange",
    "af8514eef297574240652672d048748100c97733": "Ybodychange",
    "453926397182078c65a4428eb5de5a90d6af6448": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "407cfa3b56a0645d64d2d9af305f6ef24307e775": "Ybodychange",
    "606114d6029758f2be130960b8fc3102457406ba": "Ybodychange",
    "c7d64769c1a72f2aab9958e33a7cf28d02612306": "Ybodychange",
    "69dd2844527f4d6fba99a13ed25538055e0613dd": "Ybodychange",
    "dcf9d475e0de05a2e1a7fe9239034c0a6d8a9456": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private NodeReport createNodeReports(RMNode rmNode) {\n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0, 0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n-    } \n+    }\n \n+    Set\u003cNodeAttribute\u003e attrs \u003d rmNode.getAllNodeAttributes();\n     NodeReport report \u003d\n         BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n             rmNode.getHttpAddress(), rmNode.getRackName(), used,\n             rmNode.getTotalCapability(), numContainers,\n             rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n             rmNode.getNodeLabels(), rmNode.getAggregatedContainersUtilization(),\n             rmNode.getNodeUtilization(), rmNode.getDecommissioningTimeout(),\n-            null);\n+            null, attrs);\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0, 0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    }\n\n    Set\u003cNodeAttribute\u003e attrs \u003d rmNode.getAllNodeAttributes();\n    NodeReport report \u003d\n        BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n            rmNode.getHttpAddress(), rmNode.getRackName(), used,\n            rmNode.getTotalCapability(), numContainers,\n            rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n            rmNode.getNodeLabels(), rmNode.getAggregatedContainersUtilization(),\n            rmNode.getNodeUtilization(), rmNode.getDecommissioningTimeout(),\n            null, attrs);\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6483. Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned to the AM. (Juan Rodriguez Hortala via asuresh)\n",
      "commitDate": "22/11/17 7:18 PM",
      "commitName": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "23/10/17 9:43 AM",
      "commitNameOld": "921338cd86e7215b0c4b1efdf2daf9449fb12c7b",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 30.44,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n-  private NodeReport createNodeReports(RMNode rmNode) {    \n+  private NodeReport createNodeReports(RMNode rmNode) {\n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0, 0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n \n     NodeReport report \u003d\n         BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n             rmNode.getHttpAddress(), rmNode.getRackName(), used,\n             rmNode.getTotalCapability(), numContainers,\n             rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n             rmNode.getNodeLabels(), rmNode.getAggregatedContainersUtilization(),\n-            rmNode.getNodeUtilization());\n+            rmNode.getNodeUtilization(), rmNode.getDecommissioningTimeout(),\n+            null);\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0, 0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n\n    NodeReport report \u003d\n        BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n            rmNode.getHttpAddress(), rmNode.getRackName(), used,\n            rmNode.getTotalCapability(), numContainers,\n            rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n            rmNode.getNodeLabels(), rmNode.getAggregatedContainersUtilization(),\n            rmNode.getNodeUtilization(), rmNode.getDecommissioningTimeout(),\n            null);\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4293. ResourceUtilization should be a part of yarn node CLI. (Sunil G via wangda)\n",
      "commitDate": "16/12/15 1:18 PM",
      "commitName": "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/11/15 5:19 PM",
      "commitNameOld": "8676a118a12165ae5a8b80a2a4596c133471ebc1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 22.83,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private NodeReport createNodeReports(RMNode rmNode) {    \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0, 0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n-    \n+\n     NodeReport report \u003d\n         BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n             rmNode.getHttpAddress(), rmNode.getRackName(), used,\n             rmNode.getTotalCapability(), numContainers,\n             rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n-            rmNode.getNodeLabels());\n+            rmNode.getNodeLabels(), rmNode.getAggregatedContainersUtilization(),\n+            rmNode.getNodeUtilization());\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0, 0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n\n    NodeReport report \u003d\n        BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n            rmNode.getHttpAddress(), rmNode.getRackName(), used,\n            rmNode.getTotalCapability(), numContainers,\n            rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n            rmNode.getNodeLabels(), rmNode.getAggregatedContainersUtilization(),\n            rmNode.getNodeUtilization());\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "e0233c16ebd06bb3aabeb523cd17259008e243ef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2698. Moved some node label APIs to be correctly placed in client protocol. Contributed by Wangda Tan.\n",
      "commitDate": "30/10/14 10:59 PM",
      "commitName": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/10/14 3:42 PM",
      "commitNameOld": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthorOld": "subru",
      "daysBetweenCommits": 27.3,
      "commitsBetweenForRepo": 238,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private NodeReport createNodeReports(RMNode rmNode) {    \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0, 0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n     \n-    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n-        rmNode.getState(),\n-        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n-        rmNode.getTotalCapability(), numContainers,\n-        rmNode.getHealthReport(),\n-        rmNode.getLastHealthReportTime());\n+    NodeReport report \u003d\n+        BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n+            rmNode.getHttpAddress(), rmNode.getRackName(), used,\n+            rmNode.getTotalCapability(), numContainers,\n+            rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n+            rmNode.getNodeLabels());\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0, 0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    \n    NodeReport report \u003d\n        BuilderUtils.newNodeReport(rmNode.getNodeID(), rmNode.getState(),\n            rmNode.getHttpAddress(), rmNode.getRackName(), used,\n            rmNode.getTotalCapability(), numContainers,\n            rmNode.getHealthReport(), rmNode.getLastHealthReportTime(),\n            rmNode.getNodeLabels());\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "af8514eef297574240652672d048748100c97733": {
      "type": "Ybodychange",
      "commitMessage": "YARN-686. Flatten NodeReport. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490827 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/06/13 1:59 PM",
      "commitName": "af8514eef297574240652672d048748100c97733",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "03/06/13 9:05 PM",
      "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.7,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private NodeReport createNodeReports(RMNode rmNode) {    \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0, 0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n     \n     NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n         rmNode.getState(),\n         rmNode.getHttpAddress(), rmNode.getRackName(), used,\n         rmNode.getTotalCapability(), numContainers,\n-        rmNode.getNodeHealthStatus());\n+        rmNode.getHealthReport(),\n+        rmNode.getLastHealthReportTime());\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0, 0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    \n    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n        rmNode.getState(),\n        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n        rmNode.getTotalCapability(), numContainers,\n        rmNode.getHealthReport(),\n        rmNode.getLastHealthReportTime());\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "453926397182078c65a4428eb5de5a90d6af6448": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2. Enhanced CapacityScheduler to account for CPU alongwith memory for multi-dimensional resource scheduling. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1430682 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/01/13 9:08 PM",
      "commitName": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "04/01/13 12:15 PM",
      "commitNameOld": "dd8fc7e499200476f44a3d1d38127f5c47c9eefb",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 4.37,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private NodeReport createNodeReports(RMNode rmNode) {    \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n-    Resource used \u003d BuilderUtils.newResource(0);\n+    Resource used \u003d BuilderUtils.newResource(0, 0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n     \n     NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n         rmNode.getState(),\n         rmNode.getHttpAddress(), rmNode.getRackName(), used,\n         rmNode.getTotalCapability(), numContainers,\n         rmNode.getNodeHealthStatus());\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0, 0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    \n    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n        rmNode.getState(),\n        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n        rmNode.getTotalCapability(), numContainers,\n        rmNode.getNodeHealthStatus());\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    \n    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n        rmNode.getState(),\n        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n        rmNode.getTotalCapability(), numContainers,\n        rmNode.getNodeHealthStatus());\n\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java"
      }
    },
    "407cfa3b56a0645d64d2d9af305f6ef24307e775": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3958. RM: Remove RMNodeState and replace it with NodeState (Bikas Saha via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1334043 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/12 8:47 AM",
      "commitName": "407cfa3b56a0645d64d2d9af305f6ef24307e775",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "03/05/12 11:35 AM",
      "commitNameOld": "48414b08277b86cdbc34ae36d7c4d204fd838294",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private NodeReport createNodeReports(RMNode rmNode) {    \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n     \n     NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n-        RMNodeState.toNodeState(rmNode.getState()),\n+        rmNode.getState(),\n         rmNode.getHttpAddress(), rmNode.getRackName(), used,\n         rmNode.getTotalCapability(), numContainers,\n         rmNode.getNodeHealthStatus());\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    \n    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n        rmNode.getState(),\n        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n        rmNode.getTotalCapability(), numContainers,\n        rmNode.getNodeHealthStatus());\n\n    return report;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "606114d6029758f2be130960b8fc3102457406ba": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3533. Add a channel between RM and AM to get information on nodes. Contributed by Bikas Saha. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305230 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 10:45 PM",
      "commitName": "606114d6029758f2be130960b8fc3102457406ba",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "22/03/12 3:20 PM",
      "commitNameOld": "4e5818698778bff9d2b1ba14297d8393e49927c7",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n-  private NodeReport createNodeReports(RMNode rmNode) {\n-    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n-    report.setNodeId(rmNode.getNodeID());\n-    report.setRackName(rmNode.getRackName());\n-    report.setCapability(rmNode.getTotalCapability());\n-    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n-    \n+  private NodeReport createNodeReports(RMNode rmNode) {    \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n     Resource used \u003d BuilderUtils.newResource(0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n-    report.setUsed(used);\n-    report.setNumContainers(numContainers);\n+    \n+    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n+        RMNodeState.toNodeState(rmNode.getState()),\n+        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n+        rmNode.getTotalCapability(), numContainers,\n+        rmNode.getNodeHealthStatus());\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    \n    NodeReport report \u003d BuilderUtils.newNodeReport(rmNode.getNodeID(),\n        RMNodeState.toNodeState(rmNode.getState()),\n        rmNode.getHttpAddress(), rmNode.getRackName(), used,\n        rmNode.getTotalCapability(), numContainers,\n        rmNode.getNodeHealthStatus());\n\n    return report;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "c7d64769c1a72f2aab9958e33a7cf28d02612306": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3759. ClassCastException thrown in -list-active-trackers when there are a few unhealthy nodes (vinodkv via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240598 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/12 12:03 PM",
      "commitName": "c7d64769c1a72f2aab9958e33a7cf28d02612306",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "10/01/12 5:50 PM",
      "commitNameOld": "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 24.76,
      "commitsBetweenForRepo": 150,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private NodeReport createNodeReports(RMNode rmNode) {\n     NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n     report.setNodeId(rmNode.getNodeID());\n     report.setRackName(rmNode.getRackName());\n     report.setCapability(rmNode.getTotalCapability());\n     report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n     \n     SchedulerNodeReport schedulerNodeReport \u003d \n         scheduler.getNodeReport(rmNode.getNodeID());\n-    Resource used \u003d Resources.none();\n+    Resource used \u003d BuilderUtils.newResource(0);\n     int numContainers \u003d 0;\n     if (schedulerNodeReport !\u003d null) {\n       used \u003d schedulerNodeReport.getUsedResource();\n       numContainers \u003d schedulerNodeReport.getNumContainers();\n     } \n     report.setUsed(used);\n     report.setNumContainers(numContainers);\n \n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n    report.setNodeId(rmNode.getNodeID());\n    report.setRackName(rmNode.getRackName());\n    report.setCapability(rmNode.getTotalCapability());\n    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d BuilderUtils.newResource(0);\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    report.setUsed(used);\n    report.setNumContainers(numContainers);\n\n    return report;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "69dd2844527f4d6fba99a13ed25538055e0613dd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3290. Fixed a NPE in ClientRMService.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190162 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 10:45 PM",
      "commitName": "69dd2844527f4d6fba99a13ed25538055e0613dd",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/10/11 11:07 PM",
      "commitNameOld": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 2.99,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,20 @@\n   private NodeReport createNodeReports(RMNode rmNode) {\n     NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n     report.setNodeId(rmNode.getNodeID());\n     report.setRackName(rmNode.getRackName());\n     report.setCapability(rmNode.getTotalCapability());\n     report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n-    org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport schedulerNodeReport \u003d scheduler\n-        .getNodeReport(rmNode.getNodeID());\n-    report.setUsed(schedulerNodeReport.getUsedResource());\n-    report.setNumContainers(schedulerNodeReport.getNumContainers());\n+    \n+    SchedulerNodeReport schedulerNodeReport \u003d \n+        scheduler.getNodeReport(rmNode.getNodeID());\n+    Resource used \u003d Resources.none();\n+    int numContainers \u003d 0;\n+    if (schedulerNodeReport !\u003d null) {\n+      used \u003d schedulerNodeReport.getUsedResource();\n+      numContainers \u003d schedulerNodeReport.getNumContainers();\n+    } \n+    report.setUsed(used);\n+    report.setNumContainers(numContainers);\n+\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n    report.setNodeId(rmNode.getNodeID());\n    report.setRackName(rmNode.getRackName());\n    report.setCapability(rmNode.getTotalCapability());\n    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n    \n    SchedulerNodeReport schedulerNodeReport \u003d \n        scheduler.getNodeReport(rmNode.getNodeID());\n    Resource used \u003d Resources.none();\n    int numContainers \u003d 0;\n    if (schedulerNodeReport !\u003d null) {\n      used \u003d schedulerNodeReport.getUsedResource();\n      numContainers \u003d schedulerNodeReport.getNumContainers();\n    } \n    report.setUsed(used);\n    report.setNumContainers(numContainers);\n\n    return report;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "dcf9d475e0de05a2e1a7fe9239034c0a6d8a9456": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3050. Add ability to get resource usage information for applications and nodes. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 3:19 PM",
      "commitName": "dcf9d475e0de05a2e1a7fe9239034c0a6d8a9456",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "27/09/11 9:20 PM",
      "commitNameOld": "eda0ad4fd0a42e40e6013c747c350a8e078d342f",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.75,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private NodeReport createNodeReports(RMNode rmNode) {\n     NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n     report.setNodeId(rmNode.getNodeID());\n     report.setRackName(rmNode.getRackName());\n     report.setCapability(rmNode.getTotalCapability());\n     report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n     org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport schedulerNodeReport \u003d scheduler\n         .getNodeReport(rmNode.getNodeID());\n-    report.setUsed(schedulerNodeReport.getUsedResources());\n+    report.setUsed(schedulerNodeReport.getUsedResource());\n     report.setNumContainers(schedulerNodeReport.getNumContainers());\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n    report.setNodeId(rmNode.getNodeID());\n    report.setRackName(rmNode.getRackName());\n    report.setCapability(rmNode.getTotalCapability());\n    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n    org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport schedulerNodeReport \u003d scheduler\n        .getNodeReport(rmNode.getNodeID());\n    report.setUsed(schedulerNodeReport.getUsedResource());\n    report.setNumContainers(schedulerNodeReport.getNumContainers());\n    return report;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n    report.setNodeId(rmNode.getNodeID());\n    report.setRackName(rmNode.getRackName());\n    report.setCapability(rmNode.getTotalCapability());\n    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n    org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport schedulerNodeReport \u003d scheduler\n        .getNodeReport(rmNode.getNodeID());\n    report.setUsed(schedulerNodeReport.getUsedResources());\n    report.setNumContainers(schedulerNodeReport.getNumContainers());\n    return report;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  private NodeReport createNodeReports(RMNode rmNode) {\n+    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n+    report.setNodeId(rmNode.getNodeID());\n+    report.setRackName(rmNode.getRackName());\n+    report.setCapability(rmNode.getTotalCapability());\n+    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n+    org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport schedulerNodeReport \u003d scheduler\n+        .getNodeReport(rmNode.getNodeID());\n+    report.setUsed(schedulerNodeReport.getUsedResources());\n+    report.setNumContainers(schedulerNodeReport.getNumContainers());\n+    return report;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private NodeReport createNodeReports(RMNode rmNode) {\n    NodeReport report \u003d recordFactory.newRecordInstance(NodeReport.class);\n    report.setNodeId(rmNode.getNodeID());\n    report.setRackName(rmNode.getRackName());\n    report.setCapability(rmNode.getTotalCapability());\n    report.setNodeHealthStatus(rmNode.getNodeHealthStatus());\n    org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport schedulerNodeReport \u003d scheduler\n        .getNodeReport(rmNode.getNodeID());\n    report.setUsed(schedulerNodeReport.getUsedResources());\n    report.setNumContainers(schedulerNodeReport.getNumContainers());\n    return report;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java"
    }
  }
}