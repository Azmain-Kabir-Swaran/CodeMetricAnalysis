{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHealthCheckerService.java",
  "functionName": "getHealthReport",
  "functionId": "getHealthReport",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
  "functionStartLine": 125,
  "functionEndLine": 130,
  "numCommitsSeen": 9,
  "timeTaken": 4413,
  "changeHistory": [
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
    "46940d92e2b17c627eb17a9d8fc6cec9c3715592",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb"
  ],
  "changeHistoryShort": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "46940d92e2b17c627eb17a9d8fc6cec9c3715592": "Ybodychange",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
      "commitDate": "15/12/19 8:28 AM",
      "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,6 @@\n-  String getHealthReport() {\n-    String scriptReport \u003d Strings.emptyToNull(\n-        nodeHealthScriptRunner \u003d\u003d null ? null :\n-        nodeHealthScriptRunner.getHealthReport());\n-    String discReport \u003d\n-        Strings.emptyToNull(\n-            dirsHandler.getDisksHealthReport(false));\n-    String exceptionReport \u003d Strings.emptyToNull(\n-        nodeHealthException \u003d\u003d null ? null :\n-        nodeHealthException.getMessage());\n-\n-    return Joiner.on(SEPARATOR).skipNulls()\n-        .join(scriptReport, discReport, exceptionReport);\n+  public String getHealthReport() {\n+    ArrayList\u003cString\u003e reports \u003d reporters.stream()\n+        .map(reporter -\u003e Strings.emptyToNull(reporter.getHealthReport()))\n+        .collect(Collectors.toCollection(ArrayList::new));\n+    return Joiner.on(SEPARATOR).skipNulls().join(reports);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getHealthReport() {\n    ArrayList\u003cString\u003e reports \u003d reporters.stream()\n        .map(reporter -\u003e Strings.emptyToNull(reporter.getHealthReport()))\n        .collect(Collectors.toCollection(ArrayList::new));\n    return Joiner.on(SEPARATOR).skipNulls().join(reports);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
            "oldMethodName": "getHealthReport",
            "newMethodName": "getHealthReport"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,6 @@\n-  String getHealthReport() {\n-    String scriptReport \u003d Strings.emptyToNull(\n-        nodeHealthScriptRunner \u003d\u003d null ? null :\n-        nodeHealthScriptRunner.getHealthReport());\n-    String discReport \u003d\n-        Strings.emptyToNull(\n-            dirsHandler.getDisksHealthReport(false));\n-    String exceptionReport \u003d Strings.emptyToNull(\n-        nodeHealthException \u003d\u003d null ? null :\n-        nodeHealthException.getMessage());\n-\n-    return Joiner.on(SEPARATOR).skipNulls()\n-        .join(scriptReport, discReport, exceptionReport);\n+  public String getHealthReport() {\n+    ArrayList\u003cString\u003e reports \u003d reporters.stream()\n+        .map(reporter -\u003e Strings.emptyToNull(reporter.getHealthReport()))\n+        .collect(Collectors.toCollection(ArrayList::new));\n+    return Joiner.on(SEPARATOR).skipNulls().join(reports);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getHealthReport() {\n    ArrayList\u003cString\u003e reports \u003d reporters.stream()\n        .map(reporter -\u003e Strings.emptyToNull(reporter.getHealthReport()))\n        .collect(Collectors.toCollection(ArrayList::new));\n    return Joiner.on(SEPARATOR).skipNulls().join(reports);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,6 @@\n-  String getHealthReport() {\n-    String scriptReport \u003d Strings.emptyToNull(\n-        nodeHealthScriptRunner \u003d\u003d null ? null :\n-        nodeHealthScriptRunner.getHealthReport());\n-    String discReport \u003d\n-        Strings.emptyToNull(\n-            dirsHandler.getDisksHealthReport(false));\n-    String exceptionReport \u003d Strings.emptyToNull(\n-        nodeHealthException \u003d\u003d null ? null :\n-        nodeHealthException.getMessage());\n-\n-    return Joiner.on(SEPARATOR).skipNulls()\n-        .join(scriptReport, discReport, exceptionReport);\n+  public String getHealthReport() {\n+    ArrayList\u003cString\u003e reports \u003d reporters.stream()\n+        .map(reporter -\u003e Strings.emptyToNull(reporter.getHealthReport()))\n+        .collect(Collectors.toCollection(ArrayList::new));\n+    return Joiner.on(SEPARATOR).skipNulls().join(reports);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getHealthReport() {\n    ArrayList\u003cString\u003e reports \u003d reporters.stream()\n        .map(reporter -\u003e Strings.emptyToNull(reporter.getHealthReport()))\n        .collect(Collectors.toCollection(ArrayList::new));\n    return Joiner.on(SEPARATOR).skipNulls().join(reports);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
          "extendedDetails": {}
        }
      ]
    },
    "46940d92e2b17c627eb17a9d8fc6cec9c3715592": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6302. Fail the node if Linux Container Executor is not configured properly\n(Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "19/04/17 12:23 PM",
      "commitName": "46940d92e2b17c627eb17a9d8fc6cec9c3715592",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "04/05/15 3:49 PM",
      "commitNameOld": "71f4de220c74bf2c90630bd0442979d92380d304",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 715.86,
      "commitsBetweenForRepo": 5054,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,14 @@\n   String getHealthReport() {\n-    String scriptReport \u003d (nodeHealthScriptRunner \u003d\u003d null) ? \"\"\n-        : nodeHealthScriptRunner.getHealthReport();\n-    if (scriptReport.equals(\"\")) {\n-      return dirsHandler.getDisksHealthReport(false);\n-    } else {\n-      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport(false));\n-    }\n+    String scriptReport \u003d Strings.emptyToNull(\n+        nodeHealthScriptRunner \u003d\u003d null ? null :\n+        nodeHealthScriptRunner.getHealthReport());\n+    String discReport \u003d\n+        Strings.emptyToNull(\n+            dirsHandler.getDisksHealthReport(false));\n+    String exceptionReport \u003d Strings.emptyToNull(\n+        nodeHealthException \u003d\u003d null ? null :\n+        nodeHealthException.getMessage());\n+\n+    return Joiner.on(SEPARATOR).skipNulls()\n+        .join(scriptReport, discReport, exceptionReport);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String getHealthReport() {\n    String scriptReport \u003d Strings.emptyToNull(\n        nodeHealthScriptRunner \u003d\u003d null ? null :\n        nodeHealthScriptRunner.getHealthReport());\n    String discReport \u003d\n        Strings.emptyToNull(\n            dirsHandler.getDisksHealthReport(false));\n    String exceptionReport \u003d Strings.emptyToNull(\n        nodeHealthException \u003d\u003d null ? null :\n        nodeHealthException.getMessage());\n\n    return Joiner.on(SEPARATOR).skipNulls()\n        .join(scriptReport, discReport, exceptionReport);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
      "extendedDetails": {}
    },
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": {
      "type": "Ybodychange",
      "commitMessage": "YARN-90. NodeManager should identify failed disks becoming good again. Contributed by Varun Vasudev\n",
      "commitDate": "21/10/14 10:31 AM",
      "commitName": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 491.45,
      "commitsBetweenForRepo": 3562,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   String getHealthReport() {\n     String scriptReport \u003d (nodeHealthScriptRunner \u003d\u003d null) ? \"\"\n         : nodeHealthScriptRunner.getHealthReport();\n     if (scriptReport.equals(\"\")) {\n-      return dirsHandler.getDisksHealthReport();\n+      return dirsHandler.getDisksHealthReport(false);\n     } else {\n-      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport());\n+      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport(false));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String getHealthReport() {\n    String scriptReport \u003d (nodeHealthScriptRunner \u003d\u003d null) ? \"\"\n        : nodeHealthScriptRunner.getHealthReport();\n    if (scriptReport.equals(\"\")) {\n      return dirsHandler.getDisksHealthReport(false);\n    } else {\n      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport(false));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  String getHealthReport() {\n    String scriptReport \u003d (nodeHealthScriptRunner \u003d\u003d null) ? \"\"\n        : nodeHealthScriptRunner.getHealthReport();\n    if (scriptReport.equals(\"\")) {\n      return dirsHandler.getDisksHealthReport();\n    } else {\n      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,9 @@\n+  String getHealthReport() {\n+    String scriptReport \u003d (nodeHealthScriptRunner \u003d\u003d null) ? \"\"\n+        : nodeHealthScriptRunner.getHealthReport();\n+    if (scriptReport.equals(\"\")) {\n+      return dirsHandler.getDisksHealthReport();\n+    } else {\n+      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String getHealthReport() {\n    String scriptReport \u003d (nodeHealthScriptRunner \u003d\u003d null) ? \"\"\n        : nodeHealthScriptRunner.getHealthReport();\n    if (scriptReport.equals(\"\")) {\n      return dirsHandler.getDisksHealthReport();\n    } else {\n      return scriptReport.concat(SEPARATOR + dirsHandler.getDisksHealthReport());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java"
    }
  }
}