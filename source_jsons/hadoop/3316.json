{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "URLConnectionFactory.java",
  "functionName": "openConnection",
  "functionId": "openConnection___url-URL__isSpnego-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
  "functionStartLine": 179,
  "functionEndLine": 195,
  "numCommitsSeen": 20,
  "timeTaken": 2851,
  "changeHistory": [
    "39285e6a1978ea5e53bdc1b0aef62421382124a8",
    "6ee0539ede78b640f01c5eac18ded161182a7835",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
    "122cad6aec5839d8d515c5008425ecb34f2fa56b",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "500e6a0f46d14a591d0ec082b6d26ee59bdfdf76",
    "43fa41fdeee53471e9aa34c89f58e53e8aa164e5",
    "1387fb1394bb0b7241875b2c19952504aa7f60de"
  ],
  "changeHistoryShort": {
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": "Ybodychange",
    "6ee0539ede78b640f01c5eac18ded161182a7835": "Ybodychange",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": "Ybodychange",
    "122cad6aec5839d8d515c5008425ecb34f2fa56b": "Ybodychange",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "500e6a0f46d14a591d0ec082b6d26ee59bdfdf76": "Ybodychange",
    "43fa41fdeee53471e9aa34c89f58e53e8aa164e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "1387fb1394bb0b7241875b2c19952504aa7f60de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8971. Remove guards when calling LOG.debug() and LOG.trace() in client package. Contributed by Mingliang Liu.\n",
      "commitDate": "29/09/15 5:52 PM",
      "commitName": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:51 PM",
      "commitNameOld": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n     if (isSpnego) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"open AuthenticatedURL connection {}\", url);\n-      }\n+      LOG.debug(\"open AuthenticatedURL connection {}\", url);\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n       return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n           connConfigurator).openConnection(url, authToken);\n     } else {\n       LOG.debug(\"open URL connection\");\n       URLConnection connection \u003d url.openConnection();\n       if (connection instanceof HttpURLConnection) {\n         connConfigurator.configure((HttpURLConnection) connection);\n       }\n       return connection;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      LOG.debug(\"open AuthenticatedURL connection {}\", url);\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n          connConfigurator).openConnection(url, authToken);\n    } else {\n      LOG.debug(\"open URL connection\");\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "extendedDetails": {}
    },
    "6ee0539ede78b640f01c5eac18ded161182a7835": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\"\n\nThis reverts commit d5a9a3daa0224249221ffa7b8bd5751ab2feca56.\n",
      "commitDate": "29/09/15 5:51 PM",
      "commitName": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:48 PM",
      "commitNameOld": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n     if (isSpnego) {\n-      LOG.debug(\"open AuthenticatedURL connection {}\", url);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"open AuthenticatedURL connection {}\", url);\n+      }\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n       return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n           connConfigurator).openConnection(url, authToken);\n     } else {\n       LOG.debug(\"open URL connection\");\n       URLConnection connection \u003d url.openConnection();\n       if (connection instanceof HttpURLConnection) {\n         connConfigurator.configure((HttpURLConnection) connection);\n       }\n       return connection;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection {}\", url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n          connConfigurator).openConnection(url, authToken);\n    } else {\n      LOG.debug(\"open URL connection\");\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "extendedDetails": {}
    },
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "29/09/15 5:48 PM",
      "commitName": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/08/15 6:37 PM",
      "commitNameOld": "837fb75e8e03b2f016bcea2f4605106a5022491c",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 30.97,
      "commitsBetweenForRepo": 211,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n     if (isSpnego) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"open AuthenticatedURL connection {}\", url);\n-      }\n+      LOG.debug(\"open AuthenticatedURL connection {}\", url);\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n       return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n           connConfigurator).openConnection(url, authToken);\n     } else {\n       LOG.debug(\"open URL connection\");\n       URLConnection connection \u003d url.openConnection();\n       if (connection instanceof HttpURLConnection) {\n         connConfigurator.configure((HttpURLConnection) connection);\n       }\n       return connection;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      LOG.debug(\"open AuthenticatedURL connection {}\", url);\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n          connConfigurator).openConnection(url, authToken);\n    } else {\n      LOG.debug(\"open URL connection\");\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "extendedDetails": {}
    },
    "122cad6aec5839d8d515c5008425ecb34f2fa56b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6564. Use slf4j instead of common-logging in hdfs-client. Contributed by Rakesh R.\n",
      "commitDate": "23/06/15 11:41 AM",
      "commitName": "122cad6aec5839d8d515c5008425ecb34f2fa56b",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 5:33 PM",
      "commitNameOld": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 60.76,
      "commitsBetweenForRepo": 543,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n   public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n     if (isSpnego) {\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"open AuthenticatedURL connection\" + url);\n+        LOG.debug(\"open AuthenticatedURL connection {}\", url);\n       }\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n       return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n           connConfigurator).openConnection(url, authToken);\n     } else {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"open URL connection\");\n-      }\n+      LOG.debug(\"open URL connection\");\n       URLConnection connection \u003d url.openConnection();\n       if (connection instanceof HttpURLConnection) {\n         connConfigurator.configure((HttpURLConnection) connection);\n       }\n       return connection;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection {}\", url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n          connConfigurator).openConnection(url, authToken);\n    } else {\n      LOG.debug(\"open URL connection\");\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "extendedDetails": {}
    },
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection\" + url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n          connConfigurator).openConnection(url, authToken);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open URL connection\");\n      }\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java"
      }
    },
    "500e6a0f46d14a591d0ec082b6d26ee59bdfdf76": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7798. Checkpointing failure caused by shared KerberosAuthenticator. (Chengbing Liu via yliu)\n",
      "commitDate": "16/02/15 3:46 PM",
      "commitName": "500e6a0f46d14a591d0ec082b6d26ee59bdfdf76",
      "commitAuthor": "yliu",
      "commitDateOld": "25/11/13 5:16 PM",
      "commitNameOld": "d8a23834614581a292aad214dddcbcc4bbe86d27",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 447.94,
      "commitsBetweenForRepo": 3455,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n     if (isSpnego) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"open AuthenticatedURL connection\" + url);\n       }\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n-      return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n-          authToken);\n+      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n+          connConfigurator).openConnection(url, authToken);\n     } else {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"open URL connection\");\n       }\n       URLConnection connection \u003d url.openConnection();\n       if (connection instanceof HttpURLConnection) {\n         connConfigurator.configure((HttpURLConnection) connection);\n       }\n       return connection;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection\" + url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(new KerberosUgiAuthenticator(),\n          connConfigurator).openConnection(url, authToken);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open URL connection\");\n      }\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
      "extendedDetails": {}
    },
    "43fa41fdeee53471e9aa34c89f58e53e8aa164e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5506. Use URLConnectionFactory in DelegationTokenFetcher. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542011 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 10:40 AM",
      "commitName": "43fa41fdeee53471e9aa34c89f58e53e8aa164e5",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5506. Use URLConnectionFactory in DelegationTokenFetcher. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542011 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/11/13 10:40 AM",
          "commitName": "43fa41fdeee53471e9aa34c89f58e53e8aa164e5",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "23/10/13 1:48 PM",
          "commitNameOld": "1387fb1394bb0b7241875b2c19952504aa7f60de",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 21.91,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n-  public URLConnection openConnection(HttpOpParam.Op op, URL url)\n+  public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n-    if (op.getRequireAuth()) {\n+    if (isSpnego) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"open AuthenticatedURL connection\" + url);\n       }\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n       return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n           authToken);\n     } else {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"open URL connection\");\n       }\n-      return openConnection(url);\n+      URLConnection connection \u003d url.openConnection();\n+      if (connection instanceof HttpURLConnection) {\n+        connConfigurator.configure((HttpURLConnection) connection);\n+      }\n+      return connection;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection\" + url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n          authToken);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open URL connection\");\n      }\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
          "extendedDetails": {
            "oldValue": "[op-HttpOpParam.Op, url-URL]",
            "newValue": "[url-URL, isSpnego-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5506. Use URLConnectionFactory in DelegationTokenFetcher. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542011 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/11/13 10:40 AM",
          "commitName": "43fa41fdeee53471e9aa34c89f58e53e8aa164e5",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "23/10/13 1:48 PM",
          "commitNameOld": "1387fb1394bb0b7241875b2c19952504aa7f60de",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 21.91,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n-  public URLConnection openConnection(HttpOpParam.Op op, URL url)\n+  public URLConnection openConnection(URL url, boolean isSpnego)\n       throws IOException, AuthenticationException {\n-    if (op.getRequireAuth()) {\n+    if (isSpnego) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"open AuthenticatedURL connection\" + url);\n       }\n       UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n       final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n       return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n           authToken);\n     } else {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"open URL connection\");\n       }\n-      return openConnection(url);\n+      URLConnection connection \u003d url.openConnection();\n+      if (connection instanceof HttpURLConnection) {\n+        connConfigurator.configure((HttpURLConnection) connection);\n+      }\n+      return connection;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public URLConnection openConnection(URL url, boolean isSpnego)\n      throws IOException, AuthenticationException {\n    if (isSpnego) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection\" + url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n          authToken);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open URL connection\");\n      }\n      URLConnection connection \u003d url.openConnection();\n      if (connection instanceof HttpURLConnection) {\n        connConfigurator.configure((HttpURLConnection) connection);\n      }\n      return connection;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "1387fb1394bb0b7241875b2c19952504aa7f60de": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5363. Refactor WebHdfsFileSystem: move SPENGO-authenticated connection creation to URLConnectionFactory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/10/13 1:48 PM",
      "commitName": "1387fb1394bb0b7241875b2c19952504aa7f60de",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,17 @@\n+  public URLConnection openConnection(HttpOpParam.Op op, URL url)\n+      throws IOException, AuthenticationException {\n+    if (op.getRequireAuth()) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"open AuthenticatedURL connection\" + url);\n+      }\n+      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n+      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n+      return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n+          authToken);\n+    } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"open URL connection\");\n+      }\n+      return openConnection(url);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public URLConnection openConnection(HttpOpParam.Op op, URL url)\n      throws IOException, AuthenticationException {\n    if (op.getRequireAuth()) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open AuthenticatedURL connection\" + url);\n      }\n      UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n      final AuthenticatedURL.Token authToken \u003d new AuthenticatedURL.Token();\n      return new AuthenticatedURL(AUTH, connConfigurator).openConnection(url,\n          authToken);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"open URL connection\");\n      }\n      return openConnection(url);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/URLConnectionFactory.java"
    }
  }
}