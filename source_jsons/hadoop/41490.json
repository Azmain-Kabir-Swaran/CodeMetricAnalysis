{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "createPreemptionThread",
  "functionId": "createPreemptionThread",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1487,
  "functionEndLine": 1491,
  "numCommitsSeen": 226,
  "timeTaken": 2928,
  "changeHistory": [
    "74dd14225059322825f706120aa57cf673820daf",
    "10468529a9b858bd945e7ecb063c9c1438efa474"
  ],
  "changeHistoryShort": {
    "74dd14225059322825f706120aa57cf673820daf": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Yintroduced"
  },
  "changeHistoryDetails": {
    "74dd14225059322825f706120aa57cf673820daf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5798. Set UncaughtExceptionHandler for all FairScheduler threads. (Yufei Gu via kasha)\n",
      "commitDate": "16/02/17 12:03 AM",
      "commitName": "74dd14225059322825f706120aa57cf673820daf",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "15/02/17 11:16 PM",
      "commitNameOld": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,5 @@\n   protected void createPreemptionThread() {\n     preemptionThread \u003d new FSPreemptionThread(this);\n+    preemptionThread.setUncaughtExceptionHandler(\n+        new RMCriticalThreadUncaughtExceptionHandler(rmContext));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void createPreemptionThread() {\n    preemptionThread \u003d new FSPreemptionThread(this);\n    preemptionThread.setUncaughtExceptionHandler(\n        new RMCriticalThreadUncaughtExceptionHandler(rmContext));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,3 @@\n+  protected void createPreemptionThread() {\n+    preemptionThread \u003d new FSPreemptionThread(this);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void createPreemptionThread() {\n    preemptionThread \u003d new FSPreemptionThread(this);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}