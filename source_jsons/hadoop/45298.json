{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemBasedConfigurationProvider.java",
  "functionName": "initInternal",
  "functionId": "initInternal___bootstrapConf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/FileSystemBasedConfigurationProvider.java",
  "functionStartLine": 72,
  "functionEndLine": 89,
  "numCommitsSeen": 9,
  "timeTaken": 1924,
  "changeHistory": [
    "717c853873dd3b9112f5c15059a24655b8654607",
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
    "ca72e11158047f3d00db9e9e61c632e757383287"
  ],
  "changeHistoryShort": {
    "717c853873dd3b9112f5c15059a24655b8654607": "Ybodychange",
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d": "Ymultichange(Yparameterchange,Ybodychange)",
    "ca72e11158047f3d00db9e9e61c632e757383287": "Yintroduced"
  },
  "changeHistoryDetails": {
    "717c853873dd3b9112f5c15059a24655b8654607": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9755. Fixed RM failing to start when FileSystemBasedConfigurationProvider is configured.\n           Contributed by Prabhu Joseph\n",
      "commitDate": "27/08/19 10:14 AM",
      "commitName": "717c853873dd3b9112f5c15059a24655b8654607",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 176.39,
      "commitsBetweenForRepo": 1344,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,18 @@\n   public synchronized void initInternal(Configuration bootstrapConf)\n       throws Exception {\n+    Configuration conf \u003d new Configuration(bootstrapConf);\n     configDir \u003d\n-        new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n+        new Path(conf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n             YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n-    fs \u003d configDir.getFileSystem(bootstrapConf);\n+    String scheme \u003d configDir.toUri().getScheme();\n+    if (scheme \u003d\u003d null) {\n+      scheme \u003d FileSystem.getDefaultUri(conf).getScheme();\n+    }\n+    if (scheme !\u003d null) {\n+      String disableCacheName \u003d String.format(\"fs.%s.impl.disable.cache\",\n+          scheme);\n+      conf.setBoolean(disableCacheName, true);\n+    }\n+    fs \u003d configDir.getFileSystem(conf);\n     fs.mkdirs(configDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void initInternal(Configuration bootstrapConf)\n      throws Exception {\n    Configuration conf \u003d new Configuration(bootstrapConf);\n    configDir \u003d\n        new Path(conf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n            YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n    String scheme \u003d configDir.toUri().getScheme();\n    if (scheme \u003d\u003d null) {\n      scheme \u003d FileSystem.getDefaultUri(conf).getScheme();\n    }\n    if (scheme !\u003d null) {\n      String disableCacheName \u003d String.format(\"fs.%s.impl.disable.cache\",\n          scheme);\n      conf.setBoolean(disableCacheName, true);\n    }\n    fs \u003d configDir.getFileSystem(conf);\n    fs.mkdirs(configDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/FileSystemBasedConfigurationProvider.java",
      "extendedDetails": {}
    },
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "03/03/14 11:41 AM",
      "commitNameOld": "a60434368cdf0fd119d024c2ed10942abdb2e7f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 987.97,
      "commitsBetweenForRepo": 7671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,8 @@\n   public synchronized void initInternal(Configuration bootstrapConf)\n       throws Exception {\n     configDir \u003d\n         new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n             YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n     fs \u003d configDir.getFileSystem(bootstrapConf);\n-    if (!fs.exists(configDir)) {\n-      fs.mkdirs(configDir);\n-    }\n+    fs.mkdirs(configDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void initInternal(Configuration bootstrapConf)\n      throws Exception {\n    configDir \u003d\n        new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n            YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n    fs \u003d configDir.getFileSystem(bootstrapConf);\n    fs.mkdirs(configDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/FileSystemBasedConfigurationProvider.java",
      "extendedDetails": {}
    },
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1459. Changed ResourceManager to depend its service initialization on the configuration-provider mechanism during startup too. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566791 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 2:50 PM",
      "commitName": "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1459. Changed ResourceManager to depend its service initialization on the configuration-provider mechanism during startup too. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566791 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/02/14 2:50 PM",
          "commitName": "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/02/14 11:07 AM",
          "commitNameOld": "ca72e11158047f3d00db9e9e61c632e757383287",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.15,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-  public synchronized void initInternal(Configuration conf) throws Exception {\n+  public synchronized void initInternal(Configuration bootstrapConf)\n+      throws Exception {\n     configDir \u003d\n-        new Path(conf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n+        new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n             YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n-    fs \u003d configDir.getFileSystem(conf);\n+    fs \u003d configDir.getFileSystem(bootstrapConf);\n     if (!fs.exists(configDir)) {\n       fs.mkdirs(configDir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initInternal(Configuration bootstrapConf)\n      throws Exception {\n    configDir \u003d\n        new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n            YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n    fs \u003d configDir.getFileSystem(bootstrapConf);\n    if (!fs.exists(configDir)) {\n      fs.mkdirs(configDir);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/FileSystemBasedConfigurationProvider.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[bootstrapConf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1459. Changed ResourceManager to depend its service initialization on the configuration-provider mechanism during startup too. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566791 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/02/14 2:50 PM",
          "commitName": "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/02/14 11:07 AM",
          "commitNameOld": "ca72e11158047f3d00db9e9e61c632e757383287",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.15,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-  public synchronized void initInternal(Configuration conf) throws Exception {\n+  public synchronized void initInternal(Configuration bootstrapConf)\n+      throws Exception {\n     configDir \u003d\n-        new Path(conf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n+        new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n             YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n-    fs \u003d configDir.getFileSystem(conf);\n+    fs \u003d configDir.getFileSystem(bootstrapConf);\n     if (!fs.exists(configDir)) {\n       fs.mkdirs(configDir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initInternal(Configuration bootstrapConf)\n      throws Exception {\n    configDir \u003d\n        new Path(bootstrapConf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n            YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n    fs \u003d configDir.getFileSystem(bootstrapConf);\n    if (!fs.exists(configDir)) {\n      fs.mkdirs(configDir);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/FileSystemBasedConfigurationProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "ca72e11158047f3d00db9e9e61c632e757383287": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1611. Introduced the concept of a configuration provider which can be used by ResourceManager to read configuration locally or from remote systems so as to help RM failover. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564002 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/14 11:07 AM",
      "commitName": "ca72e11158047f3d00db9e9e61c632e757383287",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+  public synchronized void initInternal(Configuration conf) throws Exception {\n+    configDir \u003d\n+        new Path(conf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n+            YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n+    fs \u003d configDir.getFileSystem(conf);\n+    if (!fs.exists(configDir)) {\n+      fs.mkdirs(configDir);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void initInternal(Configuration conf) throws Exception {\n    configDir \u003d\n        new Path(conf.get(YarnConfiguration.FS_BASED_RM_CONF_STORE,\n            YarnConfiguration.DEFAULT_FS_BASED_RM_CONF_STORE));\n    fs \u003d configDir.getFileSystem(conf);\n    if (!fs.exists(configDir)) {\n      fs.mkdirs(configDir);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/FileSystemBasedConfigurationProvider.java"
    }
  }
}