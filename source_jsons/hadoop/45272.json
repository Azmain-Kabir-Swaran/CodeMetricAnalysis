{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "validateContainerResourceChangeRequest",
  "functionId": "validateContainerResourceChangeRequest___updateType-ContainerUpdateType__containerId-ContainerId__original-Resource__target-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 861,
  "functionEndLine": 884,
  "numCommitsSeen": 91,
  "timeTaken": 2860,
  "changeHistory": [
    "aaf106fde35ec97e2e2ea4d7a67434038c4273ac",
    "7ff280fca9af45b98cee2336e78803da46b0f8a5"
  ],
  "changeHistoryShort": {
    "aaf106fde35ec97e2e2ea4d7a67434038c4273ac": "Ymultichange(Yparameterchange,Ybodychange)",
    "7ff280fca9af45b98cee2336e78803da46b0f8a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aaf106fde35ec97e2e2ea4d7a67434038c4273ac": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5966. AMRMClient changes to support ExecutionType update. (asuresh)\n",
      "commitDate": "14/02/17 6:09 AM",
      "commitName": "aaf106fde35ec97e2e2ea4d7a67434038c4273ac",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5966. AMRMClient changes to support ExecutionType update. (asuresh)\n",
          "commitDate": "14/02/17 6:09 AM",
          "commitName": "aaf106fde35ec97e2e2ea4d7a67434038c4273ac",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "11/11/16 1:34 PM",
          "commitNameOld": "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 94.69,
          "commitsBetweenForRepo": 465,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,24 @@\n   private void validateContainerResourceChangeRequest(\n-      ContainerId containerId, Resource original, Resource target) {\n+      ContainerUpdateType updateType, ContainerId containerId,\n+      Resource original, Resource target) {\n     Preconditions.checkArgument(containerId !\u003d null,\n         \"ContainerId cannot be null\");\n     Preconditions.checkArgument(original !\u003d null,\n         \"Original resource capability cannot be null\");\n     Preconditions.checkArgument(!Resources.equals(Resources.none(), original)\n             \u0026\u0026 Resources.fitsIn(Resources.none(), original),\n         \"Original resource capability must be greater than 0\");\n     Preconditions.checkArgument(target !\u003d null,\n         \"Target resource capability cannot be null\");\n     Preconditions.checkArgument(!Resources.equals(Resources.none(), target)\n             \u0026\u0026 Resources.fitsIn(Resources.none(), target),\n         \"Target resource capability must be greater than 0\");\n+    if (ContainerUpdateType.DECREASE_RESOURCE \u003d\u003d updateType) {\n+      Preconditions.checkArgument(Resources.fitsIn(target, original),\n+          \"Target resource capability must fit in Original capability\");\n+    } else {\n+      Preconditions.checkArgument(Resources.fitsIn(original, target),\n+          \"Target resource capability must be more than Original capability\");\n+\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void validateContainerResourceChangeRequest(\n      ContainerUpdateType updateType, ContainerId containerId,\n      Resource original, Resource target) {\n    Preconditions.checkArgument(containerId !\u003d null,\n        \"ContainerId cannot be null\");\n    Preconditions.checkArgument(original !\u003d null,\n        \"Original resource capability cannot be null\");\n    Preconditions.checkArgument(!Resources.equals(Resources.none(), original)\n            \u0026\u0026 Resources.fitsIn(Resources.none(), original),\n        \"Original resource capability must be greater than 0\");\n    Preconditions.checkArgument(target !\u003d null,\n        \"Target resource capability cannot be null\");\n    Preconditions.checkArgument(!Resources.equals(Resources.none(), target)\n            \u0026\u0026 Resources.fitsIn(Resources.none(), target),\n        \"Target resource capability must be greater than 0\");\n    if (ContainerUpdateType.DECREASE_RESOURCE \u003d\u003d updateType) {\n      Preconditions.checkArgument(Resources.fitsIn(target, original),\n          \"Target resource capability must fit in Original capability\");\n    } else {\n      Preconditions.checkArgument(Resources.fitsIn(original, target),\n          \"Target resource capability must be more than Original capability\");\n\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, original-Resource, target-Resource]",
            "newValue": "[updateType-ContainerUpdateType, containerId-ContainerId, original-Resource, target-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5966. AMRMClient changes to support ExecutionType update. (asuresh)\n",
          "commitDate": "14/02/17 6:09 AM",
          "commitName": "aaf106fde35ec97e2e2ea4d7a67434038c4273ac",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "11/11/16 1:34 PM",
          "commitNameOld": "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 94.69,
          "commitsBetweenForRepo": 465,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,24 @@\n   private void validateContainerResourceChangeRequest(\n-      ContainerId containerId, Resource original, Resource target) {\n+      ContainerUpdateType updateType, ContainerId containerId,\n+      Resource original, Resource target) {\n     Preconditions.checkArgument(containerId !\u003d null,\n         \"ContainerId cannot be null\");\n     Preconditions.checkArgument(original !\u003d null,\n         \"Original resource capability cannot be null\");\n     Preconditions.checkArgument(!Resources.equals(Resources.none(), original)\n             \u0026\u0026 Resources.fitsIn(Resources.none(), original),\n         \"Original resource capability must be greater than 0\");\n     Preconditions.checkArgument(target !\u003d null,\n         \"Target resource capability cannot be null\");\n     Preconditions.checkArgument(!Resources.equals(Resources.none(), target)\n             \u0026\u0026 Resources.fitsIn(Resources.none(), target),\n         \"Target resource capability must be greater than 0\");\n+    if (ContainerUpdateType.DECREASE_RESOURCE \u003d\u003d updateType) {\n+      Preconditions.checkArgument(Resources.fitsIn(target, original),\n+          \"Target resource capability must fit in Original capability\");\n+    } else {\n+      Preconditions.checkArgument(Resources.fitsIn(original, target),\n+          \"Target resource capability must be more than Original capability\");\n+\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void validateContainerResourceChangeRequest(\n      ContainerUpdateType updateType, ContainerId containerId,\n      Resource original, Resource target) {\n    Preconditions.checkArgument(containerId !\u003d null,\n        \"ContainerId cannot be null\");\n    Preconditions.checkArgument(original !\u003d null,\n        \"Original resource capability cannot be null\");\n    Preconditions.checkArgument(!Resources.equals(Resources.none(), original)\n            \u0026\u0026 Resources.fitsIn(Resources.none(), original),\n        \"Original resource capability must be greater than 0\");\n    Preconditions.checkArgument(target !\u003d null,\n        \"Target resource capability cannot be null\");\n    Preconditions.checkArgument(!Resources.equals(Resources.none(), target)\n            \u0026\u0026 Resources.fitsIn(Resources.none(), target),\n        \"Target resource capability must be greater than 0\");\n    if (ContainerUpdateType.DECREASE_RESOURCE \u003d\u003d updateType) {\n      Preconditions.checkArgument(Resources.fitsIn(target, original),\n          \"Target resource capability must fit in Original capability\");\n    } else {\n      Preconditions.checkArgument(Resources.fitsIn(original, target),\n          \"Target resource capability must be more than Original capability\");\n\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "7ff280fca9af45b98cee2336e78803da46b0f8a5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1509. Make AMRMClient support send increase container request and get increased/decreased containers. (Meng Ding via wangda)\n",
      "commitDate": "12/11/15 11:50 AM",
      "commitName": "7ff280fca9af45b98cee2336e78803da46b0f8a5",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,15 @@\n+  private void validateContainerResourceChangeRequest(\n+      ContainerId containerId, Resource original, Resource target) {\n+    Preconditions.checkArgument(containerId !\u003d null,\n+        \"ContainerId cannot be null\");\n+    Preconditions.checkArgument(original !\u003d null,\n+        \"Original resource capability cannot be null\");\n+    Preconditions.checkArgument(!Resources.equals(Resources.none(), original)\n+            \u0026\u0026 Resources.fitsIn(Resources.none(), original),\n+        \"Original resource capability must be greater than 0\");\n+    Preconditions.checkArgument(target !\u003d null,\n+        \"Target resource capability cannot be null\");\n+    Preconditions.checkArgument(!Resources.equals(Resources.none(), target)\n+            \u0026\u0026 Resources.fitsIn(Resources.none(), target),\n+        \"Target resource capability must be greater than 0\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateContainerResourceChangeRequest(\n      ContainerId containerId, Resource original, Resource target) {\n    Preconditions.checkArgument(containerId !\u003d null,\n        \"ContainerId cannot be null\");\n    Preconditions.checkArgument(original !\u003d null,\n        \"Original resource capability cannot be null\");\n    Preconditions.checkArgument(!Resources.equals(Resources.none(), original)\n            \u0026\u0026 Resources.fitsIn(Resources.none(), original),\n        \"Original resource capability must be greater than 0\");\n    Preconditions.checkArgument(target !\u003d null,\n        \"Target resource capability cannot be null\");\n    Preconditions.checkArgument(!Resources.equals(Resources.none(), target)\n            \u0026\u0026 Resources.fitsIn(Resources.none(), target),\n        \"Target resource capability must be greater than 0\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
    }
  }
}