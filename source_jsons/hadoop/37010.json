{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityReservationSystem.java",
  "functionName": "reinitialize",
  "functionId": "reinitialize___conf-Configuration__rmContext-RMContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/CapacityReservationSystem.java",
  "functionStartLine": 54,
  "functionEndLine": 66,
  "numCommitsSeen": 4,
  "timeTaken": 1051,
  "changeHistory": [
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,13 @@\n+  public void reinitialize(Configuration conf, RMContext rmContext)\n+      throws YarnException {\n+    // Validate if the scheduler is capacity based\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    if (!(scheduler instanceof CapacityScheduler)) {\n+      throw new YarnRuntimeException(\"Class \"\n+          + scheduler.getClass().getCanonicalName() + \" not instance of \"\n+          + CapacityScheduler.class.getCanonicalName());\n+    }\n+    capScheduler \u003d (CapacityScheduler) scheduler;\n+    this.conf \u003d conf;\n+    super.reinitialize(conf, rmContext);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(Configuration conf, RMContext rmContext)\n      throws YarnException {\n    // Validate if the scheduler is capacity based\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    if (!(scheduler instanceof CapacityScheduler)) {\n      throw new YarnRuntimeException(\"Class \"\n          + scheduler.getClass().getCanonicalName() + \" not instance of \"\n          + CapacityScheduler.class.getCanonicalName());\n    }\n    capScheduler \u003d (CapacityScheduler) scheduler;\n    this.conf \u003d conf;\n    super.reinitialize(conf, rmContext);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/CapacityReservationSystem.java"
    }
  }
}