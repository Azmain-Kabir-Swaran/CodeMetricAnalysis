{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractJavaKeyStoreProvider.java",
  "functionName": "createCredentialEntry",
  "functionId": "createCredentialEntry___alias-String__credential-char[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
  "functionStartLine": 225,
  "functionEndLine": 240,
  "numCommitsSeen": 13,
  "timeTaken": 1656,
  "changeHistory": [
    "fbf55dcaf45285e1795cb107e7846799e4042b0b",
    "860b8373c3a851386b8cd2d4265dd35e5aabc941",
    "61156a8ae3fd345c5ad0960091f117bfc607e04a",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "fbf55dcaf45285e1795cb107e7846799e4042b0b": "Ybodychange",
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": "Ymovefromfile",
    "61156a8ae3fd345c5ad0960091f117bfc607e04a": "Ybodychange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbf55dcaf45285e1795cb107e7846799e4042b0b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12076. Incomplete Cache Mechanism in CredentialProvider API. Contributed by Larry McCay.\n",
      "commitDate": "16/06/15 2:44 PM",
      "commitName": "fbf55dcaf45285e1795cb107e7846799e4042b0b",
      "commitAuthor": "cnauroth",
      "commitDateOld": "05/06/15 1:11 PM",
      "commitNameOld": "2dbc40e6086026ef02747223982aa68f2d328ade",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.06,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public CredentialEntry createCredentialEntry(String alias, char[] credential)\n       throws IOException {\n     writeLock.lock();\n     try {\n-      if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n+      if (keyStore.containsAlias(alias)) {\n         throw new IOException(\"Credential \" + alias + \" already exists in \"\n             + this);\n       }\n       return innerSetCredential(alias, credential);\n     } catch (KeyStoreException e) {\n       throw new IOException(\"Problem looking up credential \" + alias + \" in \"\n           + this, e);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public CredentialEntry createCredentialEntry(String alias, char[] credential)\n      throws IOException {\n    writeLock.lock();\n    try {\n      if (keyStore.containsAlias(alias)) {\n        throw new IOException(\"Credential \" + alias + \" already exists in \"\n            + this);\n      }\n      return innerSetCredential(alias, credential);\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Problem looking up credential \" + alias + \" in \"\n          + this, e);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.\n",
      "commitDate": "28/05/15 3:01 PM",
      "commitName": "860b8373c3a851386b8cd2d4265dd35e5aabc941",
      "commitAuthor": "cnauroth",
      "commitDateOld": "28/05/15 1:24 PM",
      "commitNameOld": "ae1454342064c71f414d20ad0885e60a335c7420",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public CredentialEntry createCredentialEntry(String alias, char[] credential)\n       throws IOException {\n     writeLock.lock();\n     try {\n       if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n-        throw new IOException(\"Credential \" + alias + \" already exists in \" + this);\n+        throw new IOException(\"Credential \" + alias + \" already exists in \"\n+            + this);\n       }\n       return innerSetCredential(alias, credential);\n     } catch (KeyStoreException e) {\n-      throw new IOException(\"Problem looking up credential \" + alias + \" in \" + this,\n-          e);\n+      throw new IOException(\"Problem looking up credential \" + alias + \" in \"\n+          + this, e);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public CredentialEntry createCredentialEntry(String alias, char[] credential)\n      throws IOException {\n    writeLock.lock();\n    try {\n      if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n        throw new IOException(\"Credential \" + alias + \" already exists in \"\n            + this);\n      }\n      return innerSetCredential(alias, credential);\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Problem looking up credential \" + alias + \" in \"\n          + this, e);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
        "oldMethodName": "createCredentialEntry",
        "newMethodName": "createCredentialEntry"
      }
    },
    "61156a8ae3fd345c5ad0960091f117bfc607e04a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10830. Missing lock in JavaKeyStoreProvider.createCredentialEntry. Contributed by Benoy Antony.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 11:12 AM",
      "commitName": "61156a8ae3fd345c5ad0960091f117bfc607e04a",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "17/07/14 10:45 AM",
      "commitNameOld": "9aaa714a999f998b6acc9904beb414d327c06f8b",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 6.02,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n   public CredentialEntry createCredentialEntry(String alias, char[] credential)\n       throws IOException {\n+    writeLock.lock();\n     try {\n       if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n         throw new IOException(\"Credential \" + alias + \" already exists in \" + this);\n       }\n+      return innerSetCredential(alias, credential);\n     } catch (KeyStoreException e) {\n       throw new IOException(\"Problem looking up credential \" + alias + \" in \" + this,\n           e);\n+    } finally {\n+      writeLock.unlock();\n     }\n-    return innerSetCredential(alias, credential);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public CredentialEntry createCredentialEntry(String alias, char[] credential)\n      throws IOException {\n    writeLock.lock();\n    try {\n      if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n        throw new IOException(\"Credential \" + alias + \" already exists in \" + this);\n      }\n      return innerSetCredential(alias, credential);\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Problem looking up credential \" + alias + \" in \" + this,\n          e);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,12 @@\n+  public CredentialEntry createCredentialEntry(String alias, char[] credential)\n+      throws IOException {\n+    try {\n+      if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n+        throw new IOException(\"Credential \" + alias + \" already exists in \" + this);\n+      }\n+    } catch (KeyStoreException e) {\n+      throw new IOException(\"Problem looking up credential \" + alias + \" in \" + this,\n+          e);\n+    }\n+    return innerSetCredential(alias, credential);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public CredentialEntry createCredentialEntry(String alias, char[] credential)\n      throws IOException {\n    try {\n      if (keyStore.containsAlias(alias) || cache.containsKey(alias)) {\n        throw new IOException(\"Credential \" + alias + \" already exists in \" + this);\n      }\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Problem looking up credential \" + alias + \" in \" + this,\n          e);\n    }\n    return innerSetCredential(alias, credential);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java"
    }
  }
}