{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "rename",
  "functionId": "rename___srcKey-String__dstKey-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 2714,
  "functionEndLine": 2716,
  "numCommitsSeen": 53,
  "timeTaken": 2777,
  "changeHistory": [
    "52babbb4a0e3c89f2025bf6e9a1b51a96e8f8fb0",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "52babbb4a0e3c89f2025bf6e9a1b51a96e8f8fb0": "Ybodychange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Ybodychange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "52babbb4a0e3c89f2025bf6e9a1b51a96e8f8fb0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15086. NativeAzureFileSystem file rename is not atomic.\nContributed by Thomas Marquardt\n",
      "commitDate": "22/12/17 3:39 AM",
      "commitName": "52babbb4a0e3c89f2025bf6e9a1b51a96e8f8fb0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "15/09/17 9:03 AM",
      "commitNameOld": "2d2d97fa7d4224369b3c13bc4a45e8cc9e29afb1",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 97.82,
      "commitsBetweenForRepo": 765,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public void rename(String srcKey, String dstKey) throws IOException {\n-    rename(srcKey, dstKey, false, null);\n+    rename(srcKey, dstKey, false, null, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void rename(String srcKey, String dstKey) throws IOException {\n    rename(srcKey, dstKey, false, null, true);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "commitDateOld": "24/06/14 1:52 PM",
      "commitNameOld": "0d91576ec31f63402f2db6107a04155368e2632d",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 106.02,
      "commitsBetweenForRepo": 1005,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,3 @@\n   public void rename(String srcKey, String dstKey) throws IOException {\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Moving \" + srcKey + \" to \" + dstKey);\n-    }\n-\n-    try {\n-      // Attempts rename may occur before opening any streams so first,\n-      // check if a session exists, if not create a session with the Azure\n-      // storage server.\n-      if (null \u003d\u003d storageInteractionLayer) {\n-        final String errMsg \u003d String.format(\n-            \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n-            sessionUri);\n-        throw new AssertionError(errMsg);\n-      }\n-\n-      checkContainer(ContainerAccessType.ReadThenWrite);\n-      // Get the source blob and assert its existence. If the source key\n-      // needs to be normalized then normalize it.\n-      CloudBlockBlobWrapper srcBlob \u003d getBlobReference(srcKey);\n-\n-      if (!srcBlob.exists(getInstrumentedContext())) {\n-        throw new AzureException(\"Source blob \" + srcKey + \" does not exist.\");\n-      }\n-\n-      // Get the destination blob. The destination key always needs to be\n-      // normalized.\n-      CloudBlockBlobWrapper dstBlob \u003d getBlobReference(dstKey);\n-\n-      // Rename the source blob to the destination blob by copying it to\n-      // the destination blob then deleting it.\n-      //\n-      dstBlob.startCopyFromBlob(srcBlob, getInstrumentedContext());\n-      waitForCopyToComplete(dstBlob, getInstrumentedContext());\n-\n-      safeDelete(srcBlob);\n-    } catch (Exception e) {\n-      // Re-throw exception as an Azure storage exception.\n-      throw new AzureException(e);\n-    }\n+    rename(srcKey, dstKey, false, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void rename(String srcKey, String dstKey) throws IOException {\n    rename(srcKey, dstKey, false, null);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,42 @@\n+  public void rename(String srcKey, String dstKey) throws IOException {\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Moving \" + srcKey + \" to \" + dstKey);\n+    }\n+\n+    try {\n+      // Attempts rename may occur before opening any streams so first,\n+      // check if a session exists, if not create a session with the Azure\n+      // storage server.\n+      if (null \u003d\u003d storageInteractionLayer) {\n+        final String errMsg \u003d String.format(\n+            \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n+            sessionUri);\n+        throw new AssertionError(errMsg);\n+      }\n+\n+      checkContainer(ContainerAccessType.ReadThenWrite);\n+      // Get the source blob and assert its existence. If the source key\n+      // needs to be normalized then normalize it.\n+      CloudBlockBlobWrapper srcBlob \u003d getBlobReference(srcKey);\n+\n+      if (!srcBlob.exists(getInstrumentedContext())) {\n+        throw new AzureException(\"Source blob \" + srcKey + \" does not exist.\");\n+      }\n+\n+      // Get the destination blob. The destination key always needs to be\n+      // normalized.\n+      CloudBlockBlobWrapper dstBlob \u003d getBlobReference(dstKey);\n+\n+      // Rename the source blob to the destination blob by copying it to\n+      // the destination blob then deleting it.\n+      //\n+      dstBlob.startCopyFromBlob(srcBlob, getInstrumentedContext());\n+      waitForCopyToComplete(dstBlob, getInstrumentedContext());\n+\n+      safeDelete(srcBlob);\n+    } catch (Exception e) {\n+      // Re-throw exception as an Azure storage exception.\n+      throw new AzureException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void rename(String srcKey, String dstKey) throws IOException {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Moving \" + srcKey + \" to \" + dstKey);\n    }\n\n    try {\n      // Attempts rename may occur before opening any streams so first,\n      // check if a session exists, if not create a session with the Azure\n      // storage server.\n      if (null \u003d\u003d storageInteractionLayer) {\n        final String errMsg \u003d String.format(\n            \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n            sessionUri);\n        throw new AssertionError(errMsg);\n      }\n\n      checkContainer(ContainerAccessType.ReadThenWrite);\n      // Get the source blob and assert its existence. If the source key\n      // needs to be normalized then normalize it.\n      CloudBlockBlobWrapper srcBlob \u003d getBlobReference(srcKey);\n\n      if (!srcBlob.exists(getInstrumentedContext())) {\n        throw new AzureException(\"Source blob \" + srcKey + \" does not exist.\");\n      }\n\n      // Get the destination blob. The destination key always needs to be\n      // normalized.\n      CloudBlockBlobWrapper dstBlob \u003d getBlobReference(dstKey);\n\n      // Rename the source blob to the destination blob by copying it to\n      // the destination blob then deleting it.\n      //\n      dstBlob.startCopyFromBlob(srcBlob, getInstrumentedContext());\n      waitForCopyToComplete(dstBlob, getInstrumentedContext());\n\n      safeDelete(srcBlob);\n    } catch (Exception e) {\n      // Re-throw exception as an Azure storage exception.\n      throw new AzureException(e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}