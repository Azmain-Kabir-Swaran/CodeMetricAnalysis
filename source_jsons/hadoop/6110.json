{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLog.java",
  "functionName": "releaseBackupStream",
  "functionId": "releaseBackupStream___registration-NamenodeRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
  "functionStartLine": 1576,
  "functionEndLine": 1585,
  "numCommitsSeen": 149,
  "timeTaken": 6607,
  "changeHistory": [
    "faa4455be512e070fa420084be8d1be5c72f3b08",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Ybodychange",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": "Ymultichange(Yexceptionschange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "23/07/14 12:05 PM",
      "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 41.08,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   synchronized void releaseBackupStream(NamenodeRegistration registration)\n       throws IOException {\n     BackupJournalManager bjm \u003d this.findBackupJournal(registration);\n     if (bjm !\u003d null) {\n       LOG.info(\"Removing backup journal \" + bjm);\n-      journalSet.remove(bjm);\n+      synchronized(journalSetLock) {\n+        journalSet.remove(bjm);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration)\n      throws IOException {\n    BackupJournalManager bjm \u003d this.findBackupJournal(registration);\n    if (bjm !\u003d null) {\n      LOG.info(\"Removing backup journal \" + bjm);\n      synchronized(journalSetLock) {\n        journalSet.remove(bjm);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 6:14 PM",
      "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
      "commitAuthor": "Jitendra Nath Pandey",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/11 6:14 PM",
          "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "06/09/11 1:27 PM",
          "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 23.2,
          "commitsBetweenForRepo": 169,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,8 @@\n-  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n-    for (Iterator\u003cJournalAndStream\u003e iter \u003d journals.iterator();\n-         iter.hasNext();) {\n-      JournalAndStream jas \u003d iter.next();\n-      if (jas.manager instanceof BackupJournalManager \u0026\u0026\n-          ((BackupJournalManager)jas.manager).matchesRegistration(\n-              registration)) {\n-        jas.abort();        \n-        LOG.info(\"Removing backup journal \" + jas);\n-        iter.remove();\n-      }\n+  synchronized void releaseBackupStream(NamenodeRegistration registration)\n+      throws IOException {\n+    BackupJournalManager bjm \u003d this.findBackupJournal(registration);\n+    if (bjm !\u003d null) {\n+      LOG.info(\"Removing backup journal \" + bjm);\n+      journalSet.remove(bjm);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration)\n      throws IOException {\n    BackupJournalManager bjm \u003d this.findBackupJournal(registration);\n    if (bjm !\u003d null) {\n      LOG.info(\"Removing backup journal \" + bjm);\n      journalSet.remove(bjm);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/11 6:14 PM",
          "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "06/09/11 1:27 PM",
          "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 23.2,
          "commitsBetweenForRepo": 169,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,8 @@\n-  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n-    for (Iterator\u003cJournalAndStream\u003e iter \u003d journals.iterator();\n-         iter.hasNext();) {\n-      JournalAndStream jas \u003d iter.next();\n-      if (jas.manager instanceof BackupJournalManager \u0026\u0026\n-          ((BackupJournalManager)jas.manager).matchesRegistration(\n-              registration)) {\n-        jas.abort();        \n-        LOG.info(\"Removing backup journal \" + jas);\n-        iter.remove();\n-      }\n+  synchronized void releaseBackupStream(NamenodeRegistration registration)\n+      throws IOException {\n+    BackupJournalManager bjm \u003d this.findBackupJournal(registration);\n+    if (bjm !\u003d null) {\n+      LOG.info(\"Removing backup journal \" + bjm);\n+      journalSet.remove(bjm);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration)\n      throws IOException {\n    BackupJournalManager bjm \u003d this.findBackupJournal(registration);\n    if (bjm !\u003d null) {\n      LOG.info(\"Removing backup journal \" + bjm);\n      journalSet.remove(bjm);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n    for (Iterator\u003cJournalAndStream\u003e iter \u003d journals.iterator();\n         iter.hasNext();) {\n      JournalAndStream jas \u003d iter.next();\n      if (jas.manager instanceof BackupJournalManager \u0026\u0026\n          ((BackupJournalManager)jas.manager).matchesRegistration(\n              registration)) {\n        jas.abort();        \n        LOG.info(\"Removing backup journal \" + jas);\n        iter.remove();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n    for (Iterator\u003cJournalAndStream\u003e iter \u003d journals.iterator();\n         iter.hasNext();) {\n      JournalAndStream jas \u003d iter.next();\n      if (jas.manager instanceof BackupJournalManager \u0026\u0026\n          ((BackupJournalManager)jas.manager).matchesRegistration(\n              registration)) {\n        jas.abort();        \n        LOG.info(\"Removing backup journal \" + jas);\n        iter.remove();\n      }\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "26/07/11 1:46 PM",
      "commitNameOld": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 2.82,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,13 @@\n   synchronized void releaseBackupStream(NamenodeRegistration registration) {\n-    Iterator\u003cEditLogOutputStream\u003e it \u003d\n-                                  getOutputStreamIterator(JournalType.BACKUP);\n-    ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n-    NamenodeRegistration backupNode \u003d null;\n-    while(it.hasNext()) {\n-      EditLogBackupOutputStream eStream \u003d (EditLogBackupOutputStream)it.next();\n-      backupNode \u003d eStream.getRegistration();\n-      if(backupNode.getAddress().equals(registration.getAddress()) \u0026\u0026\n-            backupNode.isRole(registration.getRole())) {\n-        errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n-        errorStreams.add(eStream);\n-        break;\n+    for (Iterator\u003cJournalAndStream\u003e iter \u003d journals.iterator();\n+         iter.hasNext();) {\n+      JournalAndStream jas \u003d iter.next();\n+      if (jas.manager instanceof BackupJournalManager \u0026\u0026\n+          ((BackupJournalManager)jas.manager).matchesRegistration(\n+              registration)) {\n+        jas.abort();        \n+        LOG.info(\"Removing backup journal \" + jas);\n+        iter.remove();\n       }\n     }\n-    assert backupNode \u003d\u003d null || backupNode.isRole(NamenodeRole.BACKUP) :\n-      \"Not a backup node corresponds to a backup stream\";\n-    disableAndReportErrorOnStreams(errorStreams);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n    for (Iterator\u003cJournalAndStream\u003e iter \u003d journals.iterator();\n         iter.hasNext();) {\n      JournalAndStream jas \u003d iter.next();\n      if (jas.manager instanceof BackupJournalManager \u0026\u0026\n          ((BackupJournalManager)jas.manager).matchesRegistration(\n              registration)) {\n        jas.abort();        \n        LOG.info(\"Removing backup journal \" + jas);\n        iter.remove();\n      }\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n+    Iterator\u003cEditLogOutputStream\u003e it \u003d\n+                                  getOutputStreamIterator(JournalType.BACKUP);\n+    ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n+    NamenodeRegistration backupNode \u003d null;\n+    while(it.hasNext()) {\n+      EditLogBackupOutputStream eStream \u003d (EditLogBackupOutputStream)it.next();\n+      backupNode \u003d eStream.getRegistration();\n+      if(backupNode.getAddress().equals(registration.getAddress()) \u0026\u0026\n+            backupNode.isRole(registration.getRole())) {\n+        errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n+        errorStreams.add(eStream);\n+        break;\n+      }\n+    }\n+    assert backupNode \u003d\u003d null || backupNode.isRole(NamenodeRole.BACKUP) :\n+      \"Not a backup node corresponds to a backup stream\";\n+    disableAndReportErrorOnStreams(errorStreams);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void releaseBackupStream(NamenodeRegistration registration) {\n    Iterator\u003cEditLogOutputStream\u003e it \u003d\n                                  getOutputStreamIterator(JournalType.BACKUP);\n    ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n    NamenodeRegistration backupNode \u003d null;\n    while(it.hasNext()) {\n      EditLogBackupOutputStream eStream \u003d (EditLogBackupOutputStream)it.next();\n      backupNode \u003d eStream.getRegistration();\n      if(backupNode.getAddress().equals(registration.getAddress()) \u0026\u0026\n            backupNode.isRole(registration.getRole())) {\n        errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n        errorStreams.add(eStream);\n        break;\n      }\n    }\n    assert backupNode \u003d\u003d null || backupNode.isRole(NamenodeRole.BACKUP) :\n      \"Not a backup node corresponds to a backup stream\";\n    disableAndReportErrorOnStreams(errorStreams);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    }
  }
}