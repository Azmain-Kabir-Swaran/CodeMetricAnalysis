{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceTimelinePublisher.java",
  "functionName": "componentInstanceFinished",
  "functionId": "componentInstanceFinished___containerId-ContainerId__exitCode-int__state-ContainerState__diagnostics-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
  "functionStartLine": 182,
  "functionEndLine": 203,
  "numCommitsSeen": 26,
  "timeTaken": 5204,
  "changeHistory": [
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2"
  ],
  "changeHistoryShort": {
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c": "Ymultichange(Yparameterchange,Ybodychange)",
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2": "Ymultichange(Yparameterchange,Ybodychange)",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": "Ymultichange(Yparameterchange,Ybodychange)",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
      "commitDate": "28/08/18 10:55 AM",
      "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
          "commitDate": "28/08/18 10:55 AM",
          "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "02/04/18 7:26 AM",
          "commitNameOld": "a0bde7d525911680f9e5fb0a939604865eb8e164",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 148.15,
          "commitsBetweenForRepo": 1585,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public void componentInstanceFinished(ContainerId containerId,\n-      int exitCode, String diagnostics) {\n+      int exitCode, ContainerState state, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n         containerId.toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ContainerId containerId,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        containerId.toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, exitCode-int, diagnostics-String]",
            "newValue": "[containerId-ContainerId, exitCode-int, state-ContainerState, diagnostics-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
          "commitDate": "28/08/18 10:55 AM",
          "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "02/04/18 7:26 AM",
          "commitNameOld": "a0bde7d525911680f9e5fb0a939604865eb8e164",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 148.15,
          "commitsBetweenForRepo": 1585,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public void componentInstanceFinished(ContainerId containerId,\n-      int exitCode, String diagnostics) {\n+      int exitCode, ContainerState state, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n         containerId.toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ContainerId containerId,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        containerId.toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7486. Race condition in service AM that can cause NPE. Contributed by Jian He\n",
      "commitDate": "16/11/17 7:58 AM",
      "commitName": "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7486. Race condition in service AM that can cause NPE. Contributed by Jian He\n",
          "commitDate": "16/11/17 7:58 AM",
          "commitName": "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 9.77,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void componentInstanceFinished(ComponentInstance instance,\n+  public void componentInstanceFinished(ContainerId containerId,\n       int exitCode, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n-        instance.getContainer().getId().toString());\n+        containerId.toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ContainerId containerId,\n      int exitCode, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        containerId.toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[instance-ComponentInstance, exitCode-int, diagnostics-String]",
            "newValue": "[containerId-ContainerId, exitCode-int, diagnostics-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7486. Race condition in service AM that can cause NPE. Contributed by Jian He\n",
          "commitDate": "16/11/17 7:58 AM",
          "commitName": "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 9.77,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void componentInstanceFinished(ComponentInstance instance,\n+  public void componentInstanceFinished(ContainerId containerId,\n       int exitCode, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n-        instance.getContainer().getId().toString());\n+        containerId.toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ContainerId containerId,\n      int exitCode, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        containerId.toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "541b64c7985db425c5ce8bd5f71a2d5980809708",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public void componentInstanceFinished(ComponentInstance instance,\n-      int exitCode, ContainerState state, String diagnostics) {\n+      int exitCode, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n         instance.getContainer().getId().toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[instance-ComponentInstance, exitCode-int, state-ContainerState, diagnostics-String]",
            "newValue": "[instance-ComponentInstance, exitCode-int, diagnostics-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "541b64c7985db425c5ce8bd5f71a2d5980809708",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public void componentInstanceFinished(ComponentInstance instance,\n-      int exitCode, ContainerState state, String diagnostics) {\n+      int exitCode, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n         instance.getContainer().getId().toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void componentInstanceFinished(ComponentInstance instance,\n       int exitCode, ContainerState state, String diagnostics) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(\n         instance.getContainer().getId().toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n         exitCode);\n-    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n+    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n         .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void componentInstanceFinished(RoleInstance instance) {\n-    TimelineEntity entity \u003d createComponentInstanceEntity(instance.id);\n+  public void componentInstanceFinished(ComponentInstance instance,\n+      int exitCode, ContainerState state, String diagnostics) {\n+    TimelineEntity entity \u003d createComponentInstanceEntity(\n+        instance.getContainer().getId().toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n-        instance.exitCode);\n-    entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n-        instance.diagnostics);\n-    // TODO need to change the state based on enum value.\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE, \"FINISHED\");\n+    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n+        exitCode);\n+    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void componentInstanceFinished(RoleInstance instance) {\n-    TimelineEntity entity \u003d createComponentInstanceEntity(instance.id);\n+  public void componentInstanceFinished(ComponentInstance instance,\n+      int exitCode, ContainerState state, String diagnostics) {\n+    TimelineEntity entity \u003d createComponentInstanceEntity(\n+        instance.getContainer().getId().toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n-        instance.exitCode);\n-    entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n-        instance.diagnostics);\n-    // TODO need to change the state based on enum value.\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE, \"FINISHED\");\n+    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n+        exitCode);\n+    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void componentInstanceFinished(RoleInstance instance) {\n-    TimelineEntity entity \u003d createComponentInstanceEntity(instance.id);\n+  public void componentInstanceFinished(ComponentInstance instance,\n+      int exitCode, ContainerState state, String diagnostics) {\n+    TimelineEntity entity \u003d createComponentInstanceEntity(\n+        instance.getContainer().getId().toString());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n-        instance.exitCode);\n-    entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n-        instance.diagnostics);\n-    // TODO need to change the state based on enum value.\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE, \"FINISHED\");\n+    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n+        exitCode);\n+    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent startEvent \u003d new TimelineEvent();\n     startEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n     startEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(startEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceFinished(ComponentInstance instance,\n      int exitCode, ContainerState state, String diagnostics) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(\n        instance.getContainer().getId().toString());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.EXIT_STATUS_CODE,\n        exitCode);\n    entityInfos.put(ServiceTimelineMetricsConstants.DIAGNOSTICS_INFO, diagnostics);\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[instance-RoleInstance]",
            "newValue": "[instance-ComponentInstance, exitCode-int, state-ContainerState, diagnostics-String]"
          }
        }
      ]
    },
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6395. Integrate service app master to write data into ATSv2. Contributed by Rohith Sharma K S\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f4216b7bba511cc79439e7dab9f0282d831a16b2",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,22 @@\n+  public void componentInstanceFinished(RoleInstance instance) {\n+    TimelineEntity entity \u003d createComponentInstanceEntity(instance.id);\n+\n+    // create info keys\n+    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n+        instance.exitCode);\n+    entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n+        instance.diagnostics);\n+    // TODO need to change the state based on enum value.\n+    entityInfos.put(SliderTimelineMetricsConstants.STATE, \"FINISHED\");\n+    entity.addInfo(entityInfos);\n+\n+    // add an event\n+    TimelineEvent startEvent \u003d new TimelineEvent();\n+    startEvent\n+        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n+    startEvent.setTimestamp(System.currentTimeMillis());\n+    entity.addEvent(startEvent);\n+\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void componentInstanceFinished(RoleInstance instance) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(instance.id);\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n        instance.exitCode);\n    entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n        instance.diagnostics);\n    // TODO need to change the state based on enum value.\n    entityInfos.put(SliderTimelineMetricsConstants.STATE, \"FINISHED\");\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UNREGISTERED.toString());\n    startEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java"
    }
  }
}