{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSWebApp.java",
  "functionName": "printPageTrack",
  "functionId": "printPageTrack___request-HttpServletRequest__response-HttpServletResponse__timeunit-int__timeunitLabel-String",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java",
  "functionStartLine": 266,
  "functionEndLine": 299,
  "numCommitsSeen": 10,
  "timeTaken": 901,
  "changeHistory": [
    "6a5516c2381f107d96b8326939514de3c6e53d3d",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "6a5516c2381f107d96b8326939514de3c6e53d3d": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a5516c2381f107d96b8326939514de3c6e53d3d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
      "commitDate": "29/03/17 4:18 PM",
      "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "07/03/17 1:47 PM",
      "commitNameOld": "1598fd3b7948b3592775e3be3227c4a336122bc9",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 22.06,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private void printPageTrack(HttpServletRequest request,\n                                HttpServletResponse response, int timeunit,\n                                String timeunitLabel)\n           throws IOException {\n     response.setContentType(\"text/html\");\n     response.setStatus(HttpServletResponse.SC_OK);\n \n     // tracked queues {0}\n     StringBuilder trackedQueueInfo \u003d new StringBuilder();\n-    Set\u003cString\u003e trackedQueues \u003d wrapper.getQueueSet();\n+    Set\u003cString\u003e trackedQueues \u003d wrapper.getTracker().getQueueSet();\n     for(String queue : trackedQueues) {\n       trackedQueueInfo.append(\"\u003coption value\u003d\u0027Queue \").append(queue)\n               .append(\"\u0027\u003e\").append(queue).append(\"\u003c/option\u003e\");\n     }\n \n     // tracked apps {1}\n     StringBuilder trackedAppInfo \u003d new StringBuilder();\n-    Set\u003cString\u003e trackedApps \u003d wrapper.getTrackedAppSet();\n+    Set\u003cString\u003e trackedApps \u003d wrapper.getTracker().getTrackedAppSet();\n     for(String job : trackedApps) {\n       trackedAppInfo.append(\"\u003coption value\u003d\u0027Job \").append(job)\n               .append(\"\u0027\u003e\").append(job).append(\"\u003c/option\u003e\");\n     }\n \n     // timeunit label {2}\n     // time unit {3}\n     // ajax update time {4}\n     // final html\n     String trackInfo \u003d MessageFormat.format(trackTemplate,\n             trackedQueueInfo.toString(), trackedAppInfo.toString(),\n             timeunitLabel, \"\" + timeunit, \"\" + ajaxUpdateTimeMS);\n     response.getWriter().println(trackInfo);\n \n     ((Request) request).setHandled(true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printPageTrack(HttpServletRequest request,\n                               HttpServletResponse response, int timeunit,\n                               String timeunitLabel)\n          throws IOException {\n    response.setContentType(\"text/html\");\n    response.setStatus(HttpServletResponse.SC_OK);\n\n    // tracked queues {0}\n    StringBuilder trackedQueueInfo \u003d new StringBuilder();\n    Set\u003cString\u003e trackedQueues \u003d wrapper.getTracker().getQueueSet();\n    for(String queue : trackedQueues) {\n      trackedQueueInfo.append(\"\u003coption value\u003d\u0027Queue \").append(queue)\n              .append(\"\u0027\u003e\").append(queue).append(\"\u003c/option\u003e\");\n    }\n\n    // tracked apps {1}\n    StringBuilder trackedAppInfo \u003d new StringBuilder();\n    Set\u003cString\u003e trackedApps \u003d wrapper.getTracker().getTrackedAppSet();\n    for(String job : trackedApps) {\n      trackedAppInfo.append(\"\u003coption value\u003d\u0027Job \").append(job)\n              .append(\"\u0027\u003e\").append(job).append(\"\u003c/option\u003e\");\n    }\n\n    // timeunit label {2}\n    // time unit {3}\n    // ajax update time {4}\n    // final html\n    String trackInfo \u003d MessageFormat.format(trackTemplate,\n            trackedQueueInfo.toString(), trackedAppInfo.toString(),\n            timeunitLabel, \"\" + timeunit, \"\" + ajaxUpdateTimeMS);\n    response.getWriter().println(trackInfo);\n\n    ((Request) request).setHandled(true);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,34 @@\n+  private void printPageTrack(HttpServletRequest request,\n+                               HttpServletResponse response, int timeunit,\n+                               String timeunitLabel)\n+          throws IOException {\n+    response.setContentType(\"text/html\");\n+    response.setStatus(HttpServletResponse.SC_OK);\n+\n+    // tracked queues {0}\n+    StringBuilder trackedQueueInfo \u003d new StringBuilder();\n+    Set\u003cString\u003e trackedQueues \u003d wrapper.getQueueSet();\n+    for(String queue : trackedQueues) {\n+      trackedQueueInfo.append(\"\u003coption value\u003d\u0027Queue \").append(queue)\n+              .append(\"\u0027\u003e\").append(queue).append(\"\u003c/option\u003e\");\n+    }\n+\n+    // tracked apps {1}\n+    StringBuilder trackedAppInfo \u003d new StringBuilder();\n+    Set\u003cString\u003e trackedApps \u003d wrapper.getTrackedAppSet();\n+    for(String job : trackedApps) {\n+      trackedAppInfo.append(\"\u003coption value\u003d\u0027Job \").append(job)\n+              .append(\"\u0027\u003e\").append(job).append(\"\u003c/option\u003e\");\n+    }\n+\n+    // timeunit label {2}\n+    // time unit {3}\n+    // ajax update time {4}\n+    // final html\n+    String trackInfo \u003d MessageFormat.format(trackTemplate,\n+            trackedQueueInfo.toString(), trackedAppInfo.toString(),\n+            timeunitLabel, \"\" + timeunit, \"\" + ajaxUpdateTimeMS);\n+    response.getWriter().println(trackInfo);\n+\n+    ((Request) request).setHandled(true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printPageTrack(HttpServletRequest request,\n                               HttpServletResponse response, int timeunit,\n                               String timeunitLabel)\n          throws IOException {\n    response.setContentType(\"text/html\");\n    response.setStatus(HttpServletResponse.SC_OK);\n\n    // tracked queues {0}\n    StringBuilder trackedQueueInfo \u003d new StringBuilder();\n    Set\u003cString\u003e trackedQueues \u003d wrapper.getQueueSet();\n    for(String queue : trackedQueues) {\n      trackedQueueInfo.append(\"\u003coption value\u003d\u0027Queue \").append(queue)\n              .append(\"\u0027\u003e\").append(queue).append(\"\u003c/option\u003e\");\n    }\n\n    // tracked apps {1}\n    StringBuilder trackedAppInfo \u003d new StringBuilder();\n    Set\u003cString\u003e trackedApps \u003d wrapper.getTrackedAppSet();\n    for(String job : trackedApps) {\n      trackedAppInfo.append(\"\u003coption value\u003d\u0027Job \").append(job)\n              .append(\"\u0027\u003e\").append(job).append(\"\u003c/option\u003e\");\n    }\n\n    // timeunit label {2}\n    // time unit {3}\n    // ajax update time {4}\n    // final html\n    String trackInfo \u003d MessageFormat.format(trackTemplate,\n            trackedQueueInfo.toString(), trackedAppInfo.toString(),\n            timeunitLabel, \"\" + timeunit, \"\" + ajaxUpdateTimeMS);\n    response.getWriter().println(trackInfo);\n\n    ((Request) request).setHandled(true);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java"
    }
  }
}