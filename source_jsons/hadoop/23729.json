{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CachedHistoryStorage.java",
  "functionName": "weigh",
  "functionId": "weigh___key-JobId__value-Job",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java",
  "functionStartLine": 127,
  "functionEndLine": 131,
  "numCommitsSeen": 10,
  "timeTaken": 1428,
  "changeHistory": [
    "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa"
  ],
  "changeHistoryShort": {
    "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6622. Add capability to set JHS job cache to a task-based limit (rchiang via rkanter)\n",
      "commitDate": "26/02/16 5:57 PM",
      "commitName": "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,5 @@\n+        public int weigh(JobId key, Job value) {\n+          int taskCount \u003d Math.min(loadedTasksCacheSize,\n+              value.getTotalMaps() + value.getTotalReduces());\n+          return taskCount;\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public int weigh(JobId key, Job value) {\n          int taskCount \u003d Math.min(loadedTasksCacheSize,\n              value.getTotalMaps() + value.getTotalReduces());\n          return taskCount;\n        }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java"
    }
  }
}