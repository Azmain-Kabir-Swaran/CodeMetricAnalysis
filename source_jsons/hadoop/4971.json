{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SnapshotFSImageFormat.java",
  "functionName": "loadDirectoryDiff",
  "functionId": "loadDirectoryDiff___parent-INodeDirectory__in-DataInput__loader-FSImageFormat.Loader",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
  "functionStartLine": 288,
  "functionEndLine": 312,
  "numCommitsSeen": 73,
  "timeTaken": 3655,
  "changeHistory": [
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823",
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380",
    "1096917649fd951be633e5619518764f23cca645",
    "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
    "4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3",
    "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
    "fe3584aadfc7839abcd03239e4d07afd12b8b90f"
  ],
  "changeHistoryShort": {
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": "Ybodychange",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ybodychange",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": "Yparameterchange",
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380": "Ybodychange",
    "1096917649fd951be633e5619518764f23cca645": "Ymultichange(Yparameterchange,Ybodychange)",
    "02e6b72ae148fc8c2ba02ef624536b9e48997b31": "Ymultichange(Yrename,Ybodychange)",
    "4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3": "Ybodychange",
    "6f4fe09687f9d13e3e552eaaa012399a5bf246d3": "Ymultichange(Yreturntypechange,Ybodychange)",
    "fe3584aadfc7839abcd03239e4d07afd12b8b90f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13142. Define and Implement a DiifList Interface to store and manage SnapshotDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "15/02/18 3:33 AM",
      "commitName": "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "07/07/14 5:08 PM",
      "commitNameOld": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1318.48,
      "commitsBetweenForRepo": 9695,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private static DirectoryDiff loadDirectoryDiff(INodeDirectory parent,\n       DataInput in, FSImageFormat.Loader loader) throws IOException {\n     // 1. Read the full path of the Snapshot root to identify the Snapshot\n     final Snapshot snapshot \u003d loader.getSnapshot(in);\n \n     // 2. Load DirectoryDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     \n     // 3. Load DirectoryDiff#snapshotINode \n     INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n         snapshot, in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n-    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n+    DiffList\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot.getId(), snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0), childrenSize, createdList,\n         deletedList, snapshotINode \u003d\u003d snapshot.getRoot());\n     return sdiff;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DirectoryDiff loadDirectoryDiff(INodeDirectory parent,\n      DataInput in, FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    final Snapshot snapshot \u003d loader.getSnapshot(in);\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n        snapshot, in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    DiffList\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot.getId(), snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0), childrenSize, createdList,\n        deletedList, snapshotINode \u003d\u003d snapshot.getRoot());\n    return sdiff;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "14/12/13 2:13 AM",
      "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 24.44,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private static DirectoryDiff loadDirectoryDiff(INodeDirectory parent,\n       DataInput in, FSImageFormat.Loader loader) throws IOException {\n     // 1. Read the full path of the Snapshot root to identify the Snapshot\n     final Snapshot snapshot \u003d loader.getSnapshot(in);\n \n     // 2. Load DirectoryDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     \n     // 3. Load DirectoryDiff#snapshotINode \n     INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n         snapshot, in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n-    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n-        diffs.isEmpty() ? null : diffs.get(0),\n-        childrenSize, createdList, deletedList);\n+    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot.getId(), snapshotINode,\n+        diffs.isEmpty() ? null : diffs.get(0), childrenSize, createdList,\n+        deletedList, snapshotINode \u003d\u003d snapshot.getRoot());\n     return sdiff;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DirectoryDiff loadDirectoryDiff(INodeDirectory parent,\n      DataInput in, FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    final Snapshot snapshot \u003d loader.getSnapshot(in);\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n        snapshot, in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot.getId(), snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0), childrenSize, createdList,\n        deletedList, snapshotINode \u003d\u003d snapshot.getRoot());\n    return sdiff;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-5632. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithSnapshot with DirectoryWithSnapshotFeature.  Contributed by jing9 \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/13 2:13 AM",
      "commitName": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/12/13 10:17 PM",
      "commitNameOld": "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 7.16,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n-  private static DirectoryDiff loadDirectoryDiff(\n-      INodeDirectoryWithSnapshot parent, DataInput in,\n-      FSImageFormat.Loader loader) throws IOException {\n+  private static DirectoryDiff loadDirectoryDiff(INodeDirectory parent,\n+      DataInput in, FSImageFormat.Loader loader) throws IOException {\n     // 1. Read the full path of the Snapshot root to identify the Snapshot\n     final Snapshot snapshot \u003d loader.getSnapshot(in);\n \n     // 2. Load DirectoryDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     \n     // 3. Load DirectoryDiff#snapshotINode \n     INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n         snapshot, in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DirectoryDiff loadDirectoryDiff(INodeDirectory parent,\n      DataInput in, FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    final Snapshot snapshot \u003d loader.getSnapshot(in);\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n        snapshot, in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {
        "oldValue": "[parent-INodeDirectoryWithSnapshot, in-DataInput, loader-FSImageFormat.Loader]",
        "newValue": "[parent-INodeDirectory, in-DataInput, loader-FSImageFormat.Loader]"
      }
    },
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4908. Reduce snapshot inode memory usage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/13 10:10 PM",
      "commitName": "c02953dbc344b39e0eb0d13fe2d899cdcdc46380",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "04/06/13 10:26 PM",
      "commitNameOld": "e00f828b119b6a271b6319b6c4885228cd4cb3ed",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 14.99,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private static DirectoryDiff loadDirectoryDiff(\n       INodeDirectoryWithSnapshot parent, DataInput in,\n       FSImageFormat.Loader loader) throws IOException {\n     // 1. Read the full path of the Snapshot root to identify the Snapshot\n     final Snapshot snapshot \u003d loader.getSnapshot(in);\n \n     // 2. Load DirectoryDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     \n     // 3. Load DirectoryDiff#snapshotINode \n-    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n-        in, loader);\n+    INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n+        snapshot, in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DirectoryDiff loadDirectoryDiff(\n      INodeDirectoryWithSnapshot parent, DataInput in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    final Snapshot snapshot \u003d loader.getSnapshot(in);\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectoryAttributes snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(\n        snapshot, in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "1096917649fd951be633e5619518764f23cca645": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4611. Update FSImage for INodeReference.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1463332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/13 4:24 PM",
      "commitName": "1096917649fd951be633e5619518764f23cca645",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4611. Update FSImage for INodeReference.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1463332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/04/13 4:24 PM",
          "commitName": "1096917649fd951be633e5619518764f23cca645",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "18/03/13 11:27 PM",
          "commitNameOld": "9701555899315c94584b24d8717c1d7540a4a491",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 13.71,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n   private static DirectoryDiff loadDirectoryDiff(\n-      INodeDirectoryWithSnapshot parent, DataInputStream in,\n+      INodeDirectoryWithSnapshot parent, DataInput in,\n       FSImageFormat.Loader loader) throws IOException {\n     // 1. Read the full path of the Snapshot root to identify the Snapshot\n-    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n-        loader.getFSDirectoryInLoading());\n+    final Snapshot snapshot \u003d loader.getSnapshot(in);\n \n     // 2. Load DirectoryDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     \n     // 3. Load DirectoryDiff#snapshotINode \n     INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DirectoryDiff loadDirectoryDiff(\n      INodeDirectoryWithSnapshot parent, DataInput in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    final Snapshot snapshot \u003d loader.getSnapshot(in);\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
          "extendedDetails": {
            "oldValue": "[parent-INodeDirectoryWithSnapshot, in-DataInputStream, loader-FSImageFormat.Loader]",
            "newValue": "[parent-INodeDirectoryWithSnapshot, in-DataInput, loader-FSImageFormat.Loader]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4611. Update FSImage for INodeReference.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1463332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/04/13 4:24 PM",
          "commitName": "1096917649fd951be633e5619518764f23cca645",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "18/03/13 11:27 PM",
          "commitNameOld": "9701555899315c94584b24d8717c1d7540a4a491",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 13.71,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n   private static DirectoryDiff loadDirectoryDiff(\n-      INodeDirectoryWithSnapshot parent, DataInputStream in,\n+      INodeDirectoryWithSnapshot parent, DataInput in,\n       FSImageFormat.Loader loader) throws IOException {\n     // 1. Read the full path of the Snapshot root to identify the Snapshot\n-    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n-        loader.getFSDirectoryInLoading());\n+    final Snapshot snapshot \u003d loader.getSnapshot(in);\n \n     // 2. Load DirectoryDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     \n     // 3. Load DirectoryDiff#snapshotINode \n     INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DirectoryDiff loadDirectoryDiff(\n      INodeDirectoryWithSnapshot parent, DataInput in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    final Snapshot snapshot \u003d loader.getSnapshot(in);\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
          "extendedDetails": {}
        }
      ]
    },
    "02e6b72ae148fc8c2ba02ef624536b9e48997b31": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-4481. Change fsimage to support snapshot file diffs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446000 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/13 4:43 PM",
      "commitName": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-4481. Change fsimage to support snapshot file diffs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446000 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/02/13 4:43 PM",
          "commitName": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "08/02/13 3:19 PM",
          "commitNameOld": "afe77ce53d3cf203690aa419e377f26cbd45a96e",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 5.06,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  private static DirectoryDiff loadSnapshotDiff(\n+  private static DirectoryDiff loadDirectoryDiff(\n       INodeDirectoryWithSnapshot parent, DataInputStream in,\n       FSImageFormat.Loader loader) throws IOException {\n-    // 1. Load SnapshotDiff#childrenSize\n-    int childrenSize \u003d in.readInt();\n-    // 2. Read the full path of the Snapshot\u0027s Root, identify \n-    //    SnapshotDiff#Snapshot\n+    // 1. Read the full path of the Snapshot root to identify the Snapshot\n     Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n         loader.getFSDirectoryInLoading());\n+\n+    // 2. Load DirectoryDiff#childrenSize\n+    int childrenSize \u003d in.readInt();\n     \n-    // 3. Load SnapshotDiff#snapshotINode \n-    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n+    // 3. Load DirectoryDiff#snapshotINode \n+    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DirectoryDiff loadDirectoryDiff(\n      INodeDirectoryWithSnapshot parent, DataInputStream in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n        loader.getFSDirectoryInLoading());\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
          "extendedDetails": {
            "oldValue": "loadSnapshotDiff",
            "newValue": "loadDirectoryDiff"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4481. Change fsimage to support snapshot file diffs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446000 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/02/13 4:43 PM",
          "commitName": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "08/02/13 3:19 PM",
          "commitNameOld": "afe77ce53d3cf203690aa419e377f26cbd45a96e",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 5.06,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  private static DirectoryDiff loadSnapshotDiff(\n+  private static DirectoryDiff loadDirectoryDiff(\n       INodeDirectoryWithSnapshot parent, DataInputStream in,\n       FSImageFormat.Loader loader) throws IOException {\n-    // 1. Load SnapshotDiff#childrenSize\n-    int childrenSize \u003d in.readInt();\n-    // 2. Read the full path of the Snapshot\u0027s Root, identify \n-    //    SnapshotDiff#Snapshot\n+    // 1. Read the full path of the Snapshot root to identify the Snapshot\n     Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n         loader.getFSDirectoryInLoading());\n+\n+    // 2. Load DirectoryDiff#childrenSize\n+    int childrenSize \u003d in.readInt();\n     \n-    // 3. Load SnapshotDiff#snapshotINode \n-    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n+    // 3. Load DirectoryDiff#snapshotINode \n+    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n     DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DirectoryDiff loadDirectoryDiff(\n      INodeDirectoryWithSnapshot parent, DataInputStream in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Read the full path of the Snapshot root to identify the Snapshot\n    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n        loader.getFSDirectoryInLoading());\n\n    // 2. Load DirectoryDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    \n    // 3. Load DirectoryDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInDirectoryDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
          "extendedDetails": {}
        }
      ]
    },
    "4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4446. Support file snapshots with diff lists.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1443825 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/13 6:18 PM",
      "commitName": "4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "29/01/13 3:25 PM",
      "commitNameOld": "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 9.12,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private static DirectoryDiff loadSnapshotDiff(\n       INodeDirectoryWithSnapshot parent, DataInputStream in,\n       FSImageFormat.Loader loader) throws IOException {\n     // 1. Load SnapshotDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     // 2. Read the full path of the Snapshot\u0027s Root, identify \n     //    SnapshotDiff#Snapshot\n     Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n         loader.getFSDirectoryInLoading());\n     \n     // 3. Load SnapshotDiff#snapshotINode \n     INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n     List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n-    DirectoryDiff sdiff \u003d parent.new DirectoryDiff(snapshot, snapshotINode,\n+    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n         diffs.isEmpty() ? null : diffs.get(0),\n         childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DirectoryDiff loadSnapshotDiff(\n      INodeDirectoryWithSnapshot parent, DataInputStream in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Load SnapshotDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    // 2. Read the full path of the Snapshot\u0027s Root, identify \n    //    SnapshotDiff#Snapshot\n    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n        loader.getFSDirectoryInLoading());\n    \n    // 3. Load SnapshotDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "6f4fe09687f9d13e3e552eaaa012399a5bf246d3": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4447. Refactor INodeDirectoryWithSnapshot for supporting general INode diff lists.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1440216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/01/13 3:25 PM",
      "commitName": "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4447. Refactor INodeDirectoryWithSnapshot for supporting general INode diff lists.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1440216 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/01/13 3:25 PM",
          "commitName": "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/01/13 2:48 PM",
          "commitNameOld": "5988208b7d2fa3c0378f17fe67ada99a25342829",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  private static SnapshotDiff loadSnapshotDiff(\n+  private static DirectoryDiff loadSnapshotDiff(\n       INodeDirectoryWithSnapshot parent, DataInputStream in,\n       FSImageFormat.Loader loader) throws IOException {\n     // 1. Load SnapshotDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     // 2. Read the full path of the Snapshot\u0027s Root, identify \n     //    SnapshotDiff#Snapshot\n     Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n         loader.getFSDirectoryInLoading());\n     \n     // 3. Load SnapshotDiff#snapshotINode \n     INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n-    SnapshotDiff sdiff \u003d parent.new SnapshotDiff(snapshot, childrenSize,\n-        snapshotINode, parent.getSnapshotDiffs().isEmpty() ? null : parent\n-            .getSnapshotDiffs().get(0), createdList, deletedList);\n+    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n+    DirectoryDiff sdiff \u003d parent.new DirectoryDiff(snapshot, snapshotINode,\n+        diffs.isEmpty() ? null : diffs.get(0),\n+        childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DirectoryDiff loadSnapshotDiff(\n      INodeDirectoryWithSnapshot parent, DataInputStream in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Load SnapshotDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    // 2. Read the full path of the Snapshot\u0027s Root, identify \n    //    SnapshotDiff#Snapshot\n    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n        loader.getFSDirectoryInLoading());\n    \n    // 3. Load SnapshotDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d parent.new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
          "extendedDetails": {
            "oldValue": "SnapshotDiff",
            "newValue": "DirectoryDiff"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4447. Refactor INodeDirectoryWithSnapshot for supporting general INode diff lists.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1440216 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/01/13 3:25 PM",
          "commitName": "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/01/13 2:48 PM",
          "commitNameOld": "5988208b7d2fa3c0378f17fe67ada99a25342829",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  private static SnapshotDiff loadSnapshotDiff(\n+  private static DirectoryDiff loadSnapshotDiff(\n       INodeDirectoryWithSnapshot parent, DataInputStream in,\n       FSImageFormat.Loader loader) throws IOException {\n     // 1. Load SnapshotDiff#childrenSize\n     int childrenSize \u003d in.readInt();\n     // 2. Read the full path of the Snapshot\u0027s Root, identify \n     //    SnapshotDiff#Snapshot\n     Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n         loader.getFSDirectoryInLoading());\n     \n     // 3. Load SnapshotDiff#snapshotINode \n     INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n         in, loader);\n     \n     // 4. Load the created list in SnapshotDiff#Diff\n     List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n     \n     // 5. Load the deleted list in SnapshotDiff#Diff\n     List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n     \n     // 6. Compose the SnapshotDiff\n-    SnapshotDiff sdiff \u003d parent.new SnapshotDiff(snapshot, childrenSize,\n-        snapshotINode, parent.getSnapshotDiffs().isEmpty() ? null : parent\n-            .getSnapshotDiffs().get(0), createdList, deletedList);\n+    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n+    DirectoryDiff sdiff \u003d parent.new DirectoryDiff(snapshot, snapshotINode,\n+        diffs.isEmpty() ? null : diffs.get(0),\n+        childrenSize, createdList, deletedList);\n     return sdiff;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DirectoryDiff loadSnapshotDiff(\n      INodeDirectoryWithSnapshot parent, DataInputStream in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Load SnapshotDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    // 2. Read the full path of the Snapshot\u0027s Root, identify \n    //    SnapshotDiff#Snapshot\n    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n        loader.getFSDirectoryInLoading());\n    \n    // 3. Load SnapshotDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    List\u003cDirectoryDiff\u003e diffs \u003d parent.getDiffs().asList();\n    DirectoryDiff sdiff \u003d parent.new DirectoryDiff(snapshot, snapshotINode,\n        diffs.isEmpty() ? null : diffs.get(0),\n        childrenSize, createdList, deletedList);\n    return sdiff;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
          "extendedDetails": {}
        }
      ]
    },
    "fe3584aadfc7839abcd03239e4d07afd12b8b90f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4126. Add reading/writing snapshot information to FSImage. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1437256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/13 6:48 PM",
      "commitName": "fe3584aadfc7839abcd03239e4d07afd12b8b90f",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,26 @@\n+  private static SnapshotDiff loadSnapshotDiff(\n+      INodeDirectoryWithSnapshot parent, DataInputStream in,\n+      FSImageFormat.Loader loader) throws IOException {\n+    // 1. Load SnapshotDiff#childrenSize\n+    int childrenSize \u003d in.readInt();\n+    // 2. Read the full path of the Snapshot\u0027s Root, identify \n+    //    SnapshotDiff#Snapshot\n+    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n+        loader.getFSDirectoryInLoading());\n+    \n+    // 3. Load SnapshotDiff#snapshotINode \n+    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n+        in, loader);\n+    \n+    // 4. Load the created list in SnapshotDiff#Diff\n+    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n+    \n+    // 5. Load the deleted list in SnapshotDiff#Diff\n+    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n+    \n+    // 6. Compose the SnapshotDiff\n+    SnapshotDiff sdiff \u003d parent.new SnapshotDiff(snapshot, childrenSize,\n+        snapshotINode, parent.getSnapshotDiffs().isEmpty() ? null : parent\n+            .getSnapshotDiffs().get(0), createdList, deletedList);\n+    return sdiff;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static SnapshotDiff loadSnapshotDiff(\n      INodeDirectoryWithSnapshot parent, DataInputStream in,\n      FSImageFormat.Loader loader) throws IOException {\n    // 1. Load SnapshotDiff#childrenSize\n    int childrenSize \u003d in.readInt();\n    // 2. Read the full path of the Snapshot\u0027s Root, identify \n    //    SnapshotDiff#Snapshot\n    Snapshot snapshot \u003d findSnapshot(FSImageSerialization.readString(in),\n        loader.getFSDirectoryInLoading());\n    \n    // 3. Load SnapshotDiff#snapshotINode \n    INodeDirectory snapshotINode \u003d loadSnapshotINodeInSnapshotDiff(snapshot,\n        in, loader);\n    \n    // 4. Load the created list in SnapshotDiff#Diff\n    List\u003cINode\u003e createdList \u003d loadCreatedList(parent, in);\n    \n    // 5. Load the deleted list in SnapshotDiff#Diff\n    List\u003cINode\u003e deletedList \u003d loadDeletedList(parent, createdList, in, loader);\n    \n    // 6. Compose the SnapshotDiff\n    SnapshotDiff sdiff \u003d parent.new SnapshotDiff(snapshot, childrenSize,\n        snapshotINode, parent.getSnapshotDiffs().isEmpty() ? null : parent\n            .getSnapshotDiffs().get(0), createdList, deletedList);\n    return sdiff;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java"
    }
  }
}