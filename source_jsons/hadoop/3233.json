{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsFileSystem.java",
  "functionName": "removeOffsetParam",
  "functionId": "removeOffsetParam___url-URL(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
  "functionStartLine": 1635,
  "functionEndLine": 1663,
  "numCommitsSeen": 184,
  "timeTaken": 4820,
  "changeHistory": [
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8",
    "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce"
  ],
  "changeHistoryShort": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8": "Ymovefromfile",
    "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n    String query \u003d url.getQuery();\n    if (query \u003d\u003d null) {\n      return url;\n    }\n    final String lower \u003d StringUtils.toLowerCase(query);\n    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n      return url;\n    }\n\n    //rebuild query\n    StringBuilder b \u003d null;\n    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n        st.hasMoreTokens();) {\n      final String token \u003d st.nextToken();\n      if (!StringUtils.toLowerCase(token).startsWith(OFFSET_PARAM_PREFIX)) {\n        if (b \u003d\u003d null) {\n          b \u003d new StringBuilder(\"?\").append(token);\n        } else {\n          b.append(\u0027\u0026\u0027).append(token);\n        }\n      }\n    }\n    query \u003d b \u003d\u003d null? \"\": b.toString();\n\n    final String urlStr \u003d url.toString();\n    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java"
      }
    },
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   static URL removeOffsetParam(final URL url) throws MalformedURLException {\n     String query \u003d url.getQuery();\n     if (query \u003d\u003d null) {\n       return url;\n     }\n-    final String lower \u003d query.toLowerCase();\n+    final String lower \u003d StringUtils.toLowerCase(query);\n     if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n         \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n       return url;\n     }\n \n     //rebuild query\n     StringBuilder b \u003d null;\n     for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n         st.hasMoreTokens();) {\n       final String token \u003d st.nextToken();\n-      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n+      if (!StringUtils.toLowerCase(token).startsWith(OFFSET_PARAM_PREFIX)) {\n         if (b \u003d\u003d null) {\n           b \u003d new StringBuilder(\"?\").append(token);\n         } else {\n           b.append(\u0027\u0026\u0027).append(token);\n         }\n       }\n     }\n     query \u003d b \u003d\u003d null? \"\": b.toString();\n \n     final String urlStr \u003d url.toString();\n     return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n    String query \u003d url.getQuery();\n    if (query \u003d\u003d null) {\n      return url;\n    }\n    final String lower \u003d StringUtils.toLowerCase(query);\n    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n      return url;\n    }\n\n    //rebuild query\n    StringBuilder b \u003d null;\n    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n        st.hasMoreTokens();) {\n      final String token \u003d st.nextToken();\n      if (!StringUtils.toLowerCase(token).startsWith(OFFSET_PARAM_PREFIX)) {\n        if (b \u003d\u003d null) {\n          b \u003d new StringBuilder(\"?\").append(token);\n        } else {\n          b.append(\u0027\u0026\u0027).append(token);\n        }\n      }\n    }\n    query \u003d b \u003d\u003d null? \"\": b.toString();\n\n    final String urlStr \u003d url.toString();\n    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "18/02/15 8:06 PM",
      "commitNameOld": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   static URL removeOffsetParam(final URL url) throws MalformedURLException {\n     String query \u003d url.getQuery();\n     if (query \u003d\u003d null) {\n       return url;\n     }\n-    final String lower \u003d query.toLowerCase(Locale.ENGLISH);\n+    final String lower \u003d query.toLowerCase();\n     if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n         \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n       return url;\n     }\n \n     //rebuild query\n     StringBuilder b \u003d null;\n     for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n         st.hasMoreTokens();) {\n       final String token \u003d st.nextToken();\n-      if (!token.toLowerCase(Locale.ENGLISH).startsWith(OFFSET_PARAM_PREFIX)) {\n+      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n         if (b \u003d\u003d null) {\n           b \u003d new StringBuilder(\"?\").append(token);\n         } else {\n           b.append(\u0027\u0026\u0027).append(token);\n         }\n       }\n     }\n     query \u003d b \u003d\u003d null? \"\": b.toString();\n \n     final String urlStr \u003d url.toString();\n     return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n    String query \u003d url.getQuery();\n    if (query \u003d\u003d null) {\n      return url;\n    }\n    final String lower \u003d query.toLowerCase();\n    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n      return url;\n    }\n\n    //rebuild query\n    StringBuilder b \u003d null;\n    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n        st.hasMoreTokens();) {\n      final String token \u003d st.nextToken();\n      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n        if (b \u003d\u003d null) {\n          b \u003d new StringBuilder(\"?\").append(token);\n        } else {\n          b.append(\u0027\u0026\u0027).append(token);\n        }\n      }\n    }\n    query \u003d b \u003d\u003d null? \"\": b.toString();\n\n    final String urlStr \u003d url.toString();\n    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "05/02/15 7:45 AM",
      "commitNameOld": "03f7ed382b2c06f075811b29096d5bf79f26a5e5",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 13.52,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   static URL removeOffsetParam(final URL url) throws MalformedURLException {\n     String query \u003d url.getQuery();\n     if (query \u003d\u003d null) {\n       return url;\n     }\n-    final String lower \u003d query.toLowerCase();\n+    final String lower \u003d query.toLowerCase(Locale.ENGLISH);\n     if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n         \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n       return url;\n     }\n \n     //rebuild query\n     StringBuilder b \u003d null;\n     for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n         st.hasMoreTokens();) {\n       final String token \u003d st.nextToken();\n-      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n+      if (!token.toLowerCase(Locale.ENGLISH).startsWith(OFFSET_PARAM_PREFIX)) {\n         if (b \u003d\u003d null) {\n           b \u003d new StringBuilder(\"?\").append(token);\n         } else {\n           b.append(\u0027\u0026\u0027).append(token);\n         }\n       }\n     }\n     query \u003d b \u003d\u003d null? \"\": b.toString();\n \n     final String urlStr \u003d url.toString();\n     return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n    String query \u003d url.getQuery();\n    if (query \u003d\u003d null) {\n      return url;\n    }\n    final String lower \u003d query.toLowerCase(Locale.ENGLISH);\n    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n      return url;\n    }\n\n    //rebuild query\n    StringBuilder b \u003d null;\n    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n        st.hasMoreTokens();) {\n      final String token \u003d st.nextToken();\n      if (!token.toLowerCase(Locale.ENGLISH).startsWith(OFFSET_PARAM_PREFIX)) {\n        if (b \u003d\u003d null) {\n          b \u003d new StringBuilder(\"?\").append(token);\n        } else {\n          b.append(\u0027\u0026\u0027).append(token);\n        }\n      }\n    }\n    query \u003d b \u003d\u003d null? \"\": b.toString();\n\n    final String urlStr \u003d url.toString();\n    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-2527. WebHdfs: remove the use of \"Range\" header in Open; use ugi username if renewer parameter is null in GetDelegationToken; response OK when setting replication for non-files; rename GETFILEBLOCKLOCATIONS to GET_BLOCK_LOCATIONS and state that it is a private unstable API; replace isDirectory and isSymlink with enum {FILE, DIRECTORY, SYMLINK} in HdfsFileStatus JSON object. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1197329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/11/11 3:34 PM",
      "commitName": "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "03/11/11 6:19 AM",
      "commitNameOld": "dae055bb7048767113b104eced15385cfed26060",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.39,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n    String query \u003d url.getQuery();\n    if (query \u003d\u003d null) {\n      return url;\n    }\n    final String lower \u003d query.toLowerCase();\n    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n      return url;\n    }\n\n    //rebuild query\n    StringBuilder b \u003d null;\n    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n        st.hasMoreTokens();) {\n      final String token \u003d st.nextToken();\n      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n        if (b \u003d\u003d null) {\n          b \u003d new StringBuilder(\"?\").append(token);\n        } else {\n          b.append(\u0027\u0026\u0027).append(token);\n        }\n      }\n    }\n    query \u003d b \u003d\u003d null? \"\": b.toString();\n\n    final String urlStr \u003d url.toString();\n    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/ByteRangeInputStream.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
        "oldMethodName": "removeOffsetParam",
        "newMethodName": "removeOffsetParam"
      }
    },
    "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2453. Fix http response code for partial content in webhdfs, added getDefaultBlockSize() and getDefaultReplication() in WebHdfsFileSystem and cleared content type in ExceptionHandler. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186508 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/10/11 2:38 PM",
      "commitName": "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,29 @@\n+  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n+    String query \u003d url.getQuery();\n+    if (query \u003d\u003d null) {\n+      return url;\n+    }\n+    final String lower \u003d query.toLowerCase();\n+    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n+        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n+      return url;\n+    }\n+\n+    //rebuild query\n+    StringBuilder b \u003d null;\n+    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n+        st.hasMoreTokens();) {\n+      final String token \u003d st.nextToken();\n+      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n+        if (b \u003d\u003d null) {\n+          b \u003d new StringBuilder(\"?\").append(token);\n+        } else {\n+          b.append(\u0027\u0026\u0027).append(token);\n+        }\n+      }\n+    }\n+    query \u003d b \u003d\u003d null? \"\": b.toString();\n+\n+    final String urlStr \u003d url.toString();\n+    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static URL removeOffsetParam(final URL url) throws MalformedURLException {\n    String query \u003d url.getQuery();\n    if (query \u003d\u003d null) {\n      return url;\n    }\n    final String lower \u003d query.toLowerCase();\n    if (!lower.startsWith(OFFSET_PARAM_PREFIX)\n        \u0026\u0026 !lower.contains(\"\u0026\" + OFFSET_PARAM_PREFIX)) {\n      return url;\n    }\n\n    //rebuild query\n    StringBuilder b \u003d null;\n    for(final StringTokenizer st \u003d new StringTokenizer(query, \"\u0026\");\n        st.hasMoreTokens();) {\n      final String token \u003d st.nextToken();\n      if (!token.toLowerCase().startsWith(OFFSET_PARAM_PREFIX)) {\n        if (b \u003d\u003d null) {\n          b \u003d new StringBuilder(\"?\").append(token);\n        } else {\n          b.append(\u0027\u0026\u0027).append(token);\n        }\n      }\n    }\n    query \u003d b \u003d\u003d null? \"\": b.toString();\n\n    final String urlStr \u003d url.toString();\n    return new URL(urlStr.substring(0, urlStr.indexOf(\u0027?\u0027)) + query);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/ByteRangeInputStream.java"
    }
  }
}