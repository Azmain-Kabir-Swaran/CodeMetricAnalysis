{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleSchedulerImpl.java",
  "functionName": "getHost",
  "functionId": "getHost",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
  "functionStartLine": 439,
  "functionEndLine": 463,
  "numCommitsSeen": 19,
  "timeTaken": 7125,
  "changeHistory": [
    "0b8a7c18ddbe73b356b3c9baf4460659ccaee095",
    "7dba7005b79994106321b0f86bc8f4ea51a3c185",
    "dc2b2ae31f2eb6dae324c2e14ed7660ce605a89b",
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
    "1a389305b27ac1efec4d7923b87de3e703bf70e1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "0b8a7c18ddbe73b356b3c9baf4460659ccaee095": "Ybodychange",
    "7dba7005b79994106321b0f86bc8f4ea51a3c185": "Ybodychange",
    "dc2b2ae31f2eb6dae324c2e14ed7660ce605a89b": "Ybodychange",
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e": "Ybodychange",
    "1a389305b27ac1efec4d7923b87de3e703bf70e1": "Ymultichange(Ymovefromfile,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b8a7c18ddbe73b356b3c9baf4460659ccaee095": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6715. Fix Several Unsafe Practices (Contributed by Yufei Gu via Daniel Templeton)\n",
      "commitDate": "05/01/17 5:56 PM",
      "commitName": "0b8a7c18ddbe73b356b3c9baf4460659ccaee095",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "21/10/16 5:46 PM",
      "commitNameOld": "d4725bfcb2d300219d65395a78f957afbf37b201",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 76.05,
      "commitsBetweenForRepo": 510,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   public synchronized MapHost getHost() throws InterruptedException {\n-      while(pendingHosts.isEmpty()) {\n-        wait();\n-      }\n+    while(pendingHosts.isEmpty()) {\n+      wait();\n+    }\n \n-      MapHost host \u003d null;\n-      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n-      int numToPick \u003d random.nextInt(pendingHosts.size());\n-      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n-        host \u003d iter.next();\n-      }\n+    Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n+    // Safe to take one because we know pendingHosts isn\u0027t empty\n+    MapHost host \u003d iter.next();\n+    int numToPick \u003d random.nextInt(pendingHosts.size());\n+    for (int i \u003d 0; i \u003c numToPick; ++i) {\n+      host \u003d iter.next();\n+    }\n \n-      pendingHosts.remove(host);\n-      host.markBusy();\n+    pendingHosts.remove(host);\n+    host.markBusy();\n \n-      LOG.debug(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n-               \" to \" + Thread.currentThread().getName());\n-      SHUFFLE_START.set(Time.monotonicNow());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\n+          \"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() + \" to \"\n+              + Thread.currentThread().getName());\n+    }\n+    SHUFFLE_START.set(Time.monotonicNow());\n \n-      return host;\n+    return host;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n    while(pendingHosts.isEmpty()) {\n      wait();\n    }\n\n    Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n    // Safe to take one because we know pendingHosts isn\u0027t empty\n    MapHost host \u003d iter.next();\n    int numToPick \u003d random.nextInt(pendingHosts.size());\n    for (int i \u003d 0; i \u003c numToPick; ++i) {\n      host \u003d iter.next();\n    }\n\n    pendingHosts.remove(host);\n    host.markBusy();\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\n          \"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() + \" to \"\n              + Thread.currentThread().getName());\n    }\n    SHUFFLE_START.set(Time.monotonicNow());\n\n    return host;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
      "extendedDetails": {}
    },
    "7dba7005b79994106321b0f86bc8f4ea51a3c185": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11969. ThreadLocal initialization in several classes is not thread safe (Sean Busbey via Colin P. McCabe)\n",
      "commitDate": "26/05/15 12:15 PM",
      "commitName": "7dba7005b79994106321b0f86bc8f4ea51a3c185",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "12/05/15 8:28 AM",
      "commitNameOld": "f4e2b3cc0b1f4e49c306bc09a9dddd0495225bb2",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 14.16,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public synchronized MapHost getHost() throws InterruptedException {\n       while(pendingHosts.isEmpty()) {\n         wait();\n       }\n \n       MapHost host \u003d null;\n       Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n       int numToPick \u003d random.nextInt(pendingHosts.size());\n       for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n         host \u003d iter.next();\n       }\n \n       pendingHosts.remove(host);\n       host.markBusy();\n \n       LOG.debug(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n                \" to \" + Thread.currentThread().getName());\n-      shuffleStart.set(Time.monotonicNow());\n+      SHUFFLE_START.set(Time.monotonicNow());\n \n       return host;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n\n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n\n      pendingHosts.remove(host);\n      host.markBusy();\n\n      LOG.debug(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n               \" to \" + Thread.currentThread().getName());\n      SHUFFLE_START.set(Time.monotonicNow());\n\n      return host;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
      "extendedDetails": {}
    },
    "dc2b2ae31f2eb6dae324c2e14ed7660ce605a89b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5981. Log levels of certain MR logs can be changed to DEBUG.\nContributed by Varun Saxena.\n",
      "commitDate": "08/05/15 8:57 AM",
      "commitName": "dc2b2ae31f2eb6dae324c2e14ed7660ce605a89b",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "12/02/15 3:08 AM",
      "commitNameOld": "b42d09eb62bd1725d70da59f1a6fdac83cea82d1",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 85.2,
      "commitsBetweenForRepo": 797,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public synchronized MapHost getHost() throws InterruptedException {\n       while(pendingHosts.isEmpty()) {\n         wait();\n       }\n \n       MapHost host \u003d null;\n       Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n       int numToPick \u003d random.nextInt(pendingHosts.size());\n       for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n         host \u003d iter.next();\n       }\n \n       pendingHosts.remove(host);\n       host.markBusy();\n \n-      LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n+      LOG.debug(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n                \" to \" + Thread.currentThread().getName());\n       shuffleStart.set(Time.monotonicNow());\n \n       return host;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n\n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n\n      pendingHosts.remove(host);\n      host.markBusy();\n\n      LOG.debug(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(Time.monotonicNow());\n\n      return host;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
      "extendedDetails": {}
    },
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5891. Improved shuffle error handling across NM restarts. Contributed by Junping Du\n",
      "commitDate": "18/09/14 3:00 PM",
      "commitName": "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "18/08/14 10:57 AM",
      "commitNameOld": "f8e871d01b851cd5d8c57dd7e364b3e787521765",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 31.17,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public synchronized MapHost getHost() throws InterruptedException {\n       while(pendingHosts.isEmpty()) {\n         wait();\n       }\n \n       MapHost host \u003d null;\n       Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n       int numToPick \u003d random.nextInt(pendingHosts.size());\n       for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n         host \u003d iter.next();\n       }\n \n       pendingHosts.remove(host);\n       host.markBusy();\n \n       LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n                \" to \" + Thread.currentThread().getName());\n-      shuffleStart.set(System.currentTimeMillis());\n+      shuffleStart.set(Time.monotonicNow());\n \n       return host;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n\n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n\n      pendingHosts.remove(host);\n      host.markBusy();\n\n      LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(Time.monotonicNow());\n\n      return host;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
      "extendedDetails": {}
    },
    "1a389305b27ac1efec4d7923b87de3e703bf70e1": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-5192. Allow for alternate resolutions of TaskCompletionEvents. Contributed by Chris Douglas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:07 PM",
      "commitName": "1a389305b27ac1efec4d7923b87de3e703bf70e1",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-5192. Allow for alternate resolutions of TaskCompletionEvents. Contributed by Chris Douglas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493445 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/06/13 8:07 PM",
          "commitName": "1a389305b27ac1efec4d7923b87de3e703bf70e1",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "15/06/13 4:09 PM",
          "commitNameOld": "29a370872435ee558fbeb9f64bf70da87f8cd27a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   public synchronized MapHost getHost() throws InterruptedException {\n       while(pendingHosts.isEmpty()) {\n         wait();\n       }\n-      \n+\n       MapHost host \u003d null;\n       Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n       int numToPick \u003d random.nextInt(pendingHosts.size());\n       for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n         host \u003d iter.next();\n       }\n-      \n-      pendingHosts.remove(host);     \n+\n+      pendingHosts.remove(host);\n       host.markBusy();\n-      \n-      LOG.info(\"Assiging \" + host + \" with \" + host.getNumKnownMapOutputs() + \n+\n+      LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n                \" to \" + Thread.currentThread().getName());\n       shuffleStart.set(System.currentTimeMillis());\n-      \n+\n       return host;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n\n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n\n      pendingHosts.remove(host);\n      host.markBusy();\n\n      LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(System.currentTimeMillis());\n\n      return host;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
            "oldMethodName": "getHost",
            "newMethodName": "getHost"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5192. Allow for alternate resolutions of TaskCompletionEvents. Contributed by Chris Douglas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493445 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/06/13 8:07 PM",
          "commitName": "1a389305b27ac1efec4d7923b87de3e703bf70e1",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "15/06/13 4:09 PM",
          "commitNameOld": "29a370872435ee558fbeb9f64bf70da87f8cd27a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   public synchronized MapHost getHost() throws InterruptedException {\n       while(pendingHosts.isEmpty()) {\n         wait();\n       }\n-      \n+\n       MapHost host \u003d null;\n       Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n       int numToPick \u003d random.nextInt(pendingHosts.size());\n       for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n         host \u003d iter.next();\n       }\n-      \n-      pendingHosts.remove(host);     \n+\n+      pendingHosts.remove(host);\n       host.markBusy();\n-      \n-      LOG.info(\"Assiging \" + host + \" with \" + host.getNumKnownMapOutputs() + \n+\n+      LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n                \" to \" + Thread.currentThread().getName());\n       shuffleStart.set(System.currentTimeMillis());\n-      \n+\n       return host;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n\n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n\n      pendingHosts.remove(host);\n      host.markBusy();\n\n      LOG.info(\"Assigning \" + host + \" with \" + host.getNumKnownMapOutputs() +\n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(System.currentTimeMillis());\n\n      return host;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n      \n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n      \n      pendingHosts.remove(host);     \n      host.markBusy();\n      \n      LOG.info(\"Assiging \" + host + \" with \" + host.getNumKnownMapOutputs() + \n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(System.currentTimeMillis());\n      \n      return host;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n      \n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n      \n      pendingHosts.remove(host);     \n      host.markBusy();\n      \n      LOG.info(\"Assiging \" + host + \" with \" + host.getNumKnownMapOutputs() + \n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(System.currentTimeMillis());\n      \n      return host;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  public synchronized MapHost getHost() throws InterruptedException {\n+      while(pendingHosts.isEmpty()) {\n+        wait();\n+      }\n+      \n+      MapHost host \u003d null;\n+      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n+      int numToPick \u003d random.nextInt(pendingHosts.size());\n+      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n+        host \u003d iter.next();\n+      }\n+      \n+      pendingHosts.remove(host);     \n+      host.markBusy();\n+      \n+      LOG.info(\"Assiging \" + host + \" with \" + host.getNumKnownMapOutputs() + \n+               \" to \" + Thread.currentThread().getName());\n+      shuffleStart.set(System.currentTimeMillis());\n+      \n+      return host;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MapHost getHost() throws InterruptedException {\n      while(pendingHosts.isEmpty()) {\n        wait();\n      }\n      \n      MapHost host \u003d null;\n      Iterator\u003cMapHost\u003e iter \u003d pendingHosts.iterator();\n      int numToPick \u003d random.nextInt(pendingHosts.size());\n      for (int i\u003d0; i \u003c\u003d numToPick; ++i) {\n        host \u003d iter.next();\n      }\n      \n      pendingHosts.remove(host);     \n      host.markBusy();\n      \n      LOG.info(\"Assiging \" + host + \" with \" + host.getNumKnownMapOutputs() + \n               \" to \" + Thread.currentThread().getName());\n      shuffleStart.set(System.currentTimeMillis());\n      \n      return host;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java"
    }
  }
}