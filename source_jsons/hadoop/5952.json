{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "setFileEncryptionInfo",
  "functionId": "setFileEncryptionInfo___fsd-FSDirectory(modifiers-final)__iip-INodesInPath(modifiers-final)__info-FileEncryptionInfo(modifiers-final)__flag-XAttrSetFlag(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 408,
  "functionEndLine": 425,
  "numCommitsSeen": 306,
  "timeTaken": 8341,
  "changeHistory": [
    "1000a2af04b24c123a3b08168f36b4e90420cab7",
    "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
    "71a81b6257c0000475ad62eb69292a20d45d269c",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
    "1737950d0fc83c68f386881b843c41b0b1e342de"
  ],
  "changeHistoryShort": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f32e9fc8f7150f0e889c0774b3ad712af26fbd65": "Ymultichange(Yparameterchange,Ybodychange)",
    "71a81b6257c0000475ad62eb69292a20d45d269c": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparametermetachange,Yparameterchange)",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": "Ybodychange",
    "1737950d0fc83c68f386881b843c41b0b1e342de": "Ybodychange"
  },
  "changeHistoryDetails": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
          "commitDate": "23/08/17 5:06 PM",
          "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "16/05/17 9:28 AM",
          "commitNameOld": "9b90e52f1ec22c18cd535af2a569defcef65b093",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 99.32,
          "commitsBetweenForRepo": 573,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   static void setFileEncryptionInfo(final FSDirectory fsd,\n-      final INodesInPath iip, final FileEncryptionInfo info)\n-          throws IOException {\n+      final INodesInPath iip, final FileEncryptionInfo info,\n+      final XAttrSetFlag flag) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n     fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs,\n-                                        EnumSet.of(XAttrSetFlag.CREATE));\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs, EnumSet.of(flag));\n     } finally {\n       fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd,\n      final INodesInPath iip, final FileEncryptionInfo info,\n      final XAttrSetFlag flag) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs, EnumSet.of(flag));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory(modifiers-final), iip-INodesInPath(modifiers-final), info-FileEncryptionInfo(modifiers-final)]",
            "newValue": "[fsd-FSDirectory(modifiers-final), iip-INodesInPath(modifiers-final), info-FileEncryptionInfo(modifiers-final), flag-XAttrSetFlag(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
          "commitDate": "23/08/17 5:06 PM",
          "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "16/05/17 9:28 AM",
          "commitNameOld": "9b90e52f1ec22c18cd535af2a569defcef65b093",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 99.32,
          "commitsBetweenForRepo": 573,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   static void setFileEncryptionInfo(final FSDirectory fsd,\n-      final INodesInPath iip, final FileEncryptionInfo info)\n-          throws IOException {\n+      final INodesInPath iip, final FileEncryptionInfo info,\n+      final XAttrSetFlag flag) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n     fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs,\n-                                        EnumSet.of(XAttrSetFlag.CREATE));\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs, EnumSet.of(flag));\n     } finally {\n       fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd,\n      final INodesInPath iip, final FileEncryptionInfo info,\n      final XAttrSetFlag flag) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs, EnumSet.of(flag));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "f32e9fc8f7150f0e889c0774b3ad712af26fbd65": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10939. Reduce performance penalty of encryption zones. Contributed by Daryn sharp.\n",
      "commitDate": "06/10/16 1:11 PM",
      "commitName": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10939. Reduce performance penalty of encryption zones. Contributed by Daryn sharp.\n",
          "commitDate": "06/10/16 1:11 PM",
          "commitName": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "30/09/16 6:44 AM",
          "commitNameOld": "0670149c88852cd7c4d6774bff06c7c588558739",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 6.27,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n-      final FileEncryptionInfo info) throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd,\n+      final INodesInPath iip, final FileEncryptionInfo info)\n+          throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n     fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n       fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd,\n      final INodesInPath iip, final FileEncryptionInfo info)\n          throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory(modifiers-final), src-String(modifiers-final), info-FileEncryptionInfo(modifiers-final)]",
            "newValue": "[fsd-FSDirectory(modifiers-final), iip-INodesInPath(modifiers-final), info-FileEncryptionInfo(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10939. Reduce performance penalty of encryption zones. Contributed by Daryn sharp.\n",
          "commitDate": "06/10/16 1:11 PM",
          "commitName": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "30/09/16 6:44 AM",
          "commitNameOld": "0670149c88852cd7c4d6774bff06c7c588558739",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 6.27,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n-      final FileEncryptionInfo info) throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd,\n+      final INodesInPath iip, final FileEncryptionInfo info)\n+          throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n     fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n       fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd,\n      final INodesInPath iip, final FileEncryptionInfo info)\n          throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "71a81b6257c0000475ad62eb69292a20d45d269c": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparametermetachange,Yparameterchange)",
      "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
      "commitDate": "24/09/15 8:34 AM",
      "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "24/09/15 8:34 AM",
          "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/09/15 8:12 AM",
          "commitNameOld": "97a08807ec328a6f455d941fe3d9a469d885caa6",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n-      throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n+      final FileEncryptionInfo info) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n-\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n      final FileEncryptionInfo info) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
            "oldMethodName": "setFileEncryptionInfo",
            "newMethodName": "setFileEncryptionInfo"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "24/09/15 8:34 AM",
          "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/09/15 8:12 AM",
          "commitNameOld": "97a08807ec328a6f455d941fe3d9a469d885caa6",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n-      throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n+      final FileEncryptionInfo info) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n-\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n      final FileEncryptionInfo info) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "24/09/15 8:34 AM",
          "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/09/15 8:12 AM",
          "commitNameOld": "97a08807ec328a6f455d941fe3d9a469d885caa6",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n-      throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n+      final FileEncryptionInfo info) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n-\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n      final FileEncryptionInfo info) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "24/09/15 8:34 AM",
          "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/09/15 8:12 AM",
          "commitNameOld": "97a08807ec328a6f455d941fe3d9a469d885caa6",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n-      throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n+      final FileEncryptionInfo info) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n-\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n      final FileEncryptionInfo info) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[src-String, info-FileEncryptionInfo]",
            "newValue": "[fsd-FSDirectory(modifiers-final), src-String(modifiers-final), info-FileEncryptionInfo(modifiers-final)]"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "24/09/15 8:34 AM",
          "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/09/15 8:12 AM",
          "commitNameOld": "97a08807ec328a6f455d941fe3d9a469d885caa6",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n-      throws IOException {\n+  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n+      final FileEncryptionInfo info) throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n-\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n+      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void setFileEncryptionInfo(final FSDirectory fsd, final String src,\n      final FileEncryptionInfo info) throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n    fsd.writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(fsd, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[src-String, info-FileEncryptionInfo]",
            "newValue": "[fsd-FSDirectory(modifiers-final), src-String(modifiers-final), info-FileEncryptionInfo(modifiers-final)]"
          }
        }
      ]
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "10/09/15 7:16 AM",
      "commitNameOld": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 11.48,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n       throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n-        PBHelper.convertPerFileEncInfo(info);\n+        PBHelperClient.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n \n     writeLock();\n     try {\n       FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n                                         EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n      throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelperClient.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n\n    writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "08/12/14 11:52 AM",
      "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/12/14 11:04 AM",
      "commitNameOld": "d555bb2120cb44d094546e6b6560926561876c10",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n       throws IOException {\n     // Make the PB for the xattr\n     final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n         PBHelper.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n \n     writeLock();\n     try {\n-      unprotectedSetXAttrs(src, xAttrs, EnumSet.of(XAttrSetFlag.CREATE));\n+      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n+                                        EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n      throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelper.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n\n    writeLock();\n    try {\n      FSDirXAttrOp.unprotectedSetXAttrs(this, src, xAttrs,\n                                        EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "1737950d0fc83c68f386881b843c41b0b1e342de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6987. Move CipherSuite xattr information up to the encryption zone root. Contributed by Zhe Zhang.\n",
      "commitDate": "21/09/14 9:29 PM",
      "commitName": "1737950d0fc83c68f386881b843c41b0b1e342de",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/09/14 10:00 PM",
      "commitNameOld": "2d2b0009e662db75cf22e2ce8d618ed0a8e61c2f",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n       throws IOException {\n     // Make the PB for the xattr\n-    final HdfsProtos.FileEncryptionInfoProto proto \u003d PBHelper.convert(info);\n+    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n+        PBHelper.convertPerFileEncInfo(info);\n     final byte[] protoBytes \u003d proto.toByteArray();\n     final XAttr fileEncryptionAttr \u003d\n         XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n     final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     xAttrs.add(fileEncryptionAttr);\n \n     writeLock();\n     try {\n       unprotectedSetXAttrs(src, xAttrs, EnumSet.of(XAttrSetFlag.CREATE));\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setFileEncryptionInfo(String src, FileEncryptionInfo info)\n      throws IOException {\n    // Make the PB for the xattr\n    final HdfsProtos.PerFileEncryptionInfoProto proto \u003d\n        PBHelper.convertPerFileEncInfo(info);\n    final byte[] protoBytes \u003d proto.toByteArray();\n    final XAttr fileEncryptionAttr \u003d\n        XAttrHelper.buildXAttr(CRYPTO_XATTR_FILE_ENCRYPTION_INFO, protoBytes);\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    xAttrs.add(fileEncryptionAttr);\n\n    writeLock();\n    try {\n      unprotectedSetXAttrs(src, xAttrs, EnumSet.of(XAttrSetFlag.CREATE));\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    }
  }
}