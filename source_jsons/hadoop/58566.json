{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonNodeLabelsManager.java",
  "functionName": "getLabelsToNodes",
  "functionId": "getLabelsToNodes___labels-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
  "functionStartLine": 850,
  "functionEndLine": 859,
  "numCommitsSeen": 42,
  "timeTaken": 2313,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "d4f53fc9631d682cd79ba440aefa6750dcc898be",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
    "5bd984691b3e3df5d8aac910295138996e7a5839"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "d4f53fc9631d682cd79ba440aefa6750dcc898be": "Ybodychange",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": "Ybodychange",
    "5bd984691b3e3df5d8aac910295138996e7a5839": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 3.58,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d getLabelsToNodesMapping(labels,\n           String.class);\n       return Collections.unmodifiableMap(labelsToNodes);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n    readLock.lock();\n    try {\n      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d getLabelsToNodesMapping(labels,\n          String.class);\n      return Collections.unmodifiableMap(labelsToNodes);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "d4f53fc9631d682cd79ba440aefa6750dcc898be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3579. CommonNodeLabelsManager should support NodeLabel instead of string label name when getting node-to-label/label-to-label mappings. (Sunil G via wangda)\n",
      "commitDate": "13/05/15 1:29 PM",
      "commitName": "d4f53fc9631d682cd79ba440aefa6750dcc898be",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/04/15 4:24 PM",
      "commitNameOld": "db1b674b50ddecf2774f4092d677c412722bdcb1",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 15.88,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,10 @@\n   public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n     try {\n       readLock.lock();\n-      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d\n-          new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n-      for (String label : labels) {\n-        if(label.equals(NO_LABEL)) {\n-          continue;\n-        }\n-        RMNodeLabel nodeLabelInfo \u003d labelCollections.get(label);\n-        if(nodeLabelInfo !\u003d null) {\n-          Set\u003cNodeId\u003e nodeIds \u003d nodeLabelInfo.getAssociatedNodeIds();\n-          if (!nodeIds.isEmpty()) {\n-            labelsToNodes.put(label, nodeIds);\n-          }\n-        } else {\n-          LOG.warn(\"getLabelsToNodes : Label [\" + label + \"] cannot be found\");\n-        }\n-      }      \n+      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d getLabelsToNodesMapping(labels,\n+          String.class);\n       return Collections.unmodifiableMap(labelsToNodes);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n    try {\n      readLock.lock();\n      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d getLabelsToNodesMapping(labels,\n          String.class);\n      return Collections.unmodifiableMap(labelsToNodes);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3345. Add non-exclusive node label API. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 7:04 PM",
      "commitName": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
      "commitAuthor": "Jian He",
      "commitDateOld": "16/03/15 7:19 AM",
      "commitNameOld": "3da9a97cfbcc3a1c50aaf85b1a129d4d269cd5fd",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 4.49,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n     try {\n       readLock.lock();\n       Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d\n           new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n       for (String label : labels) {\n         if(label.equals(NO_LABEL)) {\n           continue;\n         }\n-        NodeLabel nodeLabelInfo \u003d labelCollections.get(label);\n+        RMNodeLabel nodeLabelInfo \u003d labelCollections.get(label);\n         if(nodeLabelInfo !\u003d null) {\n           Set\u003cNodeId\u003e nodeIds \u003d nodeLabelInfo.getAssociatedNodeIds();\n           if (!nodeIds.isEmpty()) {\n             labelsToNodes.put(label, nodeIds);\n           }\n         } else {\n           LOG.warn(\"getLabelsToNodes : Label [\" + label + \"] cannot be found\");\n         }\n       }      \n       return Collections.unmodifiableMap(labelsToNodes);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n    try {\n      readLock.lock();\n      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d\n          new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n      for (String label : labels) {\n        if(label.equals(NO_LABEL)) {\n          continue;\n        }\n        RMNodeLabel nodeLabelInfo \u003d labelCollections.get(label);\n        if(nodeLabelInfo !\u003d null) {\n          Set\u003cNodeId\u003e nodeIds \u003d nodeLabelInfo.getAssociatedNodeIds();\n          if (!nodeIds.isEmpty()) {\n            labelsToNodes.put(label, nodeIds);\n          }\n        } else {\n          LOG.warn(\"getLabelsToNodes : Label [\" + label + \"] cannot be found\");\n        }\n      }      \n      return Collections.unmodifiableMap(labelsToNodes);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "5bd984691b3e3df5d8aac910295138996e7a5839": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3075. NodeLabelsManager implementation to retrieve label to node mapping (Varun Saxena via wangda)\n",
      "commitDate": "03/02/15 12:52 PM",
      "commitName": "5bd984691b3e3df5d8aac910295138996e7a5839",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,24 @@\n+  public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n+    try {\n+      readLock.lock();\n+      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d\n+          new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n+      for (String label : labels) {\n+        if(label.equals(NO_LABEL)) {\n+          continue;\n+        }\n+        NodeLabel nodeLabelInfo \u003d labelCollections.get(label);\n+        if(nodeLabelInfo !\u003d null) {\n+          Set\u003cNodeId\u003e nodeIds \u003d nodeLabelInfo.getAssociatedNodeIds();\n+          if (!nodeIds.isEmpty()) {\n+            labelsToNodes.put(label, nodeIds);\n+          }\n+        } else {\n+          LOG.warn(\"getLabelsToNodes : Label [\" + label + \"] cannot be found\");\n+        }\n+      }      \n+      return Collections.unmodifiableMap(labelsToNodes);\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Set\u003cNodeId\u003e\u003e getLabelsToNodes(Set\u003cString\u003e labels) {\n    try {\n      readLock.lock();\n      Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodes \u003d\n          new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n      for (String label : labels) {\n        if(label.equals(NO_LABEL)) {\n          continue;\n        }\n        NodeLabel nodeLabelInfo \u003d labelCollections.get(label);\n        if(nodeLabelInfo !\u003d null) {\n          Set\u003cNodeId\u003e nodeIds \u003d nodeLabelInfo.getAssociatedNodeIds();\n          if (!nodeIds.isEmpty()) {\n            labelsToNodes.put(label, nodeIds);\n          }\n        } else {\n          LOG.warn(\"getLabelsToNodes : Label [\" + label + \"] cannot be found\");\n        }\n      }      \n      return Collections.unmodifiableMap(labelsToNodes);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java"
    }
  }
}