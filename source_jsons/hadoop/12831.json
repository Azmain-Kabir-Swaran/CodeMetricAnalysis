{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeStorageInfo.java",
  "functionName": "addBlock",
  "functionId": "addBlock___b-BlockInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
  "functionStartLine": 270,
  "functionEndLine": 272,
  "numCommitsSeen": 101,
  "timeTaken": 5326,
  "changeHistory": [
    "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
    "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
    "058af60c56207907f2bedf76df4284e86d923e0c",
    "662c5bb3af474a78688d0df523d11aff7ee756b6",
    "05d1bf4157e6660610f11951845e59899260596e",
    "a70c9de3f1fcb5930a5eab5a92085055d79edbf5",
    "45db4d204b796eee6dd0e39d3cc94b70c47028d4",
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
    "282be1b38e5cd141ed7e2b2194bfb67a7c2f7f15",
    "5d9d702607913685eab0d8ad077040ddc82bf085"
  ],
  "changeHistoryShort": {
    "663eba0ab1c73b45f98e46ffc87ad8fd91584046": "Ymultichange(Ymodifierchange,Ybodychange)",
    "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Yparameterchange",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": "Yparameterchange",
    "058af60c56207907f2bedf76df4284e86d923e0c": "Ymultichange(Yreturntypechange,Ybodychange)",
    "662c5bb3af474a78688d0df523d11aff7ee756b6": "Ybodychange",
    "05d1bf4157e6660610f11951845e59899260596e": "Ybodychange",
    "a70c9de3f1fcb5930a5eab5a92085055d79edbf5": "Ybodychange",
    "45db4d204b796eee6dd0e39d3cc94b70c47028d4": "Ymodifierchange",
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b": "Ymodifierchange",
    "282be1b38e5cd141ed7e2b2194bfb67a7c2f7f15": "Ybodychange",
    "5d9d702607913685eab0d8ad077040ddc82bf085": "Yintroduced"
  },
  "changeHistoryDetails": {
    "663eba0ab1c73b45f98e46ffc87ad8fd91584046": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert \"HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\"\n\nThis reverts commit de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5.\n",
      "commitDate": "06/08/15 10:21 AM",
      "commitName": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\"\n\nThis reverts commit de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5.\n",
          "commitDate": "06/08/15 10:21 AM",
          "commitName": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "29/06/15 12:12 PM",
          "commitNameOld": "2ffd84273ac490724fe7e7825664bb6d09ef0e99",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 37.92,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,24 @@\n-  AddBlockResult addBlock(BlockInfo b) {\n-    return addBlock(b, b);\n+  public AddBlockResult addBlock(BlockInfo b) {\n+    // First check whether the block belongs to a different storage\n+    // on the same DN.\n+    AddBlockResult result \u003d AddBlockResult.ADDED;\n+    DatanodeStorageInfo otherStorage \u003d\n+        b.findStorageInfo(getDatanodeDescriptor());\n+\n+    if (otherStorage !\u003d null) {\n+      if (otherStorage !\u003d this) {\n+        // The block belongs to a different storage. Remove it first.\n+        otherStorage.removeBlock(b);\n+        result \u003d AddBlockResult.REPLACED;\n+      } else {\n+        // The block is already associated with this storage.\n+        return AddBlockResult.ALREADY_EXIST;\n+      }\n+    }\n+\n+    // add to the head of the data-node list\n+    b.addStorage(this);\n+    blockList \u003d b.listInsert(blockList, this);\n+    numBlocks++;\n+    return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AddBlockResult addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\"\n\nThis reverts commit de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5.\n",
          "commitDate": "06/08/15 10:21 AM",
          "commitName": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "29/06/15 12:12 PM",
          "commitNameOld": "2ffd84273ac490724fe7e7825664bb6d09ef0e99",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 37.92,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,24 @@\n-  AddBlockResult addBlock(BlockInfo b) {\n-    return addBlock(b, b);\n+  public AddBlockResult addBlock(BlockInfo b) {\n+    // First check whether the block belongs to a different storage\n+    // on the same DN.\n+    AddBlockResult result \u003d AddBlockResult.ADDED;\n+    DatanodeStorageInfo otherStorage \u003d\n+        b.findStorageInfo(getDatanodeDescriptor());\n+\n+    if (otherStorage !\u003d null) {\n+      if (otherStorage !\u003d this) {\n+        // The block belongs to a different storage. Remove it first.\n+        otherStorage.removeBlock(b);\n+        result \u003d AddBlockResult.REPLACED;\n+      } else {\n+        // The block is already associated with this storage.\n+        return AddBlockResult.ALREADY_EXIST;\n+      }\n+    }\n+\n+    // add to the head of the data-node list\n+    b.addStorage(this);\n+    blockList \u003d b.listInsert(blockList, this);\n+    numBlocks++;\n+    return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AddBlockResult addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\n",
      "commitDate": "26/06/15 10:49 AM",
      "commitName": "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\n",
          "commitDate": "26/06/15 10:49 AM",
          "commitName": "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/05/15 3:42 PM",
          "commitNameOld": "4928f5473394981829e5ffd4b16ea0801baf5c45",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 29.8,
          "commitsBetweenForRepo": 212,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,3 @@\n-  public AddBlockResult addBlock(BlockInfo b) {\n-    // First check whether the block belongs to a different storage\n-    // on the same DN.\n-    AddBlockResult result \u003d AddBlockResult.ADDED;\n-    DatanodeStorageInfo otherStorage \u003d\n-        b.findStorageInfo(getDatanodeDescriptor());\n-\n-    if (otherStorage !\u003d null) {\n-      if (otherStorage !\u003d this) {\n-        // The block belongs to a different storage. Remove it first.\n-        otherStorage.removeBlock(b);\n-        result \u003d AddBlockResult.REPLACED;\n-      } else {\n-        // The block is already associated with this storage.\n-        return AddBlockResult.ALREADY_EXIST;\n-      }\n-    }\n-\n-    // add to the head of the data-node list\n-    b.addStorage(this);\n-    blockList \u003d b.listInsert(blockList, this);\n-    numBlocks++;\n-    return result;\n+  AddBlockResult addBlock(BlockInfo b) {\n+    return addBlock(b, b);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddBlockResult addBlock(BlockInfo b) {\n    return addBlock(b, b);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\n",
          "commitDate": "26/06/15 10:49 AM",
          "commitName": "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/05/15 3:42 PM",
          "commitNameOld": "4928f5473394981829e5ffd4b16ea0801baf5c45",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 29.8,
          "commitsBetweenForRepo": 212,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,3 @@\n-  public AddBlockResult addBlock(BlockInfo b) {\n-    // First check whether the block belongs to a different storage\n-    // on the same DN.\n-    AddBlockResult result \u003d AddBlockResult.ADDED;\n-    DatanodeStorageInfo otherStorage \u003d\n-        b.findStorageInfo(getDatanodeDescriptor());\n-\n-    if (otherStorage !\u003d null) {\n-      if (otherStorage !\u003d this) {\n-        // The block belongs to a different storage. Remove it first.\n-        otherStorage.removeBlock(b);\n-        result \u003d AddBlockResult.REPLACED;\n-      } else {\n-        // The block is already associated with this storage.\n-        return AddBlockResult.ALREADY_EXIST;\n-      }\n-    }\n-\n-    // add to the head of the data-node list\n-    b.addStorage(this);\n-    blockList \u003d b.listInsert(blockList, this);\n-    numBlocks++;\n-    return result;\n+  AddBlockResult addBlock(BlockInfo b) {\n+    return addBlock(b, b);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddBlockResult addBlock(BlockInfo b) {\n    return addBlock(b, b);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/04/15 2:54 AM",
      "commitNameOld": "8ddbb8dd433862509bd9b222dddafe2c3a74778a",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 36.53,
      "commitsBetweenForRepo": 393,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-  public AddBlockResult addBlock(BlockInfoContiguous b) {\n+  public AddBlockResult addBlock(BlockInfo b) {\n     // First check whether the block belongs to a different storage\n     // on the same DN.\n     AddBlockResult result \u003d AddBlockResult.ADDED;\n     DatanodeStorageInfo otherStorage \u003d\n         b.findStorageInfo(getDatanodeDescriptor());\n \n     if (otherStorage !\u003d null) {\n       if (otherStorage !\u003d this) {\n         // The block belongs to a different storage. Remove it first.\n         otherStorage.removeBlock(b);\n         result \u003d AddBlockResult.REPLACED;\n       } else {\n         // The block is already associated with this storage.\n         return AddBlockResult.ALREADY_EXIST;\n       }\n     }\n \n     // add to the head of the data-node list\n     b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AddBlockResult addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {
        "oldValue": "[b-BlockInfoContiguous]",
        "newValue": "[b-BlockInfo]"
      }
    },
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-7743. Code cleanup of BlockInfo and rename BlockInfo to BlockInfoContiguous. Contributed by Jing Zhao.\n",
      "commitDate": "08/02/15 11:51 AM",
      "commitName": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "12/01/15 10:50 PM",
      "commitNameOld": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
      "commitAuthorOld": "Plamen Jeliazkov",
      "daysBetweenCommits": 26.54,
      "commitsBetweenForRepo": 219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-  public AddBlockResult addBlock(BlockInfo b) {\n+  public AddBlockResult addBlock(BlockInfoContiguous b) {\n     // First check whether the block belongs to a different storage\n     // on the same DN.\n     AddBlockResult result \u003d AddBlockResult.ADDED;\n     DatanodeStorageInfo otherStorage \u003d\n         b.findStorageInfo(getDatanodeDescriptor());\n \n     if (otherStorage !\u003d null) {\n       if (otherStorage !\u003d this) {\n         // The block belongs to a different storage. Remove it first.\n         otherStorage.removeBlock(b);\n         result \u003d AddBlockResult.REPLACED;\n       } else {\n         // The block is already associated with this storage.\n         return AddBlockResult.ALREADY_EXIST;\n       }\n     }\n \n     // add to the head of the data-node list\n     b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AddBlockResult addBlock(BlockInfoContiguous b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {
        "oldValue": "[b-BlockInfo]",
        "newValue": "[b-BlockInfoContiguous]"
      }
    },
    "058af60c56207907f2bedf76df4284e86d923e0c": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7310. Mover can give first priority to local DN if it has target storage type available in local DN. (Vinayakumar B via umamahesh)\n",
      "commitDate": "26/11/14 9:57 AM",
      "commitName": "058af60c56207907f2bedf76df4284e86d923e0c",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7310. Mover can give first priority to local DN if it has target storage type available in local DN. (Vinayakumar B via umamahesh)\n",
          "commitDate": "26/11/14 9:57 AM",
          "commitName": "058af60c56207907f2bedf76df4284e86d923e0c",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "15/10/14 8:44 PM",
          "commitNameOld": "41980c56d3c01d7a0ddc7deea2d89b7f28026722",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 41.59,
          "commitsBetweenForRepo": 372,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  public boolean addBlock(BlockInfo b) {\n+  public AddBlockResult addBlock(BlockInfo b) {\n     // First check whether the block belongs to a different storage\n     // on the same DN.\n-    boolean replaced \u003d false;\n+    AddBlockResult result \u003d AddBlockResult.ADDED;\n     DatanodeStorageInfo otherStorage \u003d\n         b.findStorageInfo(getDatanodeDescriptor());\n \n     if (otherStorage !\u003d null) {\n       if (otherStorage !\u003d this) {\n         // The block belongs to a different storage. Remove it first.\n         otherStorage.removeBlock(b);\n-        replaced \u003d true;\n+        result \u003d AddBlockResult.REPLACED;\n       } else {\n         // The block is already associated with this storage.\n-        return false;\n+        return AddBlockResult.ALREADY_EXIST;\n       }\n     }\n \n     // add to the head of the data-node list\n     b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n-    return !replaced;\n+    return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AddBlockResult addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "AddBlockResult"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7310. Mover can give first priority to local DN if it has target storage type available in local DN. (Vinayakumar B via umamahesh)\n",
          "commitDate": "26/11/14 9:57 AM",
          "commitName": "058af60c56207907f2bedf76df4284e86d923e0c",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "15/10/14 8:44 PM",
          "commitNameOld": "41980c56d3c01d7a0ddc7deea2d89b7f28026722",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 41.59,
          "commitsBetweenForRepo": 372,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  public boolean addBlock(BlockInfo b) {\n+  public AddBlockResult addBlock(BlockInfo b) {\n     // First check whether the block belongs to a different storage\n     // on the same DN.\n-    boolean replaced \u003d false;\n+    AddBlockResult result \u003d AddBlockResult.ADDED;\n     DatanodeStorageInfo otherStorage \u003d\n         b.findStorageInfo(getDatanodeDescriptor());\n \n     if (otherStorage !\u003d null) {\n       if (otherStorage !\u003d this) {\n         // The block belongs to a different storage. Remove it first.\n         otherStorage.removeBlock(b);\n-        replaced \u003d true;\n+        result \u003d AddBlockResult.REPLACED;\n       } else {\n         // The block is already associated with this storage.\n-        return false;\n+        return AddBlockResult.ALREADY_EXIST;\n       }\n     }\n \n     // add to the head of the data-node list\n     b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n-    return !replaced;\n+    return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AddBlockResult addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "662c5bb3af474a78688d0df523d11aff7ee756b6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6830. BlockInfo.addStorage fails when DN changes the storage for a block replica. (Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617598 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:42 PM",
      "commitName": "662c5bb3af474a78688d0df523d11aff7ee756b6",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/08/14 2:22 PM",
      "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 4.01,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,24 @@\n   public boolean addBlock(BlockInfo b) {\n-    if(!b.addStorage(this))\n-      return false;\n+    // First check whether the block belongs to a different storage\n+    // on the same DN.\n+    boolean replaced \u003d false;\n+    DatanodeStorageInfo otherStorage \u003d\n+        b.findStorageInfo(getDatanodeDescriptor());\n+\n+    if (otherStorage !\u003d null) {\n+      if (otherStorage !\u003d this) {\n+        // The block belongs to a different storage. Remove it first.\n+        otherStorage.removeBlock(b);\n+        replaced \u003d true;\n+      } else {\n+        // The block is already associated with this storage.\n+        return false;\n+      }\n+    }\n+\n     // add to the head of the data-node list\n+    b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n-    return true;\n+    return !replaced;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    boolean replaced \u003d false;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        replaced \u003d true;\n      } else {\n        // The block is already associated with this storage.\n        return false;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return !replaced;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {}
    },
    "05d1bf4157e6660610f11951845e59899260596e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6830. Revert accidental checkin\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:22 PM",
      "commitName": "05d1bf4157e6660610f11951845e59899260596e",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/08/14 2:20 PM",
      "commitNameOld": "a70c9de3f1fcb5930a5eab5a92085055d79edbf5",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,8 @@\n   public boolean addBlock(BlockInfo b) {\n-    // First check whether the block belongs to a different storage\n-    // on the same DN.\n-    boolean replaced \u003d false;\n-    DatanodeStorageInfo otherStorage \u003d\n-        b.findStorageInfo(getDatanodeDescriptor());\n-\n-    if (otherStorage !\u003d null) {\n-      if (otherStorage !\u003d this) {\n-        // The block belongs to a different storage. Remove it first.\n-        otherStorage.removeBlock(b);\n-        replaced \u003d true;\n-      } else {\n-        // The block is already associated with this storage.\n-        return false;\n-      }\n-    }\n-\n+    if(!b.addStorage(this))\n+      return false;\n     // add to the head of the data-node list\n-    b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n-    return !replaced;\n+    return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addBlock(BlockInfo b) {\n    if(!b.addStorage(this))\n      return false;\n    // add to the head of the data-node list\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {}
    },
    "a70c9de3f1fcb5930a5eab5a92085055d79edbf5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6830. BlockInfo.addStorage fails when DN changes the storage for a block replica. (Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616883 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:20 PM",
      "commitName": "a70c9de3f1fcb5930a5eab5a92085055d79edbf5",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "01/08/14 9:58 AM",
      "commitNameOld": "45db4d204b796eee6dd0e39d3cc94b70c47028d4",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 7.18,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,24 @@\n   public boolean addBlock(BlockInfo b) {\n-    if(!b.addStorage(this))\n-      return false;\n+    // First check whether the block belongs to a different storage\n+    // on the same DN.\n+    boolean replaced \u003d false;\n+    DatanodeStorageInfo otherStorage \u003d\n+        b.findStorageInfo(getDatanodeDescriptor());\n+\n+    if (otherStorage !\u003d null) {\n+      if (otherStorage !\u003d this) {\n+        // The block belongs to a different storage. Remove it first.\n+        otherStorage.removeBlock(b);\n+        replaced \u003d true;\n+      } else {\n+        // The block is already associated with this storage.\n+        return false;\n+      }\n+    }\n+\n     // add to the head of the data-node list\n+    b.addStorage(this);\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n-    return true;\n+    return !replaced;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addBlock(BlockInfo b) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    boolean replaced \u003d false;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        replaced \u003d true;\n      } else {\n        // The block is already associated with this storage.\n        return false;\n      }\n    }\n\n    // add to the head of the data-node list\n    b.addStorage(this);\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return !replaced;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {}
    },
    "45db4d204b796eee6dd0e39d3cc94b70c47028d4": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6794. Update BlockManager methods to use DatanodeStorageInfo where possible. (Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/14 9:58 AM",
      "commitName": "45db4d204b796eee6dd0e39d3cc94b70c47028d4",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "28/07/14 4:43 PM",
      "commitNameOld": "4f9ffc7455ae2182df1da1b7e3f5a55e645fc8a4",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.72,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  boolean addBlock(BlockInfo b) {\n+  public boolean addBlock(BlockInfo b) {\n     if(!b.addStorage(this))\n       return false;\n     // add to the head of the data-node list\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addBlock(BlockInfo b) {\n    if(!b.addStorage(this))\n      return false;\n    // add to the head of the data-node list\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/11/13 12:07 PM",
      "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/11/13 4:13 PM",
      "commitNameOld": "75777f1626449e9f45e6e4b1daee644c955bbabc",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 15.83,
      "commitsBetweenForRepo": 120,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  public boolean addBlock(BlockInfo b) {\n+  boolean addBlock(BlockInfo b) {\n     if(!b.addStorage(this))\n       return false;\n     // add to the head of the data-node list\n     blockList \u003d b.listInsert(blockList, this);\n     numBlocks++;\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean addBlock(BlockInfo b) {\n    if(!b.addStorage(this))\n      return false;\n    // add to the head of the data-node list\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "282be1b38e5cd141ed7e2b2194bfb67a7c2f7f15": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5134. Move blockContentsStale, heartbeatedSinceFailover and firstBlockReport from DatanodeDescriptor to DatanodeStorageInfo; and fix a synchronization problem in DatanodeStorageInfo.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1520938 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/13 3:53 PM",
      "commitName": "282be1b38e5cd141ed7e2b2194bfb67a7c2f7f15",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "03/09/13 7:03 AM",
      "commitNameOld": "3f070e83b1f4e0211ece8c0ab508a61188ad352a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.37,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   public boolean addBlock(BlockInfo b) {\n     if(!b.addStorage(this))\n       return false;\n     // add to the head of the data-node list\n     blockList \u003d b.listInsert(blockList, this);\n+    numBlocks++;\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addBlock(BlockInfo b) {\n    if(!b.addStorage(this))\n      return false;\n    // add to the head of the data-node list\n    blockList \u003d b.listInsert(blockList, this);\n    numBlocks++;\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
      "extendedDetails": {}
    },
    "5d9d702607913685eab0d8ad077040ddc82bf085": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4987. Namenode changes to track multiple storages per datanode.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1518087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/08/13 11:30 PM",
      "commitName": "5d9d702607913685eab0d8ad077040ddc82bf085",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,7 @@\n+  public boolean addBlock(BlockInfo b) {\n+    if(!b.addStorage(this))\n+      return false;\n+    // add to the head of the data-node list\n+    blockList \u003d b.listInsert(blockList, this);\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addBlock(BlockInfo b) {\n    if(!b.addStorage(this))\n      return false;\n    // add to the head of the data-node list\n    blockList \u003d b.listInsert(blockList, this);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java"
    }
  }
}