{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "createEmptyObject",
  "functionId": "createEmptyObject___objectName-String(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 3773,
  "functionEndLine": 3790,
  "numCommitsSeen": 172,
  "timeTaken": 5971,
  "changeHistory": [
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "621b43e254afaff708cd6fc4698b29628f6abc33",
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
    "27c4e90efce04e1b1302f668b5eb22412e00d033",
    "d5403747b57b1e294e533ce17f197e7be8f5339c",
    "24d920b80eb3626073925a1d0b6dcf148add8cc0"
  ],
  "changeHistoryShort": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ymultichange(Yexceptionschange,Ybodychange)",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Ybodychange",
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "27c4e90efce04e1b1302f668b5eb22412e00d033": "Ybodychange",
    "d5403747b57b1e294e533ce17f197e7be8f5339c": "Ybodychange",
    "24d920b80eb3626073925a1d0b6dcf148add8cc0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,18 @@\n   private void createEmptyObject(final String objectName)\n-      throws AmazonClientException, AmazonServiceException,\n-      InterruptedIOException {\n+      throws IOException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n     PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n         newObjectMetadata(0L),\n         im);\n-    UploadInfo info \u003d putObject(putObjectRequest);\n-    try {\n-      info.getUpload().waitForUploadResult();\n-    } catch (InterruptedException e) {\n-      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n-    }\n+    invoker.retry(\"PUT 0-byte object \", objectName,\n+         true,\n+        () -\u003e putObjectDirect(putObjectRequest));\n     incrementPutProgressStatistics(objectName, 0);\n     instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createEmptyObject(final String objectName)\n      throws IOException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n        newObjectMetadata(0L),\n        im);\n    invoker.retry(\"PUT 0-byte object \", objectName,\n         true,\n        () -\u003e putObjectDirect(putObjectRequest));\n    incrementPutProgressStatistics(objectName, 0);\n    instrumentation.directoryCreated();\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[AmazonClientException, AmazonServiceException, InterruptedIOException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,18 @@\n   private void createEmptyObject(final String objectName)\n-      throws AmazonClientException, AmazonServiceException,\n-      InterruptedIOException {\n+      throws IOException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n     PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n         newObjectMetadata(0L),\n         im);\n-    UploadInfo info \u003d putObject(putObjectRequest);\n-    try {\n-      info.getUpload().waitForUploadResult();\n-    } catch (InterruptedException e) {\n-      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n-    }\n+    invoker.retry(\"PUT 0-byte object \", objectName,\n+         true,\n+        () -\u003e putObjectDirect(putObjectRequest));\n     incrementPutProgressStatistics(objectName, 0);\n     instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createEmptyObject(final String objectName)\n      throws IOException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n        newObjectMetadata(0L),\n        im);\n    invoker.retry(\"PUT 0-byte object \", objectName,\n         true,\n        () -\u003e putObjectDirect(putObjectRequest));\n    incrementPutProgressStatistics(objectName, 0);\n    instrumentation.directoryCreated();\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "05/06/17 11:26 AM",
      "commitNameOld": "6aeda55bb8f741d9dafd41f6dfbf1a88acdd4003",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 87.78,
      "commitsBetweenForRepo": 591,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void createEmptyObject(final String objectName)\n       throws AmazonClientException, AmazonServiceException,\n       InterruptedIOException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n     PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n         newObjectMetadata(0L),\n         im);\n-    Upload upload \u003d putObject(putObjectRequest);\n+    UploadInfo info \u003d putObject(putObjectRequest);\n     try {\n-      upload.waitForUploadResult();\n+      info.getUpload().waitForUploadResult();\n     } catch (InterruptedException e) {\n       throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n     }\n     incrementPutProgressStatistics(objectName, 0);\n     instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createEmptyObject(final String objectName)\n      throws AmazonClientException, AmazonServiceException,\n      InterruptedIOException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n        newObjectMetadata(0L),\n        im);\n    UploadInfo info \u003d putObject(putObjectRequest);\n    try {\n      info.getUpload().waitForUploadResult();\n    } catch (InterruptedException e) {\n      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n    }\n    incrementPutProgressStatistics(objectName, 0);\n    instrumentation.directoryCreated();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
      "commitDate": "03/06/16 8:55 AM",
      "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
          "commitDate": "03/06/16 8:55 AM",
          "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "01/06/16 2:49 PM",
          "commitNameOld": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.75,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n-  private void createEmptyObject(final String bucketName, final String objectName)\n-      throws AmazonClientException, AmazonServiceException {\n+  private void createEmptyObject(final String objectName)\n+      throws AmazonClientException, AmazonServiceException,\n+      InterruptedIOException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n-    final ObjectMetadata om \u003d new ObjectMetadata();\n-    om.setContentLength(0L);\n-    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n-      om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n+    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n+        newObjectMetadata(0L),\n+        im);\n+    Upload upload \u003d putObject(putObjectRequest);\n+    try {\n+      upload.waitForUploadResult();\n+    } catch (InterruptedException e) {\n+      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n     }\n-    PutObjectRequest putObjectRequest \u003d\n-        new PutObjectRequest(bucketName, objectName, im, om);\n-    putObjectRequest.setCannedAcl(cannedACL);\n-    s3.putObject(putObjectRequest);\n-    statistics.incrementWriteOps(1);\n+    incrementPutProgressStatistics(objectName, 0);\n     instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createEmptyObject(final String objectName)\n      throws AmazonClientException, AmazonServiceException,\n      InterruptedIOException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n        newObjectMetadata(0L),\n        im);\n    Upload upload \u003d putObject(putObjectRequest);\n    try {\n      upload.waitForUploadResult();\n    } catch (InterruptedException e) {\n      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n    }\n    incrementPutProgressStatistics(objectName, 0);\n    instrumentation.directoryCreated();\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[bucketName-String(modifiers-final), objectName-String(modifiers-final)]",
            "newValue": "[objectName-String(modifiers-final)]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
          "commitDate": "03/06/16 8:55 AM",
          "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "01/06/16 2:49 PM",
          "commitNameOld": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.75,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n-  private void createEmptyObject(final String bucketName, final String objectName)\n-      throws AmazonClientException, AmazonServiceException {\n+  private void createEmptyObject(final String objectName)\n+      throws AmazonClientException, AmazonServiceException,\n+      InterruptedIOException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n-    final ObjectMetadata om \u003d new ObjectMetadata();\n-    om.setContentLength(0L);\n-    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n-      om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n+    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n+        newObjectMetadata(0L),\n+        im);\n+    Upload upload \u003d putObject(putObjectRequest);\n+    try {\n+      upload.waitForUploadResult();\n+    } catch (InterruptedException e) {\n+      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n     }\n-    PutObjectRequest putObjectRequest \u003d\n-        new PutObjectRequest(bucketName, objectName, im, om);\n-    putObjectRequest.setCannedAcl(cannedACL);\n-    s3.putObject(putObjectRequest);\n-    statistics.incrementWriteOps(1);\n+    incrementPutProgressStatistics(objectName, 0);\n     instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createEmptyObject(final String objectName)\n      throws AmazonClientException, AmazonServiceException,\n      InterruptedIOException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n        newObjectMetadata(0L),\n        im);\n    Upload upload \u003d putObject(putObjectRequest);\n    try {\n      upload.waitForUploadResult();\n    } catch (InterruptedException e) {\n      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n    }\n    incrementPutProgressStatistics(objectName, 0);\n    instrumentation.directoryCreated();\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[AmazonClientException, AmazonServiceException]",
            "newValue": "[AmazonClientException, AmazonServiceException, InterruptedIOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
          "commitDate": "03/06/16 8:55 AM",
          "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "01/06/16 2:49 PM",
          "commitNameOld": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.75,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n-  private void createEmptyObject(final String bucketName, final String objectName)\n-      throws AmazonClientException, AmazonServiceException {\n+  private void createEmptyObject(final String objectName)\n+      throws AmazonClientException, AmazonServiceException,\n+      InterruptedIOException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n-    final ObjectMetadata om \u003d new ObjectMetadata();\n-    om.setContentLength(0L);\n-    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n-      om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n+    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n+        newObjectMetadata(0L),\n+        im);\n+    Upload upload \u003d putObject(putObjectRequest);\n+    try {\n+      upload.waitForUploadResult();\n+    } catch (InterruptedException e) {\n+      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n     }\n-    PutObjectRequest putObjectRequest \u003d\n-        new PutObjectRequest(bucketName, objectName, im, om);\n-    putObjectRequest.setCannedAcl(cannedACL);\n-    s3.putObject(putObjectRequest);\n-    statistics.incrementWriteOps(1);\n+    incrementPutProgressStatistics(objectName, 0);\n     instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createEmptyObject(final String objectName)\n      throws AmazonClientException, AmazonServiceException,\n      InterruptedIOException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    PutObjectRequest putObjectRequest \u003d newPutObjectRequest(objectName,\n        newObjectMetadata(0L),\n        im);\n    Upload upload \u003d putObject(putObjectRequest);\n    try {\n      upload.waitForUploadResult();\n    } catch (InterruptedException e) {\n      throw new InterruptedIOException(\"Interrupted creating \" + objectName);\n    }\n    incrementPutProgressStatistics(objectName, 0);\n    instrumentation.directoryCreated();\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "27c4e90efce04e1b1302f668b5eb22412e00d033": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13028 add low level counter metrics for S3A; use in read performance tests. contributed by: stevel\npatch includes\nHADOOP-12844 Recover when S3A fails on IOException in read()\nHADOOP-13058 S3A FS fails during init against a read-only FS if multipart purge\nHADOOP-13047 S3a Forward seek in stream length to be configurable\n",
      "commitDate": "12/05/16 11:24 AM",
      "commitName": "27c4e90efce04e1b1302f668b5eb22412e00d033",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "12/05/16 5:57 AM",
      "commitNameOld": "def2a6d3856452d5c804f04e5bf485541a3bc53a",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.23,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   private void createEmptyObject(final String bucketName, final String objectName)\n       throws AmazonClientException, AmazonServiceException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n     final ObjectMetadata om \u003d new ObjectMetadata();\n     om.setContentLength(0L);\n     if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n       om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n     }\n-    PutObjectRequest putObjectRequest \u003d new PutObjectRequest(bucketName, objectName, im, om);\n+    PutObjectRequest putObjectRequest \u003d\n+        new PutObjectRequest(bucketName, objectName, im, om);\n     putObjectRequest.setCannedAcl(cannedACL);\n     s3.putObject(putObjectRequest);\n     statistics.incrementWriteOps(1);\n+    instrumentation.directoryCreated();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createEmptyObject(final String bucketName, final String objectName)\n      throws AmazonClientException, AmazonServiceException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    final ObjectMetadata om \u003d new ObjectMetadata();\n    om.setContentLength(0L);\n    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n      om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n    }\n    PutObjectRequest putObjectRequest \u003d\n        new PutObjectRequest(bucketName, objectName, im, om);\n    putObjectRequest.setCannedAcl(cannedACL);\n    s3.putObject(putObjectRequest);\n    statistics.incrementWriteOps(1);\n    instrumentation.directoryCreated();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "d5403747b57b1e294e533ce17f197e7be8f5339c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12269. Update aws-sdk dependency to 1.10.6 (Thomas Demoor via Lei (Eddy) Xu)\n",
      "commitDate": "04/08/15 6:51 PM",
      "commitName": "d5403747b57b1e294e533ce17f197e7be8f5339c",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "08/03/15 11:22 AM",
      "commitNameOld": "64443490d7f189e8e42d284615f3814ef751395a",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 149.31,
      "commitsBetweenForRepo": 1216,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void createEmptyObject(final String bucketName, final String objectName)\n       throws AmazonClientException, AmazonServiceException {\n     final InputStream im \u003d new InputStream() {\n       @Override\n       public int read() throws IOException {\n         return -1;\n       }\n     };\n \n     final ObjectMetadata om \u003d new ObjectMetadata();\n     om.setContentLength(0L);\n     if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n-      om.setServerSideEncryption(serverSideEncryptionAlgorithm);\n+      om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n     }\n     PutObjectRequest putObjectRequest \u003d new PutObjectRequest(bucketName, objectName, im, om);\n     putObjectRequest.setCannedAcl(cannedACL);\n     s3.putObject(putObjectRequest);\n     statistics.incrementWriteOps(1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createEmptyObject(final String bucketName, final String objectName)\n      throws AmazonClientException, AmazonServiceException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    final ObjectMetadata om \u003d new ObjectMetadata();\n    om.setContentLength(0L);\n    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n      om.setSSEAlgorithm(serverSideEncryptionAlgorithm);\n    }\n    PutObjectRequest putObjectRequest \u003d new PutObjectRequest(bucketName, objectName, im, om);\n    putObjectRequest.setCannedAcl(cannedACL);\n    s3.putObject(putObjectRequest);\n    statistics.incrementWriteOps(1);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "24d920b80eb3626073925a1d0b6dcf148add8cc0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10400. Incorporate new S3A FileSystem implementation. Contributed by Jordan Mendelson and Dave Wang.\n",
      "commitDate": "15/09/14 8:27 AM",
      "commitName": "24d920b80eb3626073925a1d0b6dcf148add8cc0",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,19 @@\n+  private void createEmptyObject(final String bucketName, final String objectName)\n+      throws AmazonClientException, AmazonServiceException {\n+    final InputStream im \u003d new InputStream() {\n+      @Override\n+      public int read() throws IOException {\n+        return -1;\n+      }\n+    };\n+\n+    final ObjectMetadata om \u003d new ObjectMetadata();\n+    om.setContentLength(0L);\n+    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n+      om.setServerSideEncryption(serverSideEncryptionAlgorithm);\n+    }\n+    PutObjectRequest putObjectRequest \u003d new PutObjectRequest(bucketName, objectName, im, om);\n+    putObjectRequest.setCannedAcl(cannedACL);\n+    s3.putObject(putObjectRequest);\n+    statistics.incrementWriteOps(1);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void createEmptyObject(final String bucketName, final String objectName)\n      throws AmazonClientException, AmazonServiceException {\n    final InputStream im \u003d new InputStream() {\n      @Override\n      public int read() throws IOException {\n        return -1;\n      }\n    };\n\n    final ObjectMetadata om \u003d new ObjectMetadata();\n    om.setContentLength(0L);\n    if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {\n      om.setServerSideEncryption(serverSideEncryptionAlgorithm);\n    }\n    PutObjectRequest putObjectRequest \u003d new PutObjectRequest(bucketName, objectName, im, om);\n    putObjectRequest.setCannedAcl(cannedACL);\n    s3.putObject(putObjectRequest);\n    statistics.incrementWriteOps(1);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}