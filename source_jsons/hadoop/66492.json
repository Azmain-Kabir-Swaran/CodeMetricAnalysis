{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMSimulator.java",
  "functionName": "registerAM",
  "functionId": "registerAM",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
  "functionStartLine": 361,
  "functionEndLine": 386,
  "numCommitsSeen": 19,
  "timeTaken": 1063,
  "changeHistory": [
    "3369540653a41dd0194b65f5ef1d53225fb97ba8",
    "b0c2c856192e71145c012504511fad172436131b",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "3369540653a41dd0194b65f5ef1d53225fb97ba8": "Ybodychange",
    "b0c2c856192e71145c012504511fad172436131b": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3369540653a41dd0194b65f5ef1d53225fb97ba8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14296. Move logging APIs over to slf4j in hadoop-tools.\n",
      "commitDate": "19/06/17 9:18 PM",
      "commitName": "3369540653a41dd0194b65f5ef1d53225fb97ba8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "04/05/17 5:21 PM",
      "commitNameOld": "3082552b3b991df846caf572b58e44308ddf8eeb",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 46.16,
      "commitsBetweenForRepo": 219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   private void registerAM()\n           throws YarnException, IOException, InterruptedException {\n     // register application master\n     final RegisterApplicationMasterRequest amRegisterRequest \u003d\n             Records.newRecord(RegisterApplicationMasterRequest.class);\n     amRegisterRequest.setHost(\"localhost\");\n     amRegisterRequest.setRpcPort(1000);\n     amRegisterRequest.setTrackingUrl(\"localhost:1000\");\n \n     UserGroupInformation ugi \u003d\n         UserGroupInformation.createRemoteUser(appAttemptId.toString());\n     Token\u003cAMRMTokenIdentifier\u003e token \u003d rm.getRMContext().getRMApps().get(appId)\n         .getRMAppAttempt(appAttemptId).getAMRMToken();\n     ugi.addTokenIdentifier(token.decodeIdentifier());\n \n     ugi.doAs(\n             new PrivilegedExceptionAction\u003cRegisterApplicationMasterResponse\u003e() {\n       @Override\n       public RegisterApplicationMasterResponse run() throws Exception {\n         return rm.getApplicationMasterService()\n                 .registerApplicationMaster(amRegisterRequest);\n       }\n     });\n \n-    LOG.info(MessageFormat.format(\n-            \"Register the application master for application {0}\", appId));\n+    LOG.info(\"Register the application master for application {}\", appId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerAM()\n          throws YarnException, IOException, InterruptedException {\n    // register application master\n    final RegisterApplicationMasterRequest amRegisterRequest \u003d\n            Records.newRecord(RegisterApplicationMasterRequest.class);\n    amRegisterRequest.setHost(\"localhost\");\n    amRegisterRequest.setRpcPort(1000);\n    amRegisterRequest.setTrackingUrl(\"localhost:1000\");\n\n    UserGroupInformation ugi \u003d\n        UserGroupInformation.createRemoteUser(appAttemptId.toString());\n    Token\u003cAMRMTokenIdentifier\u003e token \u003d rm.getRMContext().getRMApps().get(appId)\n        .getRMAppAttempt(appAttemptId).getAMRMToken();\n    ugi.addTokenIdentifier(token.decodeIdentifier());\n\n    ugi.doAs(\n            new PrivilegedExceptionAction\u003cRegisterApplicationMasterResponse\u003e() {\n      @Override\n      public RegisterApplicationMasterResponse run() throws Exception {\n        return rm.getApplicationMasterService()\n                .registerApplicationMaster(amRegisterRequest);\n      }\n    });\n\n    LOG.info(\"Register the application master for application {}\", appId);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {}
    },
    "b0c2c856192e71145c012504511fad172436131b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1726. ResourceSchedulerWrapper broken due to AbstractYarnScheduler. (Wei Yan via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613547 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 6:29 PM",
      "commitName": "b0c2c856192e71145c012504511fad172436131b",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "25/07/14 10:12 AM",
      "commitNameOld": "77363b9d839e47bef2325b8682eabe00d4c83354",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n   private void registerAM()\n           throws YarnException, IOException, InterruptedException {\n     // register application master\n     final RegisterApplicationMasterRequest amRegisterRequest \u003d\n             Records.newRecord(RegisterApplicationMasterRequest.class);\n     amRegisterRequest.setHost(\"localhost\");\n     amRegisterRequest.setRpcPort(1000);\n     amRegisterRequest.setTrackingUrl(\"localhost:1000\");\n \n     UserGroupInformation ugi \u003d\n-            UserGroupInformation.createRemoteUser(appAttemptId.toString());\n-    Token\u003cAMRMTokenIdentifier\u003e token \u003d\n-            rm.getRMContext().getRMApps().get(appAttemptId.getApplicationId())\n-                    .getRMAppAttempt(appAttemptId).getAMRMToken();\n+        UserGroupInformation.createRemoteUser(appAttemptId.toString());\n+    Token\u003cAMRMTokenIdentifier\u003e token \u003d rm.getRMContext().getRMApps().get(appId)\n+        .getRMAppAttempt(appAttemptId).getAMRMToken();\n     ugi.addTokenIdentifier(token.decodeIdentifier());\n \n     ugi.doAs(\n             new PrivilegedExceptionAction\u003cRegisterApplicationMasterResponse\u003e() {\n       @Override\n       public RegisterApplicationMasterResponse run() throws Exception {\n         return rm.getApplicationMasterService()\n                 .registerApplicationMaster(amRegisterRequest);\n       }\n     });\n \n     LOG.info(MessageFormat.format(\n             \"Register the application master for application {0}\", appId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerAM()\n          throws YarnException, IOException, InterruptedException {\n    // register application master\n    final RegisterApplicationMasterRequest amRegisterRequest \u003d\n            Records.newRecord(RegisterApplicationMasterRequest.class);\n    amRegisterRequest.setHost(\"localhost\");\n    amRegisterRequest.setRpcPort(1000);\n    amRegisterRequest.setTrackingUrl(\"localhost:1000\");\n\n    UserGroupInformation ugi \u003d\n        UserGroupInformation.createRemoteUser(appAttemptId.toString());\n    Token\u003cAMRMTokenIdentifier\u003e token \u003d rm.getRMContext().getRMApps().get(appId)\n        .getRMAppAttempt(appAttemptId).getAMRMToken();\n    ugi.addTokenIdentifier(token.decodeIdentifier());\n\n    ugi.doAs(\n            new PrivilegedExceptionAction\u003cRegisterApplicationMasterResponse\u003e() {\n      @Override\n      public RegisterApplicationMasterResponse run() throws Exception {\n        return rm.getApplicationMasterService()\n                .registerApplicationMaster(amRegisterRequest);\n      }\n    });\n\n    LOG.info(MessageFormat.format(\n            \"Register the application master for application {0}\", appId));\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,28 @@\n+  private void registerAM()\n+          throws YarnException, IOException, InterruptedException {\n+    // register application master\n+    final RegisterApplicationMasterRequest amRegisterRequest \u003d\n+            Records.newRecord(RegisterApplicationMasterRequest.class);\n+    amRegisterRequest.setHost(\"localhost\");\n+    amRegisterRequest.setRpcPort(1000);\n+    amRegisterRequest.setTrackingUrl(\"localhost:1000\");\n+\n+    UserGroupInformation ugi \u003d\n+            UserGroupInformation.createRemoteUser(appAttemptId.toString());\n+    Token\u003cAMRMTokenIdentifier\u003e token \u003d\n+            rm.getRMContext().getRMApps().get(appAttemptId.getApplicationId())\n+                    .getRMAppAttempt(appAttemptId).getAMRMToken();\n+    ugi.addTokenIdentifier(token.decodeIdentifier());\n+\n+    ugi.doAs(\n+            new PrivilegedExceptionAction\u003cRegisterApplicationMasterResponse\u003e() {\n+      @Override\n+      public RegisterApplicationMasterResponse run() throws Exception {\n+        return rm.getApplicationMasterService()\n+                .registerApplicationMaster(amRegisterRequest);\n+      }\n+    });\n+\n+    LOG.info(MessageFormat.format(\n+            \"Register the application master for application {0}\", appId));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerAM()\n          throws YarnException, IOException, InterruptedException {\n    // register application master\n    final RegisterApplicationMasterRequest amRegisterRequest \u003d\n            Records.newRecord(RegisterApplicationMasterRequest.class);\n    amRegisterRequest.setHost(\"localhost\");\n    amRegisterRequest.setRpcPort(1000);\n    amRegisterRequest.setTrackingUrl(\"localhost:1000\");\n\n    UserGroupInformation ugi \u003d\n            UserGroupInformation.createRemoteUser(appAttemptId.toString());\n    Token\u003cAMRMTokenIdentifier\u003e token \u003d\n            rm.getRMContext().getRMApps().get(appAttemptId.getApplicationId())\n                    .getRMAppAttempt(appAttemptId).getAMRMToken();\n    ugi.addTokenIdentifier(token.decodeIdentifier());\n\n    ugi.doAs(\n            new PrivilegedExceptionAction\u003cRegisterApplicationMasterResponse\u003e() {\n      @Override\n      public RegisterApplicationMasterResponse run() throws Exception {\n        return rm.getApplicationMasterService()\n                .registerApplicationMaster(amRegisterRequest);\n      }\n    });\n\n    LOG.info(MessageFormat.format(\n            \"Register the application master for application {0}\", appId));\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java"
    }
  }
}