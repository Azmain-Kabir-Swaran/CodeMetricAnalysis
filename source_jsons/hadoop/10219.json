{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPoolManager.java",
  "functionName": "remove",
  "functionId": "remove___t-BPOfferService",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java",
  "functionStartLine": 88,
  "functionEndLine": 110,
  "numCommitsSeen": 17,
  "timeTaken": 1066,
  "changeHistory": [
    "9d21180c1a625295bb9da0d9d5d8c55740944008",
    "f4fa76719e622a4ef883c51ec0abc6e6e6ddf09e"
  ],
  "changeHistoryShort": {
    "9d21180c1a625295bb9da0d9d5d8c55740944008": "Ybodychange",
    "f4fa76719e622a4ef883c51ec0abc6e6e6ddf09e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d21180c1a625295bb9da0d9d5d8c55740944008": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2882. DN continues to start up, even if block pool fails to initialize (Contributed by Vinayakumar B)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1590941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/14 3:27 AM",
      "commitName": "9d21180c1a625295bb9da0d9d5d8c55740944008",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "09/04/13 12:04 PM",
      "commitNameOld": "d9593621b5739a6c2a4f2ea7817d7783326a3886",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 384.64,
      "commitsBetweenForRepo": 2570,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   synchronized void remove(BPOfferService t) {\n     offerServices.remove(t);\n-    bpByBlockPoolId.remove(t.getBlockPoolId());\n+    if (t.hasBlockPoolId()) {\n+      // It\u0027s possible that the block pool never successfully registered\n+      // with any NN, so it was never added it to this map\n+      bpByBlockPoolId.remove(t.getBlockPoolId());\n+    }\n     \n     boolean removed \u003d false;\n     for (Iterator\u003cBPOfferService\u003e it \u003d bpByNameserviceId.values().iterator();\n          it.hasNext() \u0026\u0026 !removed;) {\n       BPOfferService bpos \u003d it.next();\n       if (bpos \u003d\u003d t) {\n         it.remove();\n         LOG.info(\"Removed \" + bpos);\n         removed \u003d true;\n       }\n     }\n     \n     if (!removed) {\n       LOG.warn(\"Couldn\u0027t remove BPOS \" + t + \" from bpByNameserviceId map\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void remove(BPOfferService t) {\n    offerServices.remove(t);\n    if (t.hasBlockPoolId()) {\n      // It\u0027s possible that the block pool never successfully registered\n      // with any NN, so it was never added it to this map\n      bpByBlockPoolId.remove(t.getBlockPoolId());\n    }\n    \n    boolean removed \u003d false;\n    for (Iterator\u003cBPOfferService\u003e it \u003d bpByNameserviceId.values().iterator();\n         it.hasNext() \u0026\u0026 !removed;) {\n      BPOfferService bpos \u003d it.next();\n      if (bpos \u003d\u003d t) {\n        it.remove();\n        LOG.info(\"Removed \" + bpos);\n        removed \u003d true;\n      }\n    }\n    \n    if (!removed) {\n      LOG.warn(\"Couldn\u0027t remove BPOS \" + t + \" from bpByNameserviceId map\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java",
      "extendedDetails": {}
    },
    "f4fa76719e622a4ef883c51ec0abc6e6e6ddf09e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2612. Handle refreshNameNodes in federated HA clusters. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1209249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/12/11 1:26 PM",
      "commitName": "f4fa76719e622a4ef883c51ec0abc6e6e6ddf09e",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  synchronized void remove(BPOfferService t) {\n+    offerServices.remove(t);\n+    bpByBlockPoolId.remove(t.getBlockPoolId());\n+    \n+    boolean removed \u003d false;\n+    for (Iterator\u003cBPOfferService\u003e it \u003d bpByNameserviceId.values().iterator();\n+         it.hasNext() \u0026\u0026 !removed;) {\n+      BPOfferService bpos \u003d it.next();\n+      if (bpos \u003d\u003d t) {\n+        it.remove();\n+        LOG.info(\"Removed \" + bpos);\n+        removed \u003d true;\n+      }\n+    }\n+    \n+    if (!removed) {\n+      LOG.warn(\"Couldn\u0027t remove BPOS \" + t + \" from bpByNameserviceId map\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void remove(BPOfferService t) {\n    offerServices.remove(t);\n    bpByBlockPoolId.remove(t.getBlockPoolId());\n    \n    boolean removed \u003d false;\n    for (Iterator\u003cBPOfferService\u003e it \u003d bpByNameserviceId.values().iterator();\n         it.hasNext() \u0026\u0026 !removed;) {\n      BPOfferService bpos \u003d it.next();\n      if (bpos \u003d\u003d t) {\n        it.remove();\n        LOG.info(\"Removed \" + bpos);\n        removed \u003d true;\n      }\n    }\n    \n    if (!removed) {\n      LOG.warn(\"Couldn\u0027t remove BPOS \" + t + \" from bpByNameserviceId map\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java"
    }
  }
}