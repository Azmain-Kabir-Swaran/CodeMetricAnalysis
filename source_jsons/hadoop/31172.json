{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterWebServiceUtil.java",
  "functionName": "deleteDuplicateNodesInfo",
  "functionId": "deleteDuplicateNodesInfo___nodes-ArrayList__NodeInfo__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
  "functionStartLine": 367,
  "functionEndLine": 386,
  "numCommitsSeen": 8,
  "timeTaken": 819,
  "changeHistory": [
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4"
  ],
  "changeHistoryShort": {
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7095. Federation: routing getNode/getNodes/getMetrics REST invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n",
      "commitDate": "31/08/17 3:05 PM",
      "commitName": "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,20 @@\n+  public static NodesInfo deleteDuplicateNodesInfo(ArrayList\u003cNodeInfo\u003e nodes) {\n+    NodesInfo nodesInfo \u003d new NodesInfo();\n+\n+    Map\u003cString, NodeInfo\u003e nodesMap \u003d new LinkedHashMap\u003c\u003e();\n+    for (NodeInfo node : nodes) {\n+      String nodeId \u003d node.getNodeId();\n+      // If the node already exists, it could be an old instance\n+      if (nodesMap.containsKey(nodeId)) {\n+        // Check if the node is an old instance\n+        if (nodesMap.get(nodeId).getLastHealthUpdate() \u003c node\n+            .getLastHealthUpdate()) {\n+          nodesMap.put(node.getNodeId(), node);\n+        }\n+      } else {\n+        nodesMap.put(node.getNodeId(), node);\n+      }\n+    }\n+    nodesInfo.addAll(new ArrayList\u003cNodeInfo\u003e(nodesMap.values()));\n+    return nodesInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NodesInfo deleteDuplicateNodesInfo(ArrayList\u003cNodeInfo\u003e nodes) {\n    NodesInfo nodesInfo \u003d new NodesInfo();\n\n    Map\u003cString, NodeInfo\u003e nodesMap \u003d new LinkedHashMap\u003c\u003e();\n    for (NodeInfo node : nodes) {\n      String nodeId \u003d node.getNodeId();\n      // If the node already exists, it could be an old instance\n      if (nodesMap.containsKey(nodeId)) {\n        // Check if the node is an old instance\n        if (nodesMap.get(nodeId).getLastHealthUpdate() \u003c node\n            .getLastHealthUpdate()) {\n          nodesMap.put(node.getNodeId(), node);\n        }\n      } else {\n        nodesMap.put(node.getNodeId(), node);\n      }\n    }\n    nodesInfo.addAll(new ArrayList\u003cNodeInfo\u003e(nodesMap.values()));\n    return nodesInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java"
    }
  }
}