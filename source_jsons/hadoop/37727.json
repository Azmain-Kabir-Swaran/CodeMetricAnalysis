{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultAMSProcessor.java",
  "functionName": "handleProgress",
  "functionId": "handleProgress___appAttemptId-ApplicationAttemptId__request-AllocateRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/DefaultAMSProcessor.java",
  "functionStartLine": 406,
  "functionEndLine": 423,
  "numCommitsSeen": 21,
  "timeTaken": 1342,
  "changeHistory": [
    "3e06a5dcea8224ba71aec284df23b47d536bb06d",
    "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0"
  ],
  "changeHistoryShort": {
    "3e06a5dcea8224ba71aec284df23b47d536bb06d": "Ybodychange",
    "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3e06a5dcea8224ba71aec284df23b47d536bb06d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7974. Allow updating application tracking url after registration. Contributed by Jonathan Hung\n",
      "commitDate": "30/07/18 5:44 PM",
      "commitName": "3e06a5dcea8224ba71aec284df23b47d536bb06d",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "27/07/18 2:35 PM",
      "commitNameOld": "2cccf4061cc4021c48e29879700dbc94f832b7d1",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 3.13,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void handleProgress(ApplicationAttemptId appAttemptId,\n       AllocateRequest request) {\n     //filter illegal progress values\n     float filteredProgress \u003d request.getProgress();\n     if (Float.isNaN(filteredProgress) ||\n         filteredProgress \u003d\u003d Float.NEGATIVE_INFINITY ||\n         filteredProgress \u003c 0) {\n       request.setProgress(0);\n     } else if (filteredProgress \u003e 1 ||\n         filteredProgress \u003d\u003d Float.POSITIVE_INFINITY) {\n       request.setProgress(1);\n     }\n \n     // Send the status update to the appAttempt.\n     getRmContext().getDispatcher().getEventHandler().handle(\n         new RMAppAttemptStatusupdateEvent(appAttemptId, request\n-            .getProgress()));\n+            .getProgress(), request.getTrackingUrl()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleProgress(ApplicationAttemptId appAttemptId,\n      AllocateRequest request) {\n    //filter illegal progress values\n    float filteredProgress \u003d request.getProgress();\n    if (Float.isNaN(filteredProgress) ||\n        filteredProgress \u003d\u003d Float.NEGATIVE_INFINITY ||\n        filteredProgress \u003c 0) {\n      request.setProgress(0);\n    } else if (filteredProgress \u003e 1 ||\n        filteredProgress \u003d\u003d Float.POSITIVE_INFINITY) {\n      request.setProgress(1);\n    }\n\n    // Send the status update to the appAttempt.\n    getRmContext().getDispatcher().getEventHandler().handle(\n        new RMAppAttemptStatusupdateEvent(appAttemptId, request\n            .getProgress(), request.getTrackingUrl()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/DefaultAMSProcessor.java",
      "extendedDetails": {}
    },
    "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6776. Refactor ApplicaitonMasterService to move actual processing logic to a separate class. (asuresh)\n",
      "commitDate": "10/07/17 2:34 PM",
      "commitName": "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,18 @@\n+  private void handleProgress(ApplicationAttemptId appAttemptId,\n+      AllocateRequest request) {\n+    //filter illegal progress values\n+    float filteredProgress \u003d request.getProgress();\n+    if (Float.isNaN(filteredProgress) ||\n+        filteredProgress \u003d\u003d Float.NEGATIVE_INFINITY ||\n+        filteredProgress \u003c 0) {\n+      request.setProgress(0);\n+    } else if (filteredProgress \u003e 1 ||\n+        filteredProgress \u003d\u003d Float.POSITIVE_INFINITY) {\n+      request.setProgress(1);\n+    }\n+\n+    // Send the status update to the appAttempt.\n+    getRmContext().getDispatcher().getEventHandler().handle(\n+        new RMAppAttemptStatusupdateEvent(appAttemptId, request\n+            .getProgress()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleProgress(ApplicationAttemptId appAttemptId,\n      AllocateRequest request) {\n    //filter illegal progress values\n    float filteredProgress \u003d request.getProgress();\n    if (Float.isNaN(filteredProgress) ||\n        filteredProgress \u003d\u003d Float.NEGATIVE_INFINITY ||\n        filteredProgress \u003c 0) {\n      request.setProgress(0);\n    } else if (filteredProgress \u003e 1 ||\n        filteredProgress \u003d\u003d Float.POSITIVE_INFINITY) {\n      request.setProgress(1);\n    }\n\n    // Send the status update to the appAttempt.\n    getRmContext().getDispatcher().getEventHandler().handle(\n        new RMAppAttemptStatusupdateEvent(appAttemptId, request\n            .getProgress()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/DefaultAMSProcessor.java"
    }
  }
}