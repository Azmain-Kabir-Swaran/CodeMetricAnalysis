{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedSchedulingAllocateRequestPBImpl.java",
  "functionName": "initAllocatedContainers",
  "functionId": "initAllocatedContainers",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java",
  "functionStartLine": 91,
  "functionEndLine": 99,
  "numCommitsSeen": 2,
  "timeTaken": 1627,
  "changeHistory": [
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "99e5dd68d0f44109c169d74824fa45a7396a5990"
  ],
  "changeHistoryShort": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Ymultichange(Yfilerename,Ybodychange)",
    "99e5dd68d0f44109c169d74824fa45a7396a5990": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
          "commitDate": "31/07/16 11:48 AM",
          "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/07/16 7:29 PM",
          "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n   private void initAllocatedContainers() {\n-    DistSchedAllocateRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    DistributedSchedulingAllocateRequestProtoOrBuilder p \u003d\n+        viaProto ? proto : builder;\n     List\u003cContainerProto\u003e list \u003d p.getAllocatedContainersList();\n     this.containers \u003d new ArrayList\u003cContainer\u003e();\n     for (ContainerProto c : list) {\n       this.containers.add(convertFromProtoFormat(c));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initAllocatedContainers() {\n    DistributedSchedulingAllocateRequestProtoOrBuilder p \u003d\n        viaProto ? proto : builder;\n    List\u003cContainerProto\u003e list \u003d p.getAllocatedContainersList();\n    this.containers \u003d new ArrayList\u003cContainer\u003e();\n    for (ContainerProto c : list) {\n      this.containers.add(convertFromProtoFormat(c));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistSchedAllocateRequestPBImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
          "commitDate": "31/07/16 11:48 AM",
          "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/07/16 7:29 PM",
          "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n   private void initAllocatedContainers() {\n-    DistSchedAllocateRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    DistributedSchedulingAllocateRequestProtoOrBuilder p \u003d\n+        viaProto ? proto : builder;\n     List\u003cContainerProto\u003e list \u003d p.getAllocatedContainersList();\n     this.containers \u003d new ArrayList\u003cContainer\u003e();\n     for (ContainerProto c : list) {\n       this.containers.add(convertFromProtoFormat(c));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initAllocatedContainers() {\n    DistributedSchedulingAllocateRequestProtoOrBuilder p \u003d\n        viaProto ? proto : builder;\n    List\u003cContainerProto\u003e list \u003d p.getAllocatedContainersList();\n    this.containers \u003d new ArrayList\u003cContainer\u003e();\n    for (ContainerProto c : list) {\n      this.containers.add(convertFromProtoFormat(c));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "99e5dd68d0f44109c169d74824fa45a7396a5990": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)\n",
      "commitDate": "22/06/16 7:04 PM",
      "commitName": "99e5dd68d0f44109c169d74824fa45a7396a5990",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,8 @@\n+  private void initAllocatedContainers() {\n+    DistSchedAllocateRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    List\u003cContainerProto\u003e list \u003d p.getAllocatedContainersList();\n+    this.containers \u003d new ArrayList\u003cContainer\u003e();\n+    for (ContainerProto c : list) {\n+      this.containers.add(convertFromProtoFormat(c));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAllocatedContainers() {\n    DistSchedAllocateRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cContainerProto\u003e list \u003d p.getAllocatedContainersList();\n    this.containers \u003d new ArrayList\u003cContainer\u003e();\n    for (ContainerProto c : list) {\n      this.containers.add(convertFromProtoFormat(c));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistSchedAllocateRequestPBImpl.java"
    }
  }
}