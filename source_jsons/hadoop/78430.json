{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ViewFileSystem.java",
  "functionName": "get",
  "functionId": "get___uri-URI__config-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java",
  "functionStartLine": 117,
  "functionEndLine": 126,
  "numCommitsSeen": 55,
  "timeTaken": 1806,
  "changeHistory": [
    "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe",
    "c92a3e94d80c86199e65735ee5aec4a6f02f50a3"
  ],
  "changeHistoryShort": {
    "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe": "Ybodychange",
    "c92a3e94d80c86199e65735ee5aec4a6f02f50a3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15305. Extend ViewFS and provide ViewFileSystemOverloadScheme implementation with scheme configurable. Contributed by Uma Maheswara Rao G.\n\n",
      "commitDate": "04/05/20 5:55 PM",
      "commitName": "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "25/09/19 4:16 AM",
      "commitNameOld": "e346e3638c595a512cd582739ff51fb64c3b4950",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 222.57,
      "commitsBetweenForRepo": 841,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     FileSystem get(URI uri, Configuration config) throws IOException {\n       Key key \u003d new Key(uri);\n       if (map.get(key) \u003d\u003d null) {\n-        FileSystem fs \u003d FileSystem.newInstance(uri, config);\n+        FileSystem fs \u003d fsCreator.getNewInstance(uri, config);\n         map.put(key, fs);\n         return fs;\n       } else {\n         return map.get(key);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    FileSystem get(URI uri, Configuration config) throws IOException {\n      Key key \u003d new Key(uri);\n      if (map.get(key) \u003d\u003d null) {\n        FileSystem fs \u003d fsCreator.getNewInstance(uri, config);\n        map.put(key, fs);\n        return fs;\n      } else {\n        return map.get(key);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java",
      "extendedDetails": {}
    },
    "c92a3e94d80c86199e65735ee5aec4a6f02f50a3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15565. Add an inner FS cache to ViewFileSystem, separate from the global cache, to avoid file system leaks. Contributed by Jinglun.\n",
      "commitDate": "06/09/19 10:22 AM",
      "commitName": "c92a3e94d80c86199e65735ee5aec4a6f02f50a3",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,10 @@\n+    FileSystem get(URI uri, Configuration config) throws IOException {\n+      Key key \u003d new Key(uri);\n+      if (map.get(key) \u003d\u003d null) {\n+        FileSystem fs \u003d FileSystem.newInstance(uri, config);\n+        map.put(key, fs);\n+        return fs;\n+      } else {\n+        return map.get(key);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    FileSystem get(URI uri, Configuration config) throws IOException {\n      Key key \u003d new Key(uri);\n      if (map.get(key) \u003d\u003d null) {\n        FileSystem fs \u003d FileSystem.newInstance(uri, config);\n        map.put(key, fs);\n        return fs;\n      } else {\n        return map.get(key);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java"
    }
  }
}