{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PlacementManager.java",
  "functionName": "placeApplication",
  "functionId": "placeApplication___asc-ApplicationSubmissionContext__user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java",
  "functionStartLine": 56,
  "functionEndLine": 76,
  "numCommitsSeen": 6,
  "timeTaken": 3167,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
    "f9f317b70209d20161d66a73ddea3334d2b92f96",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
    "5468baa80aa2a3e2a02e9a902deebafd734daf23"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "e673dd1d4d78b66e7b6705ec6dc3679d2347d704": "Ybodychange",
    "f9f317b70209d20161d66a73ddea3334d2b92f96": "Ybodychange",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Ymultichange(Yreturntypechange,Ybodychange)",
    "5468baa80aa2a3e2a02e9a902deebafd734daf23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   public ApplicationPlacementContext placeApplication(\n       ApplicationSubmissionContext asc, String user) throws YarnException {\n-\n+    readLock.lock();\n     try {\n-      readLock.lock();\n-\n       if (null \u003d\u003d rules || rules.isEmpty()) {\n         return null;\n       }\n \n       ApplicationPlacementContext placement \u003d null;\n       for (PlacementRule rule : rules) {\n         placement \u003d rule.getPlacementForApp(asc, user);\n         if (placement !\u003d null) {\n           break;\n         }\n       }\n \n       return placement;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext placeApplication(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n    readLock.lock();\n    try {\n      if (null \u003d\u003d rules || rules.isEmpty()) {\n        return null;\n      }\n\n      ApplicationPlacementContext placement \u003d null;\n      for (PlacementRule rule : rules) {\n        placement \u003d rule.getPlacementForApp(asc, user);\n        if (placement !\u003d null) {\n          break;\n        }\n      }\n\n      return placement;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java",
      "extendedDetails": {}
    },
    "e673dd1d4d78b66e7b6705ec6dc3679d2347d704": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8541. RM startup failure on recovery after user deletion. Contributed by Bibin A Chundatt.\n",
      "commitDate": "24/07/18 10:56 AM",
      "commitName": "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "05/12/17 4:58 AM",
      "commitNameOld": "f9f317b70209d20161d66a73ddea3334d2b92f96",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 231.21,
      "commitsBetweenForRepo": 2162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,23 @@\n   public ApplicationPlacementContext placeApplication(\n       ApplicationSubmissionContext asc, String user) throws YarnException {\n \n     try {\n       readLock.lock();\n \n       if (null \u003d\u003d rules || rules.isEmpty()) {\n         return null;\n       }\n \n       ApplicationPlacementContext placement \u003d null;\n       for (PlacementRule rule : rules) {\n         placement \u003d rule.getPlacementForApp(asc, user);\n         if (placement !\u003d null) {\n           break;\n         }\n       }\n \n-      // Failed to get where to place application\n-      if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n-        String msg \u003d \"Failed to place application \" +\n-            asc.getApplicationId() + \" to queue and specified \"\n-            + \"queue is invalid : \" + asc.getQueue();\n-        LOG.error(msg);\n-        throw new YarnException(msg);\n-      }\n-\n       return placement;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext placeApplication(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n\n    try {\n      readLock.lock();\n\n      if (null \u003d\u003d rules || rules.isEmpty()) {\n        return null;\n      }\n\n      ApplicationPlacementContext placement \u003d null;\n      for (PlacementRule rule : rules) {\n        placement \u003d rule.getPlacementForApp(asc, user);\n        if (placement !\u003d null) {\n          break;\n        }\n      }\n\n      return placement;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java",
      "extendedDetails": {}
    },
    "f9f317b70209d20161d66a73ddea3334d2b92f96": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
      "commitDate": "05/12/17 4:58 AM",
      "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
      "commitAuthor": "Sunil G",
      "commitDateOld": "16/11/17 11:25 AM",
      "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 18.73,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   public ApplicationPlacementContext placeApplication(\n       ApplicationSubmissionContext asc, String user) throws YarnException {\n \n     try {\n       readLock.lock();\n \n       if (null \u003d\u003d rules || rules.isEmpty()) {\n         return null;\n       }\n \n       ApplicationPlacementContext placement \u003d null;\n       for (PlacementRule rule : rules) {\n         placement \u003d rule.getPlacementForApp(asc, user);\n         if (placement !\u003d null) {\n           break;\n         }\n       }\n \n       // Failed to get where to place application\n       if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n-        String msg \u003d \"Failed to get where to place application\u003d\" + asc\n-            .getApplicationId();\n+        String msg \u003d \"Failed to place application \" +\n+            asc.getApplicationId() + \" to queue and specified \"\n+            + \"queue is invalid : \" + asc.getQueue();\n         LOG.error(msg);\n         throw new YarnException(msg);\n       }\n \n       return placement;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext placeApplication(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n\n    try {\n      readLock.lock();\n\n      if (null \u003d\u003d rules || rules.isEmpty()) {\n        return null;\n      }\n\n      ApplicationPlacementContext placement \u003d null;\n      for (PlacementRule rule : rules) {\n        placement \u003d rule.getPlacementForApp(asc, user);\n        if (placement !\u003d null) {\n          break;\n        }\n      }\n\n      // Failed to get where to place application\n      if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n        String msg \u003d \"Failed to place application \" +\n            asc.getApplicationId() + \" to queue and specified \"\n            + \"queue is invalid : \" + asc.getQueue();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      return placement;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java",
      "extendedDetails": {}
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/15 12:39 AM",
          "commitNameOld": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 793.49,
          "commitsBetweenForRepo": 5440,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,31 @@\n-  public void placeApplication(ApplicationSubmissionContext asc, String user)\n-      throws YarnException {\n+  public ApplicationPlacementContext placeApplication(\n+      ApplicationSubmissionContext asc, String user) throws YarnException {\n+\n     try {\n       readLock.lock();\n+\n       if (null \u003d\u003d rules || rules.isEmpty()) {\n-        return;\n+        return null;\n       }\n-      \n-      String newQueueName \u003d null;\n+\n+      ApplicationPlacementContext placement \u003d null;\n       for (PlacementRule rule : rules) {\n-        newQueueName \u003d rule.getQueueForApp(asc, user);\n-        if (newQueueName !\u003d null) {\n+        placement \u003d rule.getPlacementForApp(asc, user);\n+        if (placement !\u003d null) {\n           break;\n         }\n       }\n-      \n+\n       // Failed to get where to place application\n-      if (null \u003d\u003d newQueueName \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n-        String msg \u003d \"Failed to get where to place application\u003d\"\n-            + asc.getApplicationId();\n+      if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n+        String msg \u003d \"Failed to get where to place application\u003d\" + asc\n+            .getApplicationId();\n         LOG.error(msg);\n         throw new YarnException(msg);\n       }\n-      \n-      // Set it to ApplicationSubmissionContext\n-      if (!StringUtils.equals(asc.getQueue(), newQueueName)) {\n-        LOG.info(\"Placed application\u003d\" + asc.getApplicationId() + \" to queue\u003d\"\n-            + newQueueName + \", original queue\u003d\" + asc.getQueue());\n-        asc.setQueue(newQueueName);\n-      }\n+\n+      return placement;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationPlacementContext placeApplication(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n\n    try {\n      readLock.lock();\n\n      if (null \u003d\u003d rules || rules.isEmpty()) {\n        return null;\n      }\n\n      ApplicationPlacementContext placement \u003d null;\n      for (PlacementRule rule : rules) {\n        placement \u003d rule.getPlacementForApp(asc, user);\n        if (placement !\u003d null) {\n          break;\n        }\n      }\n\n      // Failed to get where to place application\n      if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n        String msg \u003d \"Failed to get where to place application\u003d\" + asc\n            .getApplicationId();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      return placement;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "ApplicationPlacementContext"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/15 12:39 AM",
          "commitNameOld": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 793.49,
          "commitsBetweenForRepo": 5440,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,31 @@\n-  public void placeApplication(ApplicationSubmissionContext asc, String user)\n-      throws YarnException {\n+  public ApplicationPlacementContext placeApplication(\n+      ApplicationSubmissionContext asc, String user) throws YarnException {\n+\n     try {\n       readLock.lock();\n+\n       if (null \u003d\u003d rules || rules.isEmpty()) {\n-        return;\n+        return null;\n       }\n-      \n-      String newQueueName \u003d null;\n+\n+      ApplicationPlacementContext placement \u003d null;\n       for (PlacementRule rule : rules) {\n-        newQueueName \u003d rule.getQueueForApp(asc, user);\n-        if (newQueueName !\u003d null) {\n+        placement \u003d rule.getPlacementForApp(asc, user);\n+        if (placement !\u003d null) {\n           break;\n         }\n       }\n-      \n+\n       // Failed to get where to place application\n-      if (null \u003d\u003d newQueueName \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n-        String msg \u003d \"Failed to get where to place application\u003d\"\n-            + asc.getApplicationId();\n+      if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n+        String msg \u003d \"Failed to get where to place application\u003d\" + asc\n+            .getApplicationId();\n         LOG.error(msg);\n         throw new YarnException(msg);\n       }\n-      \n-      // Set it to ApplicationSubmissionContext\n-      if (!StringUtils.equals(asc.getQueue(), newQueueName)) {\n-        LOG.info(\"Placed application\u003d\" + asc.getApplicationId() + \" to queue\u003d\"\n-            + newQueueName + \", original queue\u003d\" + asc.getQueue());\n-        asc.setQueue(newQueueName);\n-      }\n+\n+      return placement;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationPlacementContext placeApplication(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n\n    try {\n      readLock.lock();\n\n      if (null \u003d\u003d rules || rules.isEmpty()) {\n        return null;\n      }\n\n      ApplicationPlacementContext placement \u003d null;\n      for (PlacementRule rule : rules) {\n        placement \u003d rule.getPlacementForApp(asc, user);\n        if (placement !\u003d null) {\n          break;\n        }\n      }\n\n      // Failed to get where to place application\n      if (null \u003d\u003d placement \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n        String msg \u003d \"Failed to get where to place application\u003d\" + asc\n            .getApplicationId();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      return placement;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "5468baa80aa2a3e2a02e9a902deebafd734daf23": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3635. Refactored current queue mapping implementation in CapacityScheduler to use a generic PlacementManager framework. Contributed by Wangda Tan\n",
      "commitDate": "15/09/15 12:39 AM",
      "commitName": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,34 @@\n+  public void placeApplication(ApplicationSubmissionContext asc, String user)\n+      throws YarnException {\n+    try {\n+      readLock.lock();\n+      if (null \u003d\u003d rules || rules.isEmpty()) {\n+        return;\n+      }\n+      \n+      String newQueueName \u003d null;\n+      for (PlacementRule rule : rules) {\n+        newQueueName \u003d rule.getQueueForApp(asc, user);\n+        if (newQueueName !\u003d null) {\n+          break;\n+        }\n+      }\n+      \n+      // Failed to get where to place application\n+      if (null \u003d\u003d newQueueName \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n+        String msg \u003d \"Failed to get where to place application\u003d\"\n+            + asc.getApplicationId();\n+        LOG.error(msg);\n+        throw new YarnException(msg);\n+      }\n+      \n+      // Set it to ApplicationSubmissionContext\n+      if (!StringUtils.equals(asc.getQueue(), newQueueName)) {\n+        LOG.info(\"Placed application\u003d\" + asc.getApplicationId() + \" to queue\u003d\"\n+            + newQueueName + \", original queue\u003d\" + asc.getQueue());\n+        asc.setQueue(newQueueName);\n+      }\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void placeApplication(ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    try {\n      readLock.lock();\n      if (null \u003d\u003d rules || rules.isEmpty()) {\n        return;\n      }\n      \n      String newQueueName \u003d null;\n      for (PlacementRule rule : rules) {\n        newQueueName \u003d rule.getQueueForApp(asc, user);\n        if (newQueueName !\u003d null) {\n          break;\n        }\n      }\n      \n      // Failed to get where to place application\n      if (null \u003d\u003d newQueueName \u0026\u0026 null \u003d\u003d asc.getQueue()) {\n        String msg \u003d \"Failed to get where to place application\u003d\"\n            + asc.getApplicationId();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n      \n      // Set it to ApplicationSubmissionContext\n      if (!StringUtils.equals(asc.getQueue(), newQueueName)) {\n        LOG.info(\"Placed application\u003d\" + asc.getApplicationId() + \" to queue\u003d\"\n            + newQueueName + \", original queue\u003d\" + asc.getQueue());\n        asc.setQueue(newQueueName);\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PlacementManager.java"
    }
  }
}