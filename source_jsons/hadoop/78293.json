{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ViewFs.java",
  "functionName": "listStatusForFallbackLink",
  "functionId": "listStatusForFallbackLink",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
  "functionStartLine": 1016,
  "functionEndLine": 1032,
  "numCommitsSeen": 32,
  "timeTaken": 927,
  "changeHistory": [
    "ce4ec7445345eb94c6741d416814a4eac319f0a6"
  ],
  "changeHistoryShort": {
    "ce4ec7445345eb94c6741d416814a4eac319f0a6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce4ec7445345eb94c6741d416814a4eac319f0a6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-17024. ListStatus on ViewFS root (ls \"/\") should list the linkFallBack root (configured target root). Contributed by Abhishek Das.\n\n",
      "commitDate": "18/05/20 10:27 PM",
      "commitName": "ce4ec7445345eb94c6741d416814a4eac319f0a6",
      "commitAuthor": "Abhishek Das",
      "diff": "@@ -0,0 +1,17 @@\n+    private FileStatus[] listStatusForFallbackLink() throws IOException {\n+      if (theInternalDir.isRoot() \u0026\u0026\n+          theInternalDir.getFallbackLink() !\u003d null) {\n+        AbstractFileSystem linkedFs \u003d\n+            theInternalDir.getFallbackLink().getTargetFileSystem();\n+        // Fallback link is only applicable for root\n+        FileStatus[] statuses \u003d linkedFs.listStatus(new Path(\"/\"));\n+        for (FileStatus status : statuses) {\n+          // Fix the path back to viewfs scheme\n+          status.setPath(\n+              new Path(myUri.toString(), status.getPath().getName()));\n+        }\n+        return statuses;\n+      } else {\n+        return new FileStatus[0];\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private FileStatus[] listStatusForFallbackLink() throws IOException {\n      if (theInternalDir.isRoot() \u0026\u0026\n          theInternalDir.getFallbackLink() !\u003d null) {\n        AbstractFileSystem linkedFs \u003d\n            theInternalDir.getFallbackLink().getTargetFileSystem();\n        // Fallback link is only applicable for root\n        FileStatus[] statuses \u003d linkedFs.listStatus(new Path(\"/\"));\n        for (FileStatus status : statuses) {\n          // Fix the path back to viewfs scheme\n          status.setPath(\n              new Path(myUri.toString(), status.getPath().getName()));\n        }\n        return statuses;\n      } else {\n        return new FileStatus[0];\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java"
    }
  }
}