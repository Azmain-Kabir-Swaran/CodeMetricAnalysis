{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "createWebAppContext",
  "functionId": "createWebAppContext___b-Builder__adminsAcl-AccessControlList__appDir-String(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 703,
  "functionEndLine": 729,
  "numCommitsSeen": 116,
  "timeTaken": 3887,
  "changeHistory": [
    "294695dd57cb75f2756a31a54264bdd37b32bb01",
    "5d182949badb2eb80393de7ba3838102d006488b",
    "fdd3bc5f45da615db4fd51cc07cb7d44c211150d",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "2214871d916fdcae62aa51afbb5fd571f2808745"
  ],
  "changeHistoryShort": {
    "294695dd57cb75f2756a31a54264bdd37b32bb01": "Ybodychange",
    "5d182949badb2eb80393de7ba3838102d006488b": "Ymultichange(Yparameterchange,Ybodychange)",
    "fdd3bc5f45da615db4fd51cc07cb7d44c211150d": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Yfilerename",
    "2214871d916fdcae62aa51afbb5fd571f2808745": "Yintroduced"
  },
  "changeHistoryDetails": {
    "294695dd57cb75f2756a31a54264bdd37b32bb01": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16314.  Make sure all web end points are covered by the same authentication filter.\n               Contributed by Prabhu Joseph\n",
      "commitDate": "05/06/19 3:55 PM",
      "commitName": "294695dd57cb75f2756a31a54264bdd37b32bb01",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/01/19 2:54 PM",
      "commitNameOld": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 152.0,
      "commitsBetweenForRepo": 1072,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private static WebAppContext createWebAppContext(Builder b,\n       AccessControlList adminsAcl, final String appDir) {\n     WebAppContext ctx \u003d new WebAppContext();\n     ctx.setDefaultsDescriptor(null);\n-    ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n+    ServletHolder holder \u003d new ServletHolder(new WebServlet());\n     Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n             .put(\"acceptRanges\", \"true\")\n             .put(\"dirAllowed\", \"false\")\n             .put(\"gzip\", \"true\")\n             .put(\"useFileMappedBuffer\", \"true\")\n             .build();\n     holder.setInitParameters(params);\n     ctx.setWelcomeFiles(new String[] {\"index.html\"});\n     ctx.addServlet(holder, \"/\");\n     ctx.setDisplayName(b.name);\n     ctx.setContextPath(\"/\");\n     ctx.setWar(appDir + \"/\" + b.name);\n     String tempDirectory \u003d b.conf.get(HTTP_TEMP_DIR_KEY);\n     if (tempDirectory !\u003d null \u0026\u0026 !tempDirectory.isEmpty()) {\n       ctx.setTempDirectory(new File(tempDirectory));\n       ctx.setAttribute(\"javax.servlet.context.tempdir\", tempDirectory);\n     }\n     ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, b.conf);\n     ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n     addNoCacheFilter(ctx);\n     return ctx;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static WebAppContext createWebAppContext(Builder b,\n      AccessControlList adminsAcl, final String appDir) {\n    WebAppContext ctx \u003d new WebAppContext();\n    ctx.setDefaultsDescriptor(null);\n    ServletHolder holder \u003d new ServletHolder(new WebServlet());\n    Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n            .put(\"acceptRanges\", \"true\")\n            .put(\"dirAllowed\", \"false\")\n            .put(\"gzip\", \"true\")\n            .put(\"useFileMappedBuffer\", \"true\")\n            .build();\n    holder.setInitParameters(params);\n    ctx.setWelcomeFiles(new String[] {\"index.html\"});\n    ctx.addServlet(holder, \"/\");\n    ctx.setDisplayName(b.name);\n    ctx.setContextPath(\"/\");\n    ctx.setWar(appDir + \"/\" + b.name);\n    String tempDirectory \u003d b.conf.get(HTTP_TEMP_DIR_KEY);\n    if (tempDirectory !\u003d null \u0026\u0026 !tempDirectory.isEmpty()) {\n      ctx.setTempDirectory(new File(tempDirectory));\n      ctx.setAttribute(\"javax.servlet.context.tempdir\", tempDirectory);\n    }\n    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, b.conf);\n    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n    addNoCacheFilter(ctx);\n    return ctx;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "5d182949badb2eb80393de7ba3838102d006488b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
      "commitDate": "05/01/17 5:21 PM",
      "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
          "commitDate": "05/01/17 5:21 PM",
          "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "08/11/16 7:25 AM",
          "commitNameOld": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 58.41,
          "commitsBetweenForRepo": 318,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-  private static WebAppContext createWebAppContext(String name,\n-      Configuration conf, AccessControlList adminsAcl, final String appDir) {\n+  private static WebAppContext createWebAppContext(Builder b,\n+      AccessControlList adminsAcl, final String appDir) {\n     WebAppContext ctx \u003d new WebAppContext();\n     ctx.setDefaultsDescriptor(null);\n     ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n     Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n             .put(\"acceptRanges\", \"true\")\n             .put(\"dirAllowed\", \"false\")\n             .put(\"gzip\", \"true\")\n             .put(\"useFileMappedBuffer\", \"true\")\n             .build();\n     holder.setInitParameters(params);\n     ctx.setWelcomeFiles(new String[] {\"index.html\"});\n     ctx.addServlet(holder, \"/\");\n-    ctx.setDisplayName(name);\n+    ctx.setDisplayName(b.name);\n     ctx.setContextPath(\"/\");\n-    ctx.setWar(appDir + \"/\" + name);\n-    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n+    ctx.setWar(appDir + \"/\" + b.name);\n+    String tempDirectory \u003d b.conf.get(HTTP_TEMP_DIR_KEY);\n+    if (tempDirectory !\u003d null \u0026\u0026 !tempDirectory.isEmpty()) {\n+      ctx.setTempDirectory(new File(tempDirectory));\n+      ctx.setAttribute(\"javax.servlet.context.tempdir\", tempDirectory);\n+    }\n+    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, b.conf);\n     ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n     addNoCacheFilter(ctx);\n     return ctx;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static WebAppContext createWebAppContext(Builder b,\n      AccessControlList adminsAcl, final String appDir) {\n    WebAppContext ctx \u003d new WebAppContext();\n    ctx.setDefaultsDescriptor(null);\n    ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n    Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n            .put(\"acceptRanges\", \"true\")\n            .put(\"dirAllowed\", \"false\")\n            .put(\"gzip\", \"true\")\n            .put(\"useFileMappedBuffer\", \"true\")\n            .build();\n    holder.setInitParameters(params);\n    ctx.setWelcomeFiles(new String[] {\"index.html\"});\n    ctx.addServlet(holder, \"/\");\n    ctx.setDisplayName(b.name);\n    ctx.setContextPath(\"/\");\n    ctx.setWar(appDir + \"/\" + b.name);\n    String tempDirectory \u003d b.conf.get(HTTP_TEMP_DIR_KEY);\n    if (tempDirectory !\u003d null \u0026\u0026 !tempDirectory.isEmpty()) {\n      ctx.setTempDirectory(new File(tempDirectory));\n      ctx.setAttribute(\"javax.servlet.context.tempdir\", tempDirectory);\n    }\n    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, b.conf);\n    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n    addNoCacheFilter(ctx);\n    return ctx;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {
            "oldValue": "[name-String, conf-Configuration, adminsAcl-AccessControlList, appDir-String(modifiers-final)]",
            "newValue": "[b-Builder, adminsAcl-AccessControlList, appDir-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
          "commitDate": "05/01/17 5:21 PM",
          "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "08/11/16 7:25 AM",
          "commitNameOld": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 58.41,
          "commitsBetweenForRepo": 318,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-  private static WebAppContext createWebAppContext(String name,\n-      Configuration conf, AccessControlList adminsAcl, final String appDir) {\n+  private static WebAppContext createWebAppContext(Builder b,\n+      AccessControlList adminsAcl, final String appDir) {\n     WebAppContext ctx \u003d new WebAppContext();\n     ctx.setDefaultsDescriptor(null);\n     ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n     Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n             .put(\"acceptRanges\", \"true\")\n             .put(\"dirAllowed\", \"false\")\n             .put(\"gzip\", \"true\")\n             .put(\"useFileMappedBuffer\", \"true\")\n             .build();\n     holder.setInitParameters(params);\n     ctx.setWelcomeFiles(new String[] {\"index.html\"});\n     ctx.addServlet(holder, \"/\");\n-    ctx.setDisplayName(name);\n+    ctx.setDisplayName(b.name);\n     ctx.setContextPath(\"/\");\n-    ctx.setWar(appDir + \"/\" + name);\n-    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n+    ctx.setWar(appDir + \"/\" + b.name);\n+    String tempDirectory \u003d b.conf.get(HTTP_TEMP_DIR_KEY);\n+    if (tempDirectory !\u003d null \u0026\u0026 !tempDirectory.isEmpty()) {\n+      ctx.setTempDirectory(new File(tempDirectory));\n+      ctx.setAttribute(\"javax.servlet.context.tempdir\", tempDirectory);\n+    }\n+    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, b.conf);\n     ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n     addNoCacheFilter(ctx);\n     return ctx;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static WebAppContext createWebAppContext(Builder b,\n      AccessControlList adminsAcl, final String appDir) {\n    WebAppContext ctx \u003d new WebAppContext();\n    ctx.setDefaultsDescriptor(null);\n    ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n    Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n            .put(\"acceptRanges\", \"true\")\n            .put(\"dirAllowed\", \"false\")\n            .put(\"gzip\", \"true\")\n            .put(\"useFileMappedBuffer\", \"true\")\n            .build();\n    holder.setInitParameters(params);\n    ctx.setWelcomeFiles(new String[] {\"index.html\"});\n    ctx.addServlet(holder, \"/\");\n    ctx.setDisplayName(b.name);\n    ctx.setContextPath(\"/\");\n    ctx.setWar(appDir + \"/\" + b.name);\n    String tempDirectory \u003d b.conf.get(HTTP_TEMP_DIR_KEY);\n    if (tempDirectory !\u003d null \u0026\u0026 !tempDirectory.isEmpty()) {\n      ctx.setTempDirectory(new File(tempDirectory));\n      ctx.setAttribute(\"javax.servlet.context.tempdir\", tempDirectory);\n    }\n    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, b.conf);\n    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n    addNoCacheFilter(ctx);\n    return ctx;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {}
        }
      ]
    },
    "fdd3bc5f45da615db4fd51cc07cb7d44c211150d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10746. HttpServer2 should not load JspServlet. Contributed by Haohui Mai.\n",
      "commitDate": "27/08/14 1:26 PM",
      "commitName": "fdd3bc5f45da615db4fd51cc07cb7d44c211150d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "05/08/14 1:58 PM",
      "commitNameOld": "b9984e59d832cd4673dd0edb260a1aa65bb8758d",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 21.98,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,22 @@\n   private static WebAppContext createWebAppContext(String name,\n       Configuration conf, AccessControlList adminsAcl, final String appDir) {\n     WebAppContext ctx \u003d new WebAppContext();\n+    ctx.setDefaultsDescriptor(null);\n+    ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n+    Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n+            .put(\"acceptRanges\", \"true\")\n+            .put(\"dirAllowed\", \"false\")\n+            .put(\"gzip\", \"true\")\n+            .put(\"useFileMappedBuffer\", \"true\")\n+            .build();\n+    holder.setInitParameters(params);\n+    ctx.setWelcomeFiles(new String[] {\"index.html\"});\n+    ctx.addServlet(holder, \"/\");\n     ctx.setDisplayName(name);\n     ctx.setContextPath(\"/\");\n     ctx.setWar(appDir + \"/\" + name);\n     ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n     ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n     addNoCacheFilter(ctx);\n     return ctx;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static WebAppContext createWebAppContext(String name,\n      Configuration conf, AccessControlList adminsAcl, final String appDir) {\n    WebAppContext ctx \u003d new WebAppContext();\n    ctx.setDefaultsDescriptor(null);\n    ServletHolder holder \u003d new ServletHolder(new DefaultServlet());\n    Map\u003cString, String\u003e params \u003d ImmutableMap. \u003cString, String\u003e builder()\n            .put(\"acceptRanges\", \"true\")\n            .put(\"dirAllowed\", \"false\")\n            .put(\"gzip\", \"true\")\n            .put(\"useFileMappedBuffer\", \"true\")\n            .build();\n    holder.setInitParameters(params);\n    ctx.setWelcomeFiles(new String[] {\"index.html\"});\n    ctx.addServlet(holder, \"/\");\n    ctx.setDisplayName(name);\n    ctx.setContextPath(\"/\");\n    ctx.setWar(appDir + \"/\" + name);\n    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n    addNoCacheFilter(ctx);\n    return ctx;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "27/01/14 10:41 PM",
      "commitNameOld": "87166f1ee81dbad579508c2bdbc7dda96b1ef809",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static WebAppContext createWebAppContext(String name,\n      Configuration conf, AccessControlList adminsAcl, final String appDir) {\n    WebAppContext ctx \u003d new WebAppContext();\n    ctx.setDisplayName(name);\n    ctx.setContextPath(\"/\");\n    ctx.setWar(appDir + \"/\" + name);\n    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n    addNoCacheFilter(ctx);\n    return ctx;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
      }
    },
    "2214871d916fdcae62aa51afbb5fd571f2808745": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 10:20 AM",
      "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,11 @@\n+  private static WebAppContext createWebAppContext(String name,\n+      Configuration conf, AccessControlList adminsAcl, final String appDir) {\n+    WebAppContext ctx \u003d new WebAppContext();\n+    ctx.setDisplayName(name);\n+    ctx.setContextPath(\"/\");\n+    ctx.setWar(appDir + \"/\" + name);\n+    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n+    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n+    addNoCacheFilter(ctx);\n+    return ctx;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static WebAppContext createWebAppContext(String name,\n      Configuration conf, AccessControlList adminsAcl, final String appDir) {\n    WebAppContext ctx \u003d new WebAppContext();\n    ctx.setDisplayName(name);\n    ctx.setContextPath(\"/\");\n    ctx.setWar(appDir + \"/\" + name);\n    ctx.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n    ctx.getServletContext().setAttribute(ADMINS_ACL, adminsAcl);\n    addNoCacheFilter(ctx);\n    return ctx;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
    }
  }
}