{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyShell.java",
  "functionName": "validate",
  "functionId": "validate",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
  "functionStartLine": 431,
  "functionEndLine": 454,
  "numCommitsSeen": 21,
  "timeTaken": 1852,
  "changeHistory": [
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
    "eebb39a56fe504672b79ea04c6040e360496b6d7",
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
    "c4a3a29541e1c385af20494984b072b6fd67f2e5",
    "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337",
    "e05ff82bd95dd802233e2424e8eafbd7ec6944c5"
  ],
  "changeHistoryShort": {
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": "Ybodychange",
    "eebb39a56fe504672b79ea04c6040e360496b6d7": "Ybodychange",
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": "Ybodychange",
    "c4a3a29541e1c385af20494984b072b6fd67f2e5": "Ybodychange",
    "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337": "Ybodychange",
    "e05ff82bd95dd802233e2424e8eafbd7ec6944c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
      "commitDate": "07/02/17 8:36 PM",
      "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "23/05/16 1:37 PM",
      "commitNameOld": "eebb39a56fe504672b79ea04c6040e360496b6d7",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 260.33,
      "commitsBetweenForRepo": 1805,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,14 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n-      try {\n-        provider \u003d getKeyProvider();\n-        if (provider \u003d\u003d null) {\n-          rc \u003d false;\n-        } else if (provider.needsPassword()) {\n-          if (strict) {\n-            getOut().println(provider.noPasswordError());\n-            rc \u003d false;\n-          } else {\n-            getOut().println(provider.noPasswordWarning());\n-          }\n-        }\n-      } catch (IOException e) {\n-        e.printStackTrace(getErr());\n+      provider \u003d getKeyProvider();\n+      if (provider \u003d\u003d null) {\n+        getOut().println(\"Invalid provider.\");\n+        rc \u003d false;\n       }\n       if (keyName \u003d\u003d null) {\n-        getOut().println(\"Please provide a \u003ckeyname\u003e. \" +\n-            \" See the usage description with -help.\");\n+        getOut().println(\"Please provide a \u003ckeyname\u003e.\\n\" +\n+            \"See the usage description by using -help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      provider \u003d getKeyProvider();\n      if (provider \u003d\u003d null) {\n        getOut().println(\"Invalid provider.\");\n        rc \u003d false;\n      }\n      if (keyName \u003d\u003d null) {\n        getOut().println(\"Please provide a \u003ckeyname\u003e.\\n\" +\n            \"See the usage description by using -help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "eebb39a56fe504672b79ea04c6040e360496b6d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13112. Change CredentialShell to use CommandShell base class (Matthew Paduano via aw)\n",
      "commitDate": "23/05/16 1:37 PM",
      "commitName": "eebb39a56fe504672b79ea04c6040e360496b6d7",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/05/16 5:44 PM",
      "commitNameOld": "7154ace71212e9fb9dd6209a92165fb075df7806",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.83,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n       try {\n         provider \u003d getKeyProvider();\n         if (provider \u003d\u003d null) {\n           rc \u003d false;\n         } else if (provider.needsPassword()) {\n           if (strict) {\n-            out.println(provider.noPasswordError());\n+            getOut().println(provider.noPasswordError());\n             rc \u003d false;\n           } else {\n-            out.println(provider.noPasswordWarning());\n+            getOut().println(provider.noPasswordWarning());\n           }\n         }\n       } catch (IOException e) {\n-        e.printStackTrace(err);\n+        e.printStackTrace(getErr());\n       }\n       if (keyName \u003d\u003d null) {\n-        out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n-            \" with -help.\");\n+        getOut().println(\"Please provide a \u003ckeyname\u003e. \" +\n+            \" See the usage description with -help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      try {\n        provider \u003d getKeyProvider();\n        if (provider \u003d\u003d null) {\n          rc \u003d false;\n        } else if (provider.needsPassword()) {\n          if (strict) {\n            getOut().println(provider.noPasswordError());\n            rc \u003d false;\n          } else {\n            getOut().println(provider.noPasswordWarning());\n          }\n        }\n      } catch (IOException e) {\n        e.printStackTrace(getErr());\n      }\n      if (keyName \u003d\u003d null) {\n        getOut().println(\"Please provide a \u003ckeyname\u003e. \" +\n            \" See the usage description with -help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12942. hadoop credential commands non-obviously use password of \"none\" (Mike Yoder via lmccay)",
      "commitDate": "11/05/16 11:30 AM",
      "commitName": "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
      "commitAuthor": "Larry McCay",
      "commitDateOld": "14/02/16 6:38 PM",
      "commitNameOld": "1c48e50ce71fd0e38740d69ce1e03119dca97a38",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 86.66,
      "commitsBetweenForRepo": 527,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,24 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n-      provider \u003d getKeyProvider();\n-      if (provider \u003d\u003d null) {\n-        out.println(\"There are no valid KeyProviders configured. No key\\n\" +\n-          \" was created. You can use the -provider option to specify\\n\" +\n-          \" a provider to use.\");\n-        rc \u003d false;\n+      try {\n+        provider \u003d getKeyProvider();\n+        if (provider \u003d\u003d null) {\n+          rc \u003d false;\n+        } else if (provider.needsPassword()) {\n+          if (strict) {\n+            out.println(provider.noPasswordError());\n+            rc \u003d false;\n+          } else {\n+            out.println(provider.noPasswordWarning());\n+          }\n+        }\n+      } catch (IOException e) {\n+        e.printStackTrace(err);\n       }\n       if (keyName \u003d\u003d null) {\n         out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n-          \" with -help.\");\n+            \" with -help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      try {\n        provider \u003d getKeyProvider();\n        if (provider \u003d\u003d null) {\n          rc \u003d false;\n        } else if (provider.needsPassword()) {\n          if (strict) {\n            out.println(provider.noPasswordError());\n            rc \u003d false;\n          } else {\n            out.println(provider.noPasswordWarning());\n          }\n        }\n      } catch (IOException e) {\n        e.printStackTrace(err);\n      }\n      if (keyName \u003d\u003d null) {\n        out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n            \" with -help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "c4a3a29541e1c385af20494984b072b6fd67f2e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10793. KeyShell args should use single-dash style. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615180 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/14 10:45 AM",
      "commitName": "c4a3a29541e1c385af20494984b072b6fd67f2e5",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "16/07/14 5:49 PM",
      "commitNameOld": "9dff25e8904f66e71b3fabc4262fff533dbf2013",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 15.71,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n       provider \u003d getKeyProvider();\n       if (provider \u003d\u003d null) {\n         out.println(\"There are no valid KeyProviders configured. No key\\n\" +\n-          \" was created. You can use the --provider option to specify\\n\" +\n+          \" was created. You can use the -provider option to specify\\n\" +\n           \" a provider to use.\");\n         rc \u003d false;\n       }\n       if (keyName \u003d\u003d null) {\n         out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n-          \" with --help.\");\n+          \" with -help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      provider \u003d getKeyProvider();\n      if (provider \u003d\u003d null) {\n        out.println(\"There are no valid KeyProviders configured. No key\\n\" +\n          \" was created. You can use the -provider option to specify\\n\" +\n          \" a provider to use.\");\n        rc \u003d false;\n      }\n      if (keyName \u003d\u003d null) {\n        out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n          \" with -help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10583. bin/hadoop key throws NPE with no args and assorted other fixups. (clamb via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594320 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 11:29 AM",
      "commitName": "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "24/04/14 8:49 AM",
      "commitNameOld": "f9a9c1ee633fd50ba478b87e1c9d84dce089a345",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 19.11,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n       provider \u003d getKeyProvider();\n       if (provider \u003d\u003d null) {\n-        out.println(\"There are no valid KeyProviders configured.\\nKey\" +\n-        \t\t\" will not be created.\\n\"\n-            + \"Consider using the --provider option to indicate the provider\" +\n-            \" to use.\");\n+        out.println(\"There are no valid KeyProviders configured. No key\\n\" +\n+          \" was created. You can use the --provider option to specify\\n\" +\n+          \" a provider to use.\");\n         rc \u003d false;\n       }\n       if (keyName \u003d\u003d null) {\n-        out.println(\"There is no keyName specified. Please provide the\" +\n-        \t\t\"mandatory \u003ckeyname\u003e. See the usage description with --help.\");\n+        out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n+          \" with --help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      provider \u003d getKeyProvider();\n      if (provider \u003d\u003d null) {\n        out.println(\"There are no valid KeyProviders configured. No key\\n\" +\n          \" was created. You can use the --provider option to specify\\n\" +\n          \" a provider to use.\");\n        rc \u003d false;\n      }\n      if (keyName \u003d\u003d null) {\n        out.println(\"Please provide a \u003ckeyname\u003e. See the usage description\" +\n          \" with --help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "e05ff82bd95dd802233e2424e8eafbd7ec6944c5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10177. Create CLI tools for managing keys. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1558867 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/01/14 9:48 AM",
      "commitName": "e05ff82bd95dd802233e2424e8eafbd7ec6944c5",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,17 @@\n+    public boolean validate() {\n+      boolean rc \u003d true;\n+      provider \u003d getKeyProvider();\n+      if (provider \u003d\u003d null) {\n+        out.println(\"There are no valid KeyProviders configured.\\nKey\" +\n+        \t\t\" will not be created.\\n\"\n+            + \"Consider using the --provider option to indicate the provider\" +\n+            \" to use.\");\n+        rc \u003d false;\n+      }\n+      if (keyName \u003d\u003d null) {\n+        out.println(\"There is no keyName specified. Please provide the\" +\n+        \t\t\"mandatory \u003ckeyname\u003e. See the usage description with --help.\");\n+        rc \u003d false;\n+      }\n+      return rc;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      provider \u003d getKeyProvider();\n      if (provider \u003d\u003d null) {\n        out.println(\"There are no valid KeyProviders configured.\\nKey\" +\n        \t\t\" will not be created.\\n\"\n            + \"Consider using the --provider option to indicate the provider\" +\n            \" to use.\");\n        rc \u003d false;\n      }\n      if (keyName \u003d\u003d null) {\n        out.println(\"There is no keyName specified. Please provide the\" +\n        \t\t\"mandatory \u003ckeyname\u003e. See the usage description with --help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java"
    }
  }
}