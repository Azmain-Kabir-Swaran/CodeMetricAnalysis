{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMLauncher.java",
  "functionName": "createAMContainerLaunchContext",
  "functionId": "createAMContainerLaunchContext___applicationMasterContext-ApplicationSubmissionContext__containerID-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
  "functionStartLine": 191,
  "functionEndLine": 209,
  "numCommitsSeen": 61,
  "timeTaken": 9594,
  "changeHistory": [
    "766544c0b008da9e78bcea6285b2c478653df75a",
    "a393e84c6f57d50a471fc902dfd07ca1b4128a0e",
    "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
    "378f624a392550770d1db33cb4cee3ef7d5facd4",
    "a3cf40e532d17b176663bb99248ed159aae6a9ed",
    "b7ac85259c7d20c33bef9c9cb40b8aabcab70755",
    "5d1b453b8591d87ffb564857015c26c99fb7437c",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "b549c107825581b15fd14494099a943ff3213c6f",
    "88b82a0f6687ce103817fbb460fd30d870f717a0",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "766544c0b008da9e78bcea6285b2c478653df75a": "Ybodychange",
    "a393e84c6f57d50a471fc902dfd07ca1b4128a0e": "Ybodychange",
    "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d": "Ybodychange",
    "378f624a392550770d1db33cb4cee3ef7d5facd4": "Ybodychange",
    "a3cf40e532d17b176663bb99248ed159aae6a9ed": "Ybodychange",
    "b7ac85259c7d20c33bef9c9cb40b8aabcab70755": "Ybodychange",
    "5d1b453b8591d87ffb564857015c26c99fb7437c": "Ybodychange",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": "Ybodychange",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "b549c107825581b15fd14494099a943ff3213c6f": "Ybodychange",
    "88b82a0f6687ce103817fbb460fd30d870f717a0": "Ybodychange",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "766544c0b008da9e78bcea6285b2c478653df75a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7786. NullPointerException while launching ApplicationMaster. Contributed by lujie\n",
      "commitDate": "20/04/18 11:22 AM",
      "commitName": "766544c0b008da9e78bcea6285b2c478653df75a",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "17/04/18 11:15 AM",
      "commitNameOld": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d\n         applicationMasterContext.getAMContainerSpec();\n \n+    if (container \u003d\u003d null){\n+      throw new IOException(containerID +\n+            \" has been cleaned before launched\");\n+    }\n     // Finalize the container\n     setupTokens(container, containerID);\n     // set the flow context optionally for timeline service v.2\n     setFlowContext(container);\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d\n        applicationMasterContext.getAMContainerSpec();\n\n    if (container \u003d\u003d null){\n      throw new IOException(containerID +\n            \" has been cleaned before launched\");\n    }\n    // Finalize the container\n    setupTokens(container, containerID);\n    // set the flow context optionally for timeline service v.2\n    setFlowContext(container);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "a393e84c6f57d50a471fc902dfd07ca1b4128a0e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6200. Reverting since the same functionality achieved by YARN-1623.\nRevert \"YARN-5068. Expose scheduler queue to application master. (Harish Jaiprakash via rohithsharmaks)\"\n\nThis reverts commit b7ac85259c7d20c33bef9c9cb40b8aabcab70755.\n",
      "commitDate": "16/02/17 4:30 AM",
      "commitName": "a393e84c6f57d50a471fc902dfd07ca1b4128a0e",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "28/09/16 3:40 AM",
      "commitNameOld": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 141.08,
      "commitsBetweenForRepo": 895,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d\n         applicationMasterContext.getAMContainerSpec();\n \n-    // Populate the current queue name in the environment variable.\n-    setupQueueNameEnv(container, applicationMasterContext);\n-\n     // Finalize the container\n     setupTokens(container, containerID);\n     // set the flow context optionally for timeline service v.2\n     setFlowContext(container);\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d\n        applicationMasterContext.getAMContainerSpec();\n\n    // Finalize the container\n    setupTokens(container, containerID);\n    // set the flow context optionally for timeline service v.2\n    setFlowContext(container);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5599. Publish AM launch command to ATS (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "28/09/16 3:40 AM",
      "commitName": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "02/09/16 11:14 AM",
      "commitNameOld": "378f624a392550770d1db33cb4cee3ef7d5facd4",
      "commitAuthorOld": "Ray Chiang",
      "daysBetweenCommits": 25.68,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,18 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d\n         applicationMasterContext.getAMContainerSpec();\n \n-    if (LOG.isDebugEnabled()) {\n-      StringBuilder message \u003d new StringBuilder(\"Command to launch container \");\n-\n-      message.append(containerID).append(\" : \");\n-\n-      if (logCommandLine) {\n-        message.append(Joiner.on(\",\").join(container.getCommands()));\n-      } else {\n-        message.append(\"\u003cREDACTED\u003e -- Set \");\n-        message.append(YarnConfiguration.RM_AMLAUNCHER_LOG_COMMAND);\n-        message.append(\" to true to reenable command logging\");\n-      }\n-\n-      LOG.debug(message.toString());\n-    }\n-\n     // Populate the current queue name in the environment variable.\n     setupQueueNameEnv(container, applicationMasterContext);\n \n     // Finalize the container\n     setupTokens(container, containerID);\n     // set the flow context optionally for timeline service v.2\n     setFlowContext(container);\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d\n        applicationMasterContext.getAMContainerSpec();\n\n    // Populate the current queue name in the environment variable.\n    setupQueueNameEnv(container, applicationMasterContext);\n\n    // Finalize the container\n    setupTokens(container, containerID);\n    // set the flow context optionally for timeline service v.2\n    setFlowContext(container);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "378f624a392550770d1db33cb4cee3ef7d5facd4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5549. AMLauncher#createAMContainerLaunchContext() should not log the command to be launched indiscriminately. (Daniel Templeton via rchiang)\n",
      "commitDate": "02/09/16 11:14 AM",
      "commitName": "378f624a392550770d1db33cb4cee3ef7d5facd4",
      "commitAuthor": "Ray Chiang",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "a3cf40e532d17b176663bb99248ed159aae6a9ed",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 54.1,
      "commitsBetweenForRepo": 407,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,34 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d\n         applicationMasterContext.getAMContainerSpec();\n-    LOG.info(\"Command to launch container \"\n-        + containerID\n-        + \" : \"\n-        + StringUtils.arrayToString(container.getCommands().toArray(\n-            new String[0])));\n+\n+    if (LOG.isDebugEnabled()) {\n+      StringBuilder message \u003d new StringBuilder(\"Command to launch container \");\n+\n+      message.append(containerID).append(\" : \");\n+\n+      if (logCommandLine) {\n+        message.append(Joiner.on(\",\").join(container.getCommands()));\n+      } else {\n+        message.append(\"\u003cREDACTED\u003e -- Set \");\n+        message.append(YarnConfiguration.RM_AMLAUNCHER_LOG_COMMAND);\n+        message.append(\" to true to reenable command logging\");\n+      }\n+\n+      LOG.debug(message.toString());\n+    }\n \n     // Populate the current queue name in the environment variable.\n     setupQueueNameEnv(container, applicationMasterContext);\n \n     // Finalize the container\n     setupTokens(container, containerID);\n     // set the flow context optionally for timeline service v.2\n     setFlowContext(container);\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d\n        applicationMasterContext.getAMContainerSpec();\n\n    if (LOG.isDebugEnabled()) {\n      StringBuilder message \u003d new StringBuilder(\"Command to launch container \");\n\n      message.append(containerID).append(\" : \");\n\n      if (logCommandLine) {\n        message.append(Joiner.on(\",\").join(container.getCommands()));\n      } else {\n        message.append(\"\u003cREDACTED\u003e -- Set \");\n        message.append(YarnConfiguration.RM_AMLAUNCHER_LOG_COMMAND);\n        message.append(\" to true to reenable command logging\");\n      }\n\n      LOG.debug(message.toString());\n    }\n\n    // Populate the current queue name in the environment variable.\n    setupQueueNameEnv(container, applicationMasterContext);\n\n    // Finalize the container\n    setupTokens(container, containerID);\n    // set the flow context optionally for timeline service v.2\n    setFlowContext(container);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "a3cf40e532d17b176663bb99248ed159aae6a9ed": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3461. Consolidate flow name/version/run defaults. (Sangjin Lee via Varun Saxena)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a3cf40e532d17b176663bb99248ed159aae6a9ed",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d\n         applicationMasterContext.getAMContainerSpec();\n     LOG.info(\"Command to launch container \"\n         + containerID\n         + \" : \"\n         + StringUtils.arrayToString(container.getCommands().toArray(\n             new String[0])));\n \n     // Populate the current queue name in the environment variable.\n     setupQueueNameEnv(container, applicationMasterContext);\n \n     // Finalize the container\n     setupTokens(container, containerID);\n+    // set the flow context optionally for timeline service v.2\n+    setFlowContext(container);\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d\n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n\n    // Populate the current queue name in the environment variable.\n    setupQueueNameEnv(container, applicationMasterContext);\n\n    // Finalize the container\n    setupTokens(container, containerID);\n    // set the flow context optionally for timeline service v.2\n    setFlowContext(container);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "b7ac85259c7d20c33bef9c9cb40b8aabcab70755": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5068. Expose scheduler queue to application master. (Harish Jaiprakash via rohithsharmaks)\n",
      "commitDate": "12/05/16 2:47 AM",
      "commitName": "b7ac85259c7d20c33bef9c9cb40b8aabcab70755",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "15/10/15 5:12 PM",
      "commitNameOld": "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 209.4,
      "commitsBetweenForRepo": 1355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d\n         applicationMasterContext.getAMContainerSpec();\n     LOG.info(\"Command to launch container \"\n         + containerID\n         + \" : \"\n         + StringUtils.arrayToString(container.getCommands().toArray(\n             new String[0])));\n \n+    // Populate the current queue name in the environment variable.\n+    setupQueueNameEnv(container, applicationMasterContext);\n+\n     // Finalize the container\n     setupTokens(container, containerID);\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d\n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n\n    // Populate the current queue name in the environment variable.\n    setupQueueNameEnv(container, applicationMasterContext);\n\n    // Finalize the container\n    setupTokens(container, containerID);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "5d1b453b8591d87ffb564857015c26c99fb7437c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-610. ClientToken is no longer set in the environment of the Containers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493968 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 4:13 PM",
      "commitName": "5d1b453b8591d87ffb564857015c26c99fb7437c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 12:11 PM",
      "commitNameOld": "7d0c43d7cff6d250613a04fea9449f139988e901",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d \n         applicationMasterContext.getAMContainerSpec();\n     LOG.info(\"Command to launch container \"\n         + containerID\n         + \" : \"\n         + StringUtils.arrayToString(container.getCommands().toArray(\n             new String[0])));\n     \n     // Finalize the container\n-    setupTokensAndEnv(container, containerID);\n+    setupTokens(container, containerID);\n     \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d \n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n    \n    // Finalize the container\n    setupTokens(container, containerID);\n    \n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 8:22 PM",
      "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/05/13 9:11 PM",
      "commitNameOld": "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 9.97,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d \n         applicationMasterContext.getAMContainerSpec();\n     LOG.info(\"Command to launch container \"\n         + containerID\n         + \" : \"\n         + StringUtils.arrayToString(container.getCommands().toArray(\n             new String[0])));\n     \n     // Finalize the container\n-    container.setUser(applicationMasterContext.getAMContainerSpec().getUser());\n     setupTokensAndEnv(container, containerID);\n     \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d \n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n    \n    // Finalize the container\n    setupTokensAndEnv(container, containerID);\n    \n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 12:28 PM",
      "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/03/13 2:11 PM",
      "commitNameOld": "07573640147bb4cf3568078acae7b245e9299cf7",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.93,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d \n         applicationMasterContext.getAMContainerSpec();\n     LOG.info(\"Command to launch container \"\n         + containerID\n         + \" : \"\n         + StringUtils.arrayToString(container.getCommands().toArray(\n             new String[0])));\n     \n     // Finalize the container\n-    container.setContainerId(containerID);\n-    container.setUser(applicationMasterContext.getUser());\n-    setupTokensAndEnv(container);\n+    container.setUser(applicationMasterContext.getAMContainerSpec().getUser());\n+    setupTokensAndEnv(container, containerID);\n     \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d \n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n    \n    // Finalize the container\n    container.setUser(applicationMasterContext.getAMContainerSpec().getUser());\n    setupTokensAndEnv(container, containerID);\n    \n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d \n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n    \n    // Finalize the container\n    container.setContainerId(containerID);\n    container.setUser(applicationMasterContext.getUser());\n    setupTokensAndEnv(container);\n    \n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
      }
    },
    "b549c107825581b15fd14494099a943ff3213c6f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3055. Simplified ApplicationAttemptId passing to ApplicationMaster via environment variable. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/09/11 7:07 AM",
      "commitName": "b549c107825581b15fd14494099a943ff3213c6f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/09/11 12:26 AM",
      "commitNameOld": "88b82a0f6687ce103817fbb460fd30d870f717a0",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 9.28,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,20 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d \n         applicationMasterContext.getAMContainerSpec();\n-    StringBuilder mergedCommand \u003d new StringBuilder();\n-    String failCount \u003d Integer.toString(application.getAppAttemptId()\n-        .getAttemptId());\n-    List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n-    for (String str : container.getCommands()) {\n-      // This is out-right wrong. AM FAIL count should be passed via env.\n-      String result \u003d\n-          str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n-              failCount);\n-      mergedCommand.append(result).append(\" \");\n-      commandList.add(result);\n-    }\n-    container.setCommands(commandList);\n-    /** add the failed count to the app master command line */\n-   \n-    LOG.info(\"Command to launch container \" + \n-        containerID + \" : \" + mergedCommand);\n+    LOG.info(\"Command to launch container \"\n+        + containerID\n+        + \" : \"\n+        + StringUtils.arrayToString(container.getCommands().toArray(\n+            new String[0])));\n     \n     // Finalize the container\n     container.setContainerId(containerID);\n     container.setUser(applicationMasterContext.getUser());\n     setupTokensAndEnv(container);\n     \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d \n        applicationMasterContext.getAMContainerSpec();\n    LOG.info(\"Command to launch container \"\n        + containerID\n        + \" : \"\n        + StringUtils.arrayToString(container.getCommands().toArray(\n            new String[0])));\n    \n    // Finalize the container\n    container.setContainerId(containerID);\n    container.setUser(applicationMasterContext.getUser());\n    setupTokensAndEnv(container);\n    \n    return container;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "88b82a0f6687ce103817fbb460fd30d870f717a0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1170459 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/09/11 12:26 AM",
      "commitName": "88b82a0f6687ce103817fbb460fd30d870f717a0",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "12/09/11 5:05 PM",
      "commitNameOld": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.31,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,32 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n-    ContainerLaunchContext container \u003d recordFactory.newRecordInstance(ContainerLaunchContext.class);\n-    container.setCommands(applicationMasterContext.getCommandList());\n+    ContainerLaunchContext container \u003d \n+        applicationMasterContext.getAMContainerSpec();\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     String failCount \u003d Integer.toString(application.getAppAttemptId()\n         .getAttemptId());\n     List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n     for (String str : container.getCommands()) {\n       // This is out-right wrong. AM FAIL count should be passed via env.\n       String result \u003d\n           str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n               failCount);\n       mergedCommand.append(result).append(\" \");\n       commandList.add(result);\n     }\n     container.setCommands(commandList);\n     /** add the failed count to the app master command line */\n    \n     LOG.info(\"Command to launch container \" + \n         containerID + \" : \" + mergedCommand);\n-    Map\u003cString, String\u003e environment \u003d \n-        applicationMasterContext.getAllEnvironment();\n-    environment.putAll(setupTokensInEnv(applicationMasterContext));\n-    container.setEnv(environment);\n-\n-    // Construct the actual Container\n+    \n+    // Finalize the container\n     container.setContainerId(containerID);\n     container.setUser(applicationMasterContext.getUser());\n-    container.setResource(applicationMasterContext.getMasterCapability());\n-    container.setLocalResources(applicationMasterContext.getAllResourcesTodo());\n-    container.setContainerTokens(applicationMasterContext.getFsTokensTodo());\n+    setupTokensAndEnv(container);\n+    \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d \n        applicationMasterContext.getAMContainerSpec();\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    String failCount \u003d Integer.toString(application.getAppAttemptId()\n        .getAttemptId());\n    List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n    for (String str : container.getCommands()) {\n      // This is out-right wrong. AM FAIL count should be passed via env.\n      String result \u003d\n          str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n              failCount);\n      mergedCommand.append(result).append(\" \");\n      commandList.add(result);\n    }\n    container.setCommands(commandList);\n    /** add the failed count to the app master command line */\n   \n    LOG.info(\"Command to launch container \" + \n        containerID + \" : \" + mergedCommand);\n    \n    // Finalize the container\n    container.setContainerId(containerID);\n    container.setUser(applicationMasterContext.getUser());\n    setupTokensAndEnv(container);\n    \n    return container;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 5:05 PM",
      "commitName": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 3.93,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private ContainerLaunchContext createAMContainerLaunchContext(\n       ApplicationSubmissionContext applicationMasterContext,\n       ContainerId containerID) throws IOException {\n \n     // Construct the actual Container\n     ContainerLaunchContext container \u003d recordFactory.newRecordInstance(ContainerLaunchContext.class);\n-    container.addAllCommands(applicationMasterContext.getCommandList());\n+    container.setCommands(applicationMasterContext.getCommandList());\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     String failCount \u003d Integer.toString(application.getAppAttemptId()\n         .getAttemptId());\n     List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n-    for (String str : container.getCommandList()) {\n+    for (String str : container.getCommands()) {\n       // This is out-right wrong. AM FAIL count should be passed via env.\n       String result \u003d\n           str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n               failCount);\n       mergedCommand.append(result).append(\" \");\n       commandList.add(result);\n     }\n-    container.clearCommands();\n-    container.addAllCommands(commandList);\n+    container.setCommands(commandList);\n     /** add the failed count to the app master command line */\n    \n     LOG.info(\"Command to launch container \" + \n         containerID + \" : \" + mergedCommand);\n-    container.addAllEnv(applicationMasterContext.getAllEnvironment());\n-\n-    container.addAllEnv(setupTokensInEnv(applicationMasterContext));\n+    Map\u003cString, String\u003e environment \u003d \n+        applicationMasterContext.getAllEnvironment();\n+    environment.putAll(setupTokensInEnv(applicationMasterContext));\n+    container.setEnv(environment);\n \n     // Construct the actual Container\n     container.setContainerId(containerID);\n     container.setUser(applicationMasterContext.getUser());\n     container.setResource(applicationMasterContext.getMasterCapability());\n-    container.addAllLocalResources(applicationMasterContext.getAllResourcesTodo());\n+    container.setLocalResources(applicationMasterContext.getAllResourcesTodo());\n     container.setContainerTokens(applicationMasterContext.getFsTokensTodo());\n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d recordFactory.newRecordInstance(ContainerLaunchContext.class);\n    container.setCommands(applicationMasterContext.getCommandList());\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    String failCount \u003d Integer.toString(application.getAppAttemptId()\n        .getAttemptId());\n    List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n    for (String str : container.getCommands()) {\n      // This is out-right wrong. AM FAIL count should be passed via env.\n      String result \u003d\n          str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n              failCount);\n      mergedCommand.append(result).append(\" \");\n      commandList.add(result);\n    }\n    container.setCommands(commandList);\n    /** add the failed count to the app master command line */\n   \n    LOG.info(\"Command to launch container \" + \n        containerID + \" : \" + mergedCommand);\n    Map\u003cString, String\u003e environment \u003d \n        applicationMasterContext.getAllEnvironment();\n    environment.putAll(setupTokensInEnv(applicationMasterContext));\n    container.setEnv(environment);\n\n    // Construct the actual Container\n    container.setContainerId(containerID);\n    container.setUser(applicationMasterContext.getUser());\n    container.setResource(applicationMasterContext.getMasterCapability());\n    container.setLocalResources(applicationMasterContext.getAllResourcesTodo());\n    container.setContainerTokens(applicationMasterContext.getFsTokensTodo());\n    return container;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d recordFactory.newRecordInstance(ContainerLaunchContext.class);\n    container.addAllCommands(applicationMasterContext.getCommandList());\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    String failCount \u003d Integer.toString(application.getAppAttemptId()\n        .getAttemptId());\n    List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n    for (String str : container.getCommandList()) {\n      // This is out-right wrong. AM FAIL count should be passed via env.\n      String result \u003d\n          str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n              failCount);\n      mergedCommand.append(result).append(\" \");\n      commandList.add(result);\n    }\n    container.clearCommands();\n    container.addAllCommands(commandList);\n    /** add the failed count to the app master command line */\n   \n    LOG.info(\"Command to launch container \" + \n        containerID + \" : \" + mergedCommand);\n    container.addAllEnv(applicationMasterContext.getAllEnvironment());\n\n    container.addAllEnv(setupTokensInEnv(applicationMasterContext));\n\n    // Construct the actual Container\n    container.setContainerId(containerID);\n    container.setUser(applicationMasterContext.getUser());\n    container.setResource(applicationMasterContext.getMasterCapability());\n    container.addAllLocalResources(applicationMasterContext.getAllResourcesTodo());\n    container.setContainerTokens(applicationMasterContext.getFsTokensTodo());\n    return container;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,37 @@\n+  private ContainerLaunchContext createAMContainerLaunchContext(\n+      ApplicationSubmissionContext applicationMasterContext,\n+      ContainerId containerID) throws IOException {\n+\n+    // Construct the actual Container\n+    ContainerLaunchContext container \u003d recordFactory.newRecordInstance(ContainerLaunchContext.class);\n+    container.addAllCommands(applicationMasterContext.getCommandList());\n+    StringBuilder mergedCommand \u003d new StringBuilder();\n+    String failCount \u003d Integer.toString(application.getAppAttemptId()\n+        .getAttemptId());\n+    List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n+    for (String str : container.getCommandList()) {\n+      // This is out-right wrong. AM FAIL count should be passed via env.\n+      String result \u003d\n+          str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n+              failCount);\n+      mergedCommand.append(result).append(\" \");\n+      commandList.add(result);\n+    }\n+    container.clearCommands();\n+    container.addAllCommands(commandList);\n+    /** add the failed count to the app master command line */\n+   \n+    LOG.info(\"Command to launch container \" + \n+        containerID + \" : \" + mergedCommand);\n+    container.addAllEnv(applicationMasterContext.getAllEnvironment());\n+\n+    container.addAllEnv(setupTokensInEnv(applicationMasterContext));\n+\n+    // Construct the actual Container\n+    container.setContainerId(containerID);\n+    container.setUser(applicationMasterContext.getUser());\n+    container.setResource(applicationMasterContext.getMasterCapability());\n+    container.addAllLocalResources(applicationMasterContext.getAllResourcesTodo());\n+    container.setContainerTokens(applicationMasterContext.getFsTokensTodo());\n+    return container;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerLaunchContext createAMContainerLaunchContext(\n      ApplicationSubmissionContext applicationMasterContext,\n      ContainerId containerID) throws IOException {\n\n    // Construct the actual Container\n    ContainerLaunchContext container \u003d recordFactory.newRecordInstance(ContainerLaunchContext.class);\n    container.addAllCommands(applicationMasterContext.getCommandList());\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    String failCount \u003d Integer.toString(application.getAppAttemptId()\n        .getAttemptId());\n    List\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();\n    for (String str : container.getCommandList()) {\n      // This is out-right wrong. AM FAIL count should be passed via env.\n      String result \u003d\n          str.replaceFirst(ApplicationConstants.AM_FAIL_COUNT_STRING,\n              failCount);\n      mergedCommand.append(result).append(\" \");\n      commandList.add(result);\n    }\n    container.clearCommands();\n    container.addAllCommands(commandList);\n    /** add the failed count to the app master command line */\n   \n    LOG.info(\"Command to launch container \" + \n        containerID + \" : \" + mergedCommand);\n    container.addAllEnv(applicationMasterContext.getAllEnvironment());\n\n    container.addAllEnv(setupTokensInEnv(applicationMasterContext));\n\n    // Construct the actual Container\n    container.setContainerId(containerID);\n    container.setUser(applicationMasterContext.getUser());\n    container.setResource(applicationMasterContext.getMasterCapability());\n    container.addAllLocalResources(applicationMasterContext.getAllResourcesTodo());\n    container.setContainerTokens(applicationMasterContext.getFsTokensTodo());\n    return container;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
    }
  }
}