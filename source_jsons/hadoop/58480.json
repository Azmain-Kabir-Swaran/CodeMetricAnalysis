{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractFSNodeStore.java",
  "functionName": "loadFromMirror",
  "functionId": "loadFromMirror___newMirrorPath-Path__oldMirrorPath-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
  "functionStartLine": 112,
  "functionEndLine": 124,
  "numCommitsSeen": 15,
  "timeTaken": 2597,
  "changeHistory": [
    "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "755dda8dd8bb23864abc752bad506f223fcac010"
  ],
  "changeHistoryShort": {
    "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0": "Ymultichange(Ymovefromfile,Ybodychange)",
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "755dda8dd8bb23864abc752bad506f223fcac010": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,13 @@\n   protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n       throws IOException {\n-    // If mirror.new exists, read from mirror.new,\n-    FSDataInputStream is \u003d null;\n-    try {\n-      is \u003d fs.open(newMirrorPath);\n-    } catch (FileNotFoundException e) {\n-      try {\n-        is \u003d fs.open(oldMirrorPath);\n-      } catch (FileNotFoundException ignored) {\n-\n+    // If mirror.new exists, read from mirror.new\n+    Path mirrorToRead \u003d fs.exists(newMirrorPath) ?\n+        newMirrorPath :\n+        fs.exists(oldMirrorPath) ? oldMirrorPath : null;\n+    if (mirrorToRead !\u003d null) {\n+      try (FSDataInputStream is \u003d fs.open(mirrorToRead)) {\n+        StoreOp op \u003d FSStoreOpHandler.getMirrorOp(storeType);\n+        op.recover(is, manager);\n       }\n     }\n-    if (null !\u003d is) {\n-      List\u003cNodeLabel\u003e labels \u003d new AddToClusterNodeLabelsRequestPBImpl(\n-          AddToClusterNodeLabelsRequestProto.parseDelimitedFrom(is))\n-              .getNodeLabels();\n-      mgr.addToCluserNodeLabels(labels);\n-\n-      if (mgr.isCentralizedConfiguration()) {\n-        // Only load node to labels mapping while using centralized configuration\n-        Map\u003cNodeId, Set\u003cString\u003e\u003e nodeToLabels \u003d\n-            new ReplaceLabelsOnNodeRequestPBImpl(\n-                ReplaceLabelsOnNodeRequestProto.parseDelimitedFrom(is))\n-                  .getNodeToLabels();\n-        mgr.replaceLabelsOnNode(nodeToLabels);\n-      }\n-      is.close();\n-    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n      throws IOException {\n    // If mirror.new exists, read from mirror.new\n    Path mirrorToRead \u003d fs.exists(newMirrorPath) ?\n        newMirrorPath :\n        fs.exists(oldMirrorPath) ? oldMirrorPath : null;\n    if (mirrorToRead !\u003d null) {\n      try (FSDataInputStream is \u003d fs.open(mirrorToRead)) {\n        StoreOp op \u003d FSStoreOpHandler.getMirrorOp(storeType);\n        op.recover(is, manager);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
            "oldMethodName": "loadFromMirror",
            "newMethodName": "loadFromMirror"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,13 @@\n   protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n       throws IOException {\n-    // If mirror.new exists, read from mirror.new,\n-    FSDataInputStream is \u003d null;\n-    try {\n-      is \u003d fs.open(newMirrorPath);\n-    } catch (FileNotFoundException e) {\n-      try {\n-        is \u003d fs.open(oldMirrorPath);\n-      } catch (FileNotFoundException ignored) {\n-\n+    // If mirror.new exists, read from mirror.new\n+    Path mirrorToRead \u003d fs.exists(newMirrorPath) ?\n+        newMirrorPath :\n+        fs.exists(oldMirrorPath) ? oldMirrorPath : null;\n+    if (mirrorToRead !\u003d null) {\n+      try (FSDataInputStream is \u003d fs.open(mirrorToRead)) {\n+        StoreOp op \u003d FSStoreOpHandler.getMirrorOp(storeType);\n+        op.recover(is, manager);\n       }\n     }\n-    if (null !\u003d is) {\n-      List\u003cNodeLabel\u003e labels \u003d new AddToClusterNodeLabelsRequestPBImpl(\n-          AddToClusterNodeLabelsRequestProto.parseDelimitedFrom(is))\n-              .getNodeLabels();\n-      mgr.addToCluserNodeLabels(labels);\n-\n-      if (mgr.isCentralizedConfiguration()) {\n-        // Only load node to labels mapping while using centralized configuration\n-        Map\u003cNodeId, Set\u003cString\u003e\u003e nodeToLabels \u003d\n-            new ReplaceLabelsOnNodeRequestPBImpl(\n-                ReplaceLabelsOnNodeRequestProto.parseDelimitedFrom(is))\n-                  .getNodeToLabels();\n-        mgr.replaceLabelsOnNode(nodeToLabels);\n-      }\n-      is.close();\n-    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n      throws IOException {\n    // If mirror.new exists, read from mirror.new\n    Path mirrorToRead \u003d fs.exists(newMirrorPath) ?\n        newMirrorPath :\n        fs.exists(oldMirrorPath) ? oldMirrorPath : null;\n    if (mirrorToRead !\u003d null) {\n      try (FSDataInputStream is \u003d fs.open(mirrorToRead)) {\n        StoreOp op \u003d FSStoreOpHandler.getMirrorOp(storeType);\n        op.recover(is, manager);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "18/10/16 11:06 AM",
      "commitNameOld": "b733a6f86262522e535cebc972baecbe6a6eab50",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 28.03,
      "commitsBetweenForRepo": 275,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n       throws IOException {\n     // If mirror.new exists, read from mirror.new,\n     FSDataInputStream is \u003d null;\n-    if (fs.exists(newMirrorPath)) {\n+    try {\n       is \u003d fs.open(newMirrorPath);\n-    } else if (fs.exists(oldMirrorPath)) {\n-      is \u003d fs.open(oldMirrorPath);\n-    }\n+    } catch (FileNotFoundException e) {\n+      try {\n+        is \u003d fs.open(oldMirrorPath);\n+      } catch (FileNotFoundException ignored) {\n \n+      }\n+    }\n     if (null !\u003d is) {\n       List\u003cNodeLabel\u003e labels \u003d new AddToClusterNodeLabelsRequestPBImpl(\n           AddToClusterNodeLabelsRequestProto.parseDelimitedFrom(is))\n               .getNodeLabels();\n       mgr.addToCluserNodeLabels(labels);\n \n       if (mgr.isCentralizedConfiguration()) {\n         // Only load node to labels mapping while using centralized configuration\n         Map\u003cNodeId, Set\u003cString\u003e\u003e nodeToLabels \u003d\n             new ReplaceLabelsOnNodeRequestPBImpl(\n                 ReplaceLabelsOnNodeRequestProto.parseDelimitedFrom(is))\n                   .getNodeToLabels();\n         mgr.replaceLabelsOnNode(nodeToLabels);\n       }\n       is.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n      throws IOException {\n    // If mirror.new exists, read from mirror.new,\n    FSDataInputStream is \u003d null;\n    try {\n      is \u003d fs.open(newMirrorPath);\n    } catch (FileNotFoundException e) {\n      try {\n        is \u003d fs.open(oldMirrorPath);\n      } catch (FileNotFoundException ignored) {\n\n      }\n    }\n    if (null !\u003d is) {\n      List\u003cNodeLabel\u003e labels \u003d new AddToClusterNodeLabelsRequestPBImpl(\n          AddToClusterNodeLabelsRequestProto.parseDelimitedFrom(is))\n              .getNodeLabels();\n      mgr.addToCluserNodeLabels(labels);\n\n      if (mgr.isCentralizedConfiguration()) {\n        // Only load node to labels mapping while using centralized configuration\n        Map\u003cNodeId, Set\u003cString\u003e\u003e nodeToLabels \u003d\n            new ReplaceLabelsOnNodeRequestPBImpl(\n                ReplaceLabelsOnNodeRequestProto.parseDelimitedFrom(is))\n                  .getNodeToLabels();\n        mgr.replaceLabelsOnNode(nodeToLabels);\n      }\n      is.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java",
      "extendedDetails": {}
    },
    "755dda8dd8bb23864abc752bad506f223fcac010": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4405. Support node label store in non-appendable file system. Contributed by Wangda Tan\n",
      "commitDate": "03/12/15 5:45 PM",
      "commitName": "755dda8dd8bb23864abc752bad506f223fcac010",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,27 @@\n+  protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n+      throws IOException {\n+    // If mirror.new exists, read from mirror.new,\n+    FSDataInputStream is \u003d null;\n+    if (fs.exists(newMirrorPath)) {\n+      is \u003d fs.open(newMirrorPath);\n+    } else if (fs.exists(oldMirrorPath)) {\n+      is \u003d fs.open(oldMirrorPath);\n+    }\n+\n+    if (null !\u003d is) {\n+      List\u003cNodeLabel\u003e labels \u003d new AddToClusterNodeLabelsRequestPBImpl(\n+          AddToClusterNodeLabelsRequestProto.parseDelimitedFrom(is))\n+              .getNodeLabels();\n+      mgr.addToCluserNodeLabels(labels);\n+\n+      if (mgr.isCentralizedConfiguration()) {\n+        // Only load node to labels mapping while using centralized configuration\n+        Map\u003cNodeId, Set\u003cString\u003e\u003e nodeToLabels \u003d\n+            new ReplaceLabelsOnNodeRequestPBImpl(\n+                ReplaceLabelsOnNodeRequestProto.parseDelimitedFrom(is))\n+                  .getNodeToLabels();\n+        mgr.replaceLabelsOnNode(nodeToLabels);\n+      }\n+      is.close();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void loadFromMirror(Path newMirrorPath, Path oldMirrorPath)\n      throws IOException {\n    // If mirror.new exists, read from mirror.new,\n    FSDataInputStream is \u003d null;\n    if (fs.exists(newMirrorPath)) {\n      is \u003d fs.open(newMirrorPath);\n    } else if (fs.exists(oldMirrorPath)) {\n      is \u003d fs.open(oldMirrorPath);\n    }\n\n    if (null !\u003d is) {\n      List\u003cNodeLabel\u003e labels \u003d new AddToClusterNodeLabelsRequestPBImpl(\n          AddToClusterNodeLabelsRequestProto.parseDelimitedFrom(is))\n              .getNodeLabels();\n      mgr.addToCluserNodeLabels(labels);\n\n      if (mgr.isCentralizedConfiguration()) {\n        // Only load node to labels mapping while using centralized configuration\n        Map\u003cNodeId, Set\u003cString\u003e\u003e nodeToLabels \u003d\n            new ReplaceLabelsOnNodeRequestPBImpl(\n                ReplaceLabelsOnNodeRequestProto.parseDelimitedFrom(is))\n                  .getNodeToLabels();\n        mgr.replaceLabelsOnNode(nodeToLabels);\n      }\n      is.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java"
    }
  }
}