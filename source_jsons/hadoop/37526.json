{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceManager.java",
  "functionName": "transitionToStandby",
  "functionId": "transitionToStandby___initialize-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
  "functionStartLine": 1360,
  "functionEndLine": 1376,
  "numCommitsSeen": 209,
  "timeTaken": 4900,
  "changeHistory": [
    "3ae716fa696b87e849dae40225dc59fb5ed114cb",
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b",
    "6608b75829992e84d265dec84b6cb52f041b454a",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456"
  ],
  "changeHistoryShort": {
    "3ae716fa696b87e849dae40225dc59fb5ed114cb": "Ybodychange",
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b": "Ybodychange",
    "6608b75829992e84d265dec84b6cb52f041b454a": "Ybodychange",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": "Ymultichange(Ymovefromfile,Ybodychange)",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ymultichange(Ymovefromfile,Ybodychange)",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": "Ymodifierchange",
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ae716fa696b87e849dae40225dc59fb5ed114cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3999. RM hangs on draing events. Contributed by Jian He\n",
      "commitDate": "11/08/15 6:25 PM",
      "commitName": "3ae716fa696b87e849dae40225dc59fb5ed114cb",
      "commitAuthor": "Xuan",
      "commitDateOld": "06/08/15 6:49 AM",
      "commitNameOld": "cfee02b3bdd1117370200c9d8ce216676cff8888",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n     if (rmContext.getHAServiceState() \u003d\u003d\n         HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n     LOG.info(\"Transitioning to standby state\");\n-    if (rmContext.getHAServiceState() \u003d\u003d\n-        HAServiceProtocol.HAServiceState.ACTIVE) {\n+    HAServiceState state \u003d rmContext.getHAServiceState();\n+    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n+    if (state \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n       stopActiveServices();\n       reinitialize(initialize);\n     }\n-    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n     LOG.info(\"Transitioned to standby state\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby state\");\n    HAServiceState state \u003d rmContext.getHAServiceState();\n    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n    if (state \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n      stopActiveServices();\n      reinitialize(initialize);\n    }\n    LOG.info(\"Transitioned to standby state\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2865. Fixed RM to always create a new RMContext when transtions from StandBy to Active. Contributed by Rohith Sharmaks\n",
      "commitDate": "19/11/14 7:48 PM",
      "commitName": "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b",
      "commitAuthor": "Jian He",
      "commitDateOld": "07/11/14 7:43 PM",
      "commitNameOld": "df36edf751202db00d8f43103d7120ec56d70a04",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 12.0,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,17 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n     if (rmContext.getHAServiceState() \u003d\u003d\n         HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n     LOG.info(\"Transitioning to standby state\");\n     if (rmContext.getHAServiceState() \u003d\u003d\n         HAServiceProtocol.HAServiceState.ACTIVE) {\n       stopActiveServices();\n-      if (initialize) {\n-        resetDispatcher();\n-        createAndInitActiveServices();\n-      }\n+      reinitialize(initialize);\n     }\n     rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n     LOG.info(\"Transitioned to standby state\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby state\");\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.ACTIVE) {\n      stopActiveServices();\n      reinitialize(initialize);\n    }\n    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n    LOG.info(\"Transitioned to standby state\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "6608b75829992e84d265dec84b6cb52f041b454a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1574. RMDispatcher should be reset on transition to standby. (Xuan Gong via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557248 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 12:15 PM",
      "commitName": "6608b75829992e84d265dec84b6cb52f041b454a",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "07/01/14 2:16 PM",
      "commitNameOld": "4931545f76f6c76e80e65c3bf6773e1983248044",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.92,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n     if (rmContext.getHAServiceState() \u003d\u003d\n         HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n     LOG.info(\"Transitioning to standby state\");\n     if (rmContext.getHAServiceState() \u003d\u003d\n         HAServiceProtocol.HAServiceState.ACTIVE) {\n       stopActiveServices();\n       if (initialize) {\n+        resetDispatcher();\n         createAndInitActiveServices();\n       }\n     }\n     rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n     LOG.info(\"Transitioned to standby state\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby state\");\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.ACTIVE) {\n      stopActiveServices();\n      if (initialize) {\n        resetDispatcher();\n        createAndInitActiveServices();\n      }\n    }\n    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n    LOG.info(\"Transitioned to standby state\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 7:13 AM",
      "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/12/13 7:13 AM",
          "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "11/12/13 12:51 AM",
          "commitNameOld": "327a995561270bc01c024e38ddd1063c42ff2e3c",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n-    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n+    if (rmContext.getHAServiceState() \u003d\u003d\n+        HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n-    LOG.info(\"Transitioning to standby\");\n-    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n-      rm.stopActiveServices();\n+    LOG.info(\"Transitioning to standby state\");\n+    if (rmContext.getHAServiceState() \u003d\u003d\n+        HAServiceProtocol.HAServiceState.ACTIVE) {\n+      stopActiveServices();\n       if (initialize) {\n-        rm.createAndInitActiveServices();\n+        createAndInitActiveServices();\n       }\n     }\n-    haState \u003d HAServiceProtocol.HAServiceState.STANDBY;\n-    LOG.info(\"Transitioned to standby\");\n+    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n+    LOG.info(\"Transitioned to standby state\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby state\");\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.ACTIVE) {\n      stopActiveServices();\n      if (initialize) {\n        createAndInitActiveServices();\n      }\n    }\n    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n    LOG.info(\"Transitioned to standby state\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
            "oldMethodName": "transitionToStandby",
            "newMethodName": "transitionToStandby"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/12/13 7:13 AM",
          "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "11/12/13 12:51 AM",
          "commitNameOld": "327a995561270bc01c024e38ddd1063c42ff2e3c",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n-    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n+    if (rmContext.getHAServiceState() \u003d\u003d\n+        HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n-    LOG.info(\"Transitioning to standby\");\n-    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n-      rm.stopActiveServices();\n+    LOG.info(\"Transitioning to standby state\");\n+    if (rmContext.getHAServiceState() \u003d\u003d\n+        HAServiceProtocol.HAServiceState.ACTIVE) {\n+      stopActiveServices();\n       if (initialize) {\n-        rm.createAndInitActiveServices();\n+        createAndInitActiveServices();\n       }\n     }\n-    haState \u003d HAServiceProtocol.HAServiceState.STANDBY;\n-    LOG.info(\"Transitioned to standby\");\n+    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n+    LOG.info(\"Transitioned to standby state\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby state\");\n    if (rmContext.getHAServiceState() \u003d\u003d\n        HAServiceProtocol.HAServiceState.ACTIVE) {\n      stopActiveServices();\n      if (initialize) {\n        createAndInitActiveServices();\n      }\n    }\n    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);\n    LOG.info(\"Transitioned to standby state\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/12/13 12:18 PM",
          "commitNameOld": "38a04a3042c5af455605bd3477358893700e2a9d",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n-    if (haState \u003d\u003d HAServiceState.STANDBY) {\n+    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n     LOG.info(\"Transitioning to standby\");\n-    if (haState \u003d\u003d HAServiceState.ACTIVE) {\n+    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n       rm.stopActiveServices();\n       if (initialize) {\n         rm.createAndInitActiveServices();\n       }\n     }\n-    haState \u003d HAServiceState.STANDBY;\n+    haState \u003d HAServiceProtocol.HAServiceState.STANDBY;\n     LOG.info(\"Transitioned to standby\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby\");\n    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n      rm.stopActiveServices();\n      if (initialize) {\n        rm.createAndInitActiveServices();\n      }\n    }\n    haState \u003d HAServiceProtocol.HAServiceState.STANDBY;\n    LOG.info(\"Transitioned to standby\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
            "oldMethodName": "transitionToStandby",
            "newMethodName": "transitionToStandby"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/12/13 12:18 PM",
          "commitNameOld": "38a04a3042c5af455605bd3477358893700e2a9d",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n-    if (haState \u003d\u003d HAServiceState.STANDBY) {\n+    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n     LOG.info(\"Transitioning to standby\");\n-    if (haState \u003d\u003d HAServiceState.ACTIVE) {\n+    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n       rm.stopActiveServices();\n       if (initialize) {\n         rm.createAndInitActiveServices();\n       }\n     }\n-    haState \u003d HAServiceState.STANDBY;\n+    haState \u003d HAServiceProtocol.HAServiceState.STANDBY;\n     LOG.info(\"Transitioned to standby\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby\");\n    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE) {\n      rm.stopActiveServices();\n      if (initialize) {\n        rm.createAndInitActiveServices();\n      }\n    }\n    haState \u003d HAServiceProtocol.HAServiceState.STANDBY;\n    LOG.info(\"Transitioned to standby\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 9:53 AM",
      "commitName": "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "29/10/13 2:03 PM",
      "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 15.87,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  private synchronized void transitionToStandby(boolean initialize)\n+  synchronized void transitionToStandby(boolean initialize)\n       throws Exception {\n     if (haState \u003d\u003d HAServiceState.STANDBY) {\n       LOG.info(\"Already in standby state\");\n       return;\n     }\n \n     LOG.info(\"Transitioning to standby\");\n     if (haState \u003d\u003d HAServiceState.ACTIVE) {\n       rm.stopActiveServices();\n       if (initialize) {\n         rm.createAndInitActiveServices();\n       }\n     }\n     haState \u003d HAServiceState.STANDBY;\n     LOG.info(\"Transitioned to standby\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (haState \u003d\u003d HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby\");\n    if (haState \u003d\u003d HAServiceState.ACTIVE) {\n      rm.stopActiveServices();\n      if (initialize) {\n        rm.createAndInitActiveServices();\n      }\n    }\n    haState \u003d HAServiceState.STANDBY;\n    LOG.info(\"Transitioned to standby\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[synchronized]"
      }
    },
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1027. Implement RMHAProtocolService (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1523750 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/09/13 11:33 AM",
      "commitName": "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,17 @@\n+  private synchronized void transitionToStandby(boolean initialize)\n+      throws Exception {\n+    if (haState \u003d\u003d HAServiceState.STANDBY) {\n+      LOG.info(\"Already in standby state\");\n+      return;\n+    }\n+\n+    LOG.info(\"Transitioning to standby\");\n+    if (haState \u003d\u003d HAServiceState.ACTIVE) {\n+      rm.stopActiveServices();\n+      if (initialize) {\n+        rm.createAndInitActiveServices();\n+      }\n+    }\n+    haState \u003d HAServiceState.STANDBY;\n+    LOG.info(\"Transitioned to standby\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void transitionToStandby(boolean initialize)\n      throws Exception {\n    if (haState \u003d\u003d HAServiceState.STANDBY) {\n      LOG.info(\"Already in standby state\");\n      return;\n    }\n\n    LOG.info(\"Transitioning to standby\");\n    if (haState \u003d\u003d HAServiceState.ACTIVE) {\n      rm.stopActiveServices();\n      if (initialize) {\n        rm.createAndInitActiveServices();\n      }\n    }\n    haState \u003d HAServiceState.STANDBY;\n    LOG.info(\"Transitioned to standby\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java"
    }
  }
}