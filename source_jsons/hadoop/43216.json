{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "checkPermissions",
  "functionId": "checkPermissions___dependencyLibTarGzip-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1689,
  "functionEndLine": 1719,
  "numCommitsSeen": 53,
  "timeTaken": 1037,
  "changeHistory": [
    "24eeea8b18749e02ea05b03eb18e3cf0455077c5"
  ],
  "changeHistoryShort": {
    "24eeea8b18749e02ea05b03eb18e3cf0455077c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "24eeea8b18749e02ea05b03eb18e3cf0455077c5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7799. Improved YARN service jar file handling.\n           Contributed by Billie Rinaldi\n",
      "commitDate": "01/05/18 1:46 PM",
      "commitName": "24eeea8b18749e02ea05b03eb18e3cf0455077c5",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,31 @@\n+  private boolean checkPermissions(Path dependencyLibTarGzip) throws\n+      IOException {\n+    AccessControlList yarnAdminAcl \u003d new AccessControlList(getConfig().get(\n+        YarnConfiguration.YARN_ADMIN_ACL,\n+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    AccessControlList dfsAdminAcl \u003d new AccessControlList(\n+        getConfig().get(DFSConfigKeys.DFS_ADMIN, \" \"));\n+    UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n+    if (!yarnAdminAcl.isUserAllowed(ugi) \u0026\u0026 !dfsAdminAcl.isUserAllowed(ugi)) {\n+      LOG.error(\"User must be on the {} or {} list to have permission to \" +\n+          \"upload AM dependency tarball\", YarnConfiguration.YARN_ADMIN_ACL,\n+          DFSConfigKeys.DFS_ADMIN);\n+      return false;\n+    }\n+\n+    Path parent \u003d dependencyLibTarGzip.getParent();\n+    while (parent !\u003d null) {\n+      if (fs.getFileSystem().exists(parent)) {\n+        FsPermission perm \u003d fs.getFileSystem().getFileStatus(parent)\n+            .getPermission();\n+        if (!perm.getOtherAction().implies(FsAction.READ_EXECUTE)) {\n+          LOG.error(\"Parent directory {} of {} tarball location {} does not \" +\n+              \"have world read/execute permission\", parent, YarnServiceConf\n+              .DEPENDENCY_TARBALL_PATH, dependencyLibTarGzip);\n+          return false;\n+        }\n+      }\n+      parent \u003d parent.getParent();\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkPermissions(Path dependencyLibTarGzip) throws\n      IOException {\n    AccessControlList yarnAdminAcl \u003d new AccessControlList(getConfig().get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    AccessControlList dfsAdminAcl \u003d new AccessControlList(\n        getConfig().get(DFSConfigKeys.DFS_ADMIN, \" \"));\n    UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n    if (!yarnAdminAcl.isUserAllowed(ugi) \u0026\u0026 !dfsAdminAcl.isUserAllowed(ugi)) {\n      LOG.error(\"User must be on the {} or {} list to have permission to \" +\n          \"upload AM dependency tarball\", YarnConfiguration.YARN_ADMIN_ACL,\n          DFSConfigKeys.DFS_ADMIN);\n      return false;\n    }\n\n    Path parent \u003d dependencyLibTarGzip.getParent();\n    while (parent !\u003d null) {\n      if (fs.getFileSystem().exists(parent)) {\n        FsPermission perm \u003d fs.getFileSystem().getFileStatus(parent)\n            .getPermission();\n        if (!perm.getOtherAction().implies(FsAction.READ_EXECUTE)) {\n          LOG.error(\"Parent directory {} of {} tarball location {} does not \" +\n              \"have world read/execute permission\", parent, YarnServiceConf\n              .DEPENDENCY_TARBALL_PATH, dependencyLibTarGzip);\n          return false;\n        }\n      }\n      parent \u003d parent.getParent();\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}