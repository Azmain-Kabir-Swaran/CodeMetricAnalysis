{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GzipCodec.java",
  "functionName": "write",
  "functionId": "write___buf-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/GzipCodec.java",
  "functionStartLine": 69,
  "functionEndLine": 78,
  "numCommitsSeen": 11,
  "timeTaken": 715,
  "changeHistory": [
    "796a0d3a5c661f0c3b23af9c0db2d8f3db83c322"
  ],
  "changeHistoryShort": {
    "796a0d3a5c661f0c3b23af9c0db2d8f3db83c322": "Yintroduced"
  },
  "changeHistoryDetails": {
    "796a0d3a5c661f0c3b23af9c0db2d8f3db83c322": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8522. ResetableGzipOutputStream creates invalid gzip files when finish() and resetState() are used. Contributed by Mike Percy\n",
      "commitDate": "10/11/17 5:41 PM",
      "commitName": "796a0d3a5c661f0c3b23af9c0db2d8f3db83c322",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,10 @@\n+      public synchronized void write(byte[] buf, int off, int len)\n+          throws IOException {\n+        if (reset) {\n+          def.reset();\n+          crc.reset();\n+          out.write(GZIP_HEADER);\n+          reset \u003d false;\n+        }\n+        super.write(buf, off, len);\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public synchronized void write(byte[] buf, int off, int len)\n          throws IOException {\n        if (reset) {\n          def.reset();\n          crc.reset();\n          out.write(GZIP_HEADER);\n          reset \u003d false;\n        }\n        super.write(buf, off, len);\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/GzipCodec.java"
    }
  }
}