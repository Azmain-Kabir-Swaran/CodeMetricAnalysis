{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TransferFsImage.java",
  "functionName": "downloadImageToStorage",
  "functionId": "downloadImageToStorage___fsName-URL__imageTxId-long__dstStorage-Storage__needDigest-boolean__isBootstrapStandby-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
  "functionStartLine": 110,
  "functionEndLine": 127,
  "numCommitsSeen": 154,
  "timeTaken": 5850,
  "changeHistory": [
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
    "94a1632fcb677fda6f4d812614026417f1d0a360",
    "dbd22b23c2d68b97b4da47215897906f06f978e3",
    "0f595915a388305edbb3ce928415571811d304e8",
    "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
    "045dc880e13271737b3cf316296e92fb95806663",
    "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5",
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63"
  ],
  "changeHistoryShort": {
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f": "Ymultichange(Yparameterchange,Ybodychange)",
    "94a1632fcb677fda6f4d812614026417f1d0a360": "Ybodychange",
    "dbd22b23c2d68b97b4da47215897906f06f978e3": "Ybodychange",
    "0f595915a388305edbb3ce928415571811d304e8": "Ybodychange",
    "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db": "Ymultichange(Yparameterchange,Ybodychange)",
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b": "Ymultichange(Yparameterchange,Ybodychange)",
    "045dc880e13271737b3cf316296e92fb95806663": "Yparameterchange",
    "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5": "Yparameterchange",
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8808. dfs.image.transfer.bandwidthPerSec should not apply to -bootstrapStandby. Contributed by Zhe Zhang.\n",
      "commitDate": "23/10/15 2:01 PM",
      "commitName": "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8808. dfs.image.transfer.bandwidthPerSec should not apply to -bootstrapStandby. Contributed by Zhe Zhang.\n",
          "commitDate": "23/10/15 2:01 PM",
          "commitName": "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "26/09/15 11:08 AM",
          "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 27.12,
          "commitsBetweenForRepo": 208,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n-      Storage dstStorage, boolean needDigest) throws IOException {\n+      Storage dstStorage, boolean needDigest, boolean isBootstrapStandby)\n+      throws IOException {\n     String fileid \u003d ImageServlet.getParamStringForImage(null,\n-        imageTxId, dstStorage);\n+        imageTxId, dstStorage, isBootstrapStandby);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest, boolean isBootstrapStandby)\n      throws IOException {\n    String fileid \u003d ImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage, isBootstrapStandby);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
          "extendedDetails": {
            "oldValue": "[fsName-URL, imageTxId-long, dstStorage-Storage, needDigest-boolean]",
            "newValue": "[fsName-URL, imageTxId-long, dstStorage-Storage, needDigest-boolean, isBootstrapStandby-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8808. dfs.image.transfer.bandwidthPerSec should not apply to -bootstrapStandby. Contributed by Zhe Zhang.\n",
          "commitDate": "23/10/15 2:01 PM",
          "commitName": "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "26/09/15 11:08 AM",
          "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 27.12,
          "commitsBetweenForRepo": 208,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n-      Storage dstStorage, boolean needDigest) throws IOException {\n+      Storage dstStorage, boolean needDigest, boolean isBootstrapStandby)\n+      throws IOException {\n     String fileid \u003d ImageServlet.getParamStringForImage(null,\n-        imageTxId, dstStorage);\n+        imageTxId, dstStorage, isBootstrapStandby);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest, boolean isBootstrapStandby)\n      throws IOException {\n    String fileid \u003d ImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage, isBootstrapStandby);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "94a1632fcb677fda6f4d812614026417f1d0a360": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575611 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/14 1:25 PM",
      "commitName": "94a1632fcb677fda6f4d812614026417f1d0a360",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "08/03/14 1:15 PM",
      "commitNameOld": "dbd22b23c2d68b97b4da47215897906f06f978e3",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n       Storage dstStorage, boolean needDigest) throws IOException {\n-    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n+    String fileid \u003d ImageServlet.getParamStringForImage(null,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest) throws IOException {\n    String fileid \u003d ImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {}
    },
    "dbd22b23c2d68b97b4da47215897906f06f978e3": {
      "type": "Ybodychange",
      "commitMessage": "Revert HDFS-3405 for recommit with correct renamed files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575610 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/14 1:15 PM",
      "commitName": "dbd22b23c2d68b97b4da47215897906f06f978e3",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/03/14 4:39 PM",
      "commitNameOld": "0f595915a388305edbb3ce928415571811d304e8",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n       Storage dstStorage, boolean needDigest) throws IOException {\n-    String fileid \u003d ImageServlet.getParamStringForImage(null,\n+    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest) throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {}
    },
    "0f595915a388305edbb3ce928415571811d304e8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575457 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/03/14 4:39 PM",
      "commitName": "0f595915a388305edbb3ce928415571811d304e8",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "27/02/14 5:21 PM",
      "commitNameOld": "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 7.97,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n       Storage dstStorage, boolean needDigest) throws IOException {\n-    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n+    String fileid \u003d ImageServlet.getParamStringForImage(null,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest) throws IOException {\n    String fileid \u003d ImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {}
    },
    "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6029. Secondary NN fails to checkpoint after -rollingUpgrade prepare. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1572800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/14 5:21 PM",
      "commitName": "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6029. Secondary NN fails to checkpoint after -rollingUpgrade prepare. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1572800 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/02/14 5:21 PM",
          "commitName": "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "25/02/14 1:58 PM",
          "commitNameOld": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.14,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public static MD5Hash downloadImageToStorage(URL fsName, NameNodeFile nnf,\n-      long imageTxId, Storage dstStorage, boolean needDigest)\n-      throws IOException {\n-    String fileid \u003d GetImageServlet.getParamStringForImage(nnf,\n+  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n+      Storage dstStorage, boolean needDigest) throws IOException {\n+    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest) throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
          "extendedDetails": {
            "oldValue": "[fsName-URL, nnf-NameNodeFile, imageTxId-long, dstStorage-Storage, needDigest-boolean]",
            "newValue": "[fsName-URL, imageTxId-long, dstStorage-Storage, needDigest-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6029. Secondary NN fails to checkpoint after -rollingUpgrade prepare. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1572800 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/02/14 5:21 PM",
          "commitName": "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "25/02/14 1:58 PM",
          "commitNameOld": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.14,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public static MD5Hash downloadImageToStorage(URL fsName, NameNodeFile nnf,\n-      long imageTxId, Storage dstStorage, boolean needDigest)\n-      throws IOException {\n-    String fileid \u003d GetImageServlet.getParamStringForImage(nnf,\n+  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n+      Storage dstStorage, boolean needDigest) throws IOException {\n+    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, long imageTxId,\n      Storage dstStorage, boolean needDigest) throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(null,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/14 1:58 PM",
      "commitName": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/14 1:58 PM",
          "commitName": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "06/12/13 10:01 AM",
          "commitNameOld": "045dc880e13271737b3cf316296e92fb95806663",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 81.16,
          "commitsBetweenForRepo": 552,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public static MD5Hash downloadImageToStorage(\n-      URL fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n+  public static MD5Hash downloadImageToStorage(URL fsName, NameNodeFile nnf,\n+      long imageTxId, Storage dstStorage, boolean needDigest)\n       throws IOException {\n-    String fileid \u003d GetImageServlet.getParamStringForImage(\n+    String fileid \u003d GetImageServlet.getParamStringForImage(nnf,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, NameNodeFile nnf,\n      long imageTxId, Storage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(nnf,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
          "extendedDetails": {
            "oldValue": "[fsName-URL, imageTxId-long, dstStorage-Storage, needDigest-boolean]",
            "newValue": "[fsName-URL, nnf-NameNodeFile, imageTxId-long, dstStorage-Storage, needDigest-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/14 1:58 PM",
          "commitName": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "06/12/13 10:01 AM",
          "commitNameOld": "045dc880e13271737b3cf316296e92fb95806663",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 81.16,
          "commitsBetweenForRepo": 552,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public static MD5Hash downloadImageToStorage(\n-      URL fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n+  public static MD5Hash downloadImageToStorage(URL fsName, NameNodeFile nnf,\n+      long imageTxId, Storage dstStorage, boolean needDigest)\n       throws IOException {\n-    String fileid \u003d GetImageServlet.getParamStringForImage(\n+    String fileid \u003d GetImageServlet.getParamStringForImage(nnf,\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5Hash downloadImageToStorage(URL fsName, NameNodeFile nnf,\n      long imageTxId, Storage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(nnf,\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "045dc880e13271737b3cf316296e92fb95806663": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-5312. Generate HTTP/HTTPS URL in DFSUtil#getInfoServer() based on the configured http policy. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/13 10:01 AM",
      "commitName": "045dc880e13271737b3cf316296e92fb95806663",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "25/11/13 5:16 PM",
      "commitNameOld": "d8a23834614581a292aad214dddcbcc4bbe86d27",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 10.7,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static MD5Hash downloadImageToStorage(\n-      String fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n+      URL fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n       throws IOException {\n     String fileid \u003d GetImageServlet.getParamStringForImage(\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5Hash downloadImageToStorage(\n      URL fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {
        "oldValue": "[fsName-String, imageTxId-long, dstStorage-Storage, needDigest-boolean]",
        "newValue": "[fsName-URL, imageTxId-long, dstStorage-Storage, needDigest-boolean]"
      }
    },
    "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-3190. Simple refactors in existing NN code to assist QuorumJournalManager extension. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1356525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/12 4:59 PM",
      "commitName": "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/12 10:00 PM",
      "commitNameOld": "8879653ab44efcca36e073a383b2e5bb56da88fd",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 20.79,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static MD5Hash downloadImageToStorage(\n-      String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n+      String fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n       throws IOException {\n     String fileid \u003d GetImageServlet.getParamStringForImage(\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5Hash downloadImageToStorage(\n      String fsName, long imageTxId, Storage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {
        "oldValue": "[fsName-String, imageTxId-long, dstStorage-NNStorage, needDigest-boolean]",
        "newValue": "[fsName-String, imageTxId-long, dstStorage-Storage, needDigest-boolean]"
      }
    },
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-2731. Add command to bootstrap the Standby Node\u0027s name directories from the Active NameNode. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299807 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/12 12:41 PM",
      "commitName": "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "04/01/12 4:22 PM",
      "commitNameOld": "5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 67.8,
      "commitsBetweenForRepo": 532,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  static MD5Hash downloadImageToStorage(\n+  public static MD5Hash downloadImageToStorage(\n       String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n       throws IOException {\n     String fileid \u003d GetImageServlet.getParamStringForImage(\n         imageTxId, dstStorage);\n     String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n     \n     List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n         NameNodeDirType.IMAGE, fileName);\n     if (dstFiles.isEmpty()) {\n       throw new IOException(\"No targets in destination storage!\");\n     }\n     \n     MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n     LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n         dstFiles.get(0).length() + \" bytes.\");\n     return hash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5Hash downloadImageToStorage(\n      String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static MD5Hash downloadImageToStorage(\n      String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static MD5Hash downloadImageToStorage(\n      String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  static MD5Hash downloadImageToStorage(\n+      String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n+      throws IOException {\n+    String fileid \u003d GetImageServlet.getParamStringForImage(\n+        imageTxId, dstStorage);\n+    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n+    \n+    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n+        NameNodeDirType.IMAGE, fileName);\n+    if (dstFiles.isEmpty()) {\n+      throw new IOException(\"No targets in destination storage!\");\n+    }\n+    \n+    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n+    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n+        dstFiles.get(0).length() + \" bytes.\");\n+    return hash;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static MD5Hash downloadImageToStorage(\n      String fsName, long imageTxId, NNStorage dstStorage, boolean needDigest)\n      throws IOException {\n    String fileid \u003d GetImageServlet.getParamStringForImage(\n        imageTxId, dstStorage);\n    String fileName \u003d NNStorage.getCheckpointImageFileName(imageTxId);\n    \n    List\u003cFile\u003e dstFiles \u003d dstStorage.getFiles(\n        NameNodeDirType.IMAGE, fileName);\n    if (dstFiles.isEmpty()) {\n      throw new IOException(\"No targets in destination storage!\");\n    }\n    \n    MD5Hash hash \u003d getFileClient(fsName, fileid, dstFiles, dstStorage, needDigest);\n    LOG.info(\"Downloaded file \" + dstFiles.get(0).getName() + \" size \" +\n        dstFiles.get(0).length() + \" bytes.\");\n    return hash;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/TransferFsImage.java"
    }
  }
}