{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineV2ClientImpl.java",
  "functionName": "setTimelineCollectorInfo",
  "functionId": "setTimelineCollectorInfo___collectorInfo-CollectorInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
  "functionStartLine": 175,
  "functionEndLine": 194,
  "numCommitsSeen": 11,
  "timeTaken": 1051,
  "changeHistory": [
    "08f40bcc7f4174857bb1fc7c8eb1108d5caaafb3"
  ],
  "changeHistoryShort": {
    "08f40bcc7f4174857bb1fc7c8eb1108d5caaafb3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "08f40bcc7f4174857bb1fc7c8eb1108d5caaafb3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6838. [ATSv2 Security] Add timeline delegation token received in allocate response to UGI. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "08f40bcc7f4174857bb1fc7c8eb1108d5caaafb3",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  public void setTimelineCollectorInfo(CollectorInfo collectorInfo) {\n+    if (collectorInfo \u003d\u003d null) {\n+      LOG.warn(\"Not setting collector info as it is null.\");\n+      return;\n+    }\n+    // First update the token so that it is available when collector address is\n+    // used.\n+    if (collectorInfo.getCollectorToken() !\u003d null) {\n+      // Use collector address to update token service if its not available.\n+      setTimelineDelegationToken(\n+          collectorInfo.getCollectorToken(), collectorInfo.getCollectorAddr());\n+    }\n+    // Update timeline service address.\n+    if (collectorInfo.getCollectorAddr() !\u003d null \u0026\u0026\n+        !collectorInfo.getCollectorAddr().isEmpty() \u0026\u0026\n+        !collectorInfo.getCollectorAddr().equals(timelineServiceAddress)) {\n+      this.timelineServiceAddress \u003d collectorInfo.getCollectorAddr();\n+      LOG.info(\"Updated timeline service address to \" + timelineServiceAddress);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setTimelineCollectorInfo(CollectorInfo collectorInfo) {\n    if (collectorInfo \u003d\u003d null) {\n      LOG.warn(\"Not setting collector info as it is null.\");\n      return;\n    }\n    // First update the token so that it is available when collector address is\n    // used.\n    if (collectorInfo.getCollectorToken() !\u003d null) {\n      // Use collector address to update token service if its not available.\n      setTimelineDelegationToken(\n          collectorInfo.getCollectorToken(), collectorInfo.getCollectorAddr());\n    }\n    // Update timeline service address.\n    if (collectorInfo.getCollectorAddr() !\u003d null \u0026\u0026\n        !collectorInfo.getCollectorAddr().isEmpty() \u0026\u0026\n        !collectorInfo.getCollectorAddr().equals(timelineServiceAddress)) {\n      this.timelineServiceAddress \u003d collectorInfo.getCollectorAddr();\n      LOG.info(\"Updated timeline service address to \" + timelineServiceAddress);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java"
    }
  }
}