{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerVolumePublisher.java",
  "functionName": "unpublishVolume",
  "functionId": "unpublishVolume___volume-VolumeMetaData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/volume/csi/ContainerVolumePublisher.java",
  "functionStartLine": 178,
  "functionEndLine": 206,
  "numCommitsSeen": 3,
  "timeTaken": 1201,
  "changeHistory": [
    "f4906ac01960c78ff0c91797eaa4b36d80f6826d"
  ],
  "changeHistoryShort": {
    "f4906ac01960c78ff0c91797eaa4b36d80f6826d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f4906ac01960c78ff0c91797eaa4b36d80f6826d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9038. [CSI] Add ability to publish/unpublish volumes on node managers. Contributed by Weiwei Yang.\n",
      "commitDate": "03/01/19 10:40 PM",
      "commitName": "f4906ac01960c78ff0c91797eaa4b36d80f6826d",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,29 @@\n+  private void unpublishVolume(VolumeMetaData volume)\n+      throws YarnException, IOException {\n+    CsiAdaptorProtocol csiClient \u003d\n+        runtime.getCsiClients().get(volume.getDriverName());\n+    if (csiClient \u003d\u003d null) {\n+      throw new YarnException(\n+          \"No csi-adaptor is found that can talk\"\n+              + \" to csi-driver \" + volume.getDriverName());\n+    }\n+\n+    // When container is launched, the container work dir is memorized,\n+    // and that is also the dir we mount the volume to.\n+    File localMount \u003d getLocalVolumeMountPath(container.getCsiVolumesRootDir(),\n+        volume.getVolumeId().toString());\n+    if (!localMount.exists()) {\n+      LOG.info(\"Local mount {} no longer exist, skipping cleaning\"\n+          + \" up the volume\", localMount.getAbsolutePath());\n+      return;\n+    }\n+    NodeUnpublishVolumeRequest unpublishRequest \u003d\n+        NodeUnpublishVolumeRequest.newInstance(\n+            volume.getVolumeId().getId(), // volume id\n+            localMount.getAbsolutePath());  // target path\n+\n+    // un-publish volume from node\n+    LOG.info(\"Un-publish volume {}, request {}\",\n+        volume.getVolumeId().toString(), unpublishRequest.toString());\n+    csiClient.nodeUnpublishVolume(unpublishRequest);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void unpublishVolume(VolumeMetaData volume)\n      throws YarnException, IOException {\n    CsiAdaptorProtocol csiClient \u003d\n        runtime.getCsiClients().get(volume.getDriverName());\n    if (csiClient \u003d\u003d null) {\n      throw new YarnException(\n          \"No csi-adaptor is found that can talk\"\n              + \" to csi-driver \" + volume.getDriverName());\n    }\n\n    // When container is launched, the container work dir is memorized,\n    // and that is also the dir we mount the volume to.\n    File localMount \u003d getLocalVolumeMountPath(container.getCsiVolumesRootDir(),\n        volume.getVolumeId().toString());\n    if (!localMount.exists()) {\n      LOG.info(\"Local mount {} no longer exist, skipping cleaning\"\n          + \" up the volume\", localMount.getAbsolutePath());\n      return;\n    }\n    NodeUnpublishVolumeRequest unpublishRequest \u003d\n        NodeUnpublishVolumeRequest.newInstance(\n            volume.getVolumeId().getId(), // volume id\n            localMount.getAbsolutePath());  // target path\n\n    // un-publish volume from node\n    LOG.info(\"Un-publish volume {}, request {}\",\n        volume.getVolumeId().toString(), unpublishRequest.toString());\n    csiClient.nodeUnpublishVolume(unpublishRequest);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/volume/csi/ContainerVolumePublisher.java"
    }
  }
}