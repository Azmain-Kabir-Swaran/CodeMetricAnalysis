{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripeReader.java",
  "functionName": "readToBuffer",
  "functionId": "readToBuffer___blockReader-BlockReader__currentNode-DatanodeInfo__strategy-ByteBufferStrategy__currentBlock-ExtendedBlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/StripeReader.java",
  "functionStartLine": 233,
  "functionEndLine": 264,
  "numCommitsSeen": 25,
  "timeTaken": 2571,
  "changeHistory": [
    "382967be51052d59e31d8d05713645b8d3c2325b",
    "734d54c1a8950446e68098f62d8964e02ecc2890",
    "793447f79924c97c2b562d5e41fa85adf19673fe",
    "8808779db351fe444388d4acb3094766b5980718"
  ],
  "changeHistoryShort": {
    "382967be51052d59e31d8d05713645b8d3c2325b": "Ybodychange",
    "734d54c1a8950446e68098f62d8964e02ecc2890": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "793447f79924c97c2b562d5e41fa85adf19673fe": "Ybodychange",
    "8808779db351fe444388d4acb3094766b5980718": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "382967be51052d59e31d8d05713645b8d3c2325b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14373. EC : Decoding is failing when block group last incomplete cell fall in to AlignedStripe. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "07/10/19 11:44 AM",
      "commitName": "382967be51052d59e31d8d05713645b8d3c2325b",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "08/10/18 8:31 PM",
      "commitNameOld": "08bb6c49a5aec32b7d9f29238560f947420405d6",
      "commitAuthorOld": "Hrishikesh Gadre",
      "daysBetweenCommits": 363.63,
      "commitsBetweenForRepo": 2830,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,32 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n       ExtendedBlock currentBlock) throws IOException {\n     final int targetLength \u003d strategy.getTargetLength();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n         int ret \u003d strategy.readFromBlock(blockReader);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n+      //Clear buffer to make next decode success\n+      strategy.getReadBuffer().clear();\n       // we want to remember which block replicas we have tried\n       corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n           + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n           + currentNode, e);\n+      //Clear buffer to make next decode success\n+      strategy.getReadBuffer().clear();\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock) throws IOException {\n    final int targetLength \u003d strategy.getTargetLength();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.readFromBlock(blockReader);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      //Clear buffer to make next decode success\n      strategy.getReadBuffer().clear();\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n          + currentNode, e);\n      //Clear buffer to make next decode success\n      strategy.getReadBuffer().clear();\n      throw e;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/StripeReader.java",
      "extendedDetails": {}
    },
    "734d54c1a8950446e68098f62d8964e02ecc2890": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-10861. Refactor StripeReaders and use ECChunk version decode API. Contributed by Sammi Chen\n",
      "commitDate": "21/09/16 6:34 AM",
      "commitName": "734d54c1a8950446e68098f62d8964e02ecc2890",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-10861. Refactor StripeReaders and use ECChunk version decode API. Contributed by Sammi Chen\n",
          "commitDate": "21/09/16 6:34 AM",
          "commitName": "734d54c1a8950446e68098f62d8964e02ecc2890",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/09/16 12:03 AM",
          "commitNameOld": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 1.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n-      ExtendedBlock currentBlock,\n-      CorruptedBlocks corruptedBlocks)\n-      throws IOException {\n+      ExtendedBlock currentBlock) throws IOException {\n     final int targetLength \u003d strategy.getTargetLength();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n         int ret \u003d strategy.readFromBlock(blockReader);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n       // we want to remember which block replicas we have tried\n       corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n-          + currentBlock + \" of \" + src + \" from \"\n+          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n           + currentNode, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock) throws IOException {\n    final int targetLength \u003d strategy.getTargetLength();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.readFromBlock(blockReader);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n          + currentNode, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/StripeReader.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedInputStream.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/StripeReader.java",
            "oldMethodName": "readToBuffer",
            "newMethodName": "readToBuffer"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10861. Refactor StripeReaders and use ECChunk version decode API. Contributed by Sammi Chen\n",
          "commitDate": "21/09/16 6:34 AM",
          "commitName": "734d54c1a8950446e68098f62d8964e02ecc2890",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/09/16 12:03 AM",
          "commitNameOld": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 1.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n-      ExtendedBlock currentBlock,\n-      CorruptedBlocks corruptedBlocks)\n-      throws IOException {\n+      ExtendedBlock currentBlock) throws IOException {\n     final int targetLength \u003d strategy.getTargetLength();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n         int ret \u003d strategy.readFromBlock(blockReader);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n       // we want to remember which block replicas we have tried\n       corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n-          + currentBlock + \" of \" + src + \" from \"\n+          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n           + currentNode, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock) throws IOException {\n    final int targetLength \u003d strategy.getTargetLength();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.readFromBlock(blockReader);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n          + currentNode, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/StripeReader.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10861. Refactor StripeReaders and use ECChunk version decode API. Contributed by Sammi Chen\n",
          "commitDate": "21/09/16 6:34 AM",
          "commitName": "734d54c1a8950446e68098f62d8964e02ecc2890",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/09/16 12:03 AM",
          "commitNameOld": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 1.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n-      ExtendedBlock currentBlock,\n-      CorruptedBlocks corruptedBlocks)\n-      throws IOException {\n+      ExtendedBlock currentBlock) throws IOException {\n     final int targetLength \u003d strategy.getTargetLength();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n         int ret \u003d strategy.readFromBlock(blockReader);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n       // we want to remember which block replicas we have tried\n       corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n-          + currentBlock + \" of \" + src + \" from \"\n+          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n           + currentNode, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock) throws IOException {\n    final int targetLength \u003d strategy.getTargetLength();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.readFromBlock(blockReader);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + dfsStripedInputStream.getSrc() + \" from \"\n          + currentNode, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/StripeReader.java",
          "extendedDetails": {
            "oldValue": "[blockReader-BlockReader, currentNode-DatanodeInfo, strategy-ByteBufferStrategy, currentBlock-ExtendedBlock, corruptedBlocks-CorruptedBlocks]",
            "newValue": "[blockReader-BlockReader, currentNode-DatanodeInfo, strategy-ByteBufferStrategy, currentBlock-ExtendedBlock]"
          }
        }
      ]
    },
    "793447f79924c97c2b562d5e41fa85adf19673fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8905. Refactor DFSInputStream#ReaderStrategy. Contributed by Kai Zheng and Sammi Chen\n",
      "commitDate": "24/08/16 6:57 AM",
      "commitName": "793447f79924c97c2b562d5e41fa85adf19673fe",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "12/08/16 10:52 PM",
      "commitNameOld": "b5af9be72c72734d668f817c99d889031922a951",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 11.34,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n       ExtendedBlock currentBlock,\n       CorruptedBlocks corruptedBlocks)\n       throws IOException {\n-    final int targetLength \u003d strategy.buf.remaining();\n+    final int targetLength \u003d strategy.getTargetLength();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n-        int ret \u003d strategy.doRead(blockReader, 0, 0);\n+        int ret \u003d strategy.readFromBlock(blockReader);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n       // we want to remember which block replicas we have tried\n       corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n           + currentBlock + \" of \" + src + \" from \"\n           + currentNode, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock,\n      CorruptedBlocks corruptedBlocks)\n      throws IOException {\n    final int targetLength \u003d strategy.getTargetLength();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.readFromBlock(blockReader);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + src + \" from \"\n          + currentNode, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedInputStream.java",
      "extendedDetails": {}
    },
    "8808779db351fe444388d4acb3094766b5980718": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-9734. Refactoring of checksum failure report related codes. Contributed by Kai Zheng.\n\nChange-Id: Ie69a77e3498a360959f8e213c51fb2b17c28b64a\n",
      "commitDate": "25/02/16 9:55 AM",
      "commitName": "8808779db351fe444388d4acb3094766b5980718",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9734. Refactoring of checksum failure report related codes. Contributed by Kai Zheng.\n\nChange-Id: Ie69a77e3498a360959f8e213c51fb2b17c28b64a\n",
          "commitDate": "25/02/16 9:55 AM",
          "commitName": "8808779db351fe444388d4acb3094766b5980718",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "19/02/16 7:02 PM",
          "commitNameOld": "e54cc2931262bf49682a8323da9811976218c03b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 5.62,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n       ExtendedBlock currentBlock,\n-      Map\u003cExtendedBlock, Set\u003cDatanodeInfo\u003e\u003e corruptedBlockMap)\n+      CorruptedBlocks corruptedBlocks)\n       throws IOException {\n     final int targetLength \u003d strategy.buf.remaining();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n         int ret \u003d strategy.doRead(blockReader, 0, 0);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n       // we want to remember which block replicas we have tried\n-      addIntoCorruptedBlockMap(currentBlock, currentNode,\n-          corruptedBlockMap);\n+      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n           + currentBlock + \" of \" + src + \" from \"\n           + currentNode, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock,\n      CorruptedBlocks corruptedBlocks)\n      throws IOException {\n    final int targetLength \u003d strategy.buf.remaining();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.doRead(blockReader, 0, 0);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + src + \" from \"\n          + currentNode, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedInputStream.java",
          "extendedDetails": {
            "oldValue": "[blockReader-BlockReader, currentNode-DatanodeInfo, strategy-ByteBufferStrategy, currentBlock-ExtendedBlock, corruptedBlockMap-Map\u003cExtendedBlock,Set\u003cDatanodeInfo\u003e\u003e]",
            "newValue": "[blockReader-BlockReader, currentNode-DatanodeInfo, strategy-ByteBufferStrategy, currentBlock-ExtendedBlock, corruptedBlocks-CorruptedBlocks]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9734. Refactoring of checksum failure report related codes. Contributed by Kai Zheng.\n\nChange-Id: Ie69a77e3498a360959f8e213c51fb2b17c28b64a\n",
          "commitDate": "25/02/16 9:55 AM",
          "commitName": "8808779db351fe444388d4acb3094766b5980718",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "19/02/16 7:02 PM",
          "commitNameOld": "e54cc2931262bf49682a8323da9811976218c03b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 5.62,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n   private int readToBuffer(BlockReader blockReader,\n       DatanodeInfo currentNode, ByteBufferStrategy strategy,\n       ExtendedBlock currentBlock,\n-      Map\u003cExtendedBlock, Set\u003cDatanodeInfo\u003e\u003e corruptedBlockMap)\n+      CorruptedBlocks corruptedBlocks)\n       throws IOException {\n     final int targetLength \u003d strategy.buf.remaining();\n     int length \u003d 0;\n     try {\n       while (length \u003c targetLength) {\n         int ret \u003d strategy.doRead(blockReader, 0, 0);\n         if (ret \u003c 0) {\n           throw new IOException(\"Unexpected EOS from the reader\");\n         }\n         length +\u003d ret;\n       }\n       return length;\n     } catch (ChecksumException ce) {\n       DFSClient.LOG.warn(\"Found Checksum error for \"\n           + currentBlock + \" from \" + currentNode\n           + \" at \" + ce.getPos());\n       // we want to remember which block replicas we have tried\n-      addIntoCorruptedBlockMap(currentBlock, currentNode,\n-          corruptedBlockMap);\n+      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n       throw ce;\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception while reading from \"\n           + currentBlock + \" of \" + src + \" from \"\n           + currentNode, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int readToBuffer(BlockReader blockReader,\n      DatanodeInfo currentNode, ByteBufferStrategy strategy,\n      ExtendedBlock currentBlock,\n      CorruptedBlocks corruptedBlocks)\n      throws IOException {\n    final int targetLength \u003d strategy.buf.remaining();\n    int length \u003d 0;\n    try {\n      while (length \u003c targetLength) {\n        int ret \u003d strategy.doRead(blockReader, 0, 0);\n        if (ret \u003c 0) {\n          throw new IOException(\"Unexpected EOS from the reader\");\n        }\n        length +\u003d ret;\n      }\n      return length;\n    } catch (ChecksumException ce) {\n      DFSClient.LOG.warn(\"Found Checksum error for \"\n          + currentBlock + \" from \" + currentNode\n          + \" at \" + ce.getPos());\n      // we want to remember which block replicas we have tried\n      corruptedBlocks.addCorruptedBlock(currentBlock, currentNode);\n      throw ce;\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception while reading from \"\n          + currentBlock + \" of \" + src + \" from \"\n          + currentNode, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedInputStream.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}