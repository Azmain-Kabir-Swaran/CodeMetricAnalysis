{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "setStoragePolicy",
  "functionId": "setStoragePolicy___src-String__policyName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 2399,
  "functionEndLine": 2423,
  "numCommitsSeen": 1359,
  "timeTaken": 31907,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "a700803a18fb957d2799001a2ce1dcb70f75c080",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "9b90e52f1ec22c18cd535af2a569defcef65b093",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "3fa33b5c2c289ceaced30c6c5451f3569110459d",
    "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "a700803a18fb957d2799001a2ce1dcb70f75c080": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "9b90e52f1ec22c18cd535af2a569defcef65b093": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "3fa33b5c2c289ceaced30c6c5451f3569110459d": "Ybodychange",
    "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7": "Ymultichange(Ybodychange,Yparametermetachange)"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     final String operationName \u003d \"setStoragePolicy\";\n     checkOperation(OperationCategory.WRITE);\n     checkStoragePolicyEnabled(\"set storage policy\", true);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n-    FileStatus auditStat;\n+    FileStatus auditStat \u003d null;\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n         auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n             policyName);\n       } finally {\n-        writeUnlock(operationName);\n+        writeUnlock(operationName,\n+            getLockReportInfoSupplier(src, null, auditStat));\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    checkOperation(OperationCategory.WRITE);\n    checkStoragePolicyEnabled(\"set storage policy\", true);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    FileStatus auditStat \u003d null;\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n        auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n            policyName);\n      } finally {\n        writeUnlock(operationName,\n            getLockReportInfoSupplier(src, null, auditStat));\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a700803a18fb957d2799001a2ce1dcb70f75c080": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15154. Allow only hdfs superusers the ability to assign HDFS storage policies. Contributed by Siddharth Wagle.\n\nChange-Id: I32d6dd2837945b8fc026a759aa367c55daefe348\n",
      "commitDate": "25/03/20 10:28 AM",
      "commitName": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "24/03/20 10:26 AM",
      "commitNameOld": "ea87d6049340d1df040047aa08ce7784c03dd69e",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     final String operationName \u003d \"setStoragePolicy\";\n-    FileStatus auditStat;\n     checkOperation(OperationCategory.WRITE);\n+    checkStoragePolicyEnabled(\"set storage policy\", true);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n+    FileStatus auditStat;\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n         auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n             policyName);\n       } finally {\n         writeUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    checkOperation(OperationCategory.WRITE);\n    checkStoragePolicyEnabled(\"set storage policy\", true);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    FileStatus auditStat;\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n        auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n            policyName);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     final String operationName \u003d \"setStoragePolicy\";\n     FileStatus auditStat;\n     checkOperation(OperationCategory.WRITE);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n         auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n             policyName);\n       } finally {\n         writeUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    FileStatus auditStat;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n        auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n            policyName);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11246. FSNameSystem#logAuditEvent should be called outside the read or write locks. Contributed by He Xiaoqiao, Kuhu Shukla.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nCo-authored-by: Kuhu Shukla \u003ckshukla@apache.org\u003e\n",
      "commitDate": "29/08/19 10:10 AM",
      "commitName": "f600fbb6c4987c69292faea6b5abf022bb213ffd",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/08/19 3:26 PM",
      "commitNameOld": "dde9399b37bffb77da17c025f0b9b673d7088bc6",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     final String operationName \u003d \"setStoragePolicy\";\n     FileStatus auditStat;\n     checkOperation(OperationCategory.WRITE);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n-      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n-                                               policyName);\n+      writeLock();\n+      try {\n+        checkOperation(OperationCategory.WRITE);\n+        checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n+        auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n+            policyName);\n+      } finally {\n+        writeUnlock(operationName);\n+      }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n-    } finally {\n-      writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    FileStatus auditStat;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n        auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n            policyName);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     final String operationName \u003d \"setStoragePolicy\";\n     FileStatus auditStat;\n     checkOperation(OperationCategory.WRITE);\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n-      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n+      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n                                                policyName);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    FileStatus auditStat;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, pc, blockManager, src,\n                                               policyName);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9b90e52f1ec22c18cd535af2a569defcef65b093": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
      "commitDate": "16/05/17 9:28 AM",
      "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/05/17 11:39 AM",
      "commitNameOld": "c2a52ef9c29459ff9ef3e23b29e14912bfdb1405",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.91,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     final String operationName \u003d \"setStoragePolicy\";\n-    HdfsFileStatus auditStat;\n+    FileStatus auditStat;\n     checkOperation(OperationCategory.WRITE);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n       auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n                                                policyName);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    FileStatus auditStat;\n    checkOperation(OperationCategory.WRITE);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n                                               policyName);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n+    final String operationName \u003d \"setStoragePolicy\";\n     HdfsFileStatus auditStat;\n     checkOperation(OperationCategory.WRITE);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n       auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n                                                policyName);\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"setStoragePolicy\", src);\n+      logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n-      writeUnlock();\n+      writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n-    logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n+    logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    final String operationName \u003d \"setStoragePolicy\";\n    HdfsFileStatus auditStat;\n    checkOperation(OperationCategory.WRITE);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n                                               policyName);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "3fa33b5c2c289ceaced30c6c5451f3569110459d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9430 Remove waitForLoadingFSImage since checkNNStartup has ensured image loaded and namenode started. (Brahma Reddy Battula via mingma)\n",
      "commitDate": "04/12/15 9:47 AM",
      "commitName": "3fa33b5c2c289ceaced30c6c5451f3569110459d",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "01/12/15 4:09 PM",
      "commitNameOld": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.74,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   void setStoragePolicy(String src, String policyName) throws IOException {\n     HdfsFileStatus auditStat;\n-    waitForLoadingFSImage();\n     checkOperation(OperationCategory.WRITE);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n       auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n                                                policyName);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"setStoragePolicy\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    HdfsFileStatus auditStat;\n    checkOperation(OperationCategory.WRITE);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n      auditStat \u003d FSDirAttrOp.setStoragePolicy(dir, blockManager, src,\n                                               policyName);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"setStoragePolicy\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "15/12/14 10:40 AM",
      "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/12/14 5:04 PM",
          "commitNameOld": "fa7b9248e415c04bb555772f44fadaf8d9f34974",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 2.73,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,19 @@\n-  void setStoragePolicy(String src, final String policyName)\n-      throws IOException {\n+  void setStoragePolicy(String src, String policyName) throws IOException {\n+    HdfsFileStatus auditStat;\n+    waitForLoadingFSImage();\n+    checkOperation(OperationCategory.WRITE);\n+    writeLock();\n     try {\n-      setStoragePolicyInt(src, policyName);\n+      checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n+      auditStat \u003d FSDirAttrOp.setStoragePolicy(\n+          dir, blockManager, src, policyName);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"setStoragePolicy\", src);\n       throw e;\n+    } finally {\n+      writeUnlock();\n     }\n+    getEditLog().logSync();\n+    logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    HdfsFileStatus auditStat;\n    waitForLoadingFSImage();\n    checkOperation(OperationCategory.WRITE);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n      auditStat \u003d FSDirAttrOp.setStoragePolicy(\n          dir, blockManager, src, policyName);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"setStoragePolicy\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/12/14 5:04 PM",
          "commitNameOld": "fa7b9248e415c04bb555772f44fadaf8d9f34974",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 2.73,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,19 @@\n-  void setStoragePolicy(String src, final String policyName)\n-      throws IOException {\n+  void setStoragePolicy(String src, String policyName) throws IOException {\n+    HdfsFileStatus auditStat;\n+    waitForLoadingFSImage();\n+    checkOperation(OperationCategory.WRITE);\n+    writeLock();\n     try {\n-      setStoragePolicyInt(src, policyName);\n+      checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n+      auditStat \u003d FSDirAttrOp.setStoragePolicy(\n+          dir, blockManager, src, policyName);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"setStoragePolicy\", src);\n       throw e;\n+    } finally {\n+      writeUnlock();\n     }\n+    getEditLog().logSync();\n+    logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void setStoragePolicy(String src, String policyName) throws IOException {\n    HdfsFileStatus auditStat;\n    waitForLoadingFSImage();\n    checkOperation(OperationCategory.WRITE);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set storage policy for \" + src);\n      auditStat \u003d FSDirAttrOp.setStoragePolicy(\n          dir, blockManager, src, policyName);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"setStoragePolicy\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"setStoragePolicy\", src, null, auditStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[src-String, policyName-String(modifiers-final)]",
            "newValue": "[src-String, policyName-String]"
          }
        }
      ]
    }
  }
}