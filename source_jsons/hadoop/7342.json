{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TopMetrics.java",
  "functionName": "report",
  "functionId": "report___currTime-long__userName-String__cmd-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java",
  "functionStartLine": 141,
  "functionEndLine": 150,
  "numCommitsSeen": 14,
  "timeTaken": 4522,
  "changeHistory": [
    "17cd8d0c1786d6e3ea5fe7c90b176381db6f9c36",
    "60bfee270ed3a653c44c0bc92396167b5022df6e",
    "fa7b9248e415c04bb555772f44fadaf8d9f34974",
    "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb"
  ],
  "changeHistoryShort": {
    "17cd8d0c1786d6e3ea5fe7c90b176381db6f9c36": "Ymultichange(Yparameterchange,Ybodychange)",
    "60bfee270ed3a653c44c0bc92396167b5022df6e": "Ymultichange(Yparameterchange,Ybodychange)",
    "fa7b9248e415c04bb555772f44fadaf8d9f34974": "Ybodychange",
    "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "17cd8d0c1786d6e3ea5fe7c90b176381db6f9c36": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert \"HDFS-12502. nntop should support a category based on FilesInGetListingOps.\"\n\nThis reverts commit 60bfee270ed3a653c44c0bc92396167b5022df6e.\n",
      "commitDate": "24/10/17 3:06 PM",
      "commitName": "17cd8d0c1786d6e3ea5fe7c90b176381db6f9c36",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HDFS-12502. nntop should support a category based on FilesInGetListingOps.\"\n\nThis reverts commit 60bfee270ed3a653c44c0bc92396167b5022df6e.\n",
          "commitDate": "24/10/17 3:06 PM",
          "commitName": "17cd8d0c1786d6e3ea5fe7c90b176381db6f9c36",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "18/10/17 11:51 PM",
          "commitNameOld": "60bfee270ed3a653c44c0bc92396167b5022df6e",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 5.64,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,10 @@\n-  public void report(long currTime, String userName, String cmd, int delta) {\n+  public void report(long currTime, String userName, String cmd) {\n     LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n     userName \u003d UserGroupInformation.trimLoginMethod(userName);\n     for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n         .values()) {\n-      rollingWindowManager.recordMetric(currTime, cmd, userName, delta);\n-      // Increase the number of all RPC calls by the user, unless the report\n-      // is for the number of files in a listing operation.\n-      if (!cmd.equals(FILES_IN_GETLISTING)) {\n-        rollingWindowManager.recordMetric(currTime,\n-            TopConf.ALL_CMDS, userName, delta);\n-      }\n+      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n+      rollingWindowManager.recordMetric(currTime,\n+          TopConf.ALL_CMDS, userName, 1);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void report(long currTime, String userName, String cmd) {\n    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n    for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n        .values()) {\n      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n      rollingWindowManager.recordMetric(currTime,\n          TopConf.ALL_CMDS, userName, 1);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java",
          "extendedDetails": {
            "oldValue": "[currTime-long, userName-String, cmd-String, delta-int]",
            "newValue": "[currTime-long, userName-String, cmd-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-12502. nntop should support a category based on FilesInGetListingOps.\"\n\nThis reverts commit 60bfee270ed3a653c44c0bc92396167b5022df6e.\n",
          "commitDate": "24/10/17 3:06 PM",
          "commitName": "17cd8d0c1786d6e3ea5fe7c90b176381db6f9c36",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "18/10/17 11:51 PM",
          "commitNameOld": "60bfee270ed3a653c44c0bc92396167b5022df6e",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 5.64,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,10 @@\n-  public void report(long currTime, String userName, String cmd, int delta) {\n+  public void report(long currTime, String userName, String cmd) {\n     LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n     userName \u003d UserGroupInformation.trimLoginMethod(userName);\n     for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n         .values()) {\n-      rollingWindowManager.recordMetric(currTime, cmd, userName, delta);\n-      // Increase the number of all RPC calls by the user, unless the report\n-      // is for the number of files in a listing operation.\n-      if (!cmd.equals(FILES_IN_GETLISTING)) {\n-        rollingWindowManager.recordMetric(currTime,\n-            TopConf.ALL_CMDS, userName, delta);\n-      }\n+      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n+      rollingWindowManager.recordMetric(currTime,\n+          TopConf.ALL_CMDS, userName, 1);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void report(long currTime, String userName, String cmd) {\n    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n    for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n        .values()) {\n      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n      rollingWindowManager.recordMetric(currTime,\n          TopConf.ALL_CMDS, userName, 1);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "60bfee270ed3a653c44c0bc92396167b5022df6e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12502. nntop should support a category based on FilesInGetListingOps.\n",
      "commitDate": "18/10/17 11:51 PM",
      "commitName": "60bfee270ed3a653c44c0bc92396167b5022df6e",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12502. nntop should support a category based on FilesInGetListingOps.\n",
          "commitDate": "18/10/17 11:51 PM",
          "commitName": "60bfee270ed3a653c44c0bc92396167b5022df6e",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "11/10/16 3:55 PM",
          "commitNameOld": "61f0490a73085bbaf6639d9234277e59dc1145db",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 372.33,
          "commitsBetweenForRepo": 2400,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n-  public void report(long currTime, String userName, String cmd) {\n+  public void report(long currTime, String userName, String cmd, int delta) {\n     LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n     userName \u003d UserGroupInformation.trimLoginMethod(userName);\n     for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n         .values()) {\n-      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n-      rollingWindowManager.recordMetric(currTime,\n-          TopConf.ALL_CMDS, userName, 1);\n+      rollingWindowManager.recordMetric(currTime, cmd, userName, delta);\n+      // Increase the number of all RPC calls by the user, unless the report\n+      // is for the number of files in a listing operation.\n+      if (!cmd.equals(FILES_IN_GETLISTING)) {\n+        rollingWindowManager.recordMetric(currTime,\n+            TopConf.ALL_CMDS, userName, delta);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void report(long currTime, String userName, String cmd, int delta) {\n    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n    for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n        .values()) {\n      rollingWindowManager.recordMetric(currTime, cmd, userName, delta);\n      // Increase the number of all RPC calls by the user, unless the report\n      // is for the number of files in a listing operation.\n      if (!cmd.equals(FILES_IN_GETLISTING)) {\n        rollingWindowManager.recordMetric(currTime,\n            TopConf.ALL_CMDS, userName, delta);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java",
          "extendedDetails": {
            "oldValue": "[currTime-long, userName-String, cmd-String]",
            "newValue": "[currTime-long, userName-String, cmd-String, delta-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12502. nntop should support a category based on FilesInGetListingOps.\n",
          "commitDate": "18/10/17 11:51 PM",
          "commitName": "60bfee270ed3a653c44c0bc92396167b5022df6e",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "11/10/16 3:55 PM",
          "commitNameOld": "61f0490a73085bbaf6639d9234277e59dc1145db",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 372.33,
          "commitsBetweenForRepo": 2400,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n-  public void report(long currTime, String userName, String cmd) {\n+  public void report(long currTime, String userName, String cmd, int delta) {\n     LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n     userName \u003d UserGroupInformation.trimLoginMethod(userName);\n     for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n         .values()) {\n-      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n-      rollingWindowManager.recordMetric(currTime,\n-          TopConf.ALL_CMDS, userName, 1);\n+      rollingWindowManager.recordMetric(currTime, cmd, userName, delta);\n+      // Increase the number of all RPC calls by the user, unless the report\n+      // is for the number of files in a listing operation.\n+      if (!cmd.equals(FILES_IN_GETLISTING)) {\n+        rollingWindowManager.recordMetric(currTime,\n+            TopConf.ALL_CMDS, userName, delta);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void report(long currTime, String userName, String cmd, int delta) {\n    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n    for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n        .values()) {\n      rollingWindowManager.recordMetric(currTime, cmd, userName, delta);\n      // Increase the number of all RPC calls by the user, unless the report\n      // is for the number of files in a listing operation.\n      if (!cmd.equals(FILES_IN_GETLISTING)) {\n        rollingWindowManager.recordMetric(currTime,\n            TopConf.ALL_CMDS, userName, delta);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "fa7b9248e415c04bb555772f44fadaf8d9f34974": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7426. Change nntop JMX format to be a JSON blob.\n",
      "commitDate": "12/12/14 5:04 PM",
      "commitName": "fa7b9248e415c04bb555772f44fadaf8d9f34974",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/11/14 5:33 PM",
      "commitNameOld": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 24.98,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,10 @@\n   public void report(long currTime, String userName, String cmd) {\n     LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n     userName \u003d UserGroupInformation.trimLoginMethod(userName);\n-    try {\n-      for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n-          .values()) {\n-        rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n-        rollingWindowManager.recordMetric(currTime,\n-            TopConf.CMD_TOTAL, userName, 1);\n-      }\n-    } catch (Throwable t) {\n-      LOG.error(\"An error occurred while reflecting the event in top service, \"\n-          + \"event: (time,cmd,userName)\u003d(\" + currTime + \",\" + cmd + \",\"\n-          + userName);\n+    for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n+        .values()) {\n+      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n+      rollingWindowManager.recordMetric(currTime,\n+          TopConf.ALL_CMDS, userName, 1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void report(long currTime, String userName, String cmd) {\n    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n    for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n        .values()) {\n      rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n      rollingWindowManager.recordMetric(currTime,\n          TopConf.ALL_CMDS, userName, 1);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java",
      "extendedDetails": {}
    },
    "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6982. nntop: top­-like tool for name node users. (Maysam Yabandeh via wang)\n",
      "commitDate": "17/11/14 5:33 PM",
      "commitName": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,16 @@\n+  public void report(long currTime, String userName, String cmd) {\n+    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n+    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n+    try {\n+      for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n+          .values()) {\n+        rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n+        rollingWindowManager.recordMetric(currTime,\n+            TopConf.CMD_TOTAL, userName, 1);\n+      }\n+    } catch (Throwable t) {\n+      LOG.error(\"An error occurred while reflecting the event in top service, \"\n+          + \"event: (time,cmd,userName)\u003d(\" + currTime + \",\" + cmd + \",\"\n+          + userName);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void report(long currTime, String userName, String cmd) {\n    LOG.debug(\"a metric is reported: cmd: {} user: {}\", cmd, userName);\n    userName \u003d UserGroupInformation.trimLoginMethod(userName);\n    try {\n      for (RollingWindowManager rollingWindowManager : rollingWindowManagers\n          .values()) {\n        rollingWindowManager.recordMetric(currTime, cmd, userName, 1);\n        rollingWindowManager.recordMetric(currTime,\n            TopConf.CMD_TOTAL, userName, 1);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"An error occurred while reflecting the event in top service, \"\n          + \"event: (time,cmd,userName)\u003d(\" + currTime + \",\" + cmd + \",\"\n          + userName);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/metrics/TopMetrics.java"
    }
  }
}