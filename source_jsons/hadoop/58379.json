{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VisualizeStateMachine.java",
  "functionName": "getGraphFromClasses",
  "functionId": "getGraphFromClasses___graphName-String__classes-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java",
  "functionStartLine": 34,
  "functionEndLine": 57,
  "numCommitsSeen": 6,
  "timeTaken": 1132,
  "changeHistory": [
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4",
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62"
  ],
  "changeHistoryShort": {
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4": "Ybodychange",
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9": "Yfilerename",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5257. Fix unreleased resources and null dereferences (yufeigu via rkanter)\n",
      "commitDate": "27/12/16 2:14 PM",
      "commitName": "9262797e86453fc04b7ca3710b73b21fcdf9e6b4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "22/12/14 3:06 AM",
      "commitNameOld": "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 736.46,
      "commitsBetweenForRepo": 5521,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   public static Graph getGraphFromClasses(String graphName, List\u003cString\u003e classes)\n       throws Exception {\n     Graph ret \u003d null;\n     if (classes.size() !\u003d 1) {\n       ret \u003d new Graph(graphName);\n     }\n     for (String className : classes) {\n       Class clz \u003d Class.forName(className);\n       Field factoryField \u003d clz.getDeclaredField(\"stateMachineFactory\");\n       factoryField.setAccessible(true);\n       StateMachineFactory factory \u003d (StateMachineFactory) factoryField.get(null);\n       if (classes.size() \u003d\u003d 1) {\n         return factory.generateStateGraph(graphName);\n       }\n       String gname \u003d clz.getSimpleName();\n       if (gname.endsWith(\"Impl\")) {\n         gname \u003d gname.substring(0, gname.length()-4);\n       }\n-      ret.addSubGraph(factory.generateStateGraph(gname));\n+      if (ret !\u003d null) {\n+        ret.addSubGraph(factory.generateStateGraph(gname));\n+      }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Graph getGraphFromClasses(String graphName, List\u003cString\u003e classes)\n      throws Exception {\n    Graph ret \u003d null;\n    if (classes.size() !\u003d 1) {\n      ret \u003d new Graph(graphName);\n    }\n    for (String className : classes) {\n      Class clz \u003d Class.forName(className);\n      Field factoryField \u003d clz.getDeclaredField(\"stateMachineFactory\");\n      factoryField.setAccessible(true);\n      StateMachineFactory factory \u003d (StateMachineFactory) factoryField.get(null);\n      if (classes.size() \u003d\u003d 1) {\n        return factory.generateStateGraph(graphName);\n      }\n      String gname \u003d clz.getSimpleName();\n      if (gname.endsWith(\"Impl\")) {\n        gname \u003d gname.substring(0, gname.length()-4);\n      }\n      if (ret !\u003d null) {\n        ret.addSubGraph(factory.generateStateGraph(gname));\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java",
      "extendedDetails": {}
    },
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9": {
      "type": "Yfilerename",
      "commitMessage": "YARN-833. Moved Graph and VisualizeStateMachine into yarn.state package. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493654 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 11:51 PM",
      "commitName": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Graph getGraphFromClasses(String graphName, List\u003cString\u003e classes)\n      throws Exception {\n    Graph ret \u003d null;\n    if (classes.size() !\u003d 1) {\n      ret \u003d new Graph(graphName);\n    }\n    for (String className : classes) {\n      Class clz \u003d Class.forName(className);\n      Field factoryField \u003d clz.getDeclaredField(\"stateMachineFactory\");\n      factoryField.setAccessible(true);\n      StateMachineFactory factory \u003d (StateMachineFactory) factoryField.get(null);\n      if (classes.size() \u003d\u003d 1) {\n        return factory.generateStateGraph(graphName);\n      }\n      String gname \u003d clz.getSimpleName();\n      if (gname.endsWith(\"Impl\")) {\n        gname \u003d gname.substring(0, gname.length()-4);\n      }\n      ret.addSubGraph(factory.generateStateGraph(gname));\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Graph getGraphFromClasses(String graphName, List\u003cString\u003e classes)\n      throws Exception {\n    Graph ret \u003d null;\n    if (classes.size() !\u003d 1) {\n      ret \u003d new Graph(graphName);\n    }\n    for (String className : classes) {\n      Class clz \u003d Class.forName(className);\n      Field factoryField \u003d clz.getDeclaredField(\"stateMachineFactory\");\n      factoryField.setAccessible(true);\n      StateMachineFactory factory \u003d (StateMachineFactory) factoryField.get(null);\n      if (classes.size() \u003d\u003d 1) {\n        return factory.generateStateGraph(graphName);\n      }\n      String gname \u003d clz.getSimpleName();\n      if (gname.endsWith(\"Impl\")) {\n        gname \u003d gname.substring(0, gname.length()-4);\n      }\n      ret.addSubGraph(factory.generateStateGraph(gname));\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java"
      }
    },
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2930. Added the ability to be able to generate graphs from the state-machine definitions. Contributed by Binglin Chang.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173524 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/11 1:37 AM",
      "commitName": "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  public static Graph getGraphFromClasses(String graphName, List\u003cString\u003e classes)\n+      throws Exception {\n+    Graph ret \u003d null;\n+    if (classes.size() !\u003d 1) {\n+      ret \u003d new Graph(graphName);\n+    }\n+    for (String className : classes) {\n+      Class clz \u003d Class.forName(className);\n+      Field factoryField \u003d clz.getDeclaredField(\"stateMachineFactory\");\n+      factoryField.setAccessible(true);\n+      StateMachineFactory factory \u003d (StateMachineFactory) factoryField.get(null);\n+      if (classes.size() \u003d\u003d 1) {\n+        return factory.generateStateGraph(graphName);\n+      }\n+      String gname \u003d clz.getSimpleName();\n+      if (gname.endsWith(\"Impl\")) {\n+        gname \u003d gname.substring(0, gname.length()-4);\n+      }\n+      ret.addSubGraph(factory.generateStateGraph(gname));\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Graph getGraphFromClasses(String graphName, List\u003cString\u003e classes)\n      throws Exception {\n    Graph ret \u003d null;\n    if (classes.size() !\u003d 1) {\n      ret \u003d new Graph(graphName);\n    }\n    for (String className : classes) {\n      Class clz \u003d Class.forName(className);\n      Field factoryField \u003d clz.getDeclaredField(\"stateMachineFactory\");\n      factoryField.setAccessible(true);\n      StateMachineFactory factory \u003d (StateMachineFactory) factoryField.get(null);\n      if (classes.size() \u003d\u003d 1) {\n        return factory.generateStateGraph(graphName);\n      }\n      String gname \u003d clz.getSimpleName();\n      if (gname.endsWith(\"Impl\")) {\n        gname \u003d gname.substring(0, gname.length()-4);\n      }\n      ret.addSubGraph(factory.generateStateGraph(gname));\n    }\n    return ret;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java"
    }
  }
}