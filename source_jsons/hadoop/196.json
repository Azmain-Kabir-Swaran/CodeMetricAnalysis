{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpenFileCtx.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java",
  "functionStartLine": 376,
  "functionEndLine": 406,
  "numCommitsSeen": 36,
  "timeTaken": 1781,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "d71d40a63d198991077d5babd70be5e9787a53f1",
    "3bfd18c6b0483ae27eff6d53bda934e67dda5464",
    "e3088e4aef8cdfc0841858e7851f7276fab9b24b",
    "28e3d09230971b32f74284311931525cb7ad1b7c"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "d71d40a63d198991077d5babd70be5e9787a53f1": "Ybodychange",
    "3bfd18c6b0483ae27eff6d53bda934e67dda5464": "Ybodychange",
    "e3088e4aef8cdfc0841858e7851f7276fab9b24b": "Ybodychange",
    "28e3d09230971b32f74284311931525cb7ad1b7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/10/17 10:38 AM",
      "commitNameOld": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 126.95,
      "commitsBetweenForRepo": 833,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,31 @@\n     public void run() {\n       while (activeState \u0026\u0026 enabledDump) {\n         try {\n           if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n             dump();\n           }\n           synchronized (OpenFileCtx.this) {\n             if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n               OpenFileCtx.this.notifyAll();\n               try {\n                 OpenFileCtx.this.wait();\n-                if (LOG.isDebugEnabled()) {\n-                  LOG.debug(\"Dumper woke up\");\n-                }\n+                LOG.debug(\"Dumper woke up\");\n               } catch (InterruptedException e) {\n-                LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n-                    + OpenFileCtx.this.dumpFilePath);\n+                LOG.info(\"Dumper is interrupted, dumpFilePath \u003d {}\",\n+                    OpenFileCtx.this.dumpFilePath);\n               }\n             }\n           }\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n-                + \" enabledDump: \" + enabledDump);\n-          }\n+          LOG.debug(\"Dumper checking OpenFileCtx activeState: {} \" +\n+              \"enabledDump: {}\", activeState, enabledDump);\n         } catch (Throwable t) {\n           // unblock threads with new request\n           synchronized (OpenFileCtx.this) {\n             OpenFileCtx.this.notifyAll();\n           }\n-          LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n-              + OpenFileCtx.this.dumpFilePath, t);\n+          LOG.info(\"Dumper got Throwable. dumpFilePath: {}\",\n+              OpenFileCtx.this.dumpFilePath, t);\n           activeState \u003d false;\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (activeState \u0026\u0026 enabledDump) {\n        try {\n          if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n            dump();\n          }\n          synchronized (OpenFileCtx.this) {\n            if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n              OpenFileCtx.this.notifyAll();\n              try {\n                OpenFileCtx.this.wait();\n                LOG.debug(\"Dumper woke up\");\n              } catch (InterruptedException e) {\n                LOG.info(\"Dumper is interrupted, dumpFilePath \u003d {}\",\n                    OpenFileCtx.this.dumpFilePath);\n              }\n            }\n          }\n          LOG.debug(\"Dumper checking OpenFileCtx activeState: {} \" +\n              \"enabledDump: {}\", activeState, enabledDump);\n        } catch (Throwable t) {\n          // unblock threads with new request\n          synchronized (OpenFileCtx.this) {\n            OpenFileCtx.this.notifyAll();\n          }\n          LOG.info(\"Dumper got Throwable. dumpFilePath: {}\",\n              OpenFileCtx.this.dumpFilePath, t);\n          activeState \u003d false;\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java",
      "extendedDetails": {}
    },
    "d71d40a63d198991077d5babd70be5e9787a53f1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7180. NFSv3 gateway frequently gets stuck due to GC. Contributed by Brandon Li\n",
      "commitDate": "22/10/14 9:27 PM",
      "commitName": "d71d40a63d198991077d5babd70be5e9787a53f1",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "21/10/14 10:20 AM",
      "commitNameOld": "b6f9d5538cf2b425652687e99503f3d566b2056a",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 1.46,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,35 @@\n     public void run() {\n       while (activeState \u0026\u0026 enabledDump) {\n         try {\n           if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n             dump();\n           }\n           synchronized (OpenFileCtx.this) {\n             if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n+              OpenFileCtx.this.notifyAll();\n               try {\n                 OpenFileCtx.this.wait();\n                 if (LOG.isDebugEnabled()) {\n                   LOG.debug(\"Dumper woke up\");\n                 }\n               } catch (InterruptedException e) {\n                 LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n                     + OpenFileCtx.this.dumpFilePath);\n               }\n             }\n           }\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n                 + \" enabledDump: \" + enabledDump);\n           }\n         } catch (Throwable t) {\n+          // unblock threads with new request\n+          synchronized (OpenFileCtx.this) {\n+            OpenFileCtx.this.notifyAll();\n+          }\n           LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n               + OpenFileCtx.this.dumpFilePath, t);\n+          activeState \u003d false;\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (activeState \u0026\u0026 enabledDump) {\n        try {\n          if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n            dump();\n          }\n          synchronized (OpenFileCtx.this) {\n            if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n              OpenFileCtx.this.notifyAll();\n              try {\n                OpenFileCtx.this.wait();\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"Dumper woke up\");\n                }\n              } catch (InterruptedException e) {\n                LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n                    + OpenFileCtx.this.dumpFilePath);\n              }\n            }\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n                + \" enabledDump: \" + enabledDump);\n          }\n        } catch (Throwable t) {\n          // unblock threads with new request\n          synchronized (OpenFileCtx.this) {\n            OpenFileCtx.this.notifyAll();\n          }\n          LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n              + OpenFileCtx.this.dumpFilePath, t);\n          activeState \u003d false;\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java",
      "extendedDetails": {}
    },
    "3bfd18c6b0483ae27eff6d53bda934e67dda5464": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6050. NFS does not handle exceptions correctly in a few places. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581055 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 1:49 PM",
      "commitName": "3bfd18c6b0483ae27eff6d53bda934e67dda5464",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "17/12/13 12:40 PM",
      "commitNameOld": "5792d59da390842caec86ccaa8472d5be7933837",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 97.01,
      "commitsBetweenForRepo": 719,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     public void run() {\n       while (activeState \u0026\u0026 enabledDump) {\n         try {\n           if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n             dump();\n           }\n           synchronized (OpenFileCtx.this) {\n             if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n               try {\n                 OpenFileCtx.this.wait();\n                 if (LOG.isDebugEnabled()) {\n                   LOG.debug(\"Dumper woke up\");\n                 }\n               } catch (InterruptedException e) {\n                 LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n                     + OpenFileCtx.this.dumpFilePath);\n               }\n             }\n           }\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n                 + \" enabledDump: \" + enabledDump);\n           }\n         } catch (Throwable t) {\n           LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n-              + OpenFileCtx.this.dumpFilePath);\n+              + OpenFileCtx.this.dumpFilePath, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (activeState \u0026\u0026 enabledDump) {\n        try {\n          if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n            dump();\n          }\n          synchronized (OpenFileCtx.this) {\n            if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n              try {\n                OpenFileCtx.this.wait();\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"Dumper woke up\");\n                }\n              } catch (InterruptedException e) {\n                LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n                    + OpenFileCtx.this.dumpFilePath);\n              }\n            }\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n                + \" enabledDump: \" + enabledDump);\n          }\n        } catch (Throwable t) {\n          LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n              + OpenFileCtx.this.dumpFilePath, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java",
      "extendedDetails": {}
    },
    "e3088e4aef8cdfc0841858e7851f7276fab9b24b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5249. Fix dumper thread which may die silently. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1525770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/09/13 9:11 PM",
      "commitName": "e3088e4aef8cdfc0841858e7851f7276fab9b24b",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "23/09/13 1:02 PM",
      "commitNameOld": "28e3d09230971b32f74284311931525cb7ad1b7c",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,29 @@\n     public void run() {\n       while (activeState \u0026\u0026 enabledDump) {\n-        if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n-          dump();\n-        }\n-        synchronized (OpenFileCtx.this) {\n-          if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n-            try {\n-              OpenFileCtx.this.wait();\n-            } catch (InterruptedException e) {\n+        try {\n+          if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n+            dump();\n+          }\n+          synchronized (OpenFileCtx.this) {\n+            if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n+              try {\n+                OpenFileCtx.this.wait();\n+                if (LOG.isDebugEnabled()) {\n+                  LOG.debug(\"Dumper woke up\");\n+                }\n+              } catch (InterruptedException e) {\n+                LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n+                    + OpenFileCtx.this.dumpFilePath);\n+              }\n             }\n           }\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n+                + \" enabledDump: \" + enabledDump);\n+          }\n+        } catch (Throwable t) {\n+          LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n+              + OpenFileCtx.this.dumpFilePath);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (activeState \u0026\u0026 enabledDump) {\n        try {\n          if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n            dump();\n          }\n          synchronized (OpenFileCtx.this) {\n            if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n              try {\n                OpenFileCtx.this.wait();\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"Dumper woke up\");\n                }\n              } catch (InterruptedException e) {\n                LOG.info(\"Dumper is interrupted, dumpFilePath\u003d \"\n                    + OpenFileCtx.this.dumpFilePath);\n              }\n            }\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Dumper checking OpenFileCtx activeState: \" + activeState\n                + \" enabledDump: \" + enabledDump);\n          }\n        } catch (Throwable t) {\n          LOG.info(\"Dumper get Throwable: \" + t + \". dumpFilePath: \"\n              + OpenFileCtx.this.dumpFilePath);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java",
      "extendedDetails": {}
    },
    "28e3d09230971b32f74284311931525cb7ad1b7c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4971. Move IO operations out of locking in OpenFileCtx. Contributed by Jing Zhao and Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1525681 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/09/13 1:02 PM",
      "commitName": "28e3d09230971b32f74284311931525cb7ad1b7c",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,15 @@\n+    public void run() {\n+      while (activeState \u0026\u0026 enabledDump) {\n+        if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n+          dump();\n+        }\n+        synchronized (OpenFileCtx.this) {\n+          if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n+            try {\n+              OpenFileCtx.this.wait();\n+            } catch (InterruptedException e) {\n+            }\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (activeState \u0026\u0026 enabledDump) {\n        if (nonSequentialWriteInMemory.get() \u003e\u003d DUMP_WRITE_WATER_MARK) {\n          dump();\n        }\n        synchronized (OpenFileCtx.this) {\n          if (nonSequentialWriteInMemory.get() \u003c DUMP_WRITE_WATER_MARK) {\n            try {\n              OpenFileCtx.this.wait();\n            } catch (InterruptedException e) {\n            }\n          }\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java"
    }
  }
}