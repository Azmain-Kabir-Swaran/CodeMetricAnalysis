{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecurityUtil.java",
  "functionName": "getZKAuthInfos",
  "functionId": "getZKAuthInfos___conf-Configuration__configKey-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java",
  "functionStartLine": 737,
  "functionEndLine": 753,
  "numCommitsSeen": 46,
  "timeTaken": 886,
  "changeHistory": [
    "b2029353537fc8da9ab67834568cb2e24924cf5a"
  ],
  "changeHistoryShort": {
    "b2029353537fc8da9ab67834568cb2e24924cf5a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2029353537fc8da9ab67834568cb2e24924cf5a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15157. Zookeeper authentication related properties to support CredentialProviders. (Contributed by Gergo Repas)\n",
      "commitDate": "16/01/18 10:15 AM",
      "commitName": "b2029353537fc8da9ab67834568cb2e24924cf5a",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,17 @@\n+  public static List\u003cZKUtil.ZKAuthInfo\u003e getZKAuthInfos(Configuration conf,\n+      String configKey) throws IOException {\n+    char[] zkAuthChars \u003d conf.getPassword(configKey);\n+    String zkAuthConf \u003d\n+        zkAuthChars !\u003d null ? String.valueOf(zkAuthChars) : null;\n+    try {\n+      zkAuthConf \u003d ZKUtil.resolveConfIndirection(zkAuthConf);\n+      if (zkAuthConf !\u003d null) {\n+        return ZKUtil.parseAuth(zkAuthConf);\n+      } else {\n+        return Collections.emptyList();\n+      }\n+    } catch (IOException | ZKUtil.BadAuthFormatException e) {\n+      LOG.error(\"Couldn\u0027t read Auth based on {}\", configKey);\n+      throw e;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cZKUtil.ZKAuthInfo\u003e getZKAuthInfos(Configuration conf,\n      String configKey) throws IOException {\n    char[] zkAuthChars \u003d conf.getPassword(configKey);\n    String zkAuthConf \u003d\n        zkAuthChars !\u003d null ? String.valueOf(zkAuthChars) : null;\n    try {\n      zkAuthConf \u003d ZKUtil.resolveConfIndirection(zkAuthConf);\n      if (zkAuthConf !\u003d null) {\n        return ZKUtil.parseAuth(zkAuthConf);\n      } else {\n        return Collections.emptyList();\n      }\n    } catch (IOException | ZKUtil.BadAuthFormatException e) {\n      LOG.error(\"Couldn\u0027t read Auth based on {}\", configKey);\n      throw e;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java"
    }
  }
}