{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "checkAndGetResourceProfile",
  "functionId": "checkAndGetResourceProfile___profile-String__overrideResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 813,
  "functionEndLine": 838,
  "numCommitsSeen": 52,
  "timeTaken": 1451,
  "changeHistory": [
    "aae629913cee0157c945a2c7384c7bf398f10616"
  ],
  "changeHistoryShort": {
    "aae629913cee0157c945a2c7384c7bf398f10616": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,26 @@\n+  private Resource checkAndGetResourceProfile(String profile,\n+      Resource overrideResource) {\n+    Resource returnResource \u003d overrideResource;\n+\n+    // if application requested a non-empty/null profile, and the\n+    if (profile !\u003d null \u0026\u0026 !profile.isEmpty()) {\n+      if (resourceProfilesMap \u003d\u003d null || (!resourceProfilesMap.containsKey(\n+          profile))) {\n+        throw new InvalidContainerRequestException(\n+            \"Invalid profile name specified\u003d\" + profile + (\n+                resourceProfilesMap \u003d\u003d null ?\n+                    \"\" :\n+                    (\", valid profile names are \" + resourceProfilesMap\n+                        .keySet())));\n+      }\n+      returnResource \u003d Resources.clone(resourceProfilesMap.get(profile));\n+      for (ResourceInformation info : overrideResource\n+          .getAllResourcesListCopy()) {\n+        if (info.getValue() \u003e 0) {\n+          returnResource.setResourceInformation(info.getName(), info);\n+        }\n+      }\n+    }\n+\n+    return returnResource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource checkAndGetResourceProfile(String profile,\n      Resource overrideResource) {\n    Resource returnResource \u003d overrideResource;\n\n    // if application requested a non-empty/null profile, and the\n    if (profile !\u003d null \u0026\u0026 !profile.isEmpty()) {\n      if (resourceProfilesMap \u003d\u003d null || (!resourceProfilesMap.containsKey(\n          profile))) {\n        throw new InvalidContainerRequestException(\n            \"Invalid profile name specified\u003d\" + profile + (\n                resourceProfilesMap \u003d\u003d null ?\n                    \"\" :\n                    (\", valid profile names are \" + resourceProfilesMap\n                        .keySet())));\n      }\n      returnResource \u003d Resources.clone(resourceProfilesMap.get(profile));\n      for (ResourceInformation info : overrideResource\n          .getAllResourcesListCopy()) {\n        if (info.getValue() \u003e 0) {\n          returnResource.setResourceInformation(info.getName(), info);\n        }\n      }\n    }\n\n    return returnResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
    }
  }
}