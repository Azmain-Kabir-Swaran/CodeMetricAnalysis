{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsShell.java",
  "functionName": "printInstanceHelp",
  "functionId": "printInstanceHelp___out-PrintStream__instance-Command",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
  "functionStartLine": 253,
  "functionEndLine": 288,
  "numCommitsSeen": 111,
  "timeTaken": 2179,
  "changeHistory": [
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
    "be3fdd1c40140e24df1a5414cf91537862b66e82",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3",
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7"
  ],
  "changeHistoryShort": {
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8": "Ybodychange",
    "be3fdd1c40140e24df1a5414cf91537862b66e82": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3": "Ymultichange(Yrename,Yparameterchange)",
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15495. Upgrade commons-lang version to 3.7 in hadoop-common-project and hadoop-tools. Contributed by Takanobu Asanuma.\n",
      "commitDate": "27/06/18 10:37 PM",
      "commitName": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "17/01/18 9:24 PM",
      "commitNameOld": "08332e12d055d85472f0c9371fefe9b56bfea1ed",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 161.01,
      "commitsBetweenForRepo": 1746,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private void printInstanceHelp(PrintStream out, Command instance) {\n     out.println(instance.getUsage() + \" :\");\n     TableListing listing \u003d null;\n     final String prefix \u003d \"  \";\n     for (String line : instance.getDescription().split(\"\\n\")) {\n       if (line.matches(\"^[ \\t]*[-\u003c].*$\")) {\n         String[] segments \u003d line.split(\":\");\n         if (segments.length \u003d\u003d 2) {\n           if (listing \u003d\u003d null) {\n             listing \u003d createOptionTableListing();\n           }\n           listing.addRow(segments[0].trim(), segments[1].trim());\n           continue;\n         }\n       }\n \n       // Normal literal description.\n       if (listing !\u003d null) {\n         for (String listingLine : listing.toString().split(\"\\n\")) {\n           out.println(prefix + listingLine);\n         }\n         listing \u003d null;\n       }\n \n-      for (String descLine : WordUtils.wrap(\n+      for (String descLine : StringUtils.wrap(\n           line, MAX_LINE_WIDTH, \"\\n\", true).split(\"\\n\")) {\n         out.println(prefix + descLine);\n       }\n     }\n \n     if (listing !\u003d null) {\n       for (String listingLine : listing.toString().split(\"\\n\")) {\n         out.println(prefix + listingLine);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    out.println(instance.getUsage() + \" :\");\n    TableListing listing \u003d null;\n    final String prefix \u003d \"  \";\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      if (line.matches(\"^[ \\t]*[-\u003c].*$\")) {\n        String[] segments \u003d line.split(\":\");\n        if (segments.length \u003d\u003d 2) {\n          if (listing \u003d\u003d null) {\n            listing \u003d createOptionTableListing();\n          }\n          listing.addRow(segments[0].trim(), segments[1].trim());\n          continue;\n        }\n      }\n\n      // Normal literal description.\n      if (listing !\u003d null) {\n        for (String listingLine : listing.toString().split(\"\\n\")) {\n          out.println(prefix + listingLine);\n        }\n        listing \u003d null;\n      }\n\n      for (String descLine : StringUtils.wrap(\n          line, MAX_LINE_WIDTH, \"\\n\", true).split(\"\\n\")) {\n        out.println(prefix + descLine);\n      }\n    }\n\n    if (listing !\u003d null) {\n      for (String listingLine : listing.toString().split(\"\\n\")) {\n        out.println(prefix + listingLine);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {}
    },
    "be3fdd1c40140e24df1a5414cf91537862b66e82": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10691. Improve the readability of \u0027hadoop fs -help\u0027. Contributed by Lei Xu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 11:39 PM",
      "commitName": "be3fdd1c40140e24df1a5414cf91537862b66e82",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "18/06/13 2:56 PM",
      "commitNameOld": "3ab7f86c16c0c3df89f5157aab0bb5d66fbcc2d5",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 359.36,
      "commitsBetweenForRepo": 2342,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,36 @@\n   private void printInstanceHelp(PrintStream out, Command instance) {\n-    boolean firstLine \u003d true;\n+    out.println(instance.getUsage() + \" :\");\n+    TableListing listing \u003d null;\n+    final String prefix \u003d \"  \";\n     for (String line : instance.getDescription().split(\"\\n\")) {\n-      String prefix;\n-      if (firstLine) {\n-        prefix \u003d instance.getUsage() + \":\\t\";\n-        firstLine \u003d false;\n-      } else {\n-        prefix \u003d \"\\t\\t\";\n+      if (line.matches(\"^[ \\t]*[-\u003c].*$\")) {\n+        String[] segments \u003d line.split(\":\");\n+        if (segments.length \u003d\u003d 2) {\n+          if (listing \u003d\u003d null) {\n+            listing \u003d createOptionTableListing();\n+          }\n+          listing.addRow(segments[0].trim(), segments[1].trim());\n+          continue;\n+        }\n       }\n-      System.out.println(prefix + line);\n-    }    \n+\n+      // Normal literal description.\n+      if (listing !\u003d null) {\n+        for (String listingLine : listing.toString().split(\"\\n\")) {\n+          out.println(prefix + listingLine);\n+        }\n+        listing \u003d null;\n+      }\n+\n+      for (String descLine : WordUtils.wrap(\n+          line, MAX_LINE_WIDTH, \"\\n\", true).split(\"\\n\")) {\n+        out.println(prefix + descLine);\n+      }\n+    }\n+\n+    if (listing !\u003d null) {\n+      for (String listingLine : listing.toString().split(\"\\n\")) {\n+        out.println(prefix + listingLine);\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    out.println(instance.getUsage() + \" :\");\n    TableListing listing \u003d null;\n    final String prefix \u003d \"  \";\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      if (line.matches(\"^[ \\t]*[-\u003c].*$\")) {\n        String[] segments \u003d line.split(\":\");\n        if (segments.length \u003d\u003d 2) {\n          if (listing \u003d\u003d null) {\n            listing \u003d createOptionTableListing();\n          }\n          listing.addRow(segments[0].trim(), segments[1].trim());\n          continue;\n        }\n      }\n\n      // Normal literal description.\n      if (listing !\u003d null) {\n        for (String listingLine : listing.toString().split(\"\\n\")) {\n          out.println(prefix + listingLine);\n        }\n        listing \u003d null;\n      }\n\n      for (String descLine : WordUtils.wrap(\n          line, MAX_LINE_WIDTH, \"\\n\", true).split(\"\\n\")) {\n        out.println(prefix + descLine);\n      }\n    }\n\n    if (listing !\u003d null) {\n      for (String listingLine : listing.toString().split(\"\\n\")) {\n        out.println(prefix + listingLine);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    boolean firstLine \u003d true;\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      String prefix;\n      if (firstLine) {\n        prefix \u003d instance.getUsage() + \":\\t\";\n        firstLine \u003d false;\n      } else {\n        prefix \u003d \"\\t\\t\";\n      }\n      System.out.println(prefix + line);\n    }    \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    boolean firstLine \u003d true;\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      String prefix;\n      if (firstLine) {\n        prefix \u003d instance.getUsage() + \":\\t\";\n        firstLine \u003d false;\n      } else {\n        prefix \u003d \"\\t\\t\";\n      }\n      System.out.println(prefix + line);\n    }    \n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FsShell.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    boolean firstLine \u003d true;\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      String prefix;\n      if (firstLine) {\n        prefix \u003d instance.getUsage() + \":\\t\";\n        firstLine \u003d false;\n      } else {\n        prefix \u003d \"\\t\\t\";\n      }\n      System.out.println(prefix + line);\n    }    \n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FsShell.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FsShell.java"
      }
    },
    "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3": {
      "type": "Ymultichange(Yrename,Yparameterchange)",
      "commitMessage": "HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/06/11 1:53 PM",
      "commitName": "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/06/11 1:53 PM",
          "commitName": "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/05/11 10:29 AM",
          "commitNameOld": "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 12.14,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private void printHelp(Command instance) {\n+  private void printInstanceHelp(PrintStream out, Command instance) {\n     boolean firstLine \u003d true;\n     for (String line : instance.getDescription().split(\"\\n\")) {\n       String prefix;\n       if (firstLine) {\n         prefix \u003d instance.getUsage() + \":\\t\";\n         firstLine \u003d false;\n       } else {\n         prefix \u003d \"\\t\\t\";\n       }\n       System.out.println(prefix + line);\n     }    \n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    boolean firstLine \u003d true;\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      String prefix;\n      if (firstLine) {\n        prefix \u003d instance.getUsage() + \":\\t\";\n        firstLine \u003d false;\n      } else {\n        prefix \u003d \"\\t\\t\";\n      }\n      System.out.println(prefix + line);\n    }    \n  }",
          "path": "src/java/org/apache/hadoop/fs/FsShell.java",
          "extendedDetails": {
            "oldValue": "printHelp",
            "newValue": "printInstanceHelp"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/06/11 1:53 PM",
          "commitName": "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/05/11 10:29 AM",
          "commitNameOld": "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 12.14,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private void printHelp(Command instance) {\n+  private void printInstanceHelp(PrintStream out, Command instance) {\n     boolean firstLine \u003d true;\n     for (String line : instance.getDescription().split(\"\\n\")) {\n       String prefix;\n       if (firstLine) {\n         prefix \u003d instance.getUsage() + \":\\t\";\n         firstLine \u003d false;\n       } else {\n         prefix \u003d \"\\t\\t\";\n       }\n       System.out.println(prefix + line);\n     }    \n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printInstanceHelp(PrintStream out, Command instance) {\n    boolean firstLine \u003d true;\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      String prefix;\n      if (firstLine) {\n        prefix \u003d instance.getUsage() + \":\\t\";\n        firstLine \u003d false;\n      } else {\n        prefix \u003d \"\\t\\t\";\n      }\n      System.out.println(prefix + line);\n    }    \n  }",
          "path": "src/java/org/apache/hadoop/fs/FsShell.java",
          "extendedDetails": {
            "oldValue": "[instance-Command]",
            "newValue": "[out-PrintStream, instance-Command]"
          }
        }
      ]
    },
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7233. Refactor ls to conform to new FsCommand class.  Contributed by Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1095761 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/04/11 9:05 AM",
      "commitName": "99ebad8e757e90f6e036fc213d99f82dec7b80d7",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,13 @@\n+  private void printHelp(Command instance) {\n+    boolean firstLine \u003d true;\n+    for (String line : instance.getDescription().split(\"\\n\")) {\n+      String prefix;\n+      if (firstLine) {\n+        prefix \u003d instance.getUsage() + \":\\t\";\n+        firstLine \u003d false;\n+      } else {\n+        prefix \u003d \"\\t\\t\";\n+      }\n+      System.out.println(prefix + line);\n+    }    \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printHelp(Command instance) {\n    boolean firstLine \u003d true;\n    for (String line : instance.getDescription().split(\"\\n\")) {\n      String prefix;\n      if (firstLine) {\n        prefix \u003d instance.getUsage() + \":\\t\";\n        firstLine \u003d false;\n      } else {\n        prefix \u003d \"\\t\\t\";\n      }\n      System.out.println(prefix + line);\n    }    \n  }",
      "path": "src/java/org/apache/hadoop/fs/FsShell.java"
    }
  }
}