{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActiveStandbyElector.java",
  "functionName": "getActiveData",
  "functionId": "getActiveData",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
  "functionStartLine": 441,
  "functionEndLine": 458,
  "numCommitsSeen": 38,
  "timeTaken": 1116,
  "changeHistory": [
    "9d5799553fea81920edfab611e5d485a97841848",
    "805c1280ce2773bc61ea718723b42b09d795688f",
    "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec"
  ],
  "changeHistoryShort": {
    "9d5799553fea81920edfab611e5d485a97841848": "Ybodychange",
    "805c1280ce2773bc61ea718723b42b09d795688f": "Ybodychange",
    "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d5799553fea81920edfab611e5d485a97841848": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333288 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/12 6:56 PM",
      "commitName": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "04/04/12 12:21 PM",
      "commitNameOld": "b74d7427855eb7e20be70155c11acac0e333bd6a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 28.27,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public synchronized byte[] getActiveData() throws ActiveNotFoundException,\n       KeeperException, InterruptedException, IOException {\n     try {\n       if (zkClient \u003d\u003d null) {\n         createConnection();\n       }\n       Stat stat \u003d new Stat();\n-      return zkClient.getData(zkLockFilePath, false, stat);\n+      return getDataWithRetries(zkLockFilePath, false, stat);\n     } catch(KeeperException e) {\n       Code code \u003d e.code();\n       if (isNodeDoesNotExist(code)) {\n         // handle the commonly expected cases that make sense for us\n         throw new ActiveNotFoundException();\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized byte[] getActiveData() throws ActiveNotFoundException,\n      KeeperException, InterruptedException, IOException {\n    try {\n      if (zkClient \u003d\u003d null) {\n        createConnection();\n      }\n      Stat stat \u003d new Stat();\n      return getDataWithRetries(zkLockFilePath, false, stat);\n    } catch(KeeperException e) {\n      Code code \u003d e.code();\n      if (isNodeDoesNotExist(code)) {\n        // handle the commonly expected cases that make sense for us\n        throw new ActiveNotFoundException();\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "805c1280ce2773bc61ea718723b42b09d795688f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8163. Improve ActiveStandbyElector to provide hooks for fencing old active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/03/12 5:05 PM",
      "commitName": "805c1280ce2773bc61ea718723b42b09d795688f",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "01/03/12 5:32 PM",
      "commitNameOld": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 21.94,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public synchronized byte[] getActiveData() throws ActiveNotFoundException,\n       KeeperException, InterruptedException, IOException {\n     try {\n       if (zkClient \u003d\u003d null) {\n         createConnection();\n       }\n       Stat stat \u003d new Stat();\n       return zkClient.getData(zkLockFilePath, false, stat);\n     } catch(KeeperException e) {\n       Code code \u003d e.code();\n-      if (operationNodeDoesNotExist(code)) {\n+      if (isNodeDoesNotExist(code)) {\n         // handle the commonly expected cases that make sense for us\n         throw new ActiveNotFoundException();\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized byte[] getActiveData() throws ActiveNotFoundException,\n      KeeperException, InterruptedException, IOException {\n    try {\n      if (zkClient \u003d\u003d null) {\n        createConnection();\n      }\n      Stat stat \u003d new Stat();\n      return zkClient.getData(zkLockFilePath, false, stat);\n    } catch(KeeperException e) {\n      Code code \u003d e.code();\n      if (isNodeDoesNotExist(code)) {\n        // handle the commonly expected cases that make sense for us\n        throw new ActiveNotFoundException();\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7992. Add ZKClient library to facilitate leader election. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1235841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 9:26 AM",
      "commitName": "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,18 @@\n+  public synchronized byte[] getActiveData() throws ActiveNotFoundException,\n+      KeeperException, InterruptedException, IOException {\n+    try {\n+      if (zkClient \u003d\u003d null) {\n+        createConnection();\n+      }\n+      Stat stat \u003d new Stat();\n+      return zkClient.getData(zkLockFilePath, false, stat);\n+    } catch(KeeperException e) {\n+      Code code \u003d e.code();\n+      if (operationNodeDoesNotExist(code)) {\n+        // handle the commonly expected cases that make sense for us\n+        throw new ActiveNotFoundException();\n+      } else {\n+        throw e;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized byte[] getActiveData() throws ActiveNotFoundException,\n      KeeperException, InterruptedException, IOException {\n    try {\n      if (zkClient \u003d\u003d null) {\n        createConnection();\n      }\n      Stat stat \u003d new Stat();\n      return zkClient.getData(zkLockFilePath, false, stat);\n    } catch(KeeperException e) {\n      Code code \u003d e.code();\n      if (operationNodeDoesNotExist(code)) {\n        // handle the commonly expected cases that make sense for us\n        throw new ActiveNotFoundException();\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java"
    }
  }
}