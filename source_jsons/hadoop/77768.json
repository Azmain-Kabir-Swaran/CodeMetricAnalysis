{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SFTPFileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path__permission-FsPermission__overwrite-boolean__bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
  "functionStartLine": 542,
  "functionEndLine": 585,
  "numCommitsSeen": 7,
  "timeTaken": 1088,
  "changeHistory": [
    "736ceab2f58fb9ab5907c5b5110bd44384038e6b",
    "559425dcb9302861c3c28b759492a68f8d597092"
  ],
  "changeHistoryShort": {
    "736ceab2f58fb9ab5907c5b5110bd44384038e6b": "Ybodychange",
    "559425dcb9302861c3c28b759492a68f8d597092": "Yintroduced"
  },
  "changeHistoryDetails": {
    "736ceab2f58fb9ab5907c5b5110bd44384038e6b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12325. SFTPFileSystem operations should restore cwd. Contributed by Chen Liang.\n",
      "commitDate": "21/08/17 11:48 AM",
      "commitName": "736ceab2f58fb9ab5907c5b5110bd44384038e6b",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 34.59,
      "commitsBetweenForRepo": 256,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,44 @@\n   public FSDataOutputStream create(Path f, FsPermission permission,\n       boolean overwrite, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     final ChannelSftp client \u003d connect();\n     Path workDir;\n     try {\n       workDir \u003d new Path(client.pwd());\n     } catch (SftpException e) {\n       throw new IOException(e);\n     }\n     Path absolute \u003d makeAbsolute(workDir, f);\n     if (exists(client, f)) {\n       if (overwrite) {\n         delete(client, f, false);\n       } else {\n         disconnect(client);\n         throw new IOException(String.format(E_FILE_EXIST, f));\n       }\n     }\n     Path parent \u003d absolute.getParent();\n     if (parent \u003d\u003d null || !mkdirs(client, parent, FsPermission.getDefault())) {\n       parent \u003d (parent \u003d\u003d null) ? new Path(\"/\") : parent;\n       disconnect(client);\n       throw new IOException(String.format(E_CREATE_DIR, parent));\n     }\n     OutputStream os;\n     try {\n+      final String previousCwd \u003d client.pwd();\n       client.cd(parent.toUri().getPath());\n       os \u003d client.put(f.getName());\n+      client.cd(previousCwd);\n     } catch (SftpException e) {\n       throw new IOException(e);\n     }\n     FSDataOutputStream fos \u003d new FSDataOutputStream(os, statistics) {\n       @Override\n       public void close() throws IOException {\n         super.close();\n         disconnect(client);\n       }\n     };\n \n     return fos;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    final ChannelSftp client \u003d connect();\n    Path workDir;\n    try {\n      workDir \u003d new Path(client.pwd());\n    } catch (SftpException e) {\n      throw new IOException(e);\n    }\n    Path absolute \u003d makeAbsolute(workDir, f);\n    if (exists(client, f)) {\n      if (overwrite) {\n        delete(client, f, false);\n      } else {\n        disconnect(client);\n        throw new IOException(String.format(E_FILE_EXIST, f));\n      }\n    }\n    Path parent \u003d absolute.getParent();\n    if (parent \u003d\u003d null || !mkdirs(client, parent, FsPermission.getDefault())) {\n      parent \u003d (parent \u003d\u003d null) ? new Path(\"/\") : parent;\n      disconnect(client);\n      throw new IOException(String.format(E_CREATE_DIR, parent));\n    }\n    OutputStream os;\n    try {\n      final String previousCwd \u003d client.pwd();\n      client.cd(parent.toUri().getPath());\n      os \u003d client.put(f.getName());\n      client.cd(previousCwd);\n    } catch (SftpException e) {\n      throw new IOException(e);\n    }\n    FSDataOutputStream fos \u003d new FSDataOutputStream(os, statistics) {\n      @Override\n      public void close() throws IOException {\n        super.close();\n        disconnect(client);\n      }\n    };\n\n    return fos;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
      "extendedDetails": {}
    },
    "559425dcb9302861c3c28b759492a68f8d597092": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-5732. Add SFTPFileSystem. Contributed by Ramtin Boustani and Inigo Goiri\n",
      "commitDate": "07/07/15 10:08 AM",
      "commitName": "559425dcb9302861c3c28b759492a68f8d597092",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,42 @@\n+  public FSDataOutputStream create(Path f, FsPermission permission,\n+      boolean overwrite, int bufferSize, short replication, long blockSize,\n+      Progressable progress) throws IOException {\n+    final ChannelSftp client \u003d connect();\n+    Path workDir;\n+    try {\n+      workDir \u003d new Path(client.pwd());\n+    } catch (SftpException e) {\n+      throw new IOException(e);\n+    }\n+    Path absolute \u003d makeAbsolute(workDir, f);\n+    if (exists(client, f)) {\n+      if (overwrite) {\n+        delete(client, f, false);\n+      } else {\n+        disconnect(client);\n+        throw new IOException(String.format(E_FILE_EXIST, f));\n+      }\n+    }\n+    Path parent \u003d absolute.getParent();\n+    if (parent \u003d\u003d null || !mkdirs(client, parent, FsPermission.getDefault())) {\n+      parent \u003d (parent \u003d\u003d null) ? new Path(\"/\") : parent;\n+      disconnect(client);\n+      throw new IOException(String.format(E_CREATE_DIR, parent));\n+    }\n+    OutputStream os;\n+    try {\n+      client.cd(parent.toUri().getPath());\n+      os \u003d client.put(f.getName());\n+    } catch (SftpException e) {\n+      throw new IOException(e);\n+    }\n+    FSDataOutputStream fos \u003d new FSDataOutputStream(os, statistics) {\n+      @Override\n+      public void close() throws IOException {\n+        super.close();\n+        disconnect(client);\n+      }\n+    };\n+\n+    return fos;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    final ChannelSftp client \u003d connect();\n    Path workDir;\n    try {\n      workDir \u003d new Path(client.pwd());\n    } catch (SftpException e) {\n      throw new IOException(e);\n    }\n    Path absolute \u003d makeAbsolute(workDir, f);\n    if (exists(client, f)) {\n      if (overwrite) {\n        delete(client, f, false);\n      } else {\n        disconnect(client);\n        throw new IOException(String.format(E_FILE_EXIST, f));\n      }\n    }\n    Path parent \u003d absolute.getParent();\n    if (parent \u003d\u003d null || !mkdirs(client, parent, FsPermission.getDefault())) {\n      parent \u003d (parent \u003d\u003d null) ? new Path(\"/\") : parent;\n      disconnect(client);\n      throw new IOException(String.format(E_CREATE_DIR, parent));\n    }\n    OutputStream os;\n    try {\n      client.cd(parent.toUri().getPath());\n      os \u003d client.put(f.getName());\n    } catch (SftpException e) {\n      throw new IOException(e);\n    }\n    FSDataOutputStream fos \u003d new FSDataOutputStream(os, statistics) {\n      @Override\n      public void close() throws IOException {\n        super.close();\n        disconnect(client);\n      }\n    };\n\n    return fos;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java"
    }
  }
}