{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "makeRenamePendingFileContents",
  "functionId": "makeRenamePendingFileContents",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 311,
  "functionEndLine": 354,
  "numCommitsSeen": 66,
  "timeTaken": 3175,
  "changeHistory": [
    "5f6edb30c2bb648d5564c951edc25645e17e6636",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40"
  ],
  "changeHistoryShort": {
    "5f6edb30c2bb648d5564c951edc25645e17e6636": "Ybodychange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6edb30c2bb648d5564c951edc25645e17e6636": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12350. WASB Logging: Improve WASB Logging around deletes, reads and writes. Contributed by Dushyanth.\n",
      "commitDate": "05/10/15 8:11 PM",
      "commitName": "5f6edb30c2bb648d5564c951edc25645e17e6636",
      "commitAuthor": "cnauroth",
      "commitDateOld": "28/09/15 3:31 PM",
      "commitNameOld": "3abbdc929bde05f8819f5410cef1eaeb8940203f",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 7.19,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public String makeRenamePendingFileContents() {\n       SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");\n       sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n       String time \u003d sdf.format(new Date());\n \n       // Make file list string\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[\\n\");\n       for (int i \u003d 0; i !\u003d fileMetadata.length; i++) {\n         if (i \u003e 0) {\n           builder.append(\",\\n\");\n         }\n         builder.append(\"    \");\n         String noPrefix \u003d StringUtils.removeStart(fileMetadata[i].getKey(), srcKey + \"/\");\n \n         // Quote string file names, escaping any possible \" characters or other\n         // necessary characters in the name.\n         builder.append(quote(noPrefix));\n         if (builder.length() \u003e\u003d\n             MAX_RENAME_PENDING_FILE_SIZE - FORMATTING_BUFFER) {\n \n           // Give up now to avoid using too much memory.\n-          LOG.error(\"Internal error: Exceeded maximum rename pending file size of \"\n-              + MAX_RENAME_PENDING_FILE_SIZE + \" bytes.\");\n+          LOG.error(\"Internal error: Exceeded maximum rename pending file size of {} bytes.\",\n+              MAX_RENAME_PENDING_FILE_SIZE);\n \n           // return some bad JSON with an error message to make it human readable\n           return \"exceeded maximum rename pending file size\";\n         }\n       }\n       builder.append(\"\\n  ]\");\n       String fileList \u003d builder.toString();\n \n       // Make file contents as a string. Again, quote file names, escaping\n       // characters as appropriate.\n       String contents \u003d \"{\\n\"\n           + \"  FormatVersion: \\\"1.0\\\",\\n\"\n           + \"  OperationUTCTime: \\\"\" + time + \"\\\",\\n\"\n           + \"  OldFolderName: \" + quote(srcKey) + \",\\n\"\n           + \"  NewFolderName: \" + quote(dstKey) + \",\\n\"\n           + \"  FileList: \" + fileList + \"\\n\"\n           + \"}\\n\";\n \n       return contents;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String makeRenamePendingFileContents() {\n      SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");\n      sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      String time \u003d sdf.format(new Date());\n\n      // Make file list string\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[\\n\");\n      for (int i \u003d 0; i !\u003d fileMetadata.length; i++) {\n        if (i \u003e 0) {\n          builder.append(\",\\n\");\n        }\n        builder.append(\"    \");\n        String noPrefix \u003d StringUtils.removeStart(fileMetadata[i].getKey(), srcKey + \"/\");\n\n        // Quote string file names, escaping any possible \" characters or other\n        // necessary characters in the name.\n        builder.append(quote(noPrefix));\n        if (builder.length() \u003e\u003d\n            MAX_RENAME_PENDING_FILE_SIZE - FORMATTING_BUFFER) {\n\n          // Give up now to avoid using too much memory.\n          LOG.error(\"Internal error: Exceeded maximum rename pending file size of {} bytes.\",\n              MAX_RENAME_PENDING_FILE_SIZE);\n\n          // return some bad JSON with an error message to make it human readable\n          return \"exceeded maximum rename pending file size\";\n        }\n      }\n      builder.append(\"\\n  ]\");\n      String fileList \u003d builder.toString();\n\n      // Make file contents as a string. Again, quote file names, escaping\n      // characters as appropriate.\n      String contents \u003d \"{\\n\"\n          + \"  FormatVersion: \\\"1.0\\\",\\n\"\n          + \"  OperationUTCTime: \\\"\" + time + \"\\\",\\n\"\n          + \"  OldFolderName: \" + quote(srcKey) + \",\\n\"\n          + \"  NewFolderName: \" + quote(dstKey) + \",\\n\"\n          + \"  FileList: \" + fileList + \"\\n\"\n          + \"}\\n\";\n\n      return contents;\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,44 @@\n+    public String makeRenamePendingFileContents() {\n+      SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");\n+      sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+      String time \u003d sdf.format(new Date());\n+\n+      // Make file list string\n+      StringBuilder builder \u003d new StringBuilder();\n+      builder.append(\"[\\n\");\n+      for (int i \u003d 0; i !\u003d fileMetadata.length; i++) {\n+        if (i \u003e 0) {\n+          builder.append(\",\\n\");\n+        }\n+        builder.append(\"    \");\n+        String noPrefix \u003d StringUtils.removeStart(fileMetadata[i].getKey(), srcKey + \"/\");\n+\n+        // Quote string file names, escaping any possible \" characters or other\n+        // necessary characters in the name.\n+        builder.append(quote(noPrefix));\n+        if (builder.length() \u003e\u003d\n+            MAX_RENAME_PENDING_FILE_SIZE - FORMATTING_BUFFER) {\n+\n+          // Give up now to avoid using too much memory.\n+          LOG.error(\"Internal error: Exceeded maximum rename pending file size of \"\n+              + MAX_RENAME_PENDING_FILE_SIZE + \" bytes.\");\n+\n+          // return some bad JSON with an error message to make it human readable\n+          return \"exceeded maximum rename pending file size\";\n+        }\n+      }\n+      builder.append(\"\\n  ]\");\n+      String fileList \u003d builder.toString();\n+\n+      // Make file contents as a string. Again, quote file names, escaping\n+      // characters as appropriate.\n+      String contents \u003d \"{\\n\"\n+          + \"  FormatVersion: \\\"1.0\\\",\\n\"\n+          + \"  OperationUTCTime: \\\"\" + time + \"\\\",\\n\"\n+          + \"  OldFolderName: \" + quote(srcKey) + \",\\n\"\n+          + \"  NewFolderName: \" + quote(dstKey) + \",\\n\"\n+          + \"  FileList: \" + fileList + \"\\n\"\n+          + \"}\\n\";\n+\n+      return contents;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String makeRenamePendingFileContents() {\n      SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");\n      sdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      String time \u003d sdf.format(new Date());\n\n      // Make file list string\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[\\n\");\n      for (int i \u003d 0; i !\u003d fileMetadata.length; i++) {\n        if (i \u003e 0) {\n          builder.append(\",\\n\");\n        }\n        builder.append(\"    \");\n        String noPrefix \u003d StringUtils.removeStart(fileMetadata[i].getKey(), srcKey + \"/\");\n\n        // Quote string file names, escaping any possible \" characters or other\n        // necessary characters in the name.\n        builder.append(quote(noPrefix));\n        if (builder.length() \u003e\u003d\n            MAX_RENAME_PENDING_FILE_SIZE - FORMATTING_BUFFER) {\n\n          // Give up now to avoid using too much memory.\n          LOG.error(\"Internal error: Exceeded maximum rename pending file size of \"\n              + MAX_RENAME_PENDING_FILE_SIZE + \" bytes.\");\n\n          // return some bad JSON with an error message to make it human readable\n          return \"exceeded maximum rename pending file size\";\n        }\n      }\n      builder.append(\"\\n  ]\");\n      String fileList \u003d builder.toString();\n\n      // Make file contents as a string. Again, quote file names, escaping\n      // characters as appropriate.\n      String contents \u003d \"{\\n\"\n          + \"  FormatVersion: \\\"1.0\\\",\\n\"\n          + \"  OperationUTCTime: \\\"\" + time + \"\\\",\\n\"\n          + \"  OldFolderName: \" + quote(srcKey) + \",\\n\"\n          + \"  NewFolderName: \" + quote(dstKey) + \",\\n\"\n          + \"  FileList: \" + fileList + \"\\n\"\n          + \"}\\n\";\n\n      return contents;\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}