{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystem.java",
  "functionName": "rename",
  "functionId": "rename___src-Path(modifiers-final)__dst-Path(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
  "functionStartLine": 261,
  "functionEndLine": 325,
  "numCommitsSeen": 34,
  "timeTaken": 3661,
  "changeHistory": [
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc",
    "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d",
    "300f772c36da7e616afbf94df19238d6ac70e69d",
    "d5da9928c99073abdd27b66f794fe4312434ff96",
    "9c1e4e81399913f180131f4faa95604087c6d962",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc": "Ybodychange",
    "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d": "Ybodychange",
    "300f772c36da7e616afbf94df19238d6ac70e69d": "Ybodychange",
    "d5da9928c99073abdd27b66f794fe4312434ff96": "Ybodychange",
    "9c1e4e81399913f180131f4faa95604087c6d962": "Ybodychange",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": "Ybodychange",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": "Ybodychange",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16730: ABFS: Support for Shared Access Signatures (SAS). Contributed by Sneha Vijayarajan.\n",
      "commitDate": "27/02/20 10:27 AM",
      "commitName": "791270a2e5e31546ff5c1ef4fa8bad6852b906dc",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "14/01/20 5:28 PM",
      "commitNameOld": "c36f09deb91454c086926c01f872d8ca4419aee0",
      "commitAuthorOld": "Clemens Wolff",
      "daysBetweenCommits": 43.71,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,65 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n     trailingPeriodCheck(dst);\n \n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n     Path qualifiedSrcPath \u003d makeQualified(src);\n     Path qualifiedDstPath \u003d makeQualified(dst);\n \n     // rename under same folder;\n     if(makeQualified(parentFolder).equals(qualifiedDstPath)) {\n       return tryGetFileStatus(qualifiedSrcPath) !\u003d null;\n     }\n \n     FileStatus dstFileStatus \u003d null;\n     if (qualifiedSrcPath.equals(qualifiedDstPath)) {\n       // rename to itself\n       // - if it doesn\u0027t exist, return false\n       // - if it is file, return true\n       // - if it is dir, return false.\n       dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n       if (dstFileStatus \u003d\u003d null) {\n         return false;\n       }\n       return dstFileStatus.isDirectory() ? false : true;\n     }\n \n     // Non-HNS account need to check dst status on driver side.\n     if (!abfsStore.getIsNamespaceEnabled() \u0026\u0026 dstFileStatus \u003d\u003d null) {\n       dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n     }\n \n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n           return qualifiedSrcPath.equals(qualifiedDstPath);\n         }\n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n       qualifiedDstPath \u003d makeQualified(adjustedDst);\n-      performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n \n       abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n               AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    trailingPeriodCheck(dst);\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n    Path qualifiedSrcPath \u003d makeQualified(src);\n    Path qualifiedDstPath \u003d makeQualified(dst);\n\n    // rename under same folder;\n    if(makeQualified(parentFolder).equals(qualifiedDstPath)) {\n      return tryGetFileStatus(qualifiedSrcPath) !\u003d null;\n    }\n\n    FileStatus dstFileStatus \u003d null;\n    if (qualifiedSrcPath.equals(qualifiedDstPath)) {\n      // rename to itself\n      // - if it doesn\u0027t exist, return false\n      // - if it is file, return true\n      // - if it is dir, return false.\n      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n      if (dstFileStatus \u003d\u003d null) {\n        return false;\n      }\n      return dstFileStatus.isDirectory() ? false : true;\n    }\n\n    // Non-HNS account need to check dst status on driver side.\n    if (!abfsStore.getIsNamespaceEnabled() \u0026\u0026 dstFileStatus \u003d\u003d null) {\n      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n    }\n\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return qualifiedSrcPath.equals(qualifiedDstPath);\n        }\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      qualifiedDstPath \u003d makeQualified(adjustedDst);\n\n      abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15860. ABFS: Throw exception when directory / file name ends with a period (.). Contributed by Shweta Yakkali.\n",
      "commitDate": "02/01/19 8:33 AM",
      "commitName": "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "04/12/18 5:39 AM",
      "commitNameOld": "a8bbd818d5bc4762324bcdb7cf1fdd5c2f93891b",
      "commitAuthorOld": "Da Zhou",
      "daysBetweenCommits": 29.12,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,64 +1,66 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n+    trailingPeriodCheck(dst);\n+\n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n     Path qualifiedSrcPath \u003d makeQualified(src);\n     Path qualifiedDstPath \u003d makeQualified(dst);\n \n     // rename under same folder;\n     if(makeQualified(parentFolder).equals(qualifiedDstPath)) {\n       return tryGetFileStatus(qualifiedSrcPath) !\u003d null;\n     }\n \n     FileStatus dstFileStatus \u003d null;\n     if (qualifiedSrcPath.equals(qualifiedDstPath)) {\n       // rename to itself\n       // - if it doesn\u0027t exist, return false\n       // - if it is file, return true\n       // - if it is dir, return false.\n       dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n       if (dstFileStatus \u003d\u003d null) {\n         return false;\n       }\n       return dstFileStatus.isDirectory() ? false : true;\n     }\n \n     // Non-HNS account need to check dst status on driver side.\n     if (!abfsStore.getIsNamespaceEnabled() \u0026\u0026 dstFileStatus \u003d\u003d null) {\n       dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n     }\n \n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n           return qualifiedSrcPath.equals(qualifiedDstPath);\n         }\n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n       qualifiedDstPath \u003d makeQualified(adjustedDst);\n       performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n \n       abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n               AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    trailingPeriodCheck(dst);\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n    Path qualifiedSrcPath \u003d makeQualified(src);\n    Path qualifiedDstPath \u003d makeQualified(dst);\n\n    // rename under same folder;\n    if(makeQualified(parentFolder).equals(qualifiedDstPath)) {\n      return tryGetFileStatus(qualifiedSrcPath) !\u003d null;\n    }\n\n    FileStatus dstFileStatus \u003d null;\n    if (qualifiedSrcPath.equals(qualifiedDstPath)) {\n      // rename to itself\n      // - if it doesn\u0027t exist, return false\n      // - if it is file, return true\n      // - if it is dir, return false.\n      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n      if (dstFileStatus \u003d\u003d null) {\n        return false;\n      }\n      return dstFileStatus.isDirectory() ? false : true;\n    }\n\n    // Non-HNS account need to check dst status on driver side.\n    if (!abfsStore.getIsNamespaceEnabled() \u0026\u0026 dstFileStatus \u003d\u003d null) {\n      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n    }\n\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return qualifiedSrcPath.equals(qualifiedDstPath);\n        }\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      qualifiedDstPath \u003d makeQualified(adjustedDst);\n      performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n\n      abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "300f772c36da7e616afbf94df19238d6ac70e69d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15940. ABFS: For HNS account, avoid unnecessary get call when doing Rename.\n\nContributed by Da Zhou \u003cda.zhou@microsoft.com\u003e\n\n(cherry picked from commit 1a3a4960d91aa594283e447963fb2e407d4c6af5)\n",
      "commitDate": "27/11/18 10:13 AM",
      "commitName": "300f772c36da7e616afbf94df19238d6ac70e69d",
      "commitAuthor": "Da Zhou",
      "commitDateOld": "03/10/18 4:52 AM",
      "commitNameOld": "7051bd78b17b2666c2fa0f61823920285a060a76",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 55.26,
      "commitsBetweenForRepo": 474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,64 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n+    Path qualifiedSrcPath \u003d makeQualified(src);\n+    Path qualifiedDstPath \u003d makeQualified(dst);\n \n-    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n+    // rename under same folder;\n+    if(makeQualified(parentFolder).equals(qualifiedDstPath)) {\n+      return tryGetFileStatus(qualifiedSrcPath) !\u003d null;\n+    }\n+\n+    FileStatus dstFileStatus \u003d null;\n+    if (qualifiedSrcPath.equals(qualifiedDstPath)) {\n+      // rename to itself\n+      // - if it doesn\u0027t exist, return false\n+      // - if it is file, return true\n+      // - if it is dir, return false.\n+      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n+      if (dstFileStatus \u003d\u003d null) {\n+        return false;\n+      }\n+      return dstFileStatus.isDirectory() ? false : true;\n+    }\n+\n+    // Non-HNS account need to check dst status on driver side.\n+    if (!abfsStore.getIsNamespaceEnabled() \u0026\u0026 dstFileStatus \u003d\u003d null) {\n+      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n+    }\n+\n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n-          return src.equals(dst);\n+          return qualifiedSrcPath.equals(qualifiedDstPath);\n         }\n-\n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n-      Path qualifiedSrcPath \u003d makeQualified(src);\n-      Path qualifiedDstPath \u003d makeQualified(adjustedDst);\n+      qualifiedDstPath \u003d makeQualified(adjustedDst);\n       performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n \n       abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n               AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n    Path qualifiedSrcPath \u003d makeQualified(src);\n    Path qualifiedDstPath \u003d makeQualified(dst);\n\n    // rename under same folder;\n    if(makeQualified(parentFolder).equals(qualifiedDstPath)) {\n      return tryGetFileStatus(qualifiedSrcPath) !\u003d null;\n    }\n\n    FileStatus dstFileStatus \u003d null;\n    if (qualifiedSrcPath.equals(qualifiedDstPath)) {\n      // rename to itself\n      // - if it doesn\u0027t exist, return false\n      // - if it is file, return true\n      // - if it is dir, return false.\n      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n      if (dstFileStatus \u003d\u003d null) {\n        return false;\n      }\n      return dstFileStatus.isDirectory() ? false : true;\n    }\n\n    // Non-HNS account need to check dst status on driver side.\n    if (!abfsStore.getIsNamespaceEnabled() \u0026\u0026 dstFileStatus \u003d\u003d null) {\n      dstFileStatus \u003d tryGetFileStatus(qualifiedDstPath);\n    }\n\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return qualifiedSrcPath.equals(qualifiedDstPath);\n        }\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      qualifiedDstPath \u003d makeQualified(adjustedDst);\n      performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n\n      abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "d5da9928c99073abdd27b66f794fe4312434ff96": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15723. ABFS: Ranger Support.\nContributed by Yuan Gao.\n",
      "commitDate": "25/09/18 11:13 AM",
      "commitName": "d5da9928c99073abdd27b66f794fe4312434ff96",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/09/18 3:56 PM",
      "commitNameOld": "8e831ba458ab5ebe9c919c76d66615bbef63f82e",
      "commitAuthorOld": "Sean Mackrory",
      "daysBetweenCommits": 5.8,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,42 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n \n     final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n           return src.equals(dst);\n         }\n \n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n-      abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n+      Path qualifiedSrcPath \u003d makeQualified(src);\n+      Path qualifiedDstPath \u003d makeQualified(adjustedDst);\n+      performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n+\n+      abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n               AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n\n    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return src.equals(dst);\n        }\n\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      Path qualifiedSrcPath \u003d makeQualified(src);\n      Path qualifiedDstPath \u003d makeQualified(adjustedDst);\n      performAbfsAuthCheck(FsAction.READ_WRITE, qualifiedSrcPath, qualifiedDstPath);\n\n      abfsStore.rename(qualifiedSrcPath, qualifiedDstPath);\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "9c1e4e81399913f180131f4faa95604087c6d962": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15661. ABFS: Add support for ACL.\nContributed by Junhua Gu and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "9c1e4e81399913f180131f4faa95604087c6d962",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "cc5cc60c4162a2d788c80ebbbe69ca49f3eb90e6",
      "commitAuthorOld": "Thomas Marquardt",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n \n     final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n           return src.equals(dst);\n         }\n \n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n       abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n-              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n+              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n+              AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n\n    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return src.equals(dst);\n        }\n\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INTERNAL_OPERATION_ABORT);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15446. ABFS: tune imports \u0026 javadocs; stabilise tests.\nContributed by Steve Loughran and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n-    this.LOG.debug(\n+    LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n \n     final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n           return src.equals(dst);\n         }\n \n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n       abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n               AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n\n    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return src.equals(dst);\n        }\n\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public boolean rename(final Path src, final Path dst) throws IOException {\n     this.LOG.debug(\n         \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n \n     Path parentFolder \u003d src.getParent();\n     if (parentFolder \u003d\u003d null) {\n       return false;\n     }\n \n     final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n     try {\n       String sourceFileName \u003d src.getName();\n       Path adjustedDst \u003d dst;\n \n       if (dstFileStatus !\u003d null) {\n         if (!dstFileStatus.isDirectory()) {\n           return src.equals(dst);\n         }\n \n         adjustedDst \u003d new Path(dst, sourceFileName);\n       }\n \n-      abfsHttpService.rename(this, makeQualified(src), makeQualified(adjustedDst));\n+      abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n       return true;\n     } catch(AzureBlobFileSystemException ex) {\n       checkException(\n               src,\n               ex,\n               AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n               AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n               AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n               AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n               AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n       return false;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    this.LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n\n    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return src.equals(dst);\n        }\n\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      abfsStore.rename(makeQualified(src), makeQualified(adjustedDst));\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,37 @@\n+  public boolean rename(final Path src, final Path dst) throws IOException {\n+    this.LOG.debug(\n+        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n+\n+    Path parentFolder \u003d src.getParent();\n+    if (parentFolder \u003d\u003d null) {\n+      return false;\n+    }\n+\n+    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n+    try {\n+      String sourceFileName \u003d src.getName();\n+      Path adjustedDst \u003d dst;\n+\n+      if (dstFileStatus !\u003d null) {\n+        if (!dstFileStatus.isDirectory()) {\n+          return src.equals(dst);\n+        }\n+\n+        adjustedDst \u003d new Path(dst, sourceFileName);\n+      }\n+\n+      abfsHttpService.rename(this, makeQualified(src), makeQualified(adjustedDst));\n+      return true;\n+    } catch(AzureBlobFileSystemException ex) {\n+      checkException(\n+              src,\n+              ex,\n+              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n+              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n+              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n+              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n+              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n+      return false;\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final Path src, final Path dst) throws IOException {\n    this.LOG.debug(\n        \"AzureBlobFileSystem.rename src: {} dst: {}\", src.toString(), dst.toString());\n\n    Path parentFolder \u003d src.getParent();\n    if (parentFolder \u003d\u003d null) {\n      return false;\n    }\n\n    final FileStatus dstFileStatus \u003d tryGetFileStatus(dst);\n    try {\n      String sourceFileName \u003d src.getName();\n      Path adjustedDst \u003d dst;\n\n      if (dstFileStatus !\u003d null) {\n        if (!dstFileStatus.isDirectory()) {\n          return src.equals(dst);\n        }\n\n        adjustedDst \u003d new Path(dst, sourceFileName);\n      }\n\n      abfsHttpService.rename(this, makeQualified(src), makeQualified(adjustedDst));\n      return true;\n    } catch(AzureBlobFileSystemException ex) {\n      checkException(\n              src,\n              ex,\n              AzureServiceErrorCode.PATH_ALREADY_EXISTS,\n              AzureServiceErrorCode.INVALID_RENAME_SOURCE_PATH,\n              AzureServiceErrorCode.SOURCE_PATH_NOT_FOUND,\n              AzureServiceErrorCode.INVALID_SOURCE_OR_DESTINATION_RESOURCE_TYPE,\n              AzureServiceErrorCode.RENAME_DESTINATION_PARENT_PATH_NOT_FOUND);\n      return false;\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java"
    }
  }
}