{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WeightedRoundRobinMultiplexer.java",
  "functionName": "moveToNextQueue",
  "functionId": "moveToNextQueue",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WeightedRoundRobinMultiplexer.java",
  "functionStartLine": 98,
  "functionEndLine": 115,
  "numCommitsSeen": 4,
  "timeTaken": 931,
  "changeHistory": [
    "9089790cabb4771198be0fe64c1317a3ff1c80f1",
    "e74d99b81e57262e717d012bdb3ed793eebfb45b"
  ],
  "changeHistoryShort": {
    "9089790cabb4771198be0fe64c1317a3ff1c80f1": "Ybodychange",
    "e74d99b81e57262e717d012bdb3ed793eebfb45b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9089790cabb4771198be0fe64c1317a3ff1c80f1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15611. Log more details for FairCallQueue. Contributed by Ryan Wu.\n",
      "commitDate": "26/07/18 3:08 AM",
      "commitName": "9089790cabb4771198be0fe64c1317a3ff1c80f1",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 373.23,
      "commitsBetweenForRepo": 3332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   private void moveToNextQueue() {\n     int thisIdx \u003d this.currentQueueIndex.get();\n \n     // Wrap to fit in our bounds\n     int nextIdx \u003d (thisIdx + 1) % this.numQueues;\n \n     // Set to next index: once this is called, requests will start being\n     // drawn from nextIdx, but requestsLeft will continue to decrement into\n     // the negatives\n     this.currentQueueIndex.set(nextIdx);\n \n     // Finally, reset requestsLeft. This will enable moveToNextQueue to be\n     // called again, for the new currentQueueIndex\n     this.requestsLeft.set(this.queueWeights[nextIdx]);\n+    LOG.debug(\"Moving to next queue from queue index {} to index {}, \" +\n+        \"number of requests left for current queue: {}.\",\n+        thisIdx, nextIdx, requestsLeft);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void moveToNextQueue() {\n    int thisIdx \u003d this.currentQueueIndex.get();\n\n    // Wrap to fit in our bounds\n    int nextIdx \u003d (thisIdx + 1) % this.numQueues;\n\n    // Set to next index: once this is called, requests will start being\n    // drawn from nextIdx, but requestsLeft will continue to decrement into\n    // the negatives\n    this.currentQueueIndex.set(nextIdx);\n\n    // Finally, reset requestsLeft. This will enable moveToNextQueue to be\n    // called again, for the new currentQueueIndex\n    this.requestsLeft.set(this.queueWeights[nextIdx]);\n    LOG.debug(\"Moving to next queue from queue index {} to index {}, \" +\n        \"number of requests left for current queue: {}.\",\n        thisIdx, nextIdx, requestsLeft);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WeightedRoundRobinMultiplexer.java",
      "extendedDetails": {}
    },
    "e74d99b81e57262e717d012bdb3ed793eebfb45b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10279. Create multiplexer, a requirement for the fair queue. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:53 PM",
      "commitName": "e74d99b81e57262e717d012bdb3ed793eebfb45b",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,15 @@\n+  private void moveToNextQueue() {\n+    int thisIdx \u003d this.currentQueueIndex.get();\n+\n+    // Wrap to fit in our bounds\n+    int nextIdx \u003d (thisIdx + 1) % this.numQueues;\n+\n+    // Set to next index: once this is called, requests will start being\n+    // drawn from nextIdx, but requestsLeft will continue to decrement into\n+    // the negatives\n+    this.currentQueueIndex.set(nextIdx);\n+\n+    // Finally, reset requestsLeft. This will enable moveToNextQueue to be\n+    // called again, for the new currentQueueIndex\n+    this.requestsLeft.set(this.queueWeights[nextIdx]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void moveToNextQueue() {\n    int thisIdx \u003d this.currentQueueIndex.get();\n\n    // Wrap to fit in our bounds\n    int nextIdx \u003d (thisIdx + 1) % this.numQueues;\n\n    // Set to next index: once this is called, requests will start being\n    // drawn from nextIdx, but requestsLeft will continue to decrement into\n    // the negatives\n    this.currentQueueIndex.set(nextIdx);\n\n    // Finally, reset requestsLeft. This will enable moveToNextQueue to be\n    // called again, for the new currentQueueIndex\n    this.requestsLeft.set(this.queueWeights[nextIdx]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WeightedRoundRobinMultiplexer.java"
    }
  }
}