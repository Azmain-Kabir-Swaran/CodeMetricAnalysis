{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GpuDiscoverer.java",
  "functionName": "initialize",
  "functionId": "initialize___config-Configuration__nvidiaHelper-NvidiaBinaryHelper",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
  "functionStartLine": 247,
  "functionEndLine": 267,
  "numCommitsSeen": 26,
  "timeTaken": 6656,
  "changeHistory": [
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
    "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
    "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50",
    "95fbbfed75dd309b5d56032ece64996165572287",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd"
  ],
  "changeHistoryShort": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": "Ymultichange(Yparameterchange,Ybodychange)",
    "95fc38f2e9011b16ca09ac44843a71a2cac45c99": "Ybodychange",
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d": "Ybodychange",
    "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "95fbbfed75dd309b5d56032ece64996165572287": "Ymultichange(Yexceptionschange,Ybodychange)",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko\n",
      "commitDate": "21/08/19 7:44 AM",
      "commitName": "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko\n",
          "commitDate": "21/08/19 7:44 AM",
          "commitName": "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "02/08/19 2:24 AM",
          "commitNameOld": "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
          "commitAuthorOld": "Adam Antal",
          "daysBetweenCommits": 19.22,
          "commitsBetweenForRepo": 196,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  public synchronized void initialize(Configuration config)\n-      throws YarnException {\n+  public synchronized void initialize(Configuration config,\n+      NvidiaBinaryHelper nvidiaHelper) throws YarnException {\n     setConf(config);\n-    if (IsAutoDiscoveryEnabled()) {\n+    this.nvidiaBinaryHelper \u003d nvidiaHelper;\n+    if (isAutoDiscoveryEnabled()) {\n       numOfErrorExecutionSinceLastSucceed \u003d 0;\n       lookUpAutoDiscoveryBinary(config);\n \n       // Try to discover GPU information once and print\n       try {\n         LOG.info(\"Trying to discover GPU information ...\");\n         GpuDeviceInformation info \u003d getGpuDeviceInformation();\n         LOG.info(\"Discovered GPU information: \" + info.toString());\n       } catch (YarnException e) {\n         String msg \u003d\n                 \"Failed to discover GPU information from system, exception message:\"\n                         + e.getMessage() + \" continue...\";\n         LOG.warn(msg);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration config,\n      NvidiaBinaryHelper nvidiaHelper) throws YarnException {\n    setConf(config);\n    this.nvidiaBinaryHelper \u003d nvidiaHelper;\n    if (isAutoDiscoveryEnabled()) {\n      numOfErrorExecutionSinceLastSucceed \u003d 0;\n      lookUpAutoDiscoveryBinary(config);\n\n      // Try to discover GPU information once and print\n      try {\n        LOG.info(\"Trying to discover GPU information ...\");\n        GpuDeviceInformation info \u003d getGpuDeviceInformation();\n        LOG.info(\"Discovered GPU information: \" + info.toString());\n      } catch (YarnException e) {\n        String msg \u003d\n                \"Failed to discover GPU information from system, exception message:\"\n                        + e.getMessage() + \" continue...\";\n        LOG.warn(msg);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "[config-Configuration]",
            "newValue": "[config-Configuration, nvidiaHelper-NvidiaBinaryHelper]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko\n",
          "commitDate": "21/08/19 7:44 AM",
          "commitName": "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "02/08/19 2:24 AM",
          "commitNameOld": "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
          "commitAuthorOld": "Adam Antal",
          "daysBetweenCommits": 19.22,
          "commitsBetweenForRepo": 196,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  public synchronized void initialize(Configuration config)\n-      throws YarnException {\n+  public synchronized void initialize(Configuration config,\n+      NvidiaBinaryHelper nvidiaHelper) throws YarnException {\n     setConf(config);\n-    if (IsAutoDiscoveryEnabled()) {\n+    this.nvidiaBinaryHelper \u003d nvidiaHelper;\n+    if (isAutoDiscoveryEnabled()) {\n       numOfErrorExecutionSinceLastSucceed \u003d 0;\n       lookUpAutoDiscoveryBinary(config);\n \n       // Try to discover GPU information once and print\n       try {\n         LOG.info(\"Trying to discover GPU information ...\");\n         GpuDeviceInformation info \u003d getGpuDeviceInformation();\n         LOG.info(\"Discovered GPU information: \" + info.toString());\n       } catch (YarnException e) {\n         String msg \u003d\n                 \"Failed to discover GPU information from system, exception message:\"\n                         + e.getMessage() + \" continue...\";\n         LOG.warn(msg);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration config,\n      NvidiaBinaryHelper nvidiaHelper) throws YarnException {\n    setConf(config);\n    this.nvidiaBinaryHelper \u003d nvidiaHelper;\n    if (isAutoDiscoveryEnabled()) {\n      numOfErrorExecutionSinceLastSucceed \u003d 0;\n      lookUpAutoDiscoveryBinary(config);\n\n      // Try to discover GPU information once and print\n      try {\n        LOG.info(\"Trying to discover GPU information ...\");\n        GpuDeviceInformation info \u003d getGpuDeviceInformation();\n        LOG.info(\"Discovered GPU information: \" + info.toString());\n      } catch (YarnException e) {\n        String msg \u003d\n                \"Failed to discover GPU information from system, exception message:\"\n                        + e.getMessage() + \" continue...\";\n        LOG.warn(msg);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {}
        }
      ]
    },
    "95fc38f2e9011b16ca09ac44843a71a2cac45c99": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9375. Use Configured in GpuDiscoverer and FpgaDiscoverer (#1131)\n\nContributed by Adam Antal",
      "commitDate": "02/08/19 2:24 AM",
      "commitName": "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "15/07/19 2:59 AM",
      "commitNameOld": "18ee1092b471c5337f05809f8f01dae415e51a3a",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 17.98,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public synchronized void initialize(Configuration config)\n       throws YarnException {\n-    this.conf \u003d config;\n+    setConf(config);\n     if (IsAutoDiscoveryEnabled()) {\n       numOfErrorExecutionSinceLastSucceed \u003d 0;\n       lookUpAutoDiscoveryBinary(config);\n \n       // Try to discover GPU information once and print\n       try {\n         LOG.info(\"Trying to discover GPU information ...\");\n         GpuDeviceInformation info \u003d getGpuDeviceInformation();\n         LOG.info(\"Discovered GPU information: \" + info.toString());\n       } catch (YarnException e) {\n         String msg \u003d\n                 \"Failed to discover GPU information from system, exception message:\"\n                         + e.getMessage() + \" continue...\";\n         LOG.warn(msg);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void initialize(Configuration config)\n      throws YarnException {\n    setConf(config);\n    if (IsAutoDiscoveryEnabled()) {\n      numOfErrorExecutionSinceLastSucceed \u003d 0;\n      lookUpAutoDiscoveryBinary(config);\n\n      // Try to discover GPU information once and print\n      try {\n        LOG.info(\"Trying to discover GPU information ...\");\n        GpuDeviceInformation info \u003d getGpuDeviceInformation();\n        LOG.info(\"Discovered GPU information: \" + info.toString());\n      } catch (YarnException e) {\n        String msg \u003d\n                \"Failed to discover GPU information from system, exception message:\"\n                        + e.getMessage() + \" continue...\";\n        LOG.warn(msg);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9337. GPU auto-discovery script runs even when the resource is given by hand. Contributed by Adam Antal\n",
      "commitDate": "12/07/19 8:28 AM",
      "commitName": "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 118.67,
      "commitsBetweenForRepo": 819,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   public synchronized void initialize(Configuration config)\n       throws YarnException {\n     this.conf \u003d config;\n-    numOfErrorExecutionSinceLastSucceed \u003d 0;\n-    lookUpAutoDiscoveryBinary(config);\n+    if (IsAutoDiscoveryEnabled()) {\n+      numOfErrorExecutionSinceLastSucceed \u003d 0;\n+      lookUpAutoDiscoveryBinary(config);\n \n-    // Try to discover GPU information once and print\n-    try {\n-      LOG.info(\"Trying to discover GPU information ...\");\n-      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n-      LOG.info(\"Discovered GPU information: \" + info.toString());\n-    } catch (YarnException e) {\n-      String msg \u003d\n-          \"Failed to discover GPU information from system, exception message:\"\n-              + e.getMessage() + \" continue...\";\n-      LOG.warn(msg);\n+      // Try to discover GPU information once and print\n+      try {\n+        LOG.info(\"Trying to discover GPU information ...\");\n+        GpuDeviceInformation info \u003d getGpuDeviceInformation();\n+        LOG.info(\"Discovered GPU information: \" + info.toString());\n+      } catch (YarnException e) {\n+        String msg \u003d\n+                \"Failed to discover GPU information from system, exception message:\"\n+                        + e.getMessage() + \" continue...\";\n+        LOG.warn(msg);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void initialize(Configuration config)\n      throws YarnException {\n    this.conf \u003d config;\n    if (IsAutoDiscoveryEnabled()) {\n      numOfErrorExecutionSinceLastSucceed \u003d 0;\n      lookUpAutoDiscoveryBinary(config);\n\n      // Try to discover GPU information once and print\n      try {\n        LOG.info(\"Trying to discover GPU information ...\");\n        GpuDeviceInformation info \u003d getGpuDeviceInformation();\n        LOG.info(\"Discovered GPU information: \" + info.toString());\n      } catch (YarnException e) {\n        String msg \u003d\n                \"Failed to discover GPU information from system, exception message:\"\n                        + e.getMessage() + \" continue...\";\n        LOG.warn(msg);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-9139. Simplify initializer code of GpuDiscoverer. Contributed by Szilard Nemeth.\n",
      "commitDate": "01/03/19 5:54 AM",
      "commitName": "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9139. Simplify initializer code of GpuDiscoverer. Contributed by Szilard Nemeth.\n",
          "commitDate": "01/03/19 5:54 AM",
          "commitName": "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/02/19 10:00 PM",
          "commitNameOld": "5e91ebd91a405e1585ef02b8fbf03f10d1398adf",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 4.33,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,18 @@\n-  public synchronized void initialize(Configuration conf) {\n-    this.conf \u003d conf;\n+  public synchronized void initialize(Configuration config)\n+      throws YarnException {\n+    this.conf \u003d config;\n     numOfErrorExecutionSinceLastSucceed \u003d 0;\n-    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n-        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n-    if (pathToExecutable.isEmpty()) {\n-      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n-    }\n-\n-    File binaryPath \u003d new File(pathToExecutable);\n-    if (!binaryPath.exists()) {\n-      // When binary not exist, use default setting.\n-      boolean found \u003d false;\n-      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n-        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n-        if (binaryPath.exists()) {\n-          found \u003d true;\n-          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n-          break;\n-        }\n-      }\n-\n-      if (!found) {\n-        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n-            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n-            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n-      }\n-    } else{\n-      // If path specified by user is a directory, use\n-      if (binaryPath.isDirectory()) {\n-        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n-        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n-            + \" under the directory, updated path-to-executable:\" + binaryPath\n-            .getAbsolutePath());\n-      }\n-      // Validated\n-      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n-    }\n+    lookUpAutoDiscoveryBinary(config);\n \n     // Try to discover GPU information once and print\n     try {\n       LOG.info(\"Trying to discover GPU information ...\");\n       GpuDeviceInformation info \u003d getGpuDeviceInformation();\n-      LOG.info(info.toString());\n+      LOG.info(\"Discovered GPU information: \" + info.toString());\n     } catch (YarnException e) {\n       String msg \u003d\n           \"Failed to discover GPU information from system, exception message:\"\n               + e.getMessage() + \" continue...\";\n       LOG.warn(msg);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration config)\n      throws YarnException {\n    this.conf \u003d config;\n    numOfErrorExecutionSinceLastSucceed \u003d 0;\n    lookUpAutoDiscoveryBinary(config);\n\n    // Try to discover GPU information once and print\n    try {\n      LOG.info(\"Trying to discover GPU information ...\");\n      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n      LOG.info(\"Discovered GPU information: \" + info.toString());\n    } catch (YarnException e) {\n      String msg \u003d\n          \"Failed to discover GPU information from system, exception message:\"\n              + e.getMessage() + \" continue...\";\n      LOG.warn(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[config-Configuration]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-9139. Simplify initializer code of GpuDiscoverer. Contributed by Szilard Nemeth.\n",
          "commitDate": "01/03/19 5:54 AM",
          "commitName": "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/02/19 10:00 PM",
          "commitNameOld": "5e91ebd91a405e1585ef02b8fbf03f10d1398adf",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 4.33,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,18 @@\n-  public synchronized void initialize(Configuration conf) {\n-    this.conf \u003d conf;\n+  public synchronized void initialize(Configuration config)\n+      throws YarnException {\n+    this.conf \u003d config;\n     numOfErrorExecutionSinceLastSucceed \u003d 0;\n-    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n-        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n-    if (pathToExecutable.isEmpty()) {\n-      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n-    }\n-\n-    File binaryPath \u003d new File(pathToExecutable);\n-    if (!binaryPath.exists()) {\n-      // When binary not exist, use default setting.\n-      boolean found \u003d false;\n-      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n-        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n-        if (binaryPath.exists()) {\n-          found \u003d true;\n-          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n-          break;\n-        }\n-      }\n-\n-      if (!found) {\n-        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n-            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n-            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n-      }\n-    } else{\n-      // If path specified by user is a directory, use\n-      if (binaryPath.isDirectory()) {\n-        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n-        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n-            + \" under the directory, updated path-to-executable:\" + binaryPath\n-            .getAbsolutePath());\n-      }\n-      // Validated\n-      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n-    }\n+    lookUpAutoDiscoveryBinary(config);\n \n     // Try to discover GPU information once and print\n     try {\n       LOG.info(\"Trying to discover GPU information ...\");\n       GpuDeviceInformation info \u003d getGpuDeviceInformation();\n-      LOG.info(info.toString());\n+      LOG.info(\"Discovered GPU information: \" + info.toString());\n     } catch (YarnException e) {\n       String msg \u003d\n           \"Failed to discover GPU information from system, exception message:\"\n               + e.getMessage() + \" continue...\";\n       LOG.warn(msg);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration config)\n      throws YarnException {\n    this.conf \u003d config;\n    numOfErrorExecutionSinceLastSucceed \u003d 0;\n    lookUpAutoDiscoveryBinary(config);\n\n    // Try to discover GPU information once and print\n    try {\n      LOG.info(\"Trying to discover GPU information ...\");\n      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n      LOG.info(\"Discovered GPU information: \" + info.toString());\n    } catch (YarnException e) {\n      String msg \u003d\n          \"Failed to discover GPU information from system, exception message:\"\n              + e.getMessage() + \" continue...\";\n      LOG.warn(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[YarnException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9139. Simplify initializer code of GpuDiscoverer. Contributed by Szilard Nemeth.\n",
          "commitDate": "01/03/19 5:54 AM",
          "commitName": "dcaca19871a7aefc1f33cb6cb543ad4768ec6b50",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/02/19 10:00 PM",
          "commitNameOld": "5e91ebd91a405e1585ef02b8fbf03f10d1398adf",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 4.33,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,18 @@\n-  public synchronized void initialize(Configuration conf) {\n-    this.conf \u003d conf;\n+  public synchronized void initialize(Configuration config)\n+      throws YarnException {\n+    this.conf \u003d config;\n     numOfErrorExecutionSinceLastSucceed \u003d 0;\n-    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n-        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n-    if (pathToExecutable.isEmpty()) {\n-      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n-    }\n-\n-    File binaryPath \u003d new File(pathToExecutable);\n-    if (!binaryPath.exists()) {\n-      // When binary not exist, use default setting.\n-      boolean found \u003d false;\n-      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n-        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n-        if (binaryPath.exists()) {\n-          found \u003d true;\n-          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n-          break;\n-        }\n-      }\n-\n-      if (!found) {\n-        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n-            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n-            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n-      }\n-    } else{\n-      // If path specified by user is a directory, use\n-      if (binaryPath.isDirectory()) {\n-        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n-        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n-            + \" under the directory, updated path-to-executable:\" + binaryPath\n-            .getAbsolutePath());\n-      }\n-      // Validated\n-      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n-    }\n+    lookUpAutoDiscoveryBinary(config);\n \n     // Try to discover GPU information once and print\n     try {\n       LOG.info(\"Trying to discover GPU information ...\");\n       GpuDeviceInformation info \u003d getGpuDeviceInformation();\n-      LOG.info(info.toString());\n+      LOG.info(\"Discovered GPU information: \" + info.toString());\n     } catch (YarnException e) {\n       String msg \u003d\n           \"Failed to discover GPU information from system, exception message:\"\n               + e.getMessage() + \" continue...\";\n       LOG.warn(msg);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration config)\n      throws YarnException {\n    this.conf \u003d config;\n    numOfErrorExecutionSinceLastSucceed \u003d 0;\n    lookUpAutoDiscoveryBinary(config);\n\n    // Try to discover GPU information once and print\n    try {\n      LOG.info(\"Trying to discover GPU information ...\");\n      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n      LOG.info(\"Discovered GPU information: \" + info.toString());\n    } catch (YarnException e) {\n      String msg \u003d\n          \"Failed to discover GPU information from system, exception message:\"\n              + e.getMessage() + \" continue...\";\n      LOG.warn(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {}
        }
      ]
    },
    "95fbbfed75dd309b5d56032ece64996165572287": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-9118. Handle exceptions with parsing user defined GPU devices in GpuDiscoverer. Contributed by Szilard Nemeth.\n",
      "commitDate": "22/02/19 6:52 AM",
      "commitName": "95fbbfed75dd309b5d56032ece64996165572287",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-9118. Handle exceptions with parsing user defined GPU devices in GpuDiscoverer. Contributed by Szilard Nemeth.\n",
          "commitDate": "22/02/19 6:52 AM",
          "commitName": "95fbbfed75dd309b5d56032ece64996165572287",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/10/17 10:38 PM",
          "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 481.38,
          "commitsBetweenForRepo": 4153,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,51 @@\n-  public synchronized void initialize(Configuration conf) throws YarnException {\n+  public synchronized void initialize(Configuration conf) {\n     this.conf \u003d conf;\n     numOfErrorExecutionSinceLastSucceed \u003d 0;\n     String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n         YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n     if (pathToExecutable.isEmpty()) {\n       pathToExecutable \u003d DEFAULT_BINARY_NAME;\n     }\n \n-    // Validate file existence\n     File binaryPath \u003d new File(pathToExecutable);\n-\n     if (!binaryPath.exists()) {\n       // When binary not exist, use default setting.\n       boolean found \u003d false;\n       for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n         binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n         if (binaryPath.exists()) {\n           found \u003d true;\n           pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n           break;\n         }\n       }\n \n       if (!found) {\n         LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n             + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n             + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n       }\n     } else{\n       // If path specified by user is a directory, use\n       if (binaryPath.isDirectory()) {\n         binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n         LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n             + \" under the directory, updated path-to-executable:\" + binaryPath\n             .getAbsolutePath());\n       }\n       // Validated\n       pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n     }\n \n     // Try to discover GPU information once and print\n     try {\n       LOG.info(\"Trying to discover GPU information ...\");\n       GpuDeviceInformation info \u003d getGpuDeviceInformation();\n       LOG.info(info.toString());\n     } catch (YarnException e) {\n       String msg \u003d\n           \"Failed to discover GPU information from system, exception message:\"\n               + e.getMessage() + \" continue...\";\n       LOG.warn(msg);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration conf) {\n    this.conf \u003d conf;\n    numOfErrorExecutionSinceLastSucceed \u003d 0;\n    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n    if (pathToExecutable.isEmpty()) {\n      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n    }\n\n    File binaryPath \u003d new File(pathToExecutable);\n    if (!binaryPath.exists()) {\n      // When binary not exist, use default setting.\n      boolean found \u003d false;\n      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n        if (binaryPath.exists()) {\n          found \u003d true;\n          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n          break;\n        }\n      }\n\n      if (!found) {\n        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n      }\n    } else{\n      // If path specified by user is a directory, use\n      if (binaryPath.isDirectory()) {\n        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n            + \" under the directory, updated path-to-executable:\" + binaryPath\n            .getAbsolutePath());\n      }\n      // Validated\n      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n    }\n\n    // Try to discover GPU information once and print\n    try {\n      LOG.info(\"Trying to discover GPU information ...\");\n      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n      LOG.info(info.toString());\n    } catch (YarnException e) {\n      String msg \u003d\n          \"Failed to discover GPU information from system, exception message:\"\n              + e.getMessage() + \" continue...\";\n      LOG.warn(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "[YarnException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9118. Handle exceptions with parsing user defined GPU devices in GpuDiscoverer. Contributed by Szilard Nemeth.\n",
          "commitDate": "22/02/19 6:52 AM",
          "commitName": "95fbbfed75dd309b5d56032ece64996165572287",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/10/17 10:38 PM",
          "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 481.38,
          "commitsBetweenForRepo": 4153,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,51 @@\n-  public synchronized void initialize(Configuration conf) throws YarnException {\n+  public synchronized void initialize(Configuration conf) {\n     this.conf \u003d conf;\n     numOfErrorExecutionSinceLastSucceed \u003d 0;\n     String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n         YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n     if (pathToExecutable.isEmpty()) {\n       pathToExecutable \u003d DEFAULT_BINARY_NAME;\n     }\n \n-    // Validate file existence\n     File binaryPath \u003d new File(pathToExecutable);\n-\n     if (!binaryPath.exists()) {\n       // When binary not exist, use default setting.\n       boolean found \u003d false;\n       for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n         binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n         if (binaryPath.exists()) {\n           found \u003d true;\n           pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n           break;\n         }\n       }\n \n       if (!found) {\n         LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n             + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n             + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n       }\n     } else{\n       // If path specified by user is a directory, use\n       if (binaryPath.isDirectory()) {\n         binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n         LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n             + \" under the directory, updated path-to-executable:\" + binaryPath\n             .getAbsolutePath());\n       }\n       // Validated\n       pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n     }\n \n     // Try to discover GPU information once and print\n     try {\n       LOG.info(\"Trying to discover GPU information ...\");\n       GpuDeviceInformation info \u003d getGpuDeviceInformation();\n       LOG.info(info.toString());\n     } catch (YarnException e) {\n       String msg \u003d\n           \"Failed to discover GPU information from system, exception message:\"\n               + e.getMessage() + \" continue...\";\n       LOG.warn(msg);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void initialize(Configuration conf) {\n    this.conf \u003d conf;\n    numOfErrorExecutionSinceLastSucceed \u003d 0;\n    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n    if (pathToExecutable.isEmpty()) {\n      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n    }\n\n    File binaryPath \u003d new File(pathToExecutable);\n    if (!binaryPath.exists()) {\n      // When binary not exist, use default setting.\n      boolean found \u003d false;\n      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n        if (binaryPath.exists()) {\n          found \u003d true;\n          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n          break;\n        }\n      }\n\n      if (!found) {\n        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n      }\n    } else{\n      // If path specified by user is a directory, use\n      if (binaryPath.isDirectory()) {\n        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n            + \" under the directory, updated path-to-executable:\" + binaryPath\n            .getAbsolutePath());\n      }\n      // Validated\n      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n    }\n\n    // Try to discover GPU information once and print\n    try {\n      LOG.info(\"Trying to discover GPU information ...\");\n      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n      LOG.info(info.toString());\n    } catch (YarnException e) {\n      String msg \u003d\n          \"Failed to discover GPU information from system, exception message:\"\n              + e.getMessage() + \" continue...\";\n      LOG.warn(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {}
        }
      ]
    },
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6620. Add support in NodeManager to isolate GPU devices by using CGroups. Contributed by Wangda Tan.\n",
      "commitDate": "11/10/17 11:14 AM",
      "commitName": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,53 @@\n+  public synchronized void initialize(Configuration conf) throws YarnException {\n+    this.conf \u003d conf;\n+    numOfErrorExecutionSinceLastSucceed \u003d 0;\n+    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n+        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n+    if (pathToExecutable.isEmpty()) {\n+      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n+    }\n+\n+    // Validate file existence\n+    File binaryPath \u003d new File(pathToExecutable);\n+\n+    if (!binaryPath.exists()) {\n+      // When binary not exist, use default setting.\n+      boolean found \u003d false;\n+      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n+        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n+        if (binaryPath.exists()) {\n+          found \u003d true;\n+          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n+          break;\n+        }\n+      }\n+\n+      if (!found) {\n+        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n+            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n+            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n+      }\n+    } else{\n+      // If path specified by user is a directory, use\n+      if (binaryPath.isDirectory()) {\n+        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n+        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n+            + \" under the directory, updated path-to-executable:\" + binaryPath\n+            .getAbsolutePath());\n+      }\n+      // Validated\n+      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n+    }\n+\n+    // Try to discover GPU information once and print\n+    try {\n+      LOG.info(\"Trying to discover GPU information ...\");\n+      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n+      LOG.info(info.toString());\n+    } catch (YarnException e) {\n+      String msg \u003d\n+          \"Failed to discover GPU information from system, exception message:\"\n+              + e.getMessage() + \" continue...\";\n+      LOG.warn(msg);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void initialize(Configuration conf) throws YarnException {\n    this.conf \u003d conf;\n    numOfErrorExecutionSinceLastSucceed \u003d 0;\n    String pathToExecutable \u003d conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,\n        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);\n    if (pathToExecutable.isEmpty()) {\n      pathToExecutable \u003d DEFAULT_BINARY_NAME;\n    }\n\n    // Validate file existence\n    File binaryPath \u003d new File(pathToExecutable);\n\n    if (!binaryPath.exists()) {\n      // When binary not exist, use default setting.\n      boolean found \u003d false;\n      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n        binaryPath \u003d new File(dir, DEFAULT_BINARY_NAME);\n        if (binaryPath.exists()) {\n          found \u003d true;\n          pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n          break;\n        }\n      }\n\n      if (!found) {\n        LOG.warn(\"Failed to locate binary at:\" + binaryPath.getAbsolutePath()\n            + \", please double check [\" + YarnConfiguration.NM_GPU_PATH_TO_EXEC\n            + \"] setting. Now use \" + \"default binary:\" + DEFAULT_BINARY_NAME);\n      }\n    } else{\n      // If path specified by user is a directory, use\n      if (binaryPath.isDirectory()) {\n        binaryPath \u003d new File(binaryPath, DEFAULT_BINARY_NAME);\n        LOG.warn(\"Specified path is a directory, use \" + DEFAULT_BINARY_NAME\n            + \" under the directory, updated path-to-executable:\" + binaryPath\n            .getAbsolutePath());\n      }\n      // Validated\n      pathOfGpuBinary \u003d binaryPath.getAbsolutePath();\n    }\n\n    // Try to discover GPU information once and print\n    try {\n      LOG.info(\"Trying to discover GPU information ...\");\n      GpuDeviceInformation info \u003d getGpuDeviceInformation();\n      LOG.info(info.toString());\n    } catch (YarnException e) {\n      String msg \u003d\n          \"Failed to discover GPU information from system, exception message:\"\n              + e.getMessage() + \" continue...\";\n      LOG.warn(msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java"
    }
  }
}