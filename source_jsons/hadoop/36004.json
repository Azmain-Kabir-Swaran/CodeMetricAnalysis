{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "getServiceStatus",
  "functionId": "getServiceStatus",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 381,
  "functionEndLine": 391,
  "numCommitsSeen": 83,
  "timeTaken": 3623,
  "changeHistory": [
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "a6410a542e59acd9827457df4a257a843f785c29",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "03510d00f48137fe4273c3e694e87fc0e660a706",
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456"
  ],
  "changeHistoryShort": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "a6410a542e59acd9827457df4a257a843f785c29": "Ybodychange",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": "Ybodychange",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": "Ybodychange",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ymultichange(Ymovefromfile,Ybodychange)",
    "03510d00f48137fe4273c3e694e87fc0e660a706": "Ybodychange",
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/05/17 2:44 PM",
      "commitNameOld": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 75.35,
      "commitsBetweenForRepo": 358,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n     checkAccess(\"getServiceState\");\n-    HAServiceState haState \u003d rmContext.getHAServiceState();\n+    HAServiceState haState \u003d rm.getRMContext().getHAServiceState();\n     HAServiceStatus ret \u003d new HAServiceStatus(haState);\n     if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n       ret.setReadyToBecomeActive();\n     } else {\n       ret.setNotReadyToBecomeActive(\"State is \" + haState);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    HAServiceState haState \u003d rm.getRMContext().getHAServiceState();\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "commitDateOld": "31/10/16 4:26 PM",
      "commitNameOld": "733aa993134ba324c712590fa92b8ef230b0839a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 39.07,
      "commitsBetweenForRepo": 299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,11 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n     checkAccess(\"getServiceState\");\n-    if (curatorEnabled) {\n-      HAServiceStatus state;\n-      if (rmContext.getLeaderElectorService().hasLeaderShip()) {\n-        state \u003d new HAServiceStatus(HAServiceState.ACTIVE);\n-      } else {\n-        state \u003d new HAServiceStatus(HAServiceState.STANDBY);\n-      }\n-      // set empty string to avoid NPE at\n-      // HAServiceProtocolServerSideTranslatorPB#getServiceStatus\n-      state.setNotReadyToBecomeActive(\"\");\n-      return state;\n+    HAServiceState haState \u003d rmContext.getHAServiceState();\n+    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n+    if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n+      ret.setReadyToBecomeActive();\n     } else {\n-      HAServiceState haState \u003d rmContext.getHAServiceState();\n-      HAServiceStatus ret \u003d new HAServiceStatus(haState);\n-      if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n-        ret.setReadyToBecomeActive();\n-      } else {\n-        ret.setNotReadyToBecomeActive(\"State is \" + haState);\n-      }\n-      return ret;\n+      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n     }\n+    return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    HAServiceState haState \u003d rmContext.getHAServiceState();\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4438. Implement RM leader election with curator. Contributed by Jian He\n",
      "commitDate": "07/01/16 2:33 PM",
      "commitName": "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
      "commitAuthor": "Xuan",
      "commitDateOld": "10/10/15 10:51 PM",
      "commitNameOld": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 88.7,
      "commitsBetweenForRepo": 600,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,24 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n     checkAccess(\"getServiceState\");\n-    HAServiceState haState \u003d rmContext.getHAServiceState();\n-    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n-    if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n-      ret.setReadyToBecomeActive();\n+    if (curatorEnabled) {\n+      HAServiceStatus state;\n+      if (rmContext.getLeaderElectorService().hasLeaderShip()) {\n+        state \u003d new HAServiceStatus(HAServiceState.ACTIVE);\n+      } else {\n+        state \u003d new HAServiceStatus(HAServiceState.STANDBY);\n+      }\n+      // set empty string to avoid NPE at\n+      // HAServiceProtocolServerSideTranslatorPB#getServiceStatus\n+      state.setNotReadyToBecomeActive(\"\");\n+      return state;\n     } else {\n-      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n+      HAServiceState haState \u003d rmContext.getHAServiceState();\n+      HAServiceStatus ret \u003d new HAServiceStatus(haState);\n+      if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n+        ret.setReadyToBecomeActive();\n+      } else {\n+        ret.setNotReadyToBecomeActive(\"State is \" + haState);\n+      }\n+      return ret;\n     }\n-    return ret;\n-  } \n\\ No newline at end of file\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    if (curatorEnabled) {\n      HAServiceStatus state;\n      if (rmContext.getLeaderElectorService().hasLeaderShip()) {\n        state \u003d new HAServiceStatus(HAServiceState.ACTIVE);\n      } else {\n        state \u003d new HAServiceStatus(HAServiceState.STANDBY);\n      }\n      // set empty string to avoid NPE at\n      // HAServiceProtocolServerSideTranslatorPB#getServiceStatus\n      state.setNotReadyToBecomeActive(\"\");\n      return state;\n    } else {\n      HAServiceState haState \u003d rmContext.getHAServiceState();\n      HAServiceStatus ret \u003d new HAServiceStatus(haState);\n      if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n        ret.setReadyToBecomeActive();\n      } else {\n        ret.setNotReadyToBecomeActive(\"State is \" + haState);\n      }\n      return ret;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 7:13 AM",
      "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/12/13 2:18 PM",
      "commitNameOld": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.7,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n     checkAccess(\"getServiceState\");\n+    HAServiceState haState \u003d rmContext.getHAServiceState();\n     HAServiceStatus ret \u003d new HAServiceStatus(haState);\n-    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE || haState \u003d\u003d\n-        HAServiceProtocol.HAServiceState.STANDBY) {\n+    if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n       ret.setReadyToBecomeActive();\n     } else {\n       ret.setNotReadyToBecomeActive(\"State is \" + haState);\n     }\n     return ret;\n-  }\n\\ No newline at end of file\n+  } \n\\ No newline at end of file\n",
      "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    HAServiceState haState \u003d rmContext.getHAServiceState();\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (isRMActive() || haState \u003d\u003d HAServiceProtocol.HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  } ",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/12/13 12:18 PM",
          "commitNameOld": "38a04a3042c5af455605bd3477358893700e2a9d",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n     checkAccess(\"getServiceState\");\n     HAServiceStatus ret \u003d new HAServiceStatus(haState);\n-    if (haState \u003d\u003d HAServiceState.ACTIVE || haState \u003d\u003d HAServiceState.STANDBY) {\n+    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE || haState \u003d\u003d\n+        HAServiceProtocol.HAServiceState.STANDBY) {\n       ret.setReadyToBecomeActive();\n     } else {\n       ret.setNotReadyToBecomeActive(\"State is \" + haState);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE || haState \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
            "oldMethodName": "getServiceStatus",
            "newMethodName": "getServiceStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/12/13 12:18 PM",
          "commitNameOld": "38a04a3042c5af455605bd3477358893700e2a9d",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n     checkAccess(\"getServiceState\");\n     HAServiceStatus ret \u003d new HAServiceStatus(haState);\n-    if (haState \u003d\u003d HAServiceState.ACTIVE || haState \u003d\u003d HAServiceState.STANDBY) {\n+    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE || haState \u003d\u003d\n+        HAServiceProtocol.HAServiceState.STANDBY) {\n       ret.setReadyToBecomeActive();\n     } else {\n       ret.setNotReadyToBecomeActive(\"State is \" + haState);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (haState \u003d\u003d HAServiceProtocol.HAServiceState.ACTIVE || haState \u003d\u003d\n        HAServiceProtocol.HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "03510d00f48137fe4273c3e694e87fc0e660a706": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1068. Add admin support for HA operations (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/13 2:03 PM",
      "commitName": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "22/10/13 6:10 PM",
      "commitNameOld": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 6.83,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   public synchronized HAServiceStatus getServiceStatus() throws IOException {\n+    checkAccess(\"getServiceState\");\n     HAServiceStatus ret \u003d new HAServiceStatus(haState);\n     if (haState \u003d\u003d HAServiceState.ACTIVE || haState \u003d\u003d HAServiceState.STANDBY) {\n       ret.setReadyToBecomeActive();\n     } else {\n       ret.setNotReadyToBecomeActive(\"State is \" + haState);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    checkAccess(\"getServiceState\");\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (haState \u003d\u003d HAServiceState.ACTIVE || haState \u003d\u003d HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
      "extendedDetails": {}
    },
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1027. Implement RMHAProtocolService (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1523750 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/09/13 11:33 AM",
      "commitName": "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,9 @@\n+  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n+    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n+    if (haState \u003d\u003d HAServiceState.ACTIVE || haState \u003d\u003d HAServiceState.STANDBY) {\n+      ret.setReadyToBecomeActive();\n+    } else {\n+      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized HAServiceStatus getServiceStatus() throws IOException {\n    HAServiceStatus ret \u003d new HAServiceStatus(haState);\n    if (haState \u003d\u003d HAServiceState.ACTIVE || haState \u003d\u003d HAServiceState.STANDBY) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(\"State is \" + haState);\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java"
    }
  }
}