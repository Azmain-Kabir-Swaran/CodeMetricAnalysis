{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSFileSystem.java",
  "functionName": "rename",
  "functionId": "rename___srcPath-Path__dstPath-Path",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
  "functionStartLine": 604,
  "functionEndLine": 668,
  "numCommitsSeen": 22,
  "timeTaken": 1787,
  "changeHistory": [
    "568d3ab8b65d1348dec9c971feffe200e6cba2ef",
    "040a202b202a37f3b922cd321eb0a8ded457d88b",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
    "a5d5342228050a778b20e95adf7885bdba39985d"
  ],
  "changeHistoryShort": {
    "568d3ab8b65d1348dec9c971feffe200e6cba2ef": "Ybodychange",
    "040a202b202a37f3b922cd321eb0a8ded457d88b": "Ybodychange",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": "Ybodychange",
    "a5d5342228050a778b20e95adf7885bdba39985d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "568d3ab8b65d1348dec9c971feffe200e6cba2ef": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16191. AliyunOSS: improvements for copyFile/copyDirectory and logging. Contributed by wujinhu.\n",
      "commitDate": "18/03/19 6:55 PM",
      "commitName": "568d3ab8b65d1348dec9c971feffe200e6cba2ef",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "03/01/19 5:37 AM",
      "commitNameOld": "040a202b202a37f3b922cd321eb0a8ded457d88b",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 74.51,
      "commitsBetweenForRepo": 596,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,65 @@\n   public boolean rename(Path srcPath, Path dstPath) throws IOException {\n     if (srcPath.isRoot()) {\n       // Cannot rename root of file system\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename the root of a filesystem\");\n       }\n       return false;\n     }\n     Path parent \u003d dstPath.getParent();\n     while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n       parent \u003d parent.getParent();\n     }\n     if (parent !\u003d null) {\n       return false;\n     }\n     FileStatus srcStatus \u003d getFileStatus(srcPath);\n     FileStatus dstStatus;\n     try {\n       dstStatus \u003d getFileStatus(dstPath);\n     } catch (FileNotFoundException fnde) {\n       dstStatus \u003d null;\n     }\n     if (dstStatus \u003d\u003d null) {\n       // If dst doesn\u0027t exist, check whether dst dir exists or not\n       dstStatus \u003d getFileStatus(dstPath.getParent());\n       if (!dstStatus.isDirectory()) {\n         throw new IOException(String.format(\n             \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n             dstPath.getParent()));\n       }\n     } else {\n       if (srcStatus.getPath().equals(dstStatus.getPath())) {\n         return !srcStatus.isDirectory();\n       } else if (dstStatus.isDirectory()) {\n         // If dst is a directory\n         dstPath \u003d new Path(dstPath, srcPath.getName());\n         FileStatus[] statuses;\n         try {\n           statuses \u003d listStatus(dstPath);\n         } catch (FileNotFoundException fnde) {\n           statuses \u003d null;\n         }\n         if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n           // If dst exists and not a directory / not empty\n           throw new FileAlreadyExistsException(String.format(\n               \"Failed to rename %s to %s, file already exists or not empty!\",\n               srcPath, dstPath));\n         }\n       } else {\n         // If dst is not a directory\n         throw new FileAlreadyExistsException(String.format(\n             \"Failed to rename %s to %s, file already exists!\", srcPath,\n             dstPath));\n       }\n     }\n+\n+    boolean succeed;\n     if (srcStatus.isDirectory()) {\n-      copyDirectory(srcPath, dstPath);\n+      succeed \u003d copyDirectory(srcPath, dstPath);\n     } else {\n-      copyFile(srcPath, srcStatus.getLen(), dstPath);\n+      succeed \u003d copyFile(srcPath, srcStatus.getLen(), dstPath);\n     }\n \n-    return srcPath.equals(dstPath) || delete(srcPath, true);\n+    return srcPath.equals(dstPath) || (succeed \u0026\u0026 delete(srcPath, true));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path srcPath, Path dstPath) throws IOException {\n    if (srcPath.isRoot()) {\n      // Cannot rename root of file system\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename the root of a filesystem\");\n      }\n      return false;\n    }\n    Path parent \u003d dstPath.getParent();\n    while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n      parent \u003d parent.getParent();\n    }\n    if (parent !\u003d null) {\n      return false;\n    }\n    FileStatus srcStatus \u003d getFileStatus(srcPath);\n    FileStatus dstStatus;\n    try {\n      dstStatus \u003d getFileStatus(dstPath);\n    } catch (FileNotFoundException fnde) {\n      dstStatus \u003d null;\n    }\n    if (dstStatus \u003d\u003d null) {\n      // If dst doesn\u0027t exist, check whether dst dir exists or not\n      dstStatus \u003d getFileStatus(dstPath.getParent());\n      if (!dstStatus.isDirectory()) {\n        throw new IOException(String.format(\n            \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n            dstPath.getParent()));\n      }\n    } else {\n      if (srcStatus.getPath().equals(dstStatus.getPath())) {\n        return !srcStatus.isDirectory();\n      } else if (dstStatus.isDirectory()) {\n        // If dst is a directory\n        dstPath \u003d new Path(dstPath, srcPath.getName());\n        FileStatus[] statuses;\n        try {\n          statuses \u003d listStatus(dstPath);\n        } catch (FileNotFoundException fnde) {\n          statuses \u003d null;\n        }\n        if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n          // If dst exists and not a directory / not empty\n          throw new FileAlreadyExistsException(String.format(\n              \"Failed to rename %s to %s, file already exists or not empty!\",\n              srcPath, dstPath));\n        }\n      } else {\n        // If dst is not a directory\n        throw new FileAlreadyExistsException(String.format(\n            \"Failed to rename %s to %s, file already exists!\", srcPath,\n            dstPath));\n      }\n    }\n\n    boolean succeed;\n    if (srcStatus.isDirectory()) {\n      succeed \u003d copyDirectory(srcPath, dstPath);\n    } else {\n      succeed \u003d copyFile(srcPath, srcStatus.getLen(), dstPath);\n    }\n\n    return srcPath.equals(dstPath) || (succeed \u0026\u0026 delete(srcPath, true));\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "040a202b202a37f3b922cd321eb0a8ded457d88b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15323. AliyunOSS: Improve copy file performance for AliyunOSSFileSystemStore. Contributed wujinhu.\n",
      "commitDate": "03/01/19 5:37 AM",
      "commitName": "040a202b202a37f3b922cd321eb0a8ded457d88b",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "22/11/18 9:56 PM",
      "commitNameOld": "5ff0cf86a940fd83f1425794921cc075b19f1108",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 41.32,
      "commitsBetweenForRepo": 237,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,63 @@\n   public boolean rename(Path srcPath, Path dstPath) throws IOException {\n     if (srcPath.isRoot()) {\n       // Cannot rename root of file system\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename the root of a filesystem\");\n       }\n       return false;\n     }\n     Path parent \u003d dstPath.getParent();\n     while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n       parent \u003d parent.getParent();\n     }\n     if (parent !\u003d null) {\n       return false;\n     }\n     FileStatus srcStatus \u003d getFileStatus(srcPath);\n     FileStatus dstStatus;\n     try {\n       dstStatus \u003d getFileStatus(dstPath);\n     } catch (FileNotFoundException fnde) {\n       dstStatus \u003d null;\n     }\n     if (dstStatus \u003d\u003d null) {\n       // If dst doesn\u0027t exist, check whether dst dir exists or not\n       dstStatus \u003d getFileStatus(dstPath.getParent());\n       if (!dstStatus.isDirectory()) {\n         throw new IOException(String.format(\n             \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n             dstPath.getParent()));\n       }\n     } else {\n       if (srcStatus.getPath().equals(dstStatus.getPath())) {\n         return !srcStatus.isDirectory();\n       } else if (dstStatus.isDirectory()) {\n         // If dst is a directory\n         dstPath \u003d new Path(dstPath, srcPath.getName());\n         FileStatus[] statuses;\n         try {\n           statuses \u003d listStatus(dstPath);\n         } catch (FileNotFoundException fnde) {\n           statuses \u003d null;\n         }\n         if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n           // If dst exists and not a directory / not empty\n           throw new FileAlreadyExistsException(String.format(\n               \"Failed to rename %s to %s, file already exists or not empty!\",\n               srcPath, dstPath));\n         }\n       } else {\n         // If dst is not a directory\n         throw new FileAlreadyExistsException(String.format(\n             \"Failed to rename %s to %s, file already exists!\", srcPath,\n             dstPath));\n       }\n     }\n     if (srcStatus.isDirectory()) {\n       copyDirectory(srcPath, dstPath);\n     } else {\n-      copyFile(srcPath, dstPath);\n+      copyFile(srcPath, srcStatus.getLen(), dstPath);\n     }\n \n     return srcPath.equals(dstPath) || delete(srcPath, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path srcPath, Path dstPath) throws IOException {\n    if (srcPath.isRoot()) {\n      // Cannot rename root of file system\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename the root of a filesystem\");\n      }\n      return false;\n    }\n    Path parent \u003d dstPath.getParent();\n    while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n      parent \u003d parent.getParent();\n    }\n    if (parent !\u003d null) {\n      return false;\n    }\n    FileStatus srcStatus \u003d getFileStatus(srcPath);\n    FileStatus dstStatus;\n    try {\n      dstStatus \u003d getFileStatus(dstPath);\n    } catch (FileNotFoundException fnde) {\n      dstStatus \u003d null;\n    }\n    if (dstStatus \u003d\u003d null) {\n      // If dst doesn\u0027t exist, check whether dst dir exists or not\n      dstStatus \u003d getFileStatus(dstPath.getParent());\n      if (!dstStatus.isDirectory()) {\n        throw new IOException(String.format(\n            \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n            dstPath.getParent()));\n      }\n    } else {\n      if (srcStatus.getPath().equals(dstStatus.getPath())) {\n        return !srcStatus.isDirectory();\n      } else if (dstStatus.isDirectory()) {\n        // If dst is a directory\n        dstPath \u003d new Path(dstPath, srcPath.getName());\n        FileStatus[] statuses;\n        try {\n          statuses \u003d listStatus(dstPath);\n        } catch (FileNotFoundException fnde) {\n          statuses \u003d null;\n        }\n        if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n          // If dst exists and not a directory / not empty\n          throw new FileAlreadyExistsException(String.format(\n              \"Failed to rename %s to %s, file already exists or not empty!\",\n              srcPath, dstPath));\n        }\n      } else {\n        // If dst is not a directory\n        throw new FileAlreadyExistsException(String.format(\n            \"Failed to rename %s to %s, file already exists!\", srcPath,\n            dstPath));\n      }\n    }\n    if (srcStatus.isDirectory()) {\n      copyDirectory(srcPath, dstPath);\n    } else {\n      copyFile(srcPath, srcStatus.getLen(), dstPath);\n    }\n\n    return srcPath.equals(dstPath) || delete(srcPath, true);\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13529. Do some code refactoring. Contributed by Genmao Yu.\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
      "commitAuthor": "Mingfei",
      "commitDateOld": "06/09/16 8:15 PM",
      "commitNameOld": "cdb77110e77b70ed0c1125b2a6a422a8c7c28ec7",
      "commitAuthorOld": "Mingfei",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,63 @@\n   public boolean rename(Path srcPath, Path dstPath) throws IOException {\n     if (srcPath.isRoot()) {\n       // Cannot rename root of file system\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename the root of a filesystem\");\n       }\n       return false;\n     }\n     Path parent \u003d dstPath.getParent();\n     while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n       parent \u003d parent.getParent();\n     }\n     if (parent !\u003d null) {\n       return false;\n     }\n     FileStatus srcStatus \u003d getFileStatus(srcPath);\n     FileStatus dstStatus;\n     try {\n       dstStatus \u003d getFileStatus(dstPath);\n     } catch (FileNotFoundException fnde) {\n       dstStatus \u003d null;\n     }\n     if (dstStatus \u003d\u003d null) {\n       // If dst doesn\u0027t exist, check whether dst dir exists or not\n       dstStatus \u003d getFileStatus(dstPath.getParent());\n       if (!dstStatus.isDirectory()) {\n         throw new IOException(String.format(\n             \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n             dstPath.getParent()));\n       }\n     } else {\n       if (srcStatus.getPath().equals(dstStatus.getPath())) {\n         return !srcStatus.isDirectory();\n       } else if (dstStatus.isDirectory()) {\n         // If dst is a directory\n         dstPath \u003d new Path(dstPath, srcPath.getName());\n         FileStatus[] statuses;\n         try {\n           statuses \u003d listStatus(dstPath);\n         } catch (FileNotFoundException fnde) {\n           statuses \u003d null;\n         }\n         if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n           // If dst exists and not a directory / not empty\n           throw new FileAlreadyExistsException(String.format(\n               \"Failed to rename %s to %s, file already exists or not empty!\",\n               srcPath, dstPath));\n         }\n       } else {\n         // If dst is not a directory\n         throw new FileAlreadyExistsException(String.format(\n             \"Failed to rename %s to %s, file already exists!\", srcPath,\n             dstPath));\n       }\n     }\n     if (srcStatus.isDirectory()) {\n       copyDirectory(srcPath, dstPath);\n     } else {\n       copyFile(srcPath, dstPath);\n     }\n-    if (srcPath.equals(dstPath)) {\n-      return true;\n-    } else {\n-      return delete(srcPath, true);\n-    }\n+\n+    return srcPath.equals(dstPath) || delete(srcPath, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path srcPath, Path dstPath) throws IOException {\n    if (srcPath.isRoot()) {\n      // Cannot rename root of file system\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename the root of a filesystem\");\n      }\n      return false;\n    }\n    Path parent \u003d dstPath.getParent();\n    while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n      parent \u003d parent.getParent();\n    }\n    if (parent !\u003d null) {\n      return false;\n    }\n    FileStatus srcStatus \u003d getFileStatus(srcPath);\n    FileStatus dstStatus;\n    try {\n      dstStatus \u003d getFileStatus(dstPath);\n    } catch (FileNotFoundException fnde) {\n      dstStatus \u003d null;\n    }\n    if (dstStatus \u003d\u003d null) {\n      // If dst doesn\u0027t exist, check whether dst dir exists or not\n      dstStatus \u003d getFileStatus(dstPath.getParent());\n      if (!dstStatus.isDirectory()) {\n        throw new IOException(String.format(\n            \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n            dstPath.getParent()));\n      }\n    } else {\n      if (srcStatus.getPath().equals(dstStatus.getPath())) {\n        return !srcStatus.isDirectory();\n      } else if (dstStatus.isDirectory()) {\n        // If dst is a directory\n        dstPath \u003d new Path(dstPath, srcPath.getName());\n        FileStatus[] statuses;\n        try {\n          statuses \u003d listStatus(dstPath);\n        } catch (FileNotFoundException fnde) {\n          statuses \u003d null;\n        }\n        if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n          // If dst exists and not a directory / not empty\n          throw new FileAlreadyExistsException(String.format(\n              \"Failed to rename %s to %s, file already exists or not empty!\",\n              srcPath, dstPath));\n        }\n      } else {\n        // If dst is not a directory\n        throw new FileAlreadyExistsException(String.format(\n            \"Failed to rename %s to %s, file already exists!\", srcPath,\n            dstPath));\n      }\n    }\n    if (srcStatus.isDirectory()) {\n      copyDirectory(srcPath, dstPath);\n    } else {\n      copyFile(srcPath, dstPath);\n    }\n\n    return srcPath.equals(dstPath) || delete(srcPath, true);\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "a5d5342228050a778b20e95adf7885bdba39985d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12756. Incorporate Aliyun OSS file system implementation. Contributed by Mingfei Shi and Lin Zhou\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "a5d5342228050a778b20e95adf7885bdba39985d",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,66 @@\n+  public boolean rename(Path srcPath, Path dstPath) throws IOException {\n+    if (srcPath.isRoot()) {\n+      // Cannot rename root of file system\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Cannot rename the root of a filesystem\");\n+      }\n+      return false;\n+    }\n+    Path parent \u003d dstPath.getParent();\n+    while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n+      parent \u003d parent.getParent();\n+    }\n+    if (parent !\u003d null) {\n+      return false;\n+    }\n+    FileStatus srcStatus \u003d getFileStatus(srcPath);\n+    FileStatus dstStatus;\n+    try {\n+      dstStatus \u003d getFileStatus(dstPath);\n+    } catch (FileNotFoundException fnde) {\n+      dstStatus \u003d null;\n+    }\n+    if (dstStatus \u003d\u003d null) {\n+      // If dst doesn\u0027t exist, check whether dst dir exists or not\n+      dstStatus \u003d getFileStatus(dstPath.getParent());\n+      if (!dstStatus.isDirectory()) {\n+        throw new IOException(String.format(\n+            \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n+            dstPath.getParent()));\n+      }\n+    } else {\n+      if (srcStatus.getPath().equals(dstStatus.getPath())) {\n+        return !srcStatus.isDirectory();\n+      } else if (dstStatus.isDirectory()) {\n+        // If dst is a directory\n+        dstPath \u003d new Path(dstPath, srcPath.getName());\n+        FileStatus[] statuses;\n+        try {\n+          statuses \u003d listStatus(dstPath);\n+        } catch (FileNotFoundException fnde) {\n+          statuses \u003d null;\n+        }\n+        if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n+          // If dst exists and not a directory / not empty\n+          throw new FileAlreadyExistsException(String.format(\n+              \"Failed to rename %s to %s, file already exists or not empty!\",\n+              srcPath, dstPath));\n+        }\n+      } else {\n+        // If dst is not a directory\n+        throw new FileAlreadyExistsException(String.format(\n+            \"Failed to rename %s to %s, file already exists!\", srcPath,\n+            dstPath));\n+      }\n+    }\n+    if (srcStatus.isDirectory()) {\n+      copyDirectory(srcPath, dstPath);\n+    } else {\n+      copyFile(srcPath, dstPath);\n+    }\n+    if (srcPath.equals(dstPath)) {\n+      return true;\n+    } else {\n+      return delete(srcPath, true);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path srcPath, Path dstPath) throws IOException {\n    if (srcPath.isRoot()) {\n      // Cannot rename root of file system\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename the root of a filesystem\");\n      }\n      return false;\n    }\n    Path parent \u003d dstPath.getParent();\n    while (parent !\u003d null \u0026\u0026 !srcPath.equals(parent)) {\n      parent \u003d parent.getParent();\n    }\n    if (parent !\u003d null) {\n      return false;\n    }\n    FileStatus srcStatus \u003d getFileStatus(srcPath);\n    FileStatus dstStatus;\n    try {\n      dstStatus \u003d getFileStatus(dstPath);\n    } catch (FileNotFoundException fnde) {\n      dstStatus \u003d null;\n    }\n    if (dstStatus \u003d\u003d null) {\n      // If dst doesn\u0027t exist, check whether dst dir exists or not\n      dstStatus \u003d getFileStatus(dstPath.getParent());\n      if (!dstStatus.isDirectory()) {\n        throw new IOException(String.format(\n            \"Failed to rename %s to %s, %s is a file\", srcPath, dstPath,\n            dstPath.getParent()));\n      }\n    } else {\n      if (srcStatus.getPath().equals(dstStatus.getPath())) {\n        return !srcStatus.isDirectory();\n      } else if (dstStatus.isDirectory()) {\n        // If dst is a directory\n        dstPath \u003d new Path(dstPath, srcPath.getName());\n        FileStatus[] statuses;\n        try {\n          statuses \u003d listStatus(dstPath);\n        } catch (FileNotFoundException fnde) {\n          statuses \u003d null;\n        }\n        if (statuses !\u003d null \u0026\u0026 statuses.length \u003e 0) {\n          // If dst exists and not a directory / not empty\n          throw new FileAlreadyExistsException(String.format(\n              \"Failed to rename %s to %s, file already exists or not empty!\",\n              srcPath, dstPath));\n        }\n      } else {\n        // If dst is not a directory\n        throw new FileAlreadyExistsException(String.format(\n            \"Failed to rename %s to %s, file already exists!\", srcPath,\n            dstPath));\n      }\n    }\n    if (srcStatus.isDirectory()) {\n      copyDirectory(srcPath, dstPath);\n    } else {\n      copyFile(srcPath, dstPath);\n    }\n    if (srcPath.equals(dstPath)) {\n      return true;\n    } else {\n      return delete(srcPath, true);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java"
    }
  }
}