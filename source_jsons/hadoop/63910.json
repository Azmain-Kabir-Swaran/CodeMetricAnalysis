{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "getConfInputStream",
  "functionId": "getConfInputStream___resourceFile-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 445,
  "functionEndLine": 466,
  "numCommitsSeen": 41,
  "timeTaken": 2450,
  "changeHistory": [
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1"
  ],
  "changeHistoryShort": {
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Yfilerename",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ybodychange",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": "Ymodifierchange",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "4e5632d28eb8f6b1b8830c2aa89ec6321d477977",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static InputStream getConfInputStream(String resourceFile,\n      Configuration conf) throws IOException, YarnException {\n\n    ConfigurationProvider provider \u003d\n        ConfigurationProviderFactory.getConfigurationProvider(conf);\n    try {\n      provider.init(conf);\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n\n    InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n    if (ris \u003d\u003d null) {\n      if (conf.getResource(resourceFile) \u003d\u003d null) {\n        throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n      }\n      throw new IOException(\n          \"Unable to open resource types file \u0027\" + resourceFile\n              + \"\u0027. Using provider \" + provider);\n    }\n    return ris;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
      }
    },
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "239c1824a07fede71dd751ed2c1f40036b22170e",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n   private static InputStream getConfInputStream(String resourceFile,\n       Configuration conf) throws IOException, YarnException {\n \n     ConfigurationProvider provider \u003d\n         ConfigurationProviderFactory.getConfigurationProvider(conf);\n+    try {\n+      provider.init(conf);\n+    } catch (Exception e) {\n+      throw new IOException(e);\n+    }\n+\n     InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n     if (ris \u003d\u003d null) {\n       if (conf.getResource(resourceFile) \u003d\u003d null) {\n         throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n       }\n       throw new IOException(\n           \"Unable to open resource types file \u0027\" + resourceFile\n               + \"\u0027. Using provider \" + provider);\n     }\n     return ris;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static InputStream getConfInputStream(String resourceFile,\n      Configuration conf) throws IOException, YarnException {\n\n    ConfigurationProvider provider \u003d\n        ConfigurationProviderFactory.getConfigurationProvider(conf);\n    try {\n      provider.init(conf);\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n\n    InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n    if (ris \u003d\u003d null) {\n      if (conf.getResource(resourceFile) \u003d\u003d null) {\n        throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n      }\n      throw new IOException(\n          \"Unable to open resource types file \u0027\" + resourceFile\n              + \"\u0027. Using provider \" + provider);\n    }\n    return ris;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  static InputStream getConfInputStream(String resourceFile, Configuration conf)\n-      throws IOException, YarnException {\n+  private static InputStream getConfInputStream(String resourceFile,\n+      Configuration conf) throws IOException, YarnException {\n \n     ConfigurationProvider provider \u003d\n         ConfigurationProviderFactory.getConfigurationProvider(conf);\n     InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n     if (ris \u003d\u003d null) {\n       if (conf.getResource(resourceFile) \u003d\u003d null) {\n         throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n       }\n       throw new IOException(\n           \"Unable to open resource types file \u0027\" + resourceFile\n               + \"\u0027. Using provider \" + provider);\n     }\n     return ris;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static InputStream getConfInputStream(String resourceFile,\n      Configuration conf) throws IOException, YarnException {\n\n    ConfigurationProvider provider \u003d\n        ConfigurationProviderFactory.getConfigurationProvider(conf);\n    InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n    if (ris \u003d\u003d null) {\n      if (conf.getResource(resourceFile) \u003d\u003d null) {\n        throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n      }\n      throw new IOException(\n          \"Unable to open resource types file \u0027\" + resourceFile\n              + \"\u0027. Using provider \" + provider);\n    }\n    return ris;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[private, static]"
      }
    },
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4715. Add support to read resource types from a config file. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,16 @@\n+  static InputStream getConfInputStream(String resourceFile, Configuration conf)\n+      throws IOException, YarnException {\n+\n+    ConfigurationProvider provider \u003d\n+        ConfigurationProviderFactory.getConfigurationProvider(conf);\n+    InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n+    if (ris \u003d\u003d null) {\n+      if (conf.getResource(resourceFile) \u003d\u003d null) {\n+        throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n+      }\n+      throw new IOException(\n+          \"Unable to open resource types file \u0027\" + resourceFile\n+              + \"\u0027. Using provider \" + provider);\n+    }\n+    return ris;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static InputStream getConfInputStream(String resourceFile, Configuration conf)\n      throws IOException, YarnException {\n\n    ConfigurationProvider provider \u003d\n        ConfigurationProviderFactory.getConfigurationProvider(conf);\n    InputStream ris \u003d provider.getConfigurationInputStream(conf, resourceFile);\n    if (ris \u003d\u003d null) {\n      if (conf.getResource(resourceFile) \u003d\u003d null) {\n        throw new FileNotFoundException(\"Unable to find \" + resourceFile);\n      }\n      throw new IOException(\n          \"Unable to open resource types file \u0027\" + resourceFile\n              + \"\u0027. Using provider \" + provider);\n    }\n    return ris;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
    }
  }
}