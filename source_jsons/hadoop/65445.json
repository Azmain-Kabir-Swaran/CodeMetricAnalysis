{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3GuardTableAccess.java",
  "functionName": "next",
  "functionId": "next",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTableAccess.java",
  "functionStartLine": 214,
  "functionEndLine": 224,
  "numCommitsSeen": 3,
  "timeTaken": 1662,
  "changeHistory": [
    "4a700c20d553dc5336ee881719bcf189fc46bfbf",
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0"
  ],
  "changeHistoryShort": {
    "4a700c20d553dc5336ee881719bcf189fc46bfbf": "Ybodychange",
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4a700c20d553dc5336ee881719bcf189fc46bfbf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16520. Race condition in DDB table init and waiting threads.  (#1576). Contributed by Gabor Bota.\n\nFixes HADOOP-16349. DynamoDBMetadataStore.getVersionMarkerItem() to log at info/warn on retry\r\n\r\nChange-Id: Ia83e92b9039ccb780090c99c41b4f71ef7539d35",
      "commitDate": "11/10/19 3:08 AM",
      "commitName": "4a700c20d553dc5336ee881719bcf189fc46bfbf",
      "commitAuthor": "Gabor Bota",
      "commitDateOld": "12/07/19 5:02 AM",
      "commitNameOld": "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 90.92,
      "commitsBetweenForRepo": 798,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public DDBPathMetadata next() {\n       Item item \u003d it.next();\n       Pair\u003cString, String\u003e key \u003d primaryKey(item);\n-      if (VERSION_MARKER.equals(key.getLeft()) \u0026\u0026\n-          VERSION_MARKER.equals(key.getRight())) {\n+      if (VERSION_MARKER_ITEM_NAME.equals(key.getLeft()) \u0026\u0026\n+          VERSION_MARKER_ITEM_NAME.equals(key.getRight())) {\n         // a version marker is found, return the special type\n         return new VersionMarker(item);\n       } else {\n         return itemToPathMetadata(item, getUsername());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public DDBPathMetadata next() {\n      Item item \u003d it.next();\n      Pair\u003cString, String\u003e key \u003d primaryKey(item);\n      if (VERSION_MARKER_ITEM_NAME.equals(key.getLeft()) \u0026\u0026\n          VERSION_MARKER_ITEM_NAME.equals(key.getRight())) {\n        // a version marker is found, return the special type\n        return new VersionMarker(item);\n      } else {\n        return itemToPathMetadata(item, getUsername());\n      }\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTableAccess.java",
      "extendedDetails": {}
    },
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16384: S3A: Avoid inconsistencies between DDB and S3.\n\nContributed by Steve Loughran\n\nContains\n\n- HADOOP-16397. Hadoop S3Guard Prune command to support a -tombstone option.\n- HADOOP-16406. ITestDynamoDBMetadataStore.testProvisionTable times out intermittently\n\nThis patch doesn\u0027t fix the underlying problem but it\n\n* changes some tests to clean up better\n* does a lot more in logging operations in against DDB, if enabled\n* adds an entry point to dump the state of the metastore and s3 tables (precursor to fsck)\n* adds a purge entry point to help clean up after a test run has got a store into a mess\n* s3guard prune command adds -tombstone option to only clear tombstones\n\nThe outcome is that tests should pass consistently and if problems occur we have better diagnostics.\n\nChange-Id: I3eca3f5529d7f6fec398c0ff0472919f08f054eb\n",
      "commitDate": "12/07/19 5:02 AM",
      "commitName": "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,11 @@\n+    public DDBPathMetadata next() {\n+      Item item \u003d it.next();\n+      Pair\u003cString, String\u003e key \u003d primaryKey(item);\n+      if (VERSION_MARKER.equals(key.getLeft()) \u0026\u0026\n+          VERSION_MARKER.equals(key.getRight())) {\n+        // a version marker is found, return the special type\n+        return new VersionMarker(item);\n+      } else {\n+        return itemToPathMetadata(item, getUsername());\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public DDBPathMetadata next() {\n      Item item \u003d it.next();\n      Pair\u003cString, String\u003e key \u003d primaryKey(item);\n      if (VERSION_MARKER.equals(key.getLeft()) \u0026\u0026\n          VERSION_MARKER.equals(key.getRight())) {\n        // a version marker is found, return the special type\n        return new VersionMarker(item);\n      } else {\n        return itemToPathMetadata(item, getUsername());\n      }\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTableAccess.java"
    }
  }
}