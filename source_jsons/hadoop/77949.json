{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SetReplication.java",
  "functionName": "processPath",
  "functionId": "processPath___item-PathData",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java",
  "functionStartLine": 82,
  "functionEndLine": 103,
  "numCommitsSeen": 11,
  "timeTaken": 1260,
  "changeHistory": [
    "bbd68478d5743b3b2911bf3febed7daa89479e45",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "a5290c9eca69027cff2448d05fee6983cbb54cd7",
    "b9599b26dc92634674e9c609b6df9b8d2c408e6e"
  ],
  "changeHistoryShort": {
    "bbd68478d5743b3b2911bf3febed7daa89479e45": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "a5290c9eca69027cff2448d05fee6983cbb54cd7": "Ybodychange",
    "b9599b26dc92634674e9c609b6df9b8d2c408e6e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbd68478d5743b3b2911bf3febed7daa89479e45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11598. Improve -setrep for Erasure Coded files. Contributed by Yiqun Lin.\n",
      "commitDate": "03/04/17 7:57 AM",
      "commitName": "bbd68478d5743b3b2911bf3febed7daa89479e45",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "30/03/17 11:16 AM",
      "commitNameOld": "8c591b8d199325f49b5bba29240ca25610cf80a0",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 3.86,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,22 @@\n   protected void processPath(PathData item) throws IOException {\n     if (item.stat.isSymlink()) {\n       throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n     }\n     \n     if (item.stat.isFile()) {\n-      if (!item.fs.setReplication(item.path, newRep)) {\n-        throw new IOException(\"Could not set replication for: \" + item);\n+      // Do the checking if the file is erasure coded since\n+      // replication factor for an EC file is meaningless.\n+      if (!item.stat.isErasureCoded()) {\n+        if (!item.fs.setReplication(item.path, newRep)) {\n+          throw new IOException(\"Could not set replication for: \" + item);\n+        }\n+        out.println(\"Replication \" + newRep + \" set: \" + item);\n+        if (waitOpt) {\n+          waitList.add(item);\n+        }\n+      } else {\n+        out.println(\"Did not set replication for: \" + item\n+            + \", because it\u0027s an erasure coded file.\");\n       }\n-      out.println(\"Replication \" + newRep + \" set: \" + item);\n-      if (waitOpt) waitList.add(item);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (item.stat.isSymlink()) {\n      throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n    }\n    \n    if (item.stat.isFile()) {\n      // Do the checking if the file is erasure coded since\n      // replication factor for an EC file is meaningless.\n      if (!item.stat.isErasureCoded()) {\n        if (!item.fs.setReplication(item.path, newRep)) {\n          throw new IOException(\"Could not set replication for: \" + item);\n        }\n        out.println(\"Replication \" + newRep + \" set: \" + item);\n        if (waitOpt) {\n          waitList.add(item);\n        }\n      } else {\n        out.println(\"Did not set replication for: \" + item\n            + \", because it\u0027s an erasure coded file.\");\n      }\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (item.stat.isSymlink()) {\n      throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n    }\n    \n    if (item.stat.isFile()) {\n      if (!item.fs.setReplication(item.path, newRep)) {\n        throw new IOException(\"Could not set replication for: \" + item);\n      }\n      out.println(\"Replication \" + newRep + \" set: \" + item);\n      if (waitOpt) waitList.add(item);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (item.stat.isSymlink()) {\n      throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n    }\n    \n    if (item.stat.isFile()) {\n      if (!item.fs.setReplication(item.path, newRep)) {\n        throw new IOException(\"Could not set replication for: \" + item);\n      }\n      out.println(\"Replication \" + newRep + \" set: \" + item);\n      if (waitOpt) waitList.add(item);\n    } \n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/shell/SetReplication.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SetReplication.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (item.stat.isSymlink()) {\n      throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n    }\n    \n    if (item.stat.isFile()) {\n      if (!item.fs.setReplication(item.path, newRep)) {\n        throw new IOException(\"Could not set replication for: \" + item);\n      }\n      out.println(\"Replication \" + newRep + \" set: \" + item);\n      if (waitOpt) waitList.add(item);\n    } \n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/SetReplication.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/shell/SetReplication.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/shell/SetReplication.java"
      }
    },
    "a5290c9eca69027cff2448d05fee6983cbb54cd7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7271. Standardize shell command error messages.  Contributed by Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1101653 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/11 2:29 PM",
      "commitName": "a5290c9eca69027cff2448d05fee6983cbb54cd7",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "04/05/11 3:48 PM",
      "commitNameOld": "b9599b26dc92634674e9c609b6df9b8d2c408e6e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.95,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   protected void processPath(PathData item) throws IOException {\n-    if (item.stat.isSymlink()) throw new IOException(\"Symlinks unsupported\");\n+    if (item.stat.isSymlink()) {\n+      throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n+    }\n     \n     if (item.stat.isFile()) {\n       if (!item.fs.setReplication(item.path, newRep)) {\n         throw new IOException(\"Could not set replication for: \" + item);\n       }\n       out.println(\"Replication \" + newRep + \" set: \" + item);\n       if (waitOpt) waitList.add(item);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (item.stat.isSymlink()) {\n      throw new PathIOException(item.toString(), \"Symlinks unsupported\");\n    }\n    \n    if (item.stat.isFile()) {\n      if (!item.fs.setReplication(item.path, newRep)) {\n        throw new IOException(\"Could not set replication for: \" + item);\n      }\n      out.println(\"Replication \" + newRep + \" set: \" + item);\n      if (waitOpt) waitList.add(item);\n    } \n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/SetReplication.java",
      "extendedDetails": {}
    },
    "b9599b26dc92634674e9c609b6df9b8d2c408e6e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7250. Refactor the setrep command to conform to new FsCommand class.  Contributed by Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1099633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/11 3:48 PM",
      "commitName": "b9599b26dc92634674e9c609b6df9b8d2c408e6e",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,11 @@\n+  protected void processPath(PathData item) throws IOException {\n+    if (item.stat.isSymlink()) throw new IOException(\"Symlinks unsupported\");\n+    \n+    if (item.stat.isFile()) {\n+      if (!item.fs.setReplication(item.path, newRep)) {\n+        throw new IOException(\"Could not set replication for: \" + item);\n+      }\n+      out.println(\"Replication \" + newRep + \" set: \" + item);\n+      if (waitOpt) waitList.add(item);\n+    } \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (item.stat.isSymlink()) throw new IOException(\"Symlinks unsupported\");\n    \n    if (item.stat.isFile()) {\n      if (!item.fs.setReplication(item.path, newRep)) {\n        throw new IOException(\"Could not set replication for: \" + item);\n      }\n      out.println(\"Replication \" + newRep + \" set: \" + item);\n      if (waitOpt) waitList.add(item);\n    } \n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/SetReplication.java"
    }
  }
}