{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollector.java",
  "functionName": "updateAggregateStatus",
  "functionId": "updateAggregateStatus___entities-TimelineEntities__aggregationGroups-ConcurrentMap__String,AggregationStatusTable____typesToSkip-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
  "functionStartLine": 272,
  "functionEndLine": 292,
  "numCommitsSeen": 18,
  "timeTaken": 704,
  "changeHistory": [
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21"
  ],
  "changeHistoryShort": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3816. [Aggregation] App-level aggregation and accumulation for YARN system metrics (Li Lu via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "39cce4e629aadb7fadf1fb14a23108f55b59eb21",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,21 @@\n+  static void updateAggregateStatus(\n+      TimelineEntities entities,\n+      ConcurrentMap\u003cString, AggregationStatusTable\u003e aggregationGroups,\n+      Set\u003cString\u003e typesToSkip) {\n+    for (TimelineEntity e : entities.getEntities()) {\n+      if ((typesToSkip !\u003d null \u0026\u0026 typesToSkip.contains(e.getType()))\n+          || e.getMetrics().isEmpty()) {\n+        continue;\n+      }\n+      AggregationStatusTable aggrTable \u003d aggregationGroups.get(e.getType());\n+      if (aggrTable \u003d\u003d null) {\n+        AggregationStatusTable table \u003d new AggregationStatusTable();\n+        aggrTable \u003d aggregationGroups.putIfAbsent(e.getType(),\n+            table);\n+        if (aggrTable \u003d\u003d null) {\n+          aggrTable \u003d table;\n+        }\n+      }\n+      aggrTable.update(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void updateAggregateStatus(\n      TimelineEntities entities,\n      ConcurrentMap\u003cString, AggregationStatusTable\u003e aggregationGroups,\n      Set\u003cString\u003e typesToSkip) {\n    for (TimelineEntity e : entities.getEntities()) {\n      if ((typesToSkip !\u003d null \u0026\u0026 typesToSkip.contains(e.getType()))\n          || e.getMetrics().isEmpty()) {\n        continue;\n      }\n      AggregationStatusTable aggrTable \u003d aggregationGroups.get(e.getType());\n      if (aggrTable \u003d\u003d null) {\n        AggregationStatusTable table \u003d new AggregationStatusTable();\n        aggrTable \u003d aggregationGroups.putIfAbsent(e.getType(),\n            table);\n        if (aggrTable \u003d\u003d null) {\n          aggrTable \u003d table;\n        }\n      }\n      aggrTable.update(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java"
    }
  }
}