{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "getUserAMResourceLimit",
  "functionId": "getUserAMResourceLimit",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 670,
  "functionEndLine": 673,
  "numCommitsSeen": 176,
  "timeTaken": 4917,
  "changeHistory": [
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "56e4f6237ae8b1852e82b186e08db3934f79a9db",
    "c53420f58364b11fbda1dace7679d45534533382"
  ],
  "changeHistoryShort": {
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymodifierchange",
    "56e4f6237ae8b1852e82b186e08db3934f79a9db": "Ybodychange",
    "c53420f58364b11fbda1dace7679d45534533382": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "commitDateOld": "19/06/17 9:01 AM",
      "commitNameOld": "e9c2aa1bc383cb08784846534415bf17667d6e41",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 3.62,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,4 @@\n   public Resource getUserAMResourceLimit() {\n-     return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL);\n+    return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL,\n+         null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getUserAMResourceLimit() {\n    return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL,\n         null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "commitDateOld": "16/09/16 10:05 PM",
      "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  public synchronized Resource getUserAMResourceLimit() {\n+  public Resource getUserAMResourceLimit() {\n      return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getUserAMResourceLimit() {\n     return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "56e4f6237ae8b1852e82b186e08db3934f79a9db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3216. Max-AM-Resource-Percentage should respect node labels. (Sunil G via wangda)\n",
      "commitDate": "26/10/15 4:44 PM",
      "commitName": "56e4f6237ae8b1852e82b186e08db3934f79a9db",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/10/15 1:07 PM",
      "commitNameOld": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,3 @@\n   public synchronized Resource getUserAMResourceLimit() {\n-     /*\n-      * The user amresource limit is based on the same approach as the \n-      * user limit (as it should represent a subset of that).  This means that\n-      * it uses the absolute queue capacity instead of the max and is modified\n-      * by the userlimit and the userlimit factor as is the userlimit\n-      *\n-      */ \n-     float effectiveUserLimit \u003d Math.max(userLimit / 100.0f, 1.0f /    \n-       Math.max(getActiveUsersManager().getNumActiveUsers(), 1));\n-     \n-     return Resources.multiplyAndNormalizeUp( \n-          resourceCalculator,\n-          absoluteCapacityResource, \n-          maxAMResourcePerQueuePercent * effectiveUserLimit  *\n-            userLimitFactor, minimumAllocation);\n+     return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Resource getUserAMResourceLimit() {\n     return getUserAMResourceLimitPerPartition(RMNodeLabelsManager.NO_LABEL);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "c53420f58364b11fbda1dace7679d45534533382": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2637. Fixed max-am-resource-percent calculation in CapacityScheduler when activating applications. Contributed by Craig Welch\n",
      "commitDate": "13/01/15 5:32 PM",
      "commitName": "c53420f58364b11fbda1dace7679d45534533382",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,17 @@\n+  public synchronized Resource getUserAMResourceLimit() {\n+     /*\n+      * The user amresource limit is based on the same approach as the \n+      * user limit (as it should represent a subset of that).  This means that\n+      * it uses the absolute queue capacity instead of the max and is modified\n+      * by the userlimit and the userlimit factor as is the userlimit\n+      *\n+      */ \n+     float effectiveUserLimit \u003d Math.max(userLimit / 100.0f, 1.0f /    \n+       Math.max(getActiveUsersManager().getNumActiveUsers(), 1));\n+     \n+     return Resources.multiplyAndNormalizeUp( \n+          resourceCalculator,\n+          absoluteCapacityResource, \n+          maxAMResourcePerQueuePercent * effectiveUserLimit  *\n+            userLimitFactor, minimumAllocation);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Resource getUserAMResourceLimit() {\n     /*\n      * The user amresource limit is based on the same approach as the \n      * user limit (as it should represent a subset of that).  This means that\n      * it uses the absolute queue capacity instead of the max and is modified\n      * by the userlimit and the userlimit factor as is the userlimit\n      *\n      */ \n     float effectiveUserLimit \u003d Math.max(userLimit / 100.0f, 1.0f /    \n       Math.max(getActiveUsersManager().getNumActiveUsers(), 1));\n     \n     return Resources.multiplyAndNormalizeUp( \n          resourceCalculator,\n          absoluteCapacityResource, \n          maxAMResourcePerQueuePercent * effectiveUserLimit  *\n            userLimitFactor, minimumAllocation);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}