{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractReservationSystem.java",
  "functionName": "getDefaultPlanFollower",
  "functionId": "getDefaultPlanFollower",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
  "functionStartLine": 272,
  "functionEndLine": 280,
  "numCommitsSeen": 15,
  "timeTaken": 1369,
  "changeHistory": [
    "0c4b11267717eb451fa6ed4c586317f2db32fbd5",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "0c4b11267717eb451fa6ed4c586317f2db32fbd5": "Ybodychange",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c4b11267717eb451fa6ed4c586317f2db32fbd5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2881. [YARN-2574] Implement PlanFollower for FairScheduler. (Anubhav Dhoot via kasha)\n",
      "commitDate": "05/01/15 3:12 PM",
      "commitName": "0c4b11267717eb451fa6ed4c586317f2db32fbd5",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "19/12/14 3:37 PM",
      "commitNameOld": "a22ffc318801698e86cd0e316b4824015f2486ac",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 16.98,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,9 @@\n   private String getDefaultPlanFollower() {\n     // currently only capacity scheduler is supported\n     if (scheduler instanceof CapacityScheduler) {\n       return CapacitySchedulerPlanFollower.class.getName();\n+    } else if (scheduler instanceof FairScheduler) {\n+      return FairSchedulerPlanFollower.class.getName();\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getDefaultPlanFollower() {\n    // currently only capacity scheduler is supported\n    if (scheduler instanceof CapacityScheduler) {\n      return CapacitySchedulerPlanFollower.class.getName();\n    } else if (scheduler instanceof FairScheduler) {\n      return FairSchedulerPlanFollower.class.getName();\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,7 @@\n+  private String getDefaultPlanFollower() {\n+    // currently only capacity scheduler is supported\n+    if (scheduler instanceof CapacityScheduler) {\n+      return CapacitySchedulerPlanFollower.class.getName();\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getDefaultPlanFollower() {\n    // currently only capacity scheduler is supported\n    if (scheduler instanceof CapacityScheduler) {\n      return CapacitySchedulerPlanFollower.class.getName();\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java"
    }
  }
}