{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterSafemodeService.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSafemodeService.java",
  "functionStartLine": 133,
  "functionEndLine": 160,
  "numCommitsSeen": 4,
  "timeTaken": 1883,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "dbb9dded33b3cff3b630e98300d30515a9d1eec4"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Ymultichange(Yfilerename,Ybodychange)",
    "dbb9dded33b3cff3b630e98300d30515a9d1eec4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
          "commitDate": "19/03/18 10:13 PM",
          "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthor": "weiy",
          "commitDateOld": "19/03/18 5:19 PM",
          "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n \n     // Use same interval as cache update service\n     this.setIntervalMs(conf.getTimeDuration(\n-        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n-        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n+        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n+        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n         TimeUnit.MILLISECONDS));\n \n     this.startupInterval \u003d conf.getTimeDuration(\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n         TimeUnit.MILLISECONDS);\n     LOG.info(\"Leave startup safe mode after {} ms\", this.startupInterval);\n \n     this.staleInterval \u003d conf.getTimeDuration(\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n         TimeUnit.MILLISECONDS);\n     LOG.info(\"Enter safe mode after {} ms without reaching the State Store\",\n         this.staleInterval);\n \n     this.startupTime \u003d Time.now();\n \n     // Initializing the RPC server in safe mode, it will disable it later\n     enter();\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n\n    // Use same interval as cache update service\n    this.setIntervalMs(conf.getTimeDuration(\n        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n        TimeUnit.MILLISECONDS));\n\n    this.startupInterval \u003d conf.getTimeDuration(\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n        TimeUnit.MILLISECONDS);\n    LOG.info(\"Leave startup safe mode after {} ms\", this.startupInterval);\n\n    this.staleInterval \u003d conf.getTimeDuration(\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n        TimeUnit.MILLISECONDS);\n    LOG.info(\"Enter safe mode after {} ms without reaching the State Store\",\n        this.staleInterval);\n\n    this.startupTime \u003d Time.now();\n\n    // Initializing the RPC server in safe mode, it will disable it later\n    enter();\n\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSafemodeService.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSafemodeService.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSafemodeService.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
          "commitDate": "19/03/18 10:13 PM",
          "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthor": "weiy",
          "commitDateOld": "19/03/18 5:19 PM",
          "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n \n     // Use same interval as cache update service\n     this.setIntervalMs(conf.getTimeDuration(\n-        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n-        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n+        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n+        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n         TimeUnit.MILLISECONDS));\n \n     this.startupInterval \u003d conf.getTimeDuration(\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n         TimeUnit.MILLISECONDS);\n     LOG.info(\"Leave startup safe mode after {} ms\", this.startupInterval);\n \n     this.staleInterval \u003d conf.getTimeDuration(\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n-        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n+        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n         TimeUnit.MILLISECONDS);\n     LOG.info(\"Enter safe mode after {} ms without reaching the State Store\",\n         this.staleInterval);\n \n     this.startupTime \u003d Time.now();\n \n     // Initializing the RPC server in safe mode, it will disable it later\n     enter();\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n\n    // Use same interval as cache update service\n    this.setIntervalMs(conf.getTimeDuration(\n        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n        RBFConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n        TimeUnit.MILLISECONDS));\n\n    this.startupInterval \u003d conf.getTimeDuration(\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n        TimeUnit.MILLISECONDS);\n    LOG.info(\"Leave startup safe mode after {} ms\", this.startupInterval);\n\n    this.staleInterval \u003d conf.getTimeDuration(\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n        RBFConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n        TimeUnit.MILLISECONDS);\n    LOG.info(\"Enter safe mode after {} ms without reaching the State Store\",\n        this.staleInterval);\n\n    this.startupTime \u003d Time.now();\n\n    // Initializing the RPC server in safe mode, it will disable it later\n    enter();\n\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSafemodeService.java",
          "extendedDetails": {}
        }
      ]
    },
    "dbb9dded33b3cff3b630e98300d30515a9d1eec4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13044. RBF: Add a safe mode for the Router. Contributed by Inigo Goiri.\n",
      "commitDate": "29/01/18 8:12 PM",
      "commitName": "dbb9dded33b3cff3b630e98300d30515a9d1eec4",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,28 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+\n+    // Use same interval as cache update service\n+    this.setIntervalMs(conf.getTimeDuration(\n+        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n+        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n+        TimeUnit.MILLISECONDS));\n+\n+    this.startupInterval \u003d conf.getTimeDuration(\n+        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n+        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n+        TimeUnit.MILLISECONDS);\n+    LOG.info(\"Leave startup safe mode after {} ms\", this.startupInterval);\n+\n+    this.staleInterval \u003d conf.getTimeDuration(\n+        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n+        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n+        TimeUnit.MILLISECONDS);\n+    LOG.info(\"Enter safe mode after {} ms without reaching the State Store\",\n+        this.staleInterval);\n+\n+    this.startupTime \u003d Time.now();\n+\n+    // Initializing the RPC server in safe mode, it will disable it later\n+    enter();\n+\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n\n    // Use same interval as cache update service\n    this.setIntervalMs(conf.getTimeDuration(\n        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS,\n        DFSConfigKeys.DFS_ROUTER_CACHE_TIME_TO_LIVE_MS_DEFAULT,\n        TimeUnit.MILLISECONDS));\n\n    this.startupInterval \u003d conf.getTimeDuration(\n        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION,\n        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXTENSION_DEFAULT,\n        TimeUnit.MILLISECONDS);\n    LOG.info(\"Leave startup safe mode after {} ms\", this.startupInterval);\n\n    this.staleInterval \u003d conf.getTimeDuration(\n        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION,\n        DFSConfigKeys.DFS_ROUTER_SAFEMODE_EXPIRATION_DEFAULT,\n        TimeUnit.MILLISECONDS);\n    LOG.info(\"Enter safe mode after {} ms without reaching the State Store\",\n        this.staleInterval);\n\n    this.startupTime \u003d Time.now();\n\n    // Initializing the RPC server in safe mode, it will disable it later\n    enter();\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSafemodeService.java"
    }
  }
}