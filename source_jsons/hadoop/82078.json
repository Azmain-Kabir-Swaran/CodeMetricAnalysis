{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HostsFileReader.java",
  "functionName": "refreshInternal",
  "functionId": "refreshInternal___includesFile-String__excludesFile-String__lazy-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
  "functionStartLine": 200,
  "functionEndLine": 225,
  "numCommitsSeen": 16,
  "timeTaken": 820,
  "changeHistory": [
    "27642367ef3409a9ca93747c6c2cc279c087a4c0"
  ],
  "changeHistoryShort": {
    "27642367ef3409a9ca93747c6c2cc279c087a4c0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "27642367ef3409a9ca93747c6c2cc279c087a4c0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9011. Race condition during decommissioning. Contributed by Peter Bacsko\n",
      "commitDate": "18/11/19 7:29 AM",
      "commitName": "27642367ef3409a9ca93747c6c2cc279c087a4c0",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,26 @@\n+  private void refreshInternal(String includesFile, String excludesFile,\n+      boolean lazy) throws IOException {\n+    LOG.info(\"Refreshing hosts (include/exclude) list (lazy refresh \u003d {})\",\n+        lazy);\n+    HostDetails oldDetails \u003d current.get();\n+    Set\u003cString\u003e newIncludes \u003d oldDetails.includes;\n+    Map\u003cString, Integer\u003e newExcludes \u003d oldDetails.excludes;\n+    if (includesFile !\u003d null \u0026\u0026 !includesFile.isEmpty()) {\n+      newIncludes \u003d new HashSet\u003c\u003e();\n+      readFileToSet(\"included\", includesFile, newIncludes);\n+      newIncludes \u003d Collections.unmodifiableSet(newIncludes);\n+    }\n+    if (excludesFile !\u003d null \u0026\u0026 !excludesFile.isEmpty()) {\n+      newExcludes \u003d new HashMap\u003c\u003e();\n+      readFileToMap(\"excluded\", excludesFile, newExcludes);\n+      newExcludes \u003d Collections.unmodifiableMap(newExcludes);\n+    }\n+    HostDetails newDetails \u003d new HostDetails(includesFile, newIncludes,\n+        excludesFile, newExcludes);\n+\n+    if (lazy) {\n+      lazyLoaded.set(newDetails);\n+    } else {\n+      current.set(newDetails);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshInternal(String includesFile, String excludesFile,\n      boolean lazy) throws IOException {\n    LOG.info(\"Refreshing hosts (include/exclude) list (lazy refresh \u003d {})\",\n        lazy);\n    HostDetails oldDetails \u003d current.get();\n    Set\u003cString\u003e newIncludes \u003d oldDetails.includes;\n    Map\u003cString, Integer\u003e newExcludes \u003d oldDetails.excludes;\n    if (includesFile !\u003d null \u0026\u0026 !includesFile.isEmpty()) {\n      newIncludes \u003d new HashSet\u003c\u003e();\n      readFileToSet(\"included\", includesFile, newIncludes);\n      newIncludes \u003d Collections.unmodifiableSet(newIncludes);\n    }\n    if (excludesFile !\u003d null \u0026\u0026 !excludesFile.isEmpty()) {\n      newExcludes \u003d new HashMap\u003c\u003e();\n      readFileToMap(\"excluded\", excludesFile, newExcludes);\n      newExcludes \u003d Collections.unmodifiableMap(newExcludes);\n    }\n    HostDetails newDetails \u003d new HostDetails(includesFile, newIncludes,\n        excludesFile, newExcludes);\n\n    if (lazy) {\n      lazyLoaded.set(newDetails);\n    } else {\n      current.set(newDetails);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java"
    }
  }
}