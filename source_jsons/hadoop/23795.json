{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HSAdminServer.java",
  "functionName": "checkAcls",
  "functionId": "checkAcls___method-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/server/HSAdminServer.java",
  "functionStartLine": 162,
  "functionEndLine": 190,
  "numCommitsSeen": 14,
  "timeTaken": 568,
  "changeHistory": [
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b"
  ],
  "changeHistoryShort": {
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5265. History server admin service to refresh user and superuser group mappings. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504645 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 1:41 PM",
      "commitName": "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,29 @@\n+  private UserGroupInformation checkAcls(String method) throws IOException {\n+    UserGroupInformation user;\n+    try {\n+      user \u003d UserGroupInformation.getCurrentUser();\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n+\n+      HSAuditLogger.logFailure(\"UNKNOWN\", method, adminAcl.toString(),\n+          HISTORY_ADMIN_SERVER, \"Couldn\u0027t get current user\");\n+\n+      throw ioe;\n+    }\n+\n+    if (!adminAcl.isUserAllowed(user)) {\n+      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\"\n+          + \" to call \u0027\" + method + \"\u0027\");\n+\n+      HSAuditLogger.logFailure(user.getShortUserName(), method,\n+          adminAcl.toString(), HISTORY_ADMIN_SERVER,\n+          AuditConstants.UNAUTHORIZED_USER);\n+\n+      throw new AccessControlException(\"User \" + user.getShortUserName()\n+          + \" doesn\u0027t have permission\" + \" to call \u0027\" + method + \"\u0027\");\n+    }\n+    LOG.info(\"HS Admin: \" + method + \" invoked by user \"\n+        + user.getShortUserName());\n+\n+    return user;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation checkAcls(String method) throws IOException {\n    UserGroupInformation user;\n    try {\n      user \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n\n      HSAuditLogger.logFailure(\"UNKNOWN\", method, adminAcl.toString(),\n          HISTORY_ADMIN_SERVER, \"Couldn\u0027t get current user\");\n\n      throw ioe;\n    }\n\n    if (!adminAcl.isUserAllowed(user)) {\n      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\"\n          + \" to call \u0027\" + method + \"\u0027\");\n\n      HSAuditLogger.logFailure(user.getShortUserName(), method,\n          adminAcl.toString(), HISTORY_ADMIN_SERVER,\n          AuditConstants.UNAUTHORIZED_USER);\n\n      throw new AccessControlException(\"User \" + user.getShortUserName()\n          + \" doesn\u0027t have permission\" + \" to call \u0027\" + method + \"\u0027\");\n    }\n    LOG.info(\"HS Admin: \" + method + \" invoked by user \"\n        + user.getShortUserName());\n\n    return user;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/server/HSAdminServer.java"
    }
  }
}