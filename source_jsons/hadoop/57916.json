{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationACLsManager.java",
  "functionName": "checkAccess",
  "functionId": "checkAccess___callerUGI-UserGroupInformation__applicationAccessType-ApplicationAccessType__applicationOwner-String__applicationId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
  "functionStartLine": 97,
  "functionEndLine": 134,
  "numCommitsSeen": 17,
  "timeTaken": 9745,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "1c93025a1b370db46e345161dbc15e03f829823f",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "c27601fefebd0af887a12d684bfc6f90d9fc0321",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "5fadd4de2a73fcf35eab78d6c078e62b5a3c60d5",
    "df2991c0cbc3f35c2640b93680667507c4f810dd",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "1c93025a1b370db46e345161dbc15e03f829823f": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "c27601fefebd0af887a12d684bfc6f90d9fc0321": "Yfilerename",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "5fadd4de2a73fcf35eab78d6c078e62b5a3c60d5": "Ybodychange",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8": "Ymodifierchange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 11.64,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,38 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n       ApplicationAccessType applicationAccessType, String applicationOwner,\n       ApplicationId applicationId) {\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n-          + callerUGI + \" on application \" + applicationId + \" owned by \"\n-          + applicationOwner);\n-    }\n+    LOG.debug(\"Verifying access-type {} for {} on application {} owned by {}\",\n+            applicationAccessType, callerUGI, applicationId, applicationOwner);\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n     AccessControlList applicationACL \u003d DEFAULT_YARN_APP_ACL;\n     Map\u003cApplicationAccessType, AccessControlList\u003e acls \u003d this.applicationACLS\n         .get(applicationId);\n     if (acls \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"ACL not found for application \"\n-            + applicationId + \" owned by \"\n-            + applicationOwner + \". Using default [\"\n-            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n-      }\n+      LOG.debug(\"ACL not found for application {} owned by {}.\"\n+          + \" Using default [{}]\", applicationId, applicationOwner,\n+          YarnConfiguration.DEFAULT_YARN_APP_ACL);\n     } else {\n       AccessControlList applicationACLInMap \u003d acls.get(applicationAccessType);\n       if (applicationACLInMap !\u003d null) {\n         applicationACL \u003d applicationACLInMap;\n-      } else if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n-            + \" for application \" + applicationId + \" owned by \"\n-            + applicationOwner + \". Using default [\"\n-            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n+      } else {\n+        LOG.debug(\"ACL not found for access-type {} for application {}\"\n+            + \" owned by {}. Using default [{}]\", applicationAccessType,\n+            applicationId, applicationOwner,\n+            YarnConfiguration.DEFAULT_YARN_APP_ACL);\n       }\n     }\n \n     // Allow application-owner for any type of access on the application\n     if (this.adminAclsManager.isAdmin(callerUGI)\n         || user.equals(applicationOwner)\n         || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    LOG.debug(\"Verifying access-type {} for {} on application {} owned by {}\",\n            applicationAccessType, callerUGI, applicationId, applicationOwner);\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n    AccessControlList applicationACL \u003d DEFAULT_YARN_APP_ACL;\n    Map\u003cApplicationAccessType, AccessControlList\u003e acls \u003d this.applicationACLS\n        .get(applicationId);\n    if (acls \u003d\u003d null) {\n      LOG.debug(\"ACL not found for application {} owned by {}.\"\n          + \" Using default [{}]\", applicationId, applicationOwner,\n          YarnConfiguration.DEFAULT_YARN_APP_ACL);\n    } else {\n      AccessControlList applicationACLInMap \u003d acls.get(applicationAccessType);\n      if (applicationACLInMap !\u003d null) {\n        applicationACL \u003d applicationACLInMap;\n      } else {\n        LOG.debug(\"ACL not found for access-type {} for application {}\"\n            + \" owned by {}. Using default [{}]\", applicationAccessType,\n            applicationId, applicationOwner,\n            YarnConfiguration.DEFAULT_YARN_APP_ACL);\n      }\n    }\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAclsManager.isAdmin(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
      "extendedDetails": {}
    },
    "1c93025a1b370db46e345161dbc15e03f829823f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2527. Fixed the potential NPE in ApplicationACLsManager and added test cases for it. Contributed by Benoy Antony.\n",
      "commitDate": "02/10/14 2:56 PM",
      "commitName": "1c93025a1b370db46e345161dbc15e03f829823f",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 785.69,
      "commitsBetweenForRepo": 5251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,44 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n       ApplicationAccessType applicationAccessType, String applicationOwner,\n       ApplicationId applicationId) {\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n           + callerUGI + \" on application \" + applicationId + \" owned by \"\n           + applicationOwner);\n     }\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n-\n-    AccessControlList applicationACL \u003d this.applicationACLS\n-        .get(applicationId).get(applicationAccessType);\n-    if (applicationACL \u003d\u003d null) {\n+    AccessControlList applicationACL \u003d DEFAULT_YARN_APP_ACL;\n+    Map\u003cApplicationAccessType, AccessControlList\u003e acls \u003d this.applicationACLS\n+        .get(applicationId);\n+    if (acls \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"ACL not found for application \"\n+            + applicationId + \" owned by \"\n+            + applicationOwner + \". Using default [\"\n+            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n+      }\n+    } else {\n+      AccessControlList applicationACLInMap \u003d acls.get(applicationAccessType);\n+      if (applicationACLInMap !\u003d null) {\n+        applicationACL \u003d applicationACLInMap;\n+      } else if (LOG.isDebugEnabled()) {\n         LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n             + \" for application \" + applicationId + \" owned by \"\n             + applicationOwner + \". Using default [\"\n             + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n       }\n-      applicationACL \u003d\n-          new AccessControlList(YarnConfiguration.DEFAULT_YARN_APP_ACL);\n     }\n \n     // Allow application-owner for any type of access on the application\n     if (this.adminAclsManager.isAdmin(callerUGI)\n         || user.equals(applicationOwner)\n         || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n    AccessControlList applicationACL \u003d DEFAULT_YARN_APP_ACL;\n    Map\u003cApplicationAccessType, AccessControlList\u003e acls \u003d this.applicationACLS\n        .get(applicationId);\n    if (acls \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ACL not found for application \"\n            + applicationId + \" owned by \"\n            + applicationOwner + \". Using default [\"\n            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n      }\n    } else {\n      AccessControlList applicationACLInMap \u003d acls.get(applicationAccessType);\n      if (applicationACLInMap !\u003d null) {\n        applicationACL \u003d applicationACLInMap;\n      } else if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n            + \" for application \" + applicationId + \" owned by \"\n            + applicationOwner + \". Using default [\"\n            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n      }\n    }\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAclsManager.isAdmin(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n    if (applicationACL \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n            + \" for application \" + applicationId + \" owned by \"\n            + applicationOwner + \". Using default [\"\n            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n      }\n      applicationACL \u003d\n          new AccessControlList(YarnConfiguration.DEFAULT_YARN_APP_ACL);\n    }\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAclsManager.isAdmin(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java"
      }
    },
    "c27601fefebd0af887a12d684bfc6f90d9fc0321": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3297. Moved log related components into yarn-common so that HistoryServer and clients can use them without depending on the yarn-server-nodemanager module. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/11/11 1:02 AM",
      "commitName": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/11/11 12:06 AM",
      "commitNameOld": "0df4878033b797b9313c887ca9d75f8ea104d029",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n    if (applicationACL \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n            + \" for application \" + applicationId + \" owned by \"\n            + applicationOwner + \". Using default [\"\n            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n      }\n      applicationACL \u003d\n          new AccessControlList(YarnConfiguration.DEFAULT_YARN_APP_ACL);\n    }\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAclsManager.isAdmin(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java"
      }
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/10/11 11:11 PM",
      "commitNameOld": "5fadd4de2a73fcf35eab78d6c078e62b5a3c60d5",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.02,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,36 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n       ApplicationAccessType applicationAccessType, String applicationOwner,\n       ApplicationId applicationId) {\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n           + callerUGI + \" on application \" + applicationId + \" owned by \"\n           + applicationOwner);\n     }\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n     AccessControlList applicationACL \u003d this.applicationACLS\n         .get(applicationId).get(applicationAccessType);\n+    if (applicationACL \u003d\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n+            + \" for application \" + applicationId + \" owned by \"\n+            + applicationOwner + \". Using default [\"\n+            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n+      }\n+      applicationACL \u003d\n+          new AccessControlList(YarnConfiguration.DEFAULT_YARN_APP_ACL);\n+    }\n \n     // Allow application-owner for any type of access on the application\n     if (this.adminAclsManager.isAdmin(callerUGI)\n         || user.equals(applicationOwner)\n         || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n    if (applicationACL \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ACL not found for access-type \" + applicationAccessType\n            + \" for application \" + applicationId + \" owned by \"\n            + applicationOwner + \". Using default [\"\n            + YarnConfiguration.DEFAULT_YARN_APP_ACL + \"]\");\n      }\n      applicationACL \u003d\n          new AccessControlList(YarnConfiguration.DEFAULT_YARN_APP_ACL);\n    }\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAclsManager.isAdmin(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
      "extendedDetails": {}
    },
    "5fadd4de2a73fcf35eab78d6c078e62b5a3c60d5": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3175. Add authorization to admin web-pages such as /stacks, /jmx etc. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189619 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/10/11 11:11 PM",
      "commitName": "5fadd4de2a73fcf35eab78d6c078e62b5a3c60d5",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "20/10/11 4:45 AM",
      "commitNameOld": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.77,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n       ApplicationAccessType applicationAccessType, String applicationOwner,\n       ApplicationId applicationId) {\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n           + callerUGI + \" on application \" + applicationId + \" owned by \"\n           + applicationOwner);\n     }\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n     AccessControlList applicationACL \u003d this.applicationACLS\n         .get(applicationId).get(applicationAccessType);\n \n     // Allow application-owner for any type of access on the application\n-    if (this.adminAcl.isUserAllowed(callerUGI)\n+    if (this.adminAclsManager.isAdmin(callerUGI)\n         || user.equals(applicationOwner)\n         || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAclsManager.isAdmin(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
      "extendedDetails": {}
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/10/11 5:38 PM",
          "commitNameOld": "37137845c8dd884b65bc2ad182f124a90410f06d",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.46,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n-      ApplicationACL applicationOperation, String applicationOwner,\n-      AccessControlList acl) {\n+      ApplicationAccessType applicationAccessType, String applicationOwner,\n+      ApplicationId applicationId) {\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n+          + callerUGI + \" on application \" + applicationId + \" owned by \"\n+          + applicationOwner);\n+    }\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n-    // Allow application-owner for any operation on the application\n-    if (user.equals(applicationOwner)\n-        || acl.isUserAllowed(callerUGI)) {\n+    AccessControlList applicationACL \u003d this.applicationACLS\n+        .get(applicationId).get(applicationAccessType);\n+\n+    // Allow application-owner for any type of access on the application\n+    if (this.adminAcl.isUserAllowed(callerUGI)\n+        || user.equals(applicationOwner)\n+        || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n-\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAcl.isUserAllowed(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
            "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
            "oldMethodName": "checkAccess",
            "newMethodName": "checkAccess"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/10/11 5:38 PM",
          "commitNameOld": "37137845c8dd884b65bc2ad182f124a90410f06d",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.46,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n-      ApplicationACL applicationOperation, String applicationOwner,\n-      AccessControlList acl) {\n+      ApplicationAccessType applicationAccessType, String applicationOwner,\n+      ApplicationId applicationId) {\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n+          + callerUGI + \" on application \" + applicationId + \" owned by \"\n+          + applicationOwner);\n+    }\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n-    // Allow application-owner for any operation on the application\n-    if (user.equals(applicationOwner)\n-        || acl.isUserAllowed(callerUGI)) {\n+    AccessControlList applicationACL \u003d this.applicationACLS\n+        .get(applicationId).get(applicationAccessType);\n+\n+    // Allow application-owner for any type of access on the application\n+    if (this.adminAcl.isUserAllowed(callerUGI)\n+        || user.equals(applicationOwner)\n+        || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n-\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAcl.isUserAllowed(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/10/11 5:38 PM",
          "commitNameOld": "37137845c8dd884b65bc2ad182f124a90410f06d",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.46,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n-      ApplicationACL applicationOperation, String applicationOwner,\n-      AccessControlList acl) {\n+      ApplicationAccessType applicationAccessType, String applicationOwner,\n+      ApplicationId applicationId) {\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n+          + callerUGI + \" on application \" + applicationId + \" owned by \"\n+          + applicationOwner);\n+    }\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n-    // Allow application-owner for any operation on the application\n-    if (user.equals(applicationOwner)\n-        || acl.isUserAllowed(callerUGI)) {\n+    AccessControlList applicationACL \u003d this.applicationACLS\n+        .get(applicationId).get(applicationAccessType);\n+\n+    // Allow application-owner for any type of access on the application\n+    if (this.adminAcl.isUserAllowed(callerUGI)\n+        || user.equals(applicationOwner)\n+        || applicationACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n-\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationAccessType applicationAccessType, String applicationOwner,\n      ApplicationId applicationId) {\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Verifying access-type \" + applicationAccessType + \" for \"\n          + callerUGI + \" on application \" + applicationId + \" owned by \"\n          + applicationOwner);\n    }\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    AccessControlList applicationACL \u003d this.applicationACLS\n        .get(applicationId).get(applicationAccessType);\n\n    // Allow application-owner for any type of access on the application\n    if (this.adminAcl.isUserAllowed(callerUGI)\n        || user.equals(applicationOwner)\n        || applicationACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java",
          "extendedDetails": {
            "oldValue": "[callerUGI-UserGroupInformation, applicationOperation-ApplicationACL, applicationOwner-String, acl-AccessControlList]",
            "newValue": "[callerUGI-UserGroupInformation, applicationAccessType-ApplicationAccessType, applicationOwner-String, applicationId-ApplicationId]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationACL applicationOperation, String applicationOwner,\n      AccessControlList acl) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow application-owner for any operation on the application\n    if (user.equals(applicationOwner)\n        || acl.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n+      ApplicationACL applicationOperation, String applicationOwner,\n+      AccessControlList acl) {\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n+    // Allow application-owner for any operation on the application\n+    if (user.equals(applicationOwner)\n+        || acl.isUserAllowed(callerUGI)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationACL applicationOperation, String applicationOwner,\n      AccessControlList acl) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow application-owner for any operation on the application\n    if (user.equals(applicationOwner)\n        || acl.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java",
            "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
            "oldMethodName": "checkAccess",
            "newMethodName": "checkAccess"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n+      ApplicationACL applicationOperation, String applicationOwner,\n+      AccessControlList acl) {\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n+    // Allow application-owner for any operation on the application\n+    if (user.equals(applicationOwner)\n+        || acl.isUserAllowed(callerUGI)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationACL applicationOperation, String applicationOwner,\n      AccessControlList acl) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow application-owner for any operation on the application\n    if (user.equals(applicationOwner)\n        || acl.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n+      ApplicationACL applicationOperation, String applicationOwner,\n+      AccessControlList acl) {\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n+    // Allow application-owner for any operation on the application\n+    if (user.equals(applicationOwner)\n+        || acl.isUserAllowed(callerUGI)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      ApplicationACL applicationOperation, String applicationOwner,\n      AccessControlList acl) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow application-owner for any operation on the application\n    if (user.equals(applicationOwner)\n        || acl.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationACLsManager.java",
          "extendedDetails": {
            "oldValue": "[callerUGI-UserGroupInformation, jobOperation-JobACL, jobOwner-String, jobACL-AccessControlList]",
            "newValue": "[callerUGI-UserGroupInformation, applicationOperation-ApplicationACL, applicationOwner-String, acl-AccessControlList]"
          }
        }
      ]
    },
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-2837. Ported bug fixes from y-merge to prepare for MAPREDUCE-279 merge. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:00 PM",
      "commitName": "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/07/11 11:03 PM",
      "commitNameOld": "f57eaf39898b36f4d0f711485003298b857de5f7",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 30.62,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  boolean checkAccess(UserGroupInformation callerUGI,\n+  public boolean checkAccess(UserGroupInformation callerUGI,\n       JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n     // Allow Job-owner for any operation on the job\n     if (user.equals(jobOwner)\n         || jobACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow Job-owner for any operation on the job\n    if (user.equals(jobOwner)\n        || jobACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+  boolean checkAccess(UserGroupInformation callerUGI,\n+      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n+\n+    String user \u003d callerUGI.getShortUserName();\n+    if (!areACLsEnabled()) {\n+      return true;\n+    }\n+\n+    // Allow Job-owner for any operation on the job\n+    if (user.equals(jobOwner)\n+        || jobACL.isUserAllowed(callerUGI)) {\n+      return true;\n+    }\n+\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkAccess(UserGroupInformation callerUGI,\n      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow Job-owner for any operation on the job\n    if (user.equals(jobOwner)\n        || jobACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java"
    }
  }
}