{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RamDiskReplicaLruTracker.java",
  "functionName": "touch",
  "functionId": "touch___bpid-String(modifiers-final)__blockId-long(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskReplicaLruTracker.java",
  "functionStartLine": 97,
  "functionEndLine": 113,
  "numCommitsSeen": 5,
  "timeTaken": 1385,
  "changeHistory": [
    "5e8b6973527e5f714652641ed95e8a4509e18cfa",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142"
  ],
  "changeHistoryShort": {
    "5e8b6973527e5f714652641ed95e8a4509e18cfa": "Ybodychange",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5e8b6973527e5f714652641ed95e8a4509e18cfa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7129. Metrics to track usage of memory for writes. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "30/09/14 12:53 AM",
      "commitName": "5e8b6973527e5f714652641ed95e8a4509e18cfa",
      "commitAuthor": "arp",
      "commitDateOld": "25/09/14 11:14 AM",
      "commitNameOld": "364e60b1691a4d7b2f745b8ebf78177f254a4287",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 4.57,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   synchronized void touch(final String bpid,\n                           final long blockId) {\n     Map\u003cLong, RamDiskReplicaLru\u003e map \u003d replicaMaps.get(bpid);\n     RamDiskReplicaLru ramDiskReplicaLru \u003d map.get(blockId);\n \n     if (ramDiskReplicaLru \u003d\u003d null) {\n       return;\n     }\n \n+    ramDiskReplicaLru.numReads.getAndIncrement();\n+\n     // Reinsert the replica with its new timestamp.\n     if (replicasPersisted.remove(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru)) {\n-      ramDiskReplicaLru.lastUsedTime \u003d System.currentTimeMillis();\n+      ramDiskReplicaLru.lastUsedTime \u003d Time.monotonicNow();\n       replicasPersisted.put(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void touch(final String bpid,\n                          final long blockId) {\n    Map\u003cLong, RamDiskReplicaLru\u003e map \u003d replicaMaps.get(bpid);\n    RamDiskReplicaLru ramDiskReplicaLru \u003d map.get(blockId);\n\n    if (ramDiskReplicaLru \u003d\u003d null) {\n      return;\n    }\n\n    ramDiskReplicaLru.numReads.getAndIncrement();\n\n    // Reinsert the replica with its new timestamp.\n    if (replicasPersisted.remove(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru)) {\n      ramDiskReplicaLru.lastUsedTime \u003d Time.monotonicNow();\n      replicasPersisted.put(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskReplicaLruTracker.java",
      "extendedDetails": {}
    },
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)\n",
      "commitDate": "20/09/14 1:25 PM",
      "commitName": "b2d5ed36bcb80e2581191dcdc3976e825c959142",
      "commitAuthor": "arp",
      "diff": "@@ -0,0 +1,15 @@\n+  synchronized void touch(final String bpid,\n+                          final long blockId) {\n+    Map\u003cLong, RamDiskReplicaLru\u003e map \u003d replicaMaps.get(bpid);\n+    RamDiskReplicaLru ramDiskReplicaLru \u003d map.get(blockId);\n+\n+    if (ramDiskReplicaLru \u003d\u003d null) {\n+      return;\n+    }\n+\n+    // Reinsert the replica with its new timestamp.\n+    if (replicasPersisted.remove(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru)) {\n+      ramDiskReplicaLru.lastUsedTime \u003d System.currentTimeMillis();\n+      replicasPersisted.put(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void touch(final String bpid,\n                          final long blockId) {\n    Map\u003cLong, RamDiskReplicaLru\u003e map \u003d replicaMaps.get(bpid);\n    RamDiskReplicaLru ramDiskReplicaLru \u003d map.get(blockId);\n\n    if (ramDiskReplicaLru \u003d\u003d null) {\n      return;\n    }\n\n    // Reinsert the replica with its new timestamp.\n    if (replicasPersisted.remove(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru)) {\n      ramDiskReplicaLru.lastUsedTime \u003d System.currentTimeMillis();\n      replicasPersisted.put(ramDiskReplicaLru.lastUsedTime, ramDiskReplicaLru);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskReplicaLruTracker.java"
    }
  }
}