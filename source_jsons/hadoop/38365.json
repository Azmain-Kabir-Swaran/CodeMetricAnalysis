{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContextImpl.java",
  "functionName": "isSchedulerReadyForAllocatingContainers",
  "functionId": "isSchedulerReadyForAllocatingContainers",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java",
  "functionStartLine": 566,
  "functionEndLine": 568,
  "numCommitsSeen": 60,
  "timeTaken": 1633,
  "changeHistory": [
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b",
    "485c96e3cb9b0b05d6e490b4773506da83ebc61d"
  ],
  "changeHistoryShort": {
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b": "Ybodychange",
    "485c96e3cb9b0b05d6e490b4773506da83ebc61d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2865. Fixed RM to always create a new RMContext when transtions from StandBy to Active. Contributed by Rohith Sharmaks\n",
      "commitDate": "19/11/14 7:48 PM",
      "commitName": "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b",
      "commitAuthor": "Jian He",
      "commitDateOld": "27/10/14 3:49 PM",
      "commitNameOld": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.21,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,3 @@\n   public boolean isSchedulerReadyForAllocatingContainers() {\n-    if (isSchedulerReady) {\n-      return isSchedulerReady;\n-    }\n-    isSchedulerReady \u003d (systemClock.getTime() - schedulerRecoveryStartTime)\n-        \u003e schedulerRecoveryWaitTime;\n-    if (!isSchedulerReady \u0026\u0026 printLog) {\n-      LOG.info(\"Skip allocating containers. Scheduler is waiting for recovery.\");\n-      printLog \u003d false;\n-    }\n-    if (isSchedulerReady) {\n-      LOG.info(\"Scheduler recovery is done. Start allocating new containers.\");\n-    }\n-    return isSchedulerReady;\n+    return activeServiceContext.isSchedulerReadyForAllocatingContainers();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isSchedulerReadyForAllocatingContainers() {\n    return activeServiceContext.isSchedulerReadyForAllocatingContainers();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java",
      "extendedDetails": {}
    },
    "485c96e3cb9b0b05d6e490b4773506da83ebc61d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2001. Added a time threshold for RM to wait before starting container allocations after restart/failover. Contributed by Jian He.\n",
      "commitDate": "18/09/14 11:03 AM",
      "commitName": "485c96e3cb9b0b05d6e490b4773506da83ebc61d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  public boolean isSchedulerReadyForAllocatingContainers() {\n+    if (isSchedulerReady) {\n+      return isSchedulerReady;\n+    }\n+    isSchedulerReady \u003d (systemClock.getTime() - schedulerRecoveryStartTime)\n+        \u003e schedulerRecoveryWaitTime;\n+    if (!isSchedulerReady \u0026\u0026 printLog) {\n+      LOG.info(\"Skip allocating containers. Scheduler is waiting for recovery.\");\n+      printLog \u003d false;\n+    }\n+    if (isSchedulerReady) {\n+      LOG.info(\"Scheduler recovery is done. Start allocating new containers.\");\n+    }\n+    return isSchedulerReady;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isSchedulerReadyForAllocatingContainers() {\n    if (isSchedulerReady) {\n      return isSchedulerReady;\n    }\n    isSchedulerReady \u003d (systemClock.getTime() - schedulerRecoveryStartTime)\n        \u003e schedulerRecoveryWaitTime;\n    if (!isSchedulerReady \u0026\u0026 printLog) {\n      LOG.info(\"Skip allocating containers. Scheduler is waiting for recovery.\");\n      printLog \u003d false;\n    }\n    if (isSchedulerReady) {\n      LOG.info(\"Scheduler recovery is done. Start allocating new containers.\");\n    }\n    return isSchedulerReady;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java"
    }
  }
}