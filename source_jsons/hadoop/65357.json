{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AMultipartUploader.java",
  "functionName": "initialize",
  "functionId": "initialize___filePath-Path",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AMultipartUploader.java",
  "functionStartLine": 79,
  "functionEndLine": 85,
  "numCommitsSeen": 5,
  "timeTaken": 1009,
  "changeHistory": [
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa",
    "980031bb043dd026a6bf42b0e71d304ac89294a5"
  ],
  "changeHistoryShort": {
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa": "Ybodychange",
    "980031bb043dd026a6bf42b0e71d304ac89294a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15576. S3A Multipart Uploader to work with S3Guard and encryption Originally contributed by Ewan Higgs with refinements by Steve Loughran.\n",
      "commitDate": "08/08/18 4:50 AM",
      "commitName": "2ec97abb2e93c1a8127e7a146c08e26454b583fa",
      "commitAuthor": "Ewan Higgs",
      "commitDateOld": "17/06/18 11:54 AM",
      "commitNameOld": "980031bb043dd026a6bf42b0e71d304ac89294a5",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 51.71,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,7 @@\n   public UploadHandle initialize(Path filePath) throws IOException {\n+    final WriteOperationHelper writeHelper \u003d s3a.getWriteOperationHelper();\n     String key \u003d s3a.pathToKey(filePath);\n-    InitiateMultipartUploadRequest request \u003d\n-        new InitiateMultipartUploadRequest(s3a.getBucket(), key);\n-    LOG.debug(\"initialize request: {}\", request);\n-    InitiateMultipartUploadResult result \u003d s3a.initiateMultipartUpload(request);\n-    String uploadId \u003d result.getUploadId();\n+    String uploadId \u003d writeHelper.initiateMultiPartUpload(key);\n     return BBUploadHandle.from(ByteBuffer.wrap(\n         uploadId.getBytes(Charsets.UTF_8)));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public UploadHandle initialize(Path filePath) throws IOException {\n    final WriteOperationHelper writeHelper \u003d s3a.getWriteOperationHelper();\n    String key \u003d s3a.pathToKey(filePath);\n    String uploadId \u003d writeHelper.initiateMultiPartUpload(key);\n    return BBUploadHandle.from(ByteBuffer.wrap(\n        uploadId.getBytes(Charsets.UTF_8)));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AMultipartUploader.java",
      "extendedDetails": {}
    },
    "980031bb043dd026a6bf42b0e71d304ac89294a5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13186. Multipart Uploader API. Contributed by Ewan Higgs\n",
      "commitDate": "17/06/18 11:54 AM",
      "commitName": "980031bb043dd026a6bf42b0e71d304ac89294a5",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,10 @@\n+  public UploadHandle initialize(Path filePath) throws IOException {\n+    String key \u003d s3a.pathToKey(filePath);\n+    InitiateMultipartUploadRequest request \u003d\n+        new InitiateMultipartUploadRequest(s3a.getBucket(), key);\n+    LOG.debug(\"initialize request: {}\", request);\n+    InitiateMultipartUploadResult result \u003d s3a.initiateMultipartUpload(request);\n+    String uploadId \u003d result.getUploadId();\n+    return BBUploadHandle.from(ByteBuffer.wrap(\n+        uploadId.getBytes(Charsets.UTF_8)));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public UploadHandle initialize(Path filePath) throws IOException {\n    String key \u003d s3a.pathToKey(filePath);\n    InitiateMultipartUploadRequest request \u003d\n        new InitiateMultipartUploadRequest(s3a.getBucket(), key);\n    LOG.debug(\"initialize request: {}\", request);\n    InitiateMultipartUploadResult result \u003d s3a.initiateMultipartUpload(request);\n    String uploadId \u003d result.getUploadId();\n    return BBUploadHandle.from(ByteBuffer.wrap(\n        uploadId.getBytes(Charsets.UTF_8)));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AMultipartUploader.java"
    }
  }
}