{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeSerialization.java",
  "functionName": "getSerializer",
  "functionId": "getSerializer___c-Class__?__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/serde/NativeSerialization.java",
  "functionStartLine": 38,
  "functionEndLine": 58,
  "numCommitsSeen": 3,
  "timeTaken": 669,
  "changeHistory": [
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139"
  ],
  "changeHistoryShort": {
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": {
      "type": "Yintroduced",
      "commitMessage": "Import initial code for MAPREDUCE-2841 (native output collector)\n\nContributed by:\n  Binglin Chang\n  Yang Dong\n  Sean Zhong\n  Manu Zhang\n  Zhongliang Zhu\n  Vincent Wang\n  Yan Dong\n  Cheng Lian\n  Xusen Yin\n  Fangqin Dai\n  Jiang Weihua\n  Gansha Wu\n  Avik Dey\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/MR-2841@1611413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 10:44 AM",
      "commitName": "b2551c06a09fb80a9e69adbc01c4c34b93ad0139",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  public INativeSerializer\u003cWritable\u003e getSerializer(Class\u003c?\u003e c) throws IOException {\n+\n+    if (null \u003d\u003d c) {\n+      return null;\n+    }\n+    if (!Writable.class.isAssignableFrom(c)) {\n+      throw new IOException(\"Cannot serialize type \" + c.getName() + \", we only accept subclass of Writable\");\n+    }\n+    final String name \u003d c.getName();\n+    final Class\u003c?\u003e serializer \u003d map.get(name);\n+\n+    if (null !\u003d serializer) {\n+      try {\n+        return (INativeSerializer\u003cWritable\u003e) serializer.newInstance();\n+      } catch (final Exception e) {\n+        throw new IOException(e);\n+      }\n+    }\n+    return new DefaultSerializer();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public INativeSerializer\u003cWritable\u003e getSerializer(Class\u003c?\u003e c) throws IOException {\n\n    if (null \u003d\u003d c) {\n      return null;\n    }\n    if (!Writable.class.isAssignableFrom(c)) {\n      throw new IOException(\"Cannot serialize type \" + c.getName() + \", we only accept subclass of Writable\");\n    }\n    final String name \u003d c.getName();\n    final Class\u003c?\u003e serializer \u003d map.get(name);\n\n    if (null !\u003d serializer) {\n      try {\n        return (INativeSerializer\u003cWritable\u003e) serializer.newInstance();\n      } catch (final Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return new DefaultSerializer();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/serde/NativeSerialization.java"
    }
  }
}