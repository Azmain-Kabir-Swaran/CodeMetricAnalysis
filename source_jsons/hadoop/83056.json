{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RollingFileSystemSink.java",
  "functionName": "getNextIdToTry",
  "functionId": "getNextIdToTry___initial-Path__lastId-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/RollingFileSystemSink.java",
  "functionStartLine": 731,
  "functionEndLine": 753,
  "numCommitsSeen": 9,
  "timeTaken": 666,
  "changeHistory": [
    "5b59a0ea85c923384e36ad7c036e751551774142"
  ],
  "changeHistoryShort": {
    "5b59a0ea85c923384e36ad7c036e751551774142": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5b59a0ea85c923384e36ad7c036e751551774142": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12759. RollingFileSystemSink should eagerly rotate directories. Contributed by Daniel Templeton.\n",
      "commitDate": "06/02/16 8:52 PM",
      "commitName": "5b59a0ea85c923384e36ad7c036e751551774142",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,23 @@\n+  private int getNextIdToTry(Path initial, int lastId)\n+      throws IOException {\n+    RemoteIterator\u003cLocatedFileStatus\u003e files \u003d\n+        fileSystem.listFiles(currentDirPath, true);\n+    String base \u003d initial.toString();\n+    int id \u003d lastId;\n+\n+    while (files.hasNext()) {\n+      String file \u003d files.next().getPath().getName();\n+\n+      if (file.startsWith(base)) {\n+        int fileId \u003d extractId(file);\n+\n+        if (fileId \u003e id) {\n+          id \u003d fileId;\n+        }\n+      }\n+    }\n+\n+    // Return either 1 more than the highest we found or 1 more than the last\n+    // ID used (if no ID was found).\n+    return id + 1;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getNextIdToTry(Path initial, int lastId)\n      throws IOException {\n    RemoteIterator\u003cLocatedFileStatus\u003e files \u003d\n        fileSystem.listFiles(currentDirPath, true);\n    String base \u003d initial.toString();\n    int id \u003d lastId;\n\n    while (files.hasNext()) {\n      String file \u003d files.next().getPath().getName();\n\n      if (file.startsWith(base)) {\n        int fileId \u003d extractId(file);\n\n        if (fileId \u003e id) {\n          id \u003d fileId;\n        }\n      }\n    }\n\n    // Return either 1 more than the highest we found or 1 more than the last\n    // ID used (if no ID was found).\n    return id + 1;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/RollingFileSystemSink.java"
    }
  }
}