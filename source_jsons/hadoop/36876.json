{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeLabelsPage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodeLabelsPage.java",
  "functionStartLine": 48,
  "functionEndLine": 81,
  "numCommitsSeen": 7,
  "timeTaken": 2117,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "ae5308fe1d08479da0f3929cc6a57816411e9121",
    "f55d21d89448b81eba6ecbaa4d57bf535461ce73",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "ae5308fe1d08479da0f3929cc6a57816411e9121": "Ybodychange",
    "f55d21d89448b81eba6ecbaa4d57bf535461ce73": "Ybodychange",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": "Ybodychange",
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "15/09/15 11:40 AM",
      "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 681.23,
      "commitsBetweenForRepo": 4401,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n           thead().\n           tr().\n           th(\".name\", \"Label Name\").\n           th(\".type\", \"Label Type\").\n           th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n           th(\".totalResource\", \"Total Resource\").\n-          _()._().\n+          __().__().\n           tbody();\n   \n       RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n       for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n         TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n             tbody.tr().td(info.getLabelName().isEmpty()\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : info.getLabelName());\n         String type \u003d\n             (info.getIsExclusive()) ? \"Exclusive Partition\"\n                 : \"Non Exclusive Partition\";\n         row \u003d row.td(type);\n         int nActiveNMs \u003d info.getNumActiveNMs();\n         if (nActiveNMs \u003e 0) {\n           row \u003d row.td()\n           .a(url(\"nodes\",\n               \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n               String.valueOf(nActiveNMs))\n-           ._();\n+           .__();\n         } else {\n           row \u003d row.td(String.valueOf(nActiveNMs));\n         }\n-        row.td(info.getResource().toString())._();\n+        row.td(info.getResource().toString()).__();\n       }\n-      tbody._()._();\n+      tbody.__().__();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n          thead().\n          tr().\n          th(\".name\", \"Label Name\").\n          th(\".type\", \"Label Type\").\n          th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n          th(\".totalResource\", \"Total Resource\").\n          __().__().\n          tbody();\n  \n      RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n      for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n            tbody.tr().td(info.getLabelName().isEmpty()\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : info.getLabelName());\n        String type \u003d\n            (info.getIsExclusive()) ? \"Exclusive Partition\"\n                : \"Non Exclusive Partition\";\n        row \u003d row.td(type);\n        int nActiveNMs \u003d info.getNumActiveNMs();\n        if (nActiveNMs \u003e 0) {\n          row \u003d row.td()\n          .a(url(\"nodes\",\n              \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n              String.valueOf(nActiveNMs))\n           .__();\n        } else {\n          row \u003d row.td(String.valueOf(nActiveNMs));\n        }\n        row.td(info.getResource().toString()).__();\n      }\n      tbody.__().__();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodeLabelsPage.java",
      "extendedDetails": {}
    },
    "ae5308fe1d08479da0f3929cc6a57816411e9121": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
      "commitDate": "15/09/15 11:40 AM",
      "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/05/15 12:04 PM",
      "commitNameOld": "f55d21d89448b81eba6ecbaa4d57bf535461ce73",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 129.98,
      "commitsBetweenForRepo": 852,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,34 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n           thead().\n           tr().\n           th(\".name\", \"Label Name\").\n           th(\".type\", \"Label Type\").\n           th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n           th(\".totalResource\", \"Total Resource\").\n           _()._().\n           tbody();\n   \n       RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n       for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n         TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n-            tbody.tr().td(\n-                info.getLabelName().isEmpty() ? \"\u003cDEFAULT_PARTITION\u003e\" : info\n-                    .getLabelName());\n+            tbody.tr().td(info.getLabelName().isEmpty()\n+                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : info.getLabelName());\n         String type \u003d\n             (info.getIsExclusive()) ? \"Exclusive Partition\"\n                 : \"Non Exclusive Partition\";\n         row \u003d row.td(type);\n         int nActiveNMs \u003d info.getNumActiveNMs();\n         if (nActiveNMs \u003e 0) {\n           row \u003d row.td()\n           .a(url(\"nodes\",\n               \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n               String.valueOf(nActiveNMs))\n            ._();\n         } else {\n           row \u003d row.td(String.valueOf(nActiveNMs));\n         }\n         row.td(info.getResource().toString())._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n          thead().\n          tr().\n          th(\".name\", \"Label Name\").\n          th(\".type\", \"Label Type\").\n          th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n          th(\".totalResource\", \"Total Resource\").\n          _()._().\n          tbody();\n  \n      RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n      for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n            tbody.tr().td(info.getLabelName().isEmpty()\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : info.getLabelName());\n        String type \u003d\n            (info.getIsExclusive()) ? \"Exclusive Partition\"\n                : \"Non Exclusive Partition\";\n        row \u003d row.td(type);\n        int nActiveNMs \u003d info.getNumActiveNMs();\n        if (nActiveNMs \u003e 0) {\n          row \u003d row.td()\n          .a(url(\"nodes\",\n              \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n              String.valueOf(nActiveNMs))\n           ._();\n        } else {\n          row \u003d row.td(String.valueOf(nActiveNMs));\n        }\n        row.td(info.getResource().toString())._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodeLabelsPage.java",
      "extendedDetails": {}
    },
    "f55d21d89448b81eba6ecbaa4d57bf535461ce73": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3593. Add label-type and Improve \"DEFAULT_PARTITION\" in Node Labels Page. (Naganarasimha G R via wangda)\n",
      "commitDate": "08/05/15 12:04 PM",
      "commitName": "f55d21d89448b81eba6ecbaa4d57bf535461ce73",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "20/03/15 7:04 PM",
      "commitNameOld": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 48.71,
      "commitsBetweenForRepo": 467,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,35 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n           thead().\n           tr().\n           th(\".name\", \"Label Name\").\n+          th(\".type\", \"Label Type\").\n           th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n           th(\".totalResource\", \"Total Resource\").\n           _()._().\n           tbody();\n   \n       RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n       for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n         TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n             tbody.tr().td(\n-                info.getLabelName().isEmpty() ? \"\u003cNO_LABEL\u003e\" : info\n+                info.getLabelName().isEmpty() ? \"\u003cDEFAULT_PARTITION\u003e\" : info\n                     .getLabelName());\n+        String type \u003d\n+            (info.getIsExclusive()) ? \"Exclusive Partition\"\n+                : \"Non Exclusive Partition\";\n+        row \u003d row.td(type);\n         int nActiveNMs \u003d info.getNumActiveNMs();\n         if (nActiveNMs \u003e 0) {\n           row \u003d row.td()\n           .a(url(\"nodes\",\n               \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n               String.valueOf(nActiveNMs))\n            ._();\n         } else {\n           row \u003d row.td(String.valueOf(nActiveNMs));\n         }\n         row.td(info.getResource().toString())._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n          thead().\n          tr().\n          th(\".name\", \"Label Name\").\n          th(\".type\", \"Label Type\").\n          th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n          th(\".totalResource\", \"Total Resource\").\n          _()._().\n          tbody();\n  \n      RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n      for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n            tbody.tr().td(\n                info.getLabelName().isEmpty() ? \"\u003cDEFAULT_PARTITION\u003e\" : info\n                    .getLabelName());\n        String type \u003d\n            (info.getIsExclusive()) ? \"Exclusive Partition\"\n                : \"Non Exclusive Partition\";\n        row \u003d row.td(type);\n        int nActiveNMs \u003d info.getNumActiveNMs();\n        if (nActiveNMs \u003e 0) {\n          row \u003d row.td()\n          .a(url(\"nodes\",\n              \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n              String.valueOf(nActiveNMs))\n           ._();\n        } else {\n          row \u003d row.td(String.valueOf(nActiveNMs));\n        }\n        row.td(info.getResource().toString())._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodeLabelsPage.java",
      "extendedDetails": {}
    },
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3345. Add non-exclusive node label API. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 7:04 PM",
      "commitName": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/12/14 4:49 PM",
      "commitNameOld": "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 80.05,
      "commitsBetweenForRepo": 675,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n           thead().\n           tr().\n           th(\".name\", \"Label Name\").\n           th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n           th(\".totalResource\", \"Total Resource\").\n           _()._().\n           tbody();\n   \n       RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n-      for (NodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n+      for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n         TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n             tbody.tr().td(\n                 info.getLabelName().isEmpty() ? \"\u003cNO_LABEL\u003e\" : info\n                     .getLabelName());\n         int nActiveNMs \u003d info.getNumActiveNMs();\n         if (nActiveNMs \u003e 0) {\n           row \u003d row.td()\n           .a(url(\"nodes\",\n               \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n               String.valueOf(nActiveNMs))\n            ._();\n         } else {\n           row \u003d row.td(String.valueOf(nActiveNMs));\n         }\n         row.td(info.getResource().toString())._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n          thead().\n          tr().\n          th(\".name\", \"Label Name\").\n          th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n          th(\".totalResource\", \"Total Resource\").\n          _()._().\n          tbody();\n  \n      RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n      for (RMNodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n            tbody.tr().td(\n                info.getLabelName().isEmpty() ? \"\u003cNO_LABEL\u003e\" : info\n                    .getLabelName());\n        int nActiveNMs \u003d info.getNumActiveNMs();\n        if (nActiveNMs \u003e 0) {\n          row \u003d row.td()\n          .a(url(\"nodes\",\n              \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n              String.valueOf(nActiveNMs))\n           ._();\n        } else {\n          row \u003d row.td(String.valueOf(nActiveNMs));\n        }\n        row.td(info.getResource().toString())._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodeLabelsPage.java",
      "extendedDetails": {}
    },
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2493. Added node-labels page on RM web UI. Contributed by Wangda Tan\n",
      "commitDate": "30/12/14 4:49 PM",
      "commitName": "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,30 @@\n+    protected void render(Block html) {\n+      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n+          thead().\n+          tr().\n+          th(\".name\", \"Label Name\").\n+          th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n+          th(\".totalResource\", \"Total Resource\").\n+          _()._().\n+          tbody();\n+  \n+      RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n+      for (NodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n+        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n+            tbody.tr().td(\n+                info.getLabelName().isEmpty() ? \"\u003cNO_LABEL\u003e\" : info\n+                    .getLabelName());\n+        int nActiveNMs \u003d info.getNumActiveNMs();\n+        if (nActiveNMs \u003e 0) {\n+          row \u003d row.td()\n+          .a(url(\"nodes\",\n+              \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n+              String.valueOf(nActiveNMs))\n+           ._();\n+        } else {\n+          row \u003d row.td(String.valueOf(nActiveNMs));\n+        }\n+        row.td(info.getResource().toString())._();\n+      }\n+      tbody._()._();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.table(\"#nodelabels\").\n          thead().\n          tr().\n          th(\".name\", \"Label Name\").\n          th(\".numOfActiveNMs\", \"Num Of Active NMs\").\n          th(\".totalResource\", \"Total Resource\").\n          _()._().\n          tbody();\n  \n      RMNodeLabelsManager nlm \u003d rm.getRMContext().getNodeLabelManager();\n      for (NodeLabel info : nlm.pullRMNodeLabelsInfo()) {\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d\n            tbody.tr().td(\n                info.getLabelName().isEmpty() ? \"\u003cNO_LABEL\u003e\" : info\n                    .getLabelName());\n        int nActiveNMs \u003d info.getNumActiveNMs();\n        if (nActiveNMs \u003e 0) {\n          row \u003d row.td()\n          .a(url(\"nodes\",\n              \"?\" + YarnWebParams.NODE_LABEL + \"\u003d\" + info.getLabelName()),\n              String.valueOf(nActiveNMs))\n           ._();\n        } else {\n          row \u003d row.td(String.valueOf(nActiveNMs));\n        }\n        row.td(info.getResource().toString())._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodeLabelsPage.java"
    }
  }
}