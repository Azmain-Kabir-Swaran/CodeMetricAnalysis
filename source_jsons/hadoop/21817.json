{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientDistributedCacheManager.java",
  "functionName": "determineCacheVisibilities",
  "functionId": "determineCacheVisibilities___job-Configuration__statCache-Map__URI,FileStatus__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
  "functionStartLine": 160,
  "functionEndLine": 182,
  "numCommitsSeen": 10,
  "timeTaken": 5211,
  "changeHistory": [
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 4:50 PM",
      "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/01/13 4:50 PM",
          "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 504.02,
          "commitsBetweenForRepo": 3157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  public static void determineCacheVisibilities(Configuration job) \n-  throws IOException {\n+  public static void determineCacheVisibilities(Configuration job,\n+      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n     if (tarchives !\u003d null) {\n       StringBuilder archiveVisibilities \u003d\n-        new StringBuilder(String.valueOf(isPublic(job, tarchives[0])));\n+        new StringBuilder(String.valueOf(isPublic(job, tarchives[0], statCache)));\n       for (int i \u003d 1; i \u003c tarchives.length; i++) {\n         archiveVisibilities.append(\",\");\n-        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i])));\n+        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i], statCache)));\n       }\n       setArchiveVisibilities(job, archiveVisibilities.toString());\n     }\n     URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n     if (tfiles !\u003d null) {\n       StringBuilder fileVisibilities \u003d\n-        new StringBuilder(String.valueOf(isPublic(job, tfiles[0])));\n+        new StringBuilder(String.valueOf(isPublic(job, tfiles[0], statCache)));\n       for (int i \u003d 1; i \u003c tfiles.length; i++) {\n         fileVisibilities.append(\",\");\n-        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i])));\n+        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i], statCache)));\n       }\n       setFileVisibilities(job, fileVisibilities.toString());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void determineCacheVisibilities(Configuration job,\n      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n    if (tarchives !\u003d null) {\n      StringBuilder archiveVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tarchives[0], statCache)));\n      for (int i \u003d 1; i \u003c tarchives.length; i++) {\n        archiveVisibilities.append(\",\");\n        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i], statCache)));\n      }\n      setArchiveVisibilities(job, archiveVisibilities.toString());\n    }\n    URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n    if (tfiles !\u003d null) {\n      StringBuilder fileVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tfiles[0], statCache)));\n      for (int i \u003d 1; i \u003c tfiles.length; i++) {\n        fileVisibilities.append(\",\");\n        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i], statCache)));\n      }\n      setFileVisibilities(job, fileVisibilities.toString());\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
          "extendedDetails": {
            "oldValue": "[job-Configuration]",
            "newValue": "[job-Configuration, statCache-Map\u003cURI,FileStatus\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/01/13 4:50 PM",
          "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 504.02,
          "commitsBetweenForRepo": 3157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  public static void determineCacheVisibilities(Configuration job) \n-  throws IOException {\n+  public static void determineCacheVisibilities(Configuration job,\n+      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n     if (tarchives !\u003d null) {\n       StringBuilder archiveVisibilities \u003d\n-        new StringBuilder(String.valueOf(isPublic(job, tarchives[0])));\n+        new StringBuilder(String.valueOf(isPublic(job, tarchives[0], statCache)));\n       for (int i \u003d 1; i \u003c tarchives.length; i++) {\n         archiveVisibilities.append(\",\");\n-        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i])));\n+        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i], statCache)));\n       }\n       setArchiveVisibilities(job, archiveVisibilities.toString());\n     }\n     URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n     if (tfiles !\u003d null) {\n       StringBuilder fileVisibilities \u003d\n-        new StringBuilder(String.valueOf(isPublic(job, tfiles[0])));\n+        new StringBuilder(String.valueOf(isPublic(job, tfiles[0], statCache)));\n       for (int i \u003d 1; i \u003c tfiles.length; i++) {\n         fileVisibilities.append(\",\");\n-        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i])));\n+        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i], statCache)));\n       }\n       setFileVisibilities(job, fileVisibilities.toString());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void determineCacheVisibilities(Configuration job,\n      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n    if (tarchives !\u003d null) {\n      StringBuilder archiveVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tarchives[0], statCache)));\n      for (int i \u003d 1; i \u003c tarchives.length; i++) {\n        archiveVisibilities.append(\",\");\n        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i], statCache)));\n      }\n      setArchiveVisibilities(job, archiveVisibilities.toString());\n    }\n    URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n    if (tfiles !\u003d null) {\n      StringBuilder fileVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tfiles[0], statCache)));\n      for (int i \u003d 1; i \u003c tfiles.length; i++) {\n        fileVisibilities.append(\",\");\n        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i], statCache)));\n      }\n      setFileVisibilities(job, fileVisibilities.toString());\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void determineCacheVisibilities(Configuration job) \n  throws IOException {\n    URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n    if (tarchives !\u003d null) {\n      StringBuilder archiveVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tarchives[0])));\n      for (int i \u003d 1; i \u003c tarchives.length; i++) {\n        archiveVisibilities.append(\",\");\n        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i])));\n      }\n      setArchiveVisibilities(job, archiveVisibilities.toString());\n    }\n    URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n    if (tfiles !\u003d null) {\n      StringBuilder fileVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tfiles[0])));\n      for (int i \u003d 1; i \u003c tfiles.length; i++) {\n        fileVisibilities.append(\",\");\n        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i])));\n      }\n      setFileVisibilities(job, fileVisibilities.toString());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void determineCacheVisibilities(Configuration job) \n  throws IOException {\n    URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n    if (tarchives !\u003d null) {\n      StringBuilder archiveVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tarchives[0])));\n      for (int i \u003d 1; i \u003c tarchives.length; i++) {\n        archiveVisibilities.append(\",\");\n        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i])));\n      }\n      setArchiveVisibilities(job, archiveVisibilities.toString());\n    }\n    URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n    if (tfiles !\u003d null) {\n      StringBuilder fileVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tfiles[0])));\n      for (int i \u003d 1; i \u003c tfiles.length; i++) {\n        fileVisibilities.append(\",\");\n        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i])));\n      }\n      setFileVisibilities(job, fileVisibilities.toString());\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,23 @@\n+  public static void determineCacheVisibilities(Configuration job) \n+  throws IOException {\n+    URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n+    if (tarchives !\u003d null) {\n+      StringBuilder archiveVisibilities \u003d\n+        new StringBuilder(String.valueOf(isPublic(job, tarchives[0])));\n+      for (int i \u003d 1; i \u003c tarchives.length; i++) {\n+        archiveVisibilities.append(\",\");\n+        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i])));\n+      }\n+      setArchiveVisibilities(job, archiveVisibilities.toString());\n+    }\n+    URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n+    if (tfiles !\u003d null) {\n+      StringBuilder fileVisibilities \u003d\n+        new StringBuilder(String.valueOf(isPublic(job, tfiles[0])));\n+      for (int i \u003d 1; i \u003c tfiles.length; i++) {\n+        fileVisibilities.append(\",\");\n+        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i])));\n+      }\n+      setFileVisibilities(job, fileVisibilities.toString());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void determineCacheVisibilities(Configuration job) \n  throws IOException {\n    URI[] tarchives \u003d DistributedCache.getCacheArchives(job);\n    if (tarchives !\u003d null) {\n      StringBuilder archiveVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tarchives[0])));\n      for (int i \u003d 1; i \u003c tarchives.length; i++) {\n        archiveVisibilities.append(\",\");\n        archiveVisibilities.append(String.valueOf(isPublic(job, tarchives[i])));\n      }\n      setArchiveVisibilities(job, archiveVisibilities.toString());\n    }\n    URI[] tfiles \u003d DistributedCache.getCacheFiles(job);\n    if (tfiles !\u003d null) {\n      StringBuilder fileVisibilities \u003d\n        new StringBuilder(String.valueOf(isPublic(job, tfiles[0])));\n      for (int i \u003d 1; i \u003c tfiles.length; i++) {\n        fileVisibilities.append(\",\");\n        fileVisibilities.append(String.valueOf(isPublic(job, tfiles[i])));\n      }\n      setFileVisibilities(job, fileVisibilities.toString());\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
    }
  }
}