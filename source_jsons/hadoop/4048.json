{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "getFileEncryptionInfo",
  "functionId": "getFileEncryptionInfo___path-Path(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 2763,
  "functionEndLine": 2789,
  "numCommitsSeen": 96,
  "timeTaken": 3106,
  "changeHistory": [
    "853d65a157362661ccab10379c2d82e780382f83"
  ],
  "changeHistoryShort": {
    "853d65a157362661ccab10379c2d82e780382f83": "Yintroduced"
  },
  "changeHistoryDetails": {
    "853d65a157362661ccab10379c2d82e780382f83": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10918. Add a tool to get FileEncryptionInfo from CLI. Contributed by Xiao Chen.\n",
      "commitDate": "03/10/16 4:01 PM",
      "commitName": "853d65a157362661ccab10379c2d82e780382f83",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,27 @@\n+  public FileEncryptionInfo getFileEncryptionInfo(final Path path)\n+      throws IOException {\n+    Path absF \u003d fixRelativePart(path);\n+    return new FileSystemLinkResolver\u003cFileEncryptionInfo\u003e() {\n+      @Override\n+      public FileEncryptionInfo doCall(final Path p) throws IOException {\n+        final HdfsFileStatus fi \u003d dfs.getFileInfo(getPathName(p));\n+        if (fi \u003d\u003d null) {\n+          throw new FileNotFoundException(\"File does not exist: \" + p);\n+        }\n+        return fi.getFileEncryptionInfo();\n+      }\n+\n+      @Override\n+      public FileEncryptionInfo next(final FileSystem fs, final Path p)\n+          throws IOException {\n+        if (fs instanceof DistributedFileSystem) {\n+          DistributedFileSystem myDfs \u003d (DistributedFileSystem)fs;\n+          return myDfs.getFileEncryptionInfo(p);\n+        }\n+        throw new UnsupportedOperationException(\n+            \"Cannot call getFileEncryptionInfo\"\n+                + \" on a symlink to a non-DistributedFileSystem: \" + path\n+                + \" -\u003e \" + p);\n+      }\n+    }.resolve(this, absF);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FileEncryptionInfo getFileEncryptionInfo(final Path path)\n      throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cFileEncryptionInfo\u003e() {\n      @Override\n      public FileEncryptionInfo doCall(final Path p) throws IOException {\n        final HdfsFileStatus fi \u003d dfs.getFileInfo(getPathName(p));\n        if (fi \u003d\u003d null) {\n          throw new FileNotFoundException(\"File does not exist: \" + p);\n        }\n        return fi.getFileEncryptionInfo();\n      }\n\n      @Override\n      public FileEncryptionInfo next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem)fs;\n          return myDfs.getFileEncryptionInfo(p);\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot call getFileEncryptionInfo\"\n                + \" on a symlink to a non-DistributedFileSystem: \" + path\n                + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}