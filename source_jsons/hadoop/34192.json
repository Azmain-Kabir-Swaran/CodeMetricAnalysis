{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuxServices.java",
  "functionName": "createAuxServiceFromLocalClasspath",
  "functionId": "createAuxServiceFromLocalClasspath___service-AuxServiceRecord__appLocalClassPath-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
  "functionStartLine": 225,
  "functionEndLine": 244,
  "numCommitsSeen": 28,
  "timeTaken": 2234,
  "changeHistory": [
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61"
  ],
  "changeHistoryShort": {
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9075.  Add ability to register/remove auxiliary service without restart node manager.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "18/12/18 2:05 PM",
      "commitName": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,20 @@\n+  private AuxiliaryService createAuxServiceFromLocalClasspath(\n+      AuxServiceRecord service, String appLocalClassPath, Configuration conf)\n+      throws IOException, ClassNotFoundException {\n+    Preconditions.checkArgument(appLocalClassPath !\u003d null \u0026\u0026\n+        !appLocalClassPath.isEmpty(),\n+        \"local classpath was null in createAuxServiceFromLocalClasspath\");\n+    final String sName \u003d service.getName();\n+    final String className \u003d getClassName(service);\n+\n+    if (service.getConfiguration() !\u003d null \u0026\u0026 service.getConfiguration()\n+        .getFiles().size() \u003e 0) {\n+      throw new YarnRuntimeException(\"The aux service:\" + sName\n+          + \" has configured local classpath:\" + appLocalClassPath\n+          + \" and config files:\" + service.getConfiguration().getFiles()\n+          + \". Only one of them should be configured.\");\n+    }\n+\n+    return AuxiliaryServiceWithCustomClassLoader.getInstance(conf, className,\n+        appLocalClassPath, getSystemClasses(service, className));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private AuxiliaryService createAuxServiceFromLocalClasspath(\n      AuxServiceRecord service, String appLocalClassPath, Configuration conf)\n      throws IOException, ClassNotFoundException {\n    Preconditions.checkArgument(appLocalClassPath !\u003d null \u0026\u0026\n        !appLocalClassPath.isEmpty(),\n        \"local classpath was null in createAuxServiceFromLocalClasspath\");\n    final String sName \u003d service.getName();\n    final String className \u003d getClassName(service);\n\n    if (service.getConfiguration() !\u003d null \u0026\u0026 service.getConfiguration()\n        .getFiles().size() \u003e 0) {\n      throw new YarnRuntimeException(\"The aux service:\" + sName\n          + \" has configured local classpath:\" + appLocalClassPath\n          + \" and config files:\" + service.getConfiguration().getFiles()\n          + \". Only one of them should be configured.\");\n    }\n\n    return AuxiliaryServiceWithCustomClassLoader.getInstance(conf, className,\n        appLocalClassPath, getSystemClasses(service, className));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
    }
  }
}