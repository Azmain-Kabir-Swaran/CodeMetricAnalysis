{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebAppUtil.java",
  "functionName": "createCredentials",
  "functionId": "createCredentials___credentials-CredentialsInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
  "functionStartLine": 317,
  "functionEndLine": 340,
  "numCommitsSeen": 70,
  "timeTaken": 3881,
  "changeHistory": [
    "bcde66bed1e41b5644811fe90bfbf3d56827db36",
    "c686aa3533b42e1baf62a78bc1bfb0ac05be53bb",
    "075ff276ca9e8c192717a50b0e18485afc8571a6"
  ],
  "changeHistoryShort": {
    "bcde66bed1e41b5644811fe90bfbf3d56827db36": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "c686aa3533b42e1baf62a78bc1bfb0ac05be53bb": "Ybodychange",
    "075ff276ca9e8c192717a50b0e18485afc8571a6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcde66bed1e41b5644811fe90bfbf3d56827db36": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
      "commitDate": "28/07/17 3:44 PM",
      "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "28/07/17 3:44 PM",
          "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "28/07/17 2:21 PM",
          "commitNameOld": "713349a9af4654dad4d4c372454552bfd063ca5f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  private Credentials createCredentials(CredentialsInfo credentials) {\n+  private static Credentials createCredentials(CredentialsInfo credentials) {\n     Credentials ret \u003d new Credentials();\n     try {\n       for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens()\n           .entrySet()) {\n         Text alias \u003d new Text(entry.getKey());\n         Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n         token.decodeFromUrlString(entry.getValue());\n         ret.addToken(alias, token);\n       }\n       for (Map.Entry\u003cString, String\u003e entry : credentials.getSecrets()\n           .entrySet()) {\n         Text alias \u003d new Text(entry.getKey());\n         Base64 decoder \u003d new Base64(0, null, true);\n         byte[] secret \u003d decoder.decode(entry.getValue());\n         ret.addSecretKey(alias, secret);\n       }\n     } catch (IOException ie) {\n       throw new BadRequestException(\n           \"Could not parse credentials data; exception message \u003d \"\n               + ie.getMessage());\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Credentials createCredentials(CredentialsInfo credentials) {\n    Credentials ret \u003d new Credentials();\n    try {\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens()\n          .entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n        token.decodeFromUrlString(entry.getValue());\n        ret.addToken(alias, token);\n      }\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getSecrets()\n          .entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Base64 decoder \u003d new Base64(0, null, true);\n        byte[] secret \u003d decoder.decode(entry.getValue());\n        ret.addSecretKey(alias, secret);\n      }\n    } catch (IOException ie) {\n      throw new BadRequestException(\n          \"Could not parse credentials data; exception message \u003d \"\n              + ie.getMessage());\n    }\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
            "oldMethodName": "createCredentials",
            "newMethodName": "createCredentials"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6897. Refactoring RMWebServices by moving some util methods to RMWebAppUtil. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "28/07/17 3:44 PM",
          "commitName": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "28/07/17 2:21 PM",
          "commitNameOld": "713349a9af4654dad4d4c372454552bfd063ca5f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  private Credentials createCredentials(CredentialsInfo credentials) {\n+  private static Credentials createCredentials(CredentialsInfo credentials) {\n     Credentials ret \u003d new Credentials();\n     try {\n       for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens()\n           .entrySet()) {\n         Text alias \u003d new Text(entry.getKey());\n         Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n         token.decodeFromUrlString(entry.getValue());\n         ret.addToken(alias, token);\n       }\n       for (Map.Entry\u003cString, String\u003e entry : credentials.getSecrets()\n           .entrySet()) {\n         Text alias \u003d new Text(entry.getKey());\n         Base64 decoder \u003d new Base64(0, null, true);\n         byte[] secret \u003d decoder.decode(entry.getValue());\n         ret.addSecretKey(alias, secret);\n       }\n     } catch (IOException ie) {\n       throw new BadRequestException(\n           \"Could not parse credentials data; exception message \u003d \"\n               + ie.getMessage());\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Credentials createCredentials(CredentialsInfo credentials) {\n    Credentials ret \u003d new Credentials();\n    try {\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens()\n          .entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n        token.decodeFromUrlString(entry.getValue());\n        ret.addToken(alias, token);\n      }\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getSecrets()\n          .entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Base64 decoder \u003d new Base64(0, null, true);\n        byte[] secret \u003d decoder.decode(entry.getValue());\n        ret.addSecretKey(alias, secret);\n      }\n    } catch (IOException ie) {\n      throw new BadRequestException(\n          \"Could not parse credentials data; exception message \u003d \"\n              + ie.getMessage());\n    }\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppUtil.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        }
      ]
    },
    "c686aa3533b42e1baf62a78bc1bfb0ac05be53bb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2447. RM web service app submission doesn\u0027t pass secrets correctly. Contributed by Varun Vasudev\n",
      "commitDate": "29/08/14 11:40 AM",
      "commitName": "c686aa3533b42e1baf62a78bc1bfb0ac05be53bb",
      "commitAuthor": "Jian He",
      "commitDateOld": "27/07/14 10:55 AM",
      "commitNameOld": "d6532d3a77abe5a9b1760c1e26a899d49aa661dc",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 33.03,
      "commitsBetweenForRepo": 263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private Credentials createCredentials(CredentialsInfo credentials) {\n     Credentials ret \u003d new Credentials();\n     try {\n       for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n         Text alias \u003d new Text(entry.getKey());\n         Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n         token.decodeFromUrlString(entry.getValue());\n         ret.addToken(alias, token);\n       }\n-      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n+      for (Map.Entry\u003cString, String\u003e entry : credentials.getSecrets().entrySet()) {\n         Text alias \u003d new Text(entry.getKey());\n         Base64 decoder \u003d new Base64(0, null, true);\n         byte[] secret \u003d decoder.decode(entry.getValue());\n         ret.addSecretKey(alias, secret);\n       }\n     } catch (IOException ie) {\n       throw new BadRequestException(\n         \"Could not parse credentials data; exception message \u003d \"\n             + ie.getMessage());\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Credentials createCredentials(CredentialsInfo credentials) {\n    Credentials ret \u003d new Credentials();\n    try {\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n        token.decodeFromUrlString(entry.getValue());\n        ret.addToken(alias, token);\n      }\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getSecrets().entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Base64 decoder \u003d new Base64(0, null, true);\n        byte[] secret \u003d decoder.decode(entry.getValue());\n        ret.addSecretKey(alias, secret);\n      }\n    } catch (IOException ie) {\n      throw new BadRequestException(\n        \"Could not parse credentials data; exception message \u003d \"\n            + ie.getMessage());\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "075ff276ca9e8c192717a50b0e18485afc8571a6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1713. Added get-new-app and submit-app functionality to RM web services. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/07/14 5:23 PM",
      "commitName": "075ff276ca9e8c192717a50b0e18485afc8571a6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  private Credentials createCredentials(CredentialsInfo credentials) {\n+    Credentials ret \u003d new Credentials();\n+    try {\n+      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n+        Text alias \u003d new Text(entry.getKey());\n+        Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n+        token.decodeFromUrlString(entry.getValue());\n+        ret.addToken(alias, token);\n+      }\n+      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n+        Text alias \u003d new Text(entry.getKey());\n+        Base64 decoder \u003d new Base64(0, null, true);\n+        byte[] secret \u003d decoder.decode(entry.getValue());\n+        ret.addSecretKey(alias, secret);\n+      }\n+    } catch (IOException ie) {\n+      throw new BadRequestException(\n+        \"Could not parse credentials data; exception message \u003d \"\n+            + ie.getMessage());\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Credentials createCredentials(CredentialsInfo credentials) {\n    Credentials ret \u003d new Credentials();\n    try {\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Token\u003cTokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n        token.decodeFromUrlString(entry.getValue());\n        ret.addToken(alias, token);\n      }\n      for (Map.Entry\u003cString, String\u003e entry : credentials.getTokens().entrySet()) {\n        Text alias \u003d new Text(entry.getKey());\n        Base64 decoder \u003d new Base64(0, null, true);\n        byte[] secret \u003d decoder.decode(entry.getValue());\n        ret.addSecretKey(alias, secret);\n      }\n    } catch (IOException ie) {\n      throw new BadRequestException(\n        \"Could not parse credentials data; exception message \u003d \"\n            + ie.getMessage());\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}