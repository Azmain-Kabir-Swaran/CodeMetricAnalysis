{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogInfo.java",
  "functionName": "parsePath",
  "functionId": "parsePath___tdm-TimelineDataManager__logPath-Path__appCompleted-boolean__jsonFactory-JsonFactory__objMapper-ObjectMapper__fs-FileSystem",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LogInfo.java",
  "functionStartLine": 134,
  "functionEndLine": 162,
  "numCommitsSeen": 5,
  "timeTaken": 1542,
  "changeHistory": [
    "82665a7887a4bbb3afbc257bec31089173f3a969",
    "6f8074298d8f33effe08f6be49ecfc89f69feda7",
    "02f597c5db36ded385413958bdee793ad7eda40e"
  ],
  "changeHistoryShort": {
    "82665a7887a4bbb3afbc257bec31089173f3a969": "Ybodychange",
    "6f8074298d8f33effe08f6be49ecfc89f69feda7": "Ybodychange",
    "02f597c5db36ded385413958bdee793ad7eda40e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82665a7887a4bbb3afbc257bec31089173f3a969": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15299. Bump Jackson 2 version to Jackson 2.9.x.\n",
      "commitDate": "26/03/18 1:05 PM",
      "commitName": "82665a7887a4bbb3afbc257bec31089173f3a969",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "21/11/16 5:20 PM",
      "commitNameOld": "6f8074298d8f33effe08f6be49ecfc89f69feda7",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 489.78,
      "commitsBetweenForRepo": 3234,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private long parsePath(TimelineDataManager tdm, Path logPath,\n       boolean appCompleted, JsonFactory jsonFactory, ObjectMapper objMapper,\n       FileSystem fs) throws IOException {\n     UserGroupInformation ugi \u003d\n         UserGroupInformation.createRemoteUser(user);\n     FSDataInputStream in \u003d fs.open(logPath);\n     JsonParser parser \u003d null;\n     try {\n       in.seek(offset);\n       try {\n-        parser \u003d jsonFactory.createParser(in);\n+        parser \u003d jsonFactory.createParser((InputStream)in);\n         parser.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, false);\n       } catch (IOException e) {\n         // if app hasn\u0027t completed then there may be errors due to the\n         // incomplete file which are treated as EOF until app completes\n         if (appCompleted) {\n           throw e;\n         } else {\n           LOG.debug(\"Exception in parse path: {}\", e.getMessage());\n           return 0;\n         }\n       }\n \n       return doParse(tdm, parser, objMapper, ugi, appCompleted);\n     } finally {\n       IOUtils.closeStream(parser);\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long parsePath(TimelineDataManager tdm, Path logPath,\n      boolean appCompleted, JsonFactory jsonFactory, ObjectMapper objMapper,\n      FileSystem fs) throws IOException {\n    UserGroupInformation ugi \u003d\n        UserGroupInformation.createRemoteUser(user);\n    FSDataInputStream in \u003d fs.open(logPath);\n    JsonParser parser \u003d null;\n    try {\n      in.seek(offset);\n      try {\n        parser \u003d jsonFactory.createParser((InputStream)in);\n        parser.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, false);\n      } catch (IOException e) {\n        // if app hasn\u0027t completed then there may be errors due to the\n        // incomplete file which are treated as EOF until app completes\n        if (appCompleted) {\n          throw e;\n        } else {\n          LOG.debug(\"Exception in parse path: {}\", e.getMessage());\n          return 0;\n        }\n      }\n\n      return doParse(tdm, parser, objMapper, ugi, appCompleted);\n    } finally {\n      IOUtils.closeStream(parser);\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LogInfo.java",
      "extendedDetails": {}
    },
    "6f8074298d8f33effe08f6be49ecfc89f69feda7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5713. Update jackson from 1.9.13 to 2.x in hadoop-yarn.\n",
      "commitDate": "21/11/16 5:20 PM",
      "commitName": "6f8074298d8f33effe08f6be49ecfc89f69feda7",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/05/16 4:16 AM",
      "commitNameOld": "06413da72efed9a50e49efaf7110c220c88a7f4a",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 202.59,
      "commitsBetweenForRepo": 1561,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private long parsePath(TimelineDataManager tdm, Path logPath,\n       boolean appCompleted, JsonFactory jsonFactory, ObjectMapper objMapper,\n       FileSystem fs) throws IOException {\n     UserGroupInformation ugi \u003d\n         UserGroupInformation.createRemoteUser(user);\n     FSDataInputStream in \u003d fs.open(logPath);\n     JsonParser parser \u003d null;\n     try {\n       in.seek(offset);\n       try {\n-        parser \u003d jsonFactory.createJsonParser(in);\n+        parser \u003d jsonFactory.createParser(in);\n         parser.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, false);\n       } catch (IOException e) {\n         // if app hasn\u0027t completed then there may be errors due to the\n         // incomplete file which are treated as EOF until app completes\n         if (appCompleted) {\n           throw e;\n         } else {\n           LOG.debug(\"Exception in parse path: {}\", e.getMessage());\n           return 0;\n         }\n       }\n \n       return doParse(tdm, parser, objMapper, ugi, appCompleted);\n     } finally {\n       IOUtils.closeStream(parser);\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long parsePath(TimelineDataManager tdm, Path logPath,\n      boolean appCompleted, JsonFactory jsonFactory, ObjectMapper objMapper,\n      FileSystem fs) throws IOException {\n    UserGroupInformation ugi \u003d\n        UserGroupInformation.createRemoteUser(user);\n    FSDataInputStream in \u003d fs.open(logPath);\n    JsonParser parser \u003d null;\n    try {\n      in.seek(offset);\n      try {\n        parser \u003d jsonFactory.createParser(in);\n        parser.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, false);\n      } catch (IOException e) {\n        // if app hasn\u0027t completed then there may be errors due to the\n        // incomplete file which are treated as EOF until app completes\n        if (appCompleted) {\n          throw e;\n        } else {\n          LOG.debug(\"Exception in parse path: {}\", e.getMessage());\n          return 0;\n        }\n      }\n\n      return doParse(tdm, parser, objMapper, ugi, appCompleted);\n    } finally {\n      IOUtils.closeStream(parser);\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LogInfo.java",
      "extendedDetails": {}
    },
    "02f597c5db36ded385413958bdee793ad7eda40e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4265. Provide new timeline plugin storage to support fine-grained entity caching. Contributed by Li Lu and Jason Lowe\n",
      "commitDate": "17/01/16 5:37 PM",
      "commitName": "02f597c5db36ded385413958bdee793ad7eda40e",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,29 @@\n+  private long parsePath(TimelineDataManager tdm, Path logPath,\n+      boolean appCompleted, JsonFactory jsonFactory, ObjectMapper objMapper,\n+      FileSystem fs) throws IOException {\n+    UserGroupInformation ugi \u003d\n+        UserGroupInformation.createRemoteUser(user);\n+    FSDataInputStream in \u003d fs.open(logPath);\n+    JsonParser parser \u003d null;\n+    try {\n+      in.seek(offset);\n+      try {\n+        parser \u003d jsonFactory.createJsonParser(in);\n+        parser.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, false);\n+      } catch (IOException e) {\n+        // if app hasn\u0027t completed then there may be errors due to the\n+        // incomplete file which are treated as EOF until app completes\n+        if (appCompleted) {\n+          throw e;\n+        } else {\n+          LOG.debug(\"Exception in parse path: {}\", e.getMessage());\n+          return 0;\n+        }\n+      }\n+\n+      return doParse(tdm, parser, objMapper, ugi, appCompleted);\n+    } finally {\n+      IOUtils.closeStream(parser);\n+      IOUtils.closeStream(in);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long parsePath(TimelineDataManager tdm, Path logPath,\n      boolean appCompleted, JsonFactory jsonFactory, ObjectMapper objMapper,\n      FileSystem fs) throws IOException {\n    UserGroupInformation ugi \u003d\n        UserGroupInformation.createRemoteUser(user);\n    FSDataInputStream in \u003d fs.open(logPath);\n    JsonParser parser \u003d null;\n    try {\n      in.seek(offset);\n      try {\n        parser \u003d jsonFactory.createJsonParser(in);\n        parser.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, false);\n      } catch (IOException e) {\n        // if app hasn\u0027t completed then there may be errors due to the\n        // incomplete file which are treated as EOF until app completes\n        if (appCompleted) {\n          throw e;\n        } else {\n          LOG.debug(\"Exception in parse path: {}\", e.getMessage());\n          return 0;\n        }\n      }\n\n      return doParse(tdm, parser, objMapper, ugi, appCompleted);\n    } finally {\n      IOUtils.closeStream(parser);\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LogInfo.java"
    }
  }
}