{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMWebServices.java",
  "functionName": "syncYarnSysFS",
  "functionId": "syncYarnSysFS___req-HttpServletRequest(annotations-@javax.ws.rs.core.Context)__user-String(annotations-@PathParam(\"user\"))__appId-String(annotations-@PathParam(\"appId\"))__spec-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
  "functionStartLine": 609,
  "functionEndLine": 628,
  "numCommitsSeen": 32,
  "timeTaken": 1889,
  "changeHistory": [
    "d07e873b7db6cb317eccb4768607c1afb505c99b"
  ],
  "changeHistoryShort": {
    "d07e873b7db6cb317eccb4768607c1afb505c99b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d07e873b7db6cb317eccb4768607c1afb505c99b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8569. Create an interface to provide cluster information to application. Contributed by Eric Yang\n",
      "commitDate": "26/10/18 5:57 PM",
      "commitName": "d07e873b7db6cb317eccb4768607c1afb505c99b",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,20 @@\n+  public Response syncYarnSysFS(@javax.ws.rs.core.Context\n+      HttpServletRequest req,\n+      @PathParam(\"user\") String user,\n+      @PathParam(\"appId\") String appId,\n+      String spec) {\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      if (!req.getRemoteUser().equals(user)) {\n+        return Response.status(Status.FORBIDDEN).build();\n+      }\n+    }\n+    try {\n+      nmContext.getContainerExecutor().updateYarnSysFS(nmContext, user, appId,\n+          spec);\n+    } catch (IOException | ServiceStateException e) {\n+      LOG.error(\"Fail to sync yarn sysfs for application ID: {}, reason: \",\n+          appId, e);\n+      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e).build();\n+    }\n+    return Response.ok().build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response syncYarnSysFS(@javax.ws.rs.core.Context\n      HttpServletRequest req,\n      @PathParam(\"user\") String user,\n      @PathParam(\"appId\") String appId,\n      String spec) {\n    if (UserGroupInformation.isSecurityEnabled()) {\n      if (!req.getRemoteUser().equals(user)) {\n        return Response.status(Status.FORBIDDEN).build();\n      }\n    }\n    try {\n      nmContext.getContainerExecutor().updateYarnSysFS(nmContext, user, appId,\n          spec);\n    } catch (IOException | ServiceStateException e) {\n      LOG.error(\"Fail to sync yarn sysfs for application ID: {}, reason: \",\n          appId, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e).build();\n    }\n    return Response.ok().build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
    }
  }
}