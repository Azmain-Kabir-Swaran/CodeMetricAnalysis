{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "registerApplicationMaster",
  "functionId": "registerApplicationMaster___appHostName-String__appHostPort-int__appTrackingUrl-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 211,
  "functionEndLine": 216,
  "numCommitsSeen": 69,
  "timeTaken": 2609,
  "changeHistory": [
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574",
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
    "fc23fd312174f36508eb40f3084e262e23a68e1b",
    "ac914f79bc80b152e71e7de5497b73f22824f4a7",
    "fe735f237c735a375d2bd194ed80ef9949fb1a68",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "9c4f86879cad6d6e19255d4ae8f28b61328bd10b",
    "0a61990855c23ebfa065145fa01084e84781b51c"
  ],
  "changeHistoryShort": {
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385": "Ybodychange",
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574": "Ybodychange",
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc": "Ybodychange",
    "fc23fd312174f36508eb40f3084e262e23a68e1b": "Ybodychange",
    "ac914f79bc80b152e71e7de5497b73f22824f4a7": "Ybodychange",
    "fe735f237c735a375d2bd194ed80ef9949fb1a68": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "9c4f86879cad6d6e19255d4ae8f28b61328bd10b": "Yexceptionschange",
    "0a61990855c23ebfa065145fa01084e84781b51c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6619. AMRMClient Changes to use the PlacementConstraint and SchcedulingRequest objects. (Arun Suresh via wangda)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "31/10/17 1:09 AM",
      "commitNameOld": "c02d2ba50db8a355ea03081c3984b2ea0c375a3f",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 92.06,
      "commitsBetweenForRepo": 618,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,6 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n       throws YarnException, IOException {\n-    this.appHostName \u003d appHostName;\n-    this.appHostPort \u003d appHostPort;\n-    this.appTrackingUrl \u003d appTrackingUrl;\n-    Preconditions.checkArgument(appHostName !\u003d null,\n-        \"The host name should not be null\");\n-    Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n-        + \" should be any integers larger than or equal to -1\");\n-\n-    return registerApplicationMaster();\n+    return registerApplicationMaster(appHostName, appHostPort, appTrackingUrl,\n+        null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    return registerApplicationMaster(appHostName, appHostPort, appTrackingUrl,\n        null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1366. Changed AMRMClient to re-register with RM and send outstanding requests back to RM on work-preserving RM restart. Contributed by Rohith\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609254 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/14 11:25 AM",
      "commitName": "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/03/14 3:22 PM",
      "commitNameOld": "92317e3459b502f33a3575c247f05d64e5d39a00",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 113.84,
      "commitsBetweenForRepo": 699,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,13 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n       throws YarnException, IOException {\n+    this.appHostName \u003d appHostName;\n+    this.appHostPort \u003d appHostPort;\n+    this.appTrackingUrl \u003d appTrackingUrl;\n     Preconditions.checkArgument(appHostName !\u003d null,\n         \"The host name should not be null\");\n     Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n         + \" should be any integers larger than or equal to -1\");\n-    // do this only once ???\n-    RegisterApplicationMasterRequest request \u003d\n-        RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n-          appTrackingUrl);\n-    RegisterApplicationMasterResponse response \u003d\n-        rmClient.registerApplicationMaster(request);\n \n-    synchronized (this) {\n-      if(!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n-        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n-      }\n-    }\n-    return response;\n+    return registerApplicationMaster();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    this.appHostName \u003d appHostName;\n    this.appHostPort \u003d appHostPort;\n    this.appTrackingUrl \u003d appTrackingUrl;\n    Preconditions.checkArgument(appHostName !\u003d null,\n        \"The host name should not be null\");\n    Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n        + \" should be any integers larger than or equal to -1\");\n\n    return registerApplicationMaster();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/02/14 12:20 PM",
      "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "31/10/13 1:45 PM",
      "commitNameOld": "9a204f8c51c6015d15d603bf413e86a15f1cd32b",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 117.98,
      "commitsBetweenForRepo": 745,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,21 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n       throws YarnException, IOException {\n     Preconditions.checkArgument(appHostName !\u003d null,\n         \"The host name should not be null\");\n     Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n         + \" should be any integers larger than or equal to -1\");\n     // do this only once ???\n     RegisterApplicationMasterRequest request \u003d\n         RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n           appTrackingUrl);\n     RegisterApplicationMasterResponse response \u003d\n         rmClient.registerApplicationMaster(request);\n+\n+    synchronized (this) {\n+      if(!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n+        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n+      }\n+    }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    Preconditions.checkArgument(appHostName !\u003d null,\n        \"The host name should not be null\");\n    Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n        + \" should be any integers larger than or equal to -1\");\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n          appTrackingUrl);\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n\n    synchronized (this) {\n      if(!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n      }\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "fc23fd312174f36508eb40f3084e262e23a68e1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1167. Fixed Distributed Shell to not incorrectly show empty hostname on RM UI. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529376 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/10/13 6:43 PM",
      "commitName": "fc23fd312174f36508eb40f3084e262e23a68e1b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/09/13 4:39 PM",
      "commitNameOld": "42c3cd3d137ba1de1c0573c0bb655fa380ed9412",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 9.09,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n       throws YarnException, IOException {\n     Preconditions.checkArgument(appHostName !\u003d null,\n         \"The host name should not be null\");\n-    Preconditions.checkArgument(appHostPort \u003e\u003d 0,\n-        \"Port number of the host should not be negative\");\n+    Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n+        + \" should be any integers larger than or equal to -1\");\n     // do this only once ???\n     RegisterApplicationMasterRequest request \u003d\n         RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n           appTrackingUrl);\n     RegisterApplicationMasterResponse response \u003d\n         rmClient.registerApplicationMaster(request);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    Preconditions.checkArgument(appHostName !\u003d null,\n        \"The host name should not be null\");\n    Preconditions.checkArgument(appHostPort \u003e\u003d -1, \"Port number of the host\"\n        + \" should be any integers larger than or equal to -1\");\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n          appTrackingUrl);\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "ac914f79bc80b152e71e7de5497b73f22824f4a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-918. Remove ApplicationAttemptId from RegisterApplicationMasterRequestProto. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 5:57 PM",
      "commitName": "ac914f79bc80b152e71e7de5497b73f22824f4a7",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "16/07/13 5:47 PM",
      "commitNameOld": "3520039979188c4ca6e69654223b3ac794e8bf8f",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 2.01,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,15 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n       throws YarnException, IOException {\n     Preconditions.checkArgument(appHostName !\u003d null,\n         \"The host name should not be null\");\n     Preconditions.checkArgument(appHostPort \u003e\u003d 0,\n         \"Port number of the host should not be negative\");\n     // do this only once ???\n-    RegisterApplicationMasterRequest request \u003d recordFactory\n-        .newRecordInstance(RegisterApplicationMasterRequest.class);\n-    synchronized (this) {\n-      request.setApplicationAttemptId(appAttemptId);      \n-    }\n-    request.setHost(appHostName);\n-    request.setRpcPort(appHostPort);\n-    if(appTrackingUrl !\u003d null) {\n-      request.setTrackingUrl(appTrackingUrl);\n-    }\n-    RegisterApplicationMasterResponse response \u003d rmClient\n-        .registerApplicationMaster(request);\n+    RegisterApplicationMasterRequest request \u003d\n+        RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n+          appTrackingUrl);\n+    RegisterApplicationMasterResponse response \u003d\n+        rmClient.registerApplicationMaster(request);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    Preconditions.checkArgument(appHostName !\u003d null,\n        \"The host name should not be null\");\n    Preconditions.checkArgument(appHostPort \u003e\u003d 0,\n        \"Port number of the host should not be negative\");\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(appHostName, appHostPort,\n          appTrackingUrl);\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "fe735f237c735a375d2bd194ed80ef9949fb1a68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-654. AMRMClient: Perform sanity checks for parameters of public methods (Xuan Gong via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/13 10:13 AM",
      "commitName": "fe735f237c735a375d2bd194ed80ef9949fb1a68",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "13/07/13 3:31 PM",
      "commitNameOld": "2adee634269588b85c351e8a3bd2c0c26ad2ba1b",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n       throws YarnException, IOException {\n+    Preconditions.checkArgument(appHostName !\u003d null,\n+        \"The host name should not be null\");\n+    Preconditions.checkArgument(appHostPort \u003e\u003d 0,\n+        \"Port number of the host should not be negative\");\n     // do this only once ???\n     RegisterApplicationMasterRequest request \u003d recordFactory\n         .newRecordInstance(RegisterApplicationMasterRequest.class);\n     synchronized (this) {\n       request.setApplicationAttemptId(appAttemptId);      \n     }\n     request.setHost(appHostName);\n     request.setRpcPort(appHostPort);\n     if(appTrackingUrl !\u003d null) {\n       request.setTrackingUrl(appTrackingUrl);\n     }\n     RegisterApplicationMasterResponse response \u003d rmClient\n         .registerApplicationMaster(request);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    Preconditions.checkArgument(appHostName !\u003d null,\n        \"The host name should not be null\");\n    Preconditions.checkArgument(appHostPort \u003e\u003d 0,\n        \"Port number of the host should not be negative\");\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d recordFactory\n        .newRecordInstance(RegisterApplicationMasterRequest.class);\n    synchronized (this) {\n      request.setApplicationAttemptId(appAttemptId);      \n    }\n    request.setHost(appHostName);\n    request.setRpcPort(appHostPort);\n    if(appTrackingUrl !\u003d null) {\n      request.setTrackingUrl(appTrackingUrl);\n    }\n    RegisterApplicationMasterResponse response \u003d rmClient\n        .registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d recordFactory\n        .newRecordInstance(RegisterApplicationMasterRequest.class);\n    synchronized (this) {\n      request.setApplicationAttemptId(appAttemptId);      \n    }\n    request.setHost(appHostName);\n    request.setRpcPort(appHostPort);\n    if(appTrackingUrl !\u003d null) {\n      request.setTrackingUrl(appTrackingUrl);\n    }\n    RegisterApplicationMasterResponse response \u003d rmClient\n        .registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
      }
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/06/13 5:34 PM",
      "commitNameOld": "d33534c4fb35cb82ff8d56abeeb63a949e72a031",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n-      throws YarnRemoteException, IOException {\n+      throws YarnException, IOException {\n     // do this only once ???\n     RegisterApplicationMasterRequest request \u003d recordFactory\n         .newRecordInstance(RegisterApplicationMasterRequest.class);\n     synchronized (this) {\n       request.setApplicationAttemptId(appAttemptId);      \n     }\n     request.setHost(appHostName);\n     request.setRpcPort(appHostPort);\n     if(appTrackingUrl !\u003d null) {\n       request.setTrackingUrl(appTrackingUrl);\n     }\n     RegisterApplicationMasterResponse response \u003d rmClient\n         .registerApplicationMaster(request);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnException, IOException {\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d recordFactory\n        .newRecordInstance(RegisterApplicationMasterRequest.class);\n    synchronized (this) {\n      request.setApplicationAttemptId(appAttemptId);      \n    }\n    request.setHost(appHostName);\n    request.setRpcPort(appHostPort);\n    if(appTrackingUrl !\u003d null) {\n      request.setTrackingUrl(appTrackingUrl);\n    }\n    RegisterApplicationMasterResponse response \u003d rmClient\n        .registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException, IOException]",
        "newValue": "[YarnException, IOException]"
      }
    },
    "9c4f86879cad6d6e19255d4ae8f28b61328bd10b": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-630. Changed AMRMProtocol api to throw IOException and YarnRemoteException. Contributed by Xuan Gong.\nMAPREDUCE-5226. Handling YarnRemoteException separately from IOException in MR App\u0027s use of AMRMProtocol after YARN-630. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1480529 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/05/13 10:32 PM",
      "commitName": "9c4f86879cad6d6e19255d4ae8f28b61328bd10b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/04/13 7:46 PM",
      "commitNameOld": "be256a181985737ade3f8231b472a2438659c3b2",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 14.11,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public RegisterApplicationMasterResponse registerApplicationMaster(\n       String appHostName, int appHostPort, String appTrackingUrl)\n-      throws YarnRemoteException {\n+      throws YarnRemoteException, IOException {\n     // do this only once ???\n     RegisterApplicationMasterRequest request \u003d recordFactory\n         .newRecordInstance(RegisterApplicationMasterRequest.class);\n     synchronized (this) {\n       request.setApplicationAttemptId(appAttemptId);      \n     }\n     request.setHost(appHostName);\n     request.setRpcPort(appHostPort);\n     if(appTrackingUrl !\u003d null) {\n       request.setTrackingUrl(appTrackingUrl);\n     }\n     RegisterApplicationMasterResponse response \u003d rmClient\n         .registerApplicationMaster(request);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnRemoteException, IOException {\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d recordFactory\n        .newRecordInstance(RegisterApplicationMasterRequest.class);\n    synchronized (this) {\n      request.setApplicationAttemptId(appAttemptId);      \n    }\n    request.setHost(appHostName);\n    request.setRpcPort(appHostPort);\n    if(appTrackingUrl !\u003d null) {\n      request.setTrackingUrl(appTrackingUrl);\n    }\n    RegisterApplicationMasterResponse response \u003d rmClient\n        .registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnRemoteException, IOException]"
      }
    },
    "0a61990855c23ebfa065145fa01084e84781b51c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-103. Add a yarn AM-RM client module. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/13 11:11 AM",
      "commitName": "0a61990855c23ebfa065145fa01084e84781b51c",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,18 @@\n+  public RegisterApplicationMasterResponse registerApplicationMaster(\n+      String appHostName, int appHostPort, String appTrackingUrl)\n+      throws YarnRemoteException {\n+    // do this only once ???\n+    RegisterApplicationMasterRequest request \u003d recordFactory\n+        .newRecordInstance(RegisterApplicationMasterRequest.class);\n+    synchronized (this) {\n+      request.setApplicationAttemptId(appAttemptId);      \n+    }\n+    request.setHost(appHostName);\n+    request.setRpcPort(appHostPort);\n+    if(appTrackingUrl !\u003d null) {\n+      request.setTrackingUrl(appTrackingUrl);\n+    }\n+    RegisterApplicationMasterResponse response \u003d rmClient\n+        .registerApplicationMaster(request);\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RegisterApplicationMasterResponse registerApplicationMaster(\n      String appHostName, int appHostPort, String appTrackingUrl)\n      throws YarnRemoteException {\n    // do this only once ???\n    RegisterApplicationMasterRequest request \u003d recordFactory\n        .newRecordInstance(RegisterApplicationMasterRequest.class);\n    synchronized (this) {\n      request.setApplicationAttemptId(appAttemptId);      \n    }\n    request.setHost(appHostName);\n    request.setRpcPort(appHostPort);\n    if(appTrackingUrl !\u003d null) {\n      request.setTrackingUrl(appTrackingUrl);\n    }\n    RegisterApplicationMasterResponse response \u003d rmClient\n        .registerApplicationMaster(request);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java"
    }
  }
}