{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "createContainer",
  "functionId": "createContainer___node-FSSchedulerNode__capability-Resource__schedulerKey-SchedulerRequestKey",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 654,
  "functionEndLine": 666,
  "numCommitsSeen": 106,
  "timeTaken": 3923,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "3f100d76ff5df020dbb8ecd4f5b4f9736a0a8270",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "486e718fc1f5befd231494e2ec06bb360484f191"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymultichange(Ymodifierchange,Ybodychange)",
    "3f100d76ff5df020dbb8ecd4f5b4f9736a0a8270": "Ybodychange",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ymultichange(Yparameterchange,Ybodychange)",
    "486e718fc1f5befd231494e2ec06bb360484f191": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 1:11 PM",
          "commitNameOld": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 14.36,
          "commitsBetweenForRepo": 89,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n-  public Container createContainer(FSSchedulerNode node, Resource capability,\n+  private Container createContainer(FSSchedulerNode node, Resource capability,\n       SchedulerRequestKey schedulerKey) {\n \n     NodeId nodeId \u003d node.getRMNode().getNodeID();\n     ContainerId containerId \u003d BuilderUtils.newContainerId(\n         getApplicationAttemptId(), getNewContainerId());\n \n     // Create the container\n-    Container container \u003d BuilderUtils.newContainer(containerId, nodeId,\n+    return BuilderUtils.newContainer(containerId, nodeId,\n         node.getRMNode().getHttpAddress(), capability,\n         schedulerKey.getPriority(), null,\n         schedulerKey.getAllocationRequestId());\n-\n-    return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Container createContainer(FSSchedulerNode node, Resource capability,\n      SchedulerRequestKey schedulerKey) {\n\n    NodeId nodeId \u003d node.getRMNode().getNodeID();\n    ContainerId containerId \u003d BuilderUtils.newContainerId(\n        getApplicationAttemptId(), getNewContainerId());\n\n    // Create the container\n    return BuilderUtils.newContainer(containerId, nodeId,\n        node.getRMNode().getHttpAddress(), capability,\n        schedulerKey.getPriority(), null,\n        schedulerKey.getAllocationRequestId());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 1:11 PM",
          "commitNameOld": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 14.36,
          "commitsBetweenForRepo": 89,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n-  public Container createContainer(FSSchedulerNode node, Resource capability,\n+  private Container createContainer(FSSchedulerNode node, Resource capability,\n       SchedulerRequestKey schedulerKey) {\n \n     NodeId nodeId \u003d node.getRMNode().getNodeID();\n     ContainerId containerId \u003d BuilderUtils.newContainerId(\n         getApplicationAttemptId(), getNewContainerId());\n \n     // Create the container\n-    Container container \u003d BuilderUtils.newContainer(containerId, nodeId,\n+    return BuilderUtils.newContainer(containerId, nodeId,\n         node.getRMNode().getHttpAddress(), capability,\n         schedulerKey.getPriority(), null,\n         schedulerKey.getAllocationRequestId());\n-\n-    return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Container createContainer(FSSchedulerNode node, Resource capability,\n      SchedulerRequestKey schedulerKey) {\n\n    NodeId nodeId \u003d node.getRMNode().getNodeID();\n    ContainerId containerId \u003d BuilderUtils.newContainerId(\n        getApplicationAttemptId(), getNewContainerId());\n\n    // Create the container\n    return BuilderUtils.newContainer(containerId, nodeId,\n        node.getRMNode().getHttpAddress(), capability,\n        schedulerKey.getPriority(), null,\n        schedulerKey.getAllocationRequestId());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "3f100d76ff5df020dbb8ecd4f5b4f9736a0a8270": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4888. Changes in scheduler to identify resource-requests explicitly by allocation-id. (Subru Krishnan via wangda)\n",
      "commitDate": "05/08/16 10:43 AM",
      "commitName": "3f100d76ff5df020dbb8ecd4f5b4f9736a0a8270",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/07/16 2:54 PM",
      "commitNameOld": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 9.83,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public Container createContainer(FSSchedulerNode node, Resource capability,\n       SchedulerRequestKey schedulerKey) {\n \n     NodeId nodeId \u003d node.getRMNode().getNodeID();\n     ContainerId containerId \u003d BuilderUtils.newContainerId(\n         getApplicationAttemptId(), getNewContainerId());\n \n     // Create the container\n-    Container container \u003d\n-        BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n-            .getHttpAddress(), capability, schedulerKey.getPriority(), null);\n+    Container container \u003d BuilderUtils.newContainer(containerId, nodeId,\n+        node.getRMNode().getHttpAddress(), capability,\n+        schedulerKey.getPriority(), null,\n+        schedulerKey.getAllocationRequestId());\n \n     return container;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Container createContainer(FSSchedulerNode node, Resource capability,\n      SchedulerRequestKey schedulerKey) {\n\n    NodeId nodeId \u003d node.getRMNode().getNodeID();\n    ContainerId containerId \u003d BuilderUtils.newContainerId(\n        getApplicationAttemptId(), getNewContainerId());\n\n    // Create the container\n    Container container \u003d BuilderUtils.newContainer(containerId, nodeId,\n        node.getRMNode().getHttpAddress(), capability,\n        schedulerKey.getPriority(), null,\n        schedulerKey.getAllocationRequestId());\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 14.68,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public Container createContainer(\n-      FSSchedulerNode node, Resource capability, Priority priority) {\n+  public Container createContainer(FSSchedulerNode node, Resource capability,\n+      SchedulerRequestKey schedulerKey) {\n \n     NodeId nodeId \u003d node.getRMNode().getNodeID();\n     ContainerId containerId \u003d BuilderUtils.newContainerId(\n         getApplicationAttemptId(), getNewContainerId());\n \n     // Create the container\n     Container container \u003d\n         BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n-            .getHttpAddress(), capability, priority, null);\n+            .getHttpAddress(), capability, schedulerKey.getPriority(), null);\n \n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Container createContainer(FSSchedulerNode node, Resource capability,\n      SchedulerRequestKey schedulerKey) {\n\n    NodeId nodeId \u003d node.getRMNode().getNodeID();\n    ContainerId containerId \u003d BuilderUtils.newContainerId(\n        getApplicationAttemptId(), getNewContainerId());\n\n    // Create the container\n    Container container \u003d\n        BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n            .getHttpAddress(), capability, schedulerKey.getPriority(), null);\n\n    return container;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {
            "oldValue": "[node-FSSchedulerNode, capability-Resource, priority-Priority]",
            "newValue": "[node-FSSchedulerNode, capability-Resource, schedulerKey-SchedulerRequestKey]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 14.68,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public Container createContainer(\n-      FSSchedulerNode node, Resource capability, Priority priority) {\n+  public Container createContainer(FSSchedulerNode node, Resource capability,\n+      SchedulerRequestKey schedulerKey) {\n \n     NodeId nodeId \u003d node.getRMNode().getNodeID();\n     ContainerId containerId \u003d BuilderUtils.newContainerId(\n         getApplicationAttemptId(), getNewContainerId());\n \n     // Create the container\n     Container container \u003d\n         BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n-            .getHttpAddress(), capability, priority, null);\n+            .getHttpAddress(), capability, schedulerKey.getPriority(), null);\n \n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Container createContainer(FSSchedulerNode node, Resource capability,\n      SchedulerRequestKey schedulerKey) {\n\n    NodeId nodeId \u003d node.getRMNode().getNodeID();\n    ContainerId containerId \u003d BuilderUtils.newContainerId(\n        getApplicationAttemptId(), getNewContainerId());\n\n    // Create the container\n    Container container \u003d\n        BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n            .getHttpAddress(), capability, schedulerKey.getPriority(), null);\n\n    return container;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "486e718fc1f5befd231494e2ec06bb360484f191": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:43 PM",
      "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,14 @@\n+  public Container createContainer(\n+      FSSchedulerNode node, Resource capability, Priority priority) {\n+\n+    NodeId nodeId \u003d node.getRMNode().getNodeID();\n+    ContainerId containerId \u003d BuilderUtils.newContainerId(\n+        getApplicationAttemptId(), getNewContainerId());\n+\n+    // Create the container\n+    Container container \u003d\n+        BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n+            .getHttpAddress(), capability, priority, null);\n+\n+    return container;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Container createContainer(\n      FSSchedulerNode node, Resource capability, Priority priority) {\n\n    NodeId nodeId \u003d node.getRMNode().getNodeID();\n    ContainerId containerId \u003d BuilderUtils.newContainerId(\n        getApplicationAttemptId(), getNewContainerId());\n\n    // Create the container\n    Container container \u003d\n        BuilderUtils.newContainer(containerId, nodeId, node.getRMNode()\n            .getHttpAddress(), capability, priority, null);\n\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}