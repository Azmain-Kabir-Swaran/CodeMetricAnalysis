{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VisualizeStateMachine.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java",
  "functionStartLine": 59,
  "functionEndLine": 75,
  "numCommitsSeen": 6,
  "timeTaken": 1013,
  "changeHistory": [
    "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62"
  ],
  "changeHistoryShort": {
    "a696fbb001b946ae75f3b8e962839c2fd3decfa1": "Ybodychange",
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9": "Yfilerename",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a696fbb001b946ae75f3b8e962839c2fd3decfa1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2939. Fix new findbugs warnings in hadoop-yarn-common. (Li Lu via junping_du)\n",
      "commitDate": "22/12/14 3:06 AM",
      "commitName": "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
      "commitAuthor": "Junping Du",
      "commitDateOld": "16/06/13 11:51 PM",
      "commitNameOld": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 553.18,
      "commitsBetweenForRepo": 4083,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static void main(String [] args) throws Exception {\n     if (args.length \u003c 3) {\n-      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e\\n\",\n+      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e%n\",\n           VisualizeStateMachine.class.getName());\n       System.exit(1);\n     }\n     String [] classes \u003d args[1].split(\",\");\n     ArrayList\u003cString\u003e validClasses \u003d new ArrayList\u003cString\u003e();\n     for (String c : classes) {\n       String vc \u003d c.trim();\n       if (vc.length()\u003e0) {\n         validClasses.add(vc);\n       }\n     }\n     Graph g \u003d getGraphFromClasses(args[0], validClasses);\n     g.save(args[2]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String [] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e%n\",\n          VisualizeStateMachine.class.getName());\n      System.exit(1);\n    }\n    String [] classes \u003d args[1].split(\",\");\n    ArrayList\u003cString\u003e validClasses \u003d new ArrayList\u003cString\u003e();\n    for (String c : classes) {\n      String vc \u003d c.trim();\n      if (vc.length()\u003e0) {\n        validClasses.add(vc);\n      }\n    }\n    Graph g \u003d getGraphFromClasses(args[0], validClasses);\n    g.save(args[2]);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java",
      "extendedDetails": {}
    },
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9": {
      "type": "Yfilerename",
      "commitMessage": "YARN-833. Moved Graph and VisualizeStateMachine into yarn.state package. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493654 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 11:51 PM",
      "commitName": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String [] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e\\n\",\n          VisualizeStateMachine.class.getName());\n      System.exit(1);\n    }\n    String [] classes \u003d args[1].split(\",\");\n    ArrayList\u003cString\u003e validClasses \u003d new ArrayList\u003cString\u003e();\n    for (String c : classes) {\n      String vc \u003d c.trim();\n      if (vc.length()\u003e0) {\n        validClasses.add(vc);\n      }\n    }\n    Graph g \u003d getGraphFromClasses(args[0], validClasses);\n    g.save(args[2]);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/VisualizeStateMachine.java"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String [] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e\\n\",\n          VisualizeStateMachine.class.getName());\n      System.exit(1);\n    }\n    String [] classes \u003d args[1].split(\",\");\n    ArrayList\u003cString\u003e validClasses \u003d new ArrayList\u003cString\u003e();\n    for (String c : classes) {\n      String vc \u003d c.trim();\n      if (vc.length()\u003e0) {\n        validClasses.add(vc);\n      }\n    }\n    Graph g \u003d getGraphFromClasses(args[0], validClasses);\n    g.save(args[2]);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java"
      }
    },
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2930. Added the ability to be able to generate graphs from the state-machine definitions. Contributed by Binglin Chang.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173524 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/11 1:37 AM",
      "commitName": "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  public static void main(String [] args) throws Exception {\n+    if (args.length \u003c 3) {\n+      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e\\n\",\n+          VisualizeStateMachine.class.getName());\n+      System.exit(1);\n+    }\n+    String [] classes \u003d args[1].split(\",\");\n+    ArrayList\u003cString\u003e validClasses \u003d new ArrayList\u003cString\u003e();\n+    for (String c : classes) {\n+      String vc \u003d c.trim();\n+      if (vc.length()\u003e0) {\n+        validClasses.add(vc);\n+      }\n+    }\n+    Graph g \u003d getGraphFromClasses(args[0], validClasses);\n+    g.save(args[2]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String [] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.err.printf(\"Usage: %s \u003cGraphName\u003e \u003cclass[,class[,...]]\u003e \u003cOutputFile\u003e\\n\",\n          VisualizeStateMachine.class.getName());\n      System.exit(1);\n    }\n    String [] classes \u003d args[1].split(\",\");\n    ArrayList\u003cString\u003e validClasses \u003d new ArrayList\u003cString\u003e();\n    for (String c : classes) {\n      String vc \u003d c.trim();\n      if (vc.length()\u003e0) {\n        validClasses.add(vc);\n      }\n    }\n    Graph g \u003d getGraphFromClasses(args[0], validClasses);\n    g.save(args[2]);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/VisualizeStateMachine.java"
    }
  }
}