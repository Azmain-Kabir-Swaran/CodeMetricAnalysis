{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "initMaximumResourceCapability",
  "functionId": "initMaximumResourceCapability___maximumAllocation-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 355,
  "functionEndLine": 357,
  "numCommitsSeen": 115,
  "timeTaken": 3289,
  "changeHistory": [
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
    "7882bc0f1433ae73361cab4207eb0c15abee4586",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb"
  ],
  "changeHistoryShort": {
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": "Ybodychange",
    "7882bc0f1433ae73361cab4207eb0c15abee4586": "Ybodychange",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4719. Add a helper library to maintain node state and allows common queries. (kasha)\n",
      "commitDate": "14/03/16 2:19 PM",
      "commitName": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "10/02/16 6:06 PM",
      "commitNameOld": "d16b17b4d299b4d58f879a2a15708bacd0938685",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 32.8,
      "commitsBetweenForRepo": 206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,3 @@\n   protected void initMaximumResourceCapability(Resource maximumAllocation) {\n-    maxAllocWriteLock.lock();\n-    try {\n-      if (this.configuredMaximumAllocation \u003d\u003d null) {\n-        this.configuredMaximumAllocation \u003d Resources.clone(maximumAllocation);\n-        this.maximumAllocation \u003d Resources.clone(maximumAllocation);\n-      }\n-    } finally {\n-      maxAllocWriteLock.unlock();\n-    }\n+    nodeTracker.setConfiguredMaxAllocation(maximumAllocation);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initMaximumResourceCapability(Resource maximumAllocation) {\n    nodeTracker.setConfiguredMaxAllocation(maximumAllocation);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "7882bc0f1433ae73361cab4207eb0c15abee4586": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3079. Scheduler should also update maximumAllocation when updateNodeResource. (Zhihai Xu via wangda)\n",
      "commitDate": "28/01/15 9:54 PM",
      "commitName": "7882bc0f1433ae73361cab4207eb0c15abee4586",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/01/15 10:47 AM",
      "commitNameOld": "ae7bf31fe1c63f323ba5271e50fd0e4425a7510f",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 16.46,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   protected void initMaximumResourceCapability(Resource maximumAllocation) {\n-    ReentrantReadWriteLock.WriteLock writeLock \u003d\n-        maximumAllocationLock.writeLock();\n-    writeLock.lock();\n+    maxAllocWriteLock.lock();\n     try {\n       if (this.configuredMaximumAllocation \u003d\u003d null) {\n         this.configuredMaximumAllocation \u003d Resources.clone(maximumAllocation);\n         this.maximumAllocation \u003d Resources.clone(maximumAllocation);\n       }\n     } finally {\n-      writeLock.unlock();\n+      maxAllocWriteLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initMaximumResourceCapability(Resource maximumAllocation) {\n    maxAllocWriteLock.lock();\n    try {\n      if (this.configuredMaximumAllocation \u003d\u003d null) {\n        this.configuredMaximumAllocation \u003d Resources.clone(maximumAllocation);\n        this.maximumAllocation \u003d Resources.clone(maximumAllocation);\n      }\n    } finally {\n      maxAllocWriteLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2604. Scheduler should consider max-allocation-* in conjunction with the largest node. (Robert Kanter via kasha)\n",
      "commitDate": "21/11/14 10:32 AM",
      "commitName": "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,13 @@\n+  protected void initMaximumResourceCapability(Resource maximumAllocation) {\n+    ReentrantReadWriteLock.WriteLock writeLock \u003d\n+        maximumAllocationLock.writeLock();\n+    writeLock.lock();\n+    try {\n+      if (this.configuredMaximumAllocation \u003d\u003d null) {\n+        this.configuredMaximumAllocation \u003d Resources.clone(maximumAllocation);\n+        this.maximumAllocation \u003d Resources.clone(maximumAllocation);\n+      }\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initMaximumResourceCapability(Resource maximumAllocation) {\n    ReentrantReadWriteLock.WriteLock writeLock \u003d\n        maximumAllocationLock.writeLock();\n    writeLock.lock();\n    try {\n      if (this.configuredMaximumAllocation \u003d\u003d null) {\n        this.configuredMaximumAllocation \u003d Resources.clone(maximumAllocation);\n        this.maximumAllocation \u003d Resources.clone(maximumAllocation);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}