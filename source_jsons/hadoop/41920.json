{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActiveStandbyElectorBasedElectorService.java",
  "functionName": "enterNeutralMode",
  "functionId": "enterNeutralMode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ActiveStandbyElectorBasedElectorService.java",
  "functionStartLine": 182,
  "functionEndLine": 204,
  "numCommitsSeen": 18,
  "timeTaken": 1866,
  "changeHistory": [
    "a6410a542e59acd9827457df4a257a843f785c29",
    "6476934ae5de1be7988ab198b673d82fe0f006e3",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e"
  ],
  "changeHistoryShort": {
    "a6410a542e59acd9827457df4a257a843f785c29": "Yfilerename",
    "6476934ae5de1be7988ab198b673d82fe0f006e3": "Ybodychange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/12/16 4:41 PM",
      "commitNameOld": "b0aace21b1ef3436ba9d516186208fee9a9ceef2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void enterNeutralMode() {\n    LOG.warn(\"Lost contact with Zookeeper. Transitioning to standby in \"\n        + zkSessionTimeout + \" ms if connection is not reestablished.\");\n\n    // If we\u0027ve just become disconnected, start a timer.  When the time\u0027s up,\n    // we\u0027ll transition to standby.\n    synchronized (zkDisconnectLock) {\n      if (zkDisconnectTimer \u003d\u003d null) {\n        zkDisconnectTimer \u003d new Timer(\"Zookeeper disconnect timer\");\n        zkDisconnectTimer.schedule(new TimerTask() {\n          @Override\n          public void run() {\n            synchronized (zkDisconnectLock) {\n              // Only run if the timer hasn\u0027t been cancelled\n              if (zkDisconnectTimer !\u003d null) {\n                becomeStandby();\n              }\n            }\n          }\n        }, zkSessionTimeout);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ActiveStandbyElectorBasedElectorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ActiveStandbyElectorBasedElectorService.java"
      }
    },
    "6476934ae5de1be7988ab198b673d82fe0f006e3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5677. RM should transition to standby when connection is lost for an extended period. (Daniel Templeton via kasha)\n",
      "commitDate": "11/10/16 10:07 PM",
      "commitName": "6476934ae5de1be7988ab198b673d82fe0f006e3",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/10/15 1:41 PM",
      "commitNameOld": "0fce5f9a496925f0d53ea6c14318c9b513de9882",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 355.35,
      "commitsBetweenForRepo": 2457,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,23 @@\n   public void enterNeutralMode() {\n-    /**\n-     * Possibly due to transient connection issues. Do nothing.\n-     * TODO: Might want to keep track of how long in this state and transition\n-     * to standby.\n-     */\n+    LOG.warn(\"Lost contact with Zookeeper. Transitioning to standby in \"\n+        + zkSessionTimeout + \" ms if connection is not reestablished.\");\n+\n+    // If we\u0027ve just become disconnected, start a timer.  When the time\u0027s up,\n+    // we\u0027ll transition to standby.\n+    synchronized (zkDisconnectLock) {\n+      if (zkDisconnectTimer \u003d\u003d null) {\n+        zkDisconnectTimer \u003d new Timer(\"Zookeeper disconnect timer\");\n+        zkDisconnectTimer.schedule(new TimerTask() {\n+          @Override\n+          public void run() {\n+            synchronized (zkDisconnectLock) {\n+              // Only run if the timer hasn\u0027t been cancelled\n+              if (zkDisconnectTimer !\u003d null) {\n+                becomeStandby();\n+              }\n+            }\n+          }\n+        }, zkSessionTimeout);\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void enterNeutralMode() {\n    LOG.warn(\"Lost contact with Zookeeper. Transitioning to standby in \"\n        + zkSessionTimeout + \" ms if connection is not reestablished.\");\n\n    // If we\u0027ve just become disconnected, start a timer.  When the time\u0027s up,\n    // we\u0027ll transition to standby.\n    synchronized (zkDisconnectLock) {\n      if (zkDisconnectTimer \u003d\u003d null) {\n        zkDisconnectTimer \u003d new Timer(\"Zookeeper disconnect timer\");\n        zkDisconnectTimer.schedule(new TimerTask() {\n          @Override\n          public void run() {\n            synchronized (zkDisconnectLock) {\n              // Only run if the timer hasn\u0027t been cancelled\n              if (zkDisconnectTimer !\u003d null) {\n                becomeStandby();\n              }\n            }\n          }\n        }, zkSessionTimeout);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java",
      "extendedDetails": {}
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,7 @@\n+  public void enterNeutralMode() {\n+    /**\n+     * Possibly due to transient connection issues. Do nothing.\n+     * TODO: Might want to keep track of how long in this state and transition\n+     * to standby.\n+     */\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void enterNeutralMode() {\n    /**\n     * Possibly due to transient connection issues. Do nothing.\n     * TODO: Might want to keep track of how long in this state and transition\n     * to standby.\n     */\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java"
    }
  }
}