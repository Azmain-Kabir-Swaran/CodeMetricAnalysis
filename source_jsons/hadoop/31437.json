{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineWriterImpl.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
  "functionStartLine": 632,
  "functionEndLine": 679,
  "numCommitsSeen": 36,
  "timeTaken": 4412,
  "changeHistory": [
    "60af8793b45b4057101a22e4248d7ca022b52d79",
    "b220ec6f613dca4542e256008b1be2689c67bb03",
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "9f6540535d9148abbea836d54a9e94d25319c5d5",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60",
    "00e85e7a2b9446dc37265feba07473b156d66367",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875"
  ],
  "changeHistoryShort": {
    "60af8793b45b4057101a22e4248d7ca022b52d79": "Ybodychange",
    "b220ec6f613dca4542e256008b1be2689c67bb03": "Ybodychange",
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db": "Ybodychange",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "9f6540535d9148abbea836d54a9e94d25319c5d5": "Ybodychange",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Ybodychange",
    "00e85e7a2b9446dc37265feba07473b156d66367": "Ybodychange",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": "Ybodychange",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": "Yintroduced"
  },
  "changeHistoryDetails": {
    "60af8793b45b4057101a22e4248d7ca022b52d79": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9821. NM hangs at serviceStop when ATSV2 Backend Hbase is Down. Contributed by Prabhu Joseph.\n",
      "commitDate": "09/09/19 1:56 AM",
      "commitName": "60af8793b45b4057101a22e4248d7ca022b52d79",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "24/06/19 9:19 AM",
      "commitNameOld": "b220ec6f613dca4542e256008b1be2689c67bb03",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 76.69,
      "commitsBetweenForRepo": 699,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,48 @@\n   protected void serviceStop() throws Exception {\n-    if (entityTable !\u003d null) {\n-      LOG.info(\"closing the entity table\");\n-      // The close API performs flushing and releases any resources held\n-      entityTable.close();\n+    boolean isStorageUp \u003d true;\n+    try {\n+      storageMonitor.checkStorageIsUp();\n+    } catch (IOException e) {\n+      LOG.warn(\"Failed to close the timeline tables as Hbase is down\", e);\n+      isStorageUp \u003d false;\n     }\n-    if (appToFlowTable !\u003d null) {\n-      LOG.info(\"closing the app_flow table\");\n-      // The close API performs flushing and releases any resources held\n-      appToFlowTable.close();\n-    }\n-    if (applicationTable !\u003d null) {\n-      LOG.info(\"closing the application table\");\n-      applicationTable.close();\n-    }\n-    if (flowRunTable !\u003d null) {\n-      LOG.info(\"closing the flow run table\");\n-      // The close API performs flushing and releases any resources held\n-      flowRunTable.close();\n-    }\n-    if (flowActivityTable !\u003d null) {\n-      LOG.info(\"closing the flowActivityTable table\");\n-      // The close API performs flushing and releases any resources held\n-      flowActivityTable.close();\n-    }\n-    if (subApplicationTable !\u003d null) {\n-      subApplicationTable.close();\n-    }\n-    if (domainTable !\u003d null) {\n-      domainTable.close();\n-    }\n-    if (conn !\u003d null) {\n-      LOG.info(\"closing the hbase Connection\");\n-      conn.close();\n+\n+    if (isStorageUp) {\n+      if (entityTable !\u003d null) {\n+        LOG.info(\"closing the entity table\");\n+        // The close API performs flushing and releases any resources held\n+        entityTable.close();\n+      }\n+      if (appToFlowTable !\u003d null) {\n+        LOG.info(\"closing the app_flow table\");\n+        // The close API performs flushing and releases any resources held\n+        appToFlowTable.close();\n+      }\n+      if (applicationTable !\u003d null) {\n+        LOG.info(\"closing the application table\");\n+        applicationTable.close();\n+      }\n+      if (flowRunTable !\u003d null) {\n+        LOG.info(\"closing the flow run table\");\n+        // The close API performs flushing and releases any resources held\n+        flowRunTable.close();\n+      }\n+      if (flowActivityTable !\u003d null) {\n+        LOG.info(\"closing the flowActivityTable table\");\n+        // The close API performs flushing and releases any resources held\n+        flowActivityTable.close();\n+      }\n+      if (subApplicationTable !\u003d null) {\n+        subApplicationTable.close();\n+      }\n+      if (domainTable !\u003d null) {\n+        domainTable.close();\n+      }\n+      if (conn !\u003d null) {\n+        LOG.info(\"closing the hbase Connection\");\n+        conn.close();\n+      }\n     }\n     storageMonitor.stop();\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    boolean isStorageUp \u003d true;\n    try {\n      storageMonitor.checkStorageIsUp();\n    } catch (IOException e) {\n      LOG.warn(\"Failed to close the timeline tables as Hbase is down\", e);\n      isStorageUp \u003d false;\n    }\n\n    if (isStorageUp) {\n      if (entityTable !\u003d null) {\n        LOG.info(\"closing the entity table\");\n        // The close API performs flushing and releases any resources held\n        entityTable.close();\n      }\n      if (appToFlowTable !\u003d null) {\n        LOG.info(\"closing the app_flow table\");\n        // The close API performs flushing and releases any resources held\n        appToFlowTable.close();\n      }\n      if (applicationTable !\u003d null) {\n        LOG.info(\"closing the application table\");\n        applicationTable.close();\n      }\n      if (flowRunTable !\u003d null) {\n        LOG.info(\"closing the flow run table\");\n        // The close API performs flushing and releases any resources held\n        flowRunTable.close();\n      }\n      if (flowActivityTable !\u003d null) {\n        LOG.info(\"closing the flowActivityTable table\");\n        // The close API performs flushing and releases any resources held\n        flowActivityTable.close();\n      }\n      if (subApplicationTable !\u003d null) {\n        subApplicationTable.close();\n      }\n      if (domainTable !\u003d null) {\n        domainTable.close();\n      }\n      if (conn !\u003d null) {\n        LOG.info(\"closing the hbase Connection\");\n        conn.close();\n      }\n    }\n    storageMonitor.stop();\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "b220ec6f613dca4542e256008b1be2689c67bb03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9374.  Improve Timeline service resilience when HBase is unavailable.\n            Contributed by Prabhu Joseph and Szilard Nemeth\n",
      "commitDate": "24/06/19 9:19 AM",
      "commitName": "b220ec6f613dca4542e256008b1be2689c67bb03",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/05/18 1:00 PM",
      "commitNameOld": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 403.85,
      "commitsBetweenForRepo": 3022,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   protected void serviceStop() throws Exception {\n     if (entityTable !\u003d null) {\n       LOG.info(\"closing the entity table\");\n       // The close API performs flushing and releases any resources held\n       entityTable.close();\n     }\n     if (appToFlowTable !\u003d null) {\n       LOG.info(\"closing the app_flow table\");\n       // The close API performs flushing and releases any resources held\n       appToFlowTable.close();\n     }\n     if (applicationTable !\u003d null) {\n       LOG.info(\"closing the application table\");\n       applicationTable.close();\n     }\n     if (flowRunTable !\u003d null) {\n       LOG.info(\"closing the flow run table\");\n       // The close API performs flushing and releases any resources held\n       flowRunTable.close();\n     }\n     if (flowActivityTable !\u003d null) {\n       LOG.info(\"closing the flowActivityTable table\");\n       // The close API performs flushing and releases any resources held\n       flowActivityTable.close();\n     }\n     if (subApplicationTable !\u003d null) {\n       subApplicationTable.close();\n     }\n     if (domainTable !\u003d null) {\n       domainTable.close();\n     }\n     if (conn !\u003d null) {\n       LOG.info(\"closing the hbase Connection\");\n       conn.close();\n     }\n+    storageMonitor.stop();\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (flowRunTable !\u003d null) {\n      LOG.info(\"closing the flow run table\");\n      // The close API performs flushing and releases any resources held\n      flowRunTable.close();\n    }\n    if (flowActivityTable !\u003d null) {\n      LOG.info(\"closing the flowActivityTable table\");\n      // The close API performs flushing and releases any resources held\n      flowActivityTable.close();\n    }\n    if (subApplicationTable !\u003d null) {\n      subApplicationTable.close();\n    }\n    if (domainTable !\u003d null) {\n      domainTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    storageMonitor.stop();\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7933. [atsv2 read acls] Add TimelineWriter#writeDomain. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "16/05/18 1:00 PM",
      "commitName": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/04/18 10:23 AM",
      "commitNameOld": "f8b8bd53c4797d406bea5b1b0cdb179e209169cc",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 41.11,
      "commitsBetweenForRepo": 803,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,37 @@\n   protected void serviceStop() throws Exception {\n     if (entityTable !\u003d null) {\n       LOG.info(\"closing the entity table\");\n       // The close API performs flushing and releases any resources held\n       entityTable.close();\n     }\n     if (appToFlowTable !\u003d null) {\n       LOG.info(\"closing the app_flow table\");\n       // The close API performs flushing and releases any resources held\n       appToFlowTable.close();\n     }\n     if (applicationTable !\u003d null) {\n       LOG.info(\"closing the application table\");\n       applicationTable.close();\n     }\n     if (flowRunTable !\u003d null) {\n       LOG.info(\"closing the flow run table\");\n       // The close API performs flushing and releases any resources held\n       flowRunTable.close();\n     }\n     if (flowActivityTable !\u003d null) {\n       LOG.info(\"closing the flowActivityTable table\");\n       // The close API performs flushing and releases any resources held\n       flowActivityTable.close();\n     }\n     if (subApplicationTable !\u003d null) {\n       subApplicationTable.close();\n     }\n+    if (domainTable !\u003d null) {\n+      domainTable.close();\n+    }\n     if (conn !\u003d null) {\n       LOG.info(\"closing the hbase Connection\");\n       conn.close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (flowRunTable !\u003d null) {\n      LOG.info(\"closing the flow run table\");\n      // The close API performs flushing and releases any resources held\n      flowRunTable.close();\n    }\n    if (flowActivityTable !\u003d null) {\n      LOG.info(\"closing the flowActivityTable table\");\n      // The close API performs flushing and releases any resources held\n      flowActivityTable.close();\n    }\n    if (subApplicationTable !\u003d null) {\n      subApplicationTable.close();\n    }\n    if (domainTable !\u003d null) {\n      domainTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (flowRunTable !\u003d null) {\n      LOG.info(\"closing the flow run table\");\n      // The close API performs flushing and releases any resources held\n      flowRunTable.close();\n    }\n    if (flowActivityTable !\u003d null) {\n      LOG.info(\"closing the flowActivityTable table\");\n      // The close API performs flushing and releases any resources held\n      flowActivityTable.close();\n    }\n    if (subApplicationTable !\u003d null) {\n      subApplicationTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
      }
    },
    "9f6540535d9148abbea836d54a9e94d25319c5d5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "71847ed44dc5a1ef702eaf234150a2ff69c15341",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n   protected void serviceStop() throws Exception {\n     if (entityTable !\u003d null) {\n       LOG.info(\"closing the entity table\");\n       // The close API performs flushing and releases any resources held\n       entityTable.close();\n     }\n     if (appToFlowTable !\u003d null) {\n       LOG.info(\"closing the app_flow table\");\n       // The close API performs flushing and releases any resources held\n       appToFlowTable.close();\n     }\n     if (applicationTable !\u003d null) {\n       LOG.info(\"closing the application table\");\n       applicationTable.close();\n     }\n     if (flowRunTable !\u003d null) {\n       LOG.info(\"closing the flow run table\");\n       // The close API performs flushing and releases any resources held\n       flowRunTable.close();\n     }\n     if (flowActivityTable !\u003d null) {\n       LOG.info(\"closing the flowActivityTable table\");\n       // The close API performs flushing and releases any resources held\n       flowActivityTable.close();\n     }\n+    if (subApplicationTable !\u003d null) {\n+      subApplicationTable.close();\n+    }\n     if (conn !\u003d null) {\n       LOG.info(\"closing the hbase Connection\");\n       conn.close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (flowRunTable !\u003d null) {\n      LOG.info(\"closing the flow run table\");\n      // The close API performs flushing and releases any resources held\n      flowRunTable.close();\n    }\n    if (flowActivityTable !\u003d null) {\n      LOG.info(\"closing the flowActivityTable table\");\n      // The close API performs flushing and releases any resources held\n      flowActivityTable.close();\n    }\n    if (subApplicationTable !\u003d null) {\n      subApplicationTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (flowRunTable !\u003d null) {\n      LOG.info(\"closing the flow run table\");\n      // The close API performs flushing and releases any resources held\n      flowRunTable.close();\n    }\n    if (flowActivityTable !\u003d null) {\n      LOG.info(\"closing the flowActivityTable table\");\n      // The close API performs flushing and releases any resources held\n      flowActivityTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
      }
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "7a41b5501ea76f94f15f53f6380b3c63f14b5a78",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,31 @@\n   protected void serviceStop() throws Exception {\n     if (entityTable !\u003d null) {\n       LOG.info(\"closing the entity table\");\n       // The close API performs flushing and releases any resources held\n       entityTable.close();\n     }\n     if (appToFlowTable !\u003d null) {\n       LOG.info(\"closing the app_flow table\");\n       // The close API performs flushing and releases any resources held\n       appToFlowTable.close();\n     }\n     if (applicationTable !\u003d null) {\n       LOG.info(\"closing the application table\");\n       applicationTable.close();\n     }\n+    if (flowRunTable !\u003d null) {\n+      LOG.info(\"closing the flow run table\");\n+      // The close API performs flushing and releases any resources held\n+      flowRunTable.close();\n+    }\n+    if (flowActivityTable !\u003d null) {\n+      LOG.info(\"closing the flowActivityTable table\");\n+      // The close API performs flushing and releases any resources held\n+      flowActivityTable.close();\n+    }\n     if (conn !\u003d null) {\n       LOG.info(\"closing the hbase Connection\");\n       conn.close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (flowRunTable !\u003d null) {\n      LOG.info(\"closing the flow run table\");\n      // The close API performs flushing and releases any resources held\n      flowRunTable.close();\n    }\n    if (flowActivityTable !\u003d null) {\n      LOG.info(\"closing the flowActivityTable table\");\n      // The close API performs flushing and releases any resources held\n      flowActivityTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "00e85e7a2b9446dc37265feba07473b156d66367": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3906. Split the application table from the entity table. Contributed by Sangjin Lee.\n\n(cherry picked from commit bcd755eba9466ce277d3c14192c31da6462c4ab3)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "00e85e7a2b9446dc37265feba07473b156d66367",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,21 @@\n   protected void serviceStop() throws Exception {\n     if (entityTable !\u003d null) {\n-      LOG.info(\"closing entity table\");\n+      LOG.info(\"closing the entity table\");\n       // The close API performs flushing and releases any resources held\n       entityTable.close();\n     }\n     if (appToFlowTable !\u003d null) {\n-      LOG.info(\"closing app_flow table\");\n+      LOG.info(\"closing the app_flow table\");\n       // The close API performs flushing and releases any resources held\n       appToFlowTable.close();\n     }\n+    if (applicationTable !\u003d null) {\n+      LOG.info(\"closing the application table\");\n+      applicationTable.close();\n+    }\n     if (conn !\u003d null) {\n       LOG.info(\"closing the hbase Connection\");\n       conn.close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing the entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing the app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (applicationTable !\u003d null) {\n      LOG.info(\"closing the application table\");\n      applicationTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9422d9b50d90a99062880cf648dd86a764bf97ec",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,17 @@\n   protected void serviceStop() throws Exception {\n     if (entityTable !\u003d null) {\n       LOG.info(\"closing entity table\");\n       // The close API performs flushing and releases any resources held\n       entityTable.close();\n     }\n+    if (appToFlowTable !\u003d null) {\n+      LOG.info(\"closing app_flow table\");\n+      // The close API performs flushing and releases any resources held\n+      appToFlowTable.close();\n+    }\n     if (conn !\u003d null) {\n       LOG.info(\"closing the hbase Connection\");\n       conn.close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (appToFlowTable !\u003d null) {\n      LOG.info(\"closing app_flow table\");\n      // The close API performs flushing and releases any resources held\n      appToFlowTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3411. [Storage implementation] explore the native HBase write schema for storage (Vrushali C via sjlee)\n\n(cherry picked from commit 7a3068854d27eadae1c57545988f5b2029bf119a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,12 @@\n+  protected void serviceStop() throws Exception {\n+    if (entityTable !\u003d null) {\n+      LOG.info(\"closing entity table\");\n+      // The close API performs flushing and releases any resources held\n+      entityTable.close();\n+    }\n+    if (conn !\u003d null) {\n+      LOG.info(\"closing the hbase Connection\");\n+      conn.close();\n+    }\n+    super.serviceStop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (entityTable !\u003d null) {\n      LOG.info(\"closing entity table\");\n      // The close API performs flushing and releases any resources held\n      entityTable.close();\n    }\n    if (conn !\u003d null) {\n      LOG.info(\"closing the hbase Connection\");\n      conn.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
    }
  }
}