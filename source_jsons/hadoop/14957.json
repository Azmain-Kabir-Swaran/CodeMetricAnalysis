{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageTextWriter.java",
  "functionName": "output",
  "functionId": "output___conf-Configuration__summary-FileSummary__fin-FileInputStream__sections-ArrayList__FileSummary.Section__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
  "functionStartLine": 640,
  "functionEndLine": 658,
  "numCommitsSeen": 9,
  "timeTaken": 1736,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744",
    "9d494f0c0eaa05417f3a3e88487d878d1731da36",
    "caf7298e49f646a40023af999f62d61846fde5e2"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Ybodychange",
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": "Ybodychange",
    "caf7298e49f646a40023af999f62d61846fde5e2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "26/10/18 4:41 PM",
      "commitNameOld": "4f10d7e23fc0b757a9e94bc448187a6211b90f10",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 37.79,
      "commitsBetweenForRepo": 254,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private void output(Configuration conf, FileSummary summary,\n       FileInputStream fin, ArrayList\u003cFileSummary.Section\u003e sections)\n       throws IOException {\n     InputStream is;\n     long startTime \u003d Time.monotonicNow();\n     out.println(getHeader());\n     for (FileSummary.Section section : sections) {\n       if (SectionName.fromString(section.getName()) \u003d\u003d SectionName.INODE) {\n         fin.getChannel().position(section.getOffset());\n         is \u003d FSImageUtil.wrapInputStreamForCompression(conf,\n             summary.getCodec(), new BufferedInputStream(new LimitInputStream(\n                 fin, section.getLength())));\n         outputINodes(is);\n       }\n     }\n+    afterOutput();\n     long timeTaken \u003d Time.monotonicNow() - startTime;\n     LOG.debug(\"Time to output inodes: {}ms\", timeTaken);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void output(Configuration conf, FileSummary summary,\n      FileInputStream fin, ArrayList\u003cFileSummary.Section\u003e sections)\n      throws IOException {\n    InputStream is;\n    long startTime \u003d Time.monotonicNow();\n    out.println(getHeader());\n    for (FileSummary.Section section : sections) {\n      if (SectionName.fromString(section.getName()) \u003d\u003d SectionName.INODE) {\n        fin.getChannel().position(section.getOffset());\n        is \u003d FSImageUtil.wrapInputStreamForCompression(conf,\n            summary.getCodec(), new BufferedInputStream(new LimitInputStream(\n                fin, section.getLength())));\n        outputINodes(is);\n      }\n    }\n    afterOutput();\n    long timeTaken \u003d Time.monotonicNow() - startTime;\n    LOG.debug(\"Time to output inodes: {}ms\", timeTaken);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
      "extendedDetails": {}
    },
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9721. Allow Delimited PB OIV tool to run upon fsimage that contains INodeReference. (Xiao Chen via lei)\n",
      "commitDate": "02/02/16 10:42 AM",
      "commitName": "9d494f0c0eaa05417f3a3e88487d878d1731da36",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "07/04/15 2:23 PM",
      "commitNameOld": "1e72d98c69bef3526cf0eb617de69e0b6d2fc13c",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 300.89,
      "commitsBetweenForRepo": 2355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   private void output(Configuration conf, FileSummary summary,\n       FileInputStream fin, ArrayList\u003cFileSummary.Section\u003e sections)\n       throws IOException {\n     InputStream is;\n     long startTime \u003d Time.monotonicNow();\n+    out.println(getHeader());\n     for (FileSummary.Section section : sections) {\n       if (SectionName.fromString(section.getName()) \u003d\u003d SectionName.INODE) {\n         fin.getChannel().position(section.getOffset());\n         is \u003d FSImageUtil.wrapInputStreamForCompression(conf,\n             summary.getCodec(), new BufferedInputStream(new LimitInputStream(\n                 fin, section.getLength())));\n         outputINodes(is);\n       }\n     }\n     long timeTaken \u003d Time.monotonicNow() - startTime;\n     LOG.debug(\"Time to output inodes: {}ms\", timeTaken);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void output(Configuration conf, FileSummary summary,\n      FileInputStream fin, ArrayList\u003cFileSummary.Section\u003e sections)\n      throws IOException {\n    InputStream is;\n    long startTime \u003d Time.monotonicNow();\n    out.println(getHeader());\n    for (FileSummary.Section section : sections) {\n      if (SectionName.fromString(section.getName()) \u003d\u003d SectionName.INODE) {\n        fin.getChannel().position(section.getOffset());\n        is \u003d FSImageUtil.wrapInputStreamForCompression(conf,\n            summary.getCodec(), new BufferedInputStream(new LimitInputStream(\n                fin, section.getLength())));\n        outputINodes(is);\n      }\n    }\n    long timeTaken \u003d Time.monotonicNow() - startTime;\n    LOG.debug(\"Time to output inodes: {}ms\", timeTaken);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
      "extendedDetails": {}
    },
    "caf7298e49f646a40023af999f62d61846fde5e2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6673. Add delimited format support to PB OIV tool. Contributed by Eddy Xu.\n",
      "commitDate": "28/01/15 12:36 PM",
      "commitName": "caf7298e49f646a40023af999f62d61846fde5e2",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,17 @@\n+  private void output(Configuration conf, FileSummary summary,\n+      FileInputStream fin, ArrayList\u003cFileSummary.Section\u003e sections)\n+      throws IOException {\n+    InputStream is;\n+    long startTime \u003d Time.monotonicNow();\n+    for (FileSummary.Section section : sections) {\n+      if (SectionName.fromString(section.getName()) \u003d\u003d SectionName.INODE) {\n+        fin.getChannel().position(section.getOffset());\n+        is \u003d FSImageUtil.wrapInputStreamForCompression(conf,\n+            summary.getCodec(), new BufferedInputStream(new LimitInputStream(\n+                fin, section.getLength())));\n+        outputINodes(is);\n+      }\n+    }\n+    long timeTaken \u003d Time.monotonicNow() - startTime;\n+    LOG.debug(\"Time to output inodes: {}ms\", timeTaken);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void output(Configuration conf, FileSummary summary,\n      FileInputStream fin, ArrayList\u003cFileSummary.Section\u003e sections)\n      throws IOException {\n    InputStream is;\n    long startTime \u003d Time.monotonicNow();\n    for (FileSummary.Section section : sections) {\n      if (SectionName.fromString(section.getName()) \u003d\u003d SectionName.INODE) {\n        fin.getChannel().position(section.getOffset());\n        is \u003d FSImageUtil.wrapInputStreamForCompression(conf,\n            summary.getCodec(), new BufferedInputStream(new LimitInputStream(\n                fin, section.getLength())));\n        outputINodes(is);\n      }\n    }\n    long timeTaken \u003d Time.monotonicNow() - startTime;\n    LOG.debug(\"Time to output inodes: {}ms\", timeTaken);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java"
    }
  }
}