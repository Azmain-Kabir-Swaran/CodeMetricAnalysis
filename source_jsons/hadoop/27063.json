{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProxyCA.java",
  "functionName": "createChildKeyStore",
  "functionId": "createChildKeyStore___appId-ApplicationId__ksPassword-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/ProxyCA.java",
  "functionStartLine": 200,
  "functionEndLine": 220,
  "numCommitsSeen": 3,
  "timeTaken": 1302,
  "changeHistory": [
    "c2288ac45b748b4119442c46147ccc324926c340"
  ],
  "changeHistoryShort": {
    "c2288ac45b748b4119442c46147ccc324926c340": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2288ac45b748b4119442c46147ccc324926c340": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8448. AM HTTPS Support for AM communication with RMWeb proxy. (Contributed by Robert Kanter)\n",
      "commitDate": "16/10/18 1:36 PM",
      "commitName": "c2288ac45b748b4119442c46147ccc324926c340",
      "commitAuthor": "Haibo Chen",
      "diff": "@@ -0,0 +1,21 @@\n+  public byte[] createChildKeyStore(ApplicationId appId, String ksPassword)\n+      throws Exception {\n+    // We don\u0027t check the expiration date, and this will provide further reason\n+    // for outside users to not accept these certificates\n+    Date from \u003d new Date();\n+    Date to \u003d from;\n+    KeyPairGenerator keyGen \u003d KeyPairGenerator.getInstance(\"RSA\");\n+    keyGen.initialize(2048);\n+    KeyPair keyPair \u003d keyGen.genKeyPair();\n+    String issuer \u003d caCert.getSubjectX500Principal().getName();\n+    String subject \u003d \"CN\u003d\" + appId;\n+    X509Certificate cert \u003d createCert(false, issuer, subject, from, to,\n+        keyPair.getPublic(), caKeyPair.getPrivate());\n+    if (LOG.isTraceEnabled()) {\n+      LOG.trace(\"Certificate for {}: \\n{}\", appId, cert);\n+    }\n+\n+    KeyStore keyStore \u003d createChildKeyStore(ksPassword, \"server\",\n+        keyPair.getPrivate(), cert);\n+    return keyStoreToBytes(keyStore, ksPassword);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public byte[] createChildKeyStore(ApplicationId appId, String ksPassword)\n      throws Exception {\n    // We don\u0027t check the expiration date, and this will provide further reason\n    // for outside users to not accept these certificates\n    Date from \u003d new Date();\n    Date to \u003d from;\n    KeyPairGenerator keyGen \u003d KeyPairGenerator.getInstance(\"RSA\");\n    keyGen.initialize(2048);\n    KeyPair keyPair \u003d keyGen.genKeyPair();\n    String issuer \u003d caCert.getSubjectX500Principal().getName();\n    String subject \u003d \"CN\u003d\" + appId;\n    X509Certificate cert \u003d createCert(false, issuer, subject, from, to,\n        keyPair.getPublic(), caKeyPair.getPrivate());\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"Certificate for {}: \\n{}\", appId, cert);\n    }\n\n    KeyStore keyStore \u003d createChildKeyStore(ksPassword, \"server\",\n        keyPair.getPrivate(), cert);\n    return keyStoreToBytes(keyStore, ksPassword);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/ProxyCA.java"
    }
  }
}