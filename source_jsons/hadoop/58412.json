{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EventDispatcher.java",
  "functionName": "handle",
  "functionId": "handle___event-T",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
  "functionStartLine": 118,
  "functionEndLine": 133,
  "numCommitsSeen": 150,
  "timeTaken": 9798,
  "changeHistory": [
    "341888a0aa23f24458b4e6e34868794b9735c06a",
    "553b591ba06bbf0b18dca674d25a48218fed0a26",
    "81a456e6386e1241c14b3b6b62dc2e5d445f5ee7",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "341888a0aa23f24458b4e6e34868794b9735c06a": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "553b591ba06bbf0b18dca674d25a48218fed0a26": "Ybodychange",
    "81a456e6386e1241c14b3b6b62dc2e5d445f5ee7": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "341888a0aa23f24458b4e6e34868794b9735c06a": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
      "commitDate": "26/04/16 8:12 PM",
      "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
          "commitDate": "26/04/16 8:12 PM",
          "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "26/04/16 6:45 PM",
          "commitNameOld": "68b4564e78380a2fac1a9000fb862104d4bc86e5",
          "commitAuthorOld": "Masatake Iwasaki",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,16 @@\n-    public void handle(SchedulerEvent event) {\n-      try {\n-        int qSize \u003d eventQueue.size();\n-        if (qSize !\u003d 0 \u0026\u0026 qSize % 1000 \u003d\u003d 0\n-            \u0026\u0026 lastEventQueueSizeLogged !\u003d qSize) {\n-          lastEventQueueSizeLogged \u003d qSize;\n-          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n-        }\n-        int remCapacity \u003d eventQueue.remainingCapacity();\n-        if (remCapacity \u003c 1000) {\n-          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n-              + remCapacity);\n-        }\n-        this.eventQueue.put(event);\n-      } catch (InterruptedException e) {\n-        LOG.info(\"Interrupted. Trying to exit gracefully.\");\n+  public void handle(T event) {\n+    try {\n+      int qSize \u003d eventQueue.size();\n+      if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n+        LOG.info(\"Size of \" + getName() + \" event-queue is \" + qSize);\n       }\n-    }\n\\ No newline at end of file\n+      int remCapacity \u003d eventQueue.remainingCapacity();\n+      if (remCapacity \u003c 1000) {\n+        LOG.info(\"Very low remaining capacity on \" + getName() + \"\" +\n+            \"event queue: \" + remCapacity);\n+      }\n+      this.eventQueue.put(event);\n+    } catch (InterruptedException e) {\n+      LOG.info(\"Interrupted. Trying to exit gracefully.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void handle(T event) {\n    try {\n      int qSize \u003d eventQueue.size();\n      if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n        LOG.info(\"Size of \" + getName() + \" event-queue is \" + qSize);\n      }\n      int remCapacity \u003d eventQueue.remainingCapacity();\n      if (remCapacity \u003c 1000) {\n        LOG.info(\"Very low remaining capacity on \" + getName() + \"\" +\n            \"event queue: \" + remCapacity);\n      }\n      this.eventQueue.put(event);\n    } catch (InterruptedException e) {\n      LOG.info(\"Interrupted. Trying to exit gracefully.\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
            "oldMethodName": "handle",
            "newMethodName": "handle"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
          "commitDate": "26/04/16 8:12 PM",
          "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "26/04/16 6:45 PM",
          "commitNameOld": "68b4564e78380a2fac1a9000fb862104d4bc86e5",
          "commitAuthorOld": "Masatake Iwasaki",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,16 @@\n-    public void handle(SchedulerEvent event) {\n-      try {\n-        int qSize \u003d eventQueue.size();\n-        if (qSize !\u003d 0 \u0026\u0026 qSize % 1000 \u003d\u003d 0\n-            \u0026\u0026 lastEventQueueSizeLogged !\u003d qSize) {\n-          lastEventQueueSizeLogged \u003d qSize;\n-          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n-        }\n-        int remCapacity \u003d eventQueue.remainingCapacity();\n-        if (remCapacity \u003c 1000) {\n-          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n-              + remCapacity);\n-        }\n-        this.eventQueue.put(event);\n-      } catch (InterruptedException e) {\n-        LOG.info(\"Interrupted. Trying to exit gracefully.\");\n+  public void handle(T event) {\n+    try {\n+      int qSize \u003d eventQueue.size();\n+      if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n+        LOG.info(\"Size of \" + getName() + \" event-queue is \" + qSize);\n       }\n-    }\n\\ No newline at end of file\n+      int remCapacity \u003d eventQueue.remainingCapacity();\n+      if (remCapacity \u003c 1000) {\n+        LOG.info(\"Very low remaining capacity on \" + getName() + \"\" +\n+            \"event queue: \" + remCapacity);\n+      }\n+      this.eventQueue.put(event);\n+    } catch (InterruptedException e) {\n+      LOG.info(\"Interrupted. Trying to exit gracefully.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void handle(T event) {\n    try {\n      int qSize \u003d eventQueue.size();\n      if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n        LOG.info(\"Size of \" + getName() + \" event-queue is \" + qSize);\n      }\n      int remCapacity \u003d eventQueue.remainingCapacity();\n      if (remCapacity \u003c 1000) {\n        LOG.info(\"Very low remaining capacity on \" + getName() + \"\" +\n            \"event queue: \" + remCapacity);\n      }\n      this.eventQueue.put(event);\n    } catch (InterruptedException e) {\n      LOG.info(\"Interrupted. Trying to exit gracefully.\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
          "commitDate": "26/04/16 8:12 PM",
          "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "26/04/16 6:45 PM",
          "commitNameOld": "68b4564e78380a2fac1a9000fb862104d4bc86e5",
          "commitAuthorOld": "Masatake Iwasaki",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,16 @@\n-    public void handle(SchedulerEvent event) {\n-      try {\n-        int qSize \u003d eventQueue.size();\n-        if (qSize !\u003d 0 \u0026\u0026 qSize % 1000 \u003d\u003d 0\n-            \u0026\u0026 lastEventQueueSizeLogged !\u003d qSize) {\n-          lastEventQueueSizeLogged \u003d qSize;\n-          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n-        }\n-        int remCapacity \u003d eventQueue.remainingCapacity();\n-        if (remCapacity \u003c 1000) {\n-          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n-              + remCapacity);\n-        }\n-        this.eventQueue.put(event);\n-      } catch (InterruptedException e) {\n-        LOG.info(\"Interrupted. Trying to exit gracefully.\");\n+  public void handle(T event) {\n+    try {\n+      int qSize \u003d eventQueue.size();\n+      if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n+        LOG.info(\"Size of \" + getName() + \" event-queue is \" + qSize);\n       }\n-    }\n\\ No newline at end of file\n+      int remCapacity \u003d eventQueue.remainingCapacity();\n+      if (remCapacity \u003c 1000) {\n+        LOG.info(\"Very low remaining capacity on \" + getName() + \"\" +\n+            \"event queue: \" + remCapacity);\n+      }\n+      this.eventQueue.put(event);\n+    } catch (InterruptedException e) {\n+      LOG.info(\"Interrupted. Trying to exit gracefully.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void handle(T event) {\n    try {\n      int qSize \u003d eventQueue.size();\n      if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n        LOG.info(\"Size of \" + getName() + \" event-queue is \" + qSize);\n      }\n      int remCapacity \u003d eventQueue.remainingCapacity();\n      if (remCapacity \u003c 1000) {\n        LOG.info(\"Very low remaining capacity on \" + getName() + \"\" +\n            \"event queue: \" + remCapacity);\n      }\n      this.eventQueue.put(event);\n    } catch (InterruptedException e) {\n      LOG.info(\"Interrupted. Trying to exit gracefully.\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
          "extendedDetails": {
            "oldValue": "[event-SchedulerEvent]",
            "newValue": "[event-T]"
          }
        }
      ]
    },
    "553b591ba06bbf0b18dca674d25a48218fed0a26": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4722. AsyncDispatcher logs redundant event queue sizes (Jason Lowe via sjlee)\n",
      "commitDate": "24/02/16 9:29 AM",
      "commitName": "553b591ba06bbf0b18dca674d25a48218fed0a26",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "01/02/16 3:15 PM",
      "commitNameOld": "ed55950164a66e08fa34e30dba1030c5a986d1f1",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 22.76,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n     public void handle(SchedulerEvent event) {\n       try {\n         int qSize \u003d eventQueue.size();\n-        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n+        if (qSize !\u003d 0 \u0026\u0026 qSize % 1000 \u003d\u003d 0\n+            \u0026\u0026 lastEventQueueSizeLogged !\u003d qSize) {\n+          lastEventQueueSizeLogged \u003d qSize;\n           LOG.info(\"Size of scheduler event-queue is \" + qSize);\n         }\n         int remCapacity \u003d eventQueue.remainingCapacity();\n         if (remCapacity \u003c 1000) {\n           LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n               + remCapacity);\n         }\n         this.eventQueue.put(event);\n       } catch (InterruptedException e) {\n         LOG.info(\"Interrupted. Trying to exit gracefully.\");\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(SchedulerEvent event) {\n      try {\n        int qSize \u003d eventQueue.size();\n        if (qSize !\u003d 0 \u0026\u0026 qSize % 1000 \u003d\u003d 0\n            \u0026\u0026 lastEventQueueSizeLogged !\u003d qSize) {\n          lastEventQueueSizeLogged \u003d qSize;\n          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n        }\n        int remCapacity \u003d eventQueue.remainingCapacity();\n        if (remCapacity \u003c 1000) {\n          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n              + remCapacity);\n        }\n        this.eventQueue.put(event);\n      } catch (InterruptedException e) {\n        LOG.info(\"Interrupted. Trying to exit gracefully.\");\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "81a456e6386e1241c14b3b6b62dc2e5d445f5ee7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1591. Fixed AsyncDispatcher to handle interrupts on shutdown in a sane manner and thus fix failure of TestResourceTrackerService. Contributed by Tsuyoshi Ozawa.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/03/14 3:17 PM",
      "commitName": "81a456e6386e1241c14b3b6b62dc2e5d445f5ee7",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/03/14 3:35 PM",
      "commitNameOld": "82e8c8bd713f0d06fcfdad5f30c249220477e126",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 12.95,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public void handle(SchedulerEvent event) {\n       try {\n         int qSize \u003d eventQueue.size();\n         if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n           LOG.info(\"Size of scheduler event-queue is \" + qSize);\n         }\n         int remCapacity \u003d eventQueue.remainingCapacity();\n         if (remCapacity \u003c 1000) {\n           LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n               + remCapacity);\n         }\n         this.eventQueue.put(event);\n       } catch (InterruptedException e) {\n-        throw new YarnRuntimeException(e);\n+        LOG.info(\"Interrupted. Trying to exit gracefully.\");\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(SchedulerEvent event) {\n      try {\n        int qSize \u003d eventQueue.size();\n        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n        }\n        int remCapacity \u003d eventQueue.remainingCapacity();\n        if (remCapacity \u003c 1000) {\n          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n              + remCapacity);\n        }\n        this.eventQueue.put(event);\n      } catch (InterruptedException e) {\n        LOG.info(\"Interrupted. Trying to exit gracefully.\");\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/05/13 9:14 PM",
      "commitNameOld": "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.99,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public void handle(SchedulerEvent event) {\n       try {\n         int qSize \u003d eventQueue.size();\n         if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n           LOG.info(\"Size of scheduler event-queue is \" + qSize);\n         }\n         int remCapacity \u003d eventQueue.remainingCapacity();\n         if (remCapacity \u003c 1000) {\n           LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n               + remCapacity);\n         }\n         this.eventQueue.put(event);\n       } catch (InterruptedException e) {\n-        throw new YarnException(e);\n+        throw new YarnRuntimeException(e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(SchedulerEvent event) {\n      try {\n        int qSize \u003d eventQueue.size();\n        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n        }\n        int remCapacity \u003d eventQueue.remainingCapacity();\n        if (remCapacity \u003c 1000) {\n          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n              + remCapacity);\n        }\n        this.eventQueue.put(event);\n      } catch (InterruptedException e) {\n        throw new YarnRuntimeException(e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void handle(SchedulerEvent event) {\n      try {\n        int qSize \u003d eventQueue.size();\n        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n        }\n        int remCapacity \u003d eventQueue.remainingCapacity();\n        if (remCapacity \u003c 1000) {\n          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n              + remCapacity);\n        }\n        this.eventQueue.put(event);\n      } catch (InterruptedException e) {\n        throw new YarnException(e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void handle(SchedulerEvent event) {\n      try {\n        int qSize \u003d eventQueue.size();\n        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n        }\n        int remCapacity \u003d eventQueue.remainingCapacity();\n        if (remCapacity \u003c 1000) {\n          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n              + remCapacity);\n        }\n        this.eventQueue.put(event);\n      } catch (InterruptedException e) {\n        throw new YarnException(e);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+    public void handle(SchedulerEvent event) {\n+      try {\n+        int qSize \u003d eventQueue.size();\n+        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n+          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n+        }\n+        int remCapacity \u003d eventQueue.remainingCapacity();\n+        if (remCapacity \u003c 1000) {\n+          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n+              + remCapacity);\n+        }\n+        this.eventQueue.put(event);\n+      } catch (InterruptedException e) {\n+        throw new YarnException(e);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(SchedulerEvent event) {\n      try {\n        int qSize \u003d eventQueue.size();\n        if (qSize !\u003d0 \u0026\u0026 qSize %1000 \u003d\u003d 0) {\n          LOG.info(\"Size of scheduler event-queue is \" + qSize);\n        }\n        int remCapacity \u003d eventQueue.remainingCapacity();\n        if (remCapacity \u003c 1000) {\n          LOG.info(\"Very low remaining capacity on scheduler event queue: \"\n              + remCapacity);\n        }\n        this.eventQueue.put(event);\n      } catch (InterruptedException e) {\n        throw new YarnException(e);\n      }\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
    }
  }
}