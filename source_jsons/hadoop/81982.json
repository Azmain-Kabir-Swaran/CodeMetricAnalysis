{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationClassLoader.java",
  "functionName": "constructUrlsFromClasspath",
  "functionId": "constructUrlsFromClasspath___classpath-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
  "functionStartLine": 107,
  "functionEndLine": 126,
  "numCommitsSeen": 11,
  "timeTaken": 1568,
  "changeHistory": [
    "0ad48aa2c8f41196743305c711ea19cc48f186da",
    "da4ba50269254456650c08c739f2b394d1182ee4",
    "d6143a5b3177e81056a319cb605e4a90063b1401"
  ],
  "changeHistoryShort": {
    "0ad48aa2c8f41196743305c711ea19cc48f186da": "Ybodychange",
    "da4ba50269254456650c08c739f2b394d1182ee4": "Ymultichange(Ymovefromfile,Ybodychange)",
    "d6143a5b3177e81056a319cb605e4a90063b1401": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ad48aa2c8f41196743305c711ea19cc48f186da": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12747. support wildcard in libjars argument (sjlee)\n",
      "commitDate": "08/08/16 5:34 PM",
      "commitName": "0ad48aa2c8f41196743305c711ea19cc48f186da",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "07/03/16 8:26 PM",
      "commitNameOld": "49eedc7ff02ea61764f416f0e2ddf81370aec5fb",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 153.84,
      "commitsBetweenForRepo": 1113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   static URL[] constructUrlsFromClasspath(String classpath)\n       throws MalformedURLException {\n     List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n     for (String element : classpath.split(File.pathSeparator)) {\n       if (element.endsWith(\"/*\")) {\n-        String dir \u003d element.substring(0, element.length() - 1);\n-        File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n-        if (files !\u003d null) {\n-          for (File file : files) {\n-            urls.add(file.toURI().toURL());\n+        List\u003cPath\u003e jars \u003d FileUtil.getJarsInDirectory(element);\n+        if (!jars.isEmpty()) {\n+          for (Path jar: jars) {\n+            urls.add(jar.toUri().toURL());\n           }\n         }\n       } else {\n         File file \u003d new File(element);\n         if (file.exists()) {\n           urls.add(new File(element).toURI().toURL());\n         }\n       }\n     }\n     return urls.toArray(new URL[urls.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static URL[] constructUrlsFromClasspath(String classpath)\n      throws MalformedURLException {\n    List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n    for (String element : classpath.split(File.pathSeparator)) {\n      if (element.endsWith(\"/*\")) {\n        List\u003cPath\u003e jars \u003d FileUtil.getJarsInDirectory(element);\n        if (!jars.isEmpty()) {\n          for (Path jar: jars) {\n            urls.add(jar.toUri().toURL());\n          }\n        }\n      } else {\n        File file \u003d new File(element);\n        if (file.exists()) {\n          urls.add(new File(element).toURI().toURL());\n        }\n      }\n    }\n    return urls.toArray(new URL[urls.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
      "extendedDetails": {}
    },
    "da4ba50269254456650c08c739f2b394d1182ee4": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HADOOP-10893. isolated classloader on the client side. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619604 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/14 2:38 PM",
      "commitName": "da4ba50269254456650c08c739f2b394d1182ee4",
      "commitAuthor": "Jason Darrell Lowe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-10893. isolated classloader on the client side. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619604 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/08/14 2:38 PM",
          "commitName": "da4ba50269254456650c08c739f2b394d1182ee4",
          "commitAuthor": "Jason Darrell Lowe",
          "commitDateOld": "21/08/14 2:33 PM",
          "commitNameOld": "cbbb899aedacd59040f55ac5ed911c1e62bf3879",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   static URL[] constructUrlsFromClasspath(String classpath)\n       throws MalformedURLException {\n     List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n-    for (String element : Splitter.on(File.pathSeparator).split(classpath)) {\n+    for (String element : classpath.split(File.pathSeparator)) {\n       if (element.endsWith(\"/*\")) {\n         String dir \u003d element.substring(0, element.length() - 1);\n         File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n         if (files !\u003d null) {\n           for (File file : files) {\n             urls.add(file.toURI().toURL());\n           }\n         }\n       } else {\n         File file \u003d new File(element);\n         if (file.exists()) {\n           urls.add(new File(element).toURI().toURL());\n         }\n       }\n     }\n     return urls.toArray(new URL[urls.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static URL[] constructUrlsFromClasspath(String classpath)\n      throws MalformedURLException {\n    List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n    for (String element : classpath.split(File.pathSeparator)) {\n      if (element.endsWith(\"/*\")) {\n        String dir \u003d element.substring(0, element.length() - 1);\n        File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n        if (files !\u003d null) {\n          for (File file : files) {\n            urls.add(file.toURI().toURL());\n          }\n        }\n      } else {\n        File file \u003d new File(element);\n        if (file.exists()) {\n          urls.add(new File(element).toURI().toURL());\n        }\n      }\n    }\n    return urls.toArray(new URL[urls.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ApplicationClassLoader.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
            "oldMethodName": "constructUrlsFromClasspath",
            "newMethodName": "constructUrlsFromClasspath"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10893. isolated classloader on the client side. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619604 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/08/14 2:38 PM",
          "commitName": "da4ba50269254456650c08c739f2b394d1182ee4",
          "commitAuthor": "Jason Darrell Lowe",
          "commitDateOld": "21/08/14 2:33 PM",
          "commitNameOld": "cbbb899aedacd59040f55ac5ed911c1e62bf3879",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   static URL[] constructUrlsFromClasspath(String classpath)\n       throws MalformedURLException {\n     List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n-    for (String element : Splitter.on(File.pathSeparator).split(classpath)) {\n+    for (String element : classpath.split(File.pathSeparator)) {\n       if (element.endsWith(\"/*\")) {\n         String dir \u003d element.substring(0, element.length() - 1);\n         File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n         if (files !\u003d null) {\n           for (File file : files) {\n             urls.add(file.toURI().toURL());\n           }\n         }\n       } else {\n         File file \u003d new File(element);\n         if (file.exists()) {\n           urls.add(new File(element).toURI().toURL());\n         }\n       }\n     }\n     return urls.toArray(new URL[urls.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static URL[] constructUrlsFromClasspath(String classpath)\n      throws MalformedURLException {\n    List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n    for (String element : classpath.split(File.pathSeparator)) {\n      if (element.endsWith(\"/*\")) {\n        String dir \u003d element.substring(0, element.length() - 1);\n        File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n        if (files !\u003d null) {\n          for (File file : files) {\n            urls.add(file.toURI().toURL());\n          }\n        }\n      } else {\n        File file \u003d new File(element);\n        if (file.exists()) {\n          urls.add(new File(element).toURI().toURL());\n        }\n      }\n    }\n    return urls.toArray(new URL[urls.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "d6143a5b3177e81056a319cb605e4a90063b1401": {
      "type": "Yintroduced",
      "commitMessage": "YARN-286. Add a YARN ApplicationClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/13 3:00 AM",
      "commitName": "d6143a5b3177e81056a319cb605e4a90063b1401",
      "commitAuthor": "Thomas White",
      "diff": "@@ -0,0 +1,21 @@\n+  static URL[] constructUrlsFromClasspath(String classpath)\n+      throws MalformedURLException {\n+    List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n+    for (String element : Splitter.on(File.pathSeparator).split(classpath)) {\n+      if (element.endsWith(\"/*\")) {\n+        String dir \u003d element.substring(0, element.length() - 1);\n+        File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n+        if (files !\u003d null) {\n+          for (File file : files) {\n+            urls.add(file.toURI().toURL());\n+          }\n+        }\n+      } else {\n+        File file \u003d new File(element);\n+        if (file.exists()) {\n+          urls.add(new File(element).toURI().toURL());\n+        }\n+      }\n+    }\n+    return urls.toArray(new URL[urls.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static URL[] constructUrlsFromClasspath(String classpath)\n      throws MalformedURLException {\n    List\u003cURL\u003e urls \u003d new ArrayList\u003cURL\u003e();\n    for (String element : Splitter.on(File.pathSeparator).split(classpath)) {\n      if (element.endsWith(\"/*\")) {\n        String dir \u003d element.substring(0, element.length() - 1);\n        File[] files \u003d new File(dir).listFiles(JAR_FILENAME_FILTER);\n        if (files !\u003d null) {\n          for (File file : files) {\n            urls.add(file.toURI().toURL());\n          }\n        }\n      } else {\n        File file \u003d new File(element);\n        if (file.exists()) {\n          urls.add(new File(element).toURI().toURL());\n        }\n      }\n    }\n    return urls.toArray(new URL[urls.size()]);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ApplicationClassLoader.java"
    }
  }
}