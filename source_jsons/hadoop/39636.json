{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "reinitialize",
  "functionId": "reinitialize___newlyParsedQueue-CSQueue__clusterResource-Resource__configuration-CapacitySchedulerConfiguration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 515,
  "functionEndLine": 553,
  "numCommitsSeen": 371,
  "timeTaken": 14959,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "06cceba1cb07340c412c4467439c16ea6812e685",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "18a594257e052e8f10a03e5594e6cc6901dc56be",
    "69c8a7f45be5c0aa6787b07f328d74f1e2ba5628",
    "c53420f58364b11fbda1dace7679d45534533382",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
    "9c22065109a77681bc2534063eabe8692fbcb3cd",
    "5b3bb05fbeb7ed4671f4d3a59677788f7fda43d0",
    "18757c126761d1813dfffb57d5032d6b5b3c96de",
    "d60c2fa17f1b6ccb412ce25fc9e28b7af4c8c0a5",
    "cc523683cfa76c1255667a3aedc48b08e5daabc7",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1",
    "1f46b991da9b91585608a0babd3eda39485dce09",
    "6b608aad7d52b524fa94955a538e8b3524d42d93",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "06cceba1cb07340c412c4467439c16ea6812e685": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "18a594257e052e8f10a03e5594e6cc6901dc56be": "Ybodychange",
    "69c8a7f45be5c0aa6787b07f328d74f1e2ba5628": "Ybodychange",
    "c53420f58364b11fbda1dace7679d45534533382": "Ybodychange",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": "Ybodychange",
    "9c22065109a77681bc2534063eabe8692fbcb3cd": "Ybodychange",
    "5b3bb05fbeb7ed4671f4d3a59677788f7fda43d0": "Ybodychange",
    "18757c126761d1813dfffb57d5032d6b5b3c96de": "Ybodychange",
    "d60c2fa17f1b6ccb412ce25fc9e28b7af4c8c0a5": "Ybodychange",
    "cc523683cfa76c1255667a3aedc48b08e5daabc7": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": "Ybodychange",
    "1f46b991da9b91585608a0babd3eda39485dce09": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b608aad7d52b524fa94955a538e8b3524d42d93": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   protected void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource,\n       CapacitySchedulerConfiguration configuration) throws\n       IOException {\n \n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n \n       LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n \n       // don\u0027t allow the maximum allocation to be decreased in size\n       // since we have already told running AM\u0027s the size\n       Resource oldMax \u003d getMaximumAllocation();\n       Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n \n       if (!Resources.fitsIn(oldMax, newMax)) {\n         throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n             + \" the maximum allocation size can not be decreased!\"\n             + \" Current setting: \" + oldMax + \", trying to set it to: \"\n             + newMax);\n       }\n \n       setupQueueConfigs(clusterResource, configuration);\n \n       // queue metrics are updated, more resource may be available\n       // activate the pending applications if possible\n       activateApplications();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource,\n      CapacitySchedulerConfiguration configuration) throws\n      IOException {\n\n    writeLock.lock();\n    try {\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n\n      if (!Resources.fitsIn(oldMax, newMax)) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource, configuration);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "06cceba1cb07340c412c4467439c16ea6812e685": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7738. CapacityScheduler: Support refresh maximum allocation for multiple resource types. Contributed by Wangda Tan.\n",
      "commitDate": "18/01/18 5:35 AM",
      "commitName": "06cceba1cb07340c412c4467439c16ea6812e685",
      "commitAuthor": "Sunil G",
      "commitDateOld": "05/01/18 1:12 AM",
      "commitNameOld": "0c75d0634bcbdc29e804035b3b84ae6a38d6a110",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 13.18,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   protected void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource,\n       CapacitySchedulerConfiguration configuration) throws\n       IOException {\n \n     try {\n       writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n \n       LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n \n       // don\u0027t allow the maximum allocation to be decreased in size\n       // since we have already told running AM\u0027s the size\n       Resource oldMax \u003d getMaximumAllocation();\n       Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n-      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n-          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n+\n+      if (!Resources.fitsIn(oldMax, newMax)) {\n         throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n             + \" the maximum allocation size can not be decreased!\"\n             + \" Current setting: \" + oldMax + \", trying to set it to: \"\n             + newMax);\n       }\n \n       setupQueueConfigs(clusterResource, configuration);\n \n       // queue metrics are updated, more resource may be available\n       // activate the pending applications if possible\n       activateApplications();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource,\n      CapacitySchedulerConfiguration configuration) throws\n      IOException {\n\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n\n      if (!Resources.fitsIn(oldMax, newMax)) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource, configuration);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "d52627a7cbddfd981db973e223aefffde1ebf82d",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.84,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,39 @@\n-  public void reinitialize(\n-      CSQueue newlyParsedQueue, Resource clusterResource) \n-  throws IOException {\n+  protected void reinitialize(\n+      CSQueue newlyParsedQueue, Resource clusterResource,\n+      CapacitySchedulerConfiguration configuration) throws\n+      IOException {\n+\n     try {\n       writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n \n       LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n \n       // don\u0027t allow the maximum allocation to be decreased in size\n       // since we have already told running AM\u0027s the size\n       Resource oldMax \u003d getMaximumAllocation();\n       Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n       if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n           || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n         throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n             + \" the maximum allocation size can not be decreased!\"\n             + \" Current setting: \" + oldMax + \", trying to set it to: \"\n             + newMax);\n       }\n \n-      setupQueueConfigs(clusterResource);\n+      setupQueueConfigs(clusterResource, configuration);\n \n       // queue metrics are updated, more resource may be available\n       // activate the pending applications if possible\n       activateApplications();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource,\n      CapacitySchedulerConfiguration configuration) throws\n      IOException {\n\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource, configuration);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[newlyParsedQueue-CSQueue, clusterResource-Resource]",
            "newValue": "[newlyParsedQueue-CSQueue, clusterResource-Resource, configuration-CapacitySchedulerConfiguration]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "d52627a7cbddfd981db973e223aefffde1ebf82d",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.84,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,39 @@\n-  public void reinitialize(\n-      CSQueue newlyParsedQueue, Resource clusterResource) \n-  throws IOException {\n+  protected void reinitialize(\n+      CSQueue newlyParsedQueue, Resource clusterResource,\n+      CapacitySchedulerConfiguration configuration) throws\n+      IOException {\n+\n     try {\n       writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n \n       LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n \n       // don\u0027t allow the maximum allocation to be decreased in size\n       // since we have already told running AM\u0027s the size\n       Resource oldMax \u003d getMaximumAllocation();\n       Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n       if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n           || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n         throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n             + \" the maximum allocation size can not be decreased!\"\n             + \" Current setting: \" + oldMax + \", trying to set it to: \"\n             + newMax);\n       }\n \n-      setupQueueConfigs(clusterResource);\n+      setupQueueConfigs(clusterResource, configuration);\n \n       // queue metrics are updated, more resource may be available\n       // activate the pending applications if possible\n       activateApplications();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource,\n      CapacitySchedulerConfiguration configuration) throws\n      IOException {\n\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource, configuration);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "d52627a7cbddfd981db973e223aefffde1ebf82d",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.84,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,39 @@\n-  public void reinitialize(\n-      CSQueue newlyParsedQueue, Resource clusterResource) \n-  throws IOException {\n+  protected void reinitialize(\n+      CSQueue newlyParsedQueue, Resource clusterResource,\n+      CapacitySchedulerConfiguration configuration) throws\n+      IOException {\n+\n     try {\n       writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n \n       LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n \n       // don\u0027t allow the maximum allocation to be decreased in size\n       // since we have already told running AM\u0027s the size\n       Resource oldMax \u003d getMaximumAllocation();\n       Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n       if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n           || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n         throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n             + \" the maximum allocation size can not be decreased!\"\n             + \" Current setting: \" + oldMax + \", trying to set it to: \"\n             + newMax);\n       }\n \n-      setupQueueConfigs(clusterResource);\n+      setupQueueConfigs(clusterResource, configuration);\n \n       // queue metrics are updated, more resource may be available\n       // activate the pending applications if possible\n       activateApplications();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource,\n      CapacitySchedulerConfiguration configuration) throws\n      IOException {\n\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource, configuration);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,36 @@\n-  public synchronized void reinitialize(\n+  public void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n-    // Sanity check\n-    if (!(newlyParsedQueue instanceof LeafQueue) || \n-        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n-      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n-          \" from \" + newlyParsedQueue.getQueuePath());\n+    try {\n+      writeLock.lock();\n+      // Sanity check\n+      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n+          .getQueuePath().equals(getQueuePath())) {\n+        throw new IOException(\n+            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n+                + newlyParsedQueue.getQueuePath());\n+      }\n+\n+      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n+\n+      // don\u0027t allow the maximum allocation to be decreased in size\n+      // since we have already told running AM\u0027s the size\n+      Resource oldMax \u003d getMaximumAllocation();\n+      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n+      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n+          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n+        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n+            + \" the maximum allocation size can not be decreased!\"\n+            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n+            + newMax);\n+      }\n+\n+      setupQueueConfigs(clusterResource);\n+\n+      // queue metrics are updated, more resource may be available\n+      // activate the pending applications if possible\n+      activateApplications();\n+    } finally {\n+      writeLock.unlock();\n     }\n-\n-    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n-\n-    // don\u0027t allow the maximum allocation to be decreased in size\n-    // since we have already told running AM\u0027s the size\n-    Resource oldMax \u003d getMaximumAllocation();\n-    Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n-    if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n-        || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n-      throw new IOException(\n-          \"Trying to reinitialize \"\n-              + getQueuePath()\n-              + \" the maximum allocation size can not be decreased!\"\n-              + \" Current setting: \" + oldMax\n-              + \", trying to set it to: \" + newMax);\n-    }\n-\n-    setupQueueConfigs(clusterResource);\n-\n-    // queue metrics are updated, more resource may be available\n-    // activate the pending applications if possible\n-    activateApplications();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,36 @@\n-  public synchronized void reinitialize(\n+  public void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n-    // Sanity check\n-    if (!(newlyParsedQueue instanceof LeafQueue) || \n-        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n-      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n-          \" from \" + newlyParsedQueue.getQueuePath());\n+    try {\n+      writeLock.lock();\n+      // Sanity check\n+      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n+          .getQueuePath().equals(getQueuePath())) {\n+        throw new IOException(\n+            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n+                + newlyParsedQueue.getQueuePath());\n+      }\n+\n+      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n+\n+      // don\u0027t allow the maximum allocation to be decreased in size\n+      // since we have already told running AM\u0027s the size\n+      Resource oldMax \u003d getMaximumAllocation();\n+      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n+      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n+          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n+        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n+            + \" the maximum allocation size can not be decreased!\"\n+            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n+            + newMax);\n+      }\n+\n+      setupQueueConfigs(clusterResource);\n+\n+      // queue metrics are updated, more resource may be available\n+      // activate the pending applications if possible\n+      activateApplications();\n+    } finally {\n+      writeLock.unlock();\n     }\n-\n-    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n-\n-    // don\u0027t allow the maximum allocation to be decreased in size\n-    // since we have already told running AM\u0027s the size\n-    Resource oldMax \u003d getMaximumAllocation();\n-    Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n-    if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n-        || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n-      throw new IOException(\n-          \"Trying to reinitialize \"\n-              + getQueuePath()\n-              + \" the maximum allocation size can not be decreased!\"\n-              + \" Current setting: \" + oldMax\n-              + \", trying to set it to: \" + newMax);\n-    }\n-\n-    setupQueueConfigs(clusterResource);\n-\n-    // queue metrics are updated, more resource may be available\n-    // activate the pending applications if possible\n-    activateApplications();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof LeafQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n\n      LeafQueue newlyParsedLeafQueue \u003d (LeafQueue) newlyParsedQueue;\n\n      // don\u0027t allow the maximum allocation to be decreased in size\n      // since we have already told running AM\u0027s the size\n      Resource oldMax \u003d getMaximumAllocation();\n      Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n      if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n          || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n        throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n            + \" the maximum allocation size can not be decreased!\"\n            + \" Current setting: \" + oldMax + \", trying to set it to: \"\n            + newMax);\n      }\n\n      setupQueueConfigs(clusterResource);\n\n      // queue metrics are updated, more resource may be available\n      // activate the pending applications if possible\n      activateApplications();\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "23/05/16 8:54 AM",
      "commitNameOld": "ac954486c5102b8fbbc4229a0d3a512bcc7013c0",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n \n     // don\u0027t allow the maximum allocation to be decreased in size\n     // since we have already told running AM\u0027s the size\n     Resource oldMax \u003d getMaximumAllocation();\n     Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n-    if (newMax.getMemory() \u003c oldMax.getMemory()\n+    if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n         || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n       throw new IOException(\n           \"Trying to reinitialize \"\n               + getQueuePath()\n               + \" the maximum allocation size can not be decreased!\"\n               + \" Current setting: \" + oldMax\n               + \", trying to set it to: \" + newMax);\n     }\n \n     setupQueueConfigs(clusterResource);\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n\n    // don\u0027t allow the maximum allocation to be decreased in size\n    // since we have already told running AM\u0027s the size\n    Resource oldMax \u003d getMaximumAllocation();\n    Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n    if (newMax.getMemorySize() \u003c oldMax.getMemorySize()\n        || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n      throw new IOException(\n          \"Trying to reinitialize \"\n              + getQueuePath()\n              + \" the maximum allocation size can not be decreased!\"\n              + \" Current setting: \" + oldMax\n              + \", trying to set it to: \" + newMax);\n    }\n\n    setupQueueConfigs(clusterResource);\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "18a594257e052e8f10a03e5594e6cc6901dc56be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3124. Fixed CS LeafQueue/ParentQueue to use QueueCapacities to track capacities-by-label. Contributed by Wangda Tan\n",
      "commitDate": "12/02/15 2:58 PM",
      "commitName": "18a594257e052e8f10a03e5594e6cc6901dc56be",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/02/15 8:34 PM",
      "commitNameOld": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,32 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n \n     // don\u0027t allow the maximum allocation to be decreased in size\n     // since we have already told running AM\u0027s the size\n     Resource oldMax \u003d getMaximumAllocation();\n     Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n     if (newMax.getMemory() \u003c oldMax.getMemory()\n         || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n       throw new IOException(\n           \"Trying to reinitialize \"\n               + getQueuePath()\n               + \" the maximum allocation size can not be decreased!\"\n               + \" Current setting: \" + oldMax\n               + \", trying to set it to: \" + newMax);\n     }\n \n-    setupQueueConfigs(\n-        clusterResource,\n-        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n-        newlyParsedLeafQueue.maximumCapacity, \n-        newlyParsedLeafQueue.absoluteMaxCapacity, \n-        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n-        newlyParsedLeafQueue.maxApplications,\n-        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n-        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n-        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n-        newlyParsedLeafQueue.getNodeLocalityDelay(),\n-        newlyParsedLeafQueue.accessibleLabels,\n-        newlyParsedLeafQueue.defaultLabelExpression,\n-        newlyParsedLeafQueue.capacitiyByNodeLabels,\n-        newlyParsedLeafQueue.maxCapacityByNodeLabels,\n-        newlyParsedLeafQueue.reservationsContinueLooking,\n-        newlyParsedLeafQueue.getMaximumAllocation());\n+    setupQueueConfigs(clusterResource);\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n\n    // don\u0027t allow the maximum allocation to be decreased in size\n    // since we have already told running AM\u0027s the size\n    Resource oldMax \u003d getMaximumAllocation();\n    Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n    if (newMax.getMemory() \u003c oldMax.getMemory()\n        || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n      throw new IOException(\n          \"Trying to reinitialize \"\n              + getQueuePath()\n              + \" the maximum allocation size can not be decreased!\"\n              + \" Current setting: \" + oldMax\n              + \", trying to set it to: \" + newMax);\n    }\n\n    setupQueueConfigs(clusterResource);\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "69c8a7f45be5c0aa6787b07f328d74f1e2ba5628": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1582. Capacity Scheduler: add a maximum-allocation-mb setting per queue. Contributed by Thomas Graves\n",
      "commitDate": "05/02/15 11:28 AM",
      "commitName": "69c8a7f45be5c0aa6787b07f328d74f1e2ba5628",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "30/01/15 3:15 PM",
      "commitNameOld": "86358221fc85a7743052a0b4c1647353508bf308",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 5.84,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,48 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n+\n+    // don\u0027t allow the maximum allocation to be decreased in size\n+    // since we have already told running AM\u0027s the size\n+    Resource oldMax \u003d getMaximumAllocation();\n+    Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n+    if (newMax.getMemory() \u003c oldMax.getMemory()\n+        || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n+      throw new IOException(\n+          \"Trying to reinitialize \"\n+              + getQueuePath()\n+              + \" the maximum allocation size can not be decreased!\"\n+              + \" Current setting: \" + oldMax\n+              + \", trying to set it to: \" + newMax);\n+    }\n+\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n         newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n         newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n         newlyParsedLeafQueue.getNodeLocalityDelay(),\n         newlyParsedLeafQueue.accessibleLabels,\n         newlyParsedLeafQueue.defaultLabelExpression,\n         newlyParsedLeafQueue.capacitiyByNodeLabels,\n         newlyParsedLeafQueue.maxCapacityByNodeLabels,\n-        newlyParsedLeafQueue.reservationsContinueLooking);\n+        newlyParsedLeafQueue.reservationsContinueLooking,\n+        newlyParsedLeafQueue.getMaximumAllocation());\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n\n    // don\u0027t allow the maximum allocation to be decreased in size\n    // since we have already told running AM\u0027s the size\n    Resource oldMax \u003d getMaximumAllocation();\n    Resource newMax \u003d newlyParsedLeafQueue.getMaximumAllocation();\n    if (newMax.getMemory() \u003c oldMax.getMemory()\n        || newMax.getVirtualCores() \u003c oldMax.getVirtualCores()) {\n      throw new IOException(\n          \"Trying to reinitialize \"\n              + getQueuePath()\n              + \" the maximum allocation size can not be decreased!\"\n              + \" Current setting: \" + oldMax\n              + \", trying to set it to: \" + newMax);\n    }\n\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n        newlyParsedLeafQueue.getNodeLocalityDelay(),\n        newlyParsedLeafQueue.accessibleLabels,\n        newlyParsedLeafQueue.defaultLabelExpression,\n        newlyParsedLeafQueue.capacitiyByNodeLabels,\n        newlyParsedLeafQueue.maxCapacityByNodeLabels,\n        newlyParsedLeafQueue.reservationsContinueLooking,\n        newlyParsedLeafQueue.getMaximumAllocation());\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "c53420f58364b11fbda1dace7679d45534533382": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2637. Fixed max-am-resource-percent calculation in CapacityScheduler when activating applications. Contributed by Craig Welch\n",
      "commitDate": "13/01/15 5:32 PM",
      "commitName": "c53420f58364b11fbda1dace7679d45534533382",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/01/15 2:15 PM",
      "commitNameOld": "dd57c2047bfd21910acc38c98153eedf1db75169",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.14,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,32 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n         newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n-        newlyParsedLeafQueue.getMaximumActiveApplications(), \n-        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n         newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n         newlyParsedLeafQueue.getNodeLocalityDelay(),\n         newlyParsedLeafQueue.accessibleLabels,\n         newlyParsedLeafQueue.defaultLabelExpression,\n         newlyParsedLeafQueue.capacitiyByNodeLabels,\n         newlyParsedLeafQueue.maxCapacityByNodeLabels,\n         newlyParsedLeafQueue.reservationsContinueLooking);\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n        newlyParsedLeafQueue.getNodeLocalityDelay(),\n        newlyParsedLeafQueue.accessibleLabels,\n        newlyParsedLeafQueue.defaultLabelExpression,\n        newlyParsedLeafQueue.capacitiyByNodeLabels,\n        newlyParsedLeafQueue.maxCapacityByNodeLabels,\n        newlyParsedLeafQueue.reservationsContinueLooking);\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "15/10/14 6:33 PM",
      "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/10/14 1:45 PM",
      "commitNameOld": "30d56fdbb40d06c4e267d6c314c8c767a7adc6a3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 8.2,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,34 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n         newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n         newlyParsedLeafQueue.getMaximumActiveApplications(), \n         newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n         newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n         newlyParsedLeafQueue.getNodeLocalityDelay(),\n+        newlyParsedLeafQueue.accessibleLabels,\n+        newlyParsedLeafQueue.defaultLabelExpression,\n+        newlyParsedLeafQueue.capacitiyByNodeLabels,\n+        newlyParsedLeafQueue.maxCapacityByNodeLabels,\n         newlyParsedLeafQueue.reservationsContinueLooking);\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n        newlyParsedLeafQueue.getNodeLocalityDelay(),\n        newlyParsedLeafQueue.accessibleLabels,\n        newlyParsedLeafQueue.defaultLabelExpression,\n        newlyParsedLeafQueue.capacitiyByNodeLabels,\n        newlyParsedLeafQueue.maxCapacityByNodeLabels,\n        newlyParsedLeafQueue.reservationsContinueLooking);\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "9c22065109a77681bc2534063eabe8692fbcb3cd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1769. CapacityScheduler: Improve reservations. Contributed by Thomas Graves\n",
      "commitDate": "29/09/14 7:12 AM",
      "commitName": "9c22065109a77681bc2534063eabe8692fbcb3cd",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/08/14 11:00 PM",
      "commitNameOld": "7360cec692be5dcc3377ae5082fe22870caac96b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 45.34,
      "commitsBetweenForRepo": 409,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n         newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n         newlyParsedLeafQueue.getMaximumActiveApplications(), \n         newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n         newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n-        newlyParsedLeafQueue.getNodeLocalityDelay());\n+        newlyParsedLeafQueue.getNodeLocalityDelay(),\n+        newlyParsedLeafQueue.reservationsContinueLooking);\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n        newlyParsedLeafQueue.getNodeLocalityDelay(),\n        newlyParsedLeafQueue.reservationsContinueLooking);\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "5b3bb05fbeb7ed4671f4d3a59677788f7fda43d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-853. Fixed CapacityScheduler\u0027s maximum-am-resource-percent to properly work beyond refreshing queues. Contributed by Devaraj K.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1505855 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/13 4:49 PM",
      "commitName": "5b3bb05fbeb7ed4671f4d3a59677788f7fda43d0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "20/07/13 7:59 AM",
      "commitNameOld": "5b99672658ce24bfd1002b880583cbecfa47f9b3",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.37,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n+        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n         newlyParsedLeafQueue.getMaximumActiveApplications(), \n         newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n         newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n         newlyParsedLeafQueue.getNodeLocalityDelay());\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.maxAMResourcePerQueuePercent,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n        newlyParsedLeafQueue.getNodeLocalityDelay());\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "18757c126761d1813dfffb57d5032d6b5b3c96de": {
      "type": "Ybodychange",
      "commitMessage": "YARN-525. make CS node-locality-delay refreshable. Contributed by Thomas Graves\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465009 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/04/13 8:30 AM",
      "commitName": "18757c126761d1813dfffb57d5032d6b5b3c96de",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "28/03/13 12:44 PM",
      "commitNameOld": "520033b1cd81c76b38fcdcfcfeed16158db4bbba",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 7.82,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n         newlyParsedLeafQueue.getMaximumActiveApplications(), \n         newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n-        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n+        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n+        newlyParsedLeafQueue.getNodeLocalityDelay());\n \n     // queue metrics are updated, more resource may be available\n     // activate the pending applications if possible\n     activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls,\n        newlyParsedLeafQueue.getNodeLocalityDelay());\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "d60c2fa17f1b6ccb412ce25fc9e28b7af4c8c0a5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-474. Fix CapacityScheduler to trigger application-activation when am-resource-percent configuration is refreshed. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1461402 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/13 8:44 PM",
      "commitName": "d60c2fa17f1b6ccb412ce25fc9e28b7af4c8c0a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/02/13 7:40 AM",
      "commitNameOld": "666667464ad773449cd76b567312495577b3214d",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 41.5,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   public synchronized void reinitialize(\n       CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof LeafQueue) || \n         !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n     LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n         newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n         newlyParsedLeafQueue.maximumCapacity, \n         newlyParsedLeafQueue.absoluteMaxCapacity, \n         newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n         newlyParsedLeafQueue.maxApplications,\n         newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n         newlyParsedLeafQueue.getMaximumActiveApplications(), \n         newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n         newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n+\n+    // queue metrics are updated, more resource may be available\n+    // activate the pending applications if possible\n+    activateApplications();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n\n    // queue metrics are updated, more resource may be available\n    // activate the pending applications if possible\n    activateApplications();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cc523683cfa76c1255667a3aedc48b08e5daabc7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-177. CapacityScheduler - adding a queue while the RM is running has wacky results (acmurthy vai tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401668 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/12 6:21 AM",
      "commitName": "cc523683cfa76c1255667a3aedc48b08e5daabc7",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-177. CapacityScheduler - adding a queue while the RM is running has wacky results (acmurthy vai tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401668 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/10/12 6:21 AM",
          "commitName": "cc523683cfa76c1255667a3aedc48b08e5daabc7",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "26/09/12 8:43 PM",
          "commitNameOld": "40062e1aaa09628c6f45d20298fd66d799fd1f3f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 27.4,
          "commitsBetweenForRepo": 163,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n+  public synchronized void reinitialize(\n+      CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n-    if (!(queue instanceof LeafQueue) || \n-        !queue.getQueuePath().equals(getQueuePath())) {\n+    if (!(newlyParsedQueue instanceof LeafQueue) || \n+        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n-          \" from \" + queue.getQueuePath());\n+          \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n-    LeafQueue leafQueue \u003d (LeafQueue)queue;\n+    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n-        leafQueue.capacity, leafQueue.absoluteCapacity, \n-        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n-        leafQueue.userLimit, leafQueue.userLimitFactor, \n-        leafQueue.maxApplications,\n-        leafQueue.getMaxApplicationsPerUser(),\n-        leafQueue.getMaximumActiveApplications(), \n-        leafQueue.getMaximumActiveApplicationsPerUser(),\n-        leafQueue.state, leafQueue.acls);\n+        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n+        newlyParsedLeafQueue.maximumCapacity, \n+        newlyParsedLeafQueue.absoluteMaxCapacity, \n+        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n+        newlyParsedLeafQueue.maxApplications,\n+        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n+        newlyParsedLeafQueue.getMaximumActiveApplications(), \n+        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n+        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[queue-CSQueue, clusterResource-Resource]",
            "newValue": "[newlyParsedQueue-CSQueue, clusterResource-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-177. CapacityScheduler - adding a queue while the RM is running has wacky results (acmurthy vai tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401668 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/10/12 6:21 AM",
          "commitName": "cc523683cfa76c1255667a3aedc48b08e5daabc7",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "26/09/12 8:43 PM",
          "commitNameOld": "40062e1aaa09628c6f45d20298fd66d799fd1f3f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 27.4,
          "commitsBetweenForRepo": 163,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n+  public synchronized void reinitialize(\n+      CSQueue newlyParsedQueue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n-    if (!(queue instanceof LeafQueue) || \n-        !queue.getQueuePath().equals(getQueuePath())) {\n+    if (!(newlyParsedQueue instanceof LeafQueue) || \n+        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n-          \" from \" + queue.getQueuePath());\n+          \" from \" + newlyParsedQueue.getQueuePath());\n     }\n \n-    LeafQueue leafQueue \u003d (LeafQueue)queue;\n+    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n     setupQueueConfigs(\n         clusterResource,\n-        leafQueue.capacity, leafQueue.absoluteCapacity, \n-        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n-        leafQueue.userLimit, leafQueue.userLimitFactor, \n-        leafQueue.maxApplications,\n-        leafQueue.getMaxApplicationsPerUser(),\n-        leafQueue.getMaximumActiveApplications(), \n-        leafQueue.getMaximumActiveApplicationsPerUser(),\n-        leafQueue.state, leafQueue.acls);\n+        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n+        newlyParsedLeafQueue.maximumCapacity, \n+        newlyParsedLeafQueue.absoluteMaxCapacity, \n+        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n+        newlyParsedLeafQueue.maxApplications,\n+        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n+        newlyParsedLeafQueue.getMaximumActiveApplications(), \n+        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n+        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof LeafQueue) || \n        !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + newlyParsedQueue.getQueuePath());\n    }\n\n    LeafQueue newlyParsedLeafQueue \u003d (LeafQueue)newlyParsedQueue;\n    setupQueueConfigs(\n        clusterResource,\n        newlyParsedLeafQueue.capacity, newlyParsedLeafQueue.absoluteCapacity, \n        newlyParsedLeafQueue.maximumCapacity, \n        newlyParsedLeafQueue.absoluteMaxCapacity, \n        newlyParsedLeafQueue.userLimit, newlyParsedLeafQueue.userLimitFactor, \n        newlyParsedLeafQueue.maxApplications,\n        newlyParsedLeafQueue.getMaxApplicationsPerUser(),\n        newlyParsedLeafQueue.getMaximumActiveApplications(), \n        newlyParsedLeafQueue.getMaximumActiveApplicationsPerUser(),\n        newlyParsedLeafQueue.state, newlyParsedLeafQueue.acls);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(\n        clusterResource,\n        leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications,\n        leafQueue.getMaxApplicationsPerUser(),\n        leafQueue.getMaximumActiveApplications(), \n        leafQueue.getMaximumActiveApplicationsPerUser(),\n        leafQueue.state, leafQueue.acls);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3747. Initialize queue metrics upfront and added start/finish time to RM Web-UI. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/12 7:38 PM",
      "commitName": "c7007a8a3508a24a6f023302516fe8fbe270eab1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "02/02/12 5:16 PM",
      "commitNameOld": "a5c46c91655acebccd1367706b05946eff90f744",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.1,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(queue instanceof LeafQueue) || \n         !queue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + queue.getQueuePath());\n     }\n \n     LeafQueue leafQueue \u003d (LeafQueue)queue;\n-    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n+    setupQueueConfigs(\n+        clusterResource,\n+        leafQueue.capacity, leafQueue.absoluteCapacity, \n         leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n         leafQueue.userLimit, leafQueue.userLimitFactor, \n         leafQueue.maxApplications,\n         leafQueue.getMaxApplicationsPerUser(),\n         leafQueue.getMaximumActiveApplications(), \n         leafQueue.getMaximumActiveApplicationsPerUser(),\n         leafQueue.state, leafQueue.acls);\n-    \n-    updateResource(clusterResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(\n        clusterResource,\n        leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications,\n        leafQueue.getMaxApplicationsPerUser(),\n        leafQueue.getMaximumActiveApplications(), \n        leafQueue.getMaximumActiveApplicationsPerUser(),\n        leafQueue.state, leafQueue.acls);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "1f46b991da9b91585608a0babd3eda39485dce09": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166838 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 11:26 AM",
      "commitName": "1f46b991da9b91585608a0babd3eda39485dce09",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166838 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/11 11:26 AM",
          "commitName": "1f46b991da9b91585608a0babd3eda39485dce09",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "05/09/11 12:49 PM",
          "commitNameOld": "6b608aad7d52b524fa94955a538e8b3524d42d93",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 2.94,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  public synchronized void reinitialize(Queue queue, Resource clusterResource) \n+  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(queue instanceof LeafQueue) || \n         !queue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + queue.getQueuePath());\n     }\n \n     LeafQueue leafQueue \u003d (LeafQueue)queue;\n     setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n         leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n         leafQueue.userLimit, leafQueue.userLimitFactor, \n-        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n-        leafQueue.maxActiveApplications, \n-        leafQueue.maxActiveApplicationsPerUser,\n+        leafQueue.maxApplications,\n+        leafQueue.getMaxApplicationsPerUser(),\n+        leafQueue.getMaximumActiveApplications(), \n+        leafQueue.getMaximumActiveApplicationsPerUser(),\n         leafQueue.state, leafQueue.acls);\n     \n     updateResource(clusterResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications,\n        leafQueue.getMaxApplicationsPerUser(),\n        leafQueue.getMaximumActiveApplications(), \n        leafQueue.getMaximumActiveApplicationsPerUser(),\n        leafQueue.state, leafQueue.acls);\n    \n    updateResource(clusterResource);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[queue-Queue, clusterResource-Resource]",
            "newValue": "[queue-CSQueue, clusterResource-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166838 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/11 11:26 AM",
          "commitName": "1f46b991da9b91585608a0babd3eda39485dce09",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "05/09/11 12:49 PM",
          "commitNameOld": "6b608aad7d52b524fa94955a538e8b3524d42d93",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 2.94,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  public synchronized void reinitialize(Queue queue, Resource clusterResource) \n+  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(queue instanceof LeafQueue) || \n         !queue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + queue.getQueuePath());\n     }\n \n     LeafQueue leafQueue \u003d (LeafQueue)queue;\n     setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n         leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n         leafQueue.userLimit, leafQueue.userLimitFactor, \n-        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n-        leafQueue.maxActiveApplications, \n-        leafQueue.maxActiveApplicationsPerUser,\n+        leafQueue.maxApplications,\n+        leafQueue.getMaxApplicationsPerUser(),\n+        leafQueue.getMaximumActiveApplications(), \n+        leafQueue.getMaximumActiveApplicationsPerUser(),\n         leafQueue.state, leafQueue.acls);\n     \n     updateResource(clusterResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications,\n        leafQueue.getMaxApplicationsPerUser(),\n        leafQueue.getMaximumActiveApplications(), \n        leafQueue.getMaximumActiveApplicationsPerUser(),\n        leafQueue.state, leafQueue.acls);\n    \n    updateResource(clusterResource);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "6b608aad7d52b524fa94955a538e8b3524d42d93": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2697. Enhance CapacityScheduler to cap concurrently running applications per-queue \u0026 per-user.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/11 12:49 PM",
      "commitName": "6b608aad7d52b524fa94955a538e8b3524d42d93",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/08/11 12:52 PM",
      "commitNameOld": "b9a5fd51904a074a7a33f38266378f0f6f97b531",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 5.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   public synchronized void reinitialize(Queue queue, Resource clusterResource) \n   throws IOException {\n     // Sanity check\n     if (!(queue instanceof LeafQueue) || \n         !queue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n           \" from \" + queue.getQueuePath());\n     }\n \n     LeafQueue leafQueue \u003d (LeafQueue)queue;\n     setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n         leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n         leafQueue.userLimit, leafQueue.userLimitFactor, \n         leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n+        leafQueue.maxActiveApplications, \n+        leafQueue.maxActiveApplicationsPerUser,\n         leafQueue.state, leafQueue.acls);\n     \n     updateResource(clusterResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(Queue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n        leafQueue.maxActiveApplications, \n        leafQueue.maxActiveApplicationsPerUser,\n        leafQueue.state, leafQueue.acls);\n    \n    updateResource(clusterResource);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void reinitialize(Queue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n        leafQueue.state, leafQueue.acls);\n    \n    updateResource(clusterResource);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+  public synchronized void reinitialize(Queue queue, Resource clusterResource) \n+  throws IOException {\n+    // Sanity check\n+    if (!(queue instanceof LeafQueue) || \n+        !queue.getQueuePath().equals(getQueuePath())) {\n+      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n+          \" from \" + queue.getQueuePath());\n+    }\n+\n+    LeafQueue leafQueue \u003d (LeafQueue)queue;\n+    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n+        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n+        leafQueue.userLimit, leafQueue.userLimitFactor, \n+        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n+        leafQueue.state, leafQueue.acls);\n+    \n+    updateResource(clusterResource);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(Queue queue, Resource clusterResource) \n  throws IOException {\n    // Sanity check\n    if (!(queue instanceof LeafQueue) || \n        !queue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath() + \n          \" from \" + queue.getQueuePath());\n    }\n\n    LeafQueue leafQueue \u003d (LeafQueue)queue;\n    setupQueueConfigs(leafQueue.capacity, leafQueue.absoluteCapacity, \n        leafQueue.maximumCapacity, leafQueue.absoluteMaxCapacity, \n        leafQueue.userLimit, leafQueue.userLimitFactor, \n        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,\n        leafQueue.state, leafQueue.acls);\n    \n    updateResource(clusterResource);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}