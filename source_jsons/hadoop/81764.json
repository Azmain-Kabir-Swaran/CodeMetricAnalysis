{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Shell.java",
  "functionName": "checkHadoopHome",
  "functionId": "checkHadoopHome",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
  "functionStartLine": 430,
  "functionEndLine": 440,
  "numCommitsSeen": 52,
  "timeTaken": 3129,
  "changeHistory": [
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
    "10d21ac77987e0a0990f401b2ab4f87fcff90fe6",
    "638801cce16fc1dc3259c541dc30a599faaddda1"
  ],
  "changeHistoryShort": {
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
    "10d21ac77987e0a0990f401b2ab4f87fcff90fe6": "Ybodychange",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec": {
      "type": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-10775. Shell operations to fail with meaningful errors on windows if winutils.exe not found. (stevel)\n",
      "commitDate": "13/10/15 1:49 PM",
      "commitName": "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-10775. Shell operations to fail with meaningful errors on windows if winutils.exe not found. (stevel)\n",
          "commitDate": "13/10/15 1:49 PM",
          "commitName": "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "05/10/15 10:56 AM",
          "commitNameOld": "f1c19b9365cbac88e45a9eed516fbfc6c9aa9947",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.12,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,11 @@\n-  private static String checkHadoopHome() {\n+  private static File checkHadoopHome() throws FileNotFoundException {\n \n     // first check the Dflag hadoop.home.dir with JVM scope\n-    String home \u003d System.getProperty(\"hadoop.home.dir\");\n+    String home \u003d System.getProperty(SYSPROP_HADOOP_HOME_DIR);\n \n     // fall back to the system/user-global env variable\n     if (home \u003d\u003d null) {\n-      home \u003d System.getenv(\"HADOOP_HOME\");\n+      home \u003d System.getenv(ENV_HADOOP_HOME);\n     }\n-\n-    try {\n-       // couldn\u0027t find either setting for hadoop\u0027s home directory\n-       if (home \u003d\u003d null) {\n-         throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n-       }\n-\n-       if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n-         home \u003d home.substring(1, home.length()-1);\n-       }\n-\n-       // check that the home setting is actually a directory that exists\n-       File homedir \u003d new File(home);\n-       if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n-         throw new IOException(\"Hadoop home directory \" + homedir\n-           + \" does not exist, is not a directory, or is not an absolute path.\");\n-       }\n-\n-       home \u003d homedir.getCanonicalPath();\n-\n-    } catch (IOException ioe) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Failed to detect a valid hadoop home directory\", ioe);\n-      }\n-      home \u003d null;\n-    }\n-    \n-    return home;\n+    return checkHadoopHomeInner(home);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static File checkHadoopHome() throws FileNotFoundException {\n\n    // first check the Dflag hadoop.home.dir with JVM scope\n    String home \u003d System.getProperty(SYSPROP_HADOOP_HOME_DIR);\n\n    // fall back to the system/user-global env variable\n    if (home \u003d\u003d null) {\n      home \u003d System.getenv(ENV_HADOOP_HOME);\n    }\n    return checkHadoopHomeInner(home);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "File"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-10775. Shell operations to fail with meaningful errors on windows if winutils.exe not found. (stevel)\n",
          "commitDate": "13/10/15 1:49 PM",
          "commitName": "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "05/10/15 10:56 AM",
          "commitNameOld": "f1c19b9365cbac88e45a9eed516fbfc6c9aa9947",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.12,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,11 @@\n-  private static String checkHadoopHome() {\n+  private static File checkHadoopHome() throws FileNotFoundException {\n \n     // first check the Dflag hadoop.home.dir with JVM scope\n-    String home \u003d System.getProperty(\"hadoop.home.dir\");\n+    String home \u003d System.getProperty(SYSPROP_HADOOP_HOME_DIR);\n \n     // fall back to the system/user-global env variable\n     if (home \u003d\u003d null) {\n-      home \u003d System.getenv(\"HADOOP_HOME\");\n+      home \u003d System.getenv(ENV_HADOOP_HOME);\n     }\n-\n-    try {\n-       // couldn\u0027t find either setting for hadoop\u0027s home directory\n-       if (home \u003d\u003d null) {\n-         throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n-       }\n-\n-       if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n-         home \u003d home.substring(1, home.length()-1);\n-       }\n-\n-       // check that the home setting is actually a directory that exists\n-       File homedir \u003d new File(home);\n-       if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n-         throw new IOException(\"Hadoop home directory \" + homedir\n-           + \" does not exist, is not a directory, or is not an absolute path.\");\n-       }\n-\n-       home \u003d homedir.getCanonicalPath();\n-\n-    } catch (IOException ioe) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Failed to detect a valid hadoop home directory\", ioe);\n-      }\n-      home \u003d null;\n-    }\n-    \n-    return home;\n+    return checkHadoopHomeInner(home);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static File checkHadoopHome() throws FileNotFoundException {\n\n    // first check the Dflag hadoop.home.dir with JVM scope\n    String home \u003d System.getProperty(SYSPROP_HADOOP_HOME_DIR);\n\n    // fall back to the system/user-global env variable\n    if (home \u003d\u003d null) {\n      home \u003d System.getenv(ENV_HADOOP_HOME);\n    }\n    return checkHadoopHomeInner(home);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[FileNotFoundException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10775. Shell operations to fail with meaningful errors on windows if winutils.exe not found. (stevel)\n",
          "commitDate": "13/10/15 1:49 PM",
          "commitName": "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "05/10/15 10:56 AM",
          "commitNameOld": "f1c19b9365cbac88e45a9eed516fbfc6c9aa9947",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.12,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,11 @@\n-  private static String checkHadoopHome() {\n+  private static File checkHadoopHome() throws FileNotFoundException {\n \n     // first check the Dflag hadoop.home.dir with JVM scope\n-    String home \u003d System.getProperty(\"hadoop.home.dir\");\n+    String home \u003d System.getProperty(SYSPROP_HADOOP_HOME_DIR);\n \n     // fall back to the system/user-global env variable\n     if (home \u003d\u003d null) {\n-      home \u003d System.getenv(\"HADOOP_HOME\");\n+      home \u003d System.getenv(ENV_HADOOP_HOME);\n     }\n-\n-    try {\n-       // couldn\u0027t find either setting for hadoop\u0027s home directory\n-       if (home \u003d\u003d null) {\n-         throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n-       }\n-\n-       if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n-         home \u003d home.substring(1, home.length()-1);\n-       }\n-\n-       // check that the home setting is actually a directory that exists\n-       File homedir \u003d new File(home);\n-       if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n-         throw new IOException(\"Hadoop home directory \" + homedir\n-           + \" does not exist, is not a directory, or is not an absolute path.\");\n-       }\n-\n-       home \u003d homedir.getCanonicalPath();\n-\n-    } catch (IOException ioe) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Failed to detect a valid hadoop home directory\", ioe);\n-      }\n-      home \u003d null;\n-    }\n-    \n-    return home;\n+    return checkHadoopHomeInner(home);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static File checkHadoopHome() throws FileNotFoundException {\n\n    // first check the Dflag hadoop.home.dir with JVM scope\n    String home \u003d System.getProperty(SYSPROP_HADOOP_HOME_DIR);\n\n    // fall back to the system/user-global env variable\n    if (home \u003d\u003d null) {\n      home \u003d System.getenv(ENV_HADOOP_HOME);\n    }\n    return checkHadoopHomeInner(home);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
          "extendedDetails": {}
        }
      ]
    },
    "10d21ac77987e0a0990f401b2ab4f87fcff90fe6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9593 stack trace printed at ERROR for all yarn clients without hadoop.home set\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485842 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 1:08 PM",
      "commitName": "10d21ac77987e0a0990f401b2ab4f87fcff90fe6",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "18/04/13 7:14 PM",
      "commitNameOld": "44bf8525a591b56b5c09cd4201bd193516ea9530",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 34.75,
      "commitsBetweenForRepo": 208,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   private static String checkHadoopHome() {\n \n     // first check the Dflag hadoop.home.dir with JVM scope\n     String home \u003d System.getProperty(\"hadoop.home.dir\");\n \n     // fall back to the system/user-global env variable\n     if (home \u003d\u003d null) {\n       home \u003d System.getenv(\"HADOOP_HOME\");\n     }\n \n     try {\n        // couldn\u0027t find either setting for hadoop\u0027s home directory\n        if (home \u003d\u003d null) {\n          throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n        }\n \n        if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n          home \u003d home.substring(1, home.length()-1);\n        }\n \n        // check that the home setting is actually a directory that exists\n        File homedir \u003d new File(home);\n        if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n          throw new IOException(\"Hadoop home directory \" + homedir\n            + \" does not exist, is not a directory, or is not an absolute path.\");\n        }\n \n        home \u003d homedir.getCanonicalPath();\n \n     } catch (IOException ioe) {\n-       LOG.error(\"Failed to detect a valid hadoop home directory\", ioe);\n-       home \u003d null;\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Failed to detect a valid hadoop home directory\", ioe);\n+      }\n+      home \u003d null;\n     }\n     \n     return home;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String checkHadoopHome() {\n\n    // first check the Dflag hadoop.home.dir with JVM scope\n    String home \u003d System.getProperty(\"hadoop.home.dir\");\n\n    // fall back to the system/user-global env variable\n    if (home \u003d\u003d null) {\n      home \u003d System.getenv(\"HADOOP_HOME\");\n    }\n\n    try {\n       // couldn\u0027t find either setting for hadoop\u0027s home directory\n       if (home \u003d\u003d null) {\n         throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n       }\n\n       if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n         home \u003d home.substring(1, home.length()-1);\n       }\n\n       // check that the home setting is actually a directory that exists\n       File homedir \u003d new File(home);\n       if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n         throw new IOException(\"Hadoop home directory \" + homedir\n           + \" does not exist, is not a directory, or is not an absolute path.\");\n       }\n\n       home \u003d homedir.getCanonicalPath();\n\n    } catch (IOException ioe) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Failed to detect a valid hadoop home directory\", ioe);\n      }\n      home \u003d null;\n    }\n    \n    return home;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
      "extendedDetails": {}
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,36 @@\n+  private static String checkHadoopHome() {\n+\n+    // first check the Dflag hadoop.home.dir with JVM scope\n+    String home \u003d System.getProperty(\"hadoop.home.dir\");\n+\n+    // fall back to the system/user-global env variable\n+    if (home \u003d\u003d null) {\n+      home \u003d System.getenv(\"HADOOP_HOME\");\n+    }\n+\n+    try {\n+       // couldn\u0027t find either setting for hadoop\u0027s home directory\n+       if (home \u003d\u003d null) {\n+         throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n+       }\n+\n+       if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n+         home \u003d home.substring(1, home.length()-1);\n+       }\n+\n+       // check that the home setting is actually a directory that exists\n+       File homedir \u003d new File(home);\n+       if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n+         throw new IOException(\"Hadoop home directory \" + homedir\n+           + \" does not exist, is not a directory, or is not an absolute path.\");\n+       }\n+\n+       home \u003d homedir.getCanonicalPath();\n+\n+    } catch (IOException ioe) {\n+       LOG.error(\"Failed to detect a valid hadoop home directory\", ioe);\n+       home \u003d null;\n+    }\n+    \n+    return home;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String checkHadoopHome() {\n\n    // first check the Dflag hadoop.home.dir with JVM scope\n    String home \u003d System.getProperty(\"hadoop.home.dir\");\n\n    // fall back to the system/user-global env variable\n    if (home \u003d\u003d null) {\n      home \u003d System.getenv(\"HADOOP_HOME\");\n    }\n\n    try {\n       // couldn\u0027t find either setting for hadoop\u0027s home directory\n       if (home \u003d\u003d null) {\n         throw new IOException(\"HADOOP_HOME or hadoop.home.dir are not set.\");\n       }\n\n       if (home.startsWith(\"\\\"\") \u0026\u0026 home.endsWith(\"\\\"\")) {\n         home \u003d home.substring(1, home.length()-1);\n       }\n\n       // check that the home setting is actually a directory that exists\n       File homedir \u003d new File(home);\n       if (!homedir.isAbsolute() || !homedir.exists() || !homedir.isDirectory()) {\n         throw new IOException(\"Hadoop home directory \" + homedir\n           + \" does not exist, is not a directory, or is not an absolute path.\");\n       }\n\n       home \u003d homedir.getCanonicalPath();\n\n    } catch (IOException ioe) {\n       LOG.error(\"Failed to detect a valid hadoop home directory\", ioe);\n       home \u003d null;\n    }\n    \n    return home;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java"
    }
  }
}