{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PerNodeTimelineCollectorsAuxService.java",
  "functionName": "addApplicationIfAbsent",
  "functionId": "addApplicationIfAbsent___appId-ApplicationId__user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
  "functionStartLine": 128,
  "functionEndLine": 133,
  "numCommitsSeen": 50,
  "timeTaken": 4663,
  "changeHistory": [
    "4aacbfff605262aaf3dbd926258afcadc86c72c0",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
    "3fb71b1393018e1001da55b794dda7d26491cf35",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "9b5636408005676ae580f8d929f8e912c27828e7",
    "bf54d32750f8b27a170d7a0a8d8f022430327341",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68"
  ],
  "changeHistoryShort": {
    "4aacbfff605262aaf3dbd926258afcadc86c72c0": "Yrename",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": "Ymultichange(Yparameterchange,Ybodychange)",
    "3fb71b1393018e1001da55b794dda7d26491cf35": "Ybodychange",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": "Ybodychange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yfilerename,Ybodychange)",
    "9b5636408005676ae580f8d929f8e912c27828e7": "Ybodychange",
    "bf54d32750f8b27a170d7a0a8d8f022430327341": "Ymultichange(Ymovefromfile,Ybodychange)",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4aacbfff605262aaf3dbd926258afcadc86c72c0": {
      "type": "Yrename",
      "commitMessage": "YARN-8679. [ATSv2] If HBase cluster is down for long time, high chances that NM ContainerManager dispatcher get blocked. Contributed by Wangda Tan.\n",
      "commitDate": "17/08/18 9:56 PM",
      "commitName": "4aacbfff605262aaf3dbd926258afcadc86c72c0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "28/02/18 9:10 PM",
      "commitNameOld": "d1274c3b71549cb000868500c293cafd880b3713",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 169.99,
      "commitsBetweenForRepo": 1880,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  public boolean addApplication(ApplicationId appId, String user) {\n+  public boolean addApplicationIfAbsent(ApplicationId appId, String user) {\n     AppLevelTimelineCollector collector \u003d\n         new AppLevelTimelineCollectorWithAgg(appId, user);\n     return (collectorManager.putIfAbsent(appId, collector)\n         \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addApplicationIfAbsent(ApplicationId appId, String user) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollectorWithAgg(appId, user);\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {
        "oldValue": "addApplication",
        "newValue": "addApplicationIfAbsent"
      }
    },
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "3fb71b1393018e1001da55b794dda7d26491cf35",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public boolean addApplication(ApplicationId appId) {\n+  public boolean addApplication(ApplicationId appId, String user) {\n     AppLevelTimelineCollector collector \u003d\n-        new AppLevelTimelineCollectorWithAgg(appId);\n+        new AppLevelTimelineCollectorWithAgg(appId, user);\n     return (collectorManager.putIfAbsent(appId, collector)\n         \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addApplication(ApplicationId appId, String user) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollectorWithAgg(appId, user);\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldValue": "[appId-ApplicationId]",
            "newValue": "[appId-ApplicationId, user-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "3fb71b1393018e1001da55b794dda7d26491cf35",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public boolean addApplication(ApplicationId appId) {\n+  public boolean addApplication(ApplicationId appId, String user) {\n     AppLevelTimelineCollector collector \u003d\n-        new AppLevelTimelineCollectorWithAgg(appId);\n+        new AppLevelTimelineCollectorWithAgg(appId, user);\n     return (collectorManager.putIfAbsent(appId, collector)\n         \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addApplication(ApplicationId appId, String user) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollectorWithAgg(appId, user);\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {}
        }
      ]
    },
    "3fb71b1393018e1001da55b794dda7d26491cf35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6888. Refactor AppLevelTimelineCollector such that RM does not have aggregator threads created. Contributed by Vrushali C.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "3fb71b1393018e1001da55b794dda7d26491cf35",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "879de51206ddef132c092ee21e8b6c6e5976a56e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public boolean addApplication(ApplicationId appId) {\n     AppLevelTimelineCollector collector \u003d\n-        new AppLevelTimelineCollector(appId);\n+        new AppLevelTimelineCollectorWithAgg(appId);\n     return (collectorManager.putIfAbsent(appId, collector)\n         \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollectorWithAgg(appId);\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public boolean addApplication(ApplicationId appId) {\n     AppLevelTimelineCollector collector \u003d\n-        new AppLevelTimelineCollector(appId.toString());\n+        new AppLevelTimelineCollector(appId);\n     return (collectorManager.putIfAbsent(appId, collector)\n         \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollector(appId);\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n   public boolean addApplication(ApplicationId appId) {\n-    AppLevelTimelineAggregator aggregator \u003d\n-        new AppLevelTimelineAggregator(appId.toString());\n-    return (aggregatorCollection.putIfAbsent(appId, aggregator)\n-        \u003d\u003d aggregator);\n+    AppLevelTimelineCollector collector \u003d\n+        new AppLevelTimelineCollector(appId.toString());\n+    return (collectorManager.putIfAbsent(appId, collector)\n+        \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollector(appId.toString());\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n   public boolean addApplication(ApplicationId appId) {\n-    AppLevelTimelineAggregator aggregator \u003d\n-        new AppLevelTimelineAggregator(appId.toString());\n-    return (aggregatorCollection.putIfAbsent(appId, aggregator)\n-        \u003d\u003d aggregator);\n+    AppLevelTimelineCollector collector \u003d\n+        new AppLevelTimelineCollector(appId.toString());\n+    return (collectorManager.putIfAbsent(appId, collector)\n+        \u003d\u003d collector);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    AppLevelTimelineCollector collector \u003d\n        new AppLevelTimelineCollector(appId.toString());\n    return (collectorManager.putIfAbsent(appId, collector)\n        \u003d\u003d collector);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,6 @@\n   public boolean addApplication(ApplicationId appId) {\n-    String appIdString \u003d appId.toString();\n     AppLevelTimelineAggregator aggregator \u003d\n-        new AppLevelTimelineAggregator(appIdString);\n-    return (aggregatorCollection.putIfAbsent(appIdString, aggregator)\n+        new AppLevelTimelineAggregator(appId.toString());\n+    return (aggregatorCollection.putIfAbsent(appId, aggregator)\n         \u003d\u003d aggregator);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    AppLevelTimelineAggregator aggregator \u003d\n        new AppLevelTimelineAggregator(appId.toString());\n    return (aggregatorCollection.putIfAbsent(appId, aggregator)\n        \u003d\u003d aggregator);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
      "extendedDetails": {}
    },
    "bf54d32750f8b27a170d7a0a8d8f022430327341": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,7 @@\n   public boolean addApplication(ApplicationId appId) {\n     String appIdString \u003d appId.toString();\n-    return serviceManager.addService(appIdString);\n+    AppLevelTimelineAggregator aggregator \u003d\n+        new AppLevelTimelineAggregator(appIdString);\n+    return (aggregatorCollection.putIfAbsent(appIdString, aggregator)\n+        \u003d\u003d aggregator);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    String appIdString \u003d appId.toString();\n    AppLevelTimelineAggregator aggregator \u003d\n        new AppLevelTimelineAggregator(appIdString);\n    return (aggregatorCollection.putIfAbsent(appIdString, aggregator)\n        \u003d\u003d aggregator);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
            "oldMethodName": "addApplication",
            "newMethodName": "addApplication"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,7 @@\n   public boolean addApplication(ApplicationId appId) {\n     String appIdString \u003d appId.toString();\n-    return serviceManager.addService(appIdString);\n+    AppLevelTimelineAggregator aggregator \u003d\n+        new AppLevelTimelineAggregator(appIdString);\n+    return (aggregatorCollection.putIfAbsent(appIdString, aggregator)\n+        \u003d\u003d aggregator);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    String appIdString \u003d appId.toString();\n    AppLevelTimelineAggregator aggregator \u003d\n        new AppLevelTimelineAggregator(appIdString);\n    return (aggregatorCollection.putIfAbsent(appIdString, aggregator)\n        \u003d\u003d aggregator);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
          "extendedDetails": {}
        }
      ]
    },
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3030. Set up TS aggregator with basic request serving structure and lifecycle. Contributed by Sangjin Lee.\n\n(cherry picked from commit f26941b39028ac30c77547e2be2d657bb5bf044a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,4 @@\n+  public boolean addApplication(ApplicationId appId) {\n+    String appIdString \u003d appId.toString();\n+    return serviceManager.addService(appIdString);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addApplication(ApplicationId appId) {\n    String appIdString \u003d appId.toString();\n    return serviceManager.addService(appIdString);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java"
    }
  }
}