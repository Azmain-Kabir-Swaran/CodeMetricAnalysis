{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPreemptionThread.java",
  "functionName": "trackPreemptionsAgainstNode",
  "functionId": "trackPreemptionsAgainstNode___containers-List__RMContainer____app-FSAppAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
  "functionStartLine": 226,
  "functionEndLine": 231,
  "numCommitsSeen": 19,
  "timeTaken": 3057,
  "changeHistory": [
    "c7fcca0d7ec9e31d43ef3040ecd576ec808f1f8b",
    "c3375175d616e0380560f89d491b6b9753a8f3e1",
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c"
  ],
  "changeHistoryShort": {
    "c7fcca0d7ec9e31d43ef3040ecd576ec808f1f8b": "Ybodychange",
    "c3375175d616e0380560f89d491b6b9753a8f3e1": "Ymultichange(Yparameterchange,Ybodychange)",
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7fcca0d7ec9e31d43ef3040ecd576ec808f1f8b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8969. AbstractYarnScheduler#getNodeTracker should return generic type to avoid type casting. Contributed by Wanqiang Ji.\n",
      "commitDate": "05/11/18 9:14 PM",
      "commitName": "c7fcca0d7ec9e31d43ef3040ecd576ec808f1f8b",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "08/02/18 12:32 PM",
      "commitNameOld": "1bc03ddf97f3f0e0ecc1b00217438d3c91d29be5",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 270.36,
      "commitsBetweenForRepo": 2714,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers,\n                                            FSAppAttempt app) {\n-    FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n+    FSSchedulerNode node \u003d scheduler.getNodeTracker()\n         .getNode(containers.get(0).getNodeId());\n     node.addContainersForPreemption(containers, app);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers,\n                                           FSAppAttempt app) {\n    FSSchedulerNode node \u003d scheduler.getNodeTracker()\n        .getNode(containers.get(0).getNodeId());\n    node.addContainersForPreemption(containers, app);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
      "extendedDetails": {}
    },
    "c3375175d616e0380560f89d491b6b9753a8f3e1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6432. FairScheduler: Reserve preempted resources for corresponding applications. (Miklos Szegedi via kasha)\n",
      "commitDate": "12/04/17 2:21 PM",
      "commitName": "c3375175d616e0380560f89d491b6b9753a8f3e1",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6432. FairScheduler: Reserve preempted resources for corresponding applications. (Miklos Szegedi via kasha)\n",
          "commitDate": "12/04/17 2:21 PM",
          "commitName": "c3375175d616e0380560f89d491b6b9753a8f3e1",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "26/02/17 8:16 PM",
          "commitNameOld": "815d53506fb0c5ca029c993d6b094db2ac0ca6eb",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 44.71,
          "commitsBetweenForRepo": 287,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,6 @@\n-  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers) {\n+  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers,\n+                                           FSAppAttempt app) {\n     FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n         .getNode(containers.get(0).getNodeId());\n-    node.addContainersForPreemption(containers);\n+    node.addContainersForPreemption(containers, app);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers,\n                                           FSAppAttempt app) {\n    FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n        .getNode(containers.get(0).getNodeId());\n    node.addContainersForPreemption(containers, app);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
          "extendedDetails": {
            "oldValue": "[containers-List\u003cRMContainer\u003e]",
            "newValue": "[containers-List\u003cRMContainer\u003e, app-FSAppAttempt]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6432. FairScheduler: Reserve preempted resources for corresponding applications. (Miklos Szegedi via kasha)\n",
          "commitDate": "12/04/17 2:21 PM",
          "commitName": "c3375175d616e0380560f89d491b6b9753a8f3e1",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "26/02/17 8:16 PM",
          "commitNameOld": "815d53506fb0c5ca029c993d6b094db2ac0ca6eb",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 44.71,
          "commitsBetweenForRepo": 287,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,6 @@\n-  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers) {\n+  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers,\n+                                           FSAppAttempt app) {\n     FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n         .getNode(containers.get(0).getNodeId());\n-    node.addContainersForPreemption(containers);\n+    node.addContainersForPreemption(containers, app);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers,\n                                           FSAppAttempt app) {\n    FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n        .getNode(containers.get(0).getNodeId());\n    node.addContainersForPreemption(containers, app);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
          "extendedDetails": {}
        }
      ]
    },
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6163. FS Preemption is a trickle for severely starved applications. (kasha)\n",
      "commitDate": "15/02/17 11:16 PM",
      "commitName": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,5 @@\n+  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers) {\n+    FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n+        .getNode(containers.get(0).getNodeId());\n+    node.addContainersForPreemption(containers);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void trackPreemptionsAgainstNode(List\u003cRMContainer\u003e containers) {\n    FSSchedulerNode node \u003d (FSSchedulerNode) scheduler.getNodeTracker()\n        .getNode(containers.get(0).getNodeId());\n    node.addContainersForPreemption(containers);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java"
    }
  }
}