{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderWebServicesUtils.java",
  "functionName": "parseMetricFilters",
  "functionId": "parseMetricFilters___expr-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServicesUtils.java",
  "functionStartLine": 233,
  "functionEndLine": 236,
  "numCommitsSeen": 19,
  "timeTaken": 2012,
  "changeHistory": [
    "089caf49fe968cf4cd3fd4f9637da89ee143991a",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1"
  ],
  "changeHistoryShort": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,4 @@\n-  static TimelineFilterList parseMetricFilters(String str,\n-      String delimiter) {\n-    if (str \u003d\u003d null || str.isEmpty()) {\n-      return null;\n-    }\n-    TimelineFilterList list \u003d new TimelineFilterList();\n-    String[] strs \u003d str.split(delimiter);\n-    for (String aStr : strs) {\n-      list.addFilter(new TimelineCompareFilter(\n-          TimelineCompareOp.GREATER_OR_EQUAL, aStr.trim(), 0L));\n-    }\n-    return list;\n+  static TimelineFilterList parseMetricFilters(String expr)\n+      throws TimelineParseException {\n+    return parseFilters(new TimelineParserForNumericFilters(expr));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static TimelineFilterList parseMetricFilters(String expr)\n      throws TimelineParseException {\n    return parseFilters(new TimelineParserForNumericFilters(expr));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServicesUtils.java",
          "extendedDetails": {
            "oldValue": "[str-String, delimiter-String]",
            "newValue": "[expr-String]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,4 @@\n-  static TimelineFilterList parseMetricFilters(String str,\n-      String delimiter) {\n-    if (str \u003d\u003d null || str.isEmpty()) {\n-      return null;\n-    }\n-    TimelineFilterList list \u003d new TimelineFilterList();\n-    String[] strs \u003d str.split(delimiter);\n-    for (String aStr : strs) {\n-      list.addFilter(new TimelineCompareFilter(\n-          TimelineCompareOp.GREATER_OR_EQUAL, aStr.trim(), 0L));\n-    }\n-    return list;\n+  static TimelineFilterList parseMetricFilters(String expr)\n+      throws TimelineParseException {\n+    return parseFilters(new TimelineParserForNumericFilters(expr));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static TimelineFilterList parseMetricFilters(String expr)\n      throws TimelineParseException {\n    return parseFilters(new TimelineParserForNumericFilters(expr));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServicesUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[TimelineParseException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,4 @@\n-  static TimelineFilterList parseMetricFilters(String str,\n-      String delimiter) {\n-    if (str \u003d\u003d null || str.isEmpty()) {\n-      return null;\n-    }\n-    TimelineFilterList list \u003d new TimelineFilterList();\n-    String[] strs \u003d str.split(delimiter);\n-    for (String aStr : strs) {\n-      list.addFilter(new TimelineCompareFilter(\n-          TimelineCompareOp.GREATER_OR_EQUAL, aStr.trim(), 0L));\n-    }\n-    return list;\n+  static TimelineFilterList parseMetricFilters(String expr)\n+      throws TimelineParseException {\n+    return parseFilters(new TimelineParserForNumericFilters(expr));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static TimelineFilterList parseMetricFilters(String expr)\n      throws TimelineParseException {\n    return parseFilters(new TimelineParserForNumericFilters(expr));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServicesUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  static TimelineFilterList parseMetricFilters(String str,\n+      String delimiter) {\n+    if (str \u003d\u003d null || str.isEmpty()) {\n+      return null;\n+    }\n+    TimelineFilterList list \u003d new TimelineFilterList();\n+    String[] strs \u003d str.split(delimiter);\n+    for (String aStr : strs) {\n+      list.addFilter(new TimelineCompareFilter(\n+          TimelineCompareOp.GREATER_OR_EQUAL, aStr.trim(), 0L));\n+    }\n+    return list;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static TimelineFilterList parseMetricFilters(String str,\n      String delimiter) {\n    if (str \u003d\u003d null || str.isEmpty()) {\n      return null;\n    }\n    TimelineFilterList list \u003d new TimelineFilterList();\n    String[] strs \u003d str.split(delimiter);\n    for (String aStr : strs) {\n      list.addFilter(new TimelineCompareFilter(\n          TimelineCompareOp.GREATER_OR_EQUAL, aStr.trim(), 0L));\n    }\n    return list;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServicesUtils.java"
    }
  }
}