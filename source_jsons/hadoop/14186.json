{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IPCLoggerChannel.java",
  "functionName": "getProxy",
  "functionId": "getProxy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
  "functionStartLine": 222,
  "functionEndLine": 226,
  "numCommitsSeen": 42,
  "timeTaken": 1477,
  "changeHistory": [
    "3a53ef4a802b51e1d5f268f669cd112c03607755",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "3a53ef4a802b51e1d5f268f669cd112c03607755": "Ybodychange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3a53ef4a802b51e1d5f268f669cd112c03607755": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3741. Exhaustive failure injection test for skipped RPCs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1370497 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 1:24 PM",
      "commitName": "3a53ef4a802b51e1d5f268f669cd112c03607755",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/07/12 2:44 PM",
      "commitNameOld": "d2d0736de40c2b2c7872d2438bf1695e23ded5af",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 12.94,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,5 @@\n   protected QJournalProtocol getProxy() throws IOException {\n     if (proxy !\u003d null) return proxy;\n-\n-    RPC.setProtocolEngine(conf,\n-        QJournalProtocolPB.class, ProtobufRpcEngine.class);\n-    QJournalProtocolPB pbproxy \u003d RPC.getProxy(\n-        QJournalProtocolPB.class,\n-        RPC.getProtocolVersion(QJournalProtocolPB.class),\n-        addr, conf);\n-    proxy \u003d new QJournalProtocolTranslatorPB(pbproxy);\n+    proxy \u003d createProxy();\n     return proxy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QJournalProtocol getProxy() throws IOException {\n    if (proxy !\u003d null) return proxy;\n    proxy \u003d createProxy();\n    return proxy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,12 @@\n+  protected QJournalProtocol getProxy() throws IOException {\n+    if (proxy !\u003d null) return proxy;\n+\n+    RPC.setProtocolEngine(conf,\n+        QJournalProtocolPB.class, ProtobufRpcEngine.class);\n+    QJournalProtocolPB pbproxy \u003d RPC.getProxy(\n+        QJournalProtocolPB.class,\n+        RPC.getProtocolVersion(QJournalProtocolPB.class),\n+        addr, conf);\n+    proxy \u003d new QJournalProtocolTranslatorPB(pbproxy);\n+    return proxy;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected QJournalProtocol getProxy() throws IOException {\n    if (proxy !\u003d null) return proxy;\n\n    RPC.setProtocolEngine(conf,\n        QJournalProtocolPB.class, ProtobufRpcEngine.class);\n    QJournalProtocolPB pbproxy \u003d RPC.getProxy(\n        QJournalProtocolPB.class,\n        RPC.getProtocolVersion(QJournalProtocolPB.class),\n        addr, conf);\n    proxy \u003d new QJournalProtocolTranslatorPB(pbproxy);\n    return proxy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java"
    }
  }
}