{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelper.java",
  "functionName": "convert",
  "functionId": "convert___keys-ExportedBlockKeys",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
  "functionStartLine": 255,
  "functionEndLine": 266,
  "numCommitsSeen": 195,
  "timeTaken": 5684,
  "changeHistory": [
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9"
  ],
  "changeHistoryShort": {
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2618. Implement protobuf service for NamenodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1210719 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/11 4:25 PM",
      "commitName": "0a713035f2fb1a222291cfdb2cbde906814c2fd9",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,12 @@\n+  public static ExportedBlockKeysProto convert(ExportedBlockKeys keys) {\n+    ExportedBlockKeysProto.Builder builder \u003d ExportedBlockKeysProto\n+        .newBuilder();\n+    builder.setIsBlockTokenEnabled(keys.isBlockTokenEnabled())\n+        .setKeyUpdateInterval(keys.getKeyUpdateInterval())\n+        .setTokenLifeTime(keys.getTokenLifetime())\n+        .setCurrentKey(convert(keys.getCurrentKey()));\n+    for (BlockKey k : keys.getAllKeys()) {\n+      builder.addAllKeys(convert(k));\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ExportedBlockKeysProto convert(ExportedBlockKeys keys) {\n    ExportedBlockKeysProto.Builder builder \u003d ExportedBlockKeysProto\n        .newBuilder();\n    builder.setIsBlockTokenEnabled(keys.isBlockTokenEnabled())\n        .setKeyUpdateInterval(keys.getKeyUpdateInterval())\n        .setTokenLifeTime(keys.getTokenLifetime())\n        .setCurrentKey(convert(keys.getCurrentKey()));\n    for (BlockKey k : keys.getAllKeys()) {\n      builder.addAllKeys(convert(k));\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}