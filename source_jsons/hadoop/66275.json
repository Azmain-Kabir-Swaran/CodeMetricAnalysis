{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSUtils.java",
  "functionName": "parseNodesFromRumenTrace",
  "functionId": "parseNodesFromRumenTrace___jobTrace-String",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
  "functionStartLine": 80,
  "functionEndLine": 117,
  "numCommitsSeen": 14,
  "timeTaken": 1506,
  "changeHistory": [
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
    "4efdf3a979c361348612f817a3253be6d0de58f7",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": "Ymultichange(Yreturntypechange,Ybodychange)",
    "4efdf3a979c361348612f817a3253be6d0de58f7": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "31/07/18 9:36 AM",
      "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/04/18 1:11 PM",
          "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 104.85,
          "commitsBetweenForRepo": 1242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,38 @@\n-  public static Set\u003cString\u003e parseNodesFromRumenTrace(String jobTrace)\n-          throws IOException {\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+  public static Set\u003cNodeDetails\u003e parseNodesFromRumenTrace(\n+      String jobTrace) throws IOException {\n+    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n \n     File fin \u003d new File(jobTrace);\n     Configuration conf \u003d new Configuration();\n     conf.set(\"fs.defaultFS\", \"file:///\");\n     JobTraceReader reader \u003d new JobTraceReader(\n             new Path(fin.getAbsolutePath()), conf);\n     try {\n       LoggedJob job \u003d null;\n       while ((job \u003d reader.getNext()) !\u003d null) {\n         for(LoggedTask mapTask : job.getMapTasks()) {\n           // select the last attempt\n           if (mapTask.getAttempts().size() \u003d\u003d 0) {\n             continue;\n           }\n           LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                   .get(mapTask.getAttempts().size() - 1);\n-          nodeSet.add(taskAttempt.getHostName().getValue());\n+          nodeSet.add(new NodeDetails(\n+              taskAttempt.getHostName().getValue()));\n         }\n         for(LoggedTask reduceTask : job.getReduceTasks()) {\n           if (reduceTask.getAttempts().size() \u003d\u003d 0) {\n             continue;\n           }\n           LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                   .get(reduceTask.getAttempts().size() - 1);\n-          nodeSet.add(taskAttempt.getHostName().getValue());\n+          nodeSet.add(new NodeDetails(\n+              taskAttempt.getHostName().getValue()));\n         }\n       }\n     } finally {\n       reader.close();\n     }\n \n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cNodeDetails\u003e parseNodesFromRumenTrace(\n      String jobTrace) throws IOException {\n    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n\n    File fin \u003d new File(jobTrace);\n    Configuration conf \u003d new Configuration();\n    conf.set(\"fs.defaultFS\", \"file:///\");\n    JobTraceReader reader \u003d new JobTraceReader(\n            new Path(fin.getAbsolutePath()), conf);\n    try {\n      LoggedJob job \u003d null;\n      while ((job \u003d reader.getNext()) !\u003d null) {\n        for(LoggedTask mapTask : job.getMapTasks()) {\n          // select the last attempt\n          if (mapTask.getAttempts().size() \u003d\u003d 0) {\n            continue;\n          }\n          LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                  .get(mapTask.getAttempts().size() - 1);\n          nodeSet.add(new NodeDetails(\n              taskAttempt.getHostName().getValue()));\n        }\n        for(LoggedTask reduceTask : job.getReduceTasks()) {\n          if (reduceTask.getAttempts().size() \u003d\u003d 0) {\n            continue;\n          }\n          LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                  .get(reduceTask.getAttempts().size() - 1);\n          nodeSet.add(new NodeDetails(\n              taskAttempt.getHostName().getValue()));\n        }\n      }\n    } finally {\n      reader.close();\n    }\n\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {
            "oldValue": "Set\u003cString\u003e",
            "newValue": "Set\u003cNodeDetails\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/04/18 1:11 PM",
          "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 104.85,
          "commitsBetweenForRepo": 1242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,38 @@\n-  public static Set\u003cString\u003e parseNodesFromRumenTrace(String jobTrace)\n-          throws IOException {\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+  public static Set\u003cNodeDetails\u003e parseNodesFromRumenTrace(\n+      String jobTrace) throws IOException {\n+    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n \n     File fin \u003d new File(jobTrace);\n     Configuration conf \u003d new Configuration();\n     conf.set(\"fs.defaultFS\", \"file:///\");\n     JobTraceReader reader \u003d new JobTraceReader(\n             new Path(fin.getAbsolutePath()), conf);\n     try {\n       LoggedJob job \u003d null;\n       while ((job \u003d reader.getNext()) !\u003d null) {\n         for(LoggedTask mapTask : job.getMapTasks()) {\n           // select the last attempt\n           if (mapTask.getAttempts().size() \u003d\u003d 0) {\n             continue;\n           }\n           LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                   .get(mapTask.getAttempts().size() - 1);\n-          nodeSet.add(taskAttempt.getHostName().getValue());\n+          nodeSet.add(new NodeDetails(\n+              taskAttempt.getHostName().getValue()));\n         }\n         for(LoggedTask reduceTask : job.getReduceTasks()) {\n           if (reduceTask.getAttempts().size() \u003d\u003d 0) {\n             continue;\n           }\n           LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                   .get(reduceTask.getAttempts().size() - 1);\n-          nodeSet.add(taskAttempt.getHostName().getValue());\n+          nodeSet.add(new NodeDetails(\n+              taskAttempt.getHostName().getValue()));\n         }\n       }\n     } finally {\n       reader.close();\n     }\n \n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cNodeDetails\u003e parseNodesFromRumenTrace(\n      String jobTrace) throws IOException {\n    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n\n    File fin \u003d new File(jobTrace);\n    Configuration conf \u003d new Configuration();\n    conf.set(\"fs.defaultFS\", \"file:///\");\n    JobTraceReader reader \u003d new JobTraceReader(\n            new Path(fin.getAbsolutePath()), conf);\n    try {\n      LoggedJob job \u003d null;\n      while ((job \u003d reader.getNext()) !\u003d null) {\n        for(LoggedTask mapTask : job.getMapTasks()) {\n          // select the last attempt\n          if (mapTask.getAttempts().size() \u003d\u003d 0) {\n            continue;\n          }\n          LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                  .get(mapTask.getAttempts().size() - 1);\n          nodeSet.add(new NodeDetails(\n              taskAttempt.getHostName().getValue()));\n        }\n        for(LoggedTask reduceTask : job.getReduceTasks()) {\n          if (reduceTask.getAttempts().size() \u003d\u003d 0) {\n            continue;\n          }\n          LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                  .get(reduceTask.getAttempts().size() - 1);\n          nodeSet.add(new NodeDetails(\n              taskAttempt.getHostName().getValue()));\n        }\n      }\n    } finally {\n      reader.close();\n    }\n\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "4efdf3a979c361348612f817a3253be6d0de58f7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4612. Fix rumen and scheduler load simulator handle killed tasks\nproperly. Contributed by Ming Ma.\n",
      "commitDate": "26/01/16 6:17 PM",
      "commitName": "4efdf3a979c361348612f817a3253be6d0de58f7",
      "commitAuthor": "Xuan",
      "commitDateOld": "20/01/16 3:41 PM",
      "commitNameOld": "1708a4cd2377c56e2cb5738720b7eaf10baf13c8",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 6.11,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,36 @@\n   public static Set\u003cString\u003e parseNodesFromRumenTrace(String jobTrace)\n           throws IOException {\n     Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n \n     File fin \u003d new File(jobTrace);\n     Configuration conf \u003d new Configuration();\n     conf.set(\"fs.defaultFS\", \"file:///\");\n     JobTraceReader reader \u003d new JobTraceReader(\n             new Path(fin.getAbsolutePath()), conf);\n     try {\n       LoggedJob job \u003d null;\n       while ((job \u003d reader.getNext()) !\u003d null) {\n         for(LoggedTask mapTask : job.getMapTasks()) {\n           // select the last attempt\n+          if (mapTask.getAttempts().size() \u003d\u003d 0) {\n+            continue;\n+          }\n           LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                   .get(mapTask.getAttempts().size() - 1);\n           nodeSet.add(taskAttempt.getHostName().getValue());\n         }\n         for(LoggedTask reduceTask : job.getReduceTasks()) {\n+          if (reduceTask.getAttempts().size() \u003d\u003d 0) {\n+            continue;\n+          }\n           LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                   .get(reduceTask.getAttempts().size() - 1);\n           nodeSet.add(taskAttempt.getHostName().getValue());\n         }\n       }\n     } finally {\n       reader.close();\n     }\n \n     return nodeSet;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cString\u003e parseNodesFromRumenTrace(String jobTrace)\n          throws IOException {\n    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n\n    File fin \u003d new File(jobTrace);\n    Configuration conf \u003d new Configuration();\n    conf.set(\"fs.defaultFS\", \"file:///\");\n    JobTraceReader reader \u003d new JobTraceReader(\n            new Path(fin.getAbsolutePath()), conf);\n    try {\n      LoggedJob job \u003d null;\n      while ((job \u003d reader.getNext()) !\u003d null) {\n        for(LoggedTask mapTask : job.getMapTasks()) {\n          // select the last attempt\n          if (mapTask.getAttempts().size() \u003d\u003d 0) {\n            continue;\n          }\n          LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                  .get(mapTask.getAttempts().size() - 1);\n          nodeSet.add(taskAttempt.getHostName().getValue());\n        }\n        for(LoggedTask reduceTask : job.getReduceTasks()) {\n          if (reduceTask.getAttempts().size() \u003d\u003d 0) {\n            continue;\n          }\n          LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                  .get(reduceTask.getAttempts().size() - 1);\n          nodeSet.add(taskAttempt.getHostName().getValue());\n        }\n      }\n    } finally {\n      reader.close();\n    }\n\n    return nodeSet;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,30 @@\n+  public static Set\u003cString\u003e parseNodesFromRumenTrace(String jobTrace)\n+          throws IOException {\n+    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+\n+    File fin \u003d new File(jobTrace);\n+    Configuration conf \u003d new Configuration();\n+    conf.set(\"fs.defaultFS\", \"file:///\");\n+    JobTraceReader reader \u003d new JobTraceReader(\n+            new Path(fin.getAbsolutePath()), conf);\n+    try {\n+      LoggedJob job \u003d null;\n+      while ((job \u003d reader.getNext()) !\u003d null) {\n+        for(LoggedTask mapTask : job.getMapTasks()) {\n+          // select the last attempt\n+          LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n+                  .get(mapTask.getAttempts().size() - 1);\n+          nodeSet.add(taskAttempt.getHostName().getValue());\n+        }\n+        for(LoggedTask reduceTask : job.getReduceTasks()) {\n+          LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n+                  .get(reduceTask.getAttempts().size() - 1);\n+          nodeSet.add(taskAttempt.getHostName().getValue());\n+        }\n+      }\n+    } finally {\n+      reader.close();\n+    }\n+\n+    return nodeSet;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cString\u003e parseNodesFromRumenTrace(String jobTrace)\n          throws IOException {\n    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n\n    File fin \u003d new File(jobTrace);\n    Configuration conf \u003d new Configuration();\n    conf.set(\"fs.defaultFS\", \"file:///\");\n    JobTraceReader reader \u003d new JobTraceReader(\n            new Path(fin.getAbsolutePath()), conf);\n    try {\n      LoggedJob job \u003d null;\n      while ((job \u003d reader.getNext()) !\u003d null) {\n        for(LoggedTask mapTask : job.getMapTasks()) {\n          // select the last attempt\n          LoggedTaskAttempt taskAttempt \u003d mapTask.getAttempts()\n                  .get(mapTask.getAttempts().size() - 1);\n          nodeSet.add(taskAttempt.getHostName().getValue());\n        }\n        for(LoggedTask reduceTask : job.getReduceTasks()) {\n          LoggedTaskAttempt taskAttempt \u003d reduceTask.getAttempts()\n                  .get(reduceTask.getAttempts().size() - 1);\n          nodeSet.add(taskAttempt.getHostName().getValue());\n        }\n      }\n    } finally {\n      reader.close();\n    }\n\n    return nodeSet;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java"
    }
  }
}