{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "updateAMRMToken",
  "functionId": "updateAMRMToken___token-Token",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 1023,
  "functionEndLine": 1034,
  "numCommitsSeen": 52,
  "timeTaken": 2935,
  "changeHistory": [
    "b1833d9ba2c078582161da45ac392dd5c361dcdf",
    "51fc7f542747bf87b48580747f51610e52bdc98b",
    "6d2bdbd7dab179dfb4f19bb41809e97f1db88c6b",
    "a3d9934f916471a845dc679449d08f94dead550d",
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb"
  ],
  "changeHistoryShort": {
    "b1833d9ba2c078582161da45ac392dd5c361dcdf": "Ybodychange",
    "51fc7f542747bf87b48580747f51610e52bdc98b": "Ybodychange",
    "6d2bdbd7dab179dfb4f19bb41809e97f1db88c6b": "Ybodychange",
    "a3d9934f916471a845dc679449d08f94dead550d": "Ybodychange",
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1833d9ba2c078582161da45ac392dd5c361dcdf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8210. AMRMClient logging on every heartbeat to track updation of AM RM token causes too many log lines to be generated in AM logs. (Suma Shivaprasad via wangda)\n\nChange-Id: I70edd6e301fd5e78d479e1882aedc9332a0827aa\n",
      "commitDate": "27/04/18 1:07 PM",
      "commitName": "b1833d9ba2c078582161da45ac392dd5c361dcdf",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "15/02/18 11:07 PM",
      "commitNameOld": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 70.54,
      "commitsBetweenForRepo": 1111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   private void updateAMRMToken(Token token) throws IOException {\n     org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n         new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n           .getIdentifier().array(), token.getPassword().array(), new Text(\n           token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n-    LOG.info(\"Updating with new AMRMToken\");\n     currentUGI.addToken(amrmToken);\n     amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAMRMToken(Token token) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n          .getIdentifier().array(), token.getPassword().array(), new Text(\n          token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n    currentUGI.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "51fc7f542747bf87b48580747f51610e52bdc98b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4682. AMRM client to log when AMRM token updated. (Prabhu Joseph via stevel)\n",
      "commitDate": "12/02/16 3:02 AM",
      "commitName": "51fc7f542747bf87b48580747f51610e52bdc98b",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "12/11/15 11:50 AM",
      "commitNameOld": "7ff280fca9af45b98cee2336e78803da46b0f8a5",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 91.63,
      "commitsBetweenForRepo": 580,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   private void updateAMRMToken(Token token) throws IOException {\n     org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n         new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n           .getIdentifier().array(), token.getPassword().array(), new Text(\n           token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n+    LOG.info(\"Updating with new AMRMToken\");\n     currentUGI.addToken(amrmToken);\n     amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAMRMToken(Token token) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n          .getIdentifier().array(), token.getPassword().array(), new Text(\n          token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n    LOG.info(\"Updating with new AMRMToken\");\n    currentUGI.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "6d2bdbd7dab179dfb4f19bb41809e97f1db88c6b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3103. AMRMClientImpl does not update AMRM token properly. Contributed by Jason Lowe\n",
      "commitDate": "28/01/15 3:23 PM",
      "commitName": "6d2bdbd7dab179dfb4f19bb41809e97f1db88c6b",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/12/14 8:04 PM",
      "commitNameOld": "d468c9aaf15e977f12e6214b47996412c907e069",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 35.8,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private void updateAMRMToken(Token token) throws IOException {\n     org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n         new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n           .getIdentifier().array(), token.getPassword().array(), new Text(\n           token.getKind()), new Text(token.getService()));\n-    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n+    // Preserve the token service sent by the RM when adding the token\n+    // to ensure we replace the previous token setup by the RM.\n+    // Afterwards we can update the service address for the RPC layer.\n     UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n-    if (UserGroupInformation.isSecurityEnabled()) {\n-      currentUGI \u003d UserGroupInformation.getLoginUser();\n-    }\n     currentUGI.addToken(amrmToken);\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAMRMToken(Token token) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n          .getIdentifier().array(), token.getPassword().array(), new Text(\n          token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n    currentUGI.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "a3d9934f916471a845dc679449d08f94dead550d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1779. Fixed AMRMClient to handle AMRMTokens correctly across ResourceManager work-preserving-restart or failover. Contributed by Jian He.\n",
      "commitDate": "18/09/14 10:16 AM",
      "commitName": "a3d9934f916471a845dc679449d08f94dead550d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/08/14 2:38 PM",
      "commitNameOld": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
      "commitAuthorOld": "Xuan Gong",
      "daysBetweenCommits": 40.82,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   private void updateAMRMToken(Token token) throws IOException {\n     org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n         new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n           .getIdentifier().array(), token.getPassword().array(), new Text(\n           token.getKind()), new Text(token.getService()));\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n     UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n     if (UserGroupInformation.isSecurityEnabled()) {\n       currentUGI \u003d UserGroupInformation.getLoginUser();\n     }\n     currentUGI.addToken(amrmToken);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAMRMToken(Token token) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n          .getIdentifier().array(), token.getPassword().array(), new Text(\n          token.getKind()), new Text(token.getService()));\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConfig()));\n    UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n    if (UserGroupInformation.isSecurityEnabled()) {\n      currentUGI \u003d UserGroupInformation.getLoginUser();\n    }\n    currentUGI.addToken(amrmToken);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2212: ApplicationMaster needs to find a way to update the AMRMToken periodically. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616892 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:38 PM",
      "commitName": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
      "commitAuthor": "Xuan Gong",
      "diff": "@@ -0,0 +1,11 @@\n+  private void updateAMRMToken(Token token) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n+        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n+          .getIdentifier().array(), token.getPassword().array(), new Text(\n+          token.getKind()), new Text(token.getService()));\n+    UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      currentUGI \u003d UserGroupInformation.getLoginUser();\n+    }\n+    currentUGI.addToken(amrmToken);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAMRMToken(Token token) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(token\n          .getIdentifier().array(), token.getPassword().array(), new Text(\n          token.getKind()), new Text(token.getService()));\n    UserGroupInformation currentUGI \u003d UserGroupInformation.getCurrentUser();\n    if (UserGroupInformation.isSecurityEnabled()) {\n      currentUGI \u003d UserGroupInformation.getLoginUser();\n    }\n    currentUGI.addToken(amrmToken);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
    }
  }
}