{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPOfferService.java",
  "functionName": "processCommandFromStandby",
  "functionId": "processCommandFromStandby___cmd-DatanodeCommand__actor-BPServiceActor",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
  "functionStartLine": 810,
  "functionEndLine": 836,
  "numCommitsSeen": 87,
  "timeTaken": 4050,
  "changeHistory": [
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
    "e2a15d18bbbb86c20003c4e34d85244996a4cc3b",
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
    "f9eb95c31da9199b393d7994cf9f21250abe41b9",
    "04cf2a768c0fb1c2c5c80d2480aa072ec7e43c3f",
    "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
    "329fb1f4334567fe072de213b1b1f644edbc31e4",
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76"
  ],
  "changeHistoryShort": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": "Ybodychange",
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": "Ybodychange",
    "e2a15d18bbbb86c20003c4e34d85244996a4cc3b": "Ybodychange",
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17": "Ybodychange",
    "f9eb95c31da9199b393d7994cf9f21250abe41b9": "Ybodychange",
    "04cf2a768c0fb1c2c5c80d2480aa072ec7e43c3f": "Ybodychange",
    "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a": "Ybodychange",
    "329fb1f4334567fe072de213b1b1f644edbc31e4": "Ybodychange",
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76": "Ybodychange"
  },
  "changeHistoryDetails": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13076: [SPS]: Cleanup work for HDFS-10285 merge. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "00eceed233d6e80d5c7137bf5b5286746ec4d5fb",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,27 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n     case DatanodeProtocol.DNA_CACHE:\n     case DatanodeProtocol.DNA_UNCACHE:\n     case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n-    case DatanodeProtocol.DNA_BLOCK_STORAGE_MOVEMENT:\n-    case DatanodeProtocol.DNA_DROP_SPS_WORK_COMMAND:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n    case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12225: [SPS]: Optimize extended attributes for tracking SPS movements. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:05 AM",
      "commitNameOld": "e34331c31d68cb22891db48011db5b36ad178af1",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n     case DatanodeProtocol.DNA_CACHE:\n     case DatanodeProtocol.DNA_UNCACHE:\n     case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n     case DatanodeProtocol.DNA_BLOCK_STORAGE_MOVEMENT:\n+    case DatanodeProtocol.DNA_DROP_SPS_WORK_COMMAND:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n    case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n    case DatanodeProtocol.DNA_BLOCK_STORAGE_MOVEMENT:\n    case DatanodeProtocol.DNA_DROP_SPS_WORK_COMMAND:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "e2a15d18bbbb86c20003c4e34d85244996a4cc3b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10801. [SPS]: Protocol buffer changes for sending storage movement commands from NN to DN. Contributed by Rakesh R\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "e2a15d18bbbb86c20003c4e34d85244996a4cc3b",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "16/01/18 2:51 AM",
      "commitNameOld": "880b9d24ff7b5f350ec99bac9b0862009460b486",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 207.97,
      "commitsBetweenForRepo": 2058,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n     case DatanodeProtocol.DNA_CACHE:\n     case DatanodeProtocol.DNA_UNCACHE:\n     case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n+    case DatanodeProtocol.DNA_BLOCK_STORAGE_MOVEMENT:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n    case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n    case DatanodeProtocol.DNA_BLOCK_STORAGE_MOVEMENT:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
      "commitDate": "02/02/16 12:32 PM",
      "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
      "commitAuthor": "zhezhang",
      "commitDateOld": "22/11/15 3:54 PM",
      "commitNameOld": "176ff5ce90f2cbcd8342016d0f5570337d2ff79f",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 71.86,
      "commitsBetweenForRepo": 462,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n     case DatanodeProtocol.DNA_CACHE:\n     case DatanodeProtocol.DNA_UNCACHE:\n-    case DatanodeProtocol.DNA_ERASURE_CODING_RECOVERY:\n+    case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n    case DatanodeProtocol.DNA_ERASURE_CODING_RECONSTRUCTION:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "f9eb95c31da9199b393d7994cf9f21250abe41b9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8230. Erasure Coding: Ignore DatanodeProtocol#DNA_ERASURE_CODING_RECOVERY commands from standbynode if any (Contributed by Vinayakumar B)\n",
      "commitDate": "26/05/15 11:59 AM",
      "commitName": "f9eb95c31da9199b393d7994cf9f21250abe41b9",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "26/05/15 11:59 AM",
      "commitNameOld": "014d8675c59d44ad68dec36db6afe3f3666a3f15",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n     case DatanodeProtocol.DNA_CACHE:\n     case DatanodeProtocol.DNA_UNCACHE:\n+    case DatanodeProtocol.DNA_ERASURE_CODING_RECOVERY:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n    case DatanodeProtocol.DNA_ERASURE_CODING_RECOVERY:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "04cf2a768c0fb1c2c5c80d2480aa072ec7e43c3f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5014. Process register commands with out holding BPOfferService lock. Contributed by Vinay.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543861 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/11/13 8:27 AM",
      "commitName": "04cf2a768c0fb1c2c5c80d2480aa072ec7e43c3f",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "16/10/13 3:15 PM",
      "commitNameOld": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 34.76,
      "commitsBetweenForRepo": 190,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,26 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n-    if (cmd \u003d\u003d null)\n-      return true;\n     switch(cmd.getAction()) {\n-    case DatanodeProtocol.DNA_REGISTER:\n-      // namenode requested a registration - at start or if NN lost contact\n-      LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n-      actor.reRegister();\n-      break;\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n     case DatanodeProtocol.DNA_CACHE:\n     case DatanodeProtocol.DNA_UNCACHE:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5096. Automatically cache new data added to a cached path (contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532924 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/13 3:15 PM",
      "commitName": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "14/10/13 3:19 PM",
      "commitNameOld": "15d08c4778350a86d7bae0174aeb48f8d8f61cce",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,33 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     if (cmd \u003d\u003d null)\n       return true;\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_REGISTER:\n       // namenode requested a registration - at start or if NN lost contact\n       LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n       actor.reRegister();\n       break;\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n+    case DatanodeProtocol.DNA_CACHE:\n+    case DatanodeProtocol.DNA_UNCACHE:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    if (cmd \u003d\u003d null)\n      return true;\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_REGISTER:\n      // namenode requested a registration - at start or if NN lost contact\n      LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n      actor.reRegister();\n      break;\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n    case DatanodeProtocol.DNA_CACHE:\n    case DatanodeProtocol.DNA_UNCACHE:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "329fb1f4334567fe072de213b1b1f644edbc31e4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4655. DNA_FINALIZE is logged as being an unknown command by the DN when received from the standby NN. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1463355 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/13 7:05 PM",
      "commitName": "329fb1f4334567fe072de213b1b1f644edbc31e4",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "06/03/13 9:18 AM",
      "commitNameOld": "456064d8999b8aaba32bc398ad39143e9ee1439f",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 26.37,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     if (cmd \u003d\u003d null)\n       return true;\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_REGISTER:\n       // namenode requested a registration - at start or if NN lost contact\n       LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n       actor.reRegister();\n       break;\n     case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n       LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n       if (dn.isBlockTokenEnabled) {\n         dn.blockPoolTokenSecretManager.addKeys(\n             getBlockPoolId(), \n             ((KeyUpdateCommand) cmd).getExportedKeys());\n       }\n       break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n+    case DatanodeProtocol.DNA_FINALIZE:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n       break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    if (cmd \u003d\u003d null)\n      return true;\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_REGISTER:\n      // namenode requested a registration - at start or if NN lost contact\n      LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n      actor.reRegister();\n      break;\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_FINALIZE:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76": {
      "type": "Ybodychange",
      "commitMessage": "Fix issue with NN/DN re-registration.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1358347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/07/12 11:59 AM",
      "commitName": "fb95fce24056c0b0aa5b77683c684fe1b68c4f76",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "25/05/12 12:04 AM",
      "commitNameOld": "befd45fcb193a944dd144a9ebeca006b2b73cb0d",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 42.5,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,30 @@\n   private boolean processCommandFromStandby(DatanodeCommand cmd,\n       BPServiceActor actor) throws IOException {\n     if (cmd \u003d\u003d null)\n       return true;\n     switch(cmd.getAction()) {\n     case DatanodeProtocol.DNA_REGISTER:\n       // namenode requested a registration - at start or if NN lost contact\n-      LOG.info(\"DatanodeCommand action: DNA_REGISTER\");\n+      LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n       actor.reRegister();\n-      return true;\n+      break;\n+    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n+      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n+      if (dn.isBlockTokenEnabled) {\n+        dn.blockPoolTokenSecretManager.addKeys(\n+            getBlockPoolId(), \n+            ((KeyUpdateCommand) cmd).getExportedKeys());\n+      }\n+      break;\n     case DatanodeProtocol.DNA_TRANSFER:\n     case DatanodeProtocol.DNA_INVALIDATE:\n     case DatanodeProtocol.DNA_SHUTDOWN:\n     case DatanodeProtocol.DNA_RECOVERBLOCK:\n-    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n     case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n       LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n-      return true;   \n+      break;\n     default:\n       LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean processCommandFromStandby(DatanodeCommand cmd,\n      BPServiceActor actor) throws IOException {\n    if (cmd \u003d\u003d null)\n      return true;\n    switch(cmd.getAction()) {\n    case DatanodeProtocol.DNA_REGISTER:\n      // namenode requested a registration - at start or if NN lost contact\n      LOG.info(\"DatanodeCommand action from standby: DNA_REGISTER\");\n      actor.reRegister();\n      break;\n    case DatanodeProtocol.DNA_ACCESSKEYUPDATE:\n      LOG.info(\"DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE\");\n      if (dn.isBlockTokenEnabled) {\n        dn.blockPoolTokenSecretManager.addKeys(\n            getBlockPoolId(), \n            ((KeyUpdateCommand) cmd).getExportedKeys());\n      }\n      break;\n    case DatanodeProtocol.DNA_TRANSFER:\n    case DatanodeProtocol.DNA_INVALIDATE:\n    case DatanodeProtocol.DNA_SHUTDOWN:\n    case DatanodeProtocol.DNA_RECOVERBLOCK:\n    case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:\n      LOG.warn(\"Got a command from standby NN - ignoring command:\" + cmd.getAction());\n      break;\n    default:\n      LOG.warn(\"Unknown DatanodeCommand action: \" + cmd.getAction());\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    }
  }
}