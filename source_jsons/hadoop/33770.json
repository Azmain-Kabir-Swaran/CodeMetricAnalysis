{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OCIContainerRuntime.java",
  "functionName": "allowHostPidNamespace",
  "functionId": "allowHostPidNamespace___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
  "functionStartLine": 219,
  "functionEndLine": 248,
  "numCommitsSeen": 90,
  "timeTaken": 3929,
  "changeHistory": [
    "29465bf169a7e348a4f32265083450faf66d5631",
    "97fe3cc187cb9f773777ca79db6f1c7e4d1d5a68"
  ],
  "changeHistoryShort": {
    "29465bf169a7e348a4f32265083450faf66d5631": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "97fe3cc187cb9f773777ca79db6f1c7e4d1d5a68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29465bf169a7e348a4f32265083450faf66d5631": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
      "commitDate": "28/06/19 2:18 PM",
      "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-  private boolean allowHostPidNamespace(Container container)\n+  protected boolean allowHostPidNamespace(Container container)\n       throws ContainerExecutionException {\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n-    String pidNamespace \u003d environment.get(ENV_DOCKER_CONTAINER_PID_NAMESPACE);\n+    String envOciContainerPidNamespace \u003d getEnvOciContainerPidNamespace();\n+\n+    String pidNamespace \u003d environment.get(envOciContainerPidNamespace);\n \n     if (pidNamespace \u003d\u003d null) {\n       return false;\n     }\n \n     if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n       LOG.warn(\"NOT requesting PID namespace. Value of \" +\n-          ENV_DOCKER_CONTAINER_PID_NAMESPACE + \"is invalid: \" + pidNamespace);\n+          envOciContainerPidNamespace\n+          + \"is invalid: \" + pidNamespace);\n       return false;\n     }\n \n-    boolean hostPidNamespaceEnabled \u003d conf.getBoolean(\n-        YarnConfiguration.NM_DOCKER_ALLOW_HOST_PID_NAMESPACE,\n-        YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_HOST_PID_NAMESPACE);\n+    boolean hostPidNamespaceEnabled \u003d getHostPidNamespaceEnabled();\n \n     if (!hostPidNamespaceEnabled) {\n       String message \u003d \"Host pid namespace being requested but this is not \"\n           + \"enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean allowHostPidNamespace(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String envOciContainerPidNamespace \u003d getEnvOciContainerPidNamespace();\n\n    String pidNamespace \u003d environment.get(envOciContainerPidNamespace);\n\n    if (pidNamespace \u003d\u003d null) {\n      return false;\n    }\n\n    if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n      LOG.warn(\"NOT requesting PID namespace. Value of \" +\n          envOciContainerPidNamespace\n          + \"is invalid: \" + pidNamespace);\n      return false;\n    }\n\n    boolean hostPidNamespaceEnabled \u003d getHostPidNamespaceEnabled();\n\n    if (!hostPidNamespaceEnabled) {\n      String message \u003d \"Host pid namespace being requested but this is not \"\n          + \"enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
            "oldMethodName": "allowHostPidNamespace",
            "newMethodName": "allowHostPidNamespace"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-  private boolean allowHostPidNamespace(Container container)\n+  protected boolean allowHostPidNamespace(Container container)\n       throws ContainerExecutionException {\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n-    String pidNamespace \u003d environment.get(ENV_DOCKER_CONTAINER_PID_NAMESPACE);\n+    String envOciContainerPidNamespace \u003d getEnvOciContainerPidNamespace();\n+\n+    String pidNamespace \u003d environment.get(envOciContainerPidNamespace);\n \n     if (pidNamespace \u003d\u003d null) {\n       return false;\n     }\n \n     if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n       LOG.warn(\"NOT requesting PID namespace. Value of \" +\n-          ENV_DOCKER_CONTAINER_PID_NAMESPACE + \"is invalid: \" + pidNamespace);\n+          envOciContainerPidNamespace\n+          + \"is invalid: \" + pidNamespace);\n       return false;\n     }\n \n-    boolean hostPidNamespaceEnabled \u003d conf.getBoolean(\n-        YarnConfiguration.NM_DOCKER_ALLOW_HOST_PID_NAMESPACE,\n-        YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_HOST_PID_NAMESPACE);\n+    boolean hostPidNamespaceEnabled \u003d getHostPidNamespaceEnabled();\n \n     if (!hostPidNamespaceEnabled) {\n       String message \u003d \"Host pid namespace being requested but this is not \"\n           + \"enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean allowHostPidNamespace(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String envOciContainerPidNamespace \u003d getEnvOciContainerPidNamespace();\n\n    String pidNamespace \u003d environment.get(envOciContainerPidNamespace);\n\n    if (pidNamespace \u003d\u003d null) {\n      return false;\n    }\n\n    if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n      LOG.warn(\"NOT requesting PID namespace. Value of \" +\n          envOciContainerPidNamespace\n          + \"is invalid: \" + pidNamespace);\n      return false;\n    }\n\n    boolean hostPidNamespaceEnabled \u003d getHostPidNamespaceEnabled();\n\n    if (!hostPidNamespaceEnabled) {\n      String message \u003d \"Host pid namespace being requested but this is not \"\n          + \"enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-  private boolean allowHostPidNamespace(Container container)\n+  protected boolean allowHostPidNamespace(Container container)\n       throws ContainerExecutionException {\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n-    String pidNamespace \u003d environment.get(ENV_DOCKER_CONTAINER_PID_NAMESPACE);\n+    String envOciContainerPidNamespace \u003d getEnvOciContainerPidNamespace();\n+\n+    String pidNamespace \u003d environment.get(envOciContainerPidNamespace);\n \n     if (pidNamespace \u003d\u003d null) {\n       return false;\n     }\n \n     if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n       LOG.warn(\"NOT requesting PID namespace. Value of \" +\n-          ENV_DOCKER_CONTAINER_PID_NAMESPACE + \"is invalid: \" + pidNamespace);\n+          envOciContainerPidNamespace\n+          + \"is invalid: \" + pidNamespace);\n       return false;\n     }\n \n-    boolean hostPidNamespaceEnabled \u003d conf.getBoolean(\n-        YarnConfiguration.NM_DOCKER_ALLOW_HOST_PID_NAMESPACE,\n-        YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_HOST_PID_NAMESPACE);\n+    boolean hostPidNamespaceEnabled \u003d getHostPidNamespaceEnabled();\n \n     if (!hostPidNamespaceEnabled) {\n       String message \u003d \"Host pid namespace being requested but this is not \"\n           + \"enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean allowHostPidNamespace(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String envOciContainerPidNamespace \u003d getEnvOciContainerPidNamespace();\n\n    String pidNamespace \u003d environment.get(envOciContainerPidNamespace);\n\n    if (pidNamespace \u003d\u003d null) {\n      return false;\n    }\n\n    if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n      LOG.warn(\"NOT requesting PID namespace. Value of \" +\n          envOciContainerPidNamespace\n          + \"is invalid: \" + pidNamespace);\n      return false;\n    }\n\n    boolean hostPidNamespaceEnabled \u003d getHostPidNamespaceEnabled();\n\n    if (!hostPidNamespaceEnabled) {\n      String message \u003d \"Host pid namespace being requested but this is not \"\n          + \"enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {}
        }
      ]
    },
    "97fe3cc187cb9f773777ca79db6f1c7e4d1d5a68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7729.  Add support for setting Docker PID namespace mode.  (Contributed by Billie Rinaldi)\n",
      "commitDate": "22/01/18 1:33 PM",
      "commitName": "97fe3cc187cb9f773777ca79db6f1c7e4d1d5a68",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,29 @@\n+  private boolean allowHostPidNamespace(Container container)\n+      throws ContainerExecutionException {\n+    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n+        .getEnvironment();\n+    String pidNamespace \u003d environment.get(ENV_DOCKER_CONTAINER_PID_NAMESPACE);\n+\n+    if (pidNamespace \u003d\u003d null) {\n+      return false;\n+    }\n+\n+    if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n+      LOG.warn(\"NOT requesting PID namespace. Value of \" +\n+          ENV_DOCKER_CONTAINER_PID_NAMESPACE + \"is invalid: \" + pidNamespace);\n+      return false;\n+    }\n+\n+    boolean hostPidNamespaceEnabled \u003d conf.getBoolean(\n+        YarnConfiguration.NM_DOCKER_ALLOW_HOST_PID_NAMESPACE,\n+        YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_HOST_PID_NAMESPACE);\n+\n+    if (!hostPidNamespaceEnabled) {\n+      String message \u003d \"Host pid namespace being requested but this is not \"\n+          + \"enabled on this cluster\";\n+      LOG.warn(message);\n+      throw new ContainerExecutionException(message);\n+    }\n+\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowHostPidNamespace(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String pidNamespace \u003d environment.get(ENV_DOCKER_CONTAINER_PID_NAMESPACE);\n\n    if (pidNamespace \u003d\u003d null) {\n      return false;\n    }\n\n    if (!pidNamespace.equalsIgnoreCase(\"host\")) {\n      LOG.warn(\"NOT requesting PID namespace. Value of \" +\n          ENV_DOCKER_CONTAINER_PID_NAMESPACE + \"is invalid: \" + pidNamespace);\n      return false;\n    }\n\n    boolean hostPidNamespaceEnabled \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_HOST_PID_NAMESPACE,\n        YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_HOST_PID_NAMESPACE);\n\n    if (!hostPidNamespaceEnabled) {\n      String message \u003d \"Host pid namespace being requested but this is not \"\n          + \"enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}