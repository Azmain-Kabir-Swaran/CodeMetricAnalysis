{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulingPolicy.java",
  "functionName": "getInstance",
  "functionId": "getInstance___clazz-Class__? extends SchedulingPolicy__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
  "functionStartLine": 67,
  "functionEndLine": 75,
  "numCommitsSeen": 20,
  "timeTaken": 2496,
  "changeHistory": [
    "241d3b3a50c6af92f023d8b2c24598f4813f4674",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3"
  ],
  "changeHistoryShort": {
    "241d3b3a50c6af92f023d8b2c24598f4813f4674": "Ybodychange",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "241d3b3a50c6af92f023d8b2c24598f4813f4674": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2938. Fixed new findbugs warnings in hadoop-yarn-resourcemanager and hadoop-yarn-applicationhistoryservice. Contributed by Varun Saxena.\n",
      "commitDate": "29/12/14 9:59 AM",
      "commitName": "241d3b3a50c6af92f023d8b2c24598f4813f4674",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "22/09/14 11:49 PM",
      "commitNameOld": "568d3dc2bbe43b7d2833d5da2b0e6d75eb86e5dd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 97.47,
      "commitsBetweenForRepo": 802,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n-    SchedulingPolicy policy \u003d instances.get(clazz);\n-    if (policy \u003d\u003d null) {\n-      policy \u003d ReflectionUtils.newInstance(clazz, null);\n-      instances.put(clazz, policy);\n+    SchedulingPolicy policy \u003d ReflectionUtils.newInstance(clazz, null);\n+    SchedulingPolicy policyRet \u003d instances.putIfAbsent(clazz, policy);\n+    if(policyRet !\u003d null) {\n+      return policyRet;\n     }\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n    SchedulingPolicy policy \u003d ReflectionUtils.newInstance(clazz, null);\n    SchedulingPolicy policyRet \u003d instances.putIfAbsent(clazz, policy);\n    if(policyRet !\u003d null) {\n      return policyRet;\n    }\n    return policy;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
      "extendedDetails": {}
    },
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/13 11:11 AM",
      "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/04/13 11:11 AM",
          "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "18/04/13 10:49 AM",
          "commitNameOld": "d219c904d32641c70f80f5d33c99cc81c79cf055",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static SchedulingMode getInstance(Class\u003c? extends SchedulingMode\u003e clazz) {\n-    SchedulingMode mode \u003d instances.get(clazz);\n-    if (mode \u003d\u003d null) {\n-      mode \u003d ReflectionUtils.newInstance(clazz, null);\n-      instances.put(clazz, mode);\n+  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n+    SchedulingPolicy policy \u003d instances.get(clazz);\n+    if (policy \u003d\u003d null) {\n+      policy \u003d ReflectionUtils.newInstance(clazz, null);\n+      instances.put(clazz, policy);\n     }\n-    return mode;\n+    return policy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n    SchedulingPolicy policy \u003d instances.get(clazz);\n    if (policy \u003d\u003d null) {\n      policy \u003d ReflectionUtils.newInstance(clazz, null);\n      instances.put(clazz, policy);\n    }\n    return policy;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingMode.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
            "oldMethodName": "getInstance",
            "newMethodName": "getInstance"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/04/13 11:11 AM",
          "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "18/04/13 10:49 AM",
          "commitNameOld": "d219c904d32641c70f80f5d33c99cc81c79cf055",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static SchedulingMode getInstance(Class\u003c? extends SchedulingMode\u003e clazz) {\n-    SchedulingMode mode \u003d instances.get(clazz);\n-    if (mode \u003d\u003d null) {\n-      mode \u003d ReflectionUtils.newInstance(clazz, null);\n-      instances.put(clazz, mode);\n+  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n+    SchedulingPolicy policy \u003d instances.get(clazz);\n+    if (policy \u003d\u003d null) {\n+      policy \u003d ReflectionUtils.newInstance(clazz, null);\n+      instances.put(clazz, policy);\n     }\n-    return mode;\n+    return policy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n    SchedulingPolicy policy \u003d instances.get(clazz);\n    if (policy \u003d\u003d null) {\n      policy \u003d ReflectionUtils.newInstance(clazz, null);\n      instances.put(clazz, policy);\n    }\n    return policy;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
          "extendedDetails": {
            "oldValue": "SchedulingMode",
            "newValue": "SchedulingPolicy"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/04/13 11:11 AM",
          "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "18/04/13 10:49 AM",
          "commitNameOld": "d219c904d32641c70f80f5d33c99cc81c79cf055",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static SchedulingMode getInstance(Class\u003c? extends SchedulingMode\u003e clazz) {\n-    SchedulingMode mode \u003d instances.get(clazz);\n-    if (mode \u003d\u003d null) {\n-      mode \u003d ReflectionUtils.newInstance(clazz, null);\n-      instances.put(clazz, mode);\n+  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n+    SchedulingPolicy policy \u003d instances.get(clazz);\n+    if (policy \u003d\u003d null) {\n+      policy \u003d ReflectionUtils.newInstance(clazz, null);\n+      instances.put(clazz, policy);\n     }\n-    return mode;\n+    return policy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n    SchedulingPolicy policy \u003d instances.get(clazz);\n    if (policy \u003d\u003d null) {\n      policy \u003d ReflectionUtils.newInstance(clazz, null);\n      instances.put(clazz, policy);\n    }\n    return policy;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/04/13 11:11 AM",
          "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "18/04/13 10:49 AM",
          "commitNameOld": "d219c904d32641c70f80f5d33c99cc81c79cf055",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static SchedulingMode getInstance(Class\u003c? extends SchedulingMode\u003e clazz) {\n-    SchedulingMode mode \u003d instances.get(clazz);\n-    if (mode \u003d\u003d null) {\n-      mode \u003d ReflectionUtils.newInstance(clazz, null);\n-      instances.put(clazz, mode);\n+  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n+    SchedulingPolicy policy \u003d instances.get(clazz);\n+    if (policy \u003d\u003d null) {\n+      policy \u003d ReflectionUtils.newInstance(clazz, null);\n+      instances.put(clazz, policy);\n     }\n-    return mode;\n+    return policy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static SchedulingPolicy getInstance(Class\u003c? extends SchedulingPolicy\u003e clazz) {\n    SchedulingPolicy policy \u003d instances.get(clazz);\n    if (policy \u003d\u003d null) {\n      policy \u003d ReflectionUtils.newInstance(clazz, null);\n      instances.put(clazz, policy);\n    }\n    return policy;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingPolicy.java",
          "extendedDetails": {
            "oldValue": "[clazz-Class\u003c? extends SchedulingMode\u003e]",
            "newValue": "[clazz-Class\u003c? extends SchedulingPolicy\u003e]"
          }
        }
      ]
    },
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-469. Make scheduling mode in FS pluggable. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1460961 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/13 8:25 PM",
      "commitName": "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,8 @@\n+  public static SchedulingMode getInstance(Class\u003c? extends SchedulingMode\u003e clazz) {\n+    SchedulingMode mode \u003d instances.get(clazz);\n+    if (mode \u003d\u003d null) {\n+      mode \u003d ReflectionUtils.newInstance(clazz, null);\n+      instances.put(clazz, mode);\n+    }\n+    return mode;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static SchedulingMode getInstance(Class\u003c? extends SchedulingMode\u003e clazz) {\n    SchedulingMode mode \u003d instances.get(clazz);\n    if (mode \u003d\u003d null) {\n      mode \u003d ReflectionUtils.newInstance(clazz, null);\n      instances.put(clazz, mode);\n    }\n    return mode;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingMode.java"
    }
  }
}