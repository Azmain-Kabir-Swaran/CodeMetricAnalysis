{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ViewFs.java",
  "functionName": "listStatusIterator",
  "functionId": "listStatusIterator___f-Path(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
  "functionStartLine": 399,
  "functionEndLine": 416,
  "numCommitsSeen": 36,
  "timeTaken": 1967,
  "changeHistory": [
    "e1a99802fc5c2f2ad3ceb000378db1c0133069b3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "f1c74df922058e88791ed6971bbb96b53f6770f1"
  ],
  "changeHistoryShort": {
    "e1a99802fc5c2f2ad3ceb000378db1c0133069b3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "f1c74df922058e88791ed6971bbb96b53f6770f1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1a99802fc5c2f2ad3ceb000378db1c0133069b3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14169. Implement listStatusIterator, listLocatedStatus for ViewFs. Contributed by Erik Krogen.\n",
      "commitDate": "17/03/17 5:12 PM",
      "commitName": "e1a99802fc5c2f2ad3ceb000378db1c0133069b3",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "25/11/16 6:24 AM",
      "commitNameOld": "ee3d437a33c2106ea416078e722ff6184106a0bc",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 112.41,
      "commitsBetweenForRepo": 592,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,18 @@\n   public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n     throws AccessControlException, FileNotFoundException,\n     UnresolvedLinkException, IOException {\n     final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n       fsState.resolve(getUriPath(f), true);\n     final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n       res.targetFileSystem.listStatusIterator(res.remainingPath);\n     if (res.isInternalDir()) {\n       return fsIter;\n     }\n-    \n-    return new RemoteIterator\u003cFileStatus\u003e() {\n-      final RemoteIterator\u003cFileStatus\u003e myIter;\n-      final ChRootedFs targetFs;\n-      { // Init\n-          myIter \u003d fsIter;\n-          targetFs \u003d (ChRootedFs) res.targetFileSystem;\n-      }\n-      \n+\n+    return new WrappingRemoteIterator\u003cFileStatus\u003e(res, fsIter, f) {\n       @Override\n-      public boolean hasNext() throws IOException {\n-        return myIter.hasNext();\n-      }\n-      \n-      @Override\n-      public FileStatus next() throws IOException {\n-        FileStatus status \u003d  myIter.next();\n-        String suffix \u003d targetFs.stripOutRoot(status.getPath());\n-        return new ViewFsFileStatus(status, makeQualified(\n-            suffix.length() \u003d\u003d 0 ? f : new Path(res.resolvedPath, suffix)));\n+      public FileStatus getViewFsFileStatus(FileStatus stat, Path newPath) {\n+        return new ViewFsFileStatus(stat, newPath);\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n    throws AccessControlException, FileNotFoundException,\n    UnresolvedLinkException, IOException {\n    final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n      fsState.resolve(getUriPath(f), true);\n    final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n      res.targetFileSystem.listStatusIterator(res.remainingPath);\n    if (res.isInternalDir()) {\n      return fsIter;\n    }\n\n    return new WrappingRemoteIterator\u003cFileStatus\u003e(res, fsIter, f) {\n      @Override\n      public FileStatus getViewFsFileStatus(FileStatus stat, Path newPath) {\n        return new ViewFsFileStatus(stat, newPath);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n    throws AccessControlException, FileNotFoundException,\n    UnresolvedLinkException, IOException {\n    final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n      fsState.resolve(getUriPath(f), true);\n    final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n      res.targetFileSystem.listStatusIterator(res.remainingPath);\n    if (res.isInternalDir()) {\n      return fsIter;\n    }\n    \n    return new RemoteIterator\u003cFileStatus\u003e() {\n      final RemoteIterator\u003cFileStatus\u003e myIter;\n      final ChRootedFs targetFs;\n      { // Init\n          myIter \u003d fsIter;\n          targetFs \u003d (ChRootedFs) res.targetFileSystem;\n      }\n      \n      @Override\n      public boolean hasNext() throws IOException {\n        return myIter.hasNext();\n      }\n      \n      @Override\n      public FileStatus next() throws IOException {\n        FileStatus status \u003d  myIter.next();\n        String suffix \u003d targetFs.stripOutRoot(status.getPath());\n        return new ViewFsFileStatus(status, makeQualified(\n            suffix.length() \u003d\u003d 0 ? f : new Path(res.resolvedPath, suffix)));\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n    throws AccessControlException, FileNotFoundException,\n    UnresolvedLinkException, IOException {\n    final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n      fsState.resolve(getUriPath(f), true);\n    final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n      res.targetFileSystem.listStatusIterator(res.remainingPath);\n    if (res.isInternalDir()) {\n      return fsIter;\n    }\n    \n    return new RemoteIterator\u003cFileStatus\u003e() {\n      final RemoteIterator\u003cFileStatus\u003e myIter;\n      final ChRootedFs targetFs;\n      { // Init\n          myIter \u003d fsIter;\n          targetFs \u003d (ChRootedFs) res.targetFileSystem;\n      }\n      \n      @Override\n      public boolean hasNext() throws IOException {\n        return myIter.hasNext();\n      }\n      \n      @Override\n      public FileStatus next() throws IOException {\n        FileStatus status \u003d  myIter.next();\n        String suffix \u003d targetFs.stripOutRoot(status.getPath());\n        return new ViewFsFileStatus(status, makeQualified(\n            suffix.length() \u003d\u003d 0 ? f : new Path(res.resolvedPath, suffix)));\n      }\n    };\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFs.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n    throws AccessControlException, FileNotFoundException,\n    UnresolvedLinkException, IOException {\n    final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n      fsState.resolve(getUriPath(f), true);\n    final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n      res.targetFileSystem.listStatusIterator(res.remainingPath);\n    if (res.isInternalDir()) {\n      return fsIter;\n    }\n    \n    return new RemoteIterator\u003cFileStatus\u003e() {\n      final RemoteIterator\u003cFileStatus\u003e myIter;\n      final ChRootedFs targetFs;\n      { // Init\n          myIter \u003d fsIter;\n          targetFs \u003d (ChRootedFs) res.targetFileSystem;\n      }\n      \n      @Override\n      public boolean hasNext() throws IOException {\n        return myIter.hasNext();\n      }\n      \n      @Override\n      public FileStatus next() throws IOException {\n        FileStatus status \u003d  myIter.next();\n        String suffix \u003d targetFs.stripOutRoot(status.getPath());\n        return new ViewFsFileStatus(status, makeQualified(\n            suffix.length() \u003d\u003d 0 ? f : new Path(res.resolvedPath, suffix)));\n      }\n    };\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/viewfs/ViewFs.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/viewfs/ViewFs.java"
      }
    },
    "f1c74df922058e88791ed6971bbb96b53f6770f1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7257 Client side mount tables (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1100026 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/11 7:11 PM",
      "commitName": "f1c74df922058e88791ed6971bbb96b53f6770f1",
      "commitAuthor": "Sanjay Radia",
      "diff": "@@ -0,0 +1,33 @@\n+  public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n+    throws AccessControlException, FileNotFoundException,\n+    UnresolvedLinkException, IOException {\n+    final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n+      fsState.resolve(getUriPath(f), true);\n+    final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n+      res.targetFileSystem.listStatusIterator(res.remainingPath);\n+    if (res.isInternalDir()) {\n+      return fsIter;\n+    }\n+    \n+    return new RemoteIterator\u003cFileStatus\u003e() {\n+      final RemoteIterator\u003cFileStatus\u003e myIter;\n+      final ChRootedFs targetFs;\n+      { // Init\n+          myIter \u003d fsIter;\n+          targetFs \u003d (ChRootedFs) res.targetFileSystem;\n+      }\n+      \n+      @Override\n+      public boolean hasNext() throws IOException {\n+        return myIter.hasNext();\n+      }\n+      \n+      @Override\n+      public FileStatus next() throws IOException {\n+        FileStatus status \u003d  myIter.next();\n+        String suffix \u003d targetFs.stripOutRoot(status.getPath());\n+        return new ViewFsFileStatus(status, makeQualified(\n+            suffix.length() \u003d\u003d 0 ? f : new Path(res.resolvedPath, suffix)));\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteIterator\u003cFileStatus\u003e listStatusIterator(final Path f)\n    throws AccessControlException, FileNotFoundException,\n    UnresolvedLinkException, IOException {\n    final InodeTree.ResolveResult\u003cAbstractFileSystem\u003e res \u003d\n      fsState.resolve(getUriPath(f), true);\n    final RemoteIterator\u003cFileStatus\u003e fsIter \u003d\n      res.targetFileSystem.listStatusIterator(res.remainingPath);\n    if (res.isInternalDir()) {\n      return fsIter;\n    }\n    \n    return new RemoteIterator\u003cFileStatus\u003e() {\n      final RemoteIterator\u003cFileStatus\u003e myIter;\n      final ChRootedFs targetFs;\n      { // Init\n          myIter \u003d fsIter;\n          targetFs \u003d (ChRootedFs) res.targetFileSystem;\n      }\n      \n      @Override\n      public boolean hasNext() throws IOException {\n        return myIter.hasNext();\n      }\n      \n      @Override\n      public FileStatus next() throws IOException {\n        FileStatus status \u003d  myIter.next();\n        String suffix \u003d targetFs.stripOutRoot(status.getPath());\n        return new ViewFsFileStatus(status, makeQualified(\n            suffix.length() \u003d\u003d 0 ? f : new Path(res.resolvedPath, suffix)));\n      }\n    };\n  }",
      "path": "src/java/org/apache/hadoop/fs/viewfs/ViewFs.java"
    }
  }
}