{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "handleConnectionTimeout",
  "functionId": "handleConnectionTimeout___curRetries-int__maxRetries-int__ioe-IOException",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
  "functionStartLine": 921,
  "functionEndLine": 932,
  "numCommitsSeen": 186,
  "timeTaken": 3769,
  "changeHistory": [
    "e9c83b20f61b52a9595885e59673a09367b92866",
    "5a0b74663951475f668c7c68b9902c2bb54dc861",
    "45fafc2b8fc1aab0a082600b0d50ad693491ea70",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f",
    "cd85fc46dc4d027a2102e874051d943fab0512ed",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "e9c83b20f61b52a9595885e59673a09367b92866": "Ybodychange",
    "5a0b74663951475f668c7c68b9902c2bb54dc861": "Yrename",
    "45fafc2b8fc1aab0a082600b0d50ad693491ea70": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f": "Ybodychange",
    "cd85fc46dc4d027a2102e874051d943fab0512ed": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e9c83b20f61b52a9595885e59673a09367b92866": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9503. Remove sleep between IPC client connect timeouts.  Contributed by Varun Sharma\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1475959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/13 2:07 PM",
      "commitName": "e9c83b20f61b52a9595885e59673a09367b92866",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "26/03/13 4:29 PM",
      "commitNameOld": "5319818487d5c139de06155834deecb18c10b7a1",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 29.9,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,12 @@\n     private void handleConnectionTimeout(\n         int curRetries, int maxRetries, IOException ioe) throws IOException {\n \n       closeConnection();\n \n       // throw the exception if the maximum number of retries is reached\n       if (curRetries \u003e\u003d maxRetries) {\n         throw ioe;\n       }\n-\n-      // otherwise back off and retry\n-      try {\n-        Thread.sleep(1000);\n-      } catch (InterruptedException ignored) {}\n-      \n       LOG.info(\"Retrying connect to server: \" + server + \". Already tried \"\n           + curRetries + \" time(s); maxRetries\u003d\" + maxRetries);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleConnectionTimeout(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n      LOG.info(\"Retrying connect to server: \" + server + \". Already tried \"\n          + curRetries + \" time(s); maxRetries\u003d\" + maxRetries);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "5a0b74663951475f668c7c68b9902c2bb54dc861": {
      "type": "Yrename",
      "commitMessage": "HDFS-4404. Create file failure when the machine of first attempted NameNode is down. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1442461 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/13 7:18 PM",
      "commitName": "5a0b74663951475f668c7c68b9902c2bb54dc861",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "15/01/13 3:54 PM",
      "commitNameOld": "06f086dd23a654a56c949b3e5437dc7f839ae91d",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 20.14,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-    private void handleConnectionFailure(\n+    private void handleConnectionTimeout(\n         int curRetries, int maxRetries, IOException ioe) throws IOException {\n \n       closeConnection();\n \n       // throw the exception if the maximum number of retries is reached\n       if (curRetries \u003e\u003d maxRetries) {\n         throw ioe;\n       }\n \n       // otherwise back off and retry\n       try {\n         Thread.sleep(1000);\n       } catch (InterruptedException ignored) {}\n       \n       LOG.info(\"Retrying connect to server: \" + server + \". Already tried \"\n           + curRetries + \" time(s); maxRetries\u003d\" + maxRetries);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleConnectionTimeout(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \". Already tried \"\n          + curRetries + \" time(s); maxRetries\u003d\" + maxRetries);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldValue": "handleConnectionFailure",
        "newValue": "handleConnectionTimeout"
      }
    },
    "45fafc2b8fc1aab0a082600b0d50ad693491ea70": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3504. Support configurable retry policy in DFSClient for RPC connections and RPC calls, and add MultipleLinearRandomRetry, a new retry policy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349124 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/12 10:27 PM",
      "commitName": "45fafc2b8fc1aab0a082600b0d50ad693491ea70",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "11/05/12 9:56 AM",
      "commitNameOld": "2116f28d9e95896b54f4dc60336dc3f6ac7d64f3",
      "commitAuthorOld": "Sanjay Radia",
      "daysBetweenCommits": 31.52,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private void handleConnectionFailure(\n         int curRetries, int maxRetries, IOException ioe) throws IOException {\n \n       closeConnection();\n \n       // throw the exception if the maximum number of retries is reached\n       if (curRetries \u003e\u003d maxRetries) {\n         throw ioe;\n       }\n \n       // otherwise back off and retry\n       try {\n         Thread.sleep(1000);\n       } catch (InterruptedException ignored) {}\n       \n-      LOG.info(\"Retrying connect to server: \" + server + \n-          \". Already tried \" + curRetries + \" time(s).\");\n+      LOG.info(\"Retrying connect to server: \" + server + \". Already tried \"\n+          + curRetries + \" time(s); maxRetries\u003d\" + maxRetries);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \". Already tried \"\n          + curRetries + \" time(s); maxRetries\u003d\" + maxRetries);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \n          \". Already tried \" + curRetries + \" time(s).\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \n          \". Already tried \" + curRetries + \" time(s).\");\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \n          \". Already tried \" + curRetries + \" time(s).\");\n    }",
      "path": "common/src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6706. Improves the sasl failure handling due to expired tickets, and other server detected failures. Contributed by Jitendra Pandey and Devaraj Das.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@981714 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/10 5:51 PM",
      "commitName": "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "29/07/10 10:29 AM",
      "commitNameOld": "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f",
      "commitAuthorOld": "Devaraj Das",
      "daysBetweenCommits": 4.31,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,18 @@\n     private void handleConnectionFailure(\n         int curRetries, int maxRetries, IOException ioe) throws IOException {\n-      // close the current connection\n-      if (socket !\u003d null) {\n-        try {\n-          socket.close();\n-        } catch (IOException e) {\n-          LOG.warn(\"Not able to close a socket\", e);\n-        }\n-      }\n-      // set socket to null so that the next call to setupIOstreams\n-      // can start the process of connect all over again.\n-      socket \u003d null;\n+\n+      closeConnection();\n \n       // throw the exception if the maximum number of retries is reached\n       if (curRetries \u003e\u003d maxRetries) {\n         throw ioe;\n       }\n \n       // otherwise back off and retry\n       try {\n         Thread.sleep(1000);\n       } catch (InterruptedException ignored) {}\n       \n       LOG.info(\"Retrying connect to server: \" + server + \n           \". Already tried \" + curRetries + \" time(s).\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n\n      closeConnection();\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \n          \". Already tried \" + curRetries + \" time(s).\");\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "cd85fc46dc4d027a2102e874051d943fab0512ed": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6724. IPC doesn\u0027t properly handle IOEs thrown by socket factory. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@939018 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/04/10 10:34 AM",
      "commitName": "cd85fc46dc4d027a2102e874051d943fab0512ed",
      "commitAuthor": "Thomas White",
      "commitDateOld": "22/02/10 2:28 PM",
      "commitNameOld": "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539",
      "commitAuthorOld": "Devaraj Das",
      "daysBetweenCommits": 64.8,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n     private void handleConnectionFailure(\n         int curRetries, int maxRetries, IOException ioe) throws IOException {\n       // close the current connection\n-      try {\n-        socket.close();\n-      } catch (IOException e) {\n-        LOG.warn(\"Not able to close a socket\", e);\n+      if (socket !\u003d null) {\n+        try {\n+          socket.close();\n+        } catch (IOException e) {\n+          LOG.warn(\"Not able to close a socket\", e);\n+        }\n       }\n       // set socket to null so that the next call to setupIOstreams\n       // can start the process of connect all over again.\n       socket \u003d null;\n \n       // throw the exception if the maximum number of retries is reached\n       if (curRetries \u003e\u003d maxRetries) {\n         throw ioe;\n       }\n \n       // otherwise back off and retry\n       try {\n         Thread.sleep(1000);\n       } catch (InterruptedException ignored) {}\n       \n       LOG.info(\"Retrying connect to server: \" + server + \n           \". Already tried \" + curRetries + \" time(s).\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n      // close the current connection\n      if (socket !\u003d null) {\n        try {\n          socket.close();\n        } catch (IOException e) {\n          LOG.warn(\"Not able to close a socket\", e);\n        }\n      }\n      // set socket to null so that the next call to setupIOstreams\n      // can start the process of connect all over again.\n      socket \u003d null;\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \n          \". Already tried \" + curRetries + \" time(s).\");\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,25 @@\n+    private void handleConnectionFailure(\n+        int curRetries, int maxRetries, IOException ioe) throws IOException {\n+      // close the current connection\n+      try {\n+        socket.close();\n+      } catch (IOException e) {\n+        LOG.warn(\"Not able to close a socket\", e);\n+      }\n+      // set socket to null so that the next call to setupIOstreams\n+      // can start the process of connect all over again.\n+      socket \u003d null;\n+\n+      // throw the exception if the maximum number of retries is reached\n+      if (curRetries \u003e\u003d maxRetries) {\n+        throw ioe;\n+      }\n+\n+      // otherwise back off and retry\n+      try {\n+        Thread.sleep(1000);\n+      } catch (InterruptedException ignored) {}\n+      \n+      LOG.info(\"Retrying connect to server: \" + server + \n+          \". Already tried \" + curRetries + \" time(s).\");\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleConnectionFailure(\n        int curRetries, int maxRetries, IOException ioe) throws IOException {\n      // close the current connection\n      try {\n        socket.close();\n      } catch (IOException e) {\n        LOG.warn(\"Not able to close a socket\", e);\n      }\n      // set socket to null so that the next call to setupIOstreams\n      // can start the process of connect all over again.\n      socket \u003d null;\n\n      // throw the exception if the maximum number of retries is reached\n      if (curRetries \u003e\u003d maxRetries) {\n        throw ioe;\n      }\n\n      // otherwise back off and retry\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException ignored) {}\n      \n      LOG.info(\"Retrying connect to server: \" + server + \n          \". Already tried \" + curRetries + \" time(s).\");\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java"
    }
  }
}