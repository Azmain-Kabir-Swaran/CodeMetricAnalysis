{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "canAllocateMore",
  "functionId": "canAllocateMore___assignment-CSAssignment__offswitchCount-int__assignedContainers-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 1454,
  "functionEndLine": 1477,
  "numCommitsSeen": 392,
  "timeTaken": 5979,
  "changeHistory": [
    "adb84f34db7e1cdcd72aa8e3deb464c48da9e353",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c"
  ],
  "changeHistoryShort": {
    "adb84f34db7e1cdcd72aa8e3deb464c48da9e353": "Ymultichange(Yparameterchange,Ybodychange)",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "adb84f34db7e1cdcd72aa8e3deb464c48da9e353": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4161. Capacity Scheduler : Assign single or multiple containers per heart beat driven by configuration. (Wei Yan via wangda)\n\nChange-Id: Ic441ae4e0bf72e7232411eb54243ec143d5fd0d3\n",
      "commitDate": "07/08/17 11:32 AM",
      "commitName": "adb84f34db7e1cdcd72aa8e3deb464c48da9e353",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4161. Capacity Scheduler : Assign single or multiple containers per heart beat driven by configuration. (Wei Yan via wangda)\n\nChange-Id: Ic441ae4e0bf72e7232411eb54243ec143d5fd0d3\n",
          "commitDate": "07/08/17 11:32 AM",
          "commitName": "adb84f34db7e1cdcd72aa8e3deb464c48da9e353",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/07/17 3:40 PM",
          "commitNameOld": "9845bea59c0009b8ffff7050403e5ba270054164",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 25.83,
          "commitsBetweenForRepo": 195,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,24 @@\n-  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount) {\n-    if (null !\u003d assignment \u0026\u0026 Resources.greaterThan(getResourceCalculator(),\n-        getClusterResource(), assignment.getResource(), Resources.none())\n-        \u0026\u0026 offswitchCount \u003c offswitchPerHeartbeatLimit) {\n-      // And it should not be a reserved container\n-      if (assignment.getAssignmentInformation().getNumReservations() \u003d\u003d 0) {\n-        return true;\n-      }\n+  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount,\n+      int assignedContainers) {\n+    // Current assignment shouldn\u0027t be empty\n+    if (assignment \u003d\u003d null\n+            || Resources.equals(assignment.getResource(), Resources.none())) {\n+      return false;\n     }\n \n-    return false;\n+    // offswitch assignment should be under threshold\n+    if (offswitchCount \u003e\u003d offswitchPerHeartbeatLimit) {\n+      return false;\n+    }\n+\n+    // And it should not be a reserved container\n+    if (assignment.getAssignmentInformation().getNumReservations() \u003e 0) {\n+      return false;\n+    }\n+\n+    // assignMultipleEnabled should be ON,\n+    // and assignedContainers should be under threshold\n+    return assignMultipleEnabled\n+        \u0026\u0026 (maxAssignPerHeartbeat \u003d\u003d -1\n+            || assignedContainers \u003c maxAssignPerHeartbeat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount,\n      int assignedContainers) {\n    // Current assignment shouldn\u0027t be empty\n    if (assignment \u003d\u003d null\n            || Resources.equals(assignment.getResource(), Resources.none())) {\n      return false;\n    }\n\n    // offswitch assignment should be under threshold\n    if (offswitchCount \u003e\u003d offswitchPerHeartbeatLimit) {\n      return false;\n    }\n\n    // And it should not be a reserved container\n    if (assignment.getAssignmentInformation().getNumReservations() \u003e 0) {\n      return false;\n    }\n\n    // assignMultipleEnabled should be ON,\n    // and assignedContainers should be under threshold\n    return assignMultipleEnabled\n        \u0026\u0026 (maxAssignPerHeartbeat \u003d\u003d -1\n            || assignedContainers \u003c maxAssignPerHeartbeat);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "[assignment-CSAssignment, offswitchCount-int]",
            "newValue": "[assignment-CSAssignment, offswitchCount-int, assignedContainers-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4161. Capacity Scheduler : Assign single or multiple containers per heart beat driven by configuration. (Wei Yan via wangda)\n\nChange-Id: Ic441ae4e0bf72e7232411eb54243ec143d5fd0d3\n",
          "commitDate": "07/08/17 11:32 AM",
          "commitName": "adb84f34db7e1cdcd72aa8e3deb464c48da9e353",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/07/17 3:40 PM",
          "commitNameOld": "9845bea59c0009b8ffff7050403e5ba270054164",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 25.83,
          "commitsBetweenForRepo": 195,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,24 @@\n-  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount) {\n-    if (null !\u003d assignment \u0026\u0026 Resources.greaterThan(getResourceCalculator(),\n-        getClusterResource(), assignment.getResource(), Resources.none())\n-        \u0026\u0026 offswitchCount \u003c offswitchPerHeartbeatLimit) {\n-      // And it should not be a reserved container\n-      if (assignment.getAssignmentInformation().getNumReservations() \u003d\u003d 0) {\n-        return true;\n-      }\n+  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount,\n+      int assignedContainers) {\n+    // Current assignment shouldn\u0027t be empty\n+    if (assignment \u003d\u003d null\n+            || Resources.equals(assignment.getResource(), Resources.none())) {\n+      return false;\n     }\n \n-    return false;\n+    // offswitch assignment should be under threshold\n+    if (offswitchCount \u003e\u003d offswitchPerHeartbeatLimit) {\n+      return false;\n+    }\n+\n+    // And it should not be a reserved container\n+    if (assignment.getAssignmentInformation().getNumReservations() \u003e 0) {\n+      return false;\n+    }\n+\n+    // assignMultipleEnabled should be ON,\n+    // and assignedContainers should be under threshold\n+    return assignMultipleEnabled\n+        \u0026\u0026 (maxAssignPerHeartbeat \u003d\u003d -1\n+            || assignedContainers \u003c maxAssignPerHeartbeat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount,\n      int assignedContainers) {\n    // Current assignment shouldn\u0027t be empty\n    if (assignment \u003d\u003d null\n            || Resources.equals(assignment.getResource(), Resources.none())) {\n      return false;\n    }\n\n    // offswitch assignment should be under threshold\n    if (offswitchCount \u003e\u003d offswitchPerHeartbeatLimit) {\n      return false;\n    }\n\n    // And it should not be a reserved container\n    if (assignment.getAssignmentInformation().getNumReservations() \u003e 0) {\n      return false;\n    }\n\n    // assignMultipleEnabled should be ON,\n    // and assignedContainers should be under threshold\n    return assignMultipleEnabled\n        \u0026\u0026 (maxAssignPerHeartbeat \u003d\u003d -1\n            || assignedContainers \u003c maxAssignPerHeartbeat);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,12 @@\n+  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount) {\n+    if (null !\u003d assignment \u0026\u0026 Resources.greaterThan(getResourceCalculator(),\n+        getClusterResource(), assignment.getResource(), Resources.none())\n+        \u0026\u0026 offswitchCount \u003c offswitchPerHeartbeatLimit) {\n+      // And it should not be a reserved container\n+      if (assignment.getAssignmentInformation().getNumReservations() \u003d\u003d 0) {\n+        return true;\n+      }\n+    }\n+\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount) {\n    if (null !\u003d assignment \u0026\u0026 Resources.greaterThan(getResourceCalculator(),\n        getClusterResource(), assignment.getResource(), Resources.none())\n        \u0026\u0026 offswitchCount \u003c offswitchPerHeartbeatLimit) {\n      // And it should not be a reserved container\n      if (assignment.getAssignmentInformation().getNumReservations() \u003d\u003d 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}