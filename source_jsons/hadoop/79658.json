{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelper.java",
  "functionName": "convert",
  "functionId": "convert___stat-FileStatus",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/protocolPB/PBHelper.java",
  "functionStartLine": 108,
  "functionEndLine": 135,
  "numCommitsSeen": 4,
  "timeTaken": 2097,
  "changeHistory": [
    "107c177782a24a16c66113841f2fc5144f56207b",
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2"
  ],
  "changeHistoryShort": {
    "107c177782a24a16c66113841f2fc5144f56207b": "Ybodychange",
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "107c177782a24a16c66113841f2fc5144f56207b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12455. WebHDFS - Adding \"snapshot enabled\" status to ListStatus query result. Contributed by Ajay Kumar.\n",
      "commitDate": "03/10/17 1:02 PM",
      "commitName": "107c177782a24a16c66113841f2fc5144f56207b",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "02/08/17 12:12 PM",
      "commitNameOld": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 62.03,
      "commitsBetweenForRepo": 524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public static FileStatusProto convert(FileStatus stat) throws IOException {\n     FileStatusProto.Builder bld \u003d FileStatusProto.newBuilder();\n     bld.setPath(stat.getPath().toString());\n     if (stat.isDirectory()) {\n       bld.setFileType(FileStatusProto.FileType.FT_DIR);\n     } else if (stat.isSymlink()) {\n       bld.setFileType(FileStatusProto.FileType.FT_SYMLINK)\n          .setSymlink(stat.getSymlink().toString());\n     } else {\n       bld.setFileType(FileStatusProto.FileType.FT_FILE)\n          .setLength(stat.getLen())\n          .setBlockReplication(stat.getReplication())\n          .setBlockSize(stat.getBlockSize());\n     }\n     bld.setAccessTime(stat.getAccessTime())\n        .setModificationTime(stat.getModificationTime())\n        .setOwner(stat.getOwner())\n        .setGroup(stat.getGroup())\n        .setPermission(convert(stat.getPermission()));\n     int flags \u003d 0;\n     flags |\u003d stat.hasAcl()         ? FileStatusProto.Flags.HAS_ACL_VALUE   : 0;\n     flags |\u003d stat.isEncrypted()    ? FileStatusProto.Flags.HAS_CRYPT_VALUE : 0;\n     flags |\u003d stat.isErasureCoded() ? FileStatusProto.Flags.HAS_EC_VALUE    : 0;\n+    flags |\u003d stat.isSnapshotEnabled() ? FileStatusProto.Flags\n+        .SNAPSHOT_ENABLED_VALUE : 0;\n     bld.setFlags(flags);\n     return bld.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileStatusProto convert(FileStatus stat) throws IOException {\n    FileStatusProto.Builder bld \u003d FileStatusProto.newBuilder();\n    bld.setPath(stat.getPath().toString());\n    if (stat.isDirectory()) {\n      bld.setFileType(FileStatusProto.FileType.FT_DIR);\n    } else if (stat.isSymlink()) {\n      bld.setFileType(FileStatusProto.FileType.FT_SYMLINK)\n         .setSymlink(stat.getSymlink().toString());\n    } else {\n      bld.setFileType(FileStatusProto.FileType.FT_FILE)\n         .setLength(stat.getLen())\n         .setBlockReplication(stat.getReplication())\n         .setBlockSize(stat.getBlockSize());\n    }\n    bld.setAccessTime(stat.getAccessTime())\n       .setModificationTime(stat.getModificationTime())\n       .setOwner(stat.getOwner())\n       .setGroup(stat.getGroup())\n       .setPermission(convert(stat.getPermission()));\n    int flags \u003d 0;\n    flags |\u003d stat.hasAcl()         ? FileStatusProto.Flags.HAS_ACL_VALUE   : 0;\n    flags |\u003d stat.isEncrypted()    ? FileStatusProto.Flags.HAS_CRYPT_VALUE : 0;\n    flags |\u003d stat.isErasureCoded() ? FileStatusProto.Flags.HAS_EC_VALUE    : 0;\n    flags |\u003d stat.isSnapshotEnabled() ? FileStatusProto.Flags\n        .SNAPSHOT_ENABLED_VALUE : 0;\n    bld.setFlags(flags);\n    return bld.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6984. Serialize FileStatus via protobuf.\n",
      "commitDate": "02/08/17 12:12 PM",
      "commitName": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,26 @@\n+  public static FileStatusProto convert(FileStatus stat) throws IOException {\n+    FileStatusProto.Builder bld \u003d FileStatusProto.newBuilder();\n+    bld.setPath(stat.getPath().toString());\n+    if (stat.isDirectory()) {\n+      bld.setFileType(FileStatusProto.FileType.FT_DIR);\n+    } else if (stat.isSymlink()) {\n+      bld.setFileType(FileStatusProto.FileType.FT_SYMLINK)\n+         .setSymlink(stat.getSymlink().toString());\n+    } else {\n+      bld.setFileType(FileStatusProto.FileType.FT_FILE)\n+         .setLength(stat.getLen())\n+         .setBlockReplication(stat.getReplication())\n+         .setBlockSize(stat.getBlockSize());\n+    }\n+    bld.setAccessTime(stat.getAccessTime())\n+       .setModificationTime(stat.getModificationTime())\n+       .setOwner(stat.getOwner())\n+       .setGroup(stat.getGroup())\n+       .setPermission(convert(stat.getPermission()));\n+    int flags \u003d 0;\n+    flags |\u003d stat.hasAcl()         ? FileStatusProto.Flags.HAS_ACL_VALUE   : 0;\n+    flags |\u003d stat.isEncrypted()    ? FileStatusProto.Flags.HAS_CRYPT_VALUE : 0;\n+    flags |\u003d stat.isErasureCoded() ? FileStatusProto.Flags.HAS_EC_VALUE    : 0;\n+    bld.setFlags(flags);\n+    return bld.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileStatusProto convert(FileStatus stat) throws IOException {\n    FileStatusProto.Builder bld \u003d FileStatusProto.newBuilder();\n    bld.setPath(stat.getPath().toString());\n    if (stat.isDirectory()) {\n      bld.setFileType(FileStatusProto.FileType.FT_DIR);\n    } else if (stat.isSymlink()) {\n      bld.setFileType(FileStatusProto.FileType.FT_SYMLINK)\n         .setSymlink(stat.getSymlink().toString());\n    } else {\n      bld.setFileType(FileStatusProto.FileType.FT_FILE)\n         .setLength(stat.getLen())\n         .setBlockReplication(stat.getReplication())\n         .setBlockSize(stat.getBlockSize());\n    }\n    bld.setAccessTime(stat.getAccessTime())\n       .setModificationTime(stat.getModificationTime())\n       .setOwner(stat.getOwner())\n       .setGroup(stat.getGroup())\n       .setPermission(convert(stat.getPermission()));\n    int flags \u003d 0;\n    flags |\u003d stat.hasAcl()         ? FileStatusProto.Flags.HAS_ACL_VALUE   : 0;\n    flags |\u003d stat.isEncrypted()    ? FileStatusProto.Flags.HAS_CRYPT_VALUE : 0;\n    flags |\u003d stat.isErasureCoded() ? FileStatusProto.Flags.HAS_EC_VALUE    : 0;\n    bld.setFlags(flags);\n    return bld.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/protocolPB/PBHelper.java"
    }
  }
}