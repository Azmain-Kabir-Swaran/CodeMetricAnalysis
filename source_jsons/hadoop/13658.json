{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CorruptReplicasMap.java",
  "functionName": "removeFromCorruptReplicasMap",
  "functionId": "removeFromCorruptReplicasMap___blk-BlockInfo__datanode-DatanodeDescriptor__reason-Reason",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
  "functionStartLine": 127,
  "functionEndLine": 150,
  "numCommitsSeen": 70,
  "timeTaken": 8291,
  "changeHistory": [
    "d737bf99d44ce34cd01baad716d23df269267c95",
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
    "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75",
    "d62b63d297bff12d93de560dd50ddd48743b851d",
    "0ed8732feef9f4027e9fc95b6d4852444c1f3426",
    "ceea91c9cd8b2a18be13217894ccf1c17198de18",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d737bf99d44ce34cd01baad716d23df269267c95": "Ymultichange(Yparameterchange,Ybodychange)",
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e": "Ybodychange",
    "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75": "Yparameterchange",
    "d62b63d297bff12d93de560dd50ddd48743b851d": "Yparameterchange",
    "0ed8732feef9f4027e9fc95b6d4852444c1f3426": "Ybodychange",
    "ceea91c9cd8b2a18be13217894ccf1c17198de18": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Yfilerename",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Yfilerename",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d737bf99d44ce34cd01baad716d23df269267c95": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13350. Negative legacy block ID will confuse Erasure Coding to be considered as striped block. (Contributed by Lei (Eddy) Xu).\n",
      "commitDate": "05/04/18 9:59 AM",
      "commitName": "d737bf99d44ce34cd01baad716d23df269267c95",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13350. Negative legacy block ID will confuse Erasure Coding to be considered as striped block. (Contributed by Lei (Eddy) Xu).\n",
          "commitDate": "05/04/18 9:59 AM",
          "commitName": "d737bf99d44ce34cd01baad716d23df269267c95",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "07/09/17 4:57 PM",
          "commitNameOld": "4e50dc976a92a9560630c87cfc4e4513916e5735",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 209.71,
          "commitsBetweenForRepo": 1606,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n-      Reason reason) {\n+  boolean removeFromCorruptReplicasMap(\n+      BlockInfo blk, DatanodeDescriptor datanode, Reason reason) {\n     Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n     if (datanodes \u003d\u003d null) {\n       return false;\n     }\n \n     // if reasons can be compared but don\u0027t match, return false.\n     Reason storedReason \u003d datanodes.get(datanode);\n     if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n         reason !\u003d storedReason) {\n       return false;\n     }\n \n     if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n-        decrementBlockStat(blk);\n+        decrementBlockStat(blk.isStriped());\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean removeFromCorruptReplicasMap(\n      BlockInfo blk, DatanodeDescriptor datanode, Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes \u003d\u003d null) {\n      return false;\n    }\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n        decrementBlockStat(blk.isStriped());\n      }\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
          "extendedDetails": {
            "oldValue": "[blk-Block, datanode-DatanodeDescriptor, reason-Reason]",
            "newValue": "[blk-BlockInfo, datanode-DatanodeDescriptor, reason-Reason]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13350. Negative legacy block ID will confuse Erasure Coding to be considered as striped block. (Contributed by Lei (Eddy) Xu).\n",
          "commitDate": "05/04/18 9:59 AM",
          "commitName": "d737bf99d44ce34cd01baad716d23df269267c95",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "07/09/17 4:57 PM",
          "commitNameOld": "4e50dc976a92a9560630c87cfc4e4513916e5735",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 209.71,
          "commitsBetweenForRepo": 1606,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n-      Reason reason) {\n+  boolean removeFromCorruptReplicasMap(\n+      BlockInfo blk, DatanodeDescriptor datanode, Reason reason) {\n     Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n     if (datanodes \u003d\u003d null) {\n       return false;\n     }\n \n     // if reasons can be compared but don\u0027t match, return false.\n     Reason storedReason \u003d datanodes.get(datanode);\n     if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n         reason !\u003d storedReason) {\n       return false;\n     }\n \n     if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n-        decrementBlockStat(blk);\n+        decrementBlockStat(blk.isStriped());\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean removeFromCorruptReplicasMap(\n      BlockInfo blk, DatanodeDescriptor datanode, Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes \u003d\u003d null) {\n      return false;\n    }\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n        decrementBlockStat(blk.isStriped());\n      }\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
          "extendedDetails": {}
        }
      ]
    },
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10999. Introduce separate stats for Replicated and Erasure Coded Blocks apart from the current Aggregated stats. (Manoj Govindassamy via lei)\n",
      "commitDate": "14/06/17 10:44 AM",
      "commitName": "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "31/05/17 8:09 AM",
      "commitNameOld": "13de636b4079b077890ad10389ff350dcf8086a2",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 14.11,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n       Reason reason) {\n     Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n-    if (datanodes\u003d\u003dnull)\n+    if (datanodes \u003d\u003d null) {\n       return false;\n+    }\n \n     // if reasons can be compared but don\u0027t match, return false.\n     Reason storedReason \u003d datanodes.get(datanode);\n     if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n         reason !\u003d storedReason) {\n       return false;\n     }\n \n     if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n+        decrementBlockStat(blk);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n      Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes \u003d\u003d null) {\n      return false;\n    }\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n        decrementBlockStat(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {}
    },
    "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75": {
      "type": "Yparameterchange",
      "commitMessage": "Revert \"HDFS-8652. Track BlockInfo instead of Block in CorruptReplicasMap. Contributed by Jing Zhao.\"\n\nThis reverts commit d62b63d297bff12d93de560dd50ddd48743b851d.\n",
      "commitDate": "07/07/15 10:13 AM",
      "commitName": "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/07/15 3:54 PM",
      "commitNameOld": "d62b63d297bff12d93de560dd50ddd48743b851d",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  boolean removeFromCorruptReplicasMap(BlockInfo blk,\n-      DatanodeDescriptor datanode, Reason reason) {\n+  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n+      Reason reason) {\n     Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n     if (datanodes\u003d\u003dnull)\n       return false;\n \n     // if reasons can be compared but don\u0027t match, return false.\n     Reason storedReason \u003d datanodes.get(datanode);\n     if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n         reason !\u003d storedReason) {\n       return false;\n     }\n \n     if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n      Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldValue": "[blk-BlockInfo, datanode-DatanodeDescriptor, reason-Reason]",
        "newValue": "[blk-Block, datanode-DatanodeDescriptor, reason-Reason]"
      }
    },
    "d62b63d297bff12d93de560dd50ddd48743b851d": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-8652. Track BlockInfo instead of Block in CorruptReplicasMap. Contributed by Jing Zhao.\n",
      "commitDate": "06/07/15 3:54 PM",
      "commitName": "d62b63d297bff12d93de560dd50ddd48743b851d",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "03/02/15 3:01 PM",
      "commitNameOld": "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 153.0,
      "commitsBetweenForRepo": 1373,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n-      Reason reason) {\n+  boolean removeFromCorruptReplicasMap(BlockInfo blk,\n+      DatanodeDescriptor datanode, Reason reason) {\n     Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n     if (datanodes\u003d\u003dnull)\n       return false;\n \n     // if reasons can be compared but don\u0027t match, return false.\n     Reason storedReason \u003d datanodes.get(datanode);\n     if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n         reason !\u003d storedReason) {\n       return false;\n     }\n \n     if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean removeFromCorruptReplicasMap(BlockInfo blk,\n      DatanodeDescriptor datanode, Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldValue": "[blk-Block, datanode-DatanodeDescriptor, reason-Reason]",
        "newValue": "[blk-BlockInfo, datanode-DatanodeDescriptor, reason-Reason]"
      }
    },
    "0ed8732feef9f4027e9fc95b6d4852444c1f3426": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6812. Remove addBlock and replaceBlock from DatanodeDescriptor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616426 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 12:30 AM",
      "commitName": "0ed8732feef9f4027e9fc95b6d4852444c1f3426",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 135.33,
      "commitsBetweenForRepo": 852,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n       Reason reason) {\n     Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n-    boolean removed \u003d false;\n     if (datanodes\u003d\u003dnull)\n       return false;\n \n     // if reasons can be compared but don\u0027t match, return false.\n     Reason storedReason \u003d datanodes.get(datanode);\n     if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n         reason !\u003d storedReason) {\n       return false;\n     }\n \n     if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n      Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {}
    },
    "ceea91c9cd8b2a18be13217894ccf1c17198de18": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5438. Flaws in block report processing can cause data loss. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542054 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 12:11 PM",
      "commitName": "ceea91c9cd8b2a18be13217894ccf1c17198de18",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5438. Flaws in block report processing can cause data loss. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542054 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/11/13 12:11 PM",
          "commitName": "ceea91c9cd8b2a18be13217894ccf1c17198de18",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "09/11/12 10:07 AM",
          "commitNameOld": "db71de2e11cfa56a254ef4c92fea5ef4f8c19100",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 370.09,
          "commitsBetweenForRepo": 2152,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,23 @@\n-  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n-    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n+  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n+      Reason reason) {\n+    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n+    boolean removed \u003d false;\n     if (datanodes\u003d\u003dnull)\n       return false;\n-    if (datanodes.remove(datanode)) { // remove the replicas\n+\n+    // if reasons can be compared but don\u0027t match, return false.\n+    Reason storedReason \u003d datanodes.get(datanode);\n+    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n+        reason !\u003d storedReason) {\n+      return false;\n+    }\n+\n+    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n      Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    boolean removed \u003d false;\n    if (datanodes\u003d\u003dnull)\n      return false;\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
          "extendedDetails": {
            "oldValue": "[blk-Block, datanode-DatanodeDescriptor]",
            "newValue": "[blk-Block, datanode-DatanodeDescriptor, reason-Reason]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5438. Flaws in block report processing can cause data loss. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542054 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/11/13 12:11 PM",
          "commitName": "ceea91c9cd8b2a18be13217894ccf1c17198de18",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "09/11/12 10:07 AM",
          "commitNameOld": "db71de2e11cfa56a254ef4c92fea5ef4f8c19100",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 370.09,
          "commitsBetweenForRepo": 2152,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,23 @@\n-  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n-    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n+  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n+      Reason reason) {\n+    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n+    boolean removed \u003d false;\n     if (datanodes\u003d\u003dnull)\n       return false;\n-    if (datanodes.remove(datanode)) { // remove the replicas\n+\n+    // if reasons can be compared but don\u0027t match, return false.\n+    Reason storedReason \u003d datanodes.get(datanode);\n+    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n+        reason !\u003d storedReason) {\n+      return false;\n+    }\n+\n+    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n       if (datanodes.isEmpty()) {\n         // remove the block if there is no more corrupted replicas\n         corruptReplicasMap.remove(blk);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode,\n      Reason reason) {\n    Map \u003cDatanodeDescriptor, Reason\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    boolean removed \u003d false;\n    if (datanodes\u003d\u003dnull)\n      return false;\n\n    // if reasons can be compared but don\u0027t match, return false.\n    Reason storedReason \u003d datanodes.get(datanode);\n    if (reason !\u003d Reason.ANY \u0026\u0026 storedReason !\u003d null \u0026\u0026\n        reason !\u003d storedReason) {\n      return false;\n    }\n\n    if (datanodes.remove(datanode) !\u003d null) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n    if (datanodes.remove(datanode)) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n    if (datanodes.remove(datanode)) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 5:26 PM",
      "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n    if (datanodes.remove(datanode)) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/CorruptReplicasMap.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java"
      }
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Yfilerename",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 4:57 PM",
      "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n    if (datanodes.remove(datanode)) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/CorruptReplicasMap.java"
      }
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 9:21 AM",
      "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n    if (datanodes.remove(datanode)) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/CorruptReplicasMap.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/CorruptReplicasMap.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n+    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n+    if (datanodes\u003d\u003dnull)\n+      return false;\n+    if (datanodes.remove(datanode)) { // remove the replicas\n+      if (datanodes.isEmpty()) {\n+        // remove the block if there is no more corrupted replicas\n+        corruptReplicasMap.remove(blk);\n+      }\n+      return true;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean removeFromCorruptReplicasMap(Block blk, DatanodeDescriptor datanode) {\n    Collection\u003cDatanodeDescriptor\u003e datanodes \u003d corruptReplicasMap.get(blk);\n    if (datanodes\u003d\u003dnull)\n      return false;\n    if (datanodes.remove(datanode)) { // remove the replicas\n      if (datanodes.isEmpty()) {\n        // remove the block if there is no more corrupted replicas\n        corruptReplicasMap.remove(blk);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/CorruptReplicasMap.java"
    }
  }
}