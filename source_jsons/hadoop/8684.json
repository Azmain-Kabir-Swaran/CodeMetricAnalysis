{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLogLoader.java",
  "functionName": "getAndUpdateLastInodeId",
  "functionId": "getAndUpdateLastInodeId___inodeIdFromOp-long__logVersion-int__lastInodeId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
  "functionStartLine": 362,
  "functionEndLine": 381,
  "numCommitsSeen": 198,
  "timeTaken": 4340,
  "changeHistory": [
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "76e7264e8d6407f527bd877009aca11f7bb63bd7",
    "185e0c7b4c056b88f606362c71e4a22aae7076e0",
    "00067895a01c66d53715b50bbcb3605efd6425f2",
    "19201622be1db8e166d1cc0dd7e62af4702d2784"
  ],
  "changeHistoryShort": {
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "76e7264e8d6407f527bd877009aca11f7bb63bd7": "Ybodychange",
    "185e0c7b4c056b88f606362c71e4a22aae7076e0": "Ybodychange",
    "00067895a01c66d53715b50bbcb3605efd6425f2": "Ybodychange",
    "19201622be1db8e166d1cc0dd7e62af4702d2784": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/04/15 1:41 PM",
      "commitNameOld": "c55d609053fe24b3a50fbe17dc1b47717b453ed6",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n       long lastInodeId) throws IOException {\n     long inodeId \u003d inodeIdFromOp;\n \n-    if (inodeId \u003d\u003d HdfsConstantsClient.GRANDFATHER_INODE_ID) {\n+    if (inodeId \u003d\u003d HdfsConstants.GRANDFATHER_INODE_ID) {\n       if (NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n         throw new IOException(\"The layout version \" + logVersion\n             + \" supports inodeId but gave bogus inodeId\");\n       }\n       inodeId \u003d fsNamesys.dir.allocateNewInodeId();\n     } else {\n       // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n       // fsimage but editlog captures more recent inodeId allocations\n       if (inodeId \u003e lastInodeId) {\n         fsNamesys.dir.resetLastInodeId(inodeId);\n       }\n     }\n     return inodeId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n      long lastInodeId) throws IOException {\n    long inodeId \u003d inodeIdFromOp;\n\n    if (inodeId \u003d\u003d HdfsConstants.GRANDFATHER_INODE_ID) {\n      if (NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n        throw new IOException(\"The layout version \" + logVersion\n            + \" supports inodeId but gave bogus inodeId\");\n      }\n      inodeId \u003d fsNamesys.dir.allocateNewInodeId();\n    } else {\n      // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n      // fsimage but editlog captures more recent inodeId allocations\n      if (inodeId \u003e lastInodeId) {\n        fsNamesys.dir.resetLastInodeId(inodeId);\n      }\n    }\n    return inodeId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
      "extendedDetails": {}
    },
    "76e7264e8d6407f527bd877009aca11f7bb63bd7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8165. Move GRANDFATHER_GENERATION_STAMP and GRANDFATER_INODE_ID to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "16/04/15 10:49 PM",
      "commitName": "76e7264e8d6407f527bd877009aca11f7bb63bd7",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/03/15 4:02 PM",
      "commitNameOld": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 23.28,
      "commitsBetweenForRepo": 197,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n       long lastInodeId) throws IOException {\n     long inodeId \u003d inodeIdFromOp;\n \n-    if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n+    if (inodeId \u003d\u003d HdfsConstantsClient.GRANDFATHER_INODE_ID) {\n       if (NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n         throw new IOException(\"The layout version \" + logVersion\n             + \" supports inodeId but gave bogus inodeId\");\n       }\n       inodeId \u003d fsNamesys.dir.allocateNewInodeId();\n     } else {\n       // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n       // fsimage but editlog captures more recent inodeId allocations\n       if (inodeId \u003e lastInodeId) {\n         fsNamesys.dir.resetLastInodeId(inodeId);\n       }\n     }\n     return inodeId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n      long lastInodeId) throws IOException {\n    long inodeId \u003d inodeIdFromOp;\n\n    if (inodeId \u003d\u003d HdfsConstantsClient.GRANDFATHER_INODE_ID) {\n      if (NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n        throw new IOException(\"The layout version \" + logVersion\n            + \" supports inodeId but gave bogus inodeId\");\n      }\n      inodeId \u003d fsNamesys.dir.allocateNewInodeId();\n    } else {\n      // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n      // fsimage but editlog captures more recent inodeId allocations\n      if (inodeId \u003e lastInodeId) {\n        fsNamesys.dir.resetLastInodeId(inodeId);\n      }\n    }\n    return inodeId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
      "extendedDetails": {}
    },
    "185e0c7b4c056b88f606362c71e4a22aae7076e0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7462. Consolidate implementation of mkdirs() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "02/12/14 2:53 PM",
      "commitName": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "01/12/14 9:48 PM",
      "commitNameOld": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n       long lastInodeId) throws IOException {\n     long inodeId \u003d inodeIdFromOp;\n \n     if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n       if (NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n         throw new IOException(\"The layout version \" + logVersion\n             + \" supports inodeId but gave bogus inodeId\");\n       }\n-      inodeId \u003d fsNamesys.allocateNewInodeId();\n+      inodeId \u003d fsNamesys.dir.allocateNewInodeId();\n     } else {\n       // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n       // fsimage but editlog captures more recent inodeId allocations\n       if (inodeId \u003e lastInodeId) {\n-        fsNamesys.resetLastInodeId(inodeId);\n+        fsNamesys.dir.resetLastInodeId(inodeId);\n       }\n     }\n     return inodeId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n      long lastInodeId) throws IOException {\n    long inodeId \u003d inodeIdFromOp;\n\n    if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n      if (NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n        throw new IOException(\"The layout version \" + logVersion\n            + \" supports inodeId but gave bogus inodeId\");\n      }\n      inodeId \u003d fsNamesys.dir.allocateNewInodeId();\n    } else {\n      // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n      // fsimage but editlog captures more recent inodeId allocations\n      if (inodeId \u003e lastInodeId) {\n        fsNamesys.dir.resetLastInodeId(inodeId);\n      }\n    }\n    return inodeId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
      "extendedDetails": {}
    },
    "00067895a01c66d53715b50bbcb3605efd6425f2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5754. Split LayoutVerion into NameNodeLayoutVersion and DataNodeLayoutVersion. Contributed by Brandon Li\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1563041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 7:21 PM",
      "commitName": "00067895a01c66d53715b50bbcb3605efd6425f2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "27/01/14 9:35 PM",
      "commitNameOld": "917502ef316447d282304f70d170a4686a4c7834",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.91,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n       long lastInodeId) throws IOException {\n     long inodeId \u003d inodeIdFromOp;\n \n     if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n-      if (LayoutVersion.supports(Feature.ADD_INODE_ID, logVersion)) {\n+      if (NameNodeLayoutVersion.supports(\n+          LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n         throw new IOException(\"The layout version \" + logVersion\n             + \" supports inodeId but gave bogus inodeId\");\n       }\n       inodeId \u003d fsNamesys.allocateNewInodeId();\n     } else {\n       // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n       // fsimage but editlog captures more recent inodeId allocations\n       if (inodeId \u003e lastInodeId) {\n         fsNamesys.resetLastInodeId(inodeId);\n       }\n     }\n     return inodeId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n      long lastInodeId) throws IOException {\n    long inodeId \u003d inodeIdFromOp;\n\n    if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n      if (NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.ADD_INODE_ID, logVersion)) {\n        throw new IOException(\"The layout version \" + logVersion\n            + \" supports inodeId but gave bogus inodeId\");\n      }\n      inodeId \u003d fsNamesys.allocateNewInodeId();\n    } else {\n      // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n      // fsimage but editlog captures more recent inodeId allocations\n      if (inodeId \u003e lastInodeId) {\n        fsNamesys.resetLastInodeId(inodeId);\n      }\n    }\n    return inodeId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
      "extendedDetails": {}
    },
    "19201622be1db8e166d1cc0dd7e62af4702d2784": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4339. Persist inode id in fsimage and editlog. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465835 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/04/13 4:57 PM",
      "commitName": "19201622be1db8e166d1cc0dd7e62af4702d2784",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,19 @@\n+  private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n+      long lastInodeId) throws IOException {\n+    long inodeId \u003d inodeIdFromOp;\n+\n+    if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n+      if (LayoutVersion.supports(Feature.ADD_INODE_ID, logVersion)) {\n+        throw new IOException(\"The layout version \" + logVersion\n+            + \" supports inodeId but gave bogus inodeId\");\n+      }\n+      inodeId \u003d fsNamesys.allocateNewInodeId();\n+    } else {\n+      // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n+      // fsimage but editlog captures more recent inodeId allocations\n+      if (inodeId \u003e lastInodeId) {\n+        fsNamesys.resetLastInodeId(inodeId);\n+      }\n+    }\n+    return inodeId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getAndUpdateLastInodeId(long inodeIdFromOp, int logVersion,\n      long lastInodeId) throws IOException {\n    long inodeId \u003d inodeIdFromOp;\n\n    if (inodeId \u003d\u003d INodeId.GRANDFATHER_INODE_ID) {\n      if (LayoutVersion.supports(Feature.ADD_INODE_ID, logVersion)) {\n        throw new IOException(\"The layout version \" + logVersion\n            + \" supports inodeId but gave bogus inodeId\");\n      }\n      inodeId \u003d fsNamesys.allocateNewInodeId();\n    } else {\n      // need to reset lastInodeId. fsnamesys gets lastInodeId firstly from\n      // fsimage but editlog captures more recent inodeId allocations\n      if (inodeId \u003e lastInodeId) {\n        fsNamesys.resetLastInodeId(inodeId);\n      }\n    }\n    return inodeId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java"
    }
  }
}