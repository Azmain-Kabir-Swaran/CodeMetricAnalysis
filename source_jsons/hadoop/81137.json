{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopologyWithNodeGroup.java",
  "functionName": "getNodeForNetworkLocation",
  "functionId": "getNodeForNetworkLocation___node-Node",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
  "functionStartLine": 43,
  "functionEndLine": 55,
  "numCommitsSeen": 16,
  "timeTaken": 697,
  "changeHistory": [
    "4d0cab2729e2bdb1742b62dba69bd30ab69c868e",
    "ed7040f07b75a8eb15df90cc8b57e534c7ebf114"
  ],
  "changeHistoryShort": {
    "4d0cab2729e2bdb1742b62dba69bd30ab69c868e": "Ybodychange",
    "ed7040f07b75a8eb15df90cc8b57e534c7ebf114": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d0cab2729e2bdb1742b62dba69bd30ab69c868e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3601. Add BlockPlacementPolicyWithNodeGroup to support block placement with 4-layer network topology.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1357442 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/07/12 6:31 PM",
      "commitName": "4d0cab2729e2bdb1742b62dba69bd30ab69c868e",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/06/12 11:23 AM",
      "commitNameOld": "ed7040f07b75a8eb15df90cc8b57e534c7ebf114",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 16.3,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected Node getNodeForNetworkLocation(Node node) {\n     // if node only with default rack info, here we need to add default\n     // nodegroup info\n     if (NetworkTopology.DEFAULT_RACK.equals(node.getNetworkLocation())) {\n       node.setNetworkLocation(node.getNetworkLocation()\n           + DEFAULT_NODEGROUP);\n     }\n     Node nodeGroup \u003d getNode(node.getNetworkLocation());\n     if (nodeGroup \u003d\u003d null) {\n-      nodeGroup \u003d new InnerNode(node.getNetworkLocation());\n+      nodeGroup \u003d new InnerNodeWithNodeGroup(node.getNetworkLocation());\n     }\n     return getNode(nodeGroup.getNetworkLocation());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Node getNodeForNetworkLocation(Node node) {\n    // if node only with default rack info, here we need to add default\n    // nodegroup info\n    if (NetworkTopology.DEFAULT_RACK.equals(node.getNetworkLocation())) {\n      node.setNetworkLocation(node.getNetworkLocation()\n          + DEFAULT_NODEGROUP);\n    }\n    Node nodeGroup \u003d getNode(node.getNetworkLocation());\n    if (nodeGroup \u003d\u003d null) {\n      nodeGroup \u003d new InnerNodeWithNodeGroup(node.getNetworkLocation());\n    }\n    return getNode(nodeGroup.getNetworkLocation());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
      "extendedDetails": {}
    },
    "ed7040f07b75a8eb15df90cc8b57e534c7ebf114": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8470. Add NetworkTopologyWithNodeGroup, a 4-layer implementation of NetworkTopology.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/12 11:23 AM",
      "commitName": "ed7040f07b75a8eb15df90cc8b57e534c7ebf114",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,13 @@\n+  protected Node getNodeForNetworkLocation(Node node) {\n+    // if node only with default rack info, here we need to add default\n+    // nodegroup info\n+    if (NetworkTopology.DEFAULT_RACK.equals(node.getNetworkLocation())) {\n+      node.setNetworkLocation(node.getNetworkLocation()\n+          + DEFAULT_NODEGROUP);\n+    }\n+    Node nodeGroup \u003d getNode(node.getNetworkLocation());\n+    if (nodeGroup \u003d\u003d null) {\n+      nodeGroup \u003d new InnerNode(node.getNetworkLocation());\n+    }\n+    return getNode(nodeGroup.getNetworkLocation());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Node getNodeForNetworkLocation(Node node) {\n    // if node only with default rack info, here we need to add default\n    // nodegroup info\n    if (NetworkTopology.DEFAULT_RACK.equals(node.getNetworkLocation())) {\n      node.setNetworkLocation(node.getNetworkLocation()\n          + DEFAULT_NODEGROUP);\n    }\n    Node nodeGroup \u003d getNode(node.getNetworkLocation());\n    if (nodeGroup \u003d\u003d null) {\n      nodeGroup \u003d new InnerNode(node.getNetworkLocation());\n    }\n    return getNode(nodeGroup.getNetworkLocation());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java"
    }
  }
}