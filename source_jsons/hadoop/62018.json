{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAUtil.java",
  "functionName": "verifyAndSetRMHAIdsList",
  "functionId": "verifyAndSetRMHAIdsList___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
  "functionStartLine": 116,
  "functionEndLine": 137,
  "numCommitsSeen": 26,
  "timeTaken": 2169,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5",
    "3e7d56678c334a359049adf99018683113849fc8",
    "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
    "8a79be36bd097a2f0e4a84625e782a7fa1421549",
    "116b459d2299f933ae028fbcb6d71d338d4d3e94"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5": "Ybodychange",
    "3e7d56678c334a359049adf99018683113849fc8": "Ybodychange",
    "1182ca04d4a78f48487d6485f756a3ec96f5b0c2": "Ymultichange(Yrename,Ybodychange)",
    "8a79be36bd097a2f0e4a84625e782a7fa1421549": "Ybodychange",
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "10/11/17 9:06 PM",
      "commitNameOld": "2c2b7a3672e0744ce6a77a117cedefba04fed603",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 471.61,
      "commitsBetweenForRepo": 3999,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private static void verifyAndSetRMHAIdsList(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n     if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n           conf.get(YarnConfiguration.RM_HA_IDS) +\n           \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n       // verify the RM service addresses configurations for every RMIds\n       for (String prefix : YarnConfiguration.getServiceAddressConfKeys(conf)) {\n         checkAndSetRMRPCAddress(prefix, id, conf);\n       }\n-      setValue.append(id);\n-      setValue.append(\",\");\n+      setValue.append(id)\n+          .append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      // verify the RM service addresses configurations for every RMIds\n      for (String prefix : YarnConfiguration.getServiceAddressConfKeys(conf)) {\n        checkAndSetRMRPCAddress(prefix, id, conf);\n      }\n      setValue.append(id)\n          .append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/02/14 7:18 PM",
      "commitNameOld": "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.7,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private static void verifyAndSetRMHAIdsList(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n     if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n           conf.get(YarnConfiguration.RM_HA_IDS) +\n           \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n       // verify the RM service addresses configurations for every RMIds\n-      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n+      for (String prefix : YarnConfiguration.getServiceAddressConfKeys(conf)) {\n         checkAndSetRMRPCAddress(prefix, id, conf);\n       }\n       setValue.append(id);\n       setValue.append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      // verify the RM service addresses configurations for every RMIds\n      for (String prefix : YarnConfiguration.getServiceAddressConfKeys(conf)) {\n        checkAndSetRMRPCAddress(prefix, id, conf);\n      }\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1660. Simplified the RM HA configuration to accept and be able to simply depend just on\nconfiguration properties of the form yarn.resourcemanager.hostname.RMID and use the default\nports for all service addresses. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1565523 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/14 7:18 PM",
      "commitName": "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/02/14 11:53 AM",
      "commitNameOld": "3e7d56678c334a359049adf99018683113849fc8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,22 @@\n   private static void verifyAndSetRMHAIdsList(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n     if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n           conf.get(YarnConfiguration.RM_HA_IDS) +\n           \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n       // verify the RM service addresses configurations for every RMIds\n       for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n-        String confKey \u003d null;\n-        try {\n-          confKey \u003d addSuffix(prefix, id);\n-          if (conf.getTrimmed(confKey) \u003d\u003d null) {\n-            throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n-          }\n-        } catch (IllegalArgumentException iae) {\n-          String errmsg \u003d iae.getMessage();\n-          if (confKey \u003d\u003d null) {\n-            // Error at addSuffix\n-            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, id);\n-          }\n-          throwBadConfigurationException(errmsg);\n-        }\n+        checkAndSetRMRPCAddress(prefix, id, conf);\n       }\n       setValue.append(id);\n       setValue.append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      // verify the RM service addresses configurations for every RMIds\n      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n        checkAndSetRMRPCAddress(prefix, id, conf);\n      }\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "3e7d56678c334a359049adf99018683113849fc8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1639. Modified RM HA configuration handling to have a way of not requiring separate configuration files for each RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/14 11:53 AM",
      "commitName": "3e7d56678c334a359049adf99018683113849fc8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.75,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,35 @@\n   private static void verifyAndSetRMHAIdsList(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n     if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n           conf.get(YarnConfiguration.RM_HA_IDS) +\n           \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n       // verify the RM service addresses configurations for every RMIds\n       for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n         String confKey \u003d null;\n         try {\n           confKey \u003d addSuffix(prefix, id);\n           if (conf.getTrimmed(confKey) \u003d\u003d null) {\n             throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n           }\n         } catch (IllegalArgumentException iae) {\n           String errmsg \u003d iae.getMessage();\n           if (confKey \u003d\u003d null) {\n             // Error at addSuffix\n-            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n-              getRMHAId(conf));\n+            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, id);\n           }\n           throwBadConfigurationException(errmsg);\n         }\n       }\n       setValue.append(id);\n       setValue.append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      // verify the RM service addresses configurations for every RMIds\n      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n        String confKey \u003d null;\n        try {\n          confKey \u003d addSuffix(prefix, id);\n          if (conf.getTrimmed(confKey) \u003d\u003d null) {\n            throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n          }\n        } catch (IllegalArgumentException iae) {\n          String errmsg \u003d iae.getMessage();\n          if (confKey \u003d\u003d null) {\n            // Error at addSuffix\n            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, id);\n          }\n          throwBadConfigurationException(errmsg);\n        }\n      }\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "1182ca04d4a78f48487d6485f756a3ec96f5b0c2": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-1485. Modified RM HA configuration validation to also ensure that service-address configuration are configured for every RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/13 3:54 PM",
      "commitName": "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-1485. Modified RM HA configuration validation to also ensure that service-address configuration are configured for every RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550854 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/12/13 3:54 PM",
          "commitName": "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/12/13 12:50 PM",
          "commitNameOld": "8a79be36bd097a2f0e4a84625e782a7fa1421549",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,36 @@\n-  private static void verifyAndSetRMHAIds(Configuration conf) {\n+  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n     if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n           conf.get(YarnConfiguration.RM_HA_IDS) +\n           \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n+      // verify the RM service addresses configurations for every RMIds\n+      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n+        String confKey \u003d null;\n+        try {\n+          confKey \u003d addSuffix(prefix, id);\n+          if (conf.getTrimmed(confKey) \u003d\u003d null) {\n+            throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n+          }\n+        } catch (IllegalArgumentException iae) {\n+          String errmsg \u003d iae.getMessage();\n+          if (confKey \u003d\u003d null) {\n+            // Error at addSuffix\n+            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n+              getRMHAId(conf));\n+          }\n+          throwBadConfigurationException(errmsg);\n+        }\n+      }\n       setValue.append(id);\n       setValue.append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      // verify the RM service addresses configurations for every RMIds\n      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n        String confKey \u003d null;\n        try {\n          confKey \u003d addSuffix(prefix, id);\n          if (conf.getTrimmed(confKey) \u003d\u003d null) {\n            throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n          }\n        } catch (IllegalArgumentException iae) {\n          String errmsg \u003d iae.getMessage();\n          if (confKey \u003d\u003d null) {\n            // Error at addSuffix\n            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n              getRMHAId(conf));\n          }\n          throwBadConfigurationException(errmsg);\n        }\n      }\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
          "extendedDetails": {
            "oldValue": "verifyAndSetRMHAIds",
            "newValue": "verifyAndSetRMHAIdsList"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1485. Modified RM HA configuration validation to also ensure that service-address configuration are configured for every RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550854 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/12/13 3:54 PM",
          "commitName": "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/12/13 12:50 PM",
          "commitNameOld": "8a79be36bd097a2f0e4a84625e782a7fa1421549",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,36 @@\n-  private static void verifyAndSetRMHAIds(Configuration conf) {\n+  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n     if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n           conf.get(YarnConfiguration.RM_HA_IDS) +\n           \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n+      // verify the RM service addresses configurations for every RMIds\n+      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n+        String confKey \u003d null;\n+        try {\n+          confKey \u003d addSuffix(prefix, id);\n+          if (conf.getTrimmed(confKey) \u003d\u003d null) {\n+            throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n+          }\n+        } catch (IllegalArgumentException iae) {\n+          String errmsg \u003d iae.getMessage();\n+          if (confKey \u003d\u003d null) {\n+            // Error at addSuffix\n+            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n+              getRMHAId(conf));\n+          }\n+          throwBadConfigurationException(errmsg);\n+        }\n+      }\n       setValue.append(id);\n       setValue.append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyAndSetRMHAIdsList(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      // verify the RM service addresses configurations for every RMIds\n      for (String prefix : YarnConfiguration.RM_SERVICES_ADDRESS_CONF_KEYS) {\n        String confKey \u003d null;\n        try {\n          confKey \u003d addSuffix(prefix, id);\n          if (conf.getTrimmed(confKey) \u003d\u003d null) {\n            throwBadConfigurationException(getNeedToSetValueMessage(confKey));\n          }\n        } catch (IllegalArgumentException iae) {\n          String errmsg \u003d iae.getMessage();\n          if (confKey \u003d\u003d null) {\n            // Error at addSuffix\n            errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n              getRMHAId(conf));\n          }\n          throwBadConfigurationException(errmsg);\n        }\n      }\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "8a79be36bd097a2f0e4a84625e782a7fa1421549": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1325. Modified RM HA configuration validation to also ensure that multiple RMs are configured. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550524 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/13 12:50 PM",
      "commitName": "8a79be36bd097a2f0e4a84625e782a7fa1421549",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/11/13 11:02 AM",
      "commitNameOld": "f7efa0b86e36e19876719ffd213cd14273e73a70",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 27.07,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   private static void verifyAndSetRMHAIds(Configuration conf) {\n     Collection\u003cString\u003e ids \u003d\n       conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n-    if (ids.size() \u003c\u003d 0) {\n+    if (ids.size() \u003c 2) {\n       throwBadConfigurationException(\n         getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n-          conf.get(YarnConfiguration.RM_HA_IDS)));\n-    } else if (ids.size() \u003d\u003d 1) {\n-      LOG.warn(getRMHAIdsWarningMessage(ids.toString()));\n+          conf.get(YarnConfiguration.RM_HA_IDS) +\n+          \"\\nHA mode requires atleast two RMs\"));\n     }\n \n     StringBuilder setValue \u003d new StringBuilder();\n     for (String id: ids) {\n       setValue.append(id);\n       setValue.append(\",\");\n     }\n     conf.set(YarnConfiguration.RM_HA_IDS,\n       setValue.substring(0, setValue.length() - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAIds(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c 2) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS) +\n          \"\\nHA mode requires atleast two RMs\"));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1305. RMHAProtocolService#serviceInit should handle HAUtil\u0027s IllegalArgumentException (Tsuyoshi Ozawa via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/10/13 6:10 PM",
      "commitName": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,19 @@\n+  private static void verifyAndSetRMHAIds(Configuration conf) {\n+    Collection\u003cString\u003e ids \u003d\n+      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n+    if (ids.size() \u003c\u003d 0) {\n+      throwBadConfigurationException(\n+        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n+          conf.get(YarnConfiguration.RM_HA_IDS)));\n+    } else if (ids.size() \u003d\u003d 1) {\n+      LOG.warn(getRMHAIdsWarningMessage(ids.toString()));\n+    }\n+\n+    StringBuilder setValue \u003d new StringBuilder();\n+    for (String id: ids) {\n+      setValue.append(id);\n+      setValue.append(\",\");\n+    }\n+    conf.set(YarnConfiguration.RM_HA_IDS,\n+      setValue.substring(0, setValue.length() - 1));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAIds(Configuration conf) {\n    Collection\u003cString\u003e ids \u003d\n      conf.getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS);\n    if (ids.size() \u003c\u003d 0) {\n      throwBadConfigurationException(\n        getInvalidValueMessage(YarnConfiguration.RM_HA_IDS,\n          conf.get(YarnConfiguration.RM_HA_IDS)));\n    } else if (ids.size() \u003d\u003d 1) {\n      LOG.warn(getRMHAIdsWarningMessage(ids.toString()));\n    }\n\n    StringBuilder setValue \u003d new StringBuilder();\n    for (String id: ids) {\n      setValue.append(id);\n      setValue.append(\",\");\n    }\n    conf.set(YarnConfiguration.RM_HA_IDS,\n      setValue.substring(0, setValue.length() - 1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java"
    }
  }
}