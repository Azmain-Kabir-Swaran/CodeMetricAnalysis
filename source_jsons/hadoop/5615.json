{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CacheManager.java",
  "functionName": "modifyCachePool",
  "functionId": "modifyCachePool___info-CachePoolInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
  "functionStartLine": 817,
  "functionEndLine": 877,
  "numCommitsSeen": 61,
  "timeTaken": 4001,
  "changeHistory": [
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
    "93e23a99157c30b51752fc49748c3c210745a187",
    "d85c017d0488930d806f267141057fc73e68c728",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
    "991c453ca3ac141a3f286f74af8401f83c38b230",
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
    "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
    "a0d9a155a4a4258f628e927e096ecf6673f788ec",
    "02e0e158a26f81ce8375426ba0ea56db09ee36be",
    "f41f8b8842c3f26d19f7fa928070c7c07f760e4c",
    "d56d0b46e1b82ae068083ddb99872d314684dc82",
    "97b7267977ef42201e5844df49bc37ec3d10ce16"
  ],
  "changeHistoryShort": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": "Ybodychange",
    "93e23a99157c30b51752fc49748c3c210745a187": "Ybodychange",
    "d85c017d0488930d806f267141057fc73e68c728": "Ybodychange",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": "Ybodychange",
    "991c453ca3ac141a3f286f74af8401f83c38b230": "Ybodychange",
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92": "Ybodychange",
    "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a0d9a155a4a4258f628e927e096ecf6673f788ec": "Ybodychange",
    "02e0e158a26f81ce8375426ba0ea56db09ee36be": "Ybodychange",
    "f41f8b8842c3f26d19f7fa928070c7c07f760e4c": "Ymultichange(Yparameterchange,Ybodychange)",
    "d56d0b46e1b82ae068083ddb99872d314684dc82": "Ymultichange(Yparameterchange,Ybodychange)",
    "97b7267977ef42201e5844df49bc37ec3d10ce16": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10328. Add per-cache-pool default replication num configuration (xupeng via cmccabe)\n",
      "commitDate": "20/06/16 10:42 AM",
      "commitName": "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "16/12/15 6:16 PM",
      "commitNameOld": "f741476146574550a1a208d58ef8be76639e5ddc",
      "commitAuthorOld": "Uma Mahesh",
      "daysBetweenCommits": 186.64,
      "commitsBetweenForRepo": 1171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,61 @@\n   public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     assert namesystem.hasWriteLock();\n     StringBuilder bld \u003d new StringBuilder();\n     try {\n       CachePoolInfo.validate(info);\n       String poolName \u003d info.getPoolName();\n       CachePool pool \u003d cachePools.get(poolName);\n       if (pool \u003d\u003d null) {\n         throw new InvalidRequestException(\"Cache pool \" + poolName\n             + \" does not exist.\");\n       }\n       String prefix \u003d \"\";\n       if (info.getOwnerName() !\u003d null) {\n         pool.setOwnerName(info.getOwnerName());\n         bld.append(prefix).\n           append(\"set owner to \").append(info.getOwnerName());\n         prefix \u003d \"; \";\n       }\n       if (info.getGroupName() !\u003d null) {\n         pool.setGroupName(info.getGroupName());\n         bld.append(prefix).\n           append(\"set group to \").append(info.getGroupName());\n         prefix \u003d \"; \";\n       }\n       if (info.getMode() !\u003d null) {\n         pool.setMode(info.getMode());\n         bld.append(prefix).append(\"set mode to \" + info.getMode());\n         prefix \u003d \"; \";\n       }\n       if (info.getLimit() !\u003d null) {\n         pool.setLimit(info.getLimit());\n         bld.append(prefix).append(\"set limit to \" + info.getLimit());\n         prefix \u003d \"; \";\n         // New limit changes stats, need to set needs refresh\n         setNeedsRescan();\n       }\n+      if (info.getDefaultReplication() !\u003d null) {\n+        final short defaultReplication \u003d info.getDefaultReplication();\n+        pool.setDefaultReplication(defaultReplication);\n+        bld.append(prefix).append(\"set default replication to \"\n+            + defaultReplication);\n+        prefix \u003d \"; \";\n+      }\n       if (info.getMaxRelativeExpiryMs() !\u003d null) {\n         final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n         pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n         bld.append(prefix).append(\"set maxRelativeExpiry to \"\n             + maxRelativeExpiry);\n         prefix \u003d \"; \";\n       }\n       if (prefix.isEmpty()) {\n         bld.append(\"no changes.\");\n       }\n     } catch (IOException e) {\n       LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n       throw e;\n     }\n     LOG.info(\"modifyCachePool of {} successful; {}\", info.getPoolName(), \n         bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    StringBuilder bld \u003d new StringBuilder();\n    try {\n      CachePoolInfo.validate(info);\n      String poolName \u003d info.getPoolName();\n      CachePool pool \u003d cachePools.get(poolName);\n      if (pool \u003d\u003d null) {\n        throw new InvalidRequestException(\"Cache pool \" + poolName\n            + \" does not exist.\");\n      }\n      String prefix \u003d \"\";\n      if (info.getOwnerName() !\u003d null) {\n        pool.setOwnerName(info.getOwnerName());\n        bld.append(prefix).\n          append(\"set owner to \").append(info.getOwnerName());\n        prefix \u003d \"; \";\n      }\n      if (info.getGroupName() !\u003d null) {\n        pool.setGroupName(info.getGroupName());\n        bld.append(prefix).\n          append(\"set group to \").append(info.getGroupName());\n        prefix \u003d \"; \";\n      }\n      if (info.getMode() !\u003d null) {\n        pool.setMode(info.getMode());\n        bld.append(prefix).append(\"set mode to \" + info.getMode());\n        prefix \u003d \"; \";\n      }\n      if (info.getLimit() !\u003d null) {\n        pool.setLimit(info.getLimit());\n        bld.append(prefix).append(\"set limit to \" + info.getLimit());\n        prefix \u003d \"; \";\n        // New limit changes stats, need to set needs refresh\n        setNeedsRescan();\n      }\n      if (info.getDefaultReplication() !\u003d null) {\n        final short defaultReplication \u003d info.getDefaultReplication();\n        pool.setDefaultReplication(defaultReplication);\n        bld.append(prefix).append(\"set default replication to \"\n            + defaultReplication);\n        prefix \u003d \"; \";\n      }\n      if (info.getMaxRelativeExpiryMs() !\u003d null) {\n        final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n        pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n        bld.append(prefix).append(\"set maxRelativeExpiry to \"\n            + maxRelativeExpiry);\n        prefix \u003d \"; \";\n      }\n      if (prefix.isEmpty()) {\n        bld.append(\"no changes.\");\n      }\n    } catch (IOException e) {\n      LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n      throw e;\n    }\n    LOG.info(\"modifyCachePool of {} successful; {}\", info.getPoolName(), \n        bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "93e23a99157c30b51752fc49748c3c210745a187": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6613. Improve logging in caching classes. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607697 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 10:13 AM",
      "commitName": "93e23a99157c30b51752fc49748c3c210745a187",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "15/05/14 6:18 PM",
      "commitNameOld": "8f48760663070529ff09927d1772010fffe5f438",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 48.66,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,54 @@\n   public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     assert namesystem.hasWriteLock();\n     StringBuilder bld \u003d new StringBuilder();\n     try {\n       CachePoolInfo.validate(info);\n       String poolName \u003d info.getPoolName();\n       CachePool pool \u003d cachePools.get(poolName);\n       if (pool \u003d\u003d null) {\n         throw new InvalidRequestException(\"Cache pool \" + poolName\n             + \" does not exist.\");\n       }\n       String prefix \u003d \"\";\n       if (info.getOwnerName() !\u003d null) {\n         pool.setOwnerName(info.getOwnerName());\n         bld.append(prefix).\n           append(\"set owner to \").append(info.getOwnerName());\n         prefix \u003d \"; \";\n       }\n       if (info.getGroupName() !\u003d null) {\n         pool.setGroupName(info.getGroupName());\n         bld.append(prefix).\n           append(\"set group to \").append(info.getGroupName());\n         prefix \u003d \"; \";\n       }\n       if (info.getMode() !\u003d null) {\n         pool.setMode(info.getMode());\n         bld.append(prefix).append(\"set mode to \" + info.getMode());\n         prefix \u003d \"; \";\n       }\n       if (info.getLimit() !\u003d null) {\n         pool.setLimit(info.getLimit());\n         bld.append(prefix).append(\"set limit to \" + info.getLimit());\n         prefix \u003d \"; \";\n         // New limit changes stats, need to set needs refresh\n         setNeedsRescan();\n       }\n       if (info.getMaxRelativeExpiryMs() !\u003d null) {\n         final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n         pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n         bld.append(prefix).append(\"set maxRelativeExpiry to \"\n             + maxRelativeExpiry);\n         prefix \u003d \"; \";\n       }\n       if (prefix.isEmpty()) {\n         bld.append(\"no changes.\");\n       }\n     } catch (IOException e) {\n       LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n       throw e;\n     }\n-    LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n-        + bld.toString());\n+    LOG.info(\"modifyCachePool of {} successful; {}\", info.getPoolName(), \n+        bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    StringBuilder bld \u003d new StringBuilder();\n    try {\n      CachePoolInfo.validate(info);\n      String poolName \u003d info.getPoolName();\n      CachePool pool \u003d cachePools.get(poolName);\n      if (pool \u003d\u003d null) {\n        throw new InvalidRequestException(\"Cache pool \" + poolName\n            + \" does not exist.\");\n      }\n      String prefix \u003d \"\";\n      if (info.getOwnerName() !\u003d null) {\n        pool.setOwnerName(info.getOwnerName());\n        bld.append(prefix).\n          append(\"set owner to \").append(info.getOwnerName());\n        prefix \u003d \"; \";\n      }\n      if (info.getGroupName() !\u003d null) {\n        pool.setGroupName(info.getGroupName());\n        bld.append(prefix).\n          append(\"set group to \").append(info.getGroupName());\n        prefix \u003d \"; \";\n      }\n      if (info.getMode() !\u003d null) {\n        pool.setMode(info.getMode());\n        bld.append(prefix).append(\"set mode to \" + info.getMode());\n        prefix \u003d \"; \";\n      }\n      if (info.getLimit() !\u003d null) {\n        pool.setLimit(info.getLimit());\n        bld.append(prefix).append(\"set limit to \" + info.getLimit());\n        prefix \u003d \"; \";\n        // New limit changes stats, need to set needs refresh\n        setNeedsRescan();\n      }\n      if (info.getMaxRelativeExpiryMs() !\u003d null) {\n        final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n        pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n        bld.append(prefix).append(\"set maxRelativeExpiry to \"\n            + maxRelativeExpiry);\n        prefix \u003d \"; \";\n      }\n      if (prefix.isEmpty()) {\n        bld.append(\"no changes.\");\n      }\n    } catch (IOException e) {\n      LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n      throw e;\n    }\n    LOG.info(\"modifyCachePool of {} successful; {}\", info.getPoolName(), \n        bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "d85c017d0488930d806f267141057fc73e68c728": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5651. Remove dfs.namenode.caching.enabled and improve CRM locking. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1555002 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 6:45 PM",
      "commitName": "d85c017d0488930d806f267141057fc73e68c728",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "31/12/13 4:01 PM",
      "commitNameOld": "07e4fb1455abc33584fc666ef745abe256ebd7d1",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.11,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,54 @@\n   public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     assert namesystem.hasWriteLock();\n     StringBuilder bld \u003d new StringBuilder();\n     try {\n       CachePoolInfo.validate(info);\n       String poolName \u003d info.getPoolName();\n       CachePool pool \u003d cachePools.get(poolName);\n       if (pool \u003d\u003d null) {\n         throw new InvalidRequestException(\"Cache pool \" + poolName\n             + \" does not exist.\");\n       }\n       String prefix \u003d \"\";\n       if (info.getOwnerName() !\u003d null) {\n         pool.setOwnerName(info.getOwnerName());\n         bld.append(prefix).\n           append(\"set owner to \").append(info.getOwnerName());\n         prefix \u003d \"; \";\n       }\n       if (info.getGroupName() !\u003d null) {\n         pool.setGroupName(info.getGroupName());\n         bld.append(prefix).\n           append(\"set group to \").append(info.getGroupName());\n         prefix \u003d \"; \";\n       }\n       if (info.getMode() !\u003d null) {\n         pool.setMode(info.getMode());\n         bld.append(prefix).append(\"set mode to \" + info.getMode());\n         prefix \u003d \"; \";\n       }\n       if (info.getLimit() !\u003d null) {\n         pool.setLimit(info.getLimit());\n         bld.append(prefix).append(\"set limit to \" + info.getLimit());\n         prefix \u003d \"; \";\n         // New limit changes stats, need to set needs refresh\n-        if (monitor !\u003d null) {\n-          monitor.setNeedsRescan();\n-        }\n+        setNeedsRescan();\n       }\n       if (info.getMaxRelativeExpiryMs() !\u003d null) {\n         final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n         pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n         bld.append(prefix).append(\"set maxRelativeExpiry to \"\n             + maxRelativeExpiry);\n         prefix \u003d \"; \";\n       }\n       if (prefix.isEmpty()) {\n         bld.append(\"no changes.\");\n       }\n     } catch (IOException e) {\n       LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n       throw e;\n     }\n     LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n         + bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    StringBuilder bld \u003d new StringBuilder();\n    try {\n      CachePoolInfo.validate(info);\n      String poolName \u003d info.getPoolName();\n      CachePool pool \u003d cachePools.get(poolName);\n      if (pool \u003d\u003d null) {\n        throw new InvalidRequestException(\"Cache pool \" + poolName\n            + \" does not exist.\");\n      }\n      String prefix \u003d \"\";\n      if (info.getOwnerName() !\u003d null) {\n        pool.setOwnerName(info.getOwnerName());\n        bld.append(prefix).\n          append(\"set owner to \").append(info.getOwnerName());\n        prefix \u003d \"; \";\n      }\n      if (info.getGroupName() !\u003d null) {\n        pool.setGroupName(info.getGroupName());\n        bld.append(prefix).\n          append(\"set group to \").append(info.getGroupName());\n        prefix \u003d \"; \";\n      }\n      if (info.getMode() !\u003d null) {\n        pool.setMode(info.getMode());\n        bld.append(prefix).append(\"set mode to \" + info.getMode());\n        prefix \u003d \"; \";\n      }\n      if (info.getLimit() !\u003d null) {\n        pool.setLimit(info.getLimit());\n        bld.append(prefix).append(\"set limit to \" + info.getLimit());\n        prefix \u003d \"; \";\n        // New limit changes stats, need to set needs refresh\n        setNeedsRescan();\n      }\n      if (info.getMaxRelativeExpiryMs() !\u003d null) {\n        final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n        pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n        bld.append(prefix).append(\"set maxRelativeExpiry to \"\n            + maxRelativeExpiry);\n        prefix \u003d \"; \";\n      }\n      if (prefix.isEmpty()) {\n        bld.append(\"no changes.\");\n      }\n    } catch (IOException e) {\n      LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n      throw e;\n    }\n    LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n        + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5636. Enforce a max TTL per cache pool (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 3:27 PM",
      "commitName": "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "17/12/13 10:47 AM",
      "commitNameOld": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,56 @@\n   public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     assert namesystem.hasWriteLock();\n     StringBuilder bld \u003d new StringBuilder();\n     try {\n       CachePoolInfo.validate(info);\n       String poolName \u003d info.getPoolName();\n       CachePool pool \u003d cachePools.get(poolName);\n       if (pool \u003d\u003d null) {\n         throw new InvalidRequestException(\"Cache pool \" + poolName\n             + \" does not exist.\");\n       }\n       String prefix \u003d \"\";\n       if (info.getOwnerName() !\u003d null) {\n         pool.setOwnerName(info.getOwnerName());\n         bld.append(prefix).\n           append(\"set owner to \").append(info.getOwnerName());\n         prefix \u003d \"; \";\n       }\n       if (info.getGroupName() !\u003d null) {\n         pool.setGroupName(info.getGroupName());\n         bld.append(prefix).\n           append(\"set group to \").append(info.getGroupName());\n         prefix \u003d \"; \";\n       }\n       if (info.getMode() !\u003d null) {\n         pool.setMode(info.getMode());\n         bld.append(prefix).append(\"set mode to \" + info.getMode());\n         prefix \u003d \"; \";\n       }\n       if (info.getLimit() !\u003d null) {\n         pool.setLimit(info.getLimit());\n         bld.append(prefix).append(\"set limit to \" + info.getLimit());\n         prefix \u003d \"; \";\n         // New limit changes stats, need to set needs refresh\n         if (monitor !\u003d null) {\n           monitor.setNeedsRescan();\n         }\n       }\n+      if (info.getMaxRelativeExpiryMs() !\u003d null) {\n+        final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n+        pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n+        bld.append(prefix).append(\"set maxRelativeExpiry to \"\n+            + maxRelativeExpiry);\n+        prefix \u003d \"; \";\n+      }\n       if (prefix.isEmpty()) {\n         bld.append(\"no changes.\");\n       }\n     } catch (IOException e) {\n       LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n       throw e;\n     }\n     LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n         + bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    StringBuilder bld \u003d new StringBuilder();\n    try {\n      CachePoolInfo.validate(info);\n      String poolName \u003d info.getPoolName();\n      CachePool pool \u003d cachePools.get(poolName);\n      if (pool \u003d\u003d null) {\n        throw new InvalidRequestException(\"Cache pool \" + poolName\n            + \" does not exist.\");\n      }\n      String prefix \u003d \"\";\n      if (info.getOwnerName() !\u003d null) {\n        pool.setOwnerName(info.getOwnerName());\n        bld.append(prefix).\n          append(\"set owner to \").append(info.getOwnerName());\n        prefix \u003d \"; \";\n      }\n      if (info.getGroupName() !\u003d null) {\n        pool.setGroupName(info.getGroupName());\n        bld.append(prefix).\n          append(\"set group to \").append(info.getGroupName());\n        prefix \u003d \"; \";\n      }\n      if (info.getMode() !\u003d null) {\n        pool.setMode(info.getMode());\n        bld.append(prefix).append(\"set mode to \" + info.getMode());\n        prefix \u003d \"; \";\n      }\n      if (info.getLimit() !\u003d null) {\n        pool.setLimit(info.getLimit());\n        bld.append(prefix).append(\"set limit to \" + info.getLimit());\n        prefix \u003d \"; \";\n        // New limit changes stats, need to set needs refresh\n        if (monitor !\u003d null) {\n          monitor.setNeedsRescan();\n        }\n      }\n      if (info.getMaxRelativeExpiryMs() !\u003d null) {\n        final Long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs();\n        pool.setMaxRelativeExpiryMs(maxRelativeExpiry);\n        bld.append(prefix).append(\"set maxRelativeExpiry to \"\n            + maxRelativeExpiry);\n        prefix \u003d \"; \";\n      }\n      if (prefix.isEmpty()) {\n        bld.append(\"no changes.\");\n      }\n    } catch (IOException e) {\n      LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n      throw e;\n    }\n    LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n        + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "991c453ca3ac141a3f286f74af8401f83c38b230": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 10:47 AM",
      "commitName": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "05/12/13 1:09 PM",
      "commitNameOld": "55e5b0653c34a5f4146ce5a97a5b4a88a976d88a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.9,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,49 @@\n   public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     assert namesystem.hasWriteLock();\n-    CachePoolInfo.validate(info);\n-    String poolName \u003d info.getPoolName();\n-    CachePool pool \u003d cachePools.get(poolName);\n-    if (pool \u003d\u003d null) {\n-      throw new InvalidRequestException(\"Cache pool \" + poolName\n-          + \" does not exist.\");\n-    }\n     StringBuilder bld \u003d new StringBuilder();\n-    String prefix \u003d \"\";\n-    if (info.getOwnerName() !\u003d null) {\n-      pool.setOwnerName(info.getOwnerName());\n-      bld.append(prefix).\n-        append(\"set owner to \").append(info.getOwnerName());\n-      prefix \u003d \"; \";\n+    try {\n+      CachePoolInfo.validate(info);\n+      String poolName \u003d info.getPoolName();\n+      CachePool pool \u003d cachePools.get(poolName);\n+      if (pool \u003d\u003d null) {\n+        throw new InvalidRequestException(\"Cache pool \" + poolName\n+            + \" does not exist.\");\n+      }\n+      String prefix \u003d \"\";\n+      if (info.getOwnerName() !\u003d null) {\n+        pool.setOwnerName(info.getOwnerName());\n+        bld.append(prefix).\n+          append(\"set owner to \").append(info.getOwnerName());\n+        prefix \u003d \"; \";\n+      }\n+      if (info.getGroupName() !\u003d null) {\n+        pool.setGroupName(info.getGroupName());\n+        bld.append(prefix).\n+          append(\"set group to \").append(info.getGroupName());\n+        prefix \u003d \"; \";\n+      }\n+      if (info.getMode() !\u003d null) {\n+        pool.setMode(info.getMode());\n+        bld.append(prefix).append(\"set mode to \" + info.getMode());\n+        prefix \u003d \"; \";\n+      }\n+      if (info.getLimit() !\u003d null) {\n+        pool.setLimit(info.getLimit());\n+        bld.append(prefix).append(\"set limit to \" + info.getLimit());\n+        prefix \u003d \"; \";\n+        // New limit changes stats, need to set needs refresh\n+        if (monitor !\u003d null) {\n+          monitor.setNeedsRescan();\n+        }\n+      }\n+      if (prefix.isEmpty()) {\n+        bld.append(\"no changes.\");\n+      }\n+    } catch (IOException e) {\n+      LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n+      throw e;\n     }\n-    if (info.getGroupName() !\u003d null) {\n-      pool.setGroupName(info.getGroupName());\n-      bld.append(prefix).\n-        append(\"set group to \").append(info.getGroupName());\n-      prefix \u003d \"; \";\n-    }\n-    if (info.getMode() !\u003d null) {\n-      pool.setMode(info.getMode());\n-      bld.append(prefix).append(\"set mode to \" + info.getMode());\n-      prefix \u003d \"; \";\n-    }\n-    if (info.getWeight() !\u003d null) {\n-      pool.setWeight(info.getWeight());\n-      bld.append(prefix).\n-        append(\"set weight to \").append(info.getWeight());\n-      prefix \u003d \"; \";\n-    }\n-    if (prefix.isEmpty()) {\n-      bld.append(\"no changes.\");\n-    }\n-    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n+    LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n+        + bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    StringBuilder bld \u003d new StringBuilder();\n    try {\n      CachePoolInfo.validate(info);\n      String poolName \u003d info.getPoolName();\n      CachePool pool \u003d cachePools.get(poolName);\n      if (pool \u003d\u003d null) {\n        throw new InvalidRequestException(\"Cache pool \" + poolName\n            + \" does not exist.\");\n      }\n      String prefix \u003d \"\";\n      if (info.getOwnerName() !\u003d null) {\n        pool.setOwnerName(info.getOwnerName());\n        bld.append(prefix).\n          append(\"set owner to \").append(info.getOwnerName());\n        prefix \u003d \"; \";\n      }\n      if (info.getGroupName() !\u003d null) {\n        pool.setGroupName(info.getGroupName());\n        bld.append(prefix).\n          append(\"set group to \").append(info.getGroupName());\n        prefix \u003d \"; \";\n      }\n      if (info.getMode() !\u003d null) {\n        pool.setMode(info.getMode());\n        bld.append(prefix).append(\"set mode to \" + info.getMode());\n        prefix \u003d \"; \";\n      }\n      if (info.getLimit() !\u003d null) {\n        pool.setLimit(info.getLimit());\n        bld.append(prefix).append(\"set limit to \" + info.getLimit());\n        prefix \u003d \"; \";\n        // New limit changes stats, need to set needs refresh\n        if (monitor !\u003d null) {\n          monitor.setNeedsRescan();\n        }\n      }\n      if (prefix.isEmpty()) {\n        bld.append(\"no changes.\");\n      }\n    } catch (IOException e) {\n      LOG.info(\"modifyCachePool of \" + info + \" failed: \", e);\n      throw e;\n    }\n    LOG.info(\"modifyCachePool of \" + info.getPoolName() + \" successful; \"\n        + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5471. CacheAdmin -listPools fails when user lacks permissions to view all pools (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541323 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/13 3:52 PM",
      "commitName": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "07/11/13 2:07 PM",
      "commitNameOld": "f79b3e6b17450e9d34c483046b7437b09dd72016",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 5.07,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n   public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     assert namesystem.hasWriteLock();\n     CachePoolInfo.validate(info);\n     String poolName \u003d info.getPoolName();\n     CachePool pool \u003d cachePools.get(poolName);\n     if (pool \u003d\u003d null) {\n-      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n+      throw new InvalidRequestException(\"Cache pool \" + poolName\n+          + \" does not exist.\");\n     }\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n     if (info.getOwnerName() !\u003d null) {\n       pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n       pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n       pool.setMode(info.getMode());\n       bld.append(prefix).append(\"set mode to \" + info.getMode());\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n       pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n     }\n     LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    CachePoolInfo.validate(info);\n    String poolName \u003d info.getPoolName();\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new InvalidRequestException(\"Cache pool \" + poolName\n          + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).append(\"set mode to \" + info.getMode());\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5096. Automatically cache new data added to a cached path (contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532924 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/13 3:15 PM",
      "commitName": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5096. Automatically cache new data added to a cached path (contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532924 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/10/13 3:15 PM",
          "commitName": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "14/10/13 3:56 PM",
          "commitNameOld": "efe545b0c219eeba61ac5259aee4d518beb74316",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 1.97,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,39 @@\n-  public synchronized void modifyCachePool(CachePoolInfo info)\n+  public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n+    assert namesystem.hasWriteLock();\n     CachePoolInfo.validate(info);\n     String poolName \u003d info.getPoolName();\n     CachePool pool \u003d cachePools.get(poolName);\n     if (pool \u003d\u003d null) {\n       throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n     }\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n     if (info.getOwnerName() !\u003d null) {\n       pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n       pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n       pool.setMode(info.getMode());\n       bld.append(prefix).append(\"set mode to \" + info.getMode());\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n       pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n     }\n     LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    CachePoolInfo.validate(info);\n    String poolName \u003d info.getPoolName();\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).append(\"set mode to \" + info.getMode());\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5096. Automatically cache new data added to a cached path (contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532924 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/10/13 3:15 PM",
          "commitName": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "14/10/13 3:56 PM",
          "commitNameOld": "efe545b0c219eeba61ac5259aee4d518beb74316",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 1.97,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,39 @@\n-  public synchronized void modifyCachePool(CachePoolInfo info)\n+  public void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n+    assert namesystem.hasWriteLock();\n     CachePoolInfo.validate(info);\n     String poolName \u003d info.getPoolName();\n     CachePool pool \u003d cachePools.get(poolName);\n     if (pool \u003d\u003d null) {\n       throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n     }\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n     if (info.getOwnerName() !\u003d null) {\n       pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n       pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n       pool.setMode(info.getMode());\n       bld.append(prefix).append(\"set mode to \" + info.getMode());\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n       pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n     }\n     LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    assert namesystem.hasWriteLock();\n    CachePoolInfo.validate(info);\n    String poolName \u003d info.getPoolName();\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).append(\"set mode to \" + info.getMode());\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "a0d9a155a4a4258f628e927e096ecf6673f788ec": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5236. Change PathBasedCacheDirective APIs to be a single value rather than batch. (Contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1525183 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/09/13 5:20 PM",
      "commitName": "a0d9a155a4a4258f628e927e096ecf6673f788ec",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "18/09/13 1:43 PM",
      "commitNameOld": "e202d4d1548a0be2f5c61ff82be8b52bd0cfce04",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,38 @@\n   public synchronized void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n+    CachePoolInfo.validate(info);\n     String poolName \u003d info.getPoolName();\n-    if (poolName.isEmpty()) {\n-      throw new IOException(\"invalid empty cache pool name\");\n-    }\n     CachePool pool \u003d cachePools.get(poolName);\n     if (pool \u003d\u003d null) {\n       throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n     }\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n     if (info.getOwnerName() !\u003d null) {\n       pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n       pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n       pool.setMode(info.getMode());\n       bld.append(prefix).append(\"set mode to \" + info.getMode());\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n       pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n     }\n     LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    CachePoolInfo.validate(info);\n    String poolName \u003d info.getPoolName();\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).append(\"set mode to \" + info.getMode());\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "02e0e158a26f81ce8375426ba0ea56db09ee36be": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5158. Add command-line support for manipulating cache directives\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1522272 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/13 8:55 PM",
      "commitName": "02e0e158a26f81ce8375426ba0ea56db09ee36be",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "09/09/13 11:53 AM",
      "commitNameOld": "3a9cd79e9ddd5a9499e28633ccccdc9eef22b813",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 2.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,40 @@\n   public synchronized void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n     String poolName \u003d info.getPoolName();\n     if (poolName.isEmpty()) {\n       throw new IOException(\"invalid empty cache pool name\");\n     }\n     CachePool pool \u003d cachePools.get(poolName);\n     if (pool \u003d\u003d null) {\n       throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n     }\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n     if (info.getOwnerName() !\u003d null) {\n       pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n       pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n       pool.setMode(info.getMode());\n-      bld.append(prefix).\n-        append(String.format(\"set mode to 0%3o\", info.getMode()));\n+      bld.append(prefix).append(\"set mode to \" + info.getMode());\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n       pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n     }\n     LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    String poolName \u003d info.getPoolName();\n    if (poolName.isEmpty()) {\n      throw new IOException(\"invalid empty cache pool name\");\n    }\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).append(\"set mode to \" + info.getMode());\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "f41f8b8842c3f26d19f7fa928070c7c07f760e4c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5163. Miscellaneous cache pool RPC fixes (Contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520665 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/13 11:52 AM",
      "commitName": "f41f8b8842c3f26d19f7fa928070c7c07f760e4c",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5163. Miscellaneous cache pool RPC fixes (Contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520665 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/09/13 11:52 AM",
          "commitName": "f41f8b8842c3f26d19f7fa928070c7c07f760e4c",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "04/09/13 11:23 AM",
          "commitNameOld": "d56d0b46e1b82ae068083ddb99872d314684dc82",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 2.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,57 +1,41 @@\n-  public synchronized void modifyCachePool(long poolId, CachePoolInfo info)\n+  public synchronized void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n-    if (poolId \u003c\u003d 0) {\n-      throw new IOException(\"invalid pool id \" + poolId);\n+    String poolName \u003d info.getPoolName();\n+    if (poolName.isEmpty()) {\n+      throw new IOException(\"invalid empty cache pool name\");\n     }\n-    if (!cachePoolsById.containsKey(poolId)) {\n-      throw new IOException(\"cache pool id \" + poolId + \" does not exist.\");\n+    CachePool pool \u003d cachePools.get(poolName);\n+    if (pool \u003d\u003d null) {\n+      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n     }\n-    CachePool pool \u003d cachePoolsById.get(poolId);\n-    // Remove the old CachePoolInfo\n-    removeCachePool(poolId);\n-    // Build up the new CachePoolInfo\n-    CachePoolInfo.Builder newInfo \u003d CachePoolInfo.newBuilder(pool.getInfo());\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n-    if (info.getPoolName() !\u003d null) {\n-      newInfo.setPoolName(info.getPoolName());\n-      bld.append(prefix).\n-      append(\"set name to \").append(info.getOwnerName());\n-      prefix \u003d \"; \";\n-    }\n     if (info.getOwnerName() !\u003d null) {\n-      newInfo.setOwnerName(info.getOwnerName());\n+      pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n-      newInfo.setGroupName(info.getGroupName());\n+      pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n-      newInfo.setMode(info.getMode());\n+      pool.setMode(info.getMode());\n       bld.append(prefix).\n-        append(String.format(\"set mode to \", info.getMode()));\n+        append(String.format(\"set mode to 0%3o\", info.getMode()));\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n-      newInfo.setWeight(info.getWeight());\n+      pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n-    } else {\n-      pool.setInfo(newInfo.build());\n     }\n-    // Put the newly modified info back in\n-    cachePoolsById.put(poolId, pool);\n-    cachePoolsByName.put(info.getPoolName(), pool);\n-    LOG.info(\"modified pool id \" + pool.getId()\n-        + \" (\" + pool.getInfo().getPoolName() + \"); \"\n-        + bld.toString());\n+    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    String poolName \u003d info.getPoolName();\n    if (poolName.isEmpty()) {\n      throw new IOException(\"invalid empty cache pool name\");\n    }\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).\n        append(String.format(\"set mode to 0%3o\", info.getMode()));\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
          "extendedDetails": {
            "oldValue": "[poolId-long, info-CachePoolInfo]",
            "newValue": "[info-CachePoolInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5163. Miscellaneous cache pool RPC fixes (Contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520665 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/09/13 11:52 AM",
          "commitName": "f41f8b8842c3f26d19f7fa928070c7c07f760e4c",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "04/09/13 11:23 AM",
          "commitNameOld": "d56d0b46e1b82ae068083ddb99872d314684dc82",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 2.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,57 +1,41 @@\n-  public synchronized void modifyCachePool(long poolId, CachePoolInfo info)\n+  public synchronized void modifyCachePool(CachePoolInfo info)\n       throws IOException {\n-    if (poolId \u003c\u003d 0) {\n-      throw new IOException(\"invalid pool id \" + poolId);\n+    String poolName \u003d info.getPoolName();\n+    if (poolName.isEmpty()) {\n+      throw new IOException(\"invalid empty cache pool name\");\n     }\n-    if (!cachePoolsById.containsKey(poolId)) {\n-      throw new IOException(\"cache pool id \" + poolId + \" does not exist.\");\n+    CachePool pool \u003d cachePools.get(poolName);\n+    if (pool \u003d\u003d null) {\n+      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n     }\n-    CachePool pool \u003d cachePoolsById.get(poolId);\n-    // Remove the old CachePoolInfo\n-    removeCachePool(poolId);\n-    // Build up the new CachePoolInfo\n-    CachePoolInfo.Builder newInfo \u003d CachePoolInfo.newBuilder(pool.getInfo());\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n-    if (info.getPoolName() !\u003d null) {\n-      newInfo.setPoolName(info.getPoolName());\n-      bld.append(prefix).\n-      append(\"set name to \").append(info.getOwnerName());\n-      prefix \u003d \"; \";\n-    }\n     if (info.getOwnerName() !\u003d null) {\n-      newInfo.setOwnerName(info.getOwnerName());\n+      pool.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n-      newInfo.setGroupName(info.getGroupName());\n+      pool.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n-      newInfo.setMode(info.getMode());\n+      pool.setMode(info.getMode());\n       bld.append(prefix).\n-        append(String.format(\"set mode to \", info.getMode()));\n+        append(String.format(\"set mode to 0%3o\", info.getMode()));\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n-      newInfo.setWeight(info.getWeight());\n+      pool.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n-    } else {\n-      pool.setInfo(newInfo.build());\n     }\n-    // Put the newly modified info back in\n-    cachePoolsById.put(poolId, pool);\n-    cachePoolsByName.put(info.getPoolName(), pool);\n-    LOG.info(\"modified pool id \" + pool.getId()\n-        + \" (\" + pool.getInfo().getPoolName() + \"); \"\n-        + bld.toString());\n+    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    String poolName \u003d info.getPoolName();\n    if (poolName.isEmpty()) {\n      throw new IOException(\"invalid empty cache pool name\");\n    }\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).\n        append(String.format(\"set mode to 0%3o\", info.getMode()));\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "d56d0b46e1b82ae068083ddb99872d314684dc82": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "commit correct version of HDFS-5121\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/13 11:23 AM",
      "commitName": "d56d0b46e1b82ae068083ddb99872d314684dc82",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "commit correct version of HDFS-5121\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520090 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/09/13 11:23 AM",
          "commitName": "d56d0b46e1b82ae068083ddb99872d314684dc82",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "03/09/13 1:38 PM",
          "commitNameOld": "97b7267977ef42201e5844df49bc37ec3d10ce16",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,57 @@\n-  public synchronized void modifyCachePool(CachePoolInfo info)\n+  public synchronized void modifyCachePool(long poolId, CachePoolInfo info)\n       throws IOException {\n-    String poolName \u003d info.getPoolName();\n-    if (poolName.isEmpty()) {\n-      throw new IOException(\"invalid empty cache pool name\");\n+    if (poolId \u003c\u003d 0) {\n+      throw new IOException(\"invalid pool id \" + poolId);\n     }\n-    CachePool pool \u003d cachePools.get(poolName);\n-    if (pool \u003d\u003d null) {\n-      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n+    if (!cachePoolsById.containsKey(poolId)) {\n+      throw new IOException(\"cache pool id \" + poolId + \" does not exist.\");\n     }\n+    CachePool pool \u003d cachePoolsById.get(poolId);\n+    // Remove the old CachePoolInfo\n+    removeCachePool(poolId);\n+    // Build up the new CachePoolInfo\n+    CachePoolInfo.Builder newInfo \u003d CachePoolInfo.newBuilder(pool.getInfo());\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n+    if (info.getPoolName() !\u003d null) {\n+      newInfo.setPoolName(info.getPoolName());\n+      bld.append(prefix).\n+      append(\"set name to \").append(info.getOwnerName());\n+      prefix \u003d \"; \";\n+    }\n     if (info.getOwnerName() !\u003d null) {\n-      pool.setOwnerName(info.getOwnerName());\n+      newInfo.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n-      pool.setGroupName(info.getGroupName());\n+      newInfo.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n-      pool.setMode(info.getMode());\n+      newInfo.setMode(info.getMode());\n       bld.append(prefix).\n-        append(String.format(\"set mode to 0%3o\", info.getMode()));\n+        append(String.format(\"set mode to \", info.getMode()));\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n-      pool.setWeight(info.getWeight());\n+      newInfo.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n+    } else {\n+      pool.setInfo(newInfo.build());\n     }\n-    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n+    // Put the newly modified info back in\n+    cachePoolsById.put(poolId, pool);\n+    cachePoolsByName.put(info.getPoolName(), pool);\n+    LOG.info(\"modified pool id \" + pool.getId()\n+        + \" (\" + pool.getInfo().getPoolName() + \"); \"\n+        + bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void modifyCachePool(long poolId, CachePoolInfo info)\n      throws IOException {\n    if (poolId \u003c\u003d 0) {\n      throw new IOException(\"invalid pool id \" + poolId);\n    }\n    if (!cachePoolsById.containsKey(poolId)) {\n      throw new IOException(\"cache pool id \" + poolId + \" does not exist.\");\n    }\n    CachePool pool \u003d cachePoolsById.get(poolId);\n    // Remove the old CachePoolInfo\n    removeCachePool(poolId);\n    // Build up the new CachePoolInfo\n    CachePoolInfo.Builder newInfo \u003d CachePoolInfo.newBuilder(pool.getInfo());\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getPoolName() !\u003d null) {\n      newInfo.setPoolName(info.getPoolName());\n      bld.append(prefix).\n      append(\"set name to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getOwnerName() !\u003d null) {\n      newInfo.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      newInfo.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      newInfo.setMode(info.getMode());\n      bld.append(prefix).\n        append(String.format(\"set mode to \", info.getMode()));\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      newInfo.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    } else {\n      pool.setInfo(newInfo.build());\n    }\n    // Put the newly modified info back in\n    cachePoolsById.put(poolId, pool);\n    cachePoolsByName.put(info.getPoolName(), pool);\n    LOG.info(\"modified pool id \" + pool.getId()\n        + \" (\" + pool.getInfo().getPoolName() + \"); \"\n        + bld.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
          "extendedDetails": {
            "oldValue": "[info-CachePoolInfo]",
            "newValue": "[poolId-long, info-CachePoolInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "commit correct version of HDFS-5121\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520090 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/09/13 11:23 AM",
          "commitName": "d56d0b46e1b82ae068083ddb99872d314684dc82",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "03/09/13 1:38 PM",
          "commitNameOld": "97b7267977ef42201e5844df49bc37ec3d10ce16",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,57 @@\n-  public synchronized void modifyCachePool(CachePoolInfo info)\n+  public synchronized void modifyCachePool(long poolId, CachePoolInfo info)\n       throws IOException {\n-    String poolName \u003d info.getPoolName();\n-    if (poolName.isEmpty()) {\n-      throw new IOException(\"invalid empty cache pool name\");\n+    if (poolId \u003c\u003d 0) {\n+      throw new IOException(\"invalid pool id \" + poolId);\n     }\n-    CachePool pool \u003d cachePools.get(poolName);\n-    if (pool \u003d\u003d null) {\n-      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n+    if (!cachePoolsById.containsKey(poolId)) {\n+      throw new IOException(\"cache pool id \" + poolId + \" does not exist.\");\n     }\n+    CachePool pool \u003d cachePoolsById.get(poolId);\n+    // Remove the old CachePoolInfo\n+    removeCachePool(poolId);\n+    // Build up the new CachePoolInfo\n+    CachePoolInfo.Builder newInfo \u003d CachePoolInfo.newBuilder(pool.getInfo());\n     StringBuilder bld \u003d new StringBuilder();\n     String prefix \u003d \"\";\n+    if (info.getPoolName() !\u003d null) {\n+      newInfo.setPoolName(info.getPoolName());\n+      bld.append(prefix).\n+      append(\"set name to \").append(info.getOwnerName());\n+      prefix \u003d \"; \";\n+    }\n     if (info.getOwnerName() !\u003d null) {\n-      pool.setOwnerName(info.getOwnerName());\n+      newInfo.setOwnerName(info.getOwnerName());\n       bld.append(prefix).\n         append(\"set owner to \").append(info.getOwnerName());\n       prefix \u003d \"; \";\n     }\n     if (info.getGroupName() !\u003d null) {\n-      pool.setGroupName(info.getGroupName());\n+      newInfo.setGroupName(info.getGroupName());\n       bld.append(prefix).\n         append(\"set group to \").append(info.getGroupName());\n       prefix \u003d \"; \";\n     }\n     if (info.getMode() !\u003d null) {\n-      pool.setMode(info.getMode());\n+      newInfo.setMode(info.getMode());\n       bld.append(prefix).\n-        append(String.format(\"set mode to 0%3o\", info.getMode()));\n+        append(String.format(\"set mode to \", info.getMode()));\n       prefix \u003d \"; \";\n     }\n     if (info.getWeight() !\u003d null) {\n-      pool.setWeight(info.getWeight());\n+      newInfo.setWeight(info.getWeight());\n       bld.append(prefix).\n         append(\"set weight to \").append(info.getWeight());\n       prefix \u003d \"; \";\n     }\n     if (prefix.isEmpty()) {\n       bld.append(\"no changes.\");\n+    } else {\n+      pool.setInfo(newInfo.build());\n     }\n-    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n+    // Put the newly modified info back in\n+    cachePoolsById.put(poolId, pool);\n+    cachePoolsByName.put(info.getPoolName(), pool);\n+    LOG.info(\"modified pool id \" + pool.getId()\n+        + \" (\" + pool.getInfo().getPoolName() + \"); \"\n+        + bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void modifyCachePool(long poolId, CachePoolInfo info)\n      throws IOException {\n    if (poolId \u003c\u003d 0) {\n      throw new IOException(\"invalid pool id \" + poolId);\n    }\n    if (!cachePoolsById.containsKey(poolId)) {\n      throw new IOException(\"cache pool id \" + poolId + \" does not exist.\");\n    }\n    CachePool pool \u003d cachePoolsById.get(poolId);\n    // Remove the old CachePoolInfo\n    removeCachePool(poolId);\n    // Build up the new CachePoolInfo\n    CachePoolInfo.Builder newInfo \u003d CachePoolInfo.newBuilder(pool.getInfo());\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getPoolName() !\u003d null) {\n      newInfo.setPoolName(info.getPoolName());\n      bld.append(prefix).\n      append(\"set name to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getOwnerName() !\u003d null) {\n      newInfo.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      newInfo.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      newInfo.setMode(info.getMode());\n      bld.append(prefix).\n        append(String.format(\"set mode to \", info.getMode()));\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      newInfo.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    } else {\n      pool.setInfo(newInfo.build());\n    }\n    // Put the newly modified info back in\n    cachePoolsById.put(poolId, pool);\n    cachePoolsByName.put(info.getPoolName(), pool);\n    LOG.info(\"modified pool id \" + pool.getId()\n        + \" (\" + pool.getInfo().getPoolName() + \"); \"\n        + bld.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "97b7267977ef42201e5844df49bc37ec3d10ce16": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5121.  Add RPCs for creating and manipulating cache pools.  (Contributed by Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1519841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/09/13 1:38 PM",
      "commitName": "97b7267977ef42201e5844df49bc37ec3d10ce16",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,41 @@\n+  public synchronized void modifyCachePool(CachePoolInfo info)\n+      throws IOException {\n+    String poolName \u003d info.getPoolName();\n+    if (poolName.isEmpty()) {\n+      throw new IOException(\"invalid empty cache pool name\");\n+    }\n+    CachePool pool \u003d cachePools.get(poolName);\n+    if (pool \u003d\u003d null) {\n+      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n+    }\n+    StringBuilder bld \u003d new StringBuilder();\n+    String prefix \u003d \"\";\n+    if (info.getOwnerName() !\u003d null) {\n+      pool.setOwnerName(info.getOwnerName());\n+      bld.append(prefix).\n+        append(\"set owner to \").append(info.getOwnerName());\n+      prefix \u003d \"; \";\n+    }\n+    if (info.getGroupName() !\u003d null) {\n+      pool.setGroupName(info.getGroupName());\n+      bld.append(prefix).\n+        append(\"set group to \").append(info.getGroupName());\n+      prefix \u003d \"; \";\n+    }\n+    if (info.getMode() !\u003d null) {\n+      pool.setMode(info.getMode());\n+      bld.append(prefix).\n+        append(String.format(\"set mode to 0%3o\", info.getMode()));\n+      prefix \u003d \"; \";\n+    }\n+    if (info.getWeight() !\u003d null) {\n+      pool.setWeight(info.getWeight());\n+      bld.append(prefix).\n+        append(\"set weight to \").append(info.getWeight());\n+      prefix \u003d \"; \";\n+    }\n+    if (prefix.isEmpty()) {\n+      bld.append(\"no changes.\");\n+    }\n+    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void modifyCachePool(CachePoolInfo info)\n      throws IOException {\n    String poolName \u003d info.getPoolName();\n    if (poolName.isEmpty()) {\n      throw new IOException(\"invalid empty cache pool name\");\n    }\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"cache pool \" + poolName + \" does not exist.\");\n    }\n    StringBuilder bld \u003d new StringBuilder();\n    String prefix \u003d \"\";\n    if (info.getOwnerName() !\u003d null) {\n      pool.setOwnerName(info.getOwnerName());\n      bld.append(prefix).\n        append(\"set owner to \").append(info.getOwnerName());\n      prefix \u003d \"; \";\n    }\n    if (info.getGroupName() !\u003d null) {\n      pool.setGroupName(info.getGroupName());\n      bld.append(prefix).\n        append(\"set group to \").append(info.getGroupName());\n      prefix \u003d \"; \";\n    }\n    if (info.getMode() !\u003d null) {\n      pool.setMode(info.getMode());\n      bld.append(prefix).\n        append(String.format(\"set mode to 0%3o\", info.getMode()));\n      prefix \u003d \"; \";\n    }\n    if (info.getWeight() !\u003d null) {\n      pool.setWeight(info.getWeight());\n      bld.append(prefix).\n        append(\"set weight to \").append(info.getWeight());\n      prefix \u003d \"; \";\n    }\n    if (prefix.isEmpty()) {\n      bld.append(\"no changes.\");\n    }\n    LOG.info(\"modified \" + poolName + \"; \" + bld.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java"
    }
  }
}