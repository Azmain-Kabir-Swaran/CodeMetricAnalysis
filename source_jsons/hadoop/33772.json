{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OCIContainerRuntime.java",
  "functionName": "allowPrivilegedContainerExecution",
  "functionId": "allowPrivilegedContainerExecution___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
  "functionStartLine": 283,
  "functionEndLine": 323,
  "numCommitsSeen": 90,
  "timeTaken": 5728,
  "changeHistory": [
    "29465bf169a7e348a4f32265083450faf66d5631",
    "5f11288e41fca2e414dcbea130c7702e29d4d610",
    "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3",
    "2054324d471a6152ba34284b4259d4fd09c71704",
    "4a771d9010de0867ac901bead075383ddf1f30dc",
    "7f05ff7a4e654693eaaa216ee5fc6e24112e0e23",
    "e39ae0e676f77fab216e2281ae946ab8c647733f"
  ],
  "changeHistoryShort": {
    "29465bf169a7e348a4f32265083450faf66d5631": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "5f11288e41fca2e414dcbea130c7702e29d4d610": "Ybodychange",
    "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3": "Ybodychange",
    "2054324d471a6152ba34284b4259d4fd09c71704": "Ybodychange",
    "4a771d9010de0867ac901bead075383ddf1f30dc": "Ybodychange",
    "7f05ff7a4e654693eaaa216ee5fc6e24112e0e23": "Ybodychange",
    "e39ae0e676f77fab216e2281ae946ab8c647733f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29465bf169a7e348a4f32265083450faf66d5631": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
      "commitDate": "28/06/19 2:18 PM",
      "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,41 @@\n-  private boolean allowPrivilegedContainerExecution(Container container)\n+  protected boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n \n     if(!isContainerRequestedAsPrivileged(container)) {\n       return false;\n     }\n \n     LOG.info(\"Privileged container requested for : \" + container\n         .getContainerId().toString());\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n-    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n-        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n-            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n+    boolean privilegedContainersEnabledOnCluster \u003d\n+        getPrivilegedContainersEnabledOnCluster();\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n-    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n+    if (!getPrivilegedContainersAcl().isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     LOG.info(\"All checks pass. Launching privileged container for : \"\n         + container.getContainerId().toString());\n \n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n\n    if(!isContainerRequestedAsPrivileged(container)) {\n      return false;\n    }\n\n    LOG.info(\"Privileged container requested for : \" + container\n        .getContainerId().toString());\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d\n        getPrivilegedContainersEnabledOnCluster();\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!getPrivilegedContainersAcl().isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    LOG.info(\"All checks pass. Launching privileged container for : \"\n        + container.getContainerId().toString());\n\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
            "oldMethodName": "allowPrivilegedContainerExecution",
            "newMethodName": "allowPrivilegedContainerExecution"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,41 @@\n-  private boolean allowPrivilegedContainerExecution(Container container)\n+  protected boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n \n     if(!isContainerRequestedAsPrivileged(container)) {\n       return false;\n     }\n \n     LOG.info(\"Privileged container requested for : \" + container\n         .getContainerId().toString());\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n-    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n-        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n-            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n+    boolean privilegedContainersEnabledOnCluster \u003d\n+        getPrivilegedContainersEnabledOnCluster();\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n-    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n+    if (!getPrivilegedContainersAcl().isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     LOG.info(\"All checks pass. Launching privileged container for : \"\n         + container.getContainerId().toString());\n \n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n\n    if(!isContainerRequestedAsPrivileged(container)) {\n      return false;\n    }\n\n    LOG.info(\"Privileged container requested for : \" + container\n        .getContainerId().toString());\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d\n        getPrivilegedContainersEnabledOnCluster();\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!getPrivilegedContainersAcl().isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    LOG.info(\"All checks pass. Launching privileged container for : \"\n        + container.getContainerId().toString());\n\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,41 @@\n-  private boolean allowPrivilegedContainerExecution(Container container)\n+  protected boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n \n     if(!isContainerRequestedAsPrivileged(container)) {\n       return false;\n     }\n \n     LOG.info(\"Privileged container requested for : \" + container\n         .getContainerId().toString());\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n-    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n-        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n-            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n+    boolean privilegedContainersEnabledOnCluster \u003d\n+        getPrivilegedContainersEnabledOnCluster();\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n-    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n+    if (!getPrivilegedContainersAcl().isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     LOG.info(\"All checks pass. Launching privileged container for : \"\n         + container.getContainerId().toString());\n \n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n\n    if(!isContainerRequestedAsPrivileged(container)) {\n      return false;\n    }\n\n    LOG.info(\"Privileged container requested for : \" + container\n        .getContainerId().toString());\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d\n        getPrivilegedContainersEnabledOnCluster();\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!getPrivilegedContainersAcl().isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    LOG.info(\"All checks pass. Launching privileged container for : \"\n        + container.getContainerId().toString());\n\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {}
        }
      ]
    },
    "5f11288e41fca2e414dcbea130c7702e29d4d610": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8206. Sending a kill does not immediately kill docker containers. Contributed by Eric Badger\n",
      "commitDate": "22/05/18 7:27 AM",
      "commitName": "5f11288e41fca2e414dcbea130c7702e29d4d610",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "17/05/18 2:29 PM",
      "commitNameOld": "d45a0b7d73519acb78cd94ac3186bd8481f6c13e",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 4.71,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,42 @@\n   private boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n-    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n-        .getEnvironment();\n-    String runPrivilegedContainerEnvVar \u003d environment\n-        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n \n-    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n-      return false;\n-    }\n-\n-    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n-      LOG.warn(\"NOT running a privileged container. Value of \" +\n-          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n-          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n+    if(!isContainerRequestedAsPrivileged(container)) {\n       return false;\n     }\n \n     LOG.info(\"Privileged container requested for : \" + container\n         .getContainerId().toString());\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n     boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n         YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n             YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n     if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     LOG.info(\"All checks pass. Launching privileged container for : \"\n         + container.getContainerId().toString());\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n\n    if(!isContainerRequestedAsPrivileged(container)) {\n      return false;\n    }\n\n    LOG.info(\"Privileged container requested for : \" + container\n        .getContainerId().toString());\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    LOG.info(\"All checks pass. Launching privileged container for : \"\n        + container.getContainerId().toString());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6804. Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
      "commitDate": "25/07/17 9:57 AM",
      "commitName": "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3",
      "commitAuthor": "Jian He",
      "commitDateOld": "22/07/17 9:56 PM",
      "commitNameOld": "2054324d471a6152ba34284b4259d4fd09c71704",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 2.5,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,53 @@\n   private boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n     String runPrivilegedContainerEnvVar \u003d environment\n         .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n \n     if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n       return false;\n     }\n \n     if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n       LOG.warn(\"NOT running a privileged container. Value of \" +\n           ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n           + \"is invalid: \" + runPrivilegedContainerEnvVar);\n       return false;\n     }\n \n-    if (LOG.isInfoEnabled()) {\n-      LOG.info(\"Privileged container requested for : \" + container\n-          .getContainerId().toString());\n-    }\n+    LOG.info(\"Privileged container requested for : \" + container\n+        .getContainerId().toString());\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n     boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n         YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n             YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n     if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n-    if (LOG.isInfoEnabled()) {\n-      LOG.info(\"All checks pass. Launching privileged container for : \"\n-          + container.getContainerId().toString());\n-    }\n+    LOG.info(\"All checks pass. Launching privileged container for : \"\n+        + container.getContainerId().toString());\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String runPrivilegedContainerEnvVar \u003d environment\n        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n\n    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n      return false;\n    }\n\n    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n      LOG.warn(\"NOT running a privileged container. Value of \" +\n          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n      return false;\n    }\n\n    LOG.info(\"Privileged container requested for : \" + container\n        .getContainerId().toString());\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    LOG.info(\"All checks pass. Launching privileged container for : \"\n        + container.getContainerId().toString());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "2054324d471a6152ba34284b4259d4fd09c71704": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-6804. [YARN core changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\"\n\nThis reverts commit 4a771d9010de0867ac901bead075383ddf1f30dc.\n",
      "commitDate": "22/07/17 9:56 PM",
      "commitName": "2054324d471a6152ba34284b4259d4fd09c71704",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "21/07/17 11:31 AM",
      "commitNameOld": "4a771d9010de0867ac901bead075383ddf1f30dc",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 1.43,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,57 @@\n   private boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n     String runPrivilegedContainerEnvVar \u003d environment\n         .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n \n     if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n       return false;\n     }\n \n     if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n       LOG.warn(\"NOT running a privileged container. Value of \" +\n           ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n           + \"is invalid: \" + runPrivilegedContainerEnvVar);\n       return false;\n     }\n \n-    LOG.info(\"Privileged container requested for : \" + container\n-        .getContainerId().toString());\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"Privileged container requested for : \" + container\n+          .getContainerId().toString());\n+    }\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n     boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n         YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n             YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n     if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n-    LOG.info(\"All checks pass. Launching privileged container for : \"\n-        + container.getContainerId().toString());\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"All checks pass. Launching privileged container for : \"\n+          + container.getContainerId().toString());\n+    }\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String runPrivilegedContainerEnvVar \u003d environment\n        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n\n    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n      return false;\n    }\n\n    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n      LOG.warn(\"NOT running a privileged container. Value of \" +\n          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n      return false;\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"Privileged container requested for : \" + container\n          .getContainerId().toString());\n    }\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"All checks pass. Launching privileged container for : \"\n          + container.getContainerId().toString());\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "4a771d9010de0867ac901bead075383ddf1f30dc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6804. [YARN core changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
      "commitDate": "21/07/17 11:31 AM",
      "commitName": "4a771d9010de0867ac901bead075383ddf1f30dc",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/05/17 9:59 PM",
      "commitNameOld": "e120ee865aa78eaff4a80122c5f3207a97b4924d",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 64.56,
      "commitsBetweenForRepo": 309,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,53 @@\n   private boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n     String runPrivilegedContainerEnvVar \u003d environment\n         .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n \n     if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n       return false;\n     }\n \n     if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n       LOG.warn(\"NOT running a privileged container. Value of \" +\n           ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n           + \"is invalid: \" + runPrivilegedContainerEnvVar);\n       return false;\n     }\n \n-    if (LOG.isInfoEnabled()) {\n-      LOG.info(\"Privileged container requested for : \" + container\n-          .getContainerId().toString());\n-    }\n+    LOG.info(\"Privileged container requested for : \" + container\n+        .getContainerId().toString());\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n     boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n         YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n             YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n     if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n-    if (LOG.isInfoEnabled()) {\n-      LOG.info(\"All checks pass. Launching privileged container for : \"\n-          + container.getContainerId().toString());\n-    }\n+    LOG.info(\"All checks pass. Launching privileged container for : \"\n+        + container.getContainerId().toString());\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String runPrivilegedContainerEnvVar \u003d environment\n        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n\n    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n      return false;\n    }\n\n    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n      LOG.warn(\"NOT running a privileged container. Value of \" +\n          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n      return false;\n    }\n\n    LOG.info(\"Privileged container requested for : \" + container\n        .getContainerId().toString());\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    LOG.info(\"All checks pass. Launching privileged container for : \"\n        + container.getContainerId().toString());\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "7f05ff7a4e654693eaaa216ee5fc6e24112e0e23": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5455. Update Javadocs for LinuxContainerExecutor. Contributed by Daniel Templeton.\n",
      "commitDate": "17/08/16 3:04 AM",
      "commitName": "7f05ff7a4e654693eaaa216ee5fc6e24112e0e23",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "09/08/16 3:34 AM",
      "commitNameOld": "522ddbde79cd453cac066b6136f004f54e2123b0",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 7.98,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,57 @@\n   private boolean allowPrivilegedContainerExecution(Container container)\n       throws ContainerExecutionException {\n-    //For a privileged container to be run all of the following three conditions\n-    // must be satisfied:\n-    //1) Submitting user must request for a privileged container\n-    //2) Privileged containers must be enabled on the cluster\n-    //3) Submitting user must be whitelisted to run a privileged container\n-\n     Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n         .getEnvironment();\n     String runPrivilegedContainerEnvVar \u003d environment\n         .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n \n     if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n       return false;\n     }\n \n     if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n       LOG.warn(\"NOT running a privileged container. Value of \" +\n           ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n           + \"is invalid: \" + runPrivilegedContainerEnvVar);\n       return false;\n     }\n \n     if (LOG.isInfoEnabled()) {\n       LOG.info(\"Privileged container requested for : \" + container\n           .getContainerId().toString());\n     }\n \n     //Ok, so we have been asked to run a privileged container. Security\n     // checks need to be run. Each violation is an error.\n \n     //check if privileged containers are enabled.\n     boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n         YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n             YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n \n     if (!privilegedContainersEnabledOnCluster) {\n       String message \u003d \"Privileged container being requested but privileged \"\n           + \"containers are not enabled on this cluster\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     //check if submitting user is in the whitelist.\n     String submittingUser \u003d container.getUser();\n     UserGroupInformation submitterUgi \u003d UserGroupInformation\n         .createRemoteUser(submittingUser);\n \n     if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n       String message \u003d \"Cannot launch privileged container. Submitting user (\"\n           + submittingUser + \") fails ACL check.\";\n       LOG.warn(message);\n       throw new ContainerExecutionException(message);\n     }\n \n     if (LOG.isInfoEnabled()) {\n       LOG.info(\"All checks pass. Launching privileged container for : \"\n           + container.getContainerId().toString());\n     }\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String runPrivilegedContainerEnvVar \u003d environment\n        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n\n    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n      return false;\n    }\n\n    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n      LOG.warn(\"NOT running a privileged container. Value of \" +\n          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n      return false;\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"Privileged container requested for : \" + container\n          .getContainerId().toString());\n    }\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"All checks pass. Launching privileged container for : \"\n          + container.getContainerId().toString());\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "e39ae0e676f77fab216e2281ae946ab8c647733f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4262. Allow whitelisted users to run privileged docker containers. Contributed by Sidharta Seethana.\n",
      "commitDate": "19/10/15 7:49 AM",
      "commitName": "e39ae0e676f77fab216e2281ae946ab8c647733f",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,63 @@\n+  private boolean allowPrivilegedContainerExecution(Container container)\n+      throws ContainerExecutionException {\n+    //For a privileged container to be run all of the following three conditions\n+    // must be satisfied:\n+    //1) Submitting user must request for a privileged container\n+    //2) Privileged containers must be enabled on the cluster\n+    //3) Submitting user must be whitelisted to run a privileged container\n+\n+    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n+        .getEnvironment();\n+    String runPrivilegedContainerEnvVar \u003d environment\n+        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n+\n+    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n+      return false;\n+    }\n+\n+    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n+      LOG.warn(\"NOT running a privileged container. Value of \" +\n+          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n+          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n+      return false;\n+    }\n+\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"Privileged container requested for : \" + container\n+          .getContainerId().toString());\n+    }\n+\n+    //Ok, so we have been asked to run a privileged container. Security\n+    // checks need to be run. Each violation is an error.\n+\n+    //check if privileged containers are enabled.\n+    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n+        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n+            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n+\n+    if (!privilegedContainersEnabledOnCluster) {\n+      String message \u003d \"Privileged container being requested but privileged \"\n+          + \"containers are not enabled on this cluster\";\n+      LOG.warn(message);\n+      throw new ContainerExecutionException(message);\n+    }\n+\n+    //check if submitting user is in the whitelist.\n+    String submittingUser \u003d container.getUser();\n+    UserGroupInformation submitterUgi \u003d UserGroupInformation\n+        .createRemoteUser(submittingUser);\n+\n+    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n+      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n+          + submittingUser + \") fails ACL check.\";\n+      LOG.warn(message);\n+      throw new ContainerExecutionException(message);\n+    }\n+\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"All checks pass. Launching privileged container for : \"\n+          + container.getContainerId().toString());\n+    }\n+\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean allowPrivilegedContainerExecution(Container container)\n      throws ContainerExecutionException {\n    //For a privileged container to be run all of the following three conditions\n    // must be satisfied:\n    //1) Submitting user must request for a privileged container\n    //2) Privileged containers must be enabled on the cluster\n    //3) Submitting user must be whitelisted to run a privileged container\n\n    Map\u003cString, String\u003e environment \u003d container.getLaunchContext()\n        .getEnvironment();\n    String runPrivilegedContainerEnvVar \u003d environment\n        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);\n\n    if (runPrivilegedContainerEnvVar \u003d\u003d null) {\n      return false;\n    }\n\n    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase(\"true\")) {\n      LOG.warn(\"NOT running a privileged container. Value of \" +\n          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER\n          + \"is invalid: \" + runPrivilegedContainerEnvVar);\n      return false;\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"Privileged container requested for : \" + container\n          .getContainerId().toString());\n    }\n\n    //Ok, so we have been asked to run a privileged container. Security\n    // checks need to be run. Each violation is an error.\n\n    //check if privileged containers are enabled.\n    boolean privilegedContainersEnabledOnCluster \u003d conf.getBoolean(\n        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,\n            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);\n\n    if (!privilegedContainersEnabledOnCluster) {\n      String message \u003d \"Privileged container being requested but privileged \"\n          + \"containers are not enabled on this cluster\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    //check if submitting user is in the whitelist.\n    String submittingUser \u003d container.getUser();\n    UserGroupInformation submitterUgi \u003d UserGroupInformation\n        .createRemoteUser(submittingUser);\n\n    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {\n      String message \u003d \"Cannot launch privileged container. Submitting user (\"\n          + submittingUser + \") fails ACL check.\";\n      LOG.warn(message);\n      throw new ContainerExecutionException(message);\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(\"All checks pass. Launching privileged container for : \"\n          + container.getContainerId().toString());\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}