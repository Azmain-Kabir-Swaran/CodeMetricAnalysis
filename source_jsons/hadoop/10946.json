{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectoryScanner.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
  "functionStartLine": 363,
  "functionEndLine": 384,
  "numCommitsSeen": 60,
  "timeTaken": 5857,
  "changeHistory": [
    "1dc0adfac0ee4821c67366728c70be9b59477b0f",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "1dc0adfac0ee4821c67366728c70be9b59477b0f": "Ybodychange",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": "Ybodychange",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1dc0adfac0ee4821c67366728c70be9b59477b0f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13947. Review of DirectoryScanner Class. Contributed by BELUGA BEHR.\n",
      "commitDate": "03/10/18 11:19 AM",
      "commitName": "1dc0adfac0ee4821c67366728c70be9b59477b0f",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 26.86,
      "commitsBetweenForRepo": 283,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public void run() {\n+    if (!shouldRun.get()) {\n+      // shutdown has been activated\n+      LOG.warn(\n+          \"This cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n+      return;\n+    }\n     try {\n-      if (!shouldRun) {\n-        //shutdown has been activated\n-        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n-        return;\n-      }\n-\n-      //We\u0027re are okay to run - do it\n-      reconcile();      \n-      \n+      reconcile();\n     } catch (Exception e) {\n-      //Log and continue - allows Executor to run again next cycle\n-      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n+      // Log and continue - allows Executor to run again next cycle\n+      LOG.error(\n+          \"Exception during DirectoryScanner execution - will continue next cycle\",\n+          e);\n     } catch (Error er) {\n-      //Non-recoverable error - re-throw after logging the problem\n-      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n+      // Non-recoverable error - re-throw after logging the problem\n+      LOG.error(\n+          \"System Error during DirectoryScanner execution - permanently terminating periodic scanner\",\n+          er);\n       throw er;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    if (!shouldRun.get()) {\n      // shutdown has been activated\n      LOG.warn(\n          \"This cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n      return;\n    }\n    try {\n      reconcile();\n    } catch (Exception e) {\n      // Log and continue - allows Executor to run again next cycle\n      LOG.error(\n          \"Exception during DirectoryScanner execution - will continue next cycle\",\n          e);\n    } catch (Error er) {\n      // Non-recoverable error - re-throw after logging the problem\n      LOG.error(\n          \"System Error during DirectoryScanner execution - permanently terminating periodic scanner\",\n          er);\n      throw er;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2686. Remove DistributedUpgrade related code. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:18 PM",
      "commitName": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "15/07/12 7:58 PM",
      "commitNameOld": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 36.76,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,20 @@\n   public void run() {\n     try {\n       if (!shouldRun) {\n         //shutdown has been activated\n         LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n         return;\n       }\n \n-      String[] bpids \u003d dataset.getBlockPoolList();\n-      for(String bpid : bpids) {\n-        UpgradeManagerDatanode um \u003d \n-          datanode.getUpgradeManagerDatanode(bpid);\n-        if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n-          //If distributed upgrades underway, exit and wait for next cycle.\n-          LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n-          return; \n-        }\n-      }\n-      \n       //We\u0027re are okay to run - do it\n       reconcile();      \n       \n     } catch (Exception e) {\n       //Log and continue - allows Executor to run again next cycle\n       LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n     } catch (Error er) {\n       //Non-recoverable error - re-throw after logging the problem\n       LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n       throw er;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    try {\n      if (!shouldRun) {\n        //shutdown has been activated\n        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n        return;\n      }\n\n      //We\u0027re are okay to run - do it\n      reconcile();      \n      \n    } catch (Exception e) {\n      //Log and continue - allows Executor to run again next cycle\n      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n    } catch (Error er) {\n      //Non-recoverable error - re-throw after logging the problem\n      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n      throw er;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2887. FSVolume, is a part of FSDatasetInterface implementation, should not be referred outside FSDataset.  A new FSVolumeInterface is defined.  The BlockVolumeChoosingPolicy.chooseVolume(..) method signature is also updated.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/02/12 12:58 PM",
      "commitName": "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 167.86,
      "commitsBetweenForRepo": 1072,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public void run() {\n     try {\n       if (!shouldRun) {\n         //shutdown has been activated\n         LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n         return;\n       }\n \n-      String[] bpids \u003d dataset.getBPIdlist();\n+      String[] bpids \u003d dataset.getBlockPoolList();\n       for(String bpid : bpids) {\n         UpgradeManagerDatanode um \u003d \n           datanode.getUpgradeManagerDatanode(bpid);\n         if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n           //If distributed upgrades underway, exit and wait for next cycle.\n           LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n           return; \n         }\n       }\n       \n       //We\u0027re are okay to run - do it\n       reconcile();      \n       \n     } catch (Exception e) {\n       //Log and continue - allows Executor to run again next cycle\n       LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n     } catch (Error er) {\n       //Non-recoverable error - re-throw after logging the problem\n       LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n       throw er;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    try {\n      if (!shouldRun) {\n        //shutdown has been activated\n        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n        return;\n      }\n\n      String[] bpids \u003d dataset.getBlockPoolList();\n      for(String bpid : bpids) {\n        UpgradeManagerDatanode um \u003d \n          datanode.getUpgradeManagerDatanode(bpid);\n        if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n          //If distributed upgrades underway, exit and wait for next cycle.\n          LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n          return; \n        }\n      }\n      \n      //We\u0027re are okay to run - do it\n      reconcile();      \n      \n    } catch (Exception e) {\n      //Log and continue - allows Executor to run again next cycle\n      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n    } catch (Error er) {\n      //Non-recoverable error - re-throw after logging the problem\n      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n      throw er;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void run() {\n    try {\n      if (!shouldRun) {\n        //shutdown has been activated\n        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n        return;\n      }\n\n      String[] bpids \u003d dataset.getBPIdlist();\n      for(String bpid : bpids) {\n        UpgradeManagerDatanode um \u003d \n          datanode.getUpgradeManagerDatanode(bpid);\n        if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n          //If distributed upgrades underway, exit and wait for next cycle.\n          LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n          return; \n        }\n      }\n      \n      //We\u0027re are okay to run - do it\n      reconcile();      \n      \n    } catch (Exception e) {\n      //Log and continue - allows Executor to run again next cycle\n      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n    } catch (Error er) {\n      //Non-recoverable error - re-throw after logging the problem\n      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n      throw er;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void run() {\n    try {\n      if (!shouldRun) {\n        //shutdown has been activated\n        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n        return;\n      }\n\n      String[] bpids \u003d dataset.getBPIdlist();\n      for(String bpid : bpids) {\n        UpgradeManagerDatanode um \u003d \n          datanode.getUpgradeManagerDatanode(bpid);\n        if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n          //If distributed upgrades underway, exit and wait for next cycle.\n          LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n          return; \n        }\n      }\n      \n      //We\u0027re are okay to run - do it\n      reconcile();      \n      \n    } catch (Exception e) {\n      //Log and continue - allows Executor to run again next cycle\n      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n    } catch (Error er) {\n      //Non-recoverable error - re-throw after logging the problem\n      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n      throw er;\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,31 @@\n+  public void run() {\n+    try {\n+      if (!shouldRun) {\n+        //shutdown has been activated\n+        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n+        return;\n+      }\n+\n+      String[] bpids \u003d dataset.getBPIdlist();\n+      for(String bpid : bpids) {\n+        UpgradeManagerDatanode um \u003d \n+          datanode.getUpgradeManagerDatanode(bpid);\n+        if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n+          //If distributed upgrades underway, exit and wait for next cycle.\n+          LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n+          return; \n+        }\n+      }\n+      \n+      //We\u0027re are okay to run - do it\n+      reconcile();      \n+      \n+    } catch (Exception e) {\n+      //Log and continue - allows Executor to run again next cycle\n+      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n+    } catch (Error er) {\n+      //Non-recoverable error - re-throw after logging the problem\n+      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n+      throw er;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    try {\n      if (!shouldRun) {\n        //shutdown has been activated\n        LOG.warn(\"this cycle terminating immediately because \u0027shouldRun\u0027 has been deactivated\");\n        return;\n      }\n\n      String[] bpids \u003d dataset.getBPIdlist();\n      for(String bpid : bpids) {\n        UpgradeManagerDatanode um \u003d \n          datanode.getUpgradeManagerDatanode(bpid);\n        if (um !\u003d null \u0026\u0026 !um.isUpgradeCompleted()) {\n          //If distributed upgrades underway, exit and wait for next cycle.\n          LOG.warn(\"this cycle terminating immediately because Distributed Upgrade is in process\");\n          return; \n        }\n      }\n      \n      //We\u0027re are okay to run - do it\n      reconcile();      \n      \n    } catch (Exception e) {\n      //Log and continue - allows Executor to run again next cycle\n      LOG.error(\"Exception during DirectoryScanner execution - will continue next cycle\", e);\n    } catch (Error er) {\n      //Non-recoverable error - re-throw after logging the problem\n      LOG.error(\"System Error during DirectoryScanner execution - permanently terminating periodic scanner\", er);\n      throw er;\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
    }
  }
}