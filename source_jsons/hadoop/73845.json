{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "doAsyncWrite",
  "functionId": "doAsyncWrite___key-SelectionKey",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 1575,
  "functionEndLine": 1598,
  "numCommitsSeen": 205,
  "timeTaken": 6403,
  "changeHistory": [
    "76cd81f4b656f0d40a4b2122e15f04ea53d8020b",
    "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
    "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "76cd81f4b656f0d40a4b2122e15f04ea53d8020b": "Ybodychange",
    "81485dbfc1ffb8daa609be8eb31094cc28646dd3": "Ybodychange",
    "d288a0ba8364d81aacda9f4a21022eecb6dc4e22": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76cd81f4b656f0d40a4b2122e15f04ea53d8020b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
      "commitDate": "01/09/16 1:44 PM",
      "commitName": "76cd81f4b656f0d40a4b2122e15f04ea53d8020b",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "25/08/16 2:04 PM",
      "commitNameOld": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     private void doAsyncWrite(SelectionKey key) throws IOException {\n-      Call call \u003d (Call)key.attachment();\n+      RpcCall call \u003d (RpcCall)key.attachment();\n       if (call \u003d\u003d null) {\n         return;\n       }\n       if (key.channel() !\u003d call.connection.channel) {\n         throw new IOException(\"doAsyncWrite: bad channel\");\n       }\n \n       synchronized(call.connection.responseQueue) {\n         if (processResponse(call.connection.responseQueue, false)) {\n           try {\n             key.interestOps(0);\n           } catch (CancelledKeyException e) {\n             /* The Listener/reader might have closed the socket.\n              * We don\u0027t explicitly cancel the key, so not sure if this will\n              * ever fire.\n              * This warning could be removed.\n              */\n             LOG.warn(\"Exception while changing ops : \" + e);\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      RpcCall call \u003d (RpcCall)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "81485dbfc1ffb8daa609be8eb31094cc28646dd3": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\"\n\nThis reverts commit d288a0ba8364d81aacda9f4a21022eecb6dc4e22.\n",
      "commitDate": "25/08/16 2:04 PM",
      "commitName": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "25/08/16 9:44 AM",
      "commitNameOld": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     private void doAsyncWrite(SelectionKey key) throws IOException {\n-      RpcCall call \u003d (RpcCall)key.attachment();\n+      Call call \u003d (Call)key.attachment();\n       if (call \u003d\u003d null) {\n         return;\n       }\n       if (key.channel() !\u003d call.connection.channel) {\n         throw new IOException(\"doAsyncWrite: bad channel\");\n       }\n \n       synchronized(call.connection.responseQueue) {\n         if (processResponse(call.connection.responseQueue, false)) {\n           try {\n             key.interestOps(0);\n           } catch (CancelledKeyException e) {\n             /* The Listener/reader might have closed the socket.\n              * We don\u0027t explicitly cancel the key, so not sure if this will\n              * ever fire.\n              * This warning could be removed.\n              */\n             LOG.warn(\"Exception while changing ops : \" + e);\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      Call call \u003d (Call)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "d288a0ba8364d81aacda9f4a21022eecb6dc4e22": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
      "commitDate": "25/08/16 9:44 AM",
      "commitName": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "03/08/16 11:22 AM",
      "commitNameOld": "580a8334963709e728ed677c815fb7fef9bca70e",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 21.93,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     private void doAsyncWrite(SelectionKey key) throws IOException {\n-      Call call \u003d (Call)key.attachment();\n+      RpcCall call \u003d (RpcCall)key.attachment();\n       if (call \u003d\u003d null) {\n         return;\n       }\n       if (key.channel() !\u003d call.connection.channel) {\n         throw new IOException(\"doAsyncWrite: bad channel\");\n       }\n \n       synchronized(call.connection.responseQueue) {\n         if (processResponse(call.connection.responseQueue, false)) {\n           try {\n             key.interestOps(0);\n           } catch (CancelledKeyException e) {\n             /* The Listener/reader might have closed the socket.\n              * We don\u0027t explicitly cancel the key, so not sure if this will\n              * ever fire.\n              * This warning could be removed.\n              */\n             LOG.warn(\"Exception while changing ops : \" + e);\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      RpcCall call \u003d (RpcCall)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      Call call \u003d (Call)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      Call call \u003d (Call)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/Server.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      Call call \u003d (Call)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/Server.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/Server.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+    private void doAsyncWrite(SelectionKey key) throws IOException {\n+      Call call \u003d (Call)key.attachment();\n+      if (call \u003d\u003d null) {\n+        return;\n+      }\n+      if (key.channel() !\u003d call.connection.channel) {\n+        throw new IOException(\"doAsyncWrite: bad channel\");\n+      }\n+\n+      synchronized(call.connection.responseQueue) {\n+        if (processResponse(call.connection.responseQueue, false)) {\n+          try {\n+            key.interestOps(0);\n+          } catch (CancelledKeyException e) {\n+            /* The Listener/reader might have closed the socket.\n+             * We don\u0027t explicitly cancel the key, so not sure if this will\n+             * ever fire.\n+             * This warning could be removed.\n+             */\n+            LOG.warn(\"Exception while changing ops : \" + e);\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void doAsyncWrite(SelectionKey key) throws IOException {\n      Call call \u003d (Call)key.attachment();\n      if (call \u003d\u003d null) {\n        return;\n      }\n      if (key.channel() !\u003d call.connection.channel) {\n        throw new IOException(\"doAsyncWrite: bad channel\");\n      }\n\n      synchronized(call.connection.responseQueue) {\n        if (processResponse(call.connection.responseQueue, false)) {\n          try {\n            key.interestOps(0);\n          } catch (CancelledKeyException e) {\n            /* The Listener/reader might have closed the socket.\n             * We don\u0027t explicitly cancel the key, so not sure if this will\n             * ever fire.\n             * This warning could be removed.\n             */\n            LOG.warn(\"Exception while changing ops : \" + e);\n          }\n        }\n      }\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}