{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___proto-ZoneReencryptionStatusProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 3120,
  "functionEndLine": 3150,
  "numCommitsSeen": 80,
  "timeTaken": 2682,
  "changeHistory": [
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,31 @@\n+  public static ZoneReencryptionStatus convert(\n+      ZoneReencryptionStatusProto proto) {\n+    ZoneReencryptionStatus.State state;\n+    switch (proto.getState()) {\n+    case SUBMITTED:\n+      state \u003d ZoneReencryptionStatus.State.Submitted;\n+      break;\n+    case PROCESSING:\n+      state \u003d ZoneReencryptionStatus.State.Processing;\n+      break;\n+    case COMPLETED:\n+      state \u003d ZoneReencryptionStatus.State.Completed;\n+      break;\n+    default:\n+      throw new IllegalArgumentException(\"Unknown state \" + proto.getState());\n+    }\n+    ZoneReencryptionStatus.Builder builder \u003d new ZoneReencryptionStatus.\n+        Builder().\n+        id(proto.getId()).zoneName(proto.getPath()).state(state)\n+        .ezKeyVersionName(proto.getEzKeyVersionName())\n+        .submissionTime(proto.getSubmissionTime()).canceled(proto.getCanceled())\n+        .filesReencrypted(proto.getNumReencrypted())\n+        .fileReencryptionFailures(proto.getNumFailures());\n+    if (proto.hasCompletionTime()) {\n+      builder.completionTime(proto.getCompletionTime());\n+    }\n+    if (proto.hasLastFile()) {\n+      builder.lastCheckpointFile(proto.getLastFile());\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ZoneReencryptionStatus convert(\n      ZoneReencryptionStatusProto proto) {\n    ZoneReencryptionStatus.State state;\n    switch (proto.getState()) {\n    case SUBMITTED:\n      state \u003d ZoneReencryptionStatus.State.Submitted;\n      break;\n    case PROCESSING:\n      state \u003d ZoneReencryptionStatus.State.Processing;\n      break;\n    case COMPLETED:\n      state \u003d ZoneReencryptionStatus.State.Completed;\n      break;\n    default:\n      throw new IllegalArgumentException(\"Unknown state \" + proto.getState());\n    }\n    ZoneReencryptionStatus.Builder builder \u003d new ZoneReencryptionStatus.\n        Builder().\n        id(proto.getId()).zoneName(proto.getPath()).state(state)\n        .ezKeyVersionName(proto.getEzKeyVersionName())\n        .submissionTime(proto.getSubmissionTime()).canceled(proto.getCanceled())\n        .filesReencrypted(proto.getNumReencrypted())\n        .fileReencryptionFailures(proto.getNumFailures());\n    if (proto.hasCompletionTime()) {\n      builder.completionTime(proto.getCompletionTime());\n    }\n    if (proto.hasLastFile()) {\n      builder.lastCheckpointFile(proto.getLastFile());\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java"
    }
  }
}