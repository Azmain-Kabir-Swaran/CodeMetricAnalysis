{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleCopyListing.java",
  "functionName": "computeSourceRootPath",
  "functionId": "computeSourceRootPath___sourceStatus-FileStatus__context-DistCpContext",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
  "functionStartLine": 455,
  "functionEndLine": 485,
  "numCommitsSeen": 51,
  "timeTaken": 2397,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "a749ba0ceaa843aa83146b6bea19e031c8dc3296",
    "640a097533e0883bf49504673228d5a327089b44",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ymultichange(Yparameterchange,Ybodychange)",
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "a749ba0ceaa843aa83146b6bea19e031c8dc3296": "Ybodychange",
    "640a097533e0883bf49504673228d5a327089b44": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,31 @@\n   private Path computeSourceRootPath(FileStatus sourceStatus,\n-                                     DistCpOptions options) throws IOException {\n+      DistCpContext context) throws IOException {\n \n-    Path target \u003d options.getTargetPath();\n+    Path target \u003d context.getTargetPath();\n     FileSystem targetFS \u003d target.getFileSystem(getConf());\n-    final boolean targetPathExists \u003d options.getTargetPathExists();\n+    final boolean targetPathExists \u003d context.isTargetPathExists();\n \n-    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n+    boolean solitaryFile \u003d context.getSourcePaths().size() \u003d\u003d 1\n                                                 \u0026\u0026 !sourceStatus.isDirectory();\n \n     if (solitaryFile) {\n       if (!targetPathExists || targetFS.isFile(target)) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     } else {\n-      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n-          options.shouldSyncFolder() || options.shouldOverwrite();\n+      boolean specialHandling \u003d\n+          (context.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026\n+              !targetPathExists) ||\n+              context.shouldSyncFolder() ||\n+              context.shouldOverwrite();\n \n       if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n           sourceStatus.getPath().isRoot()) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Path computeSourceRootPath(FileStatus sourceStatus,\n      DistCpContext context) throws IOException {\n\n    Path target \u003d context.getTargetPath();\n    FileSystem targetFS \u003d target.getFileSystem(getConf());\n    final boolean targetPathExists \u003d context.isTargetPathExists();\n\n    boolean solitaryFile \u003d context.getSourcePaths().size() \u003d\u003d 1\n                                                \u0026\u0026 !sourceStatus.isDirectory();\n\n    if (solitaryFile) {\n      if (!targetPathExists || targetFS.isFile(target)) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    } else {\n      boolean specialHandling \u003d\n          (context.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026\n              !targetPathExists) ||\n              context.shouldSyncFolder() ||\n              context.shouldOverwrite();\n\n      if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n          sourceStatus.getPath().isRoot()) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[sourceStatus-FileStatus, options-DistCpOptions]",
            "newValue": "[sourceStatus-FileStatus, context-DistCpContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,31 @@\n   private Path computeSourceRootPath(FileStatus sourceStatus,\n-                                     DistCpOptions options) throws IOException {\n+      DistCpContext context) throws IOException {\n \n-    Path target \u003d options.getTargetPath();\n+    Path target \u003d context.getTargetPath();\n     FileSystem targetFS \u003d target.getFileSystem(getConf());\n-    final boolean targetPathExists \u003d options.getTargetPathExists();\n+    final boolean targetPathExists \u003d context.isTargetPathExists();\n \n-    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n+    boolean solitaryFile \u003d context.getSourcePaths().size() \u003d\u003d 1\n                                                 \u0026\u0026 !sourceStatus.isDirectory();\n \n     if (solitaryFile) {\n       if (!targetPathExists || targetFS.isFile(target)) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     } else {\n-      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n-          options.shouldSyncFolder() || options.shouldOverwrite();\n+      boolean specialHandling \u003d\n+          (context.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026\n+              !targetPathExists) ||\n+              context.shouldSyncFolder() ||\n+              context.shouldOverwrite();\n \n       if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n           sourceStatus.getPath().isRoot()) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Path computeSourceRootPath(FileStatus sourceStatus,\n      DistCpContext context) throws IOException {\n\n    Path target \u003d context.getTargetPath();\n    FileSystem targetFS \u003d target.getFileSystem(getConf());\n    final boolean targetPathExists \u003d context.isTargetPathExists();\n\n    boolean solitaryFile \u003d context.getSourcePaths().size() \u003d\u003d 1\n                                                \u0026\u0026 !sourceStatus.isDirectory();\n\n    if (solitaryFile) {\n      if (!targetPathExists || targetFS.isFile(target)) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    } else {\n      boolean specialHandling \u003d\n          (context.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026\n              !targetPathExists) ||\n              context.shouldSyncFolder() ||\n              context.shouldOverwrite();\n\n      if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n          sourceStatus.getPath().isRoot()) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "19/10/16 5:37 PM",
      "commitNameOld": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 26.76,
      "commitsBetweenForRepo": 265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private Path computeSourceRootPath(FileStatus sourceStatus,\n                                      DistCpOptions options) throws IOException {\n \n     Path target \u003d options.getTargetPath();\n     FileSystem targetFS \u003d target.getFileSystem(getConf());\n     final boolean targetPathExists \u003d options.getTargetPathExists();\n \n     boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                 \u0026\u0026 !sourceStatus.isDirectory();\n \n     if (solitaryFile) {\n-      if (targetFS.isFile(target) || !targetPathExists) {\n+      if (!targetPathExists || targetFS.isFile(target)) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     } else {\n       boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n           options.shouldSyncFolder() || options.shouldOverwrite();\n \n       if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n           sourceStatus.getPath().isRoot()) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Path computeSourceRootPath(FileStatus sourceStatus,\n                                     DistCpOptions options) throws IOException {\n\n    Path target \u003d options.getTargetPath();\n    FileSystem targetFS \u003d target.getFileSystem(getConf());\n    final boolean targetPathExists \u003d options.getTargetPathExists();\n\n    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                \u0026\u0026 !sourceStatus.isDirectory();\n\n    if (solitaryFile) {\n      if (!targetPathExists || targetFS.isFile(target)) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    } else {\n      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n          options.shouldSyncFolder() || options.shouldOverwrite();\n\n      if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n          sourceStatus.getPath().isRoot()) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "a749ba0ceaa843aa83146b6bea19e031c8dc3296": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9670. DistCp throws NPE when source is root. (John Zhuge via Yongjun Zhang)\n",
      "commitDate": "21/04/16 12:17 PM",
      "commitName": "a749ba0ceaa843aa83146b6bea19e031c8dc3296",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "14/04/16 10:35 AM",
      "commitNameOld": "404f57f328b00a42ec8b952ad08cd7a80207c7f2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 7.07,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   private Path computeSourceRootPath(FileStatus sourceStatus,\n                                      DistCpOptions options) throws IOException {\n \n     Path target \u003d options.getTargetPath();\n     FileSystem targetFS \u003d target.getFileSystem(getConf());\n     final boolean targetPathExists \u003d options.getTargetPathExists();\n \n     boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                 \u0026\u0026 !sourceStatus.isDirectory();\n \n     if (solitaryFile) {\n       if (targetFS.isFile(target) || !targetPathExists) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     } else {\n       boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n           options.shouldSyncFolder() || options.shouldOverwrite();\n \n-      return specialHandling \u0026\u0026 sourceStatus.isDirectory() ? sourceStatus.getPath() :\n-          sourceStatus.getPath().getParent();\n+      if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n+          sourceStatus.getPath().isRoot()) {\n+        return sourceStatus.getPath();\n+      } else {\n+        return sourceStatus.getPath().getParent();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Path computeSourceRootPath(FileStatus sourceStatus,\n                                     DistCpOptions options) throws IOException {\n\n    Path target \u003d options.getTargetPath();\n    FileSystem targetFS \u003d target.getFileSystem(getConf());\n    final boolean targetPathExists \u003d options.getTargetPathExists();\n\n    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                \u0026\u0026 !sourceStatus.isDirectory();\n\n    if (solitaryFile) {\n      if (targetFS.isFile(target) || !targetPathExists) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    } else {\n      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n          options.shouldSyncFolder() || options.shouldOverwrite();\n\n      if ((specialHandling \u0026\u0026 sourceStatus.isDirectory()) ||\n          sourceStatus.getPath().isRoot()) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "640a097533e0883bf49504673228d5a327089b44": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10459. distcp V2 doesn\u0027t preserve root dir\u0027s attributes when -p is specified. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 5:32 PM",
      "commitName": "640a097533e0883bf49504673228d5a327089b44",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "05/12/13 7:47 AM",
      "commitNameOld": "9ea61e44153b938309841b1499488360e9abd176",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 118.36,
      "commitsBetweenForRepo": 864,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   private Path computeSourceRootPath(FileStatus sourceStatus,\n                                      DistCpOptions options) throws IOException {\n \n     Path target \u003d options.getTargetPath();\n     FileSystem targetFS \u003d target.getFileSystem(getConf());\n+    final boolean targetPathExists \u003d options.getTargetPathExists();\n \n     boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                 \u0026\u0026 !sourceStatus.isDirectory();\n \n     if (solitaryFile) {\n-      if (targetFS.isFile(target) || !targetFS.exists(target)) {\n+      if (targetFS.isFile(target) || !targetPathExists) {\n         return sourceStatus.getPath();\n       } else {\n         return sourceStatus.getPath().getParent();\n       }\n     } else {\n-      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetFS.exists(target)) ||\n+      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n           options.shouldSyncFolder() || options.shouldOverwrite();\n \n       return specialHandling \u0026\u0026 sourceStatus.isDirectory() ? sourceStatus.getPath() :\n           sourceStatus.getPath().getParent();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Path computeSourceRootPath(FileStatus sourceStatus,\n                                     DistCpOptions options) throws IOException {\n\n    Path target \u003d options.getTargetPath();\n    FileSystem targetFS \u003d target.getFileSystem(getConf());\n    final boolean targetPathExists \u003d options.getTargetPathExists();\n\n    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                \u0026\u0026 !sourceStatus.isDirectory();\n\n    if (solitaryFile) {\n      if (targetFS.isFile(target) || !targetPathExists) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    } else {\n      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetPathExists) ||\n          options.shouldSyncFolder() || options.shouldOverwrite();\n\n      return specialHandling \u0026\u0026 sourceStatus.isDirectory() ? sourceStatus.getPath() :\n          sourceStatus.getPath().getParent();\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,23 @@\n+  private Path computeSourceRootPath(FileStatus sourceStatus,\n+                                     DistCpOptions options) throws IOException {\n+\n+    Path target \u003d options.getTargetPath();\n+    FileSystem targetFS \u003d target.getFileSystem(getConf());\n+\n+    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n+                                                \u0026\u0026 !sourceStatus.isDirectory();\n+\n+    if (solitaryFile) {\n+      if (targetFS.isFile(target) || !targetFS.exists(target)) {\n+        return sourceStatus.getPath();\n+      } else {\n+        return sourceStatus.getPath().getParent();\n+      }\n+    } else {\n+      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetFS.exists(target)) ||\n+          options.shouldSyncFolder() || options.shouldOverwrite();\n+\n+      return specialHandling \u0026\u0026 sourceStatus.isDirectory() ? sourceStatus.getPath() :\n+          sourceStatus.getPath().getParent();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Path computeSourceRootPath(FileStatus sourceStatus,\n                                     DistCpOptions options) throws IOException {\n\n    Path target \u003d options.getTargetPath();\n    FileSystem targetFS \u003d target.getFileSystem(getConf());\n\n    boolean solitaryFile \u003d options.getSourcePaths().size() \u003d\u003d 1\n                                                \u0026\u0026 !sourceStatus.isDirectory();\n\n    if (solitaryFile) {\n      if (targetFS.isFile(target) || !targetFS.exists(target)) {\n        return sourceStatus.getPath();\n      } else {\n        return sourceStatus.getPath().getParent();\n      }\n    } else {\n      boolean specialHandling \u003d (options.getSourcePaths().size() \u003d\u003d 1 \u0026\u0026 !targetFS.exists(target)) ||\n          options.shouldSyncFolder() || options.shouldOverwrite();\n\n      return specialHandling \u0026\u0026 sourceStatus.isDirectory() ? sourceStatus.getPath() :\n          sourceStatus.getPath().getParent();\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java"
    }
  }
}