{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "storeRMDelegationTokenState",
  "functionId": "storeRMDelegationTokenState___rmDTIdentifier-RMDelegationTokenIdentifier__renewDate-Long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 1036,
  "functionEndLine": 1061,
  "numCommitsSeen": 116,
  "timeTaken": 4747,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "4c7b9b6abe2452c9752a11214762be2e7665fb32",
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
    "ce56616037fc160ba875b496bdc369411bb873be",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Ybodychange",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": "Ybodychange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "4c7b9b6abe2452c9752a11214762be2e7665fb32": "Ybodychange",
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "ce56616037fc160ba875b496bdc369411bb873be": "Ybodychange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ybodychange",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": "Ybodychange",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,26 @@\n   protected synchronized void storeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n       throws Exception {\n     String nodeCreatePath \u003d getLeafDelegationTokenNodePath(\n         rmDTIdentifier.getSequenceNumber(), true);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing \" + DELEGATION_TOKEN_PREFIX\n-          + rmDTIdentifier.getSequenceNumber());\n-    }\n+    LOG.debug(\"Storing {}{}\", DELEGATION_TOKEN_PREFIX,\n+        rmDTIdentifier.getSequenceNumber());\n \n     RMDelegationTokenIdentifierData identifierData \u003d\n         new RMDelegationTokenIdentifierData(rmDTIdentifier, renewDate);\n     ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n     try (DataOutputStream seqOut \u003d new DataOutputStream(seqOs)) {\n       SafeTransaction trx \u003d zkManager.createTransaction(zkAcl,\n           fencingNodePath);\n       trx.create(nodeCreatePath, identifierData.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT);\n       // Update Sequence number only while storing DT\n       seqOut.writeInt(rmDTIdentifier.getSequenceNumber());\n \n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Storing \" + dtSequenceNumberPath + \". SequenceNumber: \"\n-            + rmDTIdentifier.getSequenceNumber());\n-      }\n+      LOG.debug(\"Storing {}. SequenceNumber: {}\", dtSequenceNumberPath,\n+          rmDTIdentifier.getSequenceNumber());\n \n       trx.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1);\n       trx.commit();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    String nodeCreatePath \u003d getLeafDelegationTokenNodePath(\n        rmDTIdentifier.getSequenceNumber(), true);\n    LOG.debug(\"Storing {}{}\", DELEGATION_TOKEN_PREFIX,\n        rmDTIdentifier.getSequenceNumber());\n\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(rmDTIdentifier, renewDate);\n    ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n    try (DataOutputStream seqOut \u003d new DataOutputStream(seqOs)) {\n      SafeTransaction trx \u003d zkManager.createTransaction(zkAcl,\n          fencingNodePath);\n      trx.create(nodeCreatePath, identifierData.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT);\n      // Update Sequence number only while storing DT\n      seqOut.writeInt(rmDTIdentifier.getSequenceNumber());\n\n      LOG.debug(\"Storing {}. SequenceNumber: {}\", dtSequenceNumberPath,\n          rmDTIdentifier.getSequenceNumber());\n\n      trx.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1);\n      trx.commit();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 17.28,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,30 @@\n   protected synchronized void storeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n       throws Exception {\n-    SafeTransaction trx \u003d zkManager.createTransaction(zkAcl, fencingNodePath);\n-    addStoreOrUpdateOps(trx, rmDTIdentifier, renewDate, false);\n-    trx.commit();\n+    String nodeCreatePath \u003d getLeafDelegationTokenNodePath(\n+        rmDTIdentifier.getSequenceNumber(), true);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing \" + DELEGATION_TOKEN_PREFIX\n+          + rmDTIdentifier.getSequenceNumber());\n+    }\n+\n+    RMDelegationTokenIdentifierData identifierData \u003d\n+        new RMDelegationTokenIdentifierData(rmDTIdentifier, renewDate);\n+    ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n+    try (DataOutputStream seqOut \u003d new DataOutputStream(seqOs)) {\n+      SafeTransaction trx \u003d zkManager.createTransaction(zkAcl,\n+          fencingNodePath);\n+      trx.create(nodeCreatePath, identifierData.toByteArray(), zkAcl,\n+          CreateMode.PERSISTENT);\n+      // Update Sequence number only while storing DT\n+      seqOut.writeInt(rmDTIdentifier.getSequenceNumber());\n+\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Storing \" + dtSequenceNumberPath + \". SequenceNumber: \"\n+            + rmDTIdentifier.getSequenceNumber());\n+      }\n+\n+      trx.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1);\n+      trx.commit();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    String nodeCreatePath \u003d getLeafDelegationTokenNodePath(\n        rmDTIdentifier.getSequenceNumber(), true);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing \" + DELEGATION_TOKEN_PREFIX\n          + rmDTIdentifier.getSequenceNumber());\n    }\n\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(rmDTIdentifier, renewDate);\n    ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n    try (DataOutputStream seqOut \u003d new DataOutputStream(seqOs)) {\n      SafeTransaction trx \u003d zkManager.createTransaction(zkAcl,\n          fencingNodePath);\n      trx.create(nodeCreatePath, identifierData.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT);\n      // Update Sequence number only while storing DT\n      seqOut.writeInt(rmDTIdentifier.getSequenceNumber());\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Storing \" + dtSequenceNumberPath + \". SequenceNumber: \"\n            + rmDTIdentifier.getSequenceNumber());\n      }\n\n      trx.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1);\n      trx.commit();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).\n",
      "commitDate": "22/08/17 7:20 PM",
      "commitName": "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "15/08/17 4:53 PM",
      "commitNameOld": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   protected synchronized void storeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n       throws Exception {\n-    SafeTransaction trx \u003d new SafeTransaction();\n+    SafeTransaction trx \u003d zkManager.createTransaction(zkAcl, fencingNodePath);\n     addStoreOrUpdateOps(trx, rmDTIdentifier, renewDate, false);\n     trx.commit();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    SafeTransaction trx \u003d zkManager.createTransaction(zkAcl, fencingNodePath);\n    addStoreOrUpdateOps(trx, rmDTIdentifier, renewDate, false);\n    trx.commit();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   protected synchronized void storeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n       throws Exception {\n-    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n-    doStoreMultiWithRetries(opList);\n+    SafeTransaction trx \u003d new SafeTransaction();\n+    addStoreOrUpdateOps(trx, rmDTIdentifier, renewDate, false);\n+    trx.commit();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    SafeTransaction trx \u003d new SafeTransaction();\n    addStoreOrUpdateOps(trx, rmDTIdentifier, renewDate, false);\n    trx.commit();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4c7b9b6abe2452c9752a11214762be2e7665fb32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3385. Fixed a race-condition in ResourceManager\u0027s ZooKeeper based state-store to avoid crashing on duplicate deletes. Contributed by Zhihai Xu.\n",
      "commitDate": "06/05/15 5:51 PM",
      "commitName": "4c7b9b6abe2452c9752a11214762be2e7665fb32",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/05/15 4:13 PM",
      "commitNameOld": "d701acc9c67adc578ba18035edde1166eedaae98",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   protected synchronized void storeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n       throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n-    doMultiWithRetries(opList);\n+    doStoreMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n    doStoreMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
      "commitDate": "05/01/15 1:33 PM",
      "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "29/12/14 9:59 AM",
          "commitNameOld": "241d3b3a50c6af92f023d8b2c24598f4813f4674",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 7.15,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n-  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n-      int latestSequenceNumber) throws Exception {\n+  protected synchronized void storeRMDelegationTokenState(\n+      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n+      throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    addStoreOrUpdateOps(\n-        opList, rmDTIdentifier, renewDate, latestSequenceNumber, false);\n+    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "storeRMDelegationTokenAndSequenceNumberState",
            "newValue": "storeRMDelegationTokenState"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "29/12/14 9:59 AM",
          "commitNameOld": "241d3b3a50c6af92f023d8b2c24598f4813f4674",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 7.15,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n-  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n-      int latestSequenceNumber) throws Exception {\n+  protected synchronized void storeRMDelegationTokenState(\n+      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n+      throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    addStoreOrUpdateOps(\n-        opList, rmDTIdentifier, renewDate, latestSequenceNumber, false);\n+    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[rmDTIdentifier-RMDelegationTokenIdentifier, renewDate-Long, latestSequenceNumber-int]",
            "newValue": "[rmDTIdentifier-RMDelegationTokenIdentifier, renewDate-Long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "29/12/14 9:59 AM",
          "commitNameOld": "241d3b3a50c6af92f023d8b2c24598f4813f4674",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 7.15,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n-  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n-      int latestSequenceNumber) throws Exception {\n+  protected synchronized void storeRMDelegationTokenState(\n+      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n+      throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    addStoreOrUpdateOps(\n-        opList, rmDTIdentifier, renewDate, latestSequenceNumber, false);\n+    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized void storeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate)\n      throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    addStoreOrUpdateOps(opList, rmDTIdentifier, renewDate, false);\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "ce56616037fc160ba875b496bdc369411bb873be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1776. Fixed DelegationToken renewal to survive RM failover. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580154 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 9:12 PM",
      "commitName": "ce56616037fc160ba875b496bdc369411bb873be",
      "commitAuthor": "Jian He",
      "commitDateOld": "28/02/14 9:34 AM",
      "commitNameOld": "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 21.44,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,8 @@\n   protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n       int latestSequenceNumber) throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    // store RM delegation token\n-    String nodeCreatePath \u003d\n-        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n-            + rmDTIdentifier.getSequenceNumber());\n-    ByteArrayOutputStream tokenOs \u003d new ByteArrayOutputStream();\n-    DataOutputStream tokenOut \u003d new DataOutputStream(tokenOs);\n-    ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n-    DataOutputStream seqOut \u003d new DataOutputStream(seqOs);\n-\n-    try {\n-      rmDTIdentifier.write(tokenOut);\n-      tokenOut.writeLong(renewDate);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Storing RMDelegationToken_\" +\n-            rmDTIdentifier.getSequenceNumber());\n-      }\n-\n-      opList.add(Op.create(nodeCreatePath, tokenOs.toByteArray(), zkAcl,\n-          CreateMode.PERSISTENT));\n-\n-\n-     seqOut.writeInt(latestSequenceNumber);\n-     if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Storing \" + dtSequenceNumberPath +\n-            \". SequenceNumber: \" + latestSequenceNumber);\n-      }\n-\n-     opList.add(Op.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1));\n-    } finally {\n-      tokenOs.close();\n-      seqOs.close();\n-    }\n-\n+    addStoreOrUpdateOps(\n+        opList, rmDTIdentifier, renewDate, latestSequenceNumber, false);\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n      int latestSequenceNumber) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    addStoreOrUpdateOps(\n        opList, rmDTIdentifier, renewDate, latestSequenceNumber, false);\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/12/13 8:17 PM",
      "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,39 @@\n   protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n       int latestSequenceNumber) throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     // store RM delegation token\n     String nodeCreatePath \u003d\n-        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n+        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n-    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n-    DataOutputStream fsOut \u003d new DataOutputStream(os);\n+    ByteArrayOutputStream tokenOs \u003d new ByteArrayOutputStream();\n+    DataOutputStream tokenOut \u003d new DataOutputStream(tokenOs);\n+    ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n+    DataOutputStream seqOut \u003d new DataOutputStream(seqOs);\n+\n     try {\n-      rmDTIdentifier.write(fsOut);\n-      fsOut.writeLong(renewDate);\n+      rmDTIdentifier.write(tokenOut);\n+      tokenOut.writeLong(renewDate);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Storing RMDelegationToken_\" +\n             rmDTIdentifier.getSequenceNumber());\n       }\n-      opList.add(Op.create(nodeCreatePath, os.toByteArray(), zkAcl,\n+\n+      opList.add(Op.create(nodeCreatePath, tokenOs.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT));\n+\n+\n+     seqOut.writeInt(latestSequenceNumber);\n+     if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Storing \" + dtSequenceNumberPath +\n+            \". SequenceNumber: \" + latestSequenceNumber);\n+      }\n+\n+     opList.add(Op.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1));\n     } finally {\n-      os.close();\n+      tokenOs.close();\n+      seqOs.close();\n     }\n \n-    // store sequence number\n-    String latestSequenceNumberPath \u003d\n-        getNodePath(rmDTSecretManagerRoot,\n-            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX +\n-          latestSequenceNumber);\n-    }\n-\n-    if (dtSequenceNumberPath !\u003d null) {\n-      opList.add(Op.delete(dtSequenceNumberPath, -1));\n-    }\n-    opList.add(Op.create(latestSequenceNumberPath, null, zkAcl,\n-        CreateMode.PERSISTENT));\n-    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n      int latestSequenceNumber) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    // store RM delegation token\n    String nodeCreatePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    ByteArrayOutputStream tokenOs \u003d new ByteArrayOutputStream();\n    DataOutputStream tokenOut \u003d new DataOutputStream(tokenOs);\n    ByteArrayOutputStream seqOs \u003d new ByteArrayOutputStream();\n    DataOutputStream seqOut \u003d new DataOutputStream(seqOs);\n\n    try {\n      rmDTIdentifier.write(tokenOut);\n      tokenOut.writeLong(renewDate);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Storing RMDelegationToken_\" +\n            rmDTIdentifier.getSequenceNumber());\n      }\n\n      opList.add(Op.create(nodeCreatePath, tokenOs.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT));\n\n\n     seqOut.writeInt(latestSequenceNumber);\n     if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Storing \" + dtSequenceNumberPath +\n            \". SequenceNumber: \" + latestSequenceNumber);\n      }\n\n     opList.add(Op.setData(dtSequenceNumberPath, seqOs.toByteArray(), -1));\n    } finally {\n      tokenOs.close();\n      seqOs.close();\n    }\n\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/13 8:17 PM",
      "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/12/13 11:28 AM",
      "commitNameOld": "9c95015bb47f362e592393f0cec899fd8fdd3b04",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.37,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n       RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n       int latestSequenceNumber) throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     // store RM delegation token\n     String nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n     DataOutputStream fsOut \u003d new DataOutputStream(os);\n     try {\n       rmDTIdentifier.write(fsOut);\n       fsOut.writeLong(renewDate);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Storing RMDelegationToken_\" +\n             rmDTIdentifier.getSequenceNumber());\n       }\n       opList.add(Op.create(nodeCreatePath, os.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT));\n     } finally {\n       os.close();\n     }\n \n     // store sequence number\n     String latestSequenceNumberPath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n             DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX +\n           latestSequenceNumber);\n     }\n \n     if (dtSequenceNumberPath !\u003d null) {\n-      opList.add(Op.delete(dtSequenceNumberPath, 0));\n+      opList.add(Op.delete(dtSequenceNumberPath, -1));\n     }\n     opList.add(Op.create(latestSequenceNumberPath, null, zkAcl,\n         CreateMode.PERSISTENT));\n     dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n      int latestSequenceNumber) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    // store RM delegation token\n    String nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    try {\n      rmDTIdentifier.write(fsOut);\n      fsOut.writeLong(renewDate);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Storing RMDelegationToken_\" +\n            rmDTIdentifier.getSequenceNumber());\n      }\n      opList.add(Op.create(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT));\n    } finally {\n      os.close();\n    }\n\n    // store sequence number\n    String latestSequenceNumberPath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX +\n          latestSequenceNumber);\n    }\n\n    if (dtSequenceNumberPath !\u003d null) {\n      opList.add(Op.delete(dtSequenceNumberPath, -1));\n    }\n    opList.add(Op.create(latestSequenceNumberPath, null, zkAcl,\n        CreateMode.PERSISTENT));\n    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,40 @@\n+  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n+      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n+      int latestSequenceNumber) throws Exception {\n+    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n+    // store RM delegation token\n+    String nodeCreatePath \u003d\n+        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n+            + rmDTIdentifier.getSequenceNumber());\n+    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n+    DataOutputStream fsOut \u003d new DataOutputStream(os);\n+    try {\n+      rmDTIdentifier.write(fsOut);\n+      fsOut.writeLong(renewDate);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Storing RMDelegationToken_\" +\n+            rmDTIdentifier.getSequenceNumber());\n+      }\n+      opList.add(Op.create(nodeCreatePath, os.toByteArray(), zkAcl,\n+          CreateMode.PERSISTENT));\n+    } finally {\n+      os.close();\n+    }\n+\n+    // store sequence number\n+    String latestSequenceNumberPath \u003d\n+        getNodePath(rmDTSecretManagerRoot,\n+            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX +\n+          latestSequenceNumber);\n+    }\n+\n+    if (dtSequenceNumberPath !\u003d null) {\n+      opList.add(Op.delete(dtSequenceNumberPath, 0));\n+    }\n+    opList.add(Op.create(latestSequenceNumberPath, null, zkAcl,\n+        CreateMode.PERSISTENT));\n+    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n+    doMultiWithRetries(opList);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,\n      int latestSequenceNumber) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    // store RM delegation token\n    String nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    try {\n      rmDTIdentifier.write(fsOut);\n      fsOut.writeLong(renewDate);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Storing RMDelegationToken_\" +\n            rmDTIdentifier.getSequenceNumber());\n      }\n      opList.add(Op.create(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT));\n    } finally {\n      os.close();\n    }\n\n    // store sequence number\n    String latestSequenceNumberPath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX +\n          latestSequenceNumber);\n    }\n\n    if (dtSequenceNumberPath !\u003d null) {\n      opList.add(Op.delete(dtSequenceNumberPath, 0));\n    }\n    opList.add(Op.create(latestSequenceNumberPath, null, zkAcl,\n        CreateMode.PERSISTENT));\n    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}