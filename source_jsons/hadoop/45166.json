{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnClientImpl.java",
  "functionName": "addTimelineDelegationToken",
  "functionId": "addTimelineDelegationToken___clc-ContainerLaunchContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
  "functionStartLine": 376,
  "functionEndLine": 406,
  "numCommitsSeen": 70,
  "timeTaken": 2703,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "036a24bab3f3ff89e3d52c5487fce0525c0d1d78",
    "eb92cc67dfaa51212fc5315b8db99effd046a154",
    "af8b09af75b252aa75b86ca42323c5b21eb41ee2"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "036a24bab3f3ff89e3d52c5487fce0525c0d1d78": "Ybodychange",
    "eb92cc67dfaa51212fc5315b8db99effd046a154": "Ybodychange",
    "af8b09af75b252aa75b86ca42323c5b21eb41ee2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/01/19 12:31 AM",
      "commitNameOld": "573b1587918c4c0efdb7e9fff6f5be12bf31b619",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 70.62,
      "commitsBetweenForRepo": 574,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,31 @@\n   private void addTimelineDelegationToken(\n       ContainerLaunchContext clc) throws YarnException, IOException {\n     Credentials credentials \u003d new Credentials();\n     DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n     ByteBuffer tokens \u003d clc.getTokens();\n     if (tokens !\u003d null) {\n       dibb.reset(tokens);\n       credentials.readTokenStorageStream(dibb);\n       tokens.rewind();\n     }\n     // If the timeline delegation token is already in the CLC, no need to add\n     // one more\n     for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n         .getAllTokens()) {\n       if (token.getKind().equals(TimelineDelegationTokenIdentifier.KIND_NAME)) {\n         return;\n       }\n     }\n     org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e\n         timelineDelegationToken \u003d getTimelineDelegationToken();\n     if (timelineDelegationToken \u003d\u003d null) {\n       return;\n     }\n     credentials.addToken(timelineService, timelineDelegationToken);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Add timeline delegation token into credentials: \"\n-          + timelineDelegationToken);\n-    }\n+    LOG.debug(\"Add timeline delegation token into credentials: {}\",\n+        timelineDelegationToken);\n     DataOutputBuffer dob \u003d new DataOutputBuffer();\n     credentials.writeTokenStorageToStream(dob);\n     tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n     clc.setTokens(tokens);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTimelineDelegationToken(\n      ContainerLaunchContext clc) throws YarnException, IOException {\n    Credentials credentials \u003d new Credentials();\n    DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n    ByteBuffer tokens \u003d clc.getTokens();\n    if (tokens !\u003d null) {\n      dibb.reset(tokens);\n      credentials.readTokenStorageStream(dibb);\n      tokens.rewind();\n    }\n    // If the timeline delegation token is already in the CLC, no need to add\n    // one more\n    for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n        .getAllTokens()) {\n      if (token.getKind().equals(TimelineDelegationTokenIdentifier.KIND_NAME)) {\n        return;\n      }\n    }\n    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e\n        timelineDelegationToken \u003d getTimelineDelegationToken();\n    if (timelineDelegationToken \u003d\u003d null) {\n      return;\n    }\n    credentials.addToken(timelineService, timelineDelegationToken);\n    LOG.debug(\"Add timeline delegation token into credentials: {}\",\n        timelineDelegationToken);\n    DataOutputBuffer dob \u003d new DataOutputBuffer();\n    credentials.writeTokenStorageToStream(dob);\n    tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n    clc.setTokens(tokens);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "036a24bab3f3ff89e3d52c5487fce0525c0d1d78": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6896. Document wrong spelling in usage of MapredTestDriver tools.\n(Contributed by LiXin Ge via Daniel Templeton)\n",
      "commitDate": "13/06/17 1:21 PM",
      "commitName": "036a24bab3f3ff89e3d52c5487fce0525c0d1d78",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "01/05/17 6:08 AM",
      "commitNameOld": "64f68cb0b8c0b93d37699893b812b37c4b05c939",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 43.3,
      "commitsBetweenForRepo": 223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   private void addTimelineDelegationToken(\n       ContainerLaunchContext clc) throws YarnException, IOException {\n     Credentials credentials \u003d new Credentials();\n     DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n     ByteBuffer tokens \u003d clc.getTokens();\n     if (tokens !\u003d null) {\n       dibb.reset(tokens);\n       credentials.readTokenStorageStream(dibb);\n       tokens.rewind();\n     }\n     // If the timeline delegation token is already in the CLC, no need to add\n     // one more\n     for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n         .getAllTokens()) {\n       if (token.getKind().equals(TimelineDelegationTokenIdentifier.KIND_NAME)) {\n         return;\n       }\n     }\n     org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e\n         timelineDelegationToken \u003d getTimelineDelegationToken();\n     if (timelineDelegationToken \u003d\u003d null) {\n       return;\n     }\n     credentials.addToken(timelineService, timelineDelegationToken);\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Add timline delegation token into credentials: \"\n+      LOG.debug(\"Add timeline delegation token into credentials: \"\n           + timelineDelegationToken);\n     }\n     DataOutputBuffer dob \u003d new DataOutputBuffer();\n     credentials.writeTokenStorageToStream(dob);\n     tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n     clc.setTokens(tokens);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTimelineDelegationToken(\n      ContainerLaunchContext clc) throws YarnException, IOException {\n    Credentials credentials \u003d new Credentials();\n    DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n    ByteBuffer tokens \u003d clc.getTokens();\n    if (tokens !\u003d null) {\n      dibb.reset(tokens);\n      credentials.readTokenStorageStream(dibb);\n      tokens.rewind();\n    }\n    // If the timeline delegation token is already in the CLC, no need to add\n    // one more\n    for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n        .getAllTokens()) {\n      if (token.getKind().equals(TimelineDelegationTokenIdentifier.KIND_NAME)) {\n        return;\n      }\n    }\n    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e\n        timelineDelegationToken \u003d getTimelineDelegationToken();\n    if (timelineDelegationToken \u003d\u003d null) {\n      return;\n    }\n    credentials.addToken(timelineService, timelineDelegationToken);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Add timeline delegation token into credentials: \"\n          + timelineDelegationToken);\n    }\n    DataOutputBuffer dob \u003d new DataOutputBuffer();\n    credentials.writeTokenStorageToStream(dob);\n    tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n    clc.setTokens(tokens);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "eb92cc67dfaa51212fc5315b8db99effd046a154": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2563. Fixed YarnClient to call getTimeLineDelegationToken only if the Token is not present. Contributed by Zhijie Shen\n",
      "commitDate": "18/09/14 2:40 PM",
      "commitName": "eb92cc67dfaa51212fc5315b8db99effd046a154",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/05/14 11:47 AM",
      "commitNameOld": "af8b09af75b252aa75b86ca42323c5b21eb41ee2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 118.12,
      "commitsBetweenForRepo": 933,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   private void addTimelineDelegationToken(\n       ContainerLaunchContext clc) throws YarnException, IOException {\n-    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e timelineDelegationToken \u003d\n-        timelineClient.getDelegationToken(\n-            UserGroupInformation.getCurrentUser().getUserName());\n-    if (timelineDelegationToken \u003d\u003d null) {\n-      return;\n-    }\n     Credentials credentials \u003d new Credentials();\n     DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n     ByteBuffer tokens \u003d clc.getTokens();\n     if (tokens !\u003d null) {\n       dibb.reset(tokens);\n       credentials.readTokenStorageStream(dibb);\n       tokens.rewind();\n     }\n     // If the timeline delegation token is already in the CLC, no need to add\n     // one more\n     for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n         .getAllTokens()) {\n-      TokenIdentifier tokenIdentifier \u003d token.decodeIdentifier();\n-      if (tokenIdentifier instanceof TimelineDelegationTokenIdentifier) {\n+      if (token.getKind().equals(TimelineDelegationTokenIdentifier.KIND_NAME)) {\n         return;\n       }\n     }\n+    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e\n+        timelineDelegationToken \u003d getTimelineDelegationToken();\n+    if (timelineDelegationToken \u003d\u003d null) {\n+      return;\n+    }\n     credentials.addToken(timelineService, timelineDelegationToken);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Add timline delegation token into credentials: \"\n           + timelineDelegationToken);\n     }\n     DataOutputBuffer dob \u003d new DataOutputBuffer();\n     credentials.writeTokenStorageToStream(dob);\n     tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n     clc.setTokens(tokens);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTimelineDelegationToken(\n      ContainerLaunchContext clc) throws YarnException, IOException {\n    Credentials credentials \u003d new Credentials();\n    DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n    ByteBuffer tokens \u003d clc.getTokens();\n    if (tokens !\u003d null) {\n      dibb.reset(tokens);\n      credentials.readTokenStorageStream(dibb);\n      tokens.rewind();\n    }\n    // If the timeline delegation token is already in the CLC, no need to add\n    // one more\n    for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n        .getAllTokens()) {\n      if (token.getKind().equals(TimelineDelegationTokenIdentifier.KIND_NAME)) {\n        return;\n      }\n    }\n    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e\n        timelineDelegationToken \u003d getTimelineDelegationToken();\n    if (timelineDelegationToken \u003d\u003d null) {\n      return;\n    }\n    credentials.addToken(timelineService, timelineDelegationToken);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Add timline delegation token into credentials: \"\n          + timelineDelegationToken);\n    }\n    DataOutputBuffer dob \u003d new DataOutputBuffer();\n    credentials.writeTokenStorageToStream(dob);\n    tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n    clc.setTokens(tokens);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "af8b09af75b252aa75b86ca42323c5b21eb41ee2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1936. Added security support for the Timeline Client. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597153 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/14 11:47 AM",
      "commitName": "af8b09af75b252aa75b86ca42323c5b21eb41ee2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,35 @@\n+  private void addTimelineDelegationToken(\n+      ContainerLaunchContext clc) throws YarnException, IOException {\n+    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e timelineDelegationToken \u003d\n+        timelineClient.getDelegationToken(\n+            UserGroupInformation.getCurrentUser().getUserName());\n+    if (timelineDelegationToken \u003d\u003d null) {\n+      return;\n+    }\n+    Credentials credentials \u003d new Credentials();\n+    DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n+    ByteBuffer tokens \u003d clc.getTokens();\n+    if (tokens !\u003d null) {\n+      dibb.reset(tokens);\n+      credentials.readTokenStorageStream(dibb);\n+      tokens.rewind();\n+    }\n+    // If the timeline delegation token is already in the CLC, no need to add\n+    // one more\n+    for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n+        .getAllTokens()) {\n+      TokenIdentifier tokenIdentifier \u003d token.decodeIdentifier();\n+      if (tokenIdentifier instanceof TimelineDelegationTokenIdentifier) {\n+        return;\n+      }\n+    }\n+    credentials.addToken(timelineService, timelineDelegationToken);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Add timline delegation token into credentials: \"\n+          + timelineDelegationToken);\n+    }\n+    DataOutputBuffer dob \u003d new DataOutputBuffer();\n+    credentials.writeTokenStorageToStream(dob);\n+    tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n+    clc.setTokens(tokens);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTimelineDelegationToken(\n      ContainerLaunchContext clc) throws YarnException, IOException {\n    org.apache.hadoop.security.token.Token\u003cTimelineDelegationTokenIdentifier\u003e timelineDelegationToken \u003d\n        timelineClient.getDelegationToken(\n            UserGroupInformation.getCurrentUser().getUserName());\n    if (timelineDelegationToken \u003d\u003d null) {\n      return;\n    }\n    Credentials credentials \u003d new Credentials();\n    DataInputByteBuffer dibb \u003d new DataInputByteBuffer();\n    ByteBuffer tokens \u003d clc.getTokens();\n    if (tokens !\u003d null) {\n      dibb.reset(tokens);\n      credentials.readTokenStorageStream(dibb);\n      tokens.rewind();\n    }\n    // If the timeline delegation token is already in the CLC, no need to add\n    // one more\n    for (org.apache.hadoop.security.token.Token\u003c? extends TokenIdentifier\u003e token : credentials\n        .getAllTokens()) {\n      TokenIdentifier tokenIdentifier \u003d token.decodeIdentifier();\n      if (tokenIdentifier instanceof TimelineDelegationTokenIdentifier) {\n        return;\n      }\n    }\n    credentials.addToken(timelineService, timelineDelegationToken);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Add timline delegation token into credentials: \"\n          + timelineDelegationToken);\n    }\n    DataOutputBuffer dob \u003d new DataOutputBuffer();\n    credentials.writeTokenStorageToStream(dob);\n    tokens \u003d ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n    clc.setTokens(tokens);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java"
    }
  }
}