{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NNStorage.java",
  "functionName": "setFieldsFromProperties",
  "functionId": "setFieldsFromProperties___props-Properties__sd-StorageDirectory",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
  "functionStartLine": 653,
  "functionEndLine": 668,
  "numCommitsSeen": 72,
  "timeTaken": 5945,
  "changeHistory": [
    "00067895a01c66d53715b50bbcb3605efd6425f2",
    "a8e39feed2642dbfedb8fd22648904ad4bb6af97",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "00067895a01c66d53715b50bbcb3605efd6425f2": "Ybodychange",
    "a8e39feed2642dbfedb8fd22648904ad4bb6af97": "Ybodychange",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ybodychange",
    "ffbe9e5972bf3eee9037e2602c1330e0dc744646": "Ymultichange(Yrename,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "00067895a01c66d53715b50bbcb3605efd6425f2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5754. Split LayoutVerion into NameNodeLayoutVersion and DataNodeLayoutVersion. Contributed by Brandon Li\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1563041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 7:21 PM",
      "commitName": "00067895a01c66d53715b50bbcb3605efd6425f2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/01/14 12:01 PM",
      "commitNameOld": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 5.31,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   protected void setFieldsFromProperties(\n       Properties props, StorageDirectory sd) throws IOException {\n     super.setFieldsFromProperties(props, sd);\n     if (layoutVersion \u003d\u003d 0) {\n       throw new IOException(\"NameNode directory \"\n                             + sd.getRoot() + \" is not formatted.\");\n     }\n \n     // Set Block pool ID in version with federation support\n-    if (versionSupportsFederation()) {\n+    if (NameNodeLayoutVersion.supports(\n+        LayoutVersion.Feature.FEDERATION, getLayoutVersion())) {\n       String sbpid \u003d props.getProperty(\"blockpoolID\");\n       setBlockPoolID(sd.getRoot(), sbpid);\n     }\n     setDeprecatedPropertiesForUpgrade(props);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (NameNodeLayoutVersion.supports(\n        LayoutVersion.Feature.FEDERATION, getLayoutVersion())) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    setDeprecatedPropertiesForUpgrade(props);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {}
    },
    "a8e39feed2642dbfedb8fd22648904ad4bb6af97": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4462. 2NN will fail to checkpoint after an HDFS upgrade from a pre-federation version of HDFS. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1442375 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/13 1:29 PM",
      "commitName": "a8e39feed2642dbfedb8fd22648904ad4bb6af97",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "21/08/12 2:18 PM",
      "commitNameOld": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 167.01,
      "commitsBetweenForRepo": 864,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   protected void setFieldsFromProperties(\n       Properties props, StorageDirectory sd) throws IOException {\n     super.setFieldsFromProperties(props, sd);\n     if (layoutVersion \u003d\u003d 0) {\n       throw new IOException(\"NameNode directory \"\n                             + sd.getRoot() + \" is not formatted.\");\n     }\n \n     // Set Block pool ID in version with federation support\n-    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n+    if (versionSupportsFederation()) {\n       String sbpid \u003d props.getProperty(\"blockpoolID\");\n       setBlockPoolID(sd.getRoot(), sbpid);\n     }\n     setDeprecatedPropertiesForUpgrade(props);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (versionSupportsFederation()) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    setDeprecatedPropertiesForUpgrade(props);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {}
    },
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2686. Remove DistributedUpgrade related code. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:18 PM",
      "commitName": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "09/08/12 3:13 PM",
      "commitNameOld": "9d0f8792a9a1d3d2b24adfc2c213247a099e7ad1",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 11.96,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,15 @@\n   protected void setFieldsFromProperties(\n       Properties props, StorageDirectory sd) throws IOException {\n     super.setFieldsFromProperties(props, sd);\n     if (layoutVersion \u003d\u003d 0) {\n       throw new IOException(\"NameNode directory \"\n                             + sd.getRoot() + \" is not formatted.\");\n     }\n \n     // Set Block pool ID in version with federation support\n     if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n       String sbpid \u003d props.getProperty(\"blockpoolID\");\n       setBlockPoolID(sd.getRoot(), sbpid);\n     }\n-    \n-    String sDUS, sDUV;\n-    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n-    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n-    setDistributedUpgradeState(\n-        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n-        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n     setDeprecatedPropertiesForUpgrade(props);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    setDeprecatedPropertiesForUpgrade(props);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    \n    String sDUS, sDUV;\n    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n    setDistributedUpgradeState(\n        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n    setDeprecatedPropertiesForUpgrade(props);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    \n    String sDUS, sDUV;\n    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n    setDistributedUpgradeState(\n        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n    setDeprecatedPropertiesForUpgrade(props);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "27/07/11 8:19 PM",
      "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 1.55,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,22 @@\n   protected void setFieldsFromProperties(\n       Properties props, StorageDirectory sd) throws IOException {\n     super.setFieldsFromProperties(props, sd);\n     if (layoutVersion \u003d\u003d 0) {\n       throw new IOException(\"NameNode directory \"\n                             + sd.getRoot() + \" is not formatted.\");\n     }\n \n     // Set Block pool ID in version with federation support\n     if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n       String sbpid \u003d props.getProperty(\"blockpoolID\");\n       setBlockPoolID(sd.getRoot(), sbpid);\n     }\n     \n     String sDUS, sDUV;\n     sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n     sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n     setDistributedUpgradeState(\n         sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n         sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n-\n-    String sMd5 \u003d props.getProperty(MESSAGE_DIGEST_PROPERTY);\n-    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n-      if (sMd5 \u003d\u003d null) {\n-        throw new InconsistentFSStateException(sd.getRoot(),\n-            \"file \" + STORAGE_FILE_VERSION\n-            + \" does not have MD5 image digest.\");\n-      }\n-      this.imageDigest \u003d new MD5Hash(sMd5);\n-    } else if (sMd5 !\u003d null) {\n-      throw new InconsistentFSStateException(sd.getRoot(),\n-          \"file \" + STORAGE_FILE_VERSION +\n-          \" has image MD5 digest when version is \" + layoutVersion);\n-    }\n-\n-    this.setCheckpointTime(readCheckpointTime(sd));\n+    setDeprecatedPropertiesForUpgrade(props);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    \n    String sDUS, sDUV;\n    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n    setDistributedUpgradeState(\n        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n    setDeprecatedPropertiesForUpgrade(props);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {}
    },
    "ffbe9e5972bf3eee9037e2602c1330e0dc744646": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-2195. Refactor StorageDirectory to not be an non-static inner class. Contributed by Todd Lipcon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151707 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/11 8:19 PM",
      "commitName": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-2195. Refactor StorageDirectory to not be an non-static inner class. Contributed by Todd Lipcon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151707 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/07/11 8:19 PM",
          "commitName": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "19/07/11 7:23 AM",
          "commitNameOld": "710e5a960e8af1d4c73e386041096aacfee8b828",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 8.54,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,37 @@\n-  protected void setFields(Properties props,\n-                           StorageDirectory sd\n-                           ) throws IOException {\n-    super.setFields(props, sd);\n-    // Set blockpoolID in version with federation support\n-    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n-      props.setProperty(\"blockpoolID\", blockpoolID);\n-    }\n-    boolean uState \u003d getDistributedUpgradeState();\n-    int uVersion \u003d getDistributedUpgradeVersion();\n-    if(uState \u0026\u0026 uVersion !\u003d getLayoutVersion()) {\n-      props.setProperty(\"distributedUpgradeState\", Boolean.toString(uState));\n-      props.setProperty(\"distributedUpgradeVersion\",\n-                        Integer.toString(uVersion));\n-    }\n-    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n-      // Though the current NN supports this feature, this function\n-      // is called with old layoutVersions from the upgrade tests.\n-      if (imageDigest \u003d\u003d null) {\n-        // May be null on the first save after an upgrade.\n-        imageDigest \u003d MD5Hash.digest(\n-            new FileInputStream(getStorageFile(sd, NameNodeFile.IMAGE)));\n-      }\n-      props.setProperty(MESSAGE_DIGEST_PROPERTY, imageDigest.toString());\n+  protected void setFieldsFromProperties(\n+      Properties props, StorageDirectory sd) throws IOException {\n+    super.setFieldsFromProperties(props, sd);\n+    if (layoutVersion \u003d\u003d 0) {\n+      throw new IOException(\"NameNode directory \"\n+                            + sd.getRoot() + \" is not formatted.\");\n     }\n \n-    writeCheckpointTime(sd);\n+    // Set Block pool ID in version with federation support\n+    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n+      String sbpid \u003d props.getProperty(\"blockpoolID\");\n+      setBlockPoolID(sd.getRoot(), sbpid);\n+    }\n+    \n+    String sDUS, sDUV;\n+    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n+    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n+    setDistributedUpgradeState(\n+        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n+        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n+\n+    String sMd5 \u003d props.getProperty(MESSAGE_DIGEST_PROPERTY);\n+    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n+      if (sMd5 \u003d\u003d null) {\n+        throw new InconsistentFSStateException(sd.getRoot(),\n+            \"file \" + STORAGE_FILE_VERSION\n+            + \" does not have MD5 image digest.\");\n+      }\n+      this.imageDigest \u003d new MD5Hash(sMd5);\n+    } else if (sMd5 !\u003d null) {\n+      throw new InconsistentFSStateException(sd.getRoot(),\n+          \"file \" + STORAGE_FILE_VERSION +\n+          \" has image MD5 digest when version is \" + layoutVersion);\n+    }\n+\n+    this.setCheckpointTime(readCheckpointTime(sd));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    \n    String sDUS, sDUV;\n    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n    setDistributedUpgradeState(\n        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n\n    String sMd5 \u003d props.getProperty(MESSAGE_DIGEST_PROPERTY);\n    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n      if (sMd5 \u003d\u003d null) {\n        throw new InconsistentFSStateException(sd.getRoot(),\n            \"file \" + STORAGE_FILE_VERSION\n            + \" does not have MD5 image digest.\");\n      }\n      this.imageDigest \u003d new MD5Hash(sMd5);\n    } else if (sMd5 !\u003d null) {\n      throw new InconsistentFSStateException(sd.getRoot(),\n          \"file \" + STORAGE_FILE_VERSION +\n          \" has image MD5 digest when version is \" + layoutVersion);\n    }\n\n    this.setCheckpointTime(readCheckpointTime(sd));\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
          "extendedDetails": {
            "oldValue": "setFields",
            "newValue": "setFieldsFromProperties"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2195. Refactor StorageDirectory to not be an non-static inner class. Contributed by Todd Lipcon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151707 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/07/11 8:19 PM",
          "commitName": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "19/07/11 7:23 AM",
          "commitNameOld": "710e5a960e8af1d4c73e386041096aacfee8b828",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 8.54,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,37 @@\n-  protected void setFields(Properties props,\n-                           StorageDirectory sd\n-                           ) throws IOException {\n-    super.setFields(props, sd);\n-    // Set blockpoolID in version with federation support\n-    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n-      props.setProperty(\"blockpoolID\", blockpoolID);\n-    }\n-    boolean uState \u003d getDistributedUpgradeState();\n-    int uVersion \u003d getDistributedUpgradeVersion();\n-    if(uState \u0026\u0026 uVersion !\u003d getLayoutVersion()) {\n-      props.setProperty(\"distributedUpgradeState\", Boolean.toString(uState));\n-      props.setProperty(\"distributedUpgradeVersion\",\n-                        Integer.toString(uVersion));\n-    }\n-    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n-      // Though the current NN supports this feature, this function\n-      // is called with old layoutVersions from the upgrade tests.\n-      if (imageDigest \u003d\u003d null) {\n-        // May be null on the first save after an upgrade.\n-        imageDigest \u003d MD5Hash.digest(\n-            new FileInputStream(getStorageFile(sd, NameNodeFile.IMAGE)));\n-      }\n-      props.setProperty(MESSAGE_DIGEST_PROPERTY, imageDigest.toString());\n+  protected void setFieldsFromProperties(\n+      Properties props, StorageDirectory sd) throws IOException {\n+    super.setFieldsFromProperties(props, sd);\n+    if (layoutVersion \u003d\u003d 0) {\n+      throw new IOException(\"NameNode directory \"\n+                            + sd.getRoot() + \" is not formatted.\");\n     }\n \n-    writeCheckpointTime(sd);\n+    // Set Block pool ID in version with federation support\n+    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n+      String sbpid \u003d props.getProperty(\"blockpoolID\");\n+      setBlockPoolID(sd.getRoot(), sbpid);\n+    }\n+    \n+    String sDUS, sDUV;\n+    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n+    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n+    setDistributedUpgradeState(\n+        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n+        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n+\n+    String sMd5 \u003d props.getProperty(MESSAGE_DIGEST_PROPERTY);\n+    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n+      if (sMd5 \u003d\u003d null) {\n+        throw new InconsistentFSStateException(sd.getRoot(),\n+            \"file \" + STORAGE_FILE_VERSION\n+            + \" does not have MD5 image digest.\");\n+      }\n+      this.imageDigest \u003d new MD5Hash(sMd5);\n+    } else if (sMd5 !\u003d null) {\n+      throw new InconsistentFSStateException(sd.getRoot(),\n+          \"file \" + STORAGE_FILE_VERSION +\n+          \" has image MD5 digest when version is \" + layoutVersion);\n+    }\n+\n+    this.setCheckpointTime(readCheckpointTime(sd));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void setFieldsFromProperties(\n      Properties props, StorageDirectory sd) throws IOException {\n    super.setFieldsFromProperties(props, sd);\n    if (layoutVersion \u003d\u003d 0) {\n      throw new IOException(\"NameNode directory \"\n                            + sd.getRoot() + \" is not formatted.\");\n    }\n\n    // Set Block pool ID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      String sbpid \u003d props.getProperty(\"blockpoolID\");\n      setBlockPoolID(sd.getRoot(), sbpid);\n    }\n    \n    String sDUS, sDUV;\n    sDUS \u003d props.getProperty(\"distributedUpgradeState\");\n    sDUV \u003d props.getProperty(\"distributedUpgradeVersion\");\n    setDistributedUpgradeState(\n        sDUS \u003d\u003d null? false : Boolean.parseBoolean(sDUS),\n        sDUV \u003d\u003d null? getLayoutVersion() : Integer.parseInt(sDUV));\n\n    String sMd5 \u003d props.getProperty(MESSAGE_DIGEST_PROPERTY);\n    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n      if (sMd5 \u003d\u003d null) {\n        throw new InconsistentFSStateException(sd.getRoot(),\n            \"file \" + STORAGE_FILE_VERSION\n            + \" does not have MD5 image digest.\");\n      }\n      this.imageDigest \u003d new MD5Hash(sMd5);\n    } else if (sMd5 !\u003d null) {\n      throw new InconsistentFSStateException(sd.getRoot(),\n          \"file \" + STORAGE_FILE_VERSION +\n          \" has image MD5 digest when version is \" + layoutVersion);\n    }\n\n    this.setCheckpointTime(readCheckpointTime(sd));\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+  protected void setFields(Properties props,\n+                           StorageDirectory sd\n+                           ) throws IOException {\n+    super.setFields(props, sd);\n+    // Set blockpoolID in version with federation support\n+    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n+      props.setProperty(\"blockpoolID\", blockpoolID);\n+    }\n+    boolean uState \u003d getDistributedUpgradeState();\n+    int uVersion \u003d getDistributedUpgradeVersion();\n+    if(uState \u0026\u0026 uVersion !\u003d getLayoutVersion()) {\n+      props.setProperty(\"distributedUpgradeState\", Boolean.toString(uState));\n+      props.setProperty(\"distributedUpgradeVersion\",\n+                        Integer.toString(uVersion));\n+    }\n+    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n+      // Though the current NN supports this feature, this function\n+      // is called with old layoutVersions from the upgrade tests.\n+      if (imageDigest \u003d\u003d null) {\n+        // May be null on the first save after an upgrade.\n+        imageDigest \u003d MD5Hash.digest(\n+            new FileInputStream(getStorageFile(sd, NameNodeFile.IMAGE)));\n+      }\n+      props.setProperty(MESSAGE_DIGEST_PROPERTY, imageDigest.toString());\n+    }\n+\n+    writeCheckpointTime(sd);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setFields(Properties props,\n                           StorageDirectory sd\n                           ) throws IOException {\n    super.setFields(props, sd);\n    // Set blockpoolID in version with federation support\n    if (LayoutVersion.supports(Feature.FEDERATION, layoutVersion)) {\n      props.setProperty(\"blockpoolID\", blockpoolID);\n    }\n    boolean uState \u003d getDistributedUpgradeState();\n    int uVersion \u003d getDistributedUpgradeVersion();\n    if(uState \u0026\u0026 uVersion !\u003d getLayoutVersion()) {\n      props.setProperty(\"distributedUpgradeState\", Boolean.toString(uState));\n      props.setProperty(\"distributedUpgradeVersion\",\n                        Integer.toString(uVersion));\n    }\n    if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM, layoutVersion)) {\n      // Though the current NN supports this feature, this function\n      // is called with old layoutVersions from the upgrade tests.\n      if (imageDigest \u003d\u003d null) {\n        // May be null on the first save after an upgrade.\n        imageDigest \u003d MD5Hash.digest(\n            new FileInputStream(getStorageFile(sd, NameNodeFile.IMAGE)));\n      }\n      props.setProperty(MESSAGE_DIGEST_PROPERTY, imageDigest.toString());\n    }\n\n    writeCheckpointTime(sd);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java"
    }
  }
}