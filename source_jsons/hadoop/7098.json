{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StoragePolicySatisfier.java",
  "functionName": "start",
  "functionId": "start___serviceMode-StoragePolicySatisfierMode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
  "functionStartLine": 153,
  "functionEndLine": 168,
  "numCommitsSeen": 83,
  "timeTaken": 18023,
  "changeHistory": [
    "3ac07b720b7839a7fe6c83f4ccfe319b6a892501",
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
    "66e8f9b31529226309c924226a53dead3e6fcf11",
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
    "75ccc1396b677777cdc0d4992a4af3911f9f88c2",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
    "5845c36c16c423107183287cce3be9357dad7564",
    "3b83110d5ed582b9f913ecf3f62ce410535f8fca",
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
    "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
    "78420719eb1f138c6f10558befb7bc8ebcc28a54",
    "bfd3f8bd8a9ae2186ec3e4addc71f912ec7b8923",
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
    "0e820f16af309cc8476edba448dd548686431133",
    "5eb24ef7e7b8fb61a5f5b88bae3596b30aaeb60b",
    "695a402fcad20c711c5d845e0664c43fd6b06286",
    "e34331c31d68cb22891db48011db5b36ad178af1",
    "5179d99b7e1faeac1ce041967480115913d9f795",
    "047526b4c27909f78313e1ed6216de85c6137f14",
    "1438da494424193e330f24edef823bbd60dc37d2"
  ],
  "changeHistoryShort": {
    "3ac07b720b7839a7fe6c83f4ccfe319b6a892501": "Ymultichange(Yparameterchange,Ybodychange)",
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": "Ybodychange",
    "66e8f9b31529226309c924226a53dead3e6fcf11": "Ybodychange",
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": "Ybodychange",
    "75ccc1396b677777cdc0d4992a4af3911f9f88c2": "Ybodychange",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": "Ybodychange",
    "5845c36c16c423107183287cce3be9357dad7564": "Ybodychange",
    "3b83110d5ed582b9f913ecf3f62ce410535f8fca": "Ymultichange(Yparameterchange,Ybodychange)",
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d": "Ymultichange(Yparameterchange,Ybodychange)",
    "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d": "Ymultichange(Yparameterchange,Ybodychange)",
    "78420719eb1f138c6f10558befb7bc8ebcc28a54": "Yfilerename",
    "bfd3f8bd8a9ae2186ec3e4addc71f912ec7b8923": "Ybodychange",
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": "Ybodychange",
    "0e820f16af309cc8476edba448dd548686431133": "Ybodychange",
    "5eb24ef7e7b8fb61a5f5b88bae3596b30aaeb60b": "Ybodychange",
    "695a402fcad20c711c5d845e0664c43fd6b06286": "Ybodychange",
    "e34331c31d68cb22891db48011db5b36ad178af1": "Ymultichange(Yparameterchange,Ybodychange)",
    "5179d99b7e1faeac1ce041967480115913d9f795": "Ymultichange(Ymodifierchange,Ybodychange)",
    "047526b4c27909f78313e1ed6216de85c6137f14": "Ybodychange",
    "1438da494424193e330f24edef823bbd60dc37d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ac07b720b7839a7fe6c83f4ccfe319b6a892501": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13808: [SPS]: Remove unwanted FSNamesystem #isFileOpenedForWrite() and #getFileInfo() function. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "3ac07b720b7839a7fe6c83f4ccfe319b6a892501",
      "commitAuthor": "Uma Maheswara Rao Gangumalla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13808: [SPS]: Remove unwanted FSNamesystem #isFileOpenedForWrite() and #getFileInfo() function. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "3ac07b720b7839a7fe6c83f4ccfe319b6a892501",
          "commitAuthor": "Uma Maheswara Rao Gangumalla",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,16 @@\n-  public synchronized void start(boolean reconfigStart,\n-      StoragePolicySatisfierMode serviceMode) {\n+  public synchronized void start(StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n-    if (reconfigStart) {\n-      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n-          + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n-    } else {\n-      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n-          StringUtils.toLowerCase(serviceMode.toString()));\n-    }\n-\n+    LOG.info(\"Starting {} StoragePolicySatisfier.\",\n+        StringUtils.toLowerCase(serviceMode.toString()));\n     isRunning \u003d true;\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n     dnCacheMgr \u003d new DatanodeCacheManager(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    LOG.info(\"Starting {} StoragePolicySatisfier.\",\n        StringUtils.toLowerCase(serviceMode.toString()));\n    isRunning \u003d true;\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n    dnCacheMgr \u003d new DatanodeCacheManager(conf);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[reconfigStart-boolean, serviceMode-StoragePolicySatisfierMode]",
            "newValue": "[serviceMode-StoragePolicySatisfierMode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13808: [SPS]: Remove unwanted FSNamesystem #isFileOpenedForWrite() and #getFileInfo() function. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "3ac07b720b7839a7fe6c83f4ccfe319b6a892501",
          "commitAuthor": "Uma Maheswara Rao Gangumalla",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,16 @@\n-  public synchronized void start(boolean reconfigStart,\n-      StoragePolicySatisfierMode serviceMode) {\n+  public synchronized void start(StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n-    if (reconfigStart) {\n-      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n-          + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n-    } else {\n-      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n-          StringUtils.toLowerCase(serviceMode.toString()));\n-    }\n-\n+    LOG.info(\"Starting {} StoragePolicySatisfier.\",\n+        StringUtils.toLowerCase(serviceMode.toString()));\n     isRunning \u003d true;\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n     dnCacheMgr \u003d new DatanodeCacheManager(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    LOG.info(\"Starting {} StoragePolicySatisfier.\",\n        StringUtils.toLowerCase(serviceMode.toString()));\n    isRunning \u003d true;\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n    dnCacheMgr \u003d new DatanodeCacheManager(conf);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13076: [SPS]: Cleanup work for HDFS-10285 merge. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "66e8f9b31529226309c924226a53dead3e6fcf11",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,23 @@\n   public synchronized void start(boolean reconfigStart,\n       StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n-    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n-        \u0026\u0026 ctxt.isMoverRunning()) {\n-      isRunning \u003d false;\n-      LOG.error(\n-          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n-              + HdfsServerConstants.MOVER_ID_PATH.toString()\n-              + \" been opened. Maybe a Mover instance is running!\");\n-      return;\n-    }\n     if (reconfigStart) {\n       LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n     } else {\n       LOG.info(\"Starting {} StoragePolicySatisfier.\",\n           StringUtils.toLowerCase(serviceMode.toString()));\n     }\n \n     isRunning \u003d true;\n-    // Ensure that all the previously submitted block movements(if any) have to\n-    // be stopped in all datanodes.\n-    addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n     dnCacheMgr \u003d new DatanodeCacheManager(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n    } else {\n      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n          StringUtils.toLowerCase(serviceMode.toString()));\n    }\n\n    isRunning \u003d true;\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n    dnCacheMgr \u003d new DatanodeCacheManager(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "66e8f9b31529226309c924226a53dead3e6fcf11": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13381 : [SPS]: Use DFSUtilClient#makePathFromFileId() to prepare satisfier file path. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "66e8f9b31529226309c924226a53dead3e6fcf11",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   public synchronized void start(boolean reconfigStart,\n       StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n         \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n     } else {\n       LOG.info(\"Starting {} StoragePolicySatisfier.\",\n           StringUtils.toLowerCase(serviceMode.toString()));\n     }\n \n     isRunning \u003d true;\n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n-    dnCacheMgr \u003d new DatanodeCacheManager\u003cT\u003e(conf);\n+    dnCacheMgr \u003d new DatanodeCacheManager(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n    } else {\n      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n          StringUtils.toLowerCase(serviceMode.toString()));\n    }\n\n    isRunning \u003d true;\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n    dnCacheMgr \u003d new DatanodeCacheManager(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "75ccc1396b677777cdc0d4992a4af3911f9f88c2",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,35 @@\n   public synchronized void start(boolean reconfigStart,\n       StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n-    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n+    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n         \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n-          + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n+          + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n     } else {\n       LOG.info(\"Starting {} StoragePolicySatisfier.\",\n-          StringUtils.toLowerCase(spsMode.toString()));\n+          StringUtils.toLowerCase(serviceMode.toString()));\n     }\n \n     isRunning \u003d true;\n-    this.spsMode \u003d serviceMode;\n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n     dnCacheMgr \u003d new DatanodeCacheManager\u003cT\u003e(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\", StringUtils.toLowerCase(serviceMode.toString()));\n    } else {\n      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n          StringUtils.toLowerCase(serviceMode.toString()));\n    }\n\n    isRunning \u003d true;\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n    dnCacheMgr \u003d new DatanodeCacheManager\u003cT\u003e(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "75ccc1396b677777cdc0d4992a4af3911f9f88c2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13166: [SPS]: Implement caching mechanism to keep LIVE datanodes to minimize costly getLiveDatanodeStorageReport() calls. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "75ccc1396b677777cdc0d4992a4af3911f9f88c2",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "8467ec24fb74f30371d5a13e893fc56309ee9372",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,36 @@\n   public synchronized void start(boolean reconfigStart,\n       StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n     if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n         \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n     } else {\n       LOG.info(\"Starting {} StoragePolicySatisfier.\",\n           StringUtils.toLowerCase(spsMode.toString()));\n     }\n \n     isRunning \u003d true;\n     this.spsMode \u003d serviceMode;\n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n+    dnCacheMgr \u003d new DatanodeCacheManager\u003cT\u003e(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n    } else {\n      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n          StringUtils.toLowerCase(spsMode.toString()));\n    }\n\n    isRunning \u003d true;\n    this.spsMode \u003d serviceMode;\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n    dnCacheMgr \u003d new DatanodeCacheManager\u003cT\u003e(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13097: [SPS]: Fix the branch review comments(Part1). Contributed by Surendra Singh.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "d3de4fb2a084cbadab8ef91f11aa7732d3b0f308",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   public synchronized void start(boolean reconfigStart,\n       StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n-    isRunning \u003d true;\n-    this.spsMode \u003d serviceMode;\n     if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n         \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n     } else {\n       LOG.info(\"Starting {} StoragePolicySatisfier.\",\n           StringUtils.toLowerCase(spsMode.toString()));\n     }\n \n+    isRunning \u003d true;\n+    this.spsMode \u003d serviceMode;\n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n    } else {\n      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n          StringUtils.toLowerCase(spsMode.toString()));\n    }\n\n    isRunning \u003d true;\n    this.spsMode \u003d serviceMode;\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "5845c36c16c423107183287cce3be9357dad7564": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13050: [SPS]: Create start/stop script to start external SPS process. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "5845c36c16c423107183287cce3be9357dad7564",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n   public synchronized void start(boolean reconfigStart,\n       StoragePolicySatisfierMode serviceMode) {\n     if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n           serviceMode);\n       return;\n     }\n     isRunning \u003d true;\n     this.spsMode \u003d serviceMode;\n     if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n         \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n-      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n-          + \"start it.\");\n+      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n+          + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n     } else {\n-      LOG.info(\"Starting StoragePolicySatisfier.\");\n+      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n+          StringUtils.toLowerCase(spsMode.toString()));\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    isRunning \u003d true;\n    this.spsMode \u003d serviceMode;\n    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting {} StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\", StringUtils.toLowerCase(spsMode.toString()));\n    } else {\n      LOG.info(\"Starting {} StoragePolicySatisfier.\",\n          StringUtils.toLowerCase(spsMode.toString()));\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "3b83110d5ed582b9f913ecf3f62ce410535f8fca": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13057: [SPS]: Revisit configurations to make SPS service modes internal/external/none. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "3b83110d5ed582b9f913ecf3f62ce410535f8fca",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13057: [SPS]: Revisit configurations to make SPS service modes internal/external/none. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "3b83110d5ed582b9f913ecf3f62ce410535f8fca",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,34 @@\n-  public synchronized void start(boolean reconfigStart) {\n+  public synchronized void start(boolean reconfigStart,\n+      StoragePolicySatisfierMode serviceMode) {\n+    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n+      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n+          serviceMode);\n+      return;\n+    }\n     isRunning \u003d true;\n-    if (ctxt.isMoverRunning()) {\n+    this.spsMode \u003d serviceMode;\n+    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n+        \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    isRunning \u003d true;\n    this.spsMode \u003d serviceMode;\n    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[reconfigStart-boolean]",
            "newValue": "[reconfigStart-boolean, serviceMode-StoragePolicySatisfierMode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13057: [SPS]: Revisit configurations to make SPS service modes internal/external/none. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "3b83110d5ed582b9f913ecf3f62ce410535f8fca",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,34 @@\n-  public synchronized void start(boolean reconfigStart) {\n+  public synchronized void start(boolean reconfigStart,\n+      StoragePolicySatisfierMode serviceMode) {\n+    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n+      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n+          serviceMode);\n+      return;\n+    }\n     isRunning \u003d true;\n-    if (ctxt.isMoverRunning()) {\n+    this.spsMode \u003d serviceMode;\n+    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n+        \u0026\u0026 ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n     this.storageMovementNeeded.activate();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart,\n      StoragePolicySatisfierMode serviceMode) {\n    if (serviceMode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.error(\"Can\u0027t start StoragePolicySatisfier for the given mode:{}\",\n          serviceMode);\n      return;\n    }\n    isRunning \u003d true;\n    this.spsMode \u003d serviceMode;\n    if (spsMode \u003d\u003d StoragePolicySatisfierMode.INTERNAL\n        \u0026\u0026 ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12911. [SPS]: Modularize the SPS code and expose necessary interfaces for external/internal implementations. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12911. [SPS]: Modularize the SPS code and expose necessary interfaces for external/internal implementations. Contributed by Uma Maheswara Rao G\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n-  public synchronized void start(boolean reconfigStart, FSDirectory fsd) {\n+  public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n-    ctxt.setSPSRunning(this::isRunning);\n     if (ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n-    storageMovementNeeded.init(fsd);\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n+    this.storageMovementNeeded.activate();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[reconfigStart-boolean, fsd-FSDirectory]",
            "newValue": "[reconfigStart-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12911. [SPS]: Modularize the SPS code and expose necessary interfaces for external/internal implementations. Contributed by Uma Maheswara Rao G\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n-  public synchronized void start(boolean reconfigStart, FSDirectory fsd) {\n+  public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n-    ctxt.setSPSRunning(this::isRunning);\n     if (ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n-    storageMovementNeeded.init(fsd);\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n+    this.storageMovementNeeded.activate();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n    this.storageMovementNeeded.activate();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12982 : [SPS]: Reduce the locking and cleanup the Namesystem access. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
      "commitAuthor": "Surendra Singh Lilhore",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12982 : [SPS]: Reduce the locking and cleanup the Namesystem access. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "78420719eb1f138c6f10558befb7bc8ebcc28a54",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public synchronized void start(boolean reconfigStart) {\n+  public synchronized void start(boolean reconfigStart, FSDirectory fsd) {\n     isRunning \u003d true;\n-    if (checkIfMoverRunning()) {\n+    ctxt.setSPSRunning(this::isRunning);\n+    if (ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n-    storageMovementNeeded.init();\n+    storageMovementNeeded.init(fsd);\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart, FSDirectory fsd) {\n    isRunning \u003d true;\n    ctxt.setSPSRunning(this::isRunning);\n    if (ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storageMovementNeeded.init(fsd);\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[reconfigStart-boolean]",
            "newValue": "[reconfigStart-boolean, fsd-FSDirectory]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12982 : [SPS]: Reduce the locking and cleanup the Namesystem access. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "78420719eb1f138c6f10558befb7bc8ebcc28a54",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public synchronized void start(boolean reconfigStart) {\n+  public synchronized void start(boolean reconfigStart, FSDirectory fsd) {\n     isRunning \u003d true;\n-    if (checkIfMoverRunning()) {\n+    ctxt.setSPSRunning(this::isRunning);\n+    if (ctxt.isMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n-    storageMovementNeeded.init();\n+    storageMovementNeeded.init(fsd);\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart, FSDirectory fsd) {\n    isRunning \u003d true;\n    ctxt.setSPSRunning(this::isRunning);\n    if (ctxt.isMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storageMovementNeeded.init(fsd);\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "78420719eb1f138c6f10558befb7bc8ebcc28a54": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-12955: [SPS]: Move SPS classes to a separate package. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "78420719eb1f138c6f10558befb7bc8ebcc28a54",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "c561cb316e365ef674784cd6cf0b12c0fbc271a3",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (checkIfMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storageMovementNeeded.init();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java"
      }
    },
    "bfd3f8bd8a9ae2186ec3e4addc71f912ec7b8923": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12291: [SPS]: Provide a mechanism to recursively iterate and satisfy storage policy of all the files under the given dir. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "bfd3f8bd8a9ae2186ec3e4addc71f912ec7b8923",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n     if (checkIfMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n-    storageMovementNeeded.start();\n+    storageMovementNeeded.init();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (checkIfMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storageMovementNeeded.init();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12225: [SPS]: Optimize extended attributes for tracking SPS movements. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "0e820f16af309cc8476edba448dd548686431133",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n     if (checkIfMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n-\n+    storageMovementNeeded.start();\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (checkIfMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n    storageMovementNeeded.start();\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "0e820f16af309cc8476edba448dd548686431133": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12214: [SPS]: Fix review comments of StoragePolicySatisfier feature. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "0e820f16af309cc8476edba448dd548686431133",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "4bcf61c696909342f1a238f614d4471c4b6fbad0",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n     if (checkIfMoverRunning()) {\n       isRunning \u003d false;\n       LOG.error(\n           \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n               + HdfsServerConstants.MOVER_ID_PATH.toString()\n               + \" been opened. Maybe a Mover instance is running!\");\n       return;\n     }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n-          + \"activate it.\");\n+          + \"start it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n \n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (checkIfMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"start it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "5eb24ef7e7b8fb61a5f5b88bae3596b30aaeb60b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11264: [SPS]: Double checks to ensure that SPS/Mover are not running together. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "5eb24ef7e7b8fb61a5f5b88bae3596b30aaeb60b",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "0b360b16ab8759e3db606ada3420f4e2f56235f3",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,26 @@\n   public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n+    if (checkIfMoverRunning()) {\n+      isRunning \u003d false;\n+      LOG.error(\n+          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n+              + HdfsServerConstants.MOVER_ID_PATH.toString()\n+              + \" been opened. Maybe a Mover instance is running!\");\n+      return;\n+    }\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"activate it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n \n     // Ensure that all the previously submitted block movements(if any) have to\n     // be stopped in all datanodes.\n     addDropSPSWorkCommandsToAllDNs();\n \n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (checkIfMoverRunning()) {\n      isRunning \u003d false;\n      LOG.error(\n          \"Stopping StoragePolicySatisfier thread \" + \"as Mover ID file \"\n              + HdfsServerConstants.MOVER_ID_PATH.toString()\n              + \" been opened. Maybe a Mover instance is running!\");\n      return;\n    }\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"activate it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "695a402fcad20c711c5d845e0664c43fd6b06286": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11334: [SPS]: NN switch and rescheduling movements can lead to have more than one coordinator for same file blocks. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "695a402fcad20c711c5d845e0664c43fd6b06286",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:05 AM",
      "commitNameOld": "11a08a7e8f727449f17d1e31855996353b2975fe",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n   public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n     if (reconfigStart) {\n       LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n           + \"activate it.\");\n     } else {\n       LOG.info(\"Starting StoragePolicySatisfier.\");\n     }\n+\n+    // Ensure that all the previously submitted block movements(if any) have to\n+    // be stopped in all datanodes.\n+    addDropSPSWorkCommandsToAllDNs();\n+\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"activate it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n\n    // Ensure that all the previously submitted block movements(if any) have to\n    // be stopped in all datanodes.\n    addDropSPSWorkCommandsToAllDNs();\n\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "e34331c31d68cb22891db48011db5b36ad178af1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11243. [SPS]: Add a protocol command from NN to DN for dropping the SPS work and queues. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "e34331c31d68cb22891db48011db5b36ad178af1",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11243. [SPS]: Add a protocol command from NN to DN for dropping the SPS work and queues. Contributed by Uma Maheswara Rao G\n",
          "commitDate": "12/08/18 3:05 AM",
          "commitName": "e34331c31d68cb22891db48011db5b36ad178af1",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "f8fc96a66ea3cbd41a3915c4546ff816451cf9db",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public synchronized void start() {\n+  public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n-    LOG.info(\"Starting StoragePolicySatisfier.\");\n+    if (reconfigStart) {\n+      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n+          + \"activate it.\");\n+    } else {\n+      LOG.info(\"Starting StoragePolicySatisfier.\");\n+    }\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"activate it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[reconfigStart-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11243. [SPS]: Add a protocol command from NN to DN for dropping the SPS work and queues. Contributed by Uma Maheswara Rao G\n",
          "commitDate": "12/08/18 3:05 AM",
          "commitName": "e34331c31d68cb22891db48011db5b36ad178af1",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "f8fc96a66ea3cbd41a3915c4546ff816451cf9db",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public synchronized void start() {\n+  public synchronized void start(boolean reconfigStart) {\n     isRunning \u003d true;\n-    LOG.info(\"Starting StoragePolicySatisfier.\");\n+    if (reconfigStart) {\n+      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n+          + \"activate it.\");\n+    } else {\n+      LOG.info(\"Starting StoragePolicySatisfier.\");\n+    }\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start(boolean reconfigStart) {\n    isRunning \u003d true;\n    if (reconfigStart) {\n      LOG.info(\"Starting StoragePolicySatisfier, as admin requested to \"\n          + \"activate it.\");\n    } else {\n      LOG.info(\"Starting StoragePolicySatisfier.\");\n    }\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "5179d99b7e1faeac1ce041967480115913d9f795": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-11123. [SPS] Make storage policy satisfier daemon work on/off dynamically. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "5179d99b7e1faeac1ce041967480115913d9f795",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-11123. [SPS] Make storage policy satisfier daemon work on/off dynamically. Contributed by Uma Maheswara Rao G\n",
          "commitDate": "12/08/18 3:05 AM",
          "commitName": "5179d99b7e1faeac1ce041967480115913d9f795",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "cd5262aba00aa51b905aaac95e201d4d48f2480d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,8 @@\n-  public void start() {\n+  public synchronized void start() {\n+    isRunning \u003d true;\n+    LOG.info(\"Starting StoragePolicySatisfier.\");\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start() {\n    isRunning \u003d true;\n    LOG.info(\"Starting StoragePolicySatisfier.\");\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11123. [SPS] Make storage policy satisfier daemon work on/off dynamically. Contributed by Uma Maheswara Rao G\n",
          "commitDate": "12/08/18 3:05 AM",
          "commitName": "5179d99b7e1faeac1ce041967480115913d9f795",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "cd5262aba00aa51b905aaac95e201d4d48f2480d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,8 @@\n-  public void start() {\n+  public synchronized void start() {\n+    isRunning \u003d true;\n+    LOG.info(\"Starting StoragePolicySatisfier.\");\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n     this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void start() {\n    isRunning \u003d true;\n    LOG.info(\"Starting StoragePolicySatisfier.\");\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "047526b4c27909f78313e1ed6216de85c6137f14": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11029. [SPS]:Provide retry mechanism for the blocks which were failed while moving its storage at DNs. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "047526b4c27909f78313e1ed6216de85c6137f14",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:05 AM",
      "commitNameOld": "0f2d1ddc2c41c8db800c58cabb150e71804fe23a",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n   public void start() {\n     storagePolicySatisfierThread \u003d new Daemon(this);\n     storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n     storagePolicySatisfierThread.start();\n+    this.storageMovementsMonitor.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n    this.storageMovementsMonitor.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "1438da494424193e330f24edef823bbd60dc37d2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10800: [SPS]: Daemon thread in Namenode to find blocks placed in other storage than what the policy specifies. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "1438da494424193e330f24edef823bbd60dc37d2",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,5 @@\n+  public void start() {\n+    storagePolicySatisfierThread \u003d new Daemon(this);\n+    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n+    storagePolicySatisfierThread.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    storagePolicySatisfierThread \u003d new Daemon(this);\n    storagePolicySatisfierThread.setName(\"StoragePolicySatisfier\");\n    storagePolicySatisfierThread.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySatisfier.java"
    }
  }
}