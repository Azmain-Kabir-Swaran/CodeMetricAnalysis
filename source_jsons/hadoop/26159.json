{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMWebServices.java",
  "functionName": "updateJobTaskAttemptState",
  "functionId": "updateJobTaskAttemptState___targetState-JobTaskAttemptState__hsr-HttpServletRequest(annotations-@Context)__jid-String(annotations-@PathParam(\"jobid\"))__tid-String(annotations-@PathParam(\"taskid\"))__attId-String(annotations-@PathParam(\"attemptid\"))",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
  "functionStartLine": 451,
  "functionEndLine": 482,
  "numCommitsSeen": 12,
  "timeTaken": 1328,
  "changeHistory": [
    "d18f10ad1b3e497fa1aaaeb85ba055f87d9849f7"
  ],
  "changeHistoryShort": {
    "d18f10ad1b3e497fa1aaaeb85ba055f87d9849f7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d18f10ad1b3e497fa1aaaeb85ba055f87d9849f7": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6284. Add Task Attempt State API to MapReduce Application Master REST API. Contributed by Ryu Kobayashi.\n",
      "commitDate": "07/05/15 11:59 PM",
      "commitName": "d18f10ad1b3e497fa1aaaeb85ba055f87d9849f7",
      "commitAuthor": "Tsuyoshi Ozawa",
      "diff": "@@ -0,0 +1,32 @@\n+  public Response updateJobTaskAttemptState(JobTaskAttemptState targetState,\n+      @Context HttpServletRequest hsr, @PathParam(\"jobid\") String jid,\n+      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId)\n+          throws IOException, InterruptedException {\n+    init();\n+    Job job \u003d getJobFromJobIdString(jid, appCtx);\n+    checkAccess(job, hsr);\n+\n+    String remoteUser \u003d hsr.getRemoteUser();\n+    UserGroupInformation callerUGI \u003d null;\n+    if (remoteUser !\u003d null) {\n+      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n+    }\n+\n+    Task task \u003d getTaskFromTaskIdString(tid, job);\n+    TaskAttempt ta \u003d getTaskAttemptFromTaskAttemptString(attId, task);\n+    if (!ta.getState().toString().equals(targetState.getState())) {\n+      // user is attempting to change state. right we only\n+      // allow users to kill the job task attempt\n+      if (targetState.getState().equals(TaskAttemptState.KILLED.toString())) {\n+        return killJobTaskAttempt(ta, callerUGI, hsr);\n+      }\n+      throw new BadRequestException(\"Only \u0027\"\n+          + TaskAttemptState.KILLED.toString()\n+          + \"\u0027 is allowed as a target state.\");\n+    }\n+\n+    JobTaskAttemptState ret \u003d new JobTaskAttemptState();\n+    ret.setState(ta.getState().toString());\n+\n+    return Response.status(Status.OK).entity(ret).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateJobTaskAttemptState(JobTaskAttemptState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"jobid\") String jid,\n      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId)\n          throws IOException, InterruptedException {\n    init();\n    Job job \u003d getJobFromJobIdString(jid, appCtx);\n    checkAccess(job, hsr);\n\n    String remoteUser \u003d hsr.getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n\n    Task task \u003d getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d getTaskAttemptFromTaskAttemptString(attId, task);\n    if (!ta.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the job task attempt\n      if (targetState.getState().equals(TaskAttemptState.KILLED.toString())) {\n        return killJobTaskAttempt(ta, callerUGI, hsr);\n      }\n      throw new BadRequestException(\"Only \u0027\"\n          + TaskAttemptState.KILLED.toString()\n          + \"\u0027 is allowed as a target state.\");\n    }\n\n    JobTaskAttemptState ret \u003d new JobTaskAttemptState();\n    ret.setState(ta.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java"
    }
  }
}