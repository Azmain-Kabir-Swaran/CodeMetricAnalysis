{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GuaranteedOrZeroCapacityOverTimePolicy.java",
  "functionName": "deactivateLeafQueuesIfInActive",
  "functionId": "deactivateLeafQueuesIfInActive___parentQueue-ParentQueue__nodeLabel-String__leafQueueEntitlements-Map__String,QueueCapacities__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
  "functionStartLine": 585,
  "functionEndLine": 613,
  "numCommitsSeen": 8,
  "timeTaken": 4579,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "344c335a920e6f32a35ebace0a118a9dc4a22fb7",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "344c335a920e6f32a35ebace0a118a9dc4a22fb7": "Ybodychange",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": "Ymultichange(Yparameterchange,Ybodychange)",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "18/03/19 10:57 AM",
      "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 372.72,
      "commitsBetweenForRepo": 2179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n       ParentQueue parentQueue, String nodeLabel,\n       Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n       throws SchedulerDynamicEditException {\n     Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n \n     for (CSQueue childQueue : parentQueue.getChildQueues()) {\n       AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n       if (leafQueue !\u003d null) {\n         if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n-          if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n-            leafQueueEntitlements.put(leafQueue.getQueueName(),\n+          if (!leafQueueEntitlements.containsKey(leafQueue.getQueuePath())) {\n+            leafQueueEntitlements.put(leafQueue.getQueuePath(),\n                 new QueueCapacities(false));\n           }\n \n           QueueCapacities capacities \u003d leafQueueEntitlements.get(\n-              leafQueue.getQueueName());\n+              leafQueue.getQueuePath());\n           updateToZeroCapacity(capacities, nodeLabel);\n-          deactivatedQueues.put(leafQueue.getQueueName(),\n+          deactivatedQueues.put(leafQueue.getQueuePath(),\n               leafQueueTemplateCapacities);\n         }\n       } else{\n         LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n             + \"deactivate for \" + parentQueue);\n       }\n     }\n \n     return deactivatedQueues;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n      ParentQueue parentQueue, String nodeLabel,\n      Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n      throws SchedulerDynamicEditException {\n    Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n\n    for (CSQueue childQueue : parentQueue.getChildQueues()) {\n      AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n      if (leafQueue !\u003d null) {\n        if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n          if (!leafQueueEntitlements.containsKey(leafQueue.getQueuePath())) {\n            leafQueueEntitlements.put(leafQueue.getQueuePath(),\n                new QueueCapacities(false));\n          }\n\n          QueueCapacities capacities \u003d leafQueueEntitlements.get(\n              leafQueue.getQueuePath());\n          updateToZeroCapacity(capacities, nodeLabel);\n          deactivatedQueues.put(leafQueue.getQueuePath(),\n              leafQueueTemplateCapacities);\n        }\n      } else{\n        LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n            + \"deactivate for \" + parentQueue);\n      }\n    }\n\n    return deactivatedQueues;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
      "extendedDetails": {}
    },
    "344c335a920e6f32a35ebace0a118a9dc4a22fb7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8588. Logging improvements for better debuggability. (Suma Shivaprasad via wangda)\n\nChange-Id: I66aa4b0ec031ae5ce0fae558e2f8cbcbbfebc442\n",
      "commitDate": "09/08/18 11:04 AM",
      "commitName": "344c335a920e6f32a35ebace0a118a9dc4a22fb7",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/04/18 8:47 AM",
      "commitNameOld": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 122.09,
      "commitsBetweenForRepo": 1381,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,29 @@\n   private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n       ParentQueue parentQueue, String nodeLabel,\n       Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n       throws SchedulerDynamicEditException {\n     Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n \n     for (CSQueue childQueue : parentQueue.getChildQueues()) {\n       AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n       if (leafQueue !\u003d null) {\n         if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n           if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n             leafQueueEntitlements.put(leafQueue.getQueueName(),\n                 new QueueCapacities(false));\n           }\n \n           QueueCapacities capacities \u003d leafQueueEntitlements.get(\n               leafQueue.getQueueName());\n           updateToZeroCapacity(capacities, nodeLabel);\n           deactivatedQueues.put(leafQueue.getQueueName(),\n               leafQueueTemplateCapacities);\n-        } else{\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\" Leaf queue has pending applications or is \" + \"inactive\"\n-                + \" : \" + leafQueue.getNumApplications()\n-                + \".Skipping deactivation for \" + leafQueue);\n-          }\n         }\n       } else{\n         LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n             + \"deactivate for \" + parentQueue);\n       }\n     }\n \n     return deactivatedQueues;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n      ParentQueue parentQueue, String nodeLabel,\n      Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n      throws SchedulerDynamicEditException {\n    Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n\n    for (CSQueue childQueue : parentQueue.getChildQueues()) {\n      AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n      if (leafQueue !\u003d null) {\n        if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n          if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n            leafQueueEntitlements.put(leafQueue.getQueueName(),\n                new QueueCapacities(false));\n          }\n\n          QueueCapacities capacities \u003d leafQueueEntitlements.get(\n              leafQueue.getQueueName());\n          updateToZeroCapacity(capacities, nodeLabel);\n          deactivatedQueues.put(leafQueue.getQueueName(),\n              leafQueueTemplateCapacities);\n        }\n      } else{\n        LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n            + \"deactivate for \" + parentQueue);\n      }\n    }\n\n    return deactivatedQueues;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
      "extendedDetails": {}
    },
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
      "commitDate": "09/04/18 8:47 AM",
      "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
          "commitDate": "09/04/18 8:47 AM",
          "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
          "commitAuthor": "Sunil G",
          "commitDateOld": "08/12/17 3:10 PM",
          "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 121.69,
          "commitsBetweenForRepo": 859,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,35 @@\n   private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n-      ParentQueue parentQueue,\n-      List\u003cQueueManagementChange\u003e queueManagementChanges)\n+      ParentQueue parentQueue, String nodeLabel,\n+      Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n       throws SchedulerDynamicEditException {\n     Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n \n     for (CSQueue childQueue : parentQueue.getChildQueues()) {\n       AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n+      if (leafQueue !\u003d null) {\n+        if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n+          if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n+            leafQueueEntitlements.put(leafQueue.getQueueName(),\n+                new QueueCapacities(false));\n+          }\n \n-      if (isActive(leafQueue) \u0026\u0026 !hasPendingApps(leafQueue)) {\n-        queueManagementChanges.add(\n-            new QueueManagementChange.UpdateQueue(leafQueue,\n-                ZERO_CAPACITY_ENTITLEMENT));\n-        deactivatedQueues.put(leafQueue.getQueueName(),\n-            leafQueueTemplateCapacities);\n-      } else{\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\" Leaf queue has pending applications :  \" + leafQueue\n-              .getNumApplications() + \".Skipping deactivation for \"\n-              + leafQueue);\n+          QueueCapacities capacities \u003d leafQueueEntitlements.get(\n+              leafQueue.getQueueName());\n+          updateToZeroCapacity(capacities, nodeLabel);\n+          deactivatedQueues.put(leafQueue.getQueueName(),\n+              leafQueueTemplateCapacities);\n+        } else{\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\" Leaf queue has pending applications or is \" + \"inactive\"\n+                + \" : \" + leafQueue.getNumApplications()\n+                + \".Skipping deactivation for \" + leafQueue);\n+          }\n         }\n+      } else{\n+        LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n+            + \"deactivate for \" + parentQueue);\n       }\n     }\n \n-    if (LOG.isDebugEnabled()) {\n-      if (deactivatedQueues.size() \u003e 0) {\n-        LOG.debug(\"Deactivated leaf queues : \" + deactivatedQueues);\n-      }\n-    }\n     return deactivatedQueues;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n      ParentQueue parentQueue, String nodeLabel,\n      Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n      throws SchedulerDynamicEditException {\n    Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n\n    for (CSQueue childQueue : parentQueue.getChildQueues()) {\n      AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n      if (leafQueue !\u003d null) {\n        if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n          if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n            leafQueueEntitlements.put(leafQueue.getQueueName(),\n                new QueueCapacities(false));\n          }\n\n          QueueCapacities capacities \u003d leafQueueEntitlements.get(\n              leafQueue.getQueueName());\n          updateToZeroCapacity(capacities, nodeLabel);\n          deactivatedQueues.put(leafQueue.getQueueName(),\n              leafQueueTemplateCapacities);\n        } else{\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\" Leaf queue has pending applications or is \" + \"inactive\"\n                + \" : \" + leafQueue.getNumApplications()\n                + \".Skipping deactivation for \" + leafQueue);\n          }\n        }\n      } else{\n        LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n            + \"deactivate for \" + parentQueue);\n      }\n    }\n\n    return deactivatedQueues;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
          "extendedDetails": {
            "oldValue": "[parentQueue-ParentQueue, queueManagementChanges-List\u003cQueueManagementChange\u003e]",
            "newValue": "[parentQueue-ParentQueue, nodeLabel-String, leafQueueEntitlements-Map\u003cString,QueueCapacities\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
          "commitDate": "09/04/18 8:47 AM",
          "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
          "commitAuthor": "Sunil G",
          "commitDateOld": "08/12/17 3:10 PM",
          "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 121.69,
          "commitsBetweenForRepo": 859,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,35 @@\n   private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n-      ParentQueue parentQueue,\n-      List\u003cQueueManagementChange\u003e queueManagementChanges)\n+      ParentQueue parentQueue, String nodeLabel,\n+      Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n       throws SchedulerDynamicEditException {\n     Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n \n     for (CSQueue childQueue : parentQueue.getChildQueues()) {\n       AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n+      if (leafQueue !\u003d null) {\n+        if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n+          if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n+            leafQueueEntitlements.put(leafQueue.getQueueName(),\n+                new QueueCapacities(false));\n+          }\n \n-      if (isActive(leafQueue) \u0026\u0026 !hasPendingApps(leafQueue)) {\n-        queueManagementChanges.add(\n-            new QueueManagementChange.UpdateQueue(leafQueue,\n-                ZERO_CAPACITY_ENTITLEMENT));\n-        deactivatedQueues.put(leafQueue.getQueueName(),\n-            leafQueueTemplateCapacities);\n-      } else{\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\" Leaf queue has pending applications :  \" + leafQueue\n-              .getNumApplications() + \".Skipping deactivation for \"\n-              + leafQueue);\n+          QueueCapacities capacities \u003d leafQueueEntitlements.get(\n+              leafQueue.getQueueName());\n+          updateToZeroCapacity(capacities, nodeLabel);\n+          deactivatedQueues.put(leafQueue.getQueueName(),\n+              leafQueueTemplateCapacities);\n+        } else{\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\" Leaf queue has pending applications or is \" + \"inactive\"\n+                + \" : \" + leafQueue.getNumApplications()\n+                + \".Skipping deactivation for \" + leafQueue);\n+          }\n         }\n+      } else{\n+        LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n+            + \"deactivate for \" + parentQueue);\n       }\n     }\n \n-    if (LOG.isDebugEnabled()) {\n-      if (deactivatedQueues.size() \u003e 0) {\n-        LOG.debug(\"Deactivated leaf queues : \" + deactivatedQueues);\n-      }\n-    }\n     return deactivatedQueues;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n      ParentQueue parentQueue, String nodeLabel,\n      Map\u003cString, QueueCapacities\u003e leafQueueEntitlements)\n      throws SchedulerDynamicEditException {\n    Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n\n    for (CSQueue childQueue : parentQueue.getChildQueues()) {\n      AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n      if (leafQueue !\u003d null) {\n        if (isActive(leafQueue, nodeLabel) \u0026\u0026 !hasPendingApps(leafQueue)) {\n          if (!leafQueueEntitlements.containsKey(leafQueue.getQueueName())) {\n            leafQueueEntitlements.put(leafQueue.getQueueName(),\n                new QueueCapacities(false));\n          }\n\n          QueueCapacities capacities \u003d leafQueueEntitlements.get(\n              leafQueue.getQueueName());\n          updateToZeroCapacity(capacities, nodeLabel);\n          deactivatedQueues.put(leafQueue.getQueueName(),\n              leafQueueTemplateCapacities);\n        } else{\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\" Leaf queue has pending applications or is \" + \"inactive\"\n                + \" : \" + leafQueue.getNumApplications()\n                + \".Skipping deactivation for \" + leafQueue);\n          }\n        }\n      } else{\n        LOG.warn(\"Could not find queue in scheduler while trying\" + \" to \"\n            + \"deactivate for \" + parentQueue);\n      }\n    }\n\n    return deactivatedQueues;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,31 @@\n+  private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n+      ParentQueue parentQueue,\n+      List\u003cQueueManagementChange\u003e queueManagementChanges)\n+      throws SchedulerDynamicEditException {\n+    Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n+\n+    for (CSQueue childQueue : parentQueue.getChildQueues()) {\n+      AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n+\n+      if (isActive(leafQueue) \u0026\u0026 !hasPendingApps(leafQueue)) {\n+        queueManagementChanges.add(\n+            new QueueManagementChange.UpdateQueue(leafQueue,\n+                ZERO_CAPACITY_ENTITLEMENT));\n+        deactivatedQueues.put(leafQueue.getQueueName(),\n+            leafQueueTemplateCapacities);\n+      } else{\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\" Leaf queue has pending applications :  \" + leafQueue\n+              .getNumApplications() + \".Skipping deactivation for \"\n+              + leafQueue);\n+        }\n+      }\n+    }\n+\n+    if (LOG.isDebugEnabled()) {\n+      if (deactivatedQueues.size() \u003e 0) {\n+        LOG.debug(\"Deactivated leaf queues : \" + deactivatedQueues);\n+      }\n+    }\n+    return deactivatedQueues;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, QueueCapacities\u003e deactivateLeafQueuesIfInActive(\n      ParentQueue parentQueue,\n      List\u003cQueueManagementChange\u003e queueManagementChanges)\n      throws SchedulerDynamicEditException {\n    Map\u003cString, QueueCapacities\u003e deactivatedQueues \u003d new HashMap\u003c\u003e();\n\n    for (CSQueue childQueue : parentQueue.getChildQueues()) {\n      AutoCreatedLeafQueue leafQueue \u003d (AutoCreatedLeafQueue) childQueue;\n\n      if (isActive(leafQueue) \u0026\u0026 !hasPendingApps(leafQueue)) {\n        queueManagementChanges.add(\n            new QueueManagementChange.UpdateQueue(leafQueue,\n                ZERO_CAPACITY_ENTITLEMENT));\n        deactivatedQueues.put(leafQueue.getQueueName(),\n            leafQueueTemplateCapacities);\n      } else{\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\" Leaf queue has pending applications :  \" + leafQueue\n              .getNumApplications() + \".Skipping deactivation for \"\n              + leafQueue);\n        }\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      if (deactivatedQueues.size() \u003e 0) {\n        LOG.debug(\"Deactivated leaf queues : \" + deactivatedQueues);\n      }\n    }\n    return deactivatedQueues;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java"
    }
  }
}