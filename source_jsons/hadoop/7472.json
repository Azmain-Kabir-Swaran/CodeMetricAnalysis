{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirRenameOp.java",
  "functionName": "verifyQuotaForRename",
  "functionId": "verifyQuotaForRename___fsd-FSDirectory__src-INodesInPath__dst-INodesInPath",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
  "functionStartLine": 70,
  "functionEndLine": 93,
  "numCommitsSeen": 250,
  "timeTaken": 8705,
  "changeHistory": [
    "3c117163a343d7da7ac958e22789b461c24efa5f",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
    "ae9109b911b3d9e2d6ca50b400379fc31deeb0cf",
    "fe328621d4a84ae99efcb6394a910009b4e1761f"
  ],
  "changeHistoryShort": {
    "3c117163a343d7da7ac958e22789b461c24efa5f": "Ybodychange",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ybodychange",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7": "Ymodifierchange",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": "Ybodychange",
    "ae9109b911b3d9e2d6ca50b400379fc31deeb0cf": "Ybodychange",
    "fe328621d4a84ae99efcb6394a910009b4e1761f": "Ybodychange"
  },
  "changeHistoryDetails": {
    "3c117163a343d7da7ac958e22789b461c24efa5f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14633. The StorageType quota and consume in QuotaFeature is not handled for rename. Contributed by Jinglun.\n",
      "commitDate": "03/09/19 9:29 AM",
      "commitName": "3c117163a343d7da7ac958e22789b461c24efa5f",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "14/03/18 9:42 AM",
      "commitNameOld": "4c57fb0cd9344290a9f4f6422c1457d69465eec7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 537.99,
      "commitsBetweenForRepo": 4742,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,24 @@\n   private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n       INodesInPath dst) throws QuotaExceededException {\n     if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n     // src[i - 1] is the last common ancestor.\n     BlockStoragePolicySuite bsps \u003d fsd.getBlockStoragePolicySuite();\n-    final QuotaCounts delta \u003d src.getLastINode().computeQuotaUsage(bsps);\n+    // Assume dstParent existence check done by callers.\n+    INode dstParent \u003d dst.getINode(-2);\n+    // Use the destination parent\u0027s storage policy for quota delta verify.\n+    final QuotaCounts delta \u003d src.getLastINode()\n+        .computeQuotaUsage(bsps, dstParent.getStoragePolicyID(), false,\n+            Snapshot.CURRENT_STATE_ID);\n \n     // Reduce the required quota by dst that is being removed\n     final INode dstINode \u003d dst.getLastINode();\n     if (dstINode !\u003d null) {\n       delta.subtract(dstINode.computeQuotaUsage(bsps));\n     }\n     FSDirectory.verifyQuota(dst, dst.length() - 1, delta, src.getINode(i - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n      INodesInPath dst) throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n    // src[i - 1] is the last common ancestor.\n    BlockStoragePolicySuite bsps \u003d fsd.getBlockStoragePolicySuite();\n    // Assume dstParent existence check done by callers.\n    INode dstParent \u003d dst.getINode(-2);\n    // Use the destination parent\u0027s storage policy for quota delta verify.\n    final QuotaCounts delta \u003d src.getLastINode()\n        .computeQuotaUsage(bsps, dstParent.getStoragePolicyID(), false,\n            Snapshot.CURRENT_STATE_ID);\n\n    // Reduce the required quota by dst that is being removed\n    final INode dstINode \u003d dst.getLastINode();\n    if (dstINode !\u003d null) {\n      delta.subtract(dstINode.computeQuotaUsage(bsps));\n    }\n    FSDirectory.verifyQuota(dst, dst.length() - 1, delta, src.getINode(i - 1));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {}
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "02/02/15 4:32 PM",
      "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 8.76,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n       INodesInPath dst) throws QuotaExceededException {\n     if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n     // src[i - 1] is the last common ancestor.\n-\n-    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n+    BlockStoragePolicySuite bsps \u003d fsd.getBlockStoragePolicySuite();\n+    final QuotaCounts delta \u003d src.getLastINode().computeQuotaUsage(bsps);\n \n     // Reduce the required quota by dst that is being removed\n     final INode dstINode \u003d dst.getLastINode();\n     if (dstINode !\u003d null) {\n-      delta.subtract(dstINode.computeQuotaUsage());\n+      delta.subtract(dstINode.computeQuotaUsage(bsps));\n     }\n-    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n-        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n+    FSDirectory.verifyQuota(dst, dst.length() - 1, delta, src.getINode(i - 1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n      INodesInPath dst) throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n    // src[i - 1] is the last common ancestor.\n    BlockStoragePolicySuite bsps \u003d fsd.getBlockStoragePolicySuite();\n    final QuotaCounts delta \u003d src.getLastINode().computeQuotaUsage(bsps);\n\n    // Reduce the required quota by dst that is being removed\n    final INode dstINode \u003d dst.getLastINode();\n    if (dstINode !\u003d null) {\n      delta.subtract(dstINode.computeQuotaUsage(bsps));\n    }\n    FSDirectory.verifyQuota(dst, dst.length() - 1, delta, src.getINode(i - 1));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {}
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,20 @@\n-  static void verifyQuotaForRename(FSDirectory fsd,\n-      INode[] src, INode[] dst)\n-      throws QuotaExceededException {\n+  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n+      INodesInPath dst) throws QuotaExceededException {\n     if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n-    while(src[i] \u003d\u003d dst[i]) { i++; }\n+    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n-    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n+    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n \n     // Reduce the required quota by dst that is being removed\n-    final int dstIndex \u003d dst.length - 1;\n-    if (dst[dstIndex] !\u003d null) {\n-      delta.subtract(dst[dstIndex].computeQuotaUsage());\n+    final INode dstINode \u003d dst.getLastINode();\n+    if (dstINode !\u003d null) {\n+      delta.subtract(dstINode.computeQuotaUsage());\n     }\n-    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n-        delta.get(Quota.DISKSPACE), src[i - 1]);\n+    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n+        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n      INodesInPath dst) throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final INode dstINode \u003d dst.getLastINode();\n    if (dstINode !\u003d null) {\n      delta.subtract(dstINode.computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, src-INode[], dst-INode[]]",
            "newValue": "[fsd-FSDirectory, src-INodesInPath, dst-INodesInPath]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,20 @@\n-  static void verifyQuotaForRename(FSDirectory fsd,\n-      INode[] src, INode[] dst)\n-      throws QuotaExceededException {\n+  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n+      INodesInPath dst) throws QuotaExceededException {\n     if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n-    while(src[i] \u003d\u003d dst[i]) { i++; }\n+    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n-    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n+    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n \n     // Reduce the required quota by dst that is being removed\n-    final int dstIndex \u003d dst.length - 1;\n-    if (dst[dstIndex] !\u003d null) {\n-      delta.subtract(dst[dstIndex].computeQuotaUsage());\n+    final INode dstINode \u003d dst.getLastINode();\n+    if (dstINode !\u003d null) {\n+      delta.subtract(dstINode.computeQuotaUsage());\n     }\n-    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n-        delta.get(Quota.DISKSPACE), src[i - 1]);\n+    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n+        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n      INodesInPath dst) throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final INode dstINode \u003d dst.getLastINode();\n    if (dstINode !\u003d null) {\n      delta.subtract(dstINode.computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,20 @@\n-  static void verifyQuotaForRename(FSDirectory fsd,\n-      INode[] src, INode[] dst)\n-      throws QuotaExceededException {\n+  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n+      INodesInPath dst) throws QuotaExceededException {\n     if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n-    while(src[i] \u003d\u003d dst[i]) { i++; }\n+    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n-    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n+    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n \n     // Reduce the required quota by dst that is being removed\n-    final int dstIndex \u003d dst.length - 1;\n-    if (dst[dstIndex] !\u003d null) {\n-      delta.subtract(dst[dstIndex].computeQuotaUsage());\n+    final INode dstINode \u003d dst.getLastINode();\n+    if (dstINode !\u003d null) {\n+      delta.subtract(dstINode.computeQuotaUsage());\n     }\n-    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n-        delta.get(Quota.DISKSPACE), src[i - 1]);\n+    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n+        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,\n      INodesInPath dst) throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src.getINode(i) \u003d\u003d dst.getINode(i)) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src.getLastINode().computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final INode dstINode \u003d dst.getLastINode();\n    if (dstINode !\u003d null) {\n      delta.subtract(dstINode.computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src.getINode(i - 1));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.\n",
      "commitDate": "04/12/14 2:09 PM",
      "commitName": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.\n",
          "commitDate": "04/12/14 2:09 PM",
          "commitName": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "04/12/14 12:53 PM",
          "commitNameOld": "258623ff8bb1a1057ae3501d4f20982d5a59ea34",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  void verifyQuotaForRename(INode[] src, INode[] dst)\n+  static void verifyQuotaForRename(FSDirectory fsd,\n+      INode[] src, INode[] dst)\n       throws QuotaExceededException {\n-    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n+    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n-    \n+\n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n-    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n+    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void verifyQuotaForRename(FSDirectory fsd,\n      INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
            "oldMethodName": "verifyQuotaForRename",
            "newMethodName": "verifyQuotaForRename"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.\n",
          "commitDate": "04/12/14 2:09 PM",
          "commitName": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "04/12/14 12:53 PM",
          "commitNameOld": "258623ff8bb1a1057ae3501d4f20982d5a59ea34",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  void verifyQuotaForRename(INode[] src, INode[] dst)\n+  static void verifyQuotaForRename(FSDirectory fsd,\n+      INode[] src, INode[] dst)\n       throws QuotaExceededException {\n-    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n+    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n-    \n+\n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n-    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n+    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void verifyQuotaForRename(FSDirectory fsd,\n      INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.\n",
          "commitDate": "04/12/14 2:09 PM",
          "commitName": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "04/12/14 12:53 PM",
          "commitNameOld": "258623ff8bb1a1057ae3501d4f20982d5a59ea34",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  void verifyQuotaForRename(INode[] src, INode[] dst)\n+  static void verifyQuotaForRename(FSDirectory fsd,\n+      INode[] src, INode[] dst)\n       throws QuotaExceededException {\n-    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n+    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n-    \n+\n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n-    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n+    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void verifyQuotaForRename(FSDirectory fsd,\n      INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.\n",
          "commitDate": "04/12/14 2:09 PM",
          "commitName": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "04/12/14 12:53 PM",
          "commitNameOld": "258623ff8bb1a1057ae3501d4f20982d5a59ea34",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  void verifyQuotaForRename(INode[] src, INode[] dst)\n+  static void verifyQuotaForRename(FSDirectory fsd,\n+      INode[] src, INode[] dst)\n       throws QuotaExceededException {\n-    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n+    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n-    \n+\n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n-    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n+    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void verifyQuotaForRename(FSDirectory fsd,\n      INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n\n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[src-INode[], dst-INode[]]",
            "newValue": "[fsd-FSDirectory, src-INode[], dst-INode[]]"
          }
        }
      ]
    },
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "01/12/14 9:48 PM",
      "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "01/12/14 9:36 PM",
      "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  private void verifyQuotaForRename(INode[] src, INode[] dst)\n+  void verifyQuotaForRename(INode[] src, INode[] dst)\n       throws QuotaExceededException {\n     if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n     \n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n     verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void verifyQuotaForRename(INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n    \n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6480. Move waitForReady() from FSDirectory to FSNamesystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 9:13 PM",
      "commitName": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "18/06/14 12:57 PM",
      "commitNameOld": "4cf94aaf809c77b3b7dc925faa39a72d53e4246e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void verifyQuotaForRename(INode[] src, INode[] dst)\n       throws QuotaExceededException {\n-    if (!ready || skipQuotaCheck) {\n+    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n     \n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n     verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyQuotaForRename(INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!namesystem.isImageLoaded() || skipQuotaCheck) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n    \n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "ae9109b911b3d9e2d6ca50b400379fc31deeb0cf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6328. Clean up dead code in FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593755 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/14 10:06 PM",
      "commitName": "ae9109b911b3d9e2d6ca50b400379fc31deeb0cf",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/04/14 10:44 AM",
      "commitNameOld": "0689363343a281a6f7f6f395227668bddc2663eb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 10.47,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void verifyQuotaForRename(INode[] src, INode[] dst)\n       throws QuotaExceededException {\n     if (!ready || skipQuotaCheck) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n-    for(; src[i] \u003d\u003d dst[i]; i++);\n+    while(src[i] \u003d\u003d dst[i]) { i++; }\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n     \n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n     verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyQuotaForRename(INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!ready || skipQuotaCheck) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    while(src[i] \u003d\u003d dst[i]) { i++; }\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n    \n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "fe328621d4a84ae99efcb6394a910009b4e1761f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6191. Disable quota checks when replaying edit log.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/14 11:25 AM",
      "commitName": "fe328621d4a84ae99efcb6394a910009b4e1761f",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "26/03/14 2:27 PM",
      "commitNameOld": "14556cc5d8fee8f8a846e4f65572828553be386c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 11.87,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void verifyQuotaForRename(INode[] src, INode[] dst)\n       throws QuotaExceededException {\n-    if (!ready) {\n+    if (!ready || skipQuotaCheck) {\n       // Do not check quota if edits log is still being processed\n       return;\n     }\n     int i \u003d 0;\n     for(; src[i] \u003d\u003d dst[i]; i++);\n     // src[i - 1] is the last common ancestor.\n \n     final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n     \n     // Reduce the required quota by dst that is being removed\n     final int dstIndex \u003d dst.length - 1;\n     if (dst[dstIndex] !\u003d null) {\n       delta.subtract(dst[dstIndex].computeQuotaUsage());\n     }\n     verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n         delta.get(Quota.DISKSPACE), src[i - 1]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyQuotaForRename(INode[] src, INode[] dst)\n      throws QuotaExceededException {\n    if (!ready || skipQuotaCheck) {\n      // Do not check quota if edits log is still being processed\n      return;\n    }\n    int i \u003d 0;\n    for(; src[i] \u003d\u003d dst[i]; i++);\n    // src[i - 1] is the last common ancestor.\n\n    final Quota.Counts delta \u003d src[src.length - 1].computeQuotaUsage();\n    \n    // Reduce the required quota by dst that is being removed\n    final int dstIndex \u003d dst.length - 1;\n    if (dst[dstIndex] !\u003d null) {\n      delta.subtract(dst[dstIndex].computeQuotaUsage());\n    }\n    verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),\n        delta.get(Quota.DISKSPACE), src[i - 1]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    }
  }
}