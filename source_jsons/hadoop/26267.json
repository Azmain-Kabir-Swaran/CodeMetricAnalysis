{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleExponentialTaskRuntimeEstimator.java",
  "functionName": "hasStagnatedProgress",
  "functionId": "hasStagnatedProgress___id-TaskAttemptId(modifiers-final)__timeStamp-long(modifiers-final)",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/SimpleExponentialTaskRuntimeEstimator.java",
  "functionStartLine": 158,
  "functionEndLine": 165,
  "numCommitsSeen": 3,
  "timeTaken": 1478,
  "changeHistory": [
    "cdd6efd3ab6917e30b4c5c7b261f61838901bb37",
    "ed302f1fed6d124d682486d24dae958946dba9be"
  ],
  "changeHistoryShort": {
    "cdd6efd3ab6917e30b4c5c7b261f61838901bb37": "Yparametermetachange",
    "ed302f1fed6d124d682486d24dae958946dba9be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdd6efd3ab6917e30b4c5c7b261f61838901bb37": {
      "type": "Yparametermetachange",
      "commitMessage": "MAPREDUCE-7252. Handling 0 progress in SimpleExponential task runtime estimator\n\nSigned-off-by: Jonathan Eagles \u003cjeagles@gmail.com\u003e\n",
      "commitDate": "08/01/20 9:08 AM",
      "commitName": "cdd6efd3ab6917e30b4c5c7b261f61838901bb37",
      "commitAuthor": "Ahmed Hussein",
      "commitDateOld": "05/11/19 12:55 PM",
      "commitNameOld": "ed302f1fed6d124d682486d24dae958946dba9be",
      "commitAuthorOld": "Ahmed Hussein",
      "daysBetweenCommits": 63.84,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n-  public boolean hasStagnatedProgress(TaskAttemptId id, long timeStamp) {\n+  public boolean hasStagnatedProgress(final TaskAttemptId id,\n+      final long timeStamp) {\n     SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(id);\n-    if(foreCastEntry \u003d\u003d null) {\n+    if (foreCastEntry \u003d\u003d null) {\n       return false;\n     }\n     return foreCastEntry.isDataStagnated(timeStamp);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasStagnatedProgress(final TaskAttemptId id,\n      final long timeStamp) {\n    SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(id);\n    if (foreCastEntry \u003d\u003d null) {\n      return false;\n    }\n    return foreCastEntry.isDataStagnated(timeStamp);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/SimpleExponentialTaskRuntimeEstimator.java",
      "extendedDetails": {
        "oldValue": "[id-TaskAttemptId, timeStamp-long]",
        "newValue": "[id-TaskAttemptId(modifiers-final), timeStamp-long(modifiers-final)]"
      }
    },
    "ed302f1fed6d124d682486d24dae958946dba9be": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-7208. Tuning TaskRuntimeEstimator. (Ahmed Hussein via jeagles)\n\nSigned-off-by: Jonathan Eagles \u003cjeagles@gmail.com\u003e\n",
      "commitDate": "05/11/19 12:55 PM",
      "commitName": "ed302f1fed6d124d682486d24dae958946dba9be",
      "commitAuthor": "Ahmed Hussein",
      "diff": "@@ -0,0 +1,7 @@\n+  public boolean hasStagnatedProgress(TaskAttemptId id, long timeStamp) {\n+    SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(id);\n+    if(foreCastEntry \u003d\u003d null) {\n+      return false;\n+    }\n+    return foreCastEntry.isDataStagnated(timeStamp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasStagnatedProgress(TaskAttemptId id, long timeStamp) {\n    SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(id);\n    if(foreCastEntry \u003d\u003d null) {\n      return false;\n    }\n    return foreCastEntry.isDataStagnated(timeStamp);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/SimpleExponentialTaskRuntimeEstimator.java"
    }
  }
}