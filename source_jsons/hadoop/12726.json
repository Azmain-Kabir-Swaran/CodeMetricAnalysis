{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SlowPeerTracker.java",
  "functionName": "getReportsForAllDataNodes",
  "functionId": "getReportsForAllDataNodes",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java",
  "functionStartLine": 152,
  "functionEndLine": 168,
  "numCommitsSeen": 5,
  "timeTaken": 1741,
  "changeHistory": [
    "b57368b6f893cb27d77fc9425e116f1312f4790f"
  ],
  "changeHistoryShort": {
    "b57368b6f893cb27d77fc9425e116f1312f4790f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b57368b6f893cb27d77fc9425e116f1312f4790f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11194. Maintain aggregated peer performance metrics on NameNode.\n",
      "commitDate": "24/01/17 4:58 PM",
      "commitName": "b57368b6f893cb27d77fc9425e116f1312f4790f",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,17 @@\n+  public Map\u003cString, SortedSet\u003cString\u003e\u003e getReportsForAllDataNodes() {\n+    if (allReports.isEmpty()) {\n+      return ImmutableMap.of();\n+    }\n+\n+    final Map\u003cString, SortedSet\u003cString\u003e\u003e allNodesValidReports \u003d new HashMap\u003c\u003e();\n+    final long now \u003d timer.monotonicNow();\n+\n+    for (Map.Entry\u003cString, ConcurrentMap\u003cString, Long\u003e\u003e entry :\n+        allReports.entrySet()) {\n+      SortedSet\u003cString\u003e validReports \u003d filterNodeReports(entry.getValue(), now);\n+      if (!validReports.isEmpty()) {\n+        allNodesValidReports.put(entry.getKey(), validReports);\n+      }\n+    }\n+    return allNodesValidReports;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, SortedSet\u003cString\u003e\u003e getReportsForAllDataNodes() {\n    if (allReports.isEmpty()) {\n      return ImmutableMap.of();\n    }\n\n    final Map\u003cString, SortedSet\u003cString\u003e\u003e allNodesValidReports \u003d new HashMap\u003c\u003e();\n    final long now \u003d timer.monotonicNow();\n\n    for (Map.Entry\u003cString, ConcurrentMap\u003cString, Long\u003e\u003e entry :\n        allReports.entrySet()) {\n      SortedSet\u003cString\u003e validReports \u003d filterNodeReports(entry.getValue(), now);\n      if (!validReports.isEmpty()) {\n        allNodesValidReports.put(entry.getKey(), validReports);\n      }\n    }\n    return allNodesValidReports;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java"
    }
  }
}