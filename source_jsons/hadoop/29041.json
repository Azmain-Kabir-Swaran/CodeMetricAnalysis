{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedSchedulingAllocateResponsePBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateResponsePBImpl.java",
  "functionStartLine": 87,
  "functionEndLine": 98,
  "numCommitsSeen": 3,
  "timeTaken": 2067,
  "changeHistory": [
    "aa3cab1eb29c56368d15882d7260a994e615e8d8",
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b"
  ],
  "changeHistoryShort": {
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": "Ybodychange",
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Yfilerename",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
      "commitDate": "29/10/16 2:03 AM",
      "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/07/16 11:48 AM",
      "commitNameOld": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 89.59,
      "commitsBetweenForRepo": 656,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.nodesForScheduling !\u003d null) {\n       builder.clearNodesForScheduling();\n-      Iterable\u003cYarnProtos.NodeIdProto\u003e iterable \u003d getNodeIdProtoIterable(\n-          this.nodesForScheduling);\n+      Iterable\u003cYarnServerCommonServiceProtos.RemoteNodeProto\u003e iterable \u003d\n+          getNodeIdProtoIterable(this.nodesForScheduling);\n       builder.addAllNodesForScheduling(iterable);\n     }\n     if (this.allocateResponse !\u003d null) {\n       builder.setAllocateResponse(\n           ((AllocateResponsePBImpl) this.allocateResponse).getProto());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.nodesForScheduling !\u003d null) {\n      builder.clearNodesForScheduling();\n      Iterable\u003cYarnServerCommonServiceProtos.RemoteNodeProto\u003e iterable \u003d\n          getNodeIdProtoIterable(this.nodesForScheduling);\n      builder.addAllNodesForScheduling(iterable);\n    }\n    if (this.allocateResponse !\u003d null) {\n      builder.setAllocateResponse(\n          ((AllocateResponsePBImpl) this.allocateResponse).getProto());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "30/07/16 7:29 PM",
      "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.nodesForScheduling !\u003d null) {\n       builder.clearNodesForScheduling();\n-      Iterable\u003cYarnProtos.NodeIdProto\u003e iterable \u003d\n-          getNodeIdProtoIterable(this.nodesForScheduling);\n+      Iterable\u003cYarnProtos.NodeIdProto\u003e iterable \u003d getNodeIdProtoIterable(\n+          this.nodesForScheduling);\n       builder.addAllNodesForScheduling(iterable);\n     }\n     if (this.allocateResponse !\u003d null) {\n       builder.setAllocateResponse(\n-          ((AllocateResponsePBImpl)this.allocateResponse).getProto());\n+          ((AllocateResponsePBImpl) this.allocateResponse).getProto());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.nodesForScheduling !\u003d null) {\n      builder.clearNodesForScheduling();\n      Iterable\u003cYarnProtos.NodeIdProto\u003e iterable \u003d getNodeIdProtoIterable(\n          this.nodesForScheduling);\n      builder.addAllNodesForScheduling(iterable);\n    }\n    if (this.allocateResponse !\u003d null) {\n      builder.setAllocateResponse(\n          ((AllocateResponsePBImpl) this.allocateResponse).getProto());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistSchedAllocateResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateResponsePBImpl.java"
      }
    },
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2885. Create AMRMProxy request interceptor and ContainerAllocator to distribute OPPORTUNISTIC containers to appropriate Nodes (asuresh)\n\n(cherry picked from commit 2bf025278a318b0452fdc9ece4427b4c42124e39)\n",
      "commitDate": "24/04/16 10:38 PM",
      "commitName": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,12 @@\n+  private synchronized void mergeLocalToBuilder() {\n+    if (this.nodesForScheduling !\u003d null) {\n+      builder.clearNodesForScheduling();\n+      Iterable\u003cYarnProtos.NodeIdProto\u003e iterable \u003d\n+          getNodeIdProtoIterable(this.nodesForScheduling);\n+      builder.addAllNodesForScheduling(iterable);\n+    }\n+    if (this.allocateResponse !\u003d null) {\n+      builder.setAllocateResponse(\n+          ((AllocateResponsePBImpl)this.allocateResponse).getProto());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.nodesForScheduling !\u003d null) {\n      builder.clearNodesForScheduling();\n      Iterable\u003cYarnProtos.NodeIdProto\u003e iterable \u003d\n          getNodeIdProtoIterable(this.nodesForScheduling);\n      builder.addAllNodesForScheduling(iterable);\n    }\n    if (this.allocateResponse !\u003d null) {\n      builder.setAllocateResponse(\n          ((AllocateResponsePBImpl)this.allocateResponse).getProto());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistSchedAllocateResponsePBImpl.java"
    }
  }
}