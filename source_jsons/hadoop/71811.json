{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSACLs.java",
  "functionName": "checkKeyAccess",
  "functionId": "checkKeyAccess___keyAcl-Map__KeyOpType,AccessControlList____ugi-UserGroupInformation__opType-KeyOpType",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
  "functionStartLine": 304,
  "functionEndLine": 319,
  "numCommitsSeen": 14,
  "timeTaken": 1506,
  "changeHistory": [
    "84c4966a5a7a94c69cac92d7fb377ecf1f309e59",
    "be529dade182dd2f3718fc52133f43e83dce191f",
    "31b4d2daa14a7f6e8ee73fd3160e126d8db62ffb"
  ],
  "changeHistoryShort": {
    "84c4966a5a7a94c69cac92d7fb377ecf1f309e59": "Ybodychange",
    "be529dade182dd2f3718fc52133f43e83dce191f": "Ybodychange",
    "31b4d2daa14a7f6e8ee73fd3160e126d8db62ffb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "84c4966a5a7a94c69cac92d7fb377ecf1f309e59": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16067. Incorrect Format Debug Statement KMSACLs. Contributed by Charan Hebri.\n",
      "commitDate": "28/02/19 3:15 AM",
      "commitName": "84c4966a5a7a94c69cac92d7fb377ecf1f309e59",
      "commitAuthor": "MÃ¡rton Elek",
      "commitDateOld": "28/05/18 5:32 PM",
      "commitNameOld": "438ef4951a38171f193eaf2631da31d0f4bc3c62",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 275.45,
      "commitsBetweenForRepo": 2140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private boolean checkKeyAccess(Map\u003cKeyOpType, AccessControlList\u003e keyAcl,\n       UserGroupInformation ugi, KeyOpType opType) {\n     AccessControlList acl \u003d keyAcl.get(opType);\n     if (acl \u003d\u003d null) {\n       // If no acl is specified for this operation,\n       // deny access\n       LOG.debug(\"No ACL available for key, denying access for {}\", opType);\n       return false;\n     } else {\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Checking user [{}] for: {}: {}\" + ugi.getShortUserName(),\n+        LOG.debug(\"Checking user [{}] for: {}: {}\", ugi.getShortUserName(),\n             opType.toString(), acl.getAclString());\n       }\n       return acl.isUserAllowed(ugi);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkKeyAccess(Map\u003cKeyOpType, AccessControlList\u003e keyAcl,\n      UserGroupInformation ugi, KeyOpType opType) {\n    AccessControlList acl \u003d keyAcl.get(opType);\n    if (acl \u003d\u003d null) {\n      // If no acl is specified for this operation,\n      // deny access\n      LOG.debug(\"No ACL available for key, denying access for {}\", opType);\n      return false;\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Checking user [{}] for: {}: {}\", ugi.getShortUserName(),\n            opType.toString(), acl.getAclString());\n      }\n      return acl.isUserAllowed(ugi);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "be529dade182dd2f3718fc52133f43e83dce191f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13903. Improvements to KMS logging to help debug authorization errors. (Tristan Stevens via asuresh)\n",
      "commitDate": "11/01/17 12:26 AM",
      "commitName": "be529dade182dd2f3718fc52133f43e83dce191f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "15/08/16 6:14 PM",
      "commitNameOld": "9daa9979a1f92fb3230361c10ddfcc1633795c0e",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 148.3,
      "commitsBetweenForRepo": 992,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   private boolean checkKeyAccess(Map\u003cKeyOpType, AccessControlList\u003e keyAcl,\n       UserGroupInformation ugi, KeyOpType opType) {\n     AccessControlList acl \u003d keyAcl.get(opType);\n     if (acl \u003d\u003d null) {\n       // If no acl is specified for this operation,\n       // deny access\n+      LOG.debug(\"No ACL available for key, denying access for {}\", opType);\n       return false;\n     } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Checking user [{}] for: {}: {}\" + ugi.getShortUserName(),\n+            opType.toString(), acl.getAclString());\n+      }\n       return acl.isUserAllowed(ugi);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkKeyAccess(Map\u003cKeyOpType, AccessControlList\u003e keyAcl,\n      UserGroupInformation ugi, KeyOpType opType) {\n    AccessControlList acl \u003d keyAcl.get(opType);\n    if (acl \u003d\u003d null) {\n      // If no acl is specified for this operation,\n      // deny access\n      LOG.debug(\"No ACL available for key, denying access for {}\", opType);\n      return false;\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Checking user [{}] for: {}: {}\" + ugi.getShortUserName(),\n            opType.toString(), acl.getAclString());\n      }\n      return acl.isUserAllowed(ugi);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "31b4d2daa14a7f6e8ee73fd3160e126d8db62ffb": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11341. KMS support for whitelist key ACLs. Contributed by Arun Suresh.\n",
      "commitDate": "01/12/14 9:53 PM",
      "commitName": "31b4d2daa14a7f6e8ee73fd3160e126d8db62ffb",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,11 @@\n+  private boolean checkKeyAccess(Map\u003cKeyOpType, AccessControlList\u003e keyAcl,\n+      UserGroupInformation ugi, KeyOpType opType) {\n+    AccessControlList acl \u003d keyAcl.get(opType);\n+    if (acl \u003d\u003d null) {\n+      // If no acl is specified for this operation,\n+      // deny access\n+      return false;\n+    } else {\n+      return acl.isUserAllowed(ugi);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkKeyAccess(Map\u003cKeyOpType, AccessControlList\u003e keyAcl,\n      UserGroupInformation ugi, KeyOpType opType) {\n    AccessControlList acl \u003d keyAcl.get(opType);\n    if (acl \u003d\u003d null) {\n      // If no acl is specified for this operation,\n      // deny access\n      return false;\n    } else {\n      return acl.isUserAllowed(ugi);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java"
    }
  }
}