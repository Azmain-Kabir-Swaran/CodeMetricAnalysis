{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMDelegatedNodeLabelsUpdater.java",
  "functionName": "createRMNodeLabelsMappingProvider",
  "functionId": "createRMNodeLabelsMappingProvider___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMDelegatedNodeLabelsUpdater.java",
  "functionStartLine": 171,
  "functionEndLine": 200,
  "numCommitsSeen": 4,
  "timeTaken": 1680,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "db9304788187c700647c4d84caeb3b5ad6d868d8"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "db9304788187c700647c4d84caeb3b5ad6d868d8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   private RMNodeLabelsMappingProvider createRMNodeLabelsMappingProvider(\n       Configuration conf) throws IOException {\n     RMNodeLabelsMappingProvider nodeLabelsMappingProvider \u003d null;\n     try {\n       Class\u003c? extends RMNodeLabelsMappingProvider\u003e labelsProviderClass \u003d\n           conf.getClass(YarnConfiguration.RM_NODE_LABELS_PROVIDER_CONFIG,\n               null, RMNodeLabelsMappingProvider.class);\n       if (labelsProviderClass !\u003d null) {\n         nodeLabelsMappingProvider \u003d labelsProviderClass.newInstance();\n       }\n     } catch (InstantiationException | IllegalAccessException\n         | RuntimeException e) {\n       LOG.error(\"Failed to create RMNodeLabelsMappingProvider based on\"\n           + \" Configuration\", e);\n       throw new IOException(\"Failed to create RMNodeLabelsMappingProvider : \"\n           + e.getMessage(), e);\n     }\n \n     if (nodeLabelsMappingProvider \u003d\u003d null) {\n       String msg \u003d \"RMNodeLabelsMappingProvider should be configured when \"\n           + \"delegated-centralized node label configuration is enabled\";\n       LOG.error(msg);\n       throw new IOException(msg);\n-    } else if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"RM Node labels mapping provider class is : \"\n-          + nodeLabelsMappingProvider.getClass().toString());\n+    } else {\n+      LOG.debug(\"RM Node labels mapping provider class is : {}\",\n+          nodeLabelsMappingProvider.getClass());\n     }\n \n     return nodeLabelsMappingProvider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMNodeLabelsMappingProvider createRMNodeLabelsMappingProvider(\n      Configuration conf) throws IOException {\n    RMNodeLabelsMappingProvider nodeLabelsMappingProvider \u003d null;\n    try {\n      Class\u003c? extends RMNodeLabelsMappingProvider\u003e labelsProviderClass \u003d\n          conf.getClass(YarnConfiguration.RM_NODE_LABELS_PROVIDER_CONFIG,\n              null, RMNodeLabelsMappingProvider.class);\n      if (labelsProviderClass !\u003d null) {\n        nodeLabelsMappingProvider \u003d labelsProviderClass.newInstance();\n      }\n    } catch (InstantiationException | IllegalAccessException\n        | RuntimeException e) {\n      LOG.error(\"Failed to create RMNodeLabelsMappingProvider based on\"\n          + \" Configuration\", e);\n      throw new IOException(\"Failed to create RMNodeLabelsMappingProvider : \"\n          + e.getMessage(), e);\n    }\n\n    if (nodeLabelsMappingProvider \u003d\u003d null) {\n      String msg \u003d \"RMNodeLabelsMappingProvider should be configured when \"\n          + \"delegated-centralized node label configuration is enabled\";\n      LOG.error(msg);\n      throw new IOException(msg);\n    } else {\n      LOG.debug(\"RM Node labels mapping provider class is : {}\",\n          nodeLabelsMappingProvider.getClass());\n    }\n\n    return nodeLabelsMappingProvider;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMDelegatedNodeLabelsUpdater.java",
      "extendedDetails": {}
    },
    "db9304788187c700647c4d84caeb3b5ad6d868d8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3964. Support NodeLabelsProvider at Resource Manager side.\nContributed by Dian Fu.\n",
      "commitDate": "10/10/15 10:51 PM",
      "commitName": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthor": "Devaraj K",
      "diff": "@@ -0,0 +1,30 @@\n+  private RMNodeLabelsMappingProvider createRMNodeLabelsMappingProvider(\n+      Configuration conf) throws IOException {\n+    RMNodeLabelsMappingProvider nodeLabelsMappingProvider \u003d null;\n+    try {\n+      Class\u003c? extends RMNodeLabelsMappingProvider\u003e labelsProviderClass \u003d\n+          conf.getClass(YarnConfiguration.RM_NODE_LABELS_PROVIDER_CONFIG,\n+              null, RMNodeLabelsMappingProvider.class);\n+      if (labelsProviderClass !\u003d null) {\n+        nodeLabelsMappingProvider \u003d labelsProviderClass.newInstance();\n+      }\n+    } catch (InstantiationException | IllegalAccessException\n+        | RuntimeException e) {\n+      LOG.error(\"Failed to create RMNodeLabelsMappingProvider based on\"\n+          + \" Configuration\", e);\n+      throw new IOException(\"Failed to create RMNodeLabelsMappingProvider : \"\n+          + e.getMessage(), e);\n+    }\n+\n+    if (nodeLabelsMappingProvider \u003d\u003d null) {\n+      String msg \u003d \"RMNodeLabelsMappingProvider should be configured when \"\n+          + \"delegated-centralized node label configuration is enabled\";\n+      LOG.error(msg);\n+      throw new IOException(msg);\n+    } else if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"RM Node labels mapping provider class is : \"\n+          + nodeLabelsMappingProvider.getClass().toString());\n+    }\n+\n+    return nodeLabelsMappingProvider;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RMNodeLabelsMappingProvider createRMNodeLabelsMappingProvider(\n      Configuration conf) throws IOException {\n    RMNodeLabelsMappingProvider nodeLabelsMappingProvider \u003d null;\n    try {\n      Class\u003c? extends RMNodeLabelsMappingProvider\u003e labelsProviderClass \u003d\n          conf.getClass(YarnConfiguration.RM_NODE_LABELS_PROVIDER_CONFIG,\n              null, RMNodeLabelsMappingProvider.class);\n      if (labelsProviderClass !\u003d null) {\n        nodeLabelsMappingProvider \u003d labelsProviderClass.newInstance();\n      }\n    } catch (InstantiationException | IllegalAccessException\n        | RuntimeException e) {\n      LOG.error(\"Failed to create RMNodeLabelsMappingProvider based on\"\n          + \" Configuration\", e);\n      throw new IOException(\"Failed to create RMNodeLabelsMappingProvider : \"\n          + e.getMessage(), e);\n    }\n\n    if (nodeLabelsMappingProvider \u003d\u003d null) {\n      String msg \u003d \"RMNodeLabelsMappingProvider should be configured when \"\n          + \"delegated-centralized node label configuration is enabled\";\n      LOG.error(msg);\n      throw new IOException(msg);\n    } else if (LOG.isDebugEnabled()) {\n      LOG.debug(\"RM Node labels mapping provider class is : \"\n          + nodeLabelsMappingProvider.getClass().toString());\n    }\n\n    return nodeLabelsMappingProvider;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMDelegatedNodeLabelsUpdater.java"
    }
  }
}