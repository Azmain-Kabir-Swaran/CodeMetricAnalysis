{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "copy",
  "functionId": "copy___src-File__dstFS-FileSystem__dst-Path__deleteSource-boolean__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 434,
  "functionEndLine": 474,
  "numCommitsSeen": 68,
  "timeTaken": 2504,
  "changeHistory": [
    "7a3188d054481b9bd563e337901e93476303ce7f",
    "bf500d979858b084f0fe5c34a85c271a728e416b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "42a185b57d3136a1ac108072132aced21d9f5d17",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "7a3188d054481b9bd563e337901e93476303ce7f": "Ybodychange",
    "bf500d979858b084f0fe5c34a85c271a728e416b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "42a185b57d3136a1ac108072132aced21d9f5d17": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a3188d054481b9bd563e337901e93476303ce7f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16282. Avoid FileStream to improve performance. Contributed by Ayush Saxena.\n",
      "commitDate": "02/05/19 12:58 PM",
      "commitName": "7a3188d054481b9bd563e337901e93476303ce7f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 111.04,
      "commitsBetweenForRepo": 826,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   public static boolean copy(File src,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              Configuration conf) throws IOException {\n     dst \u003d checkDest(src.getName(), dstFS, dst, false);\n \n     if (src.isDirectory()) {\n       if (!dstFS.mkdirs(dst)) {\n         return false;\n       }\n       File contents[] \u003d listFiles(src);\n       for (int i \u003d 0; i \u003c contents.length; i++) {\n         copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n              deleteSource, conf);\n       }\n     } else if (src.isFile()) {\n       InputStream in \u003d null;\n       OutputStream out \u003dnull;\n       try {\n-        in \u003d new FileInputStream(src);\n+        in \u003d Files.newInputStream(src.toPath());\n         out \u003d dstFS.create(dst);\n         IOUtils.copyBytes(in, out, conf);\n       } catch (IOException e) {\n         IOUtils.closeStream( out );\n         IOUtils.closeStream( in );\n         throw e;\n       }\n     } else if (!src.canRead()) {\n       throw new IOException(src.toString() +\n                             \": Permission denied\");\n \n     } else {\n       throw new IOException(src.toString() +\n                             \": No such file or directory\");\n     }\n     if (deleteSource) {\n       return FileUtil.fullyDelete(src);\n     } else {\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d listFiles(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d Files.newInputStream(src.toPath());\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else if (!src.canRead()) {\n      throw new IOException(src.toString() +\n                            \": Permission denied\");\n\n    } else {\n      throw new IOException(src.toString() +\n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "bf500d979858b084f0fe5c34a85c271a728e416b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5033. Bad error message for fs -put/copyFromLocal if user doesn\u0027t have permissions to read the source (Darrell Taylor via aw)\n",
      "commitDate": "27/05/15 4:51 PM",
      "commitName": "bf500d979858b084f0fe5c34a85c271a728e416b",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "22/10/14 3:57 PM",
      "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 217.04,
      "commitsBetweenForRepo": 1848,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,41 @@\n   public static boolean copy(File src,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              Configuration conf) throws IOException {\n     dst \u003d checkDest(src.getName(), dstFS, dst, false);\n \n     if (src.isDirectory()) {\n       if (!dstFS.mkdirs(dst)) {\n         return false;\n       }\n       File contents[] \u003d listFiles(src);\n       for (int i \u003d 0; i \u003c contents.length; i++) {\n         copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n              deleteSource, conf);\n       }\n     } else if (src.isFile()) {\n       InputStream in \u003d null;\n       OutputStream out \u003dnull;\n       try {\n         in \u003d new FileInputStream(src);\n         out \u003d dstFS.create(dst);\n         IOUtils.copyBytes(in, out, conf);\n       } catch (IOException e) {\n         IOUtils.closeStream( out );\n         IOUtils.closeStream( in );\n         throw e;\n       }\n+    } else if (!src.canRead()) {\n+      throw new IOException(src.toString() +\n+                            \": Permission denied\");\n+\n     } else {\n-      throw new IOException(src.toString() + \n+      throw new IOException(src.toString() +\n                             \": No such file or directory\");\n     }\n     if (deleteSource) {\n       return FileUtil.fullyDelete(src);\n     } else {\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d listFiles(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d new FileInputStream(src);\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else if (!src.canRead()) {\n      throw new IOException(src.toString() +\n                            \": Permission denied\");\n\n    } else {\n      throw new IOException(src.toString() +\n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d listFiles(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d new FileInputStream(src);\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else {\n      throw new IOException(src.toString() + \n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d listFiles(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d new FileInputStream(src);\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else {\n      throw new IOException(src.toString() + \n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d listFiles(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d new FileInputStream(src);\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else {\n      throw new IOException(src.toString() + \n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "42a185b57d3136a1ac108072132aced21d9f5d17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7322. Adding a util method in FileUtil for directory listing, avoid NPEs on File.listFiles(). Contributed by Bharath Mundlapudi.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1127697 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/05/11 2:51 PM",
      "commitName": "42a185b57d3136a1ac108072132aced21d9f5d17",
      "commitAuthor": "Matthew Foley",
      "commitDateOld": "10/03/11 3:33 PM",
      "commitNameOld": "527bac7e2265548d8611723109f7f91b629079ed",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 75.93,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public static boolean copy(File src,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              Configuration conf) throws IOException {\n     dst \u003d checkDest(src.getName(), dstFS, dst, false);\n \n     if (src.isDirectory()) {\n       if (!dstFS.mkdirs(dst)) {\n         return false;\n       }\n-      File contents[] \u003d src.listFiles();\n+      File contents[] \u003d listFiles(src);\n       for (int i \u003d 0; i \u003c contents.length; i++) {\n         copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n              deleteSource, conf);\n       }\n     } else if (src.isFile()) {\n       InputStream in \u003d null;\n       OutputStream out \u003dnull;\n       try {\n         in \u003d new FileInputStream(src);\n         out \u003d dstFS.create(dst);\n         IOUtils.copyBytes(in, out, conf);\n       } catch (IOException e) {\n         IOUtils.closeStream( out );\n         IOUtils.closeStream( in );\n         throw e;\n       }\n     } else {\n       throw new IOException(src.toString() + \n                             \": No such file or directory\");\n     }\n     if (deleteSource) {\n       return FileUtil.fullyDelete(src);\n     } else {\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d listFiles(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d new FileInputStream(src);\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else {\n      throw new IOException(src.toString() + \n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,37 @@\n+  public static boolean copy(File src,\n+                             FileSystem dstFS, Path dst,\n+                             boolean deleteSource,\n+                             Configuration conf) throws IOException {\n+    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n+\n+    if (src.isDirectory()) {\n+      if (!dstFS.mkdirs(dst)) {\n+        return false;\n+      }\n+      File contents[] \u003d src.listFiles();\n+      for (int i \u003d 0; i \u003c contents.length; i++) {\n+        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n+             deleteSource, conf);\n+      }\n+    } else if (src.isFile()) {\n+      InputStream in \u003d null;\n+      OutputStream out \u003dnull;\n+      try {\n+        in \u003d new FileInputStream(src);\n+        out \u003d dstFS.create(dst);\n+        IOUtils.copyBytes(in, out, conf);\n+      } catch (IOException e) {\n+        IOUtils.closeStream( out );\n+        IOUtils.closeStream( in );\n+        throw e;\n+      }\n+    } else {\n+      throw new IOException(src.toString() + \n+                            \": No such file or directory\");\n+    }\n+    if (deleteSource) {\n+      return FileUtil.fullyDelete(src);\n+    } else {\n+      return true;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(File src,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             Configuration conf) throws IOException {\n    dst \u003d checkDest(src.getName(), dstFS, dst, false);\n\n    if (src.isDirectory()) {\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      File contents[] \u003d src.listFiles();\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(contents[i], dstFS, new Path(dst, contents[i].getName()),\n             deleteSource, conf);\n      }\n    } else if (src.isFile()) {\n      InputStream in \u003d null;\n      OutputStream out \u003dnull;\n      try {\n        in \u003d new FileInputStream(src);\n        out \u003d dstFS.create(dst);\n        IOUtils.copyBytes(in, out, conf);\n      } catch (IOException e) {\n        IOUtils.closeStream( out );\n        IOUtils.closeStream( in );\n        throw e;\n      }\n    } else {\n      throw new IOException(src.toString() + \n                            \": No such file or directory\");\n    }\n    if (deleteSource) {\n      return FileUtil.fullyDelete(src);\n    } else {\n      return true;\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}