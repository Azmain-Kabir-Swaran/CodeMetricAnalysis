{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSTopologyNodeImpl.java",
  "functionName": "getSubtreeStorageCount",
  "functionId": "getSubtreeStorageCount___type-StorageType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java",
  "functionStartLine": 104,
  "functionEndLine": 110,
  "numCommitsSeen": 4,
  "timeTaken": 1080,
  "changeHistory": [
    "615ac09499dc0b391cbb99bb0e9877959a9173a6",
    "9832ae0ed8853d29072c9ea7031cd2373e6b16f9"
  ],
  "changeHistoryShort": {
    "615ac09499dc0b391cbb99bb0e9877959a9173a6": "Ybodychange",
    "9832ae0ed8853d29072c9ea7031cd2373e6b16f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "615ac09499dc0b391cbb99bb0e9877959a9173a6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11419. DFSTopologyNodeImpl#chooseRandom optimizations. Contributed by Chen Liang.\n",
      "commitDate": "15/03/17 12:28 PM",
      "commitName": "615ac09499dc0b391cbb99bb0e9877959a9173a6",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "13/03/17 5:30 PM",
      "commitNameOld": "9832ae0ed8853d29072c9ea7031cd2373e6b16f9",
      "commitAuthorOld": "Chen Liang",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,7 @@\n   public int getSubtreeStorageCount(StorageType type) {\n-    int res \u003d 0;\n-    for (Map.Entry\u003cString, EnumMap\u003cStorageType, Integer\u003e\u003e entry :\n-        childrenStorageInfo.entrySet()) {\n-      if (entry.getValue().containsKey(type)) {\n-        res +\u003d entry.getValue().get(type);\n-      }\n+    if (storageTypeCounts.containsKey(type)) {\n+      return storageTypeCounts.get(type);\n+    } else {\n+      return 0;\n     }\n-    return res;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getSubtreeStorageCount(StorageType type) {\n    if (storageTypeCounts.containsKey(type)) {\n      return storageTypeCounts.get(type);\n    } else {\n      return 0;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java",
      "extendedDetails": {}
    },
    "9832ae0ed8853d29072c9ea7031cd2373e6b16f9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11482. Add storage type demand to into DFSNetworkTopology#chooseRandom. Contributed by Chen Liang.\n",
      "commitDate": "13/03/17 5:30 PM",
      "commitName": "9832ae0ed8853d29072c9ea7031cd2373e6b16f9",
      "commitAuthor": "Chen Liang",
      "diff": "@@ -0,0 +1,10 @@\n+  public int getSubtreeStorageCount(StorageType type) {\n+    int res \u003d 0;\n+    for (Map.Entry\u003cString, EnumMap\u003cStorageType, Integer\u003e\u003e entry :\n+        childrenStorageInfo.entrySet()) {\n+      if (entry.getValue().containsKey(type)) {\n+        res +\u003d entry.getValue().get(type);\n+      }\n+    }\n+    return res;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int getSubtreeStorageCount(StorageType type) {\n    int res \u003d 0;\n    for (Map.Entry\u003cString, EnumMap\u003cStorageType, Integer\u003e\u003e entry :\n        childrenStorageInfo.entrySet()) {\n      if (entry.getValue().containsKey(type)) {\n        res +\u003d entry.getValue().get(type);\n      }\n    }\n    return res;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java"
    }
  }
}