{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "createHttpsChannelConnector",
  "functionId": "createHttpsChannelConnector___server-Server__httpConfig-HttpConfiguration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 538,
  "functionEndLine": 576,
  "numCommitsSeen": 107,
  "timeTaken": 5754,
  "changeHistory": [
    "a7fccc1122364f97c0bda86cda46978aedb66272",
    "f1ab7f18c423a9cfc59292d25fa178e73715b85b",
    "3d41f330186f6481850b46e0c345d3ecf7b1b818",
    "c39e9fc9a3ce7bf6f627c003526fa903a69c2646",
    "9ccb849eb69f05bccc3435306ec4bde104e411bf",
    "5d182949badb2eb80393de7ba3838102d006488b",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "03a9343d5798384b66fbd21e1e028acaf55b00e9"
  ],
  "changeHistoryShort": {
    "a7fccc1122364f97c0bda86cda46978aedb66272": "Ybodychange",
    "f1ab7f18c423a9cfc59292d25fa178e73715b85b": "Ybodychange",
    "3d41f330186f6481850b46e0c345d3ecf7b1b818": "Ybodychange",
    "c39e9fc9a3ce7bf6f627c003526fa903a69c2646": "Ybodychange",
    "9ccb849eb69f05bccc3435306ec4bde104e411bf": "Ybodychange",
    "5d182949badb2eb80393de7ba3838102d006488b": "Ymultichange(Yparameterchange,Ybodychange)",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "03a9343d5798384b66fbd21e1e028acaf55b00e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a7fccc1122364f97c0bda86cda46978aedb66272": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16727. KMS Jetty server does not startup if trust store password is null.\n",
      "commitDate": "07/01/20 3:46 PM",
      "commitName": "a7fccc1122364f97c0bda86cda46978aedb66272",
      "commitAuthor": "Hanisha Koneru",
      "commitDateOld": "03/12/19 3:47 PM",
      "commitNameOld": "f1ab7f18c423a9cfc59292d25fa178e73715b85b",
      "commitAuthorOld": "Aravindan Vijayan",
      "daysBetweenCommits": 35.0,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,39 @@\n     private ServerConnector createHttpsChannelConnector(\n         Server server, HttpConfiguration httpConfig) {\n       httpConfig.setSecureScheme(HTTPS_SCHEME);\n       httpConfig.addCustomizer(\n           new SecureRequestCustomizer(sniHostCheckEnabled));\n       ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n       SslContextFactory.Server sslContextFactory \u003d\n           new SslContextFactory.Server();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n-      sslContextFactory.setKeyManagerPassword(keyPassword);\n+      if (keyPassword !\u003d null) {\n+        sslContextFactory.setKeyManagerPassword(keyPassword);\n+      }\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n-        sslContextFactory.setKeyStorePassword(keyStorePassword);\n+        if (keyStorePassword !\u003d null) {\n+          sslContextFactory.setKeyStorePassword(keyStorePassword);\n+        }\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n-        sslContextFactory.setTrustStorePassword(trustStorePassword);\n+        if (trustStorePassword !\u003d null) {\n+          sslContextFactory.setTrustStorePassword(trustStorePassword);\n+        }\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n         sslContextFactory.setExcludeCipherSuites(\n             StringUtils.getTrimmedStrings(excludeCiphers));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n       setEnabledProtocols(sslContextFactory);\n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(\n          new SecureRequestCustomizer(sniHostCheckEnabled));\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory \u003d\n          new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      if (keyPassword !\u003d null) {\n        sslContextFactory.setKeyManagerPassword(keyPassword);\n      }\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        if (keyStorePassword !\u003d null) {\n          sslContextFactory.setKeyStorePassword(keyStorePassword);\n        }\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        if (trustStorePassword !\u003d null) {\n          sslContextFactory.setTrustStorePassword(trustStorePassword);\n        }\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      setEnabledProtocols(sslContextFactory);\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "f1ab7f18c423a9cfc59292d25fa178e73715b85b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16718. Allow disabling Server Name Indication (SNI) for Jetty. Contributed by Aravindan Vijayan.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nReviewed-by: Siyao Meng \u003csmeng@cloudera.com\u003e\n",
      "commitDate": "03/12/19 3:47 PM",
      "commitName": "f1ab7f18c423a9cfc59292d25fa178e73715b85b",
      "commitAuthor": "Aravindan Vijayan",
      "commitDateOld": "18/10/19 8:25 AM",
      "commitNameOld": "3d41f330186f6481850b46e0c345d3ecf7b1b818",
      "commitAuthorOld": "Yuming Wang",
      "daysBetweenCommits": 46.35,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     private ServerConnector createHttpsChannelConnector(\n         Server server, HttpConfiguration httpConfig) {\n       httpConfig.setSecureScheme(HTTPS_SCHEME);\n-      httpConfig.addCustomizer(new SecureRequestCustomizer());\n+      httpConfig.addCustomizer(\n+          new SecureRequestCustomizer(sniHostCheckEnabled));\n       ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n       SslContextFactory.Server sslContextFactory \u003d\n           new SslContextFactory.Server();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n       sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n         sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n         sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n         sslContextFactory.setExcludeCipherSuites(\n             StringUtils.getTrimmedStrings(excludeCiphers));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n       setEnabledProtocols(sslContextFactory);\n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(\n          new SecureRequestCustomizer(sniHostCheckEnabled));\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory \u003d\n          new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      setEnabledProtocols(sslContextFactory);\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "3d41f330186f6481850b46e0c345d3ecf7b1b818": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16152. Upgrade Eclipse Jetty version to 9.4.x. Contributed by Yuming Wang, Siyao Meng.\n\nCo-authored-By: Siyao Meng \u003csmeng@cloudera.com\u003e\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "18/10/19 8:25 AM",
      "commitName": "3d41f330186f6481850b46e0c345d3ecf7b1b818",
      "commitAuthor": "Yuming Wang",
      "commitDateOld": "15/10/19 1:55 PM",
      "commitNameOld": "c39e9fc9a3ce7bf6f627c003526fa903a69c2646",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n     private ServerConnector createHttpsChannelConnector(\n         Server server, HttpConfiguration httpConfig) {\n       httpConfig.setSecureScheme(HTTPS_SCHEME);\n       httpConfig.addCustomizer(new SecureRequestCustomizer());\n       ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n-      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n+      SslContextFactory.Server sslContextFactory \u003d\n+          new SslContextFactory.Server();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n       sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n         sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n         sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n         sslContextFactory.setExcludeCipherSuites(\n             StringUtils.getTrimmedStrings(excludeCiphers));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n       setEnabledProtocols(sslContextFactory);\n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory.Server sslContextFactory \u003d\n          new SslContextFactory.Server();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      setEnabledProtocols(sslContextFactory);\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "c39e9fc9a3ce7bf6f627c003526fa903a69c2646": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15169. \"hadoop.ssl.enabled.protocols\" should be considered in httpserver2. Contributed by Brahma Reddy Battula, Wei-Chiu Chuang.\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e\nCo-authored-By: Brahma Reddy Battula \u003cbrahma@apache.org\u003e\n",
      "commitDate": "15/10/19 1:55 PM",
      "commitName": "c39e9fc9a3ce7bf6f627c003526fa903a69c2646",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "13/08/19 4:39 PM",
      "commitNameOld": "da0006fe0473e353ee2d489156248a01aa982dfd",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 62.89,
      "commitsBetweenForRepo": 544,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n     private ServerConnector createHttpsChannelConnector(\n         Server server, HttpConfiguration httpConfig) {\n       httpConfig.setSecureScheme(HTTPS_SCHEME);\n       httpConfig.addCustomizer(new SecureRequestCustomizer());\n       ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n       SslContextFactory sslContextFactory \u003d new SslContextFactory();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n       sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n         sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n         sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n         sslContextFactory.setExcludeCipherSuites(\n             StringUtils.getTrimmedStrings(excludeCiphers));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n+      setEnabledProtocols(sslContextFactory);\n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      setEnabledProtocols(sslContextFactory);\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "9ccb849eb69f05bccc3435306ec4bde104e411bf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14341. Support multi-line value for ssl.server.exclude.cipher.list. Contributed by John Zhuge.\n",
      "commitDate": "25/04/17 10:06 PM",
      "commitName": "9ccb849eb69f05bccc3435306ec4bde104e411bf",
      "commitAuthor": "John Zhuge",
      "commitDateOld": "05/02/17 7:42 PM",
      "commitNameOld": "cce35c38159b23eb55204b3c9afcaa3215f4f4ef",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 79.06,
      "commitsBetweenForRepo": 454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n     private ServerConnector createHttpsChannelConnector(\n         Server server, HttpConfiguration httpConfig) {\n       httpConfig.setSecureScheme(HTTPS_SCHEME);\n       httpConfig.addCustomizer(new SecureRequestCustomizer());\n       ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n       SslContextFactory sslContextFactory \u003d new SslContextFactory();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n       sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n         sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n         sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n-        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n+        sslContextFactory.setExcludeCipherSuites(\n+            StringUtils.getTrimmedStrings(excludeCiphers));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(\n            StringUtils.getTrimmedStrings(excludeCiphers));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "5d182949badb2eb80393de7ba3838102d006488b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
      "commitDate": "05/01/17 5:21 PM",
      "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
          "commitDate": "05/01/17 5:21 PM",
          "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "08/11/16 7:25 AM",
          "commitNameOld": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 58.41,
          "commitsBetweenForRepo": 318,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,29 @@\n-    private ServerConnector createHttpsChannelConnector(Server server) {\n-      ServerConnector conn \u003d new ServerConnector(server);\n-      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n-      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n-      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n-      httpConfig.setSecureScheme(\"https\");\n+    private ServerConnector createHttpsChannelConnector(\n+        Server server, HttpConfiguration httpConfig) {\n+      httpConfig.setSecureScheme(HTTPS_SCHEME);\n       httpConfig.addCustomizer(new SecureRequestCustomizer());\n-      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n-      conn.addConnectionFactory(connFactory);\n-      configureChannelConnector(conn);\n+      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n       SslContextFactory sslContextFactory \u003d new SslContextFactory();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n       sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n         sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n         sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n         sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {
            "oldValue": "[server-Server]",
            "newValue": "[server-Server, httpConfig-HttpConfiguration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
          "commitDate": "05/01/17 5:21 PM",
          "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "08/11/16 7:25 AM",
          "commitNameOld": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 58.41,
          "commitsBetweenForRepo": 318,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,29 @@\n-    private ServerConnector createHttpsChannelConnector(Server server) {\n-      ServerConnector conn \u003d new ServerConnector(server);\n-      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n-      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n-      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n-      httpConfig.setSecureScheme(\"https\");\n+    private ServerConnector createHttpsChannelConnector(\n+        Server server, HttpConfiguration httpConfig) {\n+      httpConfig.setSecureScheme(HTTPS_SCHEME);\n       httpConfig.addCustomizer(new SecureRequestCustomizer());\n-      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n-      conn.addConnectionFactory(connFactory);\n-      configureChannelConnector(conn);\n+      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n \n       SslContextFactory sslContextFactory \u003d new SslContextFactory();\n       sslContextFactory.setNeedClientAuth(needsClientAuth);\n       sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n         sslContextFactory.setKeyStorePath(keyStore);\n         sslContextFactory.setKeyStoreType(keyStoreType);\n         sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n       if (trustStore !\u003d null) {\n         sslContextFactory.setTrustStorePath(trustStore);\n         sslContextFactory.setTrustStoreType(trustStoreType);\n         sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n         sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n \n       conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n           HttpVersion.HTTP_1_1.asString()));\n \n       return conn;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ServerConnector createHttpsChannelConnector(\n        Server server, HttpConfiguration httpConfig) {\n      httpConfig.setSecureScheme(HTTPS_SCHEME);\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ServerConnector conn \u003d createHttpChannelConnector(server, httpConfig);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {}
        }
      ]
    },
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
          "commitDate": "27/10/16 4:09 PM",
          "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "19/08/16 9:22 AM",
          "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 69.28,
          "commitsBetweenForRepo": 490,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,34 @@\n-    private Connector createHttpsChannelConnector() {\n-      SslSelectChannelConnector c \u003d new SslSelectChannelConnectorSecure();\n-      configureChannelConnector(c);\n+    private ServerConnector createHttpsChannelConnector(Server server) {\n+      ServerConnector conn \u003d new ServerConnector(server);\n+      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n+      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n+      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n+      httpConfig.setSecureScheme(\"https\");\n+      httpConfig.addCustomizer(new SecureRequestCustomizer());\n+      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n+      conn.addConnectionFactory(connFactory);\n+      configureChannelConnector(conn);\n \n-      c.setNeedClientAuth(needsClientAuth);\n-      c.setKeyPassword(keyPassword);\n-\n+      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n+      sslContextFactory.setNeedClientAuth(needsClientAuth);\n+      sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n-        c.setKeystore(keyStore);\n-        c.setKeystoreType(keyStoreType);\n-        c.setPassword(keyStorePassword);\n+        sslContextFactory.setKeyStorePath(keyStore);\n+        sslContextFactory.setKeyStoreType(keyStoreType);\n+        sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n-\n       if (trustStore !\u003d null) {\n-        c.setTruststore(trustStore);\n-        c.setTruststoreType(trustStoreType);\n-        c.setTrustPassword(trustStorePassword);\n+        sslContextFactory.setTrustStorePath(trustStore);\n+        sslContextFactory.setTrustStoreType(trustStoreType);\n+        sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n-\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n-        c.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n+        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n-      return c;\n+\n+      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n+          HttpVersion.HTTP_1_1.asString()));\n+\n+      return conn;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ServerConnector createHttpsChannelConnector(Server server) {\n      ServerConnector conn \u003d new ServerConnector(server);\n      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n      httpConfig.setSecureScheme(\"https\");\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n      conn.addConnectionFactory(connFactory);\n      configureChannelConnector(conn);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[server-Server]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
          "commitDate": "27/10/16 4:09 PM",
          "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "19/08/16 9:22 AM",
          "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 69.28,
          "commitsBetweenForRepo": 490,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,34 @@\n-    private Connector createHttpsChannelConnector() {\n-      SslSelectChannelConnector c \u003d new SslSelectChannelConnectorSecure();\n-      configureChannelConnector(c);\n+    private ServerConnector createHttpsChannelConnector(Server server) {\n+      ServerConnector conn \u003d new ServerConnector(server);\n+      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n+      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n+      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n+      httpConfig.setSecureScheme(\"https\");\n+      httpConfig.addCustomizer(new SecureRequestCustomizer());\n+      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n+      conn.addConnectionFactory(connFactory);\n+      configureChannelConnector(conn);\n \n-      c.setNeedClientAuth(needsClientAuth);\n-      c.setKeyPassword(keyPassword);\n-\n+      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n+      sslContextFactory.setNeedClientAuth(needsClientAuth);\n+      sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n-        c.setKeystore(keyStore);\n-        c.setKeystoreType(keyStoreType);\n-        c.setPassword(keyStorePassword);\n+        sslContextFactory.setKeyStorePath(keyStore);\n+        sslContextFactory.setKeyStoreType(keyStoreType);\n+        sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n-\n       if (trustStore !\u003d null) {\n-        c.setTruststore(trustStore);\n-        c.setTruststoreType(trustStoreType);\n-        c.setTrustPassword(trustStorePassword);\n+        sslContextFactory.setTrustStorePath(trustStore);\n+        sslContextFactory.setTrustStoreType(trustStoreType);\n+        sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n-\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n-        c.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n+        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n-      return c;\n+\n+      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n+          HttpVersion.HTTP_1_1.asString()));\n+\n+      return conn;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ServerConnector createHttpsChannelConnector(Server server) {\n      ServerConnector conn \u003d new ServerConnector(server);\n      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n      httpConfig.setSecureScheme(\"https\");\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n      conn.addConnectionFactory(connFactory);\n      configureChannelConnector(conn);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {
            "oldValue": "Connector",
            "newValue": "ServerConnector"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
          "commitDate": "27/10/16 4:09 PM",
          "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "19/08/16 9:22 AM",
          "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 69.28,
          "commitsBetweenForRepo": 490,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,34 @@\n-    private Connector createHttpsChannelConnector() {\n-      SslSelectChannelConnector c \u003d new SslSelectChannelConnectorSecure();\n-      configureChannelConnector(c);\n+    private ServerConnector createHttpsChannelConnector(Server server) {\n+      ServerConnector conn \u003d new ServerConnector(server);\n+      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n+      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n+      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n+      httpConfig.setSecureScheme(\"https\");\n+      httpConfig.addCustomizer(new SecureRequestCustomizer());\n+      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n+      conn.addConnectionFactory(connFactory);\n+      configureChannelConnector(conn);\n \n-      c.setNeedClientAuth(needsClientAuth);\n-      c.setKeyPassword(keyPassword);\n-\n+      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n+      sslContextFactory.setNeedClientAuth(needsClientAuth);\n+      sslContextFactory.setKeyManagerPassword(keyPassword);\n       if (keyStore !\u003d null) {\n-        c.setKeystore(keyStore);\n-        c.setKeystoreType(keyStoreType);\n-        c.setPassword(keyStorePassword);\n+        sslContextFactory.setKeyStorePath(keyStore);\n+        sslContextFactory.setKeyStoreType(keyStoreType);\n+        sslContextFactory.setKeyStorePassword(keyStorePassword);\n       }\n-\n       if (trustStore !\u003d null) {\n-        c.setTruststore(trustStore);\n-        c.setTruststoreType(trustStoreType);\n-        c.setTrustPassword(trustStorePassword);\n+        sslContextFactory.setTrustStorePath(trustStore);\n+        sslContextFactory.setTrustStoreType(trustStoreType);\n+        sslContextFactory.setTrustStorePassword(trustStorePassword);\n       }\n-\n       if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n-        c.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n+        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n         LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n       }\n-      return c;\n+\n+      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n+          HttpVersion.HTTP_1_1.asString()));\n+\n+      return conn;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ServerConnector createHttpsChannelConnector(Server server) {\n      ServerConnector conn \u003d new ServerConnector(server);\n      HttpConfiguration httpConfig \u003d new HttpConfiguration();\n      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);\n      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);\n      httpConfig.setSecureScheme(\"https\");\n      httpConfig.addCustomizer(new SecureRequestCustomizer());\n      ConnectionFactory connFactory \u003d new HttpConnectionFactory(httpConfig);\n      conn.addConnectionFactory(connFactory);\n      configureChannelConnector(conn);\n\n      SslContextFactory sslContextFactory \u003d new SslContextFactory();\n      sslContextFactory.setNeedClientAuth(needsClientAuth);\n      sslContextFactory.setKeyManagerPassword(keyPassword);\n      if (keyStore !\u003d null) {\n        sslContextFactory.setKeyStorePath(keyStore);\n        sslContextFactory.setKeyStoreType(keyStoreType);\n        sslContextFactory.setKeyStorePassword(keyStorePassword);\n      }\n      if (trustStore !\u003d null) {\n        sslContextFactory.setTrustStorePath(trustStore);\n        sslContextFactory.setTrustStoreType(trustStoreType);\n        sslContextFactory.setTrustStorePassword(trustStorePassword);\n      }\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        sslContextFactory.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n\n      conn.addFirstConnectionFactory(new SslConnectionFactory(sslContextFactory,\n          HttpVersion.HTTP_1_1.asString()));\n\n      return conn;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
          "extendedDetails": {}
        }
      ]
    },
    "03a9343d5798384b66fbd21e1e028acaf55b00e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12765. HttpServer2 should switch to using the non-blocking SslSelectChannelConnector to prevent performance degradation when handling SSL connections. Contributed by Min Shen.\n",
      "commitDate": "19/08/16 9:22 AM",
      "commitName": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
      "commitAuthor": "Wei-Chiu Chuang",
      "diff": "@@ -0,0 +1,25 @@\n+    private Connector createHttpsChannelConnector() {\n+      SslSelectChannelConnector c \u003d new SslSelectChannelConnectorSecure();\n+      configureChannelConnector(c);\n+\n+      c.setNeedClientAuth(needsClientAuth);\n+      c.setKeyPassword(keyPassword);\n+\n+      if (keyStore !\u003d null) {\n+        c.setKeystore(keyStore);\n+        c.setKeystoreType(keyStoreType);\n+        c.setPassword(keyStorePassword);\n+      }\n+\n+      if (trustStore !\u003d null) {\n+        c.setTruststore(trustStore);\n+        c.setTruststoreType(trustStoreType);\n+        c.setTrustPassword(trustStorePassword);\n+      }\n+\n+      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n+        c.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n+        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n+      }\n+      return c;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Connector createHttpsChannelConnector() {\n      SslSelectChannelConnector c \u003d new SslSelectChannelConnectorSecure();\n      configureChannelConnector(c);\n\n      c.setNeedClientAuth(needsClientAuth);\n      c.setKeyPassword(keyPassword);\n\n      if (keyStore !\u003d null) {\n        c.setKeystore(keyStore);\n        c.setKeystoreType(keyStoreType);\n        c.setPassword(keyStorePassword);\n      }\n\n      if (trustStore !\u003d null) {\n        c.setTruststore(trustStore);\n        c.setTruststoreType(trustStoreType);\n        c.setTrustPassword(trustStorePassword);\n      }\n\n      if(null !\u003d excludeCiphers \u0026\u0026 !excludeCiphers.isEmpty()) {\n        c.setExcludeCipherSuites(excludeCiphers.split(\",\"));\n        LOG.info(\"Excluded Cipher List:\" + excludeCiphers);\n      }\n      return c;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
    }
  }
}