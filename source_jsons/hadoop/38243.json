{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueuePriorityContainerCandidateSelector.java",
  "functionName": "preChecksForMovingReservedContainerToNode",
  "functionId": "preChecksForMovingReservedContainerToNode___reservedContainer-RMContainer__newNode-FiCaSchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/QueuePriorityContainerCandidateSelector.java",
  "functionStartLine": 275,
  "functionEndLine": 301,
  "numCommitsSeen": 8,
  "timeTaken": 1627,
  "changeHistory": [
    "ce832059db077fa95922198b066a737ed4f609fe"
  ],
  "changeHistoryShort": {
    "ce832059db077fa95922198b066a737ed4f609fe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce832059db077fa95922198b066a737ed4f609fe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5864. Capacity Scheduler - Queue Priorities. (wangda)\n",
      "commitDate": "23/01/17 10:52 AM",
      "commitName": "ce832059db077fa95922198b066a737ed4f609fe",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,27 @@\n+  private boolean preChecksForMovingReservedContainerToNode(\n+      RMContainer reservedContainer, FiCaSchedulerNode newNode) {\n+    // Don\u0027t do this if it has hard-locality preferences\n+    if (reservedContainer.getReservedSchedulerKey().getContainerToUpdate()\n+        !\u003d null) {\n+      // This means a container update request (like increase / promote)\n+      return false;\n+    }\n+\n+    // For normal requests\n+    FiCaSchedulerApp app \u003d\n+        preemptionContext.getScheduler().getApplicationAttempt(\n+            reservedContainer.getApplicationAttemptId());\n+    if (!app.getAppSchedulingInfo().canDelayTo(\n+        reservedContainer.getAllocatedSchedulerKey(), ResourceRequest.ANY)) {\n+      // This is a hard locality request\n+      return false;\n+    }\n+\n+    // Check if newNode\u0027s partition matches requested partition\n+    if (!StringUtils.equals(reservedContainer.getNodeLabelExpression(),\n+        newNode.getPartition())) {\n+      return false;\n+    }\n+\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean preChecksForMovingReservedContainerToNode(\n      RMContainer reservedContainer, FiCaSchedulerNode newNode) {\n    // Don\u0027t do this if it has hard-locality preferences\n    if (reservedContainer.getReservedSchedulerKey().getContainerToUpdate()\n        !\u003d null) {\n      // This means a container update request (like increase / promote)\n      return false;\n    }\n\n    // For normal requests\n    FiCaSchedulerApp app \u003d\n        preemptionContext.getScheduler().getApplicationAttempt(\n            reservedContainer.getApplicationAttemptId());\n    if (!app.getAppSchedulingInfo().canDelayTo(\n        reservedContainer.getAllocatedSchedulerKey(), ResourceRequest.ANY)) {\n      // This is a hard locality request\n      return false;\n    }\n\n    // Check if newNode\u0027s partition matches requested partition\n    if (!StringUtils.equals(reservedContainer.getNodeLabelExpression(),\n        newNode.getPartition())) {\n      return false;\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/QueuePriorityContainerCandidateSelector.java"
    }
  }
}