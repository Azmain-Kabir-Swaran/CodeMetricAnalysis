{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServiceClient.java",
  "functionName": "getStatusString",
  "functionId": "getStatusString___appIdOrName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
  "functionStartLine": 531,
  "functionEndLine": 566,
  "numCommitsSeen": 28,
  "timeTaken": 3190,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "7fe3214d4bb810c0da18dd936875b4e2588ba518",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "7fe3214d4bb810c0da18dd936875b4e2588ba518": "Ybodychange",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ybodychange",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "19/11/18 5:59 PM",
      "commitNameOld": "27ffec7ba77ba3d0b88b97b34aca5356e2e258f4",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 97.74,
      "commitsBetweenForRepo": 675,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public String getStatusString(String appIdOrName) throws IOException,\n       YarnException {\n     String output \u003d \"\";\n     String appName;\n     try {\n       ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n       ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n       appName \u003d appReport.getName();\n     } catch (IllegalArgumentException e) {\n       // not app Id format, may be app name\n       appName \u003d appIdOrName;\n       ServiceApiUtil.validateNameFormat(appName, getConfig());\n     }\n     try {\n       ClientResponse response \u003d getApiClient(getServicePath(appName))\n           .get(ClientResponse.class);\n       if (response.getStatus() \u003d\u003d 404) {\n         StringBuilder sb \u003d new StringBuilder();\n-        sb.append(\" Service \");\n-        sb.append(appName);\n-        sb.append(\" not found\");\n+        sb.append(\" Service \")\n+            .append(appName)\n+            .append(\" not found\");\n         return sb.toString();\n       }\n       if (response.getStatus() !\u003d 200) {\n         StringBuilder sb \u003d new StringBuilder();\n-        sb.append(appName);\n-        sb.append(\" Failed : HTTP error code : \");\n-        sb.append(response.getStatus());\n+        sb.append(appName)\n+            .append(\" Failed : HTTP error code : \")\n+            .append(response.getStatus());\n         return sb.toString();\n       }\n       output \u003d response.getEntity(String.class);\n     } catch (Exception e) {\n       LOG.error(\"Fail to check application status: \", e);\n     }\n     return output;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStatusString(String appIdOrName) throws IOException,\n      YarnException {\n    String output \u003d \"\";\n    String appName;\n    try {\n      ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n      ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n      appName \u003d appReport.getName();\n    } catch (IllegalArgumentException e) {\n      // not app Id format, may be app name\n      appName \u003d appIdOrName;\n      ServiceApiUtil.validateNameFormat(appName, getConfig());\n    }\n    try {\n      ClientResponse response \u003d getApiClient(getServicePath(appName))\n          .get(ClientResponse.class);\n      if (response.getStatus() \u003d\u003d 404) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(\" Service \")\n            .append(appName)\n            .append(\" not found\");\n        return sb.toString();\n      }\n      if (response.getStatus() !\u003d 200) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(appName)\n            .append(\" Failed : HTTP error code : \")\n            .append(response.getStatus());\n        return sb.toString();\n      }\n      output \u003d response.getEntity(String.class);\n    } catch (Exception e) {\n      LOG.error(\"Fail to check application status: \", e);\n    }\n    return output;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getStatusString(String appIdOrName) throws IOException,\n      YarnException {\n    String output \u003d \"\";\n    String appName;\n    try {\n      ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n      ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n      appName \u003d appReport.getName();\n    } catch (IllegalArgumentException e) {\n      // not app Id format, may be app name\n      appName \u003d appIdOrName;\n      ServiceApiUtil.validateNameFormat(appName, getConfig());\n    }\n    try {\n      ClientResponse response \u003d getApiClient(getServicePath(appName))\n          .get(ClientResponse.class);\n      if (response.getStatus() \u003d\u003d 404) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(\" Service \");\n        sb.append(appName);\n        sb.append(\" not found\");\n        return sb.toString();\n      }\n      if (response.getStatus() !\u003d 200) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(appName);\n        sb.append(\" Failed : HTTP error code : \");\n        sb.append(response.getStatus());\n        return sb.toString();\n      }\n      output \u003d response.getEntity(String.class);\n    } catch (Exception e) {\n      LOG.error(\"Fail to check application status: \", e);\n    }\n    return output;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
      }
    },
    "7fe3214d4bb810c0da18dd936875b4e2588ba518": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7961. Improve status message for YARN service.\n           Contributed by Gour Saha\n",
      "commitDate": "03/05/18 10:27 AM",
      "commitName": "7fe3214d4bb810c0da18dd936875b4e2588ba518",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "26/04/18 1:54 PM",
      "commitNameOld": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 6.86,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,36 @@\n   public String getStatusString(String appIdOrName) throws IOException,\n       YarnException {\n     String output \u003d \"\";\n     String appName;\n     try {\n       ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n       ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n       appName \u003d appReport.getName();\n     } catch (IllegalArgumentException e) {\n       // not app Id format, may be app name\n       appName \u003d appIdOrName;\n       ServiceApiUtil.validateNameFormat(appName, getConfig());\n     }\n     try {\n       ClientResponse response \u003d getApiClient(getServicePath(appName))\n           .get(ClientResponse.class);\n+      if (response.getStatus() \u003d\u003d 404) {\n+        StringBuilder sb \u003d new StringBuilder();\n+        sb.append(\" Service \");\n+        sb.append(appName);\n+        sb.append(\" not found\");\n+        return sb.toString();\n+      }\n       if (response.getStatus() !\u003d 200) {\n         StringBuilder sb \u003d new StringBuilder();\n         sb.append(appName);\n         sb.append(\" Failed : HTTP error code : \");\n         sb.append(response.getStatus());\n         return sb.toString();\n       }\n       output \u003d response.getEntity(String.class);\n     } catch (Exception e) {\n       LOG.error(\"Fail to check application status: \", e);\n     }\n     return output;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStatusString(String appIdOrName) throws IOException,\n      YarnException {\n    String output \u003d \"\";\n    String appName;\n    try {\n      ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n      ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n      appName \u003d appReport.getName();\n    } catch (IllegalArgumentException e) {\n      // not app Id format, may be app name\n      appName \u003d appIdOrName;\n      ServiceApiUtil.validateNameFormat(appName, getConfig());\n    }\n    try {\n      ClientResponse response \u003d getApiClient(getServicePath(appName))\n          .get(ClientResponse.class);\n      if (response.getStatus() \u003d\u003d 404) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(\" Service \");\n        sb.append(appName);\n        sb.append(\" not found\");\n        return sb.toString();\n      }\n      if (response.getStatus() !\u003d 200) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(appName);\n        sb.append(\" Failed : HTTP error code : \");\n        sb.append(response.getStatus());\n        return sb.toString();\n      }\n      output \u003d response.getEntity(String.class);\n    } catch (Exception e) {\n      LOG.error(\"Fail to check application status: \", e);\n    }\n    return output;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "26/03/18 3:46 PM",
      "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 30.92,
      "commitsBetweenForRepo": 699,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public String getStatusString(String appIdOrName) throws IOException,\n       YarnException {\n     String output \u003d \"\";\n     String appName;\n     try {\n       ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n       ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n       appName \u003d appReport.getName();\n     } catch (IllegalArgumentException e) {\n       // not app Id format, may be app name\n       appName \u003d appIdOrName;\n       ServiceApiUtil.validateNameFormat(appName, getConfig());\n     }\n     try {\n-      ClientResponse response \u003d getApiClient(appName).get(ClientResponse.class);\n+      ClientResponse response \u003d getApiClient(getServicePath(appName))\n+          .get(ClientResponse.class);\n       if (response.getStatus() !\u003d 200) {\n         StringBuilder sb \u003d new StringBuilder();\n         sb.append(appName);\n         sb.append(\" Failed : HTTP error code : \");\n         sb.append(response.getStatus());\n         return sb.toString();\n       }\n       output \u003d response.getEntity(String.class);\n     } catch (Exception e) {\n       LOG.error(\"Fail to check application status: \", e);\n     }\n     return output;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStatusString(String appIdOrName) throws IOException,\n      YarnException {\n    String output \u003d \"\";\n    String appName;\n    try {\n      ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n      ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n      appName \u003d appReport.getName();\n    } catch (IllegalArgumentException e) {\n      // not app Id format, may be app name\n      appName \u003d appIdOrName;\n      ServiceApiUtil.validateNameFormat(appName, getConfig());\n    }\n    try {\n      ClientResponse response \u003d getApiClient(getServicePath(appName))\n          .get(ClientResponse.class);\n      if (response.getStatus() !\u003d 200) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(appName);\n        sb.append(\" Failed : HTTP error code : \");\n        sb.append(response.getStatus());\n        return sb.toString();\n      }\n      output \u003d response.getEntity(String.class);\n    } catch (Exception e) {\n      LOG.error(\"Fail to check application status: \", e);\n    }\n    return output;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
      "commitDate": "23/01/18 5:54 PM",
      "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,28 @@\n+  public String getStatusString(String appIdOrName) throws IOException,\n+      YarnException {\n+    String output \u003d \"\";\n+    String appName;\n+    try {\n+      ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n+      ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n+      appName \u003d appReport.getName();\n+    } catch (IllegalArgumentException e) {\n+      // not app Id format, may be app name\n+      appName \u003d appIdOrName;\n+      ServiceApiUtil.validateNameFormat(appName, getConfig());\n+    }\n+    try {\n+      ClientResponse response \u003d getApiClient(appName).get(ClientResponse.class);\n+      if (response.getStatus() !\u003d 200) {\n+        StringBuilder sb \u003d new StringBuilder();\n+        sb.append(appName);\n+        sb.append(\" Failed : HTTP error code : \");\n+        sb.append(response.getStatus());\n+        return sb.toString();\n+      }\n+      output \u003d response.getEntity(String.class);\n+    } catch (Exception e) {\n+      LOG.error(\"Fail to check application status: \", e);\n+    }\n+    return output;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStatusString(String appIdOrName) throws IOException,\n      YarnException {\n    String output \u003d \"\";\n    String appName;\n    try {\n      ApplicationId appId \u003d ApplicationId.fromString(appIdOrName);\n      ApplicationReport appReport \u003d yarnClient.getApplicationReport(appId);\n      appName \u003d appReport.getName();\n    } catch (IllegalArgumentException e) {\n      // not app Id format, may be app name\n      appName \u003d appIdOrName;\n      ServiceApiUtil.validateNameFormat(appName, getConfig());\n    }\n    try {\n      ClientResponse response \u003d getApiClient(appName).get(ClientResponse.class);\n      if (response.getStatus() !\u003d 200) {\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(appName);\n        sb.append(\" Failed : HTTP error code : \");\n        sb.append(response.getStatus());\n        return sb.toString();\n      }\n      output \u003d response.getEntity(String.class);\n    } catch (Exception e) {\n      LOG.error(\"Fail to check application status: \", e);\n    }\n    return output;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
    }
  }
}