{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EntityCacheItem.java",
  "functionName": "forceRelease",
  "functionId": "forceRelease",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityCacheItem.java",
  "functionStartLine": 132,
  "functionEndLine": 148,
  "numCommitsSeen": 12,
  "timeTaken": 2314,
  "changeHistory": [
    "7f3c306e2ed9e865171324898decb9b587d90e73",
    "705286ccaeea36941d97ec1c1700746b74264924",
    "02f597c5db36ded385413958bdee793ad7eda40e"
  ],
  "changeHistoryShort": {
    "7f3c306e2ed9e865171324898decb9b587d90e73": "Ybodychange",
    "705286ccaeea36941d97ec1c1700746b74264924": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "02f597c5db36ded385413958bdee793ad7eda40e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f3c306e2ed9e865171324898decb9b587d90e73": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5432. Lock already held by another process while LevelDB cache store creation for dag. Contributed by Li Lu.\n",
      "commitDate": "28/07/16 6:35 AM",
      "commitName": "7f3c306e2ed9e865171324898decb9b587d90e73",
      "commitAuthor": "Junping Du",
      "commitDateOld": "07/07/16 10:37 PM",
      "commitNameOld": "673e5e02feba9171498a518c06ae70639c5f8854",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.33,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   public synchronized void forceRelease() {\n     try {\n       if (store !\u003d null) {\n         store.close();\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Error closing timeline store\", e);\n     }\n     store \u003d null;\n-    activeStores.getAndDecrement();\n-    refCount \u003d 0;\n     // reset offsets so next time logs are re-parsed\n     for (LogInfo log : appLogs.getDetailLogs()) {\n       if (log.getFilename().contains(groupId.toString())) {\n         log.setOffset(0);\n       }\n     }\n     LOG.debug(\"Cache for group {} released. \", groupId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void forceRelease() {\n    try {\n      if (store !\u003d null) {\n        store.close();\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Error closing timeline store\", e);\n    }\n    store \u003d null;\n    // reset offsets so next time logs are re-parsed\n    for (LogInfo log : appLogs.getDetailLogs()) {\n      if (log.getFilename().contains(groupId.toString())) {\n        log.setOffset(0);\n      }\n    }\n    LOG.debug(\"Cache for group {} released. \", groupId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityCacheItem.java",
      "extendedDetails": {}
    },
    "705286ccaeea36941d97ec1c1700746b74264924": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4987. Read cache concurrency issue between read and evict in EntityGroupFS timeline store. Contributed by Li Lu.\n",
      "commitDate": "27/05/16 6:58 AM",
      "commitName": "705286ccaeea36941d97ec1c1700746b74264924",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4987. Read cache concurrency issue between read and evict in EntityGroupFS timeline store. Contributed by Li Lu.\n",
          "commitDate": "27/05/16 6:58 AM",
          "commitName": "705286ccaeea36941d97ec1c1700746b74264924",
          "commitAuthor": "Junping Du",
          "commitDateOld": "03/05/16 4:16 AM",
          "commitNameOld": "06413da72efed9a50e49efaf7110c220c88a7f4a",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 24.11,
          "commitsBetweenForRepo": 182,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public synchronized void releaseCache(TimelineEntityGroupId groupId) {\n+  public synchronized void forceRelease() {\n     try {\n       if (store !\u003d null) {\n         store.close();\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Error closing timeline store\", e);\n     }\n     store \u003d null;\n+    activeStores.getAndDecrement();\n+    refCount \u003d 0;\n     // reset offsets so next time logs are re-parsed\n     for (LogInfo log : appLogs.getDetailLogs()) {\n       if (log.getFilename().contains(groupId.toString())) {\n         log.setOffset(0);\n       }\n     }\n+    LOG.debug(\"Cache for group {} released. \", groupId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void forceRelease() {\n    try {\n      if (store !\u003d null) {\n        store.close();\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Error closing timeline store\", e);\n    }\n    store \u003d null;\n    activeStores.getAndDecrement();\n    refCount \u003d 0;\n    // reset offsets so next time logs are re-parsed\n    for (LogInfo log : appLogs.getDetailLogs()) {\n      if (log.getFilename().contains(groupId.toString())) {\n        log.setOffset(0);\n      }\n    }\n    LOG.debug(\"Cache for group {} released. \", groupId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityCacheItem.java",
          "extendedDetails": {
            "oldValue": "releaseCache",
            "newValue": "forceRelease"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4987. Read cache concurrency issue between read and evict in EntityGroupFS timeline store. Contributed by Li Lu.\n",
          "commitDate": "27/05/16 6:58 AM",
          "commitName": "705286ccaeea36941d97ec1c1700746b74264924",
          "commitAuthor": "Junping Du",
          "commitDateOld": "03/05/16 4:16 AM",
          "commitNameOld": "06413da72efed9a50e49efaf7110c220c88a7f4a",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 24.11,
          "commitsBetweenForRepo": 182,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public synchronized void releaseCache(TimelineEntityGroupId groupId) {\n+  public synchronized void forceRelease() {\n     try {\n       if (store !\u003d null) {\n         store.close();\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Error closing timeline store\", e);\n     }\n     store \u003d null;\n+    activeStores.getAndDecrement();\n+    refCount \u003d 0;\n     // reset offsets so next time logs are re-parsed\n     for (LogInfo log : appLogs.getDetailLogs()) {\n       if (log.getFilename().contains(groupId.toString())) {\n         log.setOffset(0);\n       }\n     }\n+    LOG.debug(\"Cache for group {} released. \", groupId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void forceRelease() {\n    try {\n      if (store !\u003d null) {\n        store.close();\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Error closing timeline store\", e);\n    }\n    store \u003d null;\n    activeStores.getAndDecrement();\n    refCount \u003d 0;\n    // reset offsets so next time logs are re-parsed\n    for (LogInfo log : appLogs.getDetailLogs()) {\n      if (log.getFilename().contains(groupId.toString())) {\n        log.setOffset(0);\n      }\n    }\n    LOG.debug(\"Cache for group {} released. \", groupId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityCacheItem.java",
          "extendedDetails": {
            "oldValue": "[groupId-TimelineEntityGroupId]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4987. Read cache concurrency issue between read and evict in EntityGroupFS timeline store. Contributed by Li Lu.\n",
          "commitDate": "27/05/16 6:58 AM",
          "commitName": "705286ccaeea36941d97ec1c1700746b74264924",
          "commitAuthor": "Junping Du",
          "commitDateOld": "03/05/16 4:16 AM",
          "commitNameOld": "06413da72efed9a50e49efaf7110c220c88a7f4a",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 24.11,
          "commitsBetweenForRepo": 182,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public synchronized void releaseCache(TimelineEntityGroupId groupId) {\n+  public synchronized void forceRelease() {\n     try {\n       if (store !\u003d null) {\n         store.close();\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Error closing timeline store\", e);\n     }\n     store \u003d null;\n+    activeStores.getAndDecrement();\n+    refCount \u003d 0;\n     // reset offsets so next time logs are re-parsed\n     for (LogInfo log : appLogs.getDetailLogs()) {\n       if (log.getFilename().contains(groupId.toString())) {\n         log.setOffset(0);\n       }\n     }\n+    LOG.debug(\"Cache for group {} released. \", groupId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void forceRelease() {\n    try {\n      if (store !\u003d null) {\n        store.close();\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Error closing timeline store\", e);\n    }\n    store \u003d null;\n    activeStores.getAndDecrement();\n    refCount \u003d 0;\n    // reset offsets so next time logs are re-parsed\n    for (LogInfo log : appLogs.getDetailLogs()) {\n      if (log.getFilename().contains(groupId.toString())) {\n        log.setOffset(0);\n      }\n    }\n    LOG.debug(\"Cache for group {} released. \", groupId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityCacheItem.java",
          "extendedDetails": {}
        }
      ]
    },
    "02f597c5db36ded385413958bdee793ad7eda40e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4265. Provide new timeline plugin storage to support fine-grained entity caching. Contributed by Li Lu and Jason Lowe\n",
      "commitDate": "17/01/16 5:37 PM",
      "commitName": "02f597c5db36ded385413958bdee793ad7eda40e",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized void releaseCache(TimelineEntityGroupId groupId) {\n+    try {\n+      if (store !\u003d null) {\n+        store.close();\n+      }\n+    } catch (IOException e) {\n+      LOG.warn(\"Error closing timeline store\", e);\n+    }\n+    store \u003d null;\n+    // reset offsets so next time logs are re-parsed\n+    for (LogInfo log : appLogs.getDetailLogs()) {\n+      if (log.getFilename().contains(groupId.toString())) {\n+        log.setOffset(0);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void releaseCache(TimelineEntityGroupId groupId) {\n    try {\n      if (store !\u003d null) {\n        store.close();\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Error closing timeline store\", e);\n    }\n    store \u003d null;\n    // reset offsets so next time logs are re-parsed\n    for (LogInfo log : appLogs.getDetailLogs()) {\n      if (log.getFilename().contains(groupId.toString())) {\n        log.setOffset(0);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityCacheItem.java"
    }
  }
}