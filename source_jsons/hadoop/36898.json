{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerPage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
  "functionStartLine": 230,
  "functionEndLine": 284,
  "numCommitsSeen": 56,
  "timeTaken": 11366,
  "changeHistory": [
    "f548bfffbdcd426811352d6920ee5fe50cd0182c",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
    "1bbd023275db535ab80fcb60e022151e9679d468",
    "93bacda08bc546612f9278b31f5c38107867630a",
    "12b11e2e688158404feeb3ded37eb6cccad4ea5c",
    "8c180a13c82ab9d60f595e6942e35d51024dab53",
    "4337b263aa23464a01c316336db2319e2858a2b3",
    "ae5308fe1d08479da0f3929cc6a57816411e9121",
    "446d51591e6e99cc60a85c4b9fbac379a8caa49d",
    "0e85044e26da698c45185585310ae0e99448cd80",
    "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
    "d27e9241e8676a0edb2d35453cac5f9495fcd605",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ffdf980b2056b2a1b31ccb19746f23c31f7d08ef",
    "0086014703db5f1299143103e92093c4e8cf92d7",
    "4404f20671048ca4066a74094cb0961d664c5330",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "9a4e890f4aadc921fa468fd1292d215704429b61",
    "1f46b991da9b91585608a0babd3eda39485dce09",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f548bfffbdcd426811352d6920ee5fe50cd0182c": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Ybodychange",
    "1bbd023275db535ab80fcb60e022151e9679d468": "Ybodychange",
    "93bacda08bc546612f9278b31f5c38107867630a": "Ybodychange",
    "12b11e2e688158404feeb3ded37eb6cccad4ea5c": "Ybodychange",
    "8c180a13c82ab9d60f595e6942e35d51024dab53": "Ybodychange",
    "4337b263aa23464a01c316336db2319e2858a2b3": "Ybodychange",
    "ae5308fe1d08479da0f3929cc6a57816411e9121": "Ybodychange",
    "446d51591e6e99cc60a85c4b9fbac379a8caa49d": "Ybodychange",
    "0e85044e26da698c45185585310ae0e99448cd80": "Ybodychange",
    "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2": "Ybodychange",
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": "Ybodychange",
    "d27e9241e8676a0edb2d35453cac5f9495fcd605": "Ybodychange",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ffdf980b2056b2a1b31ccb19746f23c31f7d08ef": "Ybodychange",
    "0086014703db5f1299143103e92093c4e8cf92d7": "Ybodychange",
    "4404f20671048ca4066a74094cb0961d664c5330": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "9a4e890f4aadc921fa468fd1292d215704429b61": "Ybodychange",
    "1f46b991da9b91585608a0babd3eda39485dce09": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f548bfffbdcd426811352d6920ee5fe50cd0182c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7420. YARN UI changes to depict auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: I8039d3772a191ddede132cd1f8b08a8ca2e275b7\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "f548bfffbdcd426811352d6920ee5fe50cd0182c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/12/17 6:56 PM",
      "commitNameOld": "4db4a4a165d3936d59f5e67947c6bfbc9c3270a5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.84,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,151 +1,153 @@\n     public void render(Block html) {\n       html.__(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\").__().select()\n           .$id(\"time\").option().$value(\"60\").__(\"1 min\").__().option()\n           .$value(\"300\").__(\"5 min\").__().option().$value(\"600\").__(\"10 min\").__()\n           .__().__();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more information.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\").__(script.toString()).__();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n           __(\"Application Queues\").__().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END).__(\"100% \").__().\n               span(\".q\", \"default\").__().__();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\").__(\"Legend:\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n             __(\"Capacity\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n             __(\"Used\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n             __(\"Used (over capacity)\").__().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               __(\"Max Capacity\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(ACTIVE_USER).\n             __(\"Users Requesting Resources\").__().\n+            span().$class(\"qlegend ui-corner-all\").$style(Q_AUTO_CREATED).\n+            __(\"Auto Created Queues\").__().\n           __();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n         boolean hasAnyLabelLinkedToNM \u003d false;\n         if (null !\u003d nodeLabelsInfo) {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             if (label.getLabelName().length() \u003d\u003d 0) {\n               // Skip DEFAULT_LABEL\n               continue;\n             }\n             if (label.getNumActiveNMs() \u003e 0) {\n               hasAnyLabelLinkedToNM \u003d true;\n               break;\n             }\n           }\n         }\n         if (!hasAnyLabelLinkedToNM) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n               span(\".q\", \"Queue: root\").__().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               __(join(percent(used), \" used\")).__().\n               __(QueueBlock.class).__();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n               span(\".q\", partitionUiTag).__().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n                 __(join(percent(used), \" used\")).__().__();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n               span(\".q\", \"Queue: root\").__().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n                 __(join(percent(used), \" used\")).__().\n                 __(QueueBlock.class).__().__();\n           }\n         }\n       }\n       ul.__().__().\n       script().$type(\"text/javascript\").\n           __(\"$(\u0027#cs\u0027).hide();\").__().__().\n           __(RMAppsBlock.class);\n       html.__(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html.__(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\").__().select()\n          .$id(\"time\").option().$value(\"60\").__(\"1 min\").__().option()\n          .$value(\"300\").__(\"5 min\").__().option().$value(\"600\").__(\"10 min\").__()\n          .__().__();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more information.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\").__(script.toString()).__();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n          __(\"Application Queues\").__().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END).__(\"100% \").__().\n              span(\".q\", \"default\").__().__();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\").__(\"Legend:\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n            __(\"Capacity\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n            __(\"Used\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n            __(\"Used (over capacity)\").__().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              __(\"Max Capacity\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(ACTIVE_USER).\n            __(\"Users Requesting Resources\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_AUTO_CREATED).\n            __(\"Auto Created Queues\").__().\n          __();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        boolean hasAnyLabelLinkedToNM \u003d false;\n        if (null !\u003d nodeLabelsInfo) {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            if (label.getLabelName().length() \u003d\u003d 0) {\n              // Skip DEFAULT_LABEL\n              continue;\n            }\n            if (label.getNumActiveNMs() \u003e 0) {\n              hasAnyLabelLinkedToNM \u003d true;\n              break;\n            }\n          }\n        }\n        if (!hasAnyLabelLinkedToNM) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n              span(\".q\", \"Queue: root\").__().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              __(join(percent(used), \" used\")).__().\n              __(QueueBlock.class).__();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n              span(\".q\", partitionUiTag).__().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n                __(join(percent(used), \" used\")).__().__();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n              span(\".q\", \"Queue: root\").__().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n                __(join(percent(used), \" used\")).__().\n                __(QueueBlock.class).__().__();\n          }\n        }\n      }\n      ul.__().__().\n      script().$type(\"text/javascript\").\n          __(\"$(\u0027#cs\u0027).hide();\").__().__().\n          __(RMAppsBlock.class);\n      html.__(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/06/17 11:50 PM",
      "commitNameOld": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 34.72,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,151 +1,151 @@\n     public void render(Block html) {\n-      html._(MetricsOverviewTable.class);\n+      html.__(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n-          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n-          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n-          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n-          ._()._();\n+          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\").__().select()\n+          .$id(\"time\").option().$value(\"60\").__(\"1 min\").__().option()\n+          .$value(\"300\").__(\"5 min\").__().option().$value(\"600\").__(\"10 min\").__()\n+          .__().__();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more information.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n-        html.script().$type(\"text/javascript\")._(script.toString())._();\n+        html.script().$type(\"text/javascript\").__(script.toString()).__();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n-            _(\"Application Queues\")._().\n+          __(\"Application Queues\").__().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n-              span().$style(Q_END)._(\"100% \")._().\n-              span(\".q\", \"default\")._()._();\n+              span().$style(Q_END).__(\"100% \").__().\n+              span(\".q\", \"default\").__().__();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n-            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n+            span().$style(\"font-weight: bold\").__(\"Legend:\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n-              _(\"Capacity\")._().\n+            __(\"Capacity\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n-              _(\"Used\")._().\n+            __(\"Used\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n-              _(\"Used (over capacity)\")._().\n+            __(\"Used (over capacity)\").__().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n-              _(\"Max Capacity\")._().\n+              __(\"Max Capacity\").__().\n             span().$class(\"qlegend ui-corner-all\").$style(ACTIVE_USER).\n-            _(\"Users Requesting Resources\")._().\n-          _();\n+            __(\"Users Requesting Resources\").__().\n+          __();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n         boolean hasAnyLabelLinkedToNM \u003d false;\n         if (null !\u003d nodeLabelsInfo) {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             if (label.getLabelName().length() \u003d\u003d 0) {\n               // Skip DEFAULT_LABEL\n               continue;\n             }\n             if (label.getNumActiveNMs() \u003e 0) {\n               hasAnyLabelLinkedToNM \u003d true;\n               break;\n             }\n           }\n         }\n         if (!hasAnyLabelLinkedToNM) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n-                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n-              span(\".q\", \"Queue: root\")._().\n+                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n+              span(\".q\", \"Queue: root\").__().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n-              _(join(percent(used), \" used\"))._().\n-            _(QueueBlock.class)._();\n+              __(join(percent(used), \" used\")).__().\n+              __(QueueBlock.class).__();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n-                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n-              span(\".q\", partitionUiTag)._().\n+                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n+              span(\".q\", partitionUiTag).__().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n-              _(join(percent(used), \" used\"))._()._();\n+                __(join(percent(used), \" used\")).__().__();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n-                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n-              span(\".q\", \"Queue: root\")._().\n+                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n+              span(\".q\", \"Queue: root\").__().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n-              _(join(percent(used), \" used\"))._().\n-            _(QueueBlock.class)._()._();\n+                __(join(percent(used), \" used\")).__().\n+                __(QueueBlock.class).__().__();\n           }\n         }\n       }\n-      ul._()._().\n+      ul.__().__().\n       script().$type(\"text/javascript\").\n-          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n-      _(RMAppsBlock.class);\n-      html._(HealthBlock.class);\n+          __(\"$(\u0027#cs\u0027).hide();\").__().__().\n+          __(RMAppsBlock.class);\n+      html.__(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html.__(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\").__().select()\n          .$id(\"time\").option().$value(\"60\").__(\"1 min\").__().option()\n          .$value(\"300\").__(\"5 min\").__().option().$value(\"600\").__(\"10 min\").__()\n          .__().__();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more information.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\").__(script.toString()).__();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n          __(\"Application Queues\").__().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END).__(\"100% \").__().\n              span(\".q\", \"default\").__().__();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\").__(\"Legend:\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n            __(\"Capacity\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n            __(\"Used\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n            __(\"Used (over capacity)\").__().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              __(\"Max Capacity\").__().\n            span().$class(\"qlegend ui-corner-all\").$style(ACTIVE_USER).\n            __(\"Users Requesting Resources\").__().\n          __();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        boolean hasAnyLabelLinkedToNM \u003d false;\n        if (null !\u003d nodeLabelsInfo) {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            if (label.getLabelName().length() \u003d\u003d 0) {\n              // Skip DEFAULT_LABEL\n              continue;\n            }\n            if (label.getNumActiveNMs() \u003e 0) {\n              hasAnyLabelLinkedToNM \u003d true;\n              break;\n            }\n          }\n        }\n        if (!hasAnyLabelLinkedToNM) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n              span(\".q\", \"Queue: root\").__().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              __(join(percent(used), \" used\")).__().\n              __(QueueBlock.class).__();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n              span(\".q\", partitionUiTag).__().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n                __(join(percent(used), \" used\")).__().__();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER)).__(\".\").__().\n              span(\".q\", \"Queue: root\").__().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n                __(join(percent(used), \" used\")).__().\n                __(QueueBlock.class).__().__();\n          }\n        }\n      }\n      ul.__().__().\n      script().$type(\"text/javascript\").\n          __(\"$(\u0027#cs\u0027).hide();\").__().__().\n          __(RMAppsBlock.class);\n      html.__(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "commitDateOld": "27/12/16 1:35 PM",
      "commitNameOld": "1bbd023275db535ab80fcb60e022151e9679d468",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 177.39,
      "commitsBetweenForRepo": 943,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,149 +1,151 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more information.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n+            span().$class(\"qlegend ui-corner-all\").$style(ACTIVE_USER).\n+            _(\"Users Requesting Resources\")._().\n           _();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n         boolean hasAnyLabelLinkedToNM \u003d false;\n         if (null !\u003d nodeLabelsInfo) {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             if (label.getLabelName().length() \u003d\u003d 0) {\n               // Skip DEFAULT_LABEL\n               continue;\n             }\n             if (label.getNumActiveNMs() \u003e 0) {\n               hasAnyLabelLinkedToNM \u003d true;\n               break;\n             }\n           }\n         }\n         if (!hasAnyLabelLinkedToNM) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._()._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more information.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(ACTIVE_USER).\n            _(\"Users Requesting Resources\")._().\n          _();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        boolean hasAnyLabelLinkedToNM \u003d false;\n        if (null !\u003d nodeLabelsInfo) {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            if (label.getLabelName().length() \u003d\u003d 0) {\n              // Skip DEFAULT_LABEL\n              continue;\n            }\n            if (label.getNumActiveNMs() \u003e 0) {\n              hasAnyLabelLinkedToNM \u003d true;\n              break;\n            }\n          }\n        }\n        if (!hasAnyLabelLinkedToNM) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._()._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "1bbd023275db535ab80fcb60e022151e9679d468": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5962. Spelling errors in logging and exceptions for resource manager code (gsohn via rkanter)\n",
      "commitDate": "27/12/16 1:35 PM",
      "commitName": "1bbd023275db535ab80fcb60e022151e9679d468",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "06/04/16 4:13 PM",
      "commitNameOld": "93bacda08bc546612f9278b31f5c38107867630a",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 264.93,
      "commitsBetweenForRepo": 1911,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,149 +1,149 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n-                  + \" ResourceManager log for more informtion.\\\");\")\n+                  + \" ResourceManager log for more information.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n         boolean hasAnyLabelLinkedToNM \u003d false;\n         if (null !\u003d nodeLabelsInfo) {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             if (label.getLabelName().length() \u003d\u003d 0) {\n               // Skip DEFAULT_LABEL\n               continue;\n             }\n             if (label.getNumActiveNMs() \u003e 0) {\n               hasAnyLabelLinkedToNM \u003d true;\n               break;\n             }\n           }\n         }\n         if (!hasAnyLabelLinkedToNM) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._()._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more information.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        boolean hasAnyLabelLinkedToNM \u003d false;\n        if (null !\u003d nodeLabelsInfo) {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            if (label.getLabelName().length() \u003d\u003d 0) {\n              // Skip DEFAULT_LABEL\n              continue;\n            }\n            if (label.getNumActiveNMs() \u003e 0) {\n              hasAnyLabelLinkedToNM \u003d true;\n              break;\n            }\n          }\n        }\n        if (!hasAnyLabelLinkedToNM) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._()._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "93bacda08bc546612f9278b31f5c38107867630a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4769. Add support for CSRF header in the dump capacity scheduler logs and kill app buttons in RM web UI. Contributed by Varun Vasudev\n",
      "commitDate": "06/04/16 4:13 PM",
      "commitName": "93bacda08bc546612f9278b31f5c38107867630a",
      "commitAuthor": "Jian He",
      "commitDateOld": "31/03/16 2:35 PM",
      "commitNameOld": "12b11e2e688158404feeb3ded37eb6cccad4ea5c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 6.07,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,148 +1,149 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n+          .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n         boolean hasAnyLabelLinkedToNM \u003d false;\n         if (null !\u003d nodeLabelsInfo) {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             if (label.getLabelName().length() \u003d\u003d 0) {\n               // Skip DEFAULT_LABEL\n               continue;\n             }\n             if (label.getNumActiveNMs() \u003e 0) {\n               hasAnyLabelLinkedToNM \u003d true;\n               break;\n             }\n           }\n         }\n         if (!hasAnyLabelLinkedToNM) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._()._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(AppBlock.getCSRFHeaderString(rm.getConfig()))\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        boolean hasAnyLabelLinkedToNM \u003d false;\n        if (null !\u003d nodeLabelsInfo) {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            if (label.getLabelName().length() \u003d\u003d 0) {\n              // Skip DEFAULT_LABEL\n              continue;\n            }\n            if (label.getNumActiveNMs() \u003e 0) {\n              hasAnyLabelLinkedToNM \u003d true;\n              break;\n            }\n          }\n        }\n        if (!hasAnyLabelLinkedToNM) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._()._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "12b11e2e688158404feeb3ded37eb6cccad4ea5c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4634. Scheduler UI/Metrics need to consider cases like non-queue label mappings. (Sunil G via wangda)\n",
      "commitDate": "31/03/16 2:35 PM",
      "commitName": "12b11e2e688158404feeb3ded37eb6cccad4ea5c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "17/01/16 7:11 PM",
      "commitNameOld": "b08ecf5c7589b055e93b2907413213f36097724d",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 73.77,
      "commitsBetweenForRepo": 485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,136 +1,148 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n-        if (null \u003d\u003d nodeLabelsInfo || (nodeLabelsInfo.size() \u003d\u003d 1\n-            \u0026\u0026 nodeLabelsInfo.get(0).getLabelName().isEmpty())) {\n+        boolean hasAnyLabelLinkedToNM \u003d false;\n+        if (null !\u003d nodeLabelsInfo) {\n+          for (RMNodeLabel label : nodeLabelsInfo) {\n+            if (label.getLabelName().length() \u003d\u003d 0) {\n+              // Skip DEFAULT_LABEL\n+              continue;\n+            }\n+            if (label.getNumActiveNMs() \u003e 0) {\n+              hasAnyLabelLinkedToNM \u003d true;\n+              break;\n+            }\n+          }\n+        }\n+        if (!hasAnyLabelLinkedToNM) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._()._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        boolean hasAnyLabelLinkedToNM \u003d false;\n        if (null !\u003d nodeLabelsInfo) {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            if (label.getLabelName().length() \u003d\u003d 0) {\n              // Skip DEFAULT_LABEL\n              continue;\n            }\n            if (label.getNumActiveNMs() \u003e 0) {\n              hasAnyLabelLinkedToNM \u003d true;\n              break;\n            }\n          }\n        }\n        if (!hasAnyLabelLinkedToNM) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._()._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "8c180a13c82ab9d60f595e6942e35d51024dab53": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4109. Exception on RM scheduler page loading with labels. (Mohammad Shahid Khan via rohithsharmaks)\n",
      "commitDate": "22/12/15 7:42 PM",
      "commitName": "8c180a13c82ab9d60f595e6942e35d51024dab53",
      "commitAuthor": "rohithsharmaks",
      "commitDateOld": "20/11/15 3:12 PM",
      "commitNameOld": "060cdcbe5db56383e74e282ac61eedff8248c11b",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 32.19,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,136 +1,136 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n \n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n \n         if (null \u003d\u003d nodeLabelsInfo || (nodeLabelsInfo.size() \u003d\u003d 1\n             \u0026\u0026 nodeLabelsInfo.get(0).getLabelName().isEmpty())) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n             String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                 .getPartitionQueueCapacitiesInfo(csqinfo.label);\n             used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n-              _(join(percent(used), \" used\"))._();\n+              _(join(percent(used), \" used\"))._()._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        if (null \u003d\u003d nodeLabelsInfo || (nodeLabelsInfo.size() \u003d\u003d 1\n            \u0026\u0026 nodeLabelsInfo.get(0).getLabelName().isEmpty())) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._()._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "4337b263aa23464a01c316336db2319e2858a2b3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4162. CapacityScheduler: Add resource usage by partition and queue capacity by partition to REST API. (Naganarasimha G R via wangda)\n",
      "commitDate": "16/10/15 3:06 PM",
      "commitName": "4337b263aa23464a01c316336db2319e2858a2b3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/09/15 11:55 PM",
      "commitNameOld": "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 29.63,
      "commitsBetweenForRepo": 232,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,141 +1,136 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n-        if (null \u003d\u003d nodeLabelsInfo\n-            || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n-                .getLabelName().isEmpty())) {\n-          CSQueue root \u003d cs.getRootQueue();\n-          CapacitySchedulerInfo sinfo \u003d\n-              new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n-                  RMNodeLabelsManager.NO_LABEL));\n-          csqinfo.csinfo \u003d sinfo;\n-          csqinfo.qinfo \u003d null;\n \n+        CSQueue root \u003d cs.getRootQueue();\n+        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n+        csqinfo.csinfo \u003d sinfo;\n+\n+        if (null \u003d\u003d nodeLabelsInfo || (nodeLabelsInfo.size() \u003d\u003d 1\n+            \u0026\u0026 nodeLabelsInfo.get(0).getLabelName().isEmpty())) {\n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n-            CSQueue root \u003d cs.getRootQueue();\n-            CapacitySchedulerInfo sinfo \u003d\n-                new CapacitySchedulerInfo(root, cs, label);\n-            csqinfo.csinfo \u003d sinfo;\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n-            String nodeLabel \u003d csqinfo.label.length() \u003d\u003d 0\n+            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n+            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                 ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n-            QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n-            used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n+            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n+                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n+            used \u003d capacities.getUsedCapacity() / 100;\n             String partitionUiTag \u003d\n-                \"Partition: \" + nodeLabel + \" \" + label.getResource();\n+                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n\n        if (null \u003d\u003d nodeLabelsInfo || (nodeLabelsInfo.size() \u003d\u003d 1\n            \u0026\u0026 nodeLabelsInfo.get(0).getLabelName().isEmpty())) {\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            csqinfo.isExclusiveNodeLabel \u003d label.getIsExclusive();\n            String nodeLabelDisplay \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            PartitionQueueCapacitiesInfo capacities \u003d sinfo.getCapacities()\n                .getPartitionQueueCapacitiesInfo(csqinfo.label);\n            used \u003d capacities.getUsedCapacity() / 100;\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabelDisplay + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "ae5308fe1d08479da0f3929cc6a57816411e9121": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
      "commitDate": "15/09/15 11:40 AM",
      "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/07/15 5:12 PM",
      "commitNameOld": "3572ebd738aa5fa8b0906d75fb12cc6cbb991573",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 49.77,
      "commitsBetweenForRepo": 268,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,142 +1,141 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n         if (null \u003d\u003d nodeLabelsInfo\n             || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n                 .getLabelName().isEmpty())) {\n           CSQueue root \u003d cs.getRootQueue();\n           CapacitySchedulerInfo sinfo \u003d\n               new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n                   RMNodeLabelsManager.NO_LABEL));\n           csqinfo.csinfo \u003d sinfo;\n           csqinfo.qinfo \u003d null;\n \n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             CSQueue root \u003d cs.getRootQueue();\n             CapacitySchedulerInfo sinfo \u003d\n                 new CapacitySchedulerInfo(root, cs, label);\n             csqinfo.csinfo \u003d sinfo;\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n-            String nodeLabel \u003d\n-                csqinfo.label.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\"\n-                    : csqinfo.label;\n+            String nodeLabel \u003d csqinfo.label.length() \u003d\u003d 0\n+                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n             QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n             used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabel + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n        if (null \u003d\u003d nodeLabelsInfo\n            || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n                .getLabelName().isEmpty())) {\n          CSQueue root \u003d cs.getRootQueue();\n          CapacitySchedulerInfo sinfo \u003d\n              new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n                  RMNodeLabelsManager.NO_LABEL));\n          csqinfo.csinfo \u003d sinfo;\n          csqinfo.qinfo \u003d null;\n\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            CSQueue root \u003d cs.getRootQueue();\n            CapacitySchedulerInfo sinfo \u003d\n                new CapacitySchedulerInfo(root, cs, label);\n            csqinfo.csinfo \u003d sinfo;\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            String nodeLabel \u003d csqinfo.label.length() \u003d\u003d 0\n                ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : csqinfo.label;\n            QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n            used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabel + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "446d51591e6e99cc60a85c4b9fbac379a8caa49d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3707. RM Web UI queue filter doesn\u0027t work. Contributed by Wangda Tan\n",
      "commitDate": "22/05/15 3:58 PM",
      "commitName": "446d51591e6e99cc60a85c4b9fbac379a8caa49d",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/05/15 5:00 PM",
      "commitNameOld": "0e85044e26da698c45185585310ae0e99448cd80",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 8.96,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,142 +1,142 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _();\n \n         float used \u003d 0;\n         if (null \u003d\u003d nodeLabelsInfo\n             || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n                 .getLabelName().isEmpty())) {\n           CSQueue root \u003d cs.getRootQueue();\n           CapacitySchedulerInfo sinfo \u003d\n               new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n                   RMNodeLabelsManager.NO_LABEL));\n           csqinfo.csinfo \u003d sinfo;\n           csqinfo.qinfo \u003d null;\n \n           used \u003d sinfo.getUsedCapacity() / 100;\n           //label is not enabled in the cluster or there\u0027s only \"default\" label,\n           ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n-              span(\".q\", \"root\")._().\n+              span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n         } else {\n           for (RMNodeLabel label : nodeLabelsInfo) {\n             CSQueue root \u003d cs.getRootQueue();\n             CapacitySchedulerInfo sinfo \u003d\n                 new CapacitySchedulerInfo(root, cs, label);\n             csqinfo.csinfo \u003d sinfo;\n             csqinfo.qinfo \u003d null;\n             csqinfo.label \u003d label.getLabelName();\n             String nodeLabel \u003d\n                 csqinfo.label.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\"\n                     : csqinfo.label;\n             QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n             used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n             String partitionUiTag \u003d\n                 \"Partition: \" + nodeLabel + \" \" + label.getResource();\n             ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", partitionUiTag)._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._();\n \n             //for the queue hierarchy under label\n             UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n             underLabel.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"Queue: root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._()._();\n           }\n         }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n        if (null \u003d\u003d nodeLabelsInfo\n            || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n                .getLabelName().isEmpty())) {\n          CSQueue root \u003d cs.getRootQueue();\n          CapacitySchedulerInfo sinfo \u003d\n              new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n                  RMNodeLabelsManager.NO_LABEL));\n          csqinfo.csinfo \u003d sinfo;\n          csqinfo.qinfo \u003d null;\n\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            CSQueue root \u003d cs.getRootQueue();\n            CapacitySchedulerInfo sinfo \u003d\n                new CapacitySchedulerInfo(root, cs, label);\n            csqinfo.csinfo \u003d sinfo;\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            String nodeLabel \u003d\n                csqinfo.label.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\"\n                    : csqinfo.label;\n            QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n            used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabel + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "0e85044e26da698c45185585310ae0e99448cd80": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3362. Add node label usage in RM CapacityScheduler web UI. (Naganarasimha G R via wangda)\n",
      "commitDate": "13/05/15 5:00 PM",
      "commitName": "0e85044e26da698c45185585310ae0e99448cd80",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "05/05/15 10:40 AM",
      "commitNameOld": "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 8.26,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,99 +1,142 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n \n       UserGroupInformation callerUGI \u003d this.getCallerUGI();\n       boolean isAdmin \u003d false;\n       ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n       if (aclsManager.areACLsEnabled()) {\n         if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n           isAdmin \u003d true;\n         }\n       } else {\n         isAdmin \u003d true;\n       }\n \n       // only show button to dump CapacityScheduler debug logs to admins\n       if (isAdmin) {\n         html.div()\n           .button()\n           .$style(\n               \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                   + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n           .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n           .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n           .append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n               + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\n               \" alert(\\\"Scheduler log generation failed. Please check the\"\n                   + \" ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n-        CSQueue root \u003d cs.getRootQueue();\n-        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n-        csqinfo.csinfo \u003d sinfo;\n-        csqinfo.qinfo \u003d null;\n-\n-        float used \u003d sinfo.getUsedCapacity() / 100;\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n-          _().\n-          li().\n+          _();\n+\n+        float used \u003d 0;\n+        if (null \u003d\u003d nodeLabelsInfo\n+            || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n+                .getLabelName().isEmpty())) {\n+          CSQueue root \u003d cs.getRootQueue();\n+          CapacitySchedulerInfo sinfo \u003d\n+              new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n+                  RMNodeLabelsManager.NO_LABEL));\n+          csqinfo.csinfo \u003d sinfo;\n+          csqinfo.qinfo \u003d null;\n+\n+          used \u003d sinfo.getUsedCapacity() / 100;\n+          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n+          ul.li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n+        } else {\n+          for (RMNodeLabel label : nodeLabelsInfo) {\n+            CSQueue root \u003d cs.getRootQueue();\n+            CapacitySchedulerInfo sinfo \u003d\n+                new CapacitySchedulerInfo(root, cs, label);\n+            csqinfo.csinfo \u003d sinfo;\n+            csqinfo.qinfo \u003d null;\n+            csqinfo.label \u003d label.getLabelName();\n+            String nodeLabel \u003d\n+                csqinfo.label.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\"\n+                    : csqinfo.label;\n+            QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n+            used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n+            String partitionUiTag \u003d\n+                \"Partition: \" + nodeLabel + \" \" + label.getResource();\n+            ul.li().\n+            a(_Q).$style(width(Q_MAX_WIDTH)).\n+              span().$style(join(width(used), \";left:0%;\",\n+                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n+              span(\".q\", partitionUiTag)._().\n+            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n+              _(join(percent(used), \" used\"))._();\n+\n+            //for the queue hierarchy under label\n+            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n+            underLabel.li().\n+            a(_Q).$style(width(Q_MAX_WIDTH)).\n+              span().$style(join(width(used), \";left:0%;\",\n+                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n+              span(\".q\", \"Queue: root\")._().\n+            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n+              _(join(percent(used), \" used\"))._().\n+            _(QueueBlock.class)._()._();\n+          }\n+        }\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _();\n\n        float used \u003d 0;\n        if (null \u003d\u003d nodeLabelsInfo\n            || (nodeLabelsInfo.size() \u003d\u003d 1 \u0026\u0026 nodeLabelsInfo.get(0)\n                .getLabelName().isEmpty())) {\n          CSQueue root \u003d cs.getRootQueue();\n          CapacitySchedulerInfo sinfo \u003d\n              new CapacitySchedulerInfo(root, cs, new RMNodeLabel(\n                  RMNodeLabelsManager.NO_LABEL));\n          csqinfo.csinfo \u003d sinfo;\n          csqinfo.qinfo \u003d null;\n\n          used \u003d sinfo.getUsedCapacity() / 100;\n          //label is not enabled in the cluster or there\u0027s only \"default\" label,\n          ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n        } else {\n          for (RMNodeLabel label : nodeLabelsInfo) {\n            CSQueue root \u003d cs.getRootQueue();\n            CapacitySchedulerInfo sinfo \u003d\n                new CapacitySchedulerInfo(root, cs, label);\n            csqinfo.csinfo \u003d sinfo;\n            csqinfo.qinfo \u003d null;\n            csqinfo.label \u003d label.getLabelName();\n            String nodeLabel \u003d\n                csqinfo.label.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\"\n                    : csqinfo.label;\n            QueueCapacities queueCapacities \u003d root.getQueueCapacities();\n            used \u003d queueCapacities.getUsedCapacity(label.getLabelName());\n            String partitionUiTag \u003d\n                \"Partition: \" + nodeLabel + \" \" + label.getResource();\n            ul.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", partitionUiTag)._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._();\n\n            //for the queue hierarchy under label\n            UL\u003cHamlet\u003e underLabel \u003d html.ul(\"#pq\");\n            underLabel.li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"Queue: root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._()._();\n          }\n        }\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3517. RM web ui for dumping scheduler logs should be for admins only (Varun Vasudev via tgraves)\n",
      "commitDate": "29/04/15 2:25 PM",
      "commitName": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
      "commitAuthor": "tgraves",
      "commitDateOld": "20/04/15 5:12 PM",
      "commitNameOld": "44872b76fcc0ddfbc7b0a4e54eef50fe8708e0f5",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 8.88,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,82 +1,99 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n-      // Dump CapacityScheduler debug logs\n-      html.div()\n+\n+      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n+      boolean isAdmin \u003d false;\n+      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n+      if (aclsManager.areACLsEnabled()) {\n+        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n+          isAdmin \u003d true;\n+        }\n+      } else {\n+        isAdmin \u003d true;\n+      }\n+\n+      // only show button to dump CapacityScheduler debug logs to admins\n+      if (isAdmin) {\n+        html.div()\n           .button()\n-          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._()\n-          .select().$id(\"time\")\n-            .option().$value(\"60\")._(\"1 min\")._()\n-            .option().$value(\"300\")._(\"5 min\")._()\n-            .option().$value(\"600\")._(\"10 min\")._()\n+          .$style(\n+              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n+                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n+          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n+          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n+          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n-      StringBuilder script \u003d new StringBuilder();\n-      script.append(\"function confirmAction() {\")\n-          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate scheduler logs?\\\");\")\n+        StringBuilder script \u003d new StringBuilder();\n+        script\n+          .append(\"function confirmAction() {\")\n+          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n+              + \" scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n-          .append(\" alert(\\\"Scheduler log generation failed. Please check the ResourceManager log for more informtion.\\\");\")\n-          .append(\" console.log(data);\")\n-          .append(\" });\")\n-          .append(\" }\")\n+          .append(\n+              \" alert(\\\"Scheduler log generation failed. Please check the\"\n+                  + \" ResourceManager log for more informtion.\\\");\")\n+          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n           .append(\"}\");\n \n-      html.script().$type(\"text/javascript\")._(script.toString())._();\n+        html.script().$type(\"text/javascript\")._(script.toString())._();\n+      }\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n         csqinfo.qinfo \u003d null;\n \n         float used \u003d sinfo.getUsedCapacity() / 100;\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _().\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n       html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n\n      UserGroupInformation callerUGI \u003d this.getCallerUGI();\n      boolean isAdmin \u003d false;\n      ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n      if (aclsManager.areACLsEnabled()) {\n        if (callerUGI !\u003d null \u0026\u0026 aclsManager.isAdmin(callerUGI)) {\n          isAdmin \u003d true;\n        }\n      } else {\n        isAdmin \u003d true;\n      }\n\n      // only show button to dump CapacityScheduler debug logs to admins\n      if (isAdmin) {\n        html.div()\n          .button()\n          .$style(\n              \"border-style: solid; border-color: #000000; border-width: 1px;\"\n                  + \" cursor: hand; cursor: pointer; border-radius: 4px\")\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._().select()\n          .$id(\"time\").option().$value(\"60\")._(\"1 min\")._().option()\n          .$value(\"300\")._(\"5 min\")._().option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n          .append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate\"\n              + \" scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\n              \" alert(\\\"Scheduler log generation failed. Please check the\"\n                  + \" ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\").append(\" });\").append(\" }\")\n          .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3293. Track and display capacity scheduler health metrics in web\nUI. Contributed by Varun Vasudev\n",
      "commitDate": "09/04/15 11:38 PM",
      "commitName": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthor": "Xuan",
      "commitDateOld": "07/04/15 9:52 AM",
      "commitNameOld": "d27e9241e8676a0edb2d35453cac5f9495fcd605",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 2.57,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,81 +1,82 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n       // Dump CapacityScheduler debug logs\n       html.div()\n           .button()\n           .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._()\n           .select().$id(\"time\")\n             .option().$value(\"60\")._(\"1 min\")._()\n             .option().$value(\"300\")._(\"5 min\")._()\n             .option().$value(\"600\")._(\"10 min\")._()\n           ._()._();\n \n       StringBuilder script \u003d new StringBuilder();\n       script.append(\"function confirmAction() {\")\n           .append(\" b \u003d confirm(\\\"Are you sure you wish to generate scheduler logs?\\\");\")\n           .append(\" if (b \u003d\u003d true) {\")\n           .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n           .append(\" $.ajax({\")\n           .append(\" type: \u0027POST\u0027,\")\n           .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n           .append(\" contentType: \u0027text/plain\u0027,\")\n           .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n           .append(\" dataType: \u0027text\u0027\")\n           .append(\" }).done(function(data){\")\n           .append(\" setTimeout(function(){\")\n           .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n           .append(\" }, 1000);\")\n           .append(\" }).fail(function(data){\")\n           .append(\" alert(\\\"Scheduler log generation failed. Please check the ResourceManager log for more informtion.\\\");\")\n           .append(\" console.log(data);\")\n           .append(\" });\")\n           .append(\" }\")\n           .append(\"}\");\n \n       html.script().$type(\"text/javascript\")._(script.toString())._();\n \n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n-        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n+        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n         csqinfo.csinfo \u003d sinfo;\n         csqinfo.qinfo \u003d null;\n \n         float used \u003d sinfo.getUsedCapacity() / 100;\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _().\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n+      html._(HealthBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      // Dump CapacityScheduler debug logs\n      html.div()\n          .button()\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._()\n          .select().$id(\"time\")\n            .option().$value(\"60\")._(\"1 min\")._()\n            .option().$value(\"300\")._(\"5 min\")._()\n            .option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n      StringBuilder script \u003d new StringBuilder();\n      script.append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\" alert(\\\"Scheduler log generation failed. Please check the ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\")\n          .append(\" });\")\n          .append(\" }\")\n          .append(\"}\");\n\n      html.script().$type(\"text/javascript\")._(script.toString())._();\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root, cs);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n      html._(HealthBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "d27e9241e8676a0edb2d35453cac5f9495fcd605": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3294. Allow dumping of Capacity Scheduler debug logs via web UI for\na fixed time period. Contributed by Varun Vasudev\n",
      "commitDate": "07/04/15 9:52 AM",
      "commitName": "d27e9241e8676a0edb2d35453cac5f9495fcd605",
      "commitAuthor": "Xuan",
      "commitDateOld": "01/04/15 4:19 AM",
      "commitNameOld": "4728bdfa15809db4b8b235faa286c65de4a48cf6",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 6.23,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,81 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n+      // Dump CapacityScheduler debug logs\n+      html.div()\n+          .button()\n+          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._()\n+          .select().$id(\"time\")\n+            .option().$value(\"60\")._(\"1 min\")._()\n+            .option().$value(\"300\")._(\"5 min\")._()\n+            .option().$value(\"600\")._(\"10 min\")._()\n+          ._()._();\n+\n+      StringBuilder script \u003d new StringBuilder();\n+      script.append(\"function confirmAction() {\")\n+          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate scheduler logs?\\\");\")\n+          .append(\" if (b \u003d\u003d true) {\")\n+          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n+          .append(\" $.ajax({\")\n+          .append(\" type: \u0027POST\u0027,\")\n+          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n+          .append(\" contentType: \u0027text/plain\u0027,\")\n+          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n+          .append(\" dataType: \u0027text\u0027\")\n+          .append(\" }).done(function(data){\")\n+          .append(\" setTimeout(function(){\")\n+          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n+          .append(\" }, 1000);\")\n+          .append(\" }).fail(function(data){\")\n+          .append(\" alert(\\\"Scheduler log generation failed. Please check the ResourceManager log for more informtion.\\\");\")\n+          .append(\" console.log(data);\")\n+          .append(\" });\")\n+          .append(\" }\")\n+          .append(\"}\");\n+\n+      html.script().$type(\"text/javascript\")._(script.toString())._();\n+\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n         csqinfo.csinfo \u003d sinfo;\n         csqinfo.qinfo \u003d null;\n \n         float used \u003d sinfo.getUsedCapacity() / 100;\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _().\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(RMAppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      // Dump CapacityScheduler debug logs\n      html.div()\n          .button()\n          .$onclick(\"confirmAction()\").b(\"Dump scheduler logs\")._()\n          .select().$id(\"time\")\n            .option().$value(\"60\")._(\"1 min\")._()\n            .option().$value(\"300\")._(\"5 min\")._()\n            .option().$value(\"600\")._(\"10 min\")._()\n          ._()._();\n\n      StringBuilder script \u003d new StringBuilder();\n      script.append(\"function confirmAction() {\")\n          .append(\" b \u003d confirm(\\\"Are you sure you wish to generate scheduler logs?\\\");\")\n          .append(\" if (b \u003d\u003d true) {\")\n          .append(\" var timePeriod \u003d $(\\\"#time\\\").val();\")\n          .append(\" $.ajax({\")\n          .append(\" type: \u0027POST\u0027,\")\n          .append(\" url: \u0027/ws/v1/cluster/scheduler/logs\u0027,\")\n          .append(\" contentType: \u0027text/plain\u0027,\")\n          .append(\" data: \u0027time\u003d\u0027 + timePeriod,\")\n          .append(\" dataType: \u0027text\u0027\")\n          .append(\" }).done(function(data){\")\n          .append(\" setTimeout(function(){\")\n          .append(\" alert(\\\"Scheduler log is being generated.\\\");\")\n          .append(\" }, 1000);\")\n          .append(\" }).fail(function(data){\")\n          .append(\" alert(\\\"Scheduler log generation failed. Please check the ResourceManager log for more informtion.\\\");\")\n          .append(\" console.log(data);\")\n          .append(\" });\")\n          .append(\" }\")\n          .append(\"}\");\n\n      html.script().$type(\"text/javascript\")._(script.toString())._();\n\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3248. Display count of nodes blacklisted by apps in the web UI.\nContributed by Varun Vasudev\n",
      "commitDate": "01/04/15 4:19 AM",
      "commitName": "4728bdfa15809db4b8b235faa286c65de4a48cf6",
      "commitAuthor": "Xuan",
      "commitDateOld": "17/03/15 9:30 PM",
      "commitNameOld": "658097d6da1b1aac8e01db459f0c3b456e99652f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 14.28,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n         csqinfo.csinfo \u003d sinfo;\n         csqinfo.qinfo \u003d null;\n \n         float used \u003d sinfo.getUsedCapacity() / 100;\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _().\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n-      _(AppsBlock.class);\n+      _(RMAppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(RMAppsBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java"
      }
    },
    "ffdf980b2056b2a1b31ccb19746f23c31f7d08ef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3816 capacity scheduler web ui bar graphs for used capacity wrong (tgraves via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294808 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/12 12:06 PM",
      "commitName": "ffdf980b2056b2a1b31ccb19746f23c31f7d08ef",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "11/01/12 4:15 PM",
      "commitNameOld": "0086014703db5f1299143103e92093c4e8cf92d7",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 47.83,
      "commitsBetweenForRepo": 298,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,47 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n         csqinfo.csinfo \u003d sinfo;\n         csqinfo.qinfo \u003d null;\n \n         float used \u003d sinfo.getUsedCapacity() / 100;\n         ul.\n           li().$style(\"margin-bottom: 1em\").\n             span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n               _(\"Capacity\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n               _(\"Used\")._().\n             span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n               _(\"Used (over capacity)\")._().\n             span().$class(\"qlegend ui-corner-all ui-state-default\").\n               _(\"Max Capacity\")._().\n           _().\n           li().\n             a(_Q).$style(width(Q_MAX_WIDTH)).\n-              $title(join(\"used:\", percent(used))).\n               span().$style(join(width(used), \";left:0%;\",\n                   used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n             span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n               _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(AppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "0086014703db5f1299143103e92093c4e8cf92d7": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3625. CapacityScheduler web-ui display of queue\u0027s used capacity is broken. (Jason Lowe via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1230336 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/01/12 4:15 PM",
      "commitName": "0086014703db5f1299143103e92093c4e8cf92d7",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "05/01/12 11:50 AM",
      "commitNameOld": "4404f20671048ca4066a74094cb0961d664c5330",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,48 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n-            a(_Q).$style(width(WIDTH_F)).\n+            a(_Q).$style(width(Q_MAX_WIDTH)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n         csqinfo.csinfo \u003d sinfo;\n         csqinfo.qinfo \u003d null;\n \n         float used \u003d sinfo.getUsedCapacity() / 100;\n-        float set \u003d sinfo.getCapacity() / 100;\n-        float delta \u003d Math.abs(set - used) + 0.001f;\n         ul.\n+          li().$style(\"margin-bottom: 1em\").\n+            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n+            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n+              _(\"Capacity\")._().\n+            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n+              _(\"Used\")._().\n+            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n+              _(\"Used (over capacity)\")._().\n+            span().$class(\"qlegend ui-corner-all ui-state-default\").\n+              _(\"Max Capacity\")._().\n+          _().\n           li().\n-            a(_Q).$style(width(WIDTH_F)).\n+            a(_Q).$style(width(Q_MAX_WIDTH)).\n               $title(join(\"used:\", percent(used))).\n-              span().$style(Q_END)._(\"100%\")._().\n-              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n-                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n+              span().$style(join(width(used), \";left:0%;\",\n+                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n               span(\".q\", \"root\")._().\n+            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n+              _(join(percent(used), \" used\"))._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(AppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        ul.\n          li().$style(\"margin-bottom: 1em\").\n            span().$style(\"font-weight: bold\")._(\"Legend:\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_GIVEN).\n              _(\"Capacity\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_UNDER).\n              _(\"Used\")._().\n            span().$class(\"qlegend ui-corner-all\").$style(Q_OVER).\n              _(\"Used (over capacity)\")._().\n            span().$class(\"qlegend ui-corner-all ui-state-default\").\n              _(\"Max Capacity\")._().\n          _().\n          li().\n            a(_Q).$style(width(Q_MAX_WIDTH)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(join(width(used), \";left:0%;\",\n                  used \u003e 1 ? Q_OVER : Q_UNDER))._(\".\")._().\n              span(\".q\", \"root\")._().\n            span().$class(\"qstats\").$style(left(Q_STATS_POS)).\n              _(join(percent(used), \" used\"))._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "4404f20671048ca4066a74094cb0961d664c5330": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3326. Added detailed information about queue\u0027s to the CapacityScheduler web-ui. Contributed by Jason Lowe. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227788 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 11:50 AM",
      "commitName": "4404f20671048ca4066a74094cb0961d664c5330",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 22.86,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n-        parent.queue \u003d root;\n-        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(parent.queue);\n+        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n+        csqinfo.csinfo \u003d sinfo;\n+        csqinfo.qinfo \u003d null;\n+\n         float used \u003d sinfo.getUsedCapacity() / 100;\n         float set \u003d sinfo.getCapacity() / 100;\n         float delta \u003d Math.abs(set - used) + 0.001f;\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               $title(join(\"used:\", percent(used))).\n               span().$style(Q_END)._(\"100%\")._().\n               span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                 \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n               span(\".q\", \"root\")._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(AppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(root);\n        csqinfo.csinfo \u003d sinfo;\n        csqinfo.qinfo \u003d null;\n\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        float set \u003d sinfo.getCapacity() / 100;\n        float delta \u003d Math.abs(set - used) + 0.001f;\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(Q_END)._(\"100%\")._().\n              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n              span(\".q\", \"root\")._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "05/10/11 7:01 AM",
      "commitNameOld": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 69.38,
      "commitsBetweenForRepo": 483,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,36 @@\n     public void render(Block html) {\n       html._(MetricsOverviewTable.class);\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         parent.queue \u003d root;\n-        float used \u003d root.getUsedCapacity();\n-        float set \u003d root.getCapacity();\n+        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(parent.queue);\n+        float used \u003d sinfo.getUsedCapacity() / 100;\n+        float set \u003d sinfo.getCapacity() / 100;\n         float delta \u003d Math.abs(set - used) + 0.001f;\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               $title(join(\"used:\", percent(used))).\n               span().$style(Q_END)._(\"100%\")._().\n               span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                 \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n               span(\".q\", \"root\")._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(AppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        parent.queue \u003d root;\n        CapacitySchedulerInfo sinfo \u003d new CapacitySchedulerInfo(parent.queue);\n        float used \u003d sinfo.getUsedCapacity() / 100;\n        float set \u003d sinfo.getCapacity() / 100;\n        float delta \u003d Math.abs(set - used) + 0.001f;\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(Q_END)._(\"100%\")._().\n              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n              span(\".q\", \"root\")._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "9a4e890f4aadc921fa468fd1292d215704429b61": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 7:01 AM",
      "commitName": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 11:26 AM",
      "commitNameOld": "1f46b991da9b91585608a0babd3eda39485dce09",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 26.82,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n     public void render(Block html) {\n+      html._(MetricsOverviewTable.class);\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n         CSQueue root \u003d cs.getRootQueue();\n         parent.queue \u003d root;\n         float used \u003d root.getUsedCapacity();\n         float set \u003d root.getCapacity();\n         float delta \u003d Math.abs(set - used) + 0.001f;\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               $title(join(\"used:\", percent(used))).\n               span().$style(Q_END)._(\"100%\")._().\n               span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                 \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n               span(\".q\", \"root\")._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(AppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      html._(MetricsOverviewTable.class);\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        parent.queue \u003d root;\n        float used \u003d root.getUsedCapacity();\n        float set \u003d root.getCapacity();\n        float delta \u003d Math.abs(set - used) + 0.001f;\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(Q_END)._(\"100%\")._().\n              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n              span(\".q\", \"root\")._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "1f46b991da9b91585608a0babd3eda39485dce09": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166838 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 11:26 AM",
      "commitName": "1f46b991da9b91585608a0babd3eda39485dce09",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 14.76,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void render(Block html) {\n       UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n         div(\"#cs-wrapper.ui-widget\").\n           div(\".ui-widget-header.ui-corner-top\").\n             _(\"Application Queues\")._().\n           div(\"#cs.ui-widget-content.ui-corner-bottom\").\n             ul();\n       if (cs \u003d\u003d null) {\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               span().$style(Q_END)._(\"100% \")._().\n               span(\".q\", \"default\")._()._();\n       } else {\n-        Queue root \u003d cs.getRootQueue();\n+        CSQueue root \u003d cs.getRootQueue();\n         parent.queue \u003d root;\n         float used \u003d root.getUsedCapacity();\n         float set \u003d root.getCapacity();\n         float delta \u003d Math.abs(set - used) + 0.001f;\n         ul.\n           li().\n             a(_Q).$style(width(WIDTH_F)).\n               $title(join(\"used:\", percent(used))).\n               span().$style(Q_END)._(\"100%\")._().\n               span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                 \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n               span(\".q\", \"root\")._().\n             _(QueueBlock.class)._();\n       }\n       ul._()._().\n       script().$type(\"text/javascript\").\n           _(\"$(\u0027#cs\u0027).hide();\")._()._().\n       _(AppsBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        CSQueue root \u003d cs.getRootQueue();\n        parent.queue \u003d root;\n        float used \u003d root.getUsedCapacity();\n        float set \u003d root.getCapacity();\n        float delta \u003d Math.abs(set - used) + 0.001f;\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(Q_END)._(\"100%\")._().\n              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n              span(\".q\", \"root\")._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void render(Block html) {\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        Queue root \u003d cs.getRootQueue();\n        parent.queue \u003d root;\n        float used \u003d root.getUsedCapacity();\n        float set \u003d root.getCapacity();\n        float delta \u003d Math.abs(set - used) + 0.001f;\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(Q_END)._(\"100%\")._().\n              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n              span(\".q\", \"root\")._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,34 @@\n+    public void render(Block html) {\n+      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n+        div(\"#cs-wrapper.ui-widget\").\n+          div(\".ui-widget-header.ui-corner-top\").\n+            _(\"Application Queues\")._().\n+          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n+            ul();\n+      if (cs \u003d\u003d null) {\n+        ul.\n+          li().\n+            a(_Q).$style(width(WIDTH_F)).\n+              span().$style(Q_END)._(\"100% \")._().\n+              span(\".q\", \"default\")._()._();\n+      } else {\n+        Queue root \u003d cs.getRootQueue();\n+        parent.queue \u003d root;\n+        float used \u003d root.getUsedCapacity();\n+        float set \u003d root.getCapacity();\n+        float delta \u003d Math.abs(set - used) + 0.001f;\n+        ul.\n+          li().\n+            a(_Q).$style(width(WIDTH_F)).\n+              $title(join(\"used:\", percent(used))).\n+              span().$style(Q_END)._(\"100%\")._().\n+              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n+                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n+              span(\".q\", \"root\")._().\n+            _(QueueBlock.class)._();\n+      }\n+      ul._()._().\n+      script().$type(\"text/javascript\").\n+          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n+      _(AppsBlock.class);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void render(Block html) {\n      UL\u003cDIV\u003cDIV\u003cHamlet\u003e\u003e\u003e ul \u003d html.\n        div(\"#cs-wrapper.ui-widget\").\n          div(\".ui-widget-header.ui-corner-top\").\n            _(\"Application Queues\")._().\n          div(\"#cs.ui-widget-content.ui-corner-bottom\").\n            ul();\n      if (cs \u003d\u003d null) {\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              span().$style(Q_END)._(\"100% \")._().\n              span(\".q\", \"default\")._()._();\n      } else {\n        Queue root \u003d cs.getRootQueue();\n        parent.queue \u003d root;\n        float used \u003d root.getUsedCapacity();\n        float set \u003d root.getCapacity();\n        float delta \u003d Math.abs(set - used) + 0.001f;\n        ul.\n          li().\n            a(_Q).$style(width(WIDTH_F)).\n              $title(join(\"used:\", percent(used))).\n              span().$style(Q_END)._(\"100%\")._().\n              span().$style(join(width(delta), \u0027;\u0027, used \u003e set ? OVER : UNDER,\n                \u0027;\u0027, used \u003e set ? left(set) : left(used)))._(\".\")._().\n              span(\".q\", \"root\")._().\n            _(QueueBlock.class)._();\n      }\n      ul._()._().\n      script().$type(\"text/javascript\").\n          _(\"$(\u0027#cs\u0027).hide();\")._()._().\n      _(AppsBlock.class);\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java"
    }
  }
}