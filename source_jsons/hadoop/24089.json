{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalClientProtocolProvider.java",
  "functionName": "create",
  "functionId": "create___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
  "functionStartLine": 34,
  "functionEndLine": 43,
  "numCommitsSeen": 11,
  "timeTaken": 4762,
  "changeHistory": [
    "375584ae0fa49b04e159f41783760208394620df",
    "ab330b33bb30279888ec20e77533f128a15568e3",
    "7e615c7f7519de412588734aacde2d5445bb8135",
    "512fd2756a994a7be3a9d5b5039aa4d45ad50906",
    "cfb6a9883d2bf02c99f258e9f19ffcd83805d077",
    "42e93829e5310f3cbd905384cd0529f8fffa887f",
    "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "fd5a762df0ec42a1ffae2990f26864c70ceefd66",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "375584ae0fa49b04e159f41783760208394620df": "Ybodychange",
    "ab330b33bb30279888ec20e77533f128a15568e3": "Ybodychange",
    "7e615c7f7519de412588734aacde2d5445bb8135": "Ybodychange",
    "512fd2756a994a7be3a9d5b5039aa4d45ad50906": "Ybodychange",
    "cfb6a9883d2bf02c99f258e9f19ffcd83805d077": "Yfilerename",
    "42e93829e5310f3cbd905384cd0529f8fffa887f": "Ybodychange",
    "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "fd5a762df0ec42a1ffae2990f26864c70ceefd66": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "375584ae0fa49b04e159f41783760208394620df": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5006. Fix failing streaming tests due to MAPREDUCE-4994. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1461541 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/13 4:47 AM",
      "commitName": "375584ae0fa49b04e159f41783760208394620df",
      "commitAuthor": "Thomas White",
      "commitDateOld": "13/02/13 8:22 PM",
      "commitNameOld": "ab330b33bb30279888ec20e77533f128a15568e3",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 41.31,
      "commitsBetweenForRepo": 190,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,10 @@\n   public ClientProtocol create(Configuration conf) throws IOException {\n     String framework \u003d\n         conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n     if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n       return null;\n     }\n-    if (conf.get(\"mapreduce.job.maps\") \u003d\u003d null) {\n-      conf.setInt(\"mapreduce.job.maps\", 1);\n-    }\n+    conf.setInt(JobContext.NUM_MAPS, 1);\n \n     return new LocalJobRunner(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d\n        conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n    if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n      return null;\n    }\n    conf.setInt(JobContext.NUM_MAPS, 1);\n\n    return new LocalJobRunner(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {}
    },
    "ab330b33bb30279888ec20e77533f128a15568e3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4994. Addendum fixing testcases failures. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1446042 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/13 8:22 PM",
      "commitName": "ab330b33bb30279888ec20e77533f128a15568e3",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "12/02/13 12:16 PM",
      "commitNameOld": "7e615c7f7519de412588734aacde2d5445bb8135",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 1.34,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,12 @@\n   public ClientProtocol create(Configuration conf) throws IOException {\n     String framework \u003d\n         conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n     if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n       return null;\n     }\n+    if (conf.get(\"mapreduce.job.maps\") \u003d\u003d null) {\n+      conf.setInt(\"mapreduce.job.maps\", 1);\n+    }\n+\n     return new LocalJobRunner(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d\n        conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n    if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n      return null;\n    }\n    if (conf.get(\"mapreduce.job.maps\") \u003d\u003d null) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n    }\n\n    return new LocalJobRunner(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {}
    },
    "7e615c7f7519de412588734aacde2d5445bb8135": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4994. -jt generic command line option does not work. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445330 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/13 12:16 PM",
      "commitName": "7e615c7f7519de412588734aacde2d5445bb8135",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "01/05/12 8:59 AM",
      "commitNameOld": "512fd2756a994a7be3a9d5b5039aa4d45ad50906",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 287.18,
      "commitsBetweenForRepo": 1509,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,8 @@\n   public ClientProtocol create(Configuration conf) throws IOException {\n     String framework \u003d\n         conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n     if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n       return null;\n     }\n-    String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n-    if (\"local\".equals(tracker)) {\n-      conf.setInt(\"mapreduce.job.maps\", 1);\n-      return new LocalJobRunner(conf);\n-    } else {\n-\n-      throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n-          + \"\\\" configuration value for LocalJobRunner : \\\"\"\n-          + tracker + \"\\\"\");\n-    }\n+    return new LocalJobRunner(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d\n        conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n    if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n      return null;\n    }\n    return new LocalJobRunner(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {}
    },
    "512fd2756a994a7be3a9d5b5039aa4d45ad50906": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4202. TestYarnClientProtocolProvider is broken (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332716 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/05/12 8:59 AM",
      "commitName": "512fd2756a994a7be3a9d5b5039aa4d45ad50906",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "31/10/11 8:16 PM",
      "commitNameOld": "cfb6a9883d2bf02c99f258e9f19ffcd83805d077",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 182.53,
      "commitsBetweenForRepo": 1257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public ClientProtocol create(Configuration conf) throws IOException {\n-    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n-    if (framework !\u003d null \u0026\u0026 !framework.equals(MRConfig.LOCAL_FRAMEWORK_NAME)) {\n+    String framework \u003d\n+        conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n+    if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n       return null;\n     }\n     String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n     if (\"local\".equals(tracker)) {\n       conf.setInt(\"mapreduce.job.maps\", 1);\n       return new LocalJobRunner(conf);\n     } else {\n \n       throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n           + \"\\\" configuration value for LocalJobRunner : \\\"\"\n           + tracker + \"\\\"\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d\n        conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.LOCAL_FRAMEWORK_NAME);\n    if (!MRConfig.LOCAL_FRAMEWORK_NAME.equals(framework)) {\n      return null;\n    }\n    String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n    if (\"local\".equals(tracker)) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    } else {\n\n      throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n          + \"\\\" configuration value for LocalJobRunner : \\\"\"\n          + tracker + \"\\\"\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {}
    },
    "cfb6a9883d2bf02c99f258e9f19ffcd83805d077": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3237. Move LocalJobRunner to hadoop-mapreduce-client-core. Contributed by Tom White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195792 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 8:16 PM",
      "commitName": "cfb6a9883d2bf02c99f258e9f19ffcd83805d077",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/10/11 7:09 PM",
      "commitNameOld": "e5badc0c1a817ca8f7e4255ec4dcfdf858abb596",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(MRConfig.LOCAL_FRAMEWORK_NAME)) {\n      return null;\n    }\n    String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n    if (\"local\".equals(tracker)) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    } else {\n\n      throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n          + \"\\\" configuration value for LocalJobRunner : \\\"\"\n          + tracker + \"\\\"\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java"
      }
    },
    "42e93829e5310f3cbd905384cd0529f8fffa887f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3158. Fix test failures in MRv1 due to default framework being set to yarn. Contributed by Hitesh Shah. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1181310 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11 5:26 PM",
      "commitName": "42e93829e5310f3cbd905384cd0529f8fffa887f",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "21/09/11 2:13 AM",
      "commitNameOld": "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.63,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public ClientProtocol create(Configuration conf) throws IOException {\n     String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n-    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n+    if (framework !\u003d null \u0026\u0026 !framework.equals(MRConfig.LOCAL_FRAMEWORK_NAME)) {\n       return null;\n     }\n     String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n     if (\"local\".equals(tracker)) {\n       conf.setInt(\"mapreduce.job.maps\", 1);\n       return new LocalJobRunner(conf);\n     } else {\n \n       throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n           + \"\\\" configuration value for LocalJobRunner : \\\"\"\n           + tracker + \"\\\"\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(MRConfig.LOCAL_FRAMEWORK_NAME)) {\n      return null;\n    }\n    String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n    if (\"local\".equals(tracker)) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    } else {\n\n      throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n          + \"\\\" configuration value for LocalJobRunner : \\\"\"\n          + tracker + \"\\\"\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {}
    },
    "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2970. Fixed NPEs in corner cases with different configurations for mapreduce.framework.name. Contributed by Venu Gopala Rao.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173534 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/11 2:13 AM",
      "commitName": "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 27.37,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   public ClientProtocol create(Configuration conf) throws IOException {\n     String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n     if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n       return null;\n     }\n-    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n+    String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n+    if (\"local\".equals(tracker)) {\n       conf.setInt(\"mapreduce.job.maps\", 1);\n       return new LocalJobRunner(conf);\n+    } else {\n+\n+      throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n+          + \"\\\" configuration value for LocalJobRunner : \\\"\"\n+          + tracker + \"\\\"\");\n     }\n-    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    String tracker \u003d conf.get(JTConfig.JT_IPC_ADDRESS, \"local\");\n    if (\"local\".equals(tracker)) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    } else {\n\n      throw new IOException(\"Invalid \\\"\" + JTConfig.JT_IPC_ADDRESS\n          + \"\\\" configuration value for LocalJobRunner : \\\"\"\n          + tracker + \"\\\"\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    }\n    return null;\n  }",
      "path": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
        "newPath": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    }\n    return null;\n  }",
      "path": "hadoop-mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
        "newPath": "hadoop-mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java"
      }
    },
    "fd5a762df0ec42a1ffae2990f26864c70ceefd66": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename)",
      "commitMessage": "MAPREDUCE-2400. Remove Cluster\u0027s dependency on JobTracker via a ServiceProvider for the actual implementation. Contributed by Tom White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145679 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/11 10:10 AM",
      "commitName": "fd5a762df0ec42a1ffae2990f26864c70ceefd66",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-2400. Remove Cluster\u0027s dependency on JobTracker via a ServiceProvider for the actual implementation. Contributed by Tom White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145679 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/07/11 10:10 AM",
          "commitName": "fd5a762df0ec42a1ffae2990f26864c70ceefd66",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/07/11 3:23 AM",
          "commitNameOld": "224972e0558e7a0022002ed26e765acdfd9f8f6c",
          "commitAuthorOld": "Luke Lu",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private ClientProtocol createClient(Configuration conf) throws IOException {\n-    ClientProtocol client;\n-    String tracker \u003d conf.get(\"mapreduce.jobtracker.address\", \"local\");\n-    if (\"local\".equals(tracker)) {\n-      conf.setInt(\"mapreduce.job.maps\", 1);\n-      client \u003d new LocalJobRunner(conf);\n-    } else {\n-      client \u003d createRPCProxy(JobTracker.getAddress(conf), conf);\n+  public ClientProtocol create(Configuration conf) throws IOException {\n+    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n+    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n+      return null;\n     }\n-    return client;\n+    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n+      conf.setInt(\"mapreduce.job.maps\", 1);\n+      return new LocalJobRunner(conf);\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    }\n    return null;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/Cluster.java",
            "newPath": "mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
            "oldMethodName": "createClient",
            "newMethodName": "create"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-2400. Remove Cluster\u0027s dependency on JobTracker via a ServiceProvider for the actual implementation. Contributed by Tom White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145679 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/07/11 10:10 AM",
          "commitName": "fd5a762df0ec42a1ffae2990f26864c70ceefd66",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/07/11 3:23 AM",
          "commitNameOld": "224972e0558e7a0022002ed26e765acdfd9f8f6c",
          "commitAuthorOld": "Luke Lu",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private ClientProtocol createClient(Configuration conf) throws IOException {\n-    ClientProtocol client;\n-    String tracker \u003d conf.get(\"mapreduce.jobtracker.address\", \"local\");\n-    if (\"local\".equals(tracker)) {\n-      conf.setInt(\"mapreduce.job.maps\", 1);\n-      client \u003d new LocalJobRunner(conf);\n-    } else {\n-      client \u003d createRPCProxy(JobTracker.getAddress(conf), conf);\n+  public ClientProtocol create(Configuration conf) throws IOException {\n+    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n+    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n+      return null;\n     }\n-    return client;\n+    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n+      conf.setInt(\"mapreduce.job.maps\", 1);\n+      return new LocalJobRunner(conf);\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    }\n    return null;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2400. Remove Cluster\u0027s dependency on JobTracker via a ServiceProvider for the actual implementation. Contributed by Tom White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145679 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/07/11 10:10 AM",
          "commitName": "fd5a762df0ec42a1ffae2990f26864c70ceefd66",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/07/11 3:23 AM",
          "commitNameOld": "224972e0558e7a0022002ed26e765acdfd9f8f6c",
          "commitAuthorOld": "Luke Lu",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private ClientProtocol createClient(Configuration conf) throws IOException {\n-    ClientProtocol client;\n-    String tracker \u003d conf.get(\"mapreduce.jobtracker.address\", \"local\");\n-    if (\"local\".equals(tracker)) {\n-      conf.setInt(\"mapreduce.job.maps\", 1);\n-      client \u003d new LocalJobRunner(conf);\n-    } else {\n-      client \u003d createRPCProxy(JobTracker.getAddress(conf), conf);\n+  public ClientProtocol create(Configuration conf) throws IOException {\n+    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n+    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n+      return null;\n     }\n-    return client;\n+    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n+      conf.setInt(\"mapreduce.job.maps\", 1);\n+      return new LocalJobRunner(conf);\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    }\n    return null;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-2400. Remove Cluster\u0027s dependency on JobTracker via a ServiceProvider for the actual implementation. Contributed by Tom White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145679 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/07/11 10:10 AM",
          "commitName": "fd5a762df0ec42a1ffae2990f26864c70ceefd66",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/07/11 3:23 AM",
          "commitNameOld": "224972e0558e7a0022002ed26e765acdfd9f8f6c",
          "commitAuthorOld": "Luke Lu",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private ClientProtocol createClient(Configuration conf) throws IOException {\n-    ClientProtocol client;\n-    String tracker \u003d conf.get(\"mapreduce.jobtracker.address\", \"local\");\n-    if (\"local\".equals(tracker)) {\n-      conf.setInt(\"mapreduce.job.maps\", 1);\n-      client \u003d new LocalJobRunner(conf);\n-    } else {\n-      client \u003d createRPCProxy(JobTracker.getAddress(conf), conf);\n+  public ClientProtocol create(Configuration conf) throws IOException {\n+    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n+    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n+      return null;\n     }\n-    return client;\n+    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n+      conf.setInt(\"mapreduce.job.maps\", 1);\n+      return new LocalJobRunner(conf);\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientProtocol create(Configuration conf) throws IOException {\n    String framework \u003d conf.get(MRConfig.FRAMEWORK_NAME);\n    if (framework !\u003d null \u0026\u0026 !framework.equals(\"local\")) {\n      return null;\n    }\n    if (\"local\".equals(conf.get(JTConfig.JT_IPC_ADDRESS, \"local\"))) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      return new LocalJobRunner(conf);\n    }\n    return null;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapred/LocalClientProtocolProvider.java",
          "extendedDetails": {
            "oldValue": "createClient",
            "newValue": "create"
          }
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,11 @@\n+  private ClientProtocol createClient(Configuration conf) throws IOException {\n+    ClientProtocol client;\n+    String tracker \u003d conf.get(\"mapreduce.jobtracker.address\", \"local\");\n+    if (\"local\".equals(tracker)) {\n+      conf.setInt(\"mapreduce.job.maps\", 1);\n+      client \u003d new LocalJobRunner(conf);\n+    } else {\n+      client \u003d createRPCProxy(JobTracker.getAddress(conf), conf);\n+    }\n+    return client;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientProtocol createClient(Configuration conf) throws IOException {\n    ClientProtocol client;\n    String tracker \u003d conf.get(\"mapreduce.jobtracker.address\", \"local\");\n    if (\"local\".equals(tracker)) {\n      conf.setInt(\"mapreduce.job.maps\", 1);\n      client \u003d new LocalJobRunner(conf);\n    } else {\n      client \u003d createRPCProxy(JobTracker.getAddress(conf), conf);\n    }\n    return client;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/Cluster.java"
    }
  }
}