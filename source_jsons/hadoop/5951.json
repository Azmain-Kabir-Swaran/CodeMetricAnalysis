{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "saveFileXAttrsForBatch",
  "functionId": "saveFileXAttrsForBatch___fsd-FSDirectory__batch-List__FileEdekInfo__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 382,
  "functionEndLine": 398,
  "numCommitsSeen": 25,
  "timeTaken": 3185,
  "changeHistory": [
    "ecbcb058b8bc0fbc3903acb56814c6d9608bc396",
    "248d9b6fff648cdb02581d458556b6f7c090ef1a",
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "ecbcb058b8bc0fbc3903acb56814c6d9608bc396": "Ybodychange",
    "248d9b6fff648cdb02581d458556b6f7c090ef1a": "Ybodychange",
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ecbcb058b8bc0fbc3903acb56814c6d9608bc396": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14731. [FGL] Remove redundant locking on NameNode. Contributed by Konstantin V Shvachko.",
      "commitDate": "21/02/20 5:53 PM",
      "commitName": "ecbcb058b8bc0fbc3903acb56814c6d9608bc396",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "07/02/20 1:21 AM",
      "commitNameOld": "7dac7e1d13eaf0eac04fe805c7502dcecd597979",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 14.69,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   static void saveFileXAttrsForBatch(FSDirectory fsd,\n       List\u003cFileEdekInfo\u003e batch) {\n     assert fsd.getFSNamesystem().hasWriteLock();\n-    assert !fsd.hasWriteLock();\n     if (batch !\u003d null \u0026\u0026 !batch.isEmpty()) {\n       for (FileEdekInfo entry : batch) {\n         final INode inode \u003d fsd.getInode(entry.getInodeId());\n         // no dir lock, so inode could be removed. no-op if so.\n         if (inode \u003d\u003d null) {\n           NameNode.LOG.info(\"Cannot find inode {}, skip saving xattr for\"\n               + \" re-encryption\", entry.getInodeId());\n           continue;\n         }\n         fsd.getEditLog().logSetXAttrs(inode.getFullPathName(),\n             inode.getXAttrFeature().getXAttrs(), false);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveFileXAttrsForBatch(FSDirectory fsd,\n      List\u003cFileEdekInfo\u003e batch) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    if (batch !\u003d null \u0026\u0026 !batch.isEmpty()) {\n      for (FileEdekInfo entry : batch) {\n        final INode inode \u003d fsd.getInode(entry.getInodeId());\n        // no dir lock, so inode could be removed. no-op if so.\n        if (inode \u003d\u003d null) {\n          NameNode.LOG.info(\"Cannot find inode {}, skip saving xattr for\"\n              + \" re-encryption\", entry.getInodeId());\n          continue;\n        }\n        fsd.getEditLog().logSetXAttrs(inode.getFullPathName(),\n            inode.getXAttrFeature().getXAttrs(), false);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "248d9b6fff648cdb02581d458556b6f7c090ef1a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12518. Re-encryption should handle task cancellation and progress better.\n",
      "commitDate": "20/10/17 4:25 PM",
      "commitName": "248d9b6fff648cdb02581d458556b6f7c090ef1a",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "07/09/17 8:51 PM",
      "commitNameOld": "b3a4d7d2a01051e166c06ee78e8c6e8df1341948",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 42.82,
      "commitsBetweenForRepo": 381,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   static void saveFileXAttrsForBatch(FSDirectory fsd,\n       List\u003cFileEdekInfo\u003e batch) {\n     assert fsd.getFSNamesystem().hasWriteLock();\n+    assert !fsd.hasWriteLock();\n     if (batch !\u003d null \u0026\u0026 !batch.isEmpty()) {\n       for (FileEdekInfo entry : batch) {\n         final INode inode \u003d fsd.getInode(entry.getInodeId());\n-        Preconditions.checkNotNull(inode);\n+        // no dir lock, so inode could be removed. no-op if so.\n+        if (inode \u003d\u003d null) {\n+          NameNode.LOG.info(\"Cannot find inode {}, skip saving xattr for\"\n+              + \" re-encryption\", entry.getInodeId());\n+          continue;\n+        }\n         fsd.getEditLog().logSetXAttrs(inode.getFullPathName(),\n             inode.getXAttrFeature().getXAttrs(), false);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveFileXAttrsForBatch(FSDirectory fsd,\n      List\u003cFileEdekInfo\u003e batch) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    assert !fsd.hasWriteLock();\n    if (batch !\u003d null \u0026\u0026 !batch.isEmpty()) {\n      for (FileEdekInfo entry : batch) {\n        final INode inode \u003d fsd.getInode(entry.getInodeId());\n        // no dir lock, so inode could be removed. no-op if so.\n        if (inode \u003d\u003d null) {\n          NameNode.LOG.info(\"Cannot find inode {}, skip saving xattr for\"\n              + \" re-encryption\", entry.getInodeId());\n          continue;\n        }\n        fsd.getEditLog().logSetXAttrs(inode.getFullPathName(),\n            inode.getXAttrFeature().getXAttrs(), false);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,12 @@\n+  static void saveFileXAttrsForBatch(FSDirectory fsd,\n+      List\u003cFileEdekInfo\u003e batch) {\n+    assert fsd.getFSNamesystem().hasWriteLock();\n+    if (batch !\u003d null \u0026\u0026 !batch.isEmpty()) {\n+      for (FileEdekInfo entry : batch) {\n+        final INode inode \u003d fsd.getInode(entry.getInodeId());\n+        Preconditions.checkNotNull(inode);\n+        fsd.getEditLog().logSetXAttrs(inode.getFullPathName(),\n+            inode.getXAttrFeature().getXAttrs(), false);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveFileXAttrsForBatch(FSDirectory fsd,\n      List\u003cFileEdekInfo\u003e batch) {\n    assert fsd.getFSNamesystem().hasWriteLock();\n    if (batch !\u003d null \u0026\u0026 !batch.isEmpty()) {\n      for (FileEdekInfo entry : batch) {\n        final INode inode \u003d fsd.getInode(entry.getInodeId());\n        Preconditions.checkNotNull(inode);\n        fsd.getEditLog().logSetXAttrs(inode.getFullPathName(),\n            inode.getXAttrFeature().getXAttrs(), false);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java"
    }
  }
}