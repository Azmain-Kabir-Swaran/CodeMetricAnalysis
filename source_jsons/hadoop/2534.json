{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___zs-ZoneReencryptionStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 3086,
  "functionEndLine": 3118,
  "numCommitsSeen": 80,
  "timeTaken": 2785,
  "changeHistory": [
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,33 @@\n+  public static ZoneReencryptionStatusProto convert(ZoneReencryptionStatus zs) {\n+    ZoneReencryptionStatusProto.Builder builder \u003d\n+        ZoneReencryptionStatusProto.newBuilder()\n+        .setId(zs.getId())\n+        .setPath(zs.getZoneName())\n+        .setEzKeyVersionName(zs.getEzKeyVersionName())\n+        .setSubmissionTime(zs.getSubmissionTime())\n+        .setCanceled(zs.isCanceled())\n+        .setNumReencrypted(zs.getFilesReencrypted())\n+        .setNumFailures(zs.getNumReencryptionFailures());\n+    switch (zs.getState()) {\n+    case Submitted:\n+      builder.setState(ReencryptionStateProto.SUBMITTED);\n+      break;\n+    case Processing:\n+      builder.setState(ReencryptionStateProto.PROCESSING);\n+      break;\n+    case Completed:\n+      builder.setState(ReencryptionStateProto.COMPLETED);\n+      break;\n+    default:\n+      throw new IllegalArgumentException(\"Unknown state \" + zs.getState());\n+    }\n+    final long completion \u003d zs.getCompletionTime();\n+    if (completion !\u003d 0) {\n+      builder.setCompletionTime(completion);\n+    }\n+    final String file \u003d zs.getLastCheckpointFile();\n+    if (file !\u003d null) {\n+      builder.setLastFile(file);\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ZoneReencryptionStatusProto convert(ZoneReencryptionStatus zs) {\n    ZoneReencryptionStatusProto.Builder builder \u003d\n        ZoneReencryptionStatusProto.newBuilder()\n        .setId(zs.getId())\n        .setPath(zs.getZoneName())\n        .setEzKeyVersionName(zs.getEzKeyVersionName())\n        .setSubmissionTime(zs.getSubmissionTime())\n        .setCanceled(zs.isCanceled())\n        .setNumReencrypted(zs.getFilesReencrypted())\n        .setNumFailures(zs.getNumReencryptionFailures());\n    switch (zs.getState()) {\n    case Submitted:\n      builder.setState(ReencryptionStateProto.SUBMITTED);\n      break;\n    case Processing:\n      builder.setState(ReencryptionStateProto.PROCESSING);\n      break;\n    case Completed:\n      builder.setState(ReencryptionStateProto.COMPLETED);\n      break;\n    default:\n      throw new IllegalArgumentException(\"Unknown state \" + zs.getState());\n    }\n    final long completion \u003d zs.getCompletionTime();\n    if (completion !\u003d 0) {\n      builder.setCompletionTime(completion);\n    }\n    final String file \u003d zs.getLastCheckpointFile();\n    if (file !\u003d null) {\n      builder.setLastFile(file);\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java"
    }
  }
}