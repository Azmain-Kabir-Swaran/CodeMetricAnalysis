{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirListingMetadata.java",
  "functionName": "removeExpiredEntriesFromListing",
  "functionId": "removeExpiredEntriesFromListing___ttl-long__now-long",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java",
  "functionStartLine": 255,
  "functionEndLine": 267,
  "numCommitsSeen": 8,
  "timeTaken": 1260,
  "changeHistory": [
    "7b219778e05a50e33cca75d727e62783322b7f80"
  ],
  "changeHistoryShort": {
    "7b219778e05a50e33cca75d727e62783322b7f80": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b219778e05a50e33cca75d727e62783322b7f80": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16433. S3Guard: Filter expired entries and tombstones when listing with MetadataStore.listChildren().\n\nContributed by Gabor Bota.\n\nThis pulls the tracking of the lastUpdated timestamp of metadata entries up from the DDB metastore into all s3guard stores, and then uses this to filter out expired tombstones from listings.\n\nChange-Id: I80f121236b49c75a024116f65a3ef29d3580b462\n",
      "commitDate": "24/07/19 10:11 AM",
      "commitName": "7b219778e05a50e33cca75d727e62783322b7f80",
      "commitAuthor": "Gabor Bota",
      "diff": "@@ -0,0 +1,13 @@\n+  public synchronized void removeExpiredEntriesFromListing(long ttl,\n+      long now) {\n+    final Iterator\u003cMap.Entry\u003cPath, PathMetadata\u003e\u003e iterator \u003d\n+        listMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      final Map.Entry\u003cPath, PathMetadata\u003e entry \u003d iterator.next();\n+      // we filter iff the lastupdated is not 0 and the entry is expired\n+      if (entry.getValue().getLastUpdated() !\u003d 0\n+          \u0026\u0026 (entry.getValue().getLastUpdated() + ttl) \u003c\u003d now) {\n+        iterator.remove();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removeExpiredEntriesFromListing(long ttl,\n      long now) {\n    final Iterator\u003cMap.Entry\u003cPath, PathMetadata\u003e\u003e iterator \u003d\n        listMap.entrySet().iterator();\n    while (iterator.hasNext()) {\n      final Map.Entry\u003cPath, PathMetadata\u003e entry \u003d iterator.next();\n      // we filter iff the lastupdated is not 0 and the entry is expired\n      if (entry.getValue().getLastUpdated() !\u003d 0\n          \u0026\u0026 (entry.getValue().getLastUpdated() + ttl) \u003c\u003d now) {\n        iterator.remove();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java"
    }
  }
}