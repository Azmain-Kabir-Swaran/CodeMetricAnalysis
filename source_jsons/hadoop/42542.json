{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodesListManager.java",
  "functionName": "refreshNodes",
  "functionId": "refreshNodes___yarnConf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
  "functionStartLine": 217,
  "functionEndLine": 220,
  "numCommitsSeen": 40,
  "timeTaken": 9917,
  "changeHistory": [
    "0da69c324dee9baab0f0b9700db1cc5b623f8421",
    "d0da13229cf692579c8c9db47a93f6c6255392c8",
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c",
    "1cbcd4a491e6a57d466c2897335614dc6770b475",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
    "da709a2eac7110026169ed3fc4d0eaf85488d3ef",
    "8269bfa613999f71767de3c0369817b58cfe1416",
    "da2009528478693f8e355a6a28f0826e68050b7c",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
    "39f15579b83eae9a1384dc077491f3b9326ca99a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Ybodychange",
    "d0da13229cf692579c8c9db47a93f6c6255392c8": "Ybodychange",
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c": "Ybodychange",
    "1cbcd4a491e6a57d466c2897335614dc6770b475": "Ybodychange",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": "Ybodychange",
    "da709a2eac7110026169ed3fc4d0eaf85488d3ef": "Ybodychange",
    "8269bfa613999f71767de3c0369817b58cfe1416": "Ybodychange",
    "da2009528478693f8e355a6a28f0826e68050b7c": "Ybodychange",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": "Ymultichange(Yexceptionschange,Ybodychange)",
    "39f15579b83eae9a1384dc077491f3b9326ca99a": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "commitDateOld": "19/05/16 1:01 PM",
      "commitNameOld": "feb90ffcca536e7deac50976b8a8774450fe089f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 90.77,
      "commitsBetweenForRepo": 735,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,4 @@\n-  public void refreshNodes(Configuration yarnConf) throws IOException,\n-      YarnException {\n-    refreshHostsReader(yarnConf);\n-\n-    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n-      if (!isValidNode(nodeId.getHost())) {\n-        RMNodeEventType nodeEventType \u003d isUntrackedNode(nodeId.getHost()) ?\n-            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n-        this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(nodeId, nodeEventType));\n-      }\n-    }\n-    updateInactiveNodes();\n+  public void refreshNodes(Configuration yarnConf)\n+      throws IOException, YarnException {\n+    refreshNodes(yarnConf, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf)\n      throws IOException, YarnException {\n    refreshNodes(yarnConf, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "d0da13229cf692579c8c9db47a93f6c6255392c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/05/16 7:07 AM",
      "commitName": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "15/04/16 1:36 PM",
      "commitNameOld": "69f3d428d5c3ab0c79cacffc22b1f59408622ae7",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 19.73,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n     refreshHostsReader(yarnConf);\n \n     for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n       if (!isValidNode(nodeId.getHost())) {\n+        RMNodeEventType nodeEventType \u003d isUntrackedNode(nodeId.getHost()) ?\n+            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n         this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n+            new RMNodeEvent(nodeId, nodeEventType));\n       }\n     }\n+    updateInactiveNodes();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    refreshHostsReader(yarnConf);\n\n    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n      if (!isValidNode(nodeId.getHost())) {\n        RMNodeEventType nodeEventType \u003d isUntrackedNode(nodeId.getHost()) ?\n            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(nodeId, nodeEventType));\n      }\n    }\n    updateInactiveNodes();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\"\n\nThis reverts commit 1cbcd4a491e6a57d466c2897335614dc6770b475.\n",
      "commitDate": "11/04/16 8:51 AM",
      "commitName": "2a5da97f81d69b481e4d1324a47e64bb55b9407c",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "05/04/16 6:40 AM",
      "commitNameOld": "1cbcd4a491e6a57d466c2897335614dc6770b475",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 6.09,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n     refreshHostsReader(yarnConf);\n \n     for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n       if (!isValidNode(nodeId.getHost())) {\n-        RMNodeEventType nodeEventType \u003d isUntrackedNode(nodeId.getHost()) ?\n-            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n         this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(nodeId, nodeEventType));\n+            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n       }\n     }\n-    updateInactiveNodes();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    refreshHostsReader(yarnConf);\n\n    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n      if (!isValidNode(nodeId.getHost())) {\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "1cbcd4a491e6a57d466c2897335614dc6770b475": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/04/16 6:40 AM",
      "commitName": "1cbcd4a491e6a57d466c2897335614dc6770b475",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "26/02/16 12:24 PM",
      "commitNameOld": "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 38.72,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n     refreshHostsReader(yarnConf);\n \n     for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n       if (!isValidNode(nodeId.getHost())) {\n+        RMNodeEventType nodeEventType \u003d isUntrackedNode(nodeId.getHost()) ?\n+            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n         this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n+            new RMNodeEvent(nodeId, nodeEventType));\n       }\n     }\n+    updateInactiveNodes();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    refreshHostsReader(yarnConf);\n\n    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n      if (!isValidNode(nodeId.getHost())) {\n        RMNodeEventType nodeEventType \u003d isUntrackedNode(nodeId.getHost()) ?\n            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(nodeId, nodeEventType));\n      }\n    }\n    updateInactiveNodes();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": {
      "type": "Ybodychange",
      "commitMessage": "New parameter of CLI for decommissioning node gracefully in RMAdmin CLI. Contributed by Devaraj K\n",
      "commitDate": "22/04/15 10:07 AM",
      "commitName": "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
      "commitAuthor": "Junping Du",
      "commitDateOld": "13/10/14 4:23 PM",
      "commitNameOld": "da709a2eac7110026169ed3fc4d0eaf85488d3ef",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 190.74,
      "commitsBetweenForRepo": 1536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,11 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n-    synchronized (hostsReader) {\n-      if (null \u003d\u003d yarnConf) {\n-        yarnConf \u003d new YarnConfiguration();\n-      }\n-      includesFile \u003d\n-          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n-              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n-      excludesFile \u003d\n-          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n-              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n-      hostsReader.updateFileNames(includesFile, excludesFile);\n-      hostsReader.refresh(\n-          includesFile.isEmpty() ? null : this.rmContext\n-              .getConfigurationProvider().getConfigurationInputStream(\n-                  this.conf, includesFile), excludesFile.isEmpty() ? null\n-              : this.rmContext.getConfigurationProvider()\n-                  .getConfigurationInputStream(this.conf, excludesFile));\n-      printConfiguredHosts();\n-    }\n+    refreshHostsReader(yarnConf);\n \n     for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n       if (!isValidNode(nodeId.getHost())) {\n         this.rmContext.getDispatcher().getEventHandler().handle(\n             new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    refreshHostsReader(yarnConf);\n\n    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n      if (!isValidNode(nodeId.getHost())) {\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "da709a2eac7110026169ed3fc4d0eaf85488d3ef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2641. Decommission nodes on -refreshNodes instead of next NM-RM heartbeat. (Zhihai Xu via kasha)\n",
      "commitDate": "13/10/14 4:23 PM",
      "commitName": "da709a2eac7110026169ed3fc4d0eaf85488d3ef",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "25/09/14 3:37 PM",
      "commitNameOld": "8269bfa613999f71767de3c0369817b58cfe1416",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 18.03,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,29 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n     synchronized (hostsReader) {\n       if (null \u003d\u003d yarnConf) {\n         yarnConf \u003d new YarnConfiguration();\n       }\n       includesFile \u003d\n           yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n               YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n       excludesFile \u003d\n           yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n               YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n       hostsReader.updateFileNames(includesFile, excludesFile);\n       hostsReader.refresh(\n           includesFile.isEmpty() ? null : this.rmContext\n               .getConfigurationProvider().getConfigurationInputStream(\n                   this.conf, includesFile), excludesFile.isEmpty() ? null\n               : this.rmContext.getConfigurationProvider()\n                   .getConfigurationInputStream(this.conf, excludesFile));\n       printConfiguredHosts();\n     }\n+\n+    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n+      if (!isValidNode(nodeId.getHost())) {\n+        this.rmContext.getDispatcher().getEventHandler().handle(\n+            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      includesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n      excludesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n      hostsReader.updateFileNames(includesFile, excludesFile);\n      hostsReader.refresh(\n          includesFile.isEmpty() ? null : this.rmContext\n              .getConfigurationProvider().getConfigurationInputStream(\n                  this.conf, includesFile), excludesFile.isEmpty() ? null\n              : this.rmContext.getConfigurationProvider()\n                  .getConfigurationInputStream(this.conf, excludesFile));\n      printConfiguredHosts();\n    }\n\n    for (NodeId nodeId: rmContext.getRMNodes().keySet()) {\n      if (!isValidNode(nodeId.getHost())) {\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(nodeId, RMNodeEventType.DECOMMISSION));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "8269bfa613999f71767de3c0369817b58cfe1416": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2523. ResourceManager UI showing negative value for \"Decommissioned Nodes\" field. Contributed by Rohith\n",
      "commitDate": "25/09/14 3:37 PM",
      "commitName": "8269bfa613999f71767de3c0369817b58cfe1416",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/02/14 10:46 PM",
      "commitNameOld": "da2009528478693f8e355a6a28f0826e68050b7c",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 216.66,
      "commitsBetweenForRepo": 1685,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n     synchronized (hostsReader) {\n       if (null \u003d\u003d yarnConf) {\n         yarnConf \u003d new YarnConfiguration();\n       }\n       includesFile \u003d\n           yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n               YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n       excludesFile \u003d\n           yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n               YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n       hostsReader.updateFileNames(includesFile, excludesFile);\n       hostsReader.refresh(\n           includesFile.isEmpty() ? null : this.rmContext\n               .getConfigurationProvider().getConfigurationInputStream(\n                   this.conf, includesFile), excludesFile.isEmpty() ? null\n               : this.rmContext.getConfigurationProvider()\n                   .getConfigurationInputStream(this.conf, excludesFile));\n-      setDecomissionedNMsMetrics();\n       printConfiguredHosts();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      includesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n      excludesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n      hostsReader.updateFileNames(includesFile, excludesFile);\n      hostsReader.refresh(\n          includesFile.isEmpty() ? null : this.rmContext\n              .getConfigurationProvider().getConfigurationInputStream(\n                  this.conf, includesFile), excludesFile.isEmpty() ? null\n              : this.rmContext.getConfigurationProvider()\n                  .getConfigurationInputStream(this.conf, excludesFile));\n      printConfiguredHosts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "da2009528478693f8e355a6a28f0826e68050b7c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1071. Enabled ResourceManager to recover cluster metrics numDecommissionedNMs after restarting. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570469 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/02/14 10:46 PM",
      "commitName": "da2009528478693f8e355a6a28f0826e68050b7c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "19/02/14 9:52 AM",
      "commitNameOld": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.54,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public void refreshNodes(Configuration yarnConf) throws IOException,\n       YarnException {\n     synchronized (hostsReader) {\n       if (null \u003d\u003d yarnConf) {\n         yarnConf \u003d new YarnConfiguration();\n       }\n       includesFile \u003d\n           yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n               YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n       excludesFile \u003d\n           yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n               YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n       hostsReader.updateFileNames(includesFile, excludesFile);\n       hostsReader.refresh(\n           includesFile.isEmpty() ? null : this.rmContext\n               .getConfigurationProvider().getConfigurationInputStream(\n                   this.conf, includesFile), excludesFile.isEmpty() ? null\n               : this.rmContext.getConfigurationProvider()\n                   .getConfigurationInputStream(this.conf, excludesFile));\n+      setDecomissionedNMsMetrics();\n       printConfiguredHosts();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      includesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n      excludesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n      hostsReader.updateFileNames(includesFile, excludesFile);\n      hostsReader.refresh(\n          includesFile.isEmpty() ? null : this.rmContext\n              .getConfigurationProvider().getConfigurationInputStream(\n                  this.conf, includesFile), excludesFile.isEmpty() ? null\n              : this.rmContext.getConfigurationProvider()\n                  .getConfigurationInputStream(this.conf, excludesFile));\n      setDecomissionedNMsMetrics();\n      printConfiguredHosts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 9:52 AM",
      "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/02/14 9:52 AM",
          "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "30/10/13 7:54 PM",
          "commitNameOld": "990dcae7174f781483d1688319674e9cb4ccb960",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 111.62,
          "commitsBetweenForRepo": 641,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  public void refreshNodes(Configuration yarnConf) throws IOException {\n+  public void refreshNodes(Configuration yarnConf) throws IOException,\n+      YarnException {\n     synchronized (hostsReader) {\n       if (null \u003d\u003d yarnConf) {\n         yarnConf \u003d new YarnConfiguration();\n       }\n-      hostsReader.updateFileNames(yarnConf.get(\n-          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n-          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(\n-          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n-          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));\n-      hostsReader.refresh();\n+      includesFile \u003d\n+          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n+              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n+      excludesFile \u003d\n+          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n+              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n+      hostsReader.updateFileNames(includesFile, excludesFile);\n+      hostsReader.refresh(\n+          includesFile.isEmpty() ? null : this.rmContext\n+              .getConfigurationProvider().getConfigurationInputStream(\n+                  this.conf, includesFile), excludesFile.isEmpty() ? null\n+              : this.rmContext.getConfigurationProvider()\n+                  .getConfigurationInputStream(this.conf, excludesFile));\n       printConfiguredHosts();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      includesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n      excludesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n      hostsReader.updateFileNames(includesFile, excludesFile);\n      hostsReader.refresh(\n          includesFile.isEmpty() ? null : this.rmContext\n              .getConfigurationProvider().getConfigurationInputStream(\n                  this.conf, includesFile), excludesFile.isEmpty() ? null\n              : this.rmContext.getConfigurationProvider()\n                  .getConfigurationInputStream(this.conf, excludesFile));\n      printConfiguredHosts();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, YarnException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/02/14 9:52 AM",
          "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "30/10/13 7:54 PM",
          "commitNameOld": "990dcae7174f781483d1688319674e9cb4ccb960",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 111.62,
          "commitsBetweenForRepo": 641,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  public void refreshNodes(Configuration yarnConf) throws IOException {\n+  public void refreshNodes(Configuration yarnConf) throws IOException,\n+      YarnException {\n     synchronized (hostsReader) {\n       if (null \u003d\u003d yarnConf) {\n         yarnConf \u003d new YarnConfiguration();\n       }\n-      hostsReader.updateFileNames(yarnConf.get(\n-          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n-          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(\n-          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n-          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));\n-      hostsReader.refresh();\n+      includesFile \u003d\n+          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n+              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n+      excludesFile \u003d\n+          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n+              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n+      hostsReader.updateFileNames(includesFile, excludesFile);\n+      hostsReader.refresh(\n+          includesFile.isEmpty() ? null : this.rmContext\n+              .getConfigurationProvider().getConfigurationInputStream(\n+                  this.conf, includesFile), excludesFile.isEmpty() ? null\n+              : this.rmContext.getConfigurationProvider()\n+                  .getConfigurationInputStream(this.conf, excludesFile));\n       printConfiguredHosts();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException,\n      YarnException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      includesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n      excludesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n      hostsReader.updateFileNames(includesFile, excludesFile);\n      hostsReader.refresh(\n          includesFile.isEmpty() ? null : this.rmContext\n              .getConfigurationProvider().getConfigurationInputStream(\n                  this.conf, includesFile), excludesFile.isEmpty() ? null\n              : this.rmContext.getConfigurationProvider()\n                  .getConfigurationInputStream(this.conf, excludesFile));\n      printConfiguredHosts();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "39f15579b83eae9a1384dc077491f3b9326ca99a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-116. Add the ability to change the RM include/exclude file without a restart. (Contributed by xieguiming and Harsh J)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391912 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/12 3:39 PM",
      "commitName": "39f15579b83eae9a1384dc077491f3b9326ca99a",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-116. Add the ability to change the RM include/exclude file without a restart. (Contributed by xieguiming and Harsh J)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391912 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/12 3:39 PM",
          "commitName": "39f15579b83eae9a1384dc077491f3b9326ca99a",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 52.72,
          "commitsBetweenForRepo": 302,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,14 @@\n-  public void refreshNodes() throws IOException {\n+  public void refreshNodes(Configuration yarnConf) throws IOException {\n     synchronized (hostsReader) {\n+      if (null \u003d\u003d yarnConf) {\n+        yarnConf \u003d new YarnConfiguration();\n+      }\n+      hostsReader.updateFileNames(yarnConf.get(\n+          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n+          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(\n+          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n+          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));\n       hostsReader.refresh();\n       printConfiguredHosts();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      hostsReader.updateFileNames(yarnConf.get(\n          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(\n          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));\n      hostsReader.refresh();\n      printConfiguredHosts();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[yarnConf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-116. Add the ability to change the RM include/exclude file without a restart. (Contributed by xieguiming and Harsh J)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391912 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/12 3:39 PM",
          "commitName": "39f15579b83eae9a1384dc077491f3b9326ca99a",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 52.72,
          "commitsBetweenForRepo": 302,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,14 @@\n-  public void refreshNodes() throws IOException {\n+  public void refreshNodes(Configuration yarnConf) throws IOException {\n     synchronized (hostsReader) {\n+      if (null \u003d\u003d yarnConf) {\n+        yarnConf \u003d new YarnConfiguration();\n+      }\n+      hostsReader.updateFileNames(yarnConf.get(\n+          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n+          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(\n+          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n+          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));\n       hostsReader.refresh();\n       printConfiguredHosts();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void refreshNodes(Configuration yarnConf) throws IOException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      hostsReader.updateFileNames(yarnConf.get(\n          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(\n          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));\n      hostsReader.refresh();\n      printConfiguredHosts();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void refreshNodes() throws IOException {\n    synchronized (hostsReader) {\n      hostsReader.refresh();\n      printConfiguredHosts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void refreshNodes() throws IOException {\n    synchronized (hostsReader) {\n      hostsReader.refresh();\n      printConfiguredHosts();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,6 @@\n+  public void refreshNodes() throws IOException {\n+    synchronized (hostsReader) {\n+      hostsReader.refresh();\n+      printConfiguredHosts();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodes() throws IOException {\n    synchronized (hostsReader) {\n      hostsReader.refresh();\n      printConfiguredHosts();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java"
    }
  }
}