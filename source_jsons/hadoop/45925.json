{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InfoBlock.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
  "functionStartLine": 45,
  "functionEndLine": 83,
  "numCommitsSeen": 8,
  "timeTaken": 7401,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "d667df4ed0d8740cace1d797c431be3baffd0f5b",
    "6680ee5f5d2fa7a310ffae7fec716316cc941dfc",
    "666667464ad773449cd76b567312495577b3214d",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "d667df4ed0d8740cace1d797c431be3baffd0f5b": "Ybodychange",
    "6680ee5f5d2fa7a310ffae7fec716316cc941dfc": "Ybodychange",
    "666667464ad773449cd76b567312495577b3214d": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "18/04/14 2:41 PM",
      "commitNameOld": "d667df4ed0d8740cace1d797c431be3baffd0f5b",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 1196.1,
      "commitsBetweenForRepo": 8647,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   @Override protected void render(Block html) {\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n       div(_INFO_WRAP).\n         table(_INFO).\n           tr().\n-            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n+            th().$class(C_TH).$colspan(2).__(info.about()).__().__();\n     int i \u003d 0;\n     for (ResponseInfo.Item item : info) {\n       TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n         tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n           th(item.key);\n       String value \u003d String.valueOf(item.value);\n       if (item.url \u003d\u003d null) {\n         if (!item.isRaw) {\n           TD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e td \u003d tr.td();\n           if ( value.lastIndexOf(\u0027\\n\u0027) \u003e 0) {\n             String []lines \u003d value.split(\"\\n\");\n         \tDIV\u003cTD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e singleLineDiv;\n             for ( String line :lines) {\n               singleLineDiv \u003d td.div();\n-              singleLineDiv._(line);\n-              singleLineDiv._();\n+              singleLineDiv.__(line);\n+              singleLineDiv.__();\n             }\n           } else {\n-            td._(value);\n+            td.__(value);\n           }\n-          td._();\n+          td.__();\n         } else {\n-          tr.td()._r(value)._();\n+          tr.td()._r(value).__();\n         }\n       } else {\n         tr.\n           td().\n-            a(url(item.url), value)._();\n+            a(url(item.url), value).__();\n       }\n-      tr._();\n+      tr.__();\n     }\n-    table._()._();\n+    table.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2).__(info.about()).__().__();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        if (!item.isRaw) {\n          TD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e td \u003d tr.td();\n          if ( value.lastIndexOf(\u0027\\n\u0027) \u003e 0) {\n            String []lines \u003d value.split(\"\\n\");\n        \tDIV\u003cTD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e singleLineDiv;\n            for ( String line :lines) {\n              singleLineDiv \u003d td.div();\n              singleLineDiv.__(line);\n              singleLineDiv.__();\n            }\n          } else {\n            td.__(value);\n          }\n          td.__();\n        } else {\n          tr.td()._r(value).__();\n        }\n      } else {\n        tr.\n          td().\n            a(url(item.url), value).__();\n      }\n      tr.__();\n    }\n    table.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
      "extendedDetails": {}
    },
    "d667df4ed0d8740cace1d797c431be3baffd0f5b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1932. Javascript injection on the job status page. Contributed by Mit Desai\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1588572 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/14 2:41 PM",
      "commitName": "d667df4ed0d8740cace1d797c431be3baffd0f5b",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "16/06/13 8:32 PM",
      "commitNameOld": "f5f8f3bca4eeaedeff8181812452ec363c4db744",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 305.76,
      "commitsBetweenForRepo": 2063,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   @Override protected void render(Block html) {\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n       div(_INFO_WRAP).\n         table(_INFO).\n           tr().\n             th().$class(C_TH).$colspan(2)._(info.about())._()._();\n     int i \u003d 0;\n     for (ResponseInfo.Item item : info) {\n       TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n         tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n           th(item.key);\n       String value \u003d String.valueOf(item.value);\n       if (item.url \u003d\u003d null) {\n         if (!item.isRaw) {\n           TD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e td \u003d tr.td();\n           if ( value.lastIndexOf(\u0027\\n\u0027) \u003e 0) {\n             String []lines \u003d value.split(\"\\n\");\n         \tDIV\u003cTD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e singleLineDiv;\n             for ( String line :lines) {\n               singleLineDiv \u003d td.div();\n-              singleLineDiv._r(line);\n+              singleLineDiv._(line);\n               singleLineDiv._();\n             }\n           } else {\n-            td._r(value);\n+            td._(value);\n           }\n           td._();\n         } else {\n           tr.td()._r(value)._();\n         }\n       } else {\n         tr.\n           td().\n             a(url(item.url), value)._();\n       }\n       tr._();\n     }\n     table._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        if (!item.isRaw) {\n          TD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e td \u003d tr.td();\n          if ( value.lastIndexOf(\u0027\\n\u0027) \u003e 0) {\n            String []lines \u003d value.split(\"\\n\");\n        \tDIV\u003cTD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e singleLineDiv;\n            for ( String line :lines) {\n              singleLineDiv \u003d td.div();\n              singleLineDiv._(line);\n              singleLineDiv._();\n            }\n          } else {\n            td._(value);\n          }\n          td._();\n        } else {\n          tr.td()._r(value)._();\n        }\n      } else {\n        tr.\n          td().\n            a(url(item.url), value)._();\n      }\n      tr._();\n    }\n    table._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
      "extendedDetails": {}
    },
    "6680ee5f5d2fa7a310ffae7fec716316cc941dfc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-410. Fixed RM UI so that the new lines diagnostics for a failed app on the per-application page are translated to html line breaks. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1451808 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/03/13 5:21 PM",
      "commitName": "6680ee5f5d2fa7a310ffae7fec716316cc941dfc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/02/13 7:40 AM",
      "commitNameOld": "666667464ad773449cd76b567312495577b3214d",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 16.4,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,39 @@\n   @Override protected void render(Block html) {\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n       div(_INFO_WRAP).\n         table(_INFO).\n           tr().\n             th().$class(C_TH).$colspan(2)._(info.about())._()._();\n     int i \u003d 0;\n     for (ResponseInfo.Item item : info) {\n       TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n         tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n           th(item.key);\n       String value \u003d String.valueOf(item.value);\n       if (item.url \u003d\u003d null) {\n         if (!item.isRaw) {\n-          tr.td(value);\n+          TD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e td \u003d tr.td();\n+          if ( value.lastIndexOf(\u0027\\n\u0027) \u003e 0) {\n+            String []lines \u003d value.split(\"\\n\");\n+        \tDIV\u003cTD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e singleLineDiv;\n+            for ( String line :lines) {\n+              singleLineDiv \u003d td.div();\n+              singleLineDiv._r(line);\n+              singleLineDiv._();\n+            }\n+          } else {\n+            td._r(value);\n+          }\n+          td._();\n         } else {\n           tr.td()._r(value)._();\n         }\n       } else {\n         tr.\n           td().\n             a(url(item.url), value)._();\n       }\n       tr._();\n     }\n     table._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        if (!item.isRaw) {\n          TD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e td \u003d tr.td();\n          if ( value.lastIndexOf(\u0027\\n\u0027) \u003e 0) {\n            String []lines \u003d value.split(\"\\n\");\n        \tDIV\u003cTD\u003cTR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e singleLineDiv;\n            for ( String line :lines) {\n              singleLineDiv \u003d td.div();\n              singleLineDiv._r(line);\n              singleLineDiv._();\n            }\n          } else {\n            td._r(value);\n          }\n          td._();\n        } else {\n          tr.td()._r(value)._();\n        }\n      } else {\n        tr.\n          td().\n            a(url(item.url), value)._();\n      }\n      tr._();\n    }\n    table._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
      "extendedDetails": {}
    },
    "666667464ad773449cd76b567312495577b3214d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-249. Capacity Scheduler web page should show list of active users per queue like it used to (in 1.x) (Ravi Prakash via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/13 7:40 AM",
      "commitName": "666667464ad773449cd76b567312495577b3214d",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 189.43,
      "commitsBetweenForRepo": 991,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   @Override protected void render(Block html) {\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n       div(_INFO_WRAP).\n         table(_INFO).\n           tr().\n             th().$class(C_TH).$colspan(2)._(info.about())._()._();\n     int i \u003d 0;\n     for (ResponseInfo.Item item : info) {\n       TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n         tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n           th(item.key);\n       String value \u003d String.valueOf(item.value);\n       if (item.url \u003d\u003d null) {\n-        tr.td(value);\n+        if (!item.isRaw) {\n+          tr.td(value);\n+        } else {\n+          tr.td()._r(value)._();\n+        }\n       } else {\n         tr.\n           td().\n             a(url(item.url), value)._();\n       }\n       tr._();\n     }\n     table._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        if (!item.isRaw) {\n          tr.td(value);\n        } else {\n          tr.td()._r(value)._();\n        }\n      } else {\n        tr.\n          td().\n            a(url(item.url), value)._();\n      }\n      tr._();\n    }\n    table._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        tr.td(value);\n      } else {\n        tr.\n          td().\n            a(url(item.url), value)._();\n      }\n      tr._();\n    }\n    table._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        tr.td(value);\n      } else {\n        tr.\n          td().\n            a(url(item.url), value)._();\n      }\n      tr._();\n    }\n    table._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  @Override protected void render(Block html) {\n+    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n+      div(_INFO_WRAP).\n+        table(_INFO).\n+          tr().\n+            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n+    int i \u003d 0;\n+    for (ResponseInfo.Item item : info) {\n+      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n+        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n+          th(item.key);\n+      String value \u003d String.valueOf(item.value);\n+      if (item.url \u003d\u003d null) {\n+        tr.td(value);\n+      } else {\n+        tr.\n+          td().\n+            a(url(item.url), value)._();\n+      }\n+      tr._();\n+    }\n+    table._()._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d html.\n      div(_INFO_WRAP).\n        table(_INFO).\n          tr().\n            th().$class(C_TH).$colspan(2)._(info.about())._()._();\n    int i \u003d 0;\n    for (ResponseInfo.Item item : info) {\n      TR\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tr \u003d table.\n        tr((++i % 2 !\u003d 0) ? _ODD : _EVEN).\n          th(item.key);\n      String value \u003d String.valueOf(item.value);\n      if (item.url \u003d\u003d null) {\n        tr.td(value);\n      } else {\n        tr.\n          td().\n            a(url(item.url), value)._();\n      }\n      tr._();\n    }\n    table._()._();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/InfoBlock.java"
    }
  }
}