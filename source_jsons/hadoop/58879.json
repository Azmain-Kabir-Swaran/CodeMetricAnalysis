{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StartContainersResponsePBImpl.java",
  "functionName": "iterator",
  "functionId": "iterator",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java",
  "functionStartLine": 186,
  "functionEndLine": 209,
  "numCommitsSeen": 14,
  "timeTaken": 2557,
  "changeHistory": [
    "3ca3137179ef093e42cde06587c9ea785b10f32c",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "f4d80e91ae314d316100baa7770b9d73ea853d9c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "6b6ef7b8e35af9bd325f6ff670cdbd0fb1265c7d",
    "ade0f0560f729e50382c6992f713f29e2dd5b270"
  ],
  "changeHistoryShort": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "f4d80e91ae314d316100baa7770b9d73ea853d9c": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "6b6ef7b8e35af9bd325f6ff670cdbd0fb1265c7d": "Ymultichange(Ymodifierchange,Ybodychange)",
    "ade0f0560f729e50382c6992f713f29e2dd5b270": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 8:41 PM",
      "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/07/13 3:06 PM",
          "commitNameOld": "77fa04457c375ac202829c33c8378fa3538cad65",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.23,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n-        return new Iterator\u003cStringBytesMapProto\u003e() {\n-          \n-          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n-          \n+      public Iterator\u003cContainerIdProto\u003e iterator() {\n+        return new Iterator\u003cContainerIdProto\u003e() {\n+\n+          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n+\n           @Override\n-          public synchronized void remove() {\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public ContainerIdProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n             throw new UnsupportedOperationException();\n-          }\n-          \n-          @Override\n-          public synchronized StringBytesMapProto next() {\n-            String key \u003d keyIter.next();\n-            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n-          }\n-          \n-          @Override\n-          public synchronized boolean hasNext() {\n-            return keyIter.hasNext();\n+\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public Iterator\u003cContainerIdProto\u003e iterator() {\n        return new Iterator\u003cContainerIdProto\u003e() {\n\n          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ContainerIdProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java",
            "oldMethodName": "iterator",
            "newMethodName": "iterator"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/07/13 3:06 PM",
          "commitNameOld": "77fa04457c375ac202829c33c8378fa3538cad65",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.23,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n-        return new Iterator\u003cStringBytesMapProto\u003e() {\n-          \n-          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n-          \n+      public Iterator\u003cContainerIdProto\u003e iterator() {\n+        return new Iterator\u003cContainerIdProto\u003e() {\n+\n+          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n+\n           @Override\n-          public synchronized void remove() {\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public ContainerIdProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n             throw new UnsupportedOperationException();\n-          }\n-          \n-          @Override\n-          public synchronized StringBytesMapProto next() {\n-            String key \u003d keyIter.next();\n-            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n-          }\n-          \n-          @Override\n-          public synchronized boolean hasNext() {\n-            return keyIter.hasNext();\n+\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public Iterator\u003cContainerIdProto\u003e iterator() {\n        return new Iterator\u003cContainerIdProto\u003e() {\n\n          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ContainerIdProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cStringBytesMapProto\u003e",
            "newValue": "Iterator\u003cContainerIdProto\u003e"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/07/13 3:06 PM",
          "commitNameOld": "77fa04457c375ac202829c33c8378fa3538cad65",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.23,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n-        return new Iterator\u003cStringBytesMapProto\u003e() {\n-          \n-          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n-          \n+      public Iterator\u003cContainerIdProto\u003e iterator() {\n+        return new Iterator\u003cContainerIdProto\u003e() {\n+\n+          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n+\n           @Override\n-          public synchronized void remove() {\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public ContainerIdProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n             throw new UnsupportedOperationException();\n-          }\n-          \n-          @Override\n-          public synchronized StringBytesMapProto next() {\n-            String key \u003d keyIter.next();\n-            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n-          }\n-          \n-          @Override\n-          public synchronized boolean hasNext() {\n-            return keyIter.hasNext();\n+\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public Iterator\u003cContainerIdProto\u003e iterator() {\n        return new Iterator\u003cContainerIdProto\u003e() {\n\n          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ContainerIdProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/07/13 3:06 PM",
          "commitNameOld": "77fa04457c375ac202829c33c8378fa3538cad65",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.23,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n-        return new Iterator\u003cStringBytesMapProto\u003e() {\n-          \n-          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n-          \n+      public Iterator\u003cContainerIdProto\u003e iterator() {\n+        return new Iterator\u003cContainerIdProto\u003e() {\n+\n+          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n+\n           @Override\n-          public synchronized void remove() {\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public ContainerIdProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n             throw new UnsupportedOperationException();\n-          }\n-          \n-          @Override\n-          public synchronized StringBytesMapProto next() {\n-            String key \u003d keyIter.next();\n-            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n-          }\n-          \n-          @Override\n-          public synchronized boolean hasNext() {\n-            return keyIter.hasNext();\n+\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public Iterator\u003cContainerIdProto\u003e iterator() {\n        return new Iterator\u003cContainerIdProto\u003e() {\n\n          Iterator\u003cContainerId\u003e iter \u003d succeededContainers.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ContainerIdProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n        return new Iterator\u003cStringBytesMapProto\u003e() {\n          \n          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n          \n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n          }\n          \n          @Override\n          public synchronized StringBytesMapProto next() {\n            String key \u003d keyIter.next();\n            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n          }\n          \n          @Override\n          public synchronized boolean hasNext() {\n            return keyIter.hasNext();\n          }\n        };\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java"
      }
    },
    "f4d80e91ae314d316100baa7770b9d73ea853d9c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-841. Move Auxiliary service to yarn-api, annotate and document it. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494031 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 11:20 PM",
      "commitName": "f4d80e91ae314d316100baa7770b9d73ea853d9c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 10:47 PM",
      "commitNameOld": "acc0d3eb521e3c1d1b2f4be9b46c685ee921504b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n       public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n         return new Iterator\u003cStringBytesMapProto\u003e() {\n           \n-          Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n+          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n           \n           @Override\n           public synchronized void remove() {\n             throw new UnsupportedOperationException();\n           }\n           \n           @Override\n           public synchronized StringBytesMapProto next() {\n             String key \u003d keyIter.next();\n-            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n+            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n           }\n           \n           @Override\n           public synchronized boolean hasNext() {\n             return keyIter.hasNext();\n           }\n         };\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n        return new Iterator\u003cStringBytesMapProto\u003e() {\n          \n          Iterator\u003cString\u003e keyIter \u003d servicesMetaData.keySet().iterator();\n          \n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n          }\n          \n          @Override\n          public synchronized StringBytesMapProto next() {\n            String key \u003d keyIter.next();\n            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(servicesMetaData.get(key))).build();\n          }\n          \n          @Override\n          public synchronized boolean hasNext() {\n            return keyIter.hasNext();\n          }\n        };\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n        return new Iterator\u003cStringBytesMapProto\u003e() {\n          \n          Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n          \n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n          }\n          \n          @Override\n          public synchronized StringBytesMapProto next() {\n            String key \u003d keyIter.next();\n            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n          }\n          \n          @Override\n          public synchronized boolean hasNext() {\n            return keyIter.hasNext();\n          }\n        };\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java"
      }
    },
    "6b6ef7b8e35af9bd325f6ff670cdbd0fb1265c7d": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-2947. Fixed race condition in AuxiliaryServices. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166849 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 11:40 AM",
      "commitName": "6b6ef7b8e35af9bd325f6ff670cdbd0fb1265c7d",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-2947. Fixed race condition in AuxiliaryServices. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166849 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/11 11:40 AM",
          "commitName": "6b6ef7b8e35af9bd325f6ff670cdbd0fb1265c7d",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "31/08/11 4:38 AM",
          "commitNameOld": "ade0f0560f729e50382c6992f713f29e2dd5b270",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.29,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-      public Iterator\u003cStringBytesMapProto\u003e iterator() {\n+      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n         return new Iterator\u003cStringBytesMapProto\u003e() {\n           \n           Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n           \n           @Override\n-          public void remove() {\n+          public synchronized void remove() {\n             throw new UnsupportedOperationException();\n           }\n           \n           @Override\n-          public StringBytesMapProto next() {\n+          public synchronized StringBytesMapProto next() {\n             String key \u003d keyIter.next();\n             return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n           }\n           \n           @Override\n-          public boolean hasNext() {\n+          public synchronized boolean hasNext() {\n             return keyIter.hasNext();\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n        return new Iterator\u003cStringBytesMapProto\u003e() {\n          \n          Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n          \n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n          }\n          \n          @Override\n          public synchronized StringBytesMapProto next() {\n            String key \u003d keyIter.next();\n            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n          }\n          \n          @Override\n          public synchronized boolean hasNext() {\n            return keyIter.hasNext();\n          }\n        };\n      }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2947. Fixed race condition in AuxiliaryServices. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166849 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/11 11:40 AM",
          "commitName": "6b6ef7b8e35af9bd325f6ff670cdbd0fb1265c7d",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "31/08/11 4:38 AM",
          "commitNameOld": "ade0f0560f729e50382c6992f713f29e2dd5b270",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.29,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-      public Iterator\u003cStringBytesMapProto\u003e iterator() {\n+      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n         return new Iterator\u003cStringBytesMapProto\u003e() {\n           \n           Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n           \n           @Override\n-          public void remove() {\n+          public synchronized void remove() {\n             throw new UnsupportedOperationException();\n           }\n           \n           @Override\n-          public StringBytesMapProto next() {\n+          public synchronized StringBytesMapProto next() {\n             String key \u003d keyIter.next();\n             return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n           }\n           \n           @Override\n-          public boolean hasNext() {\n+          public synchronized boolean hasNext() {\n             return keyIter.hasNext();\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public synchronized Iterator\u003cStringBytesMapProto\u003e iterator() {\n        return new Iterator\u003cStringBytesMapProto\u003e() {\n          \n          Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n          \n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n          }\n          \n          @Override\n          public synchronized StringBytesMapProto next() {\n            String key \u003d keyIter.next();\n            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n          }\n          \n          @Override\n          public synchronized boolean hasNext() {\n            return keyIter.hasNext();\n          }\n        };\n      }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "ade0f0560f729e50382c6992f713f29e2dd5b270": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163585 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 4:38 AM",
      "commitName": "ade0f0560f729e50382c6992f713f29e2dd5b270",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+      public Iterator\u003cStringBytesMapProto\u003e iterator() {\n+        return new Iterator\u003cStringBytesMapProto\u003e() {\n+          \n+          Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n+          \n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+          }\n+          \n+          @Override\n+          public StringBytesMapProto next() {\n+            String key \u003d keyIter.next();\n+            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n+          }\n+          \n+          @Override\n+          public boolean hasNext() {\n+            return keyIter.hasNext();\n+          }\n+        };\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public Iterator\u003cStringBytesMapProto\u003e iterator() {\n        return new Iterator\u003cStringBytesMapProto\u003e() {\n          \n          Iterator\u003cString\u003e keyIter \u003d serviceResponse.keySet().iterator();\n          \n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n          \n          @Override\n          public StringBytesMapProto next() {\n            String key \u003d keyIter.next();\n            return StringBytesMapProto.newBuilder().setKey(key).setValue(convertToProtoFormat(serviceResponse.get(key))).build();\n          }\n          \n          @Override\n          public boolean hasNext() {\n            return keyIter.hasNext();\n          }\n        };\n      }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainerResponsePBImpl.java"
    }
  }
}