{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "startInternal",
  "functionId": "startInternal",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 389,
  "functionEndLine": 415,
  "numCommitsSeen": 77,
  "timeTaken": 5856,
  "changeHistory": [
    "285d2c07531a92067368ac4bdd21d309e6e81bc4",
    "2df73dace06cfd2b3193a14cd455297f8f989617",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
    "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b",
    "e5b1733e049dc0f1859b93618354e049a0efdc4a",
    "f271d377357ad680924d19f07e6c8315e7c89bae",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "054a947989d6ccbe54a803ca96dcebeba8328367",
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
    "41ec3cce7698c4f6a8156cb6a20e752e25a993a0",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "285d2c07531a92067368ac4bdd21d309e6e81bc4": "Ybodychange",
    "2df73dace06cfd2b3193a14cd455297f8f989617": "Ybodychange",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Ybodychange",
    "75dd866bfb8b63cb9f13179d4365b05c48e0907d": "Ybodychange",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Ybodychange",
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b": "Ybodychange",
    "e5b1733e049dc0f1859b93618354e049a0efdc4a": "Ybodychange",
    "f271d377357ad680924d19f07e6c8315e7c89bae": "Ybodychange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "054a947989d6ccbe54a803ca96dcebeba8328367": "Ybodychange",
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": "Ybodychange",
    "41ec3cce7698c4f6a8156cb6a20e752e25a993a0": "Ybodychange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ybodychange",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": "Ybodychange",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "285d2c07531a92067368ac4bdd21d309e6e81bc4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8449. RM HA for AM web server HTTPS Support. (Contributed by Robert Kanter)\n",
      "commitDate": "18/10/18 9:24 PM",
      "commitName": "285d2c07531a92067368ac4bdd21d309e6e81bc4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "12/06/18 4:43 AM",
      "commitNameOld": "2df73dace06cfd2b3193a14cd455297f8f989617",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 128.7,
      "commitsBetweenForRepo": 1076,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public synchronized void startInternal() throws Exception {\n     // ensure root dirs exist\n     zkManager.createRootDirRecursively(znodeWorkingPath, zkAcl);\n     create(zkRootNodePath);\n     setRootNodeAcls();\n     delete(fencingNodePath);\n     if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n         .isAutomaticFailoverEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n     for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n       create(rmAppRootHierarchies.get(splitIndex));\n     }\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n       create(rmDelegationTokenHierarchies.get(splitIndex));\n     }\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n+    create(proxyCARoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // ensure root dirs exist\n    zkManager.createRootDirRecursively(znodeWorkingPath, zkAcl);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n        .isAutomaticFailoverEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmAppRootHierarchies.get(splitIndex));\n    }\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmDelegationTokenHierarchies.get(splitIndex));\n    }\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n    create(proxyCARoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "2df73dace06cfd2b3193a14cd455297f8f989617": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8405. RM zk-state-store.parent-path ACLs has been changed since HADOOP-14773. Contributed by  Íñigo Goiri.\n",
      "commitDate": "12/06/18 4:43 AM",
      "commitName": "2df73dace06cfd2b3193a14cd455297f8f989617",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "02/05/18 5:23 PM",
      "commitNameOld": "e6a80e476d4348a4373e6dd5792d70edff16516f",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 40.47,
      "commitsBetweenForRepo": 316,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public synchronized void startInternal() throws Exception {\n     // ensure root dirs exist\n-    zkManager.createRootDirRecursively(znodeWorkingPath);\n+    zkManager.createRootDirRecursively(znodeWorkingPath, zkAcl);\n     create(zkRootNodePath);\n     setRootNodeAcls();\n     delete(fencingNodePath);\n     if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n         .isAutomaticFailoverEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n     for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n       create(rmAppRootHierarchies.get(splitIndex));\n     }\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n       create(rmDelegationTokenHierarchies.get(splitIndex));\n     }\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // ensure root dirs exist\n    zkManager.createRootDirRecursively(znodeWorkingPath, zkAcl);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n        .isAutomaticFailoverEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmAppRootHierarchies.get(splitIndex));\n    }\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmDelegationTokenHierarchies.get(splitIndex));\n    }\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 17.28,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   public synchronized void startInternal() throws Exception {\n     // ensure root dirs exist\n     zkManager.createRootDirRecursively(znodeWorkingPath);\n     create(zkRootNodePath);\n     setRootNodeAcls();\n     delete(fencingNodePath);\n     if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n         .isAutomaticFailoverEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n     for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n       create(rmAppRootHierarchies.get(splitIndex));\n     }\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n+    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n+      create(rmDelegationTokenHierarchies.get(splitIndex));\n+    }\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // ensure root dirs exist\n    zkManager.createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n        .isAutomaticFailoverEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmAppRootHierarchies.get(splitIndex));\n    }\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmDelegationTokenHierarchies.get(splitIndex));\n    }\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "75dd866bfb8b63cb9f13179d4365b05c48e0907d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14773. Extend ZKCuratorManager API for more reusability. (Íñigo Goiri via Subru).\n",
      "commitDate": "15/08/17 4:53 PM",
      "commitName": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "11/08/17 1:58 PM",
      "commitNameOld": "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 4.12,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void startInternal() throws Exception {\n     // ensure root dirs exist\n-    createRootDirRecursively(znodeWorkingPath);\n+    zkManager.createRootDirRecursively(znodeWorkingPath);\n     create(zkRootNodePath);\n     setRootNodeAcls();\n     delete(fencingNodePath);\n     if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n         .isAutomaticFailoverEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n     for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n       create(rmAppRootHierarchies.get(splitIndex));\n     }\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // ensure root dirs exist\n    zkManager.createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n        .isAutomaticFailoverEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmAppRootHierarchies.get(splitIndex));\n    }\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "30/01/17 9:44 PM",
      "commitNameOld": "87852b6ef4b9d973b7b3999974d41c8860fb1495",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 87.62,
      "commitsBetweenForRepo": 498,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   public synchronized void startInternal() throws Exception {\n     // ensure root dirs exist\n     createRootDirRecursively(znodeWorkingPath);\n     create(zkRootNodePath);\n     setRootNodeAcls();\n     delete(fencingNodePath);\n     if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n         .isAutomaticFailoverEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n+    create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n+    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n+      create(rmAppRootHierarchies.get(splitIndex));\n+    }\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // ensure root dirs exist\n    createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n        .isAutomaticFailoverEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(getNodePath(rmAppRoot, RM_APP_ROOT_HIERARCHIES));\n    for (int splitIndex \u003d 1; splitIndex \u003c\u003d 4; splitIndex++) {\n      create(rmAppRootHierarchies.get(splitIndex));\n    }\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4559. Make leader elector and zk store share the same curator\nclient. Contributed by Jian He\n",
      "commitDate": "20/01/16 2:48 PM",
      "commitName": "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b",
      "commitAuthor": "Xuan",
      "commitDateOld": "29/12/15 3:58 PM",
      "commitNameOld": "52734134116eb4b18686e308d00e71e7e903383e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 21.95,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   public synchronized void startInternal() throws Exception {\n-    // createConnection for future API calls\n-    createConnection();\n \n     // ensure root dirs exist\n     createRootDirRecursively(znodeWorkingPath);\n     create(zkRootNodePath);\n     setRootNodeAcls();\n     delete(fencingNodePath);\n-    if (HAUtil.isHAEnabled(getConfig())) {\n+    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n+        .isAutomaticFailoverEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n\n    // ensure root dirs exist\n    createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig()) \u0026\u0026 !HAUtil\n        .isAutomaticFailoverEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "e5b1733e049dc0f1859b93618354e049a0efdc4a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4127. RM fail with noAuth error if switched from failover to non-failover. Contributed by Varun Saxena\n",
      "commitDate": "29/10/15 3:42 PM",
      "commitName": "e5b1733e049dc0f1859b93618354e049a0efdc4a",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/08/15 12:57 PM",
      "commitNameOld": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 85.12,
      "commitsBetweenForRepo": 606,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDirRecursively(znodeWorkingPath);\n     create(zkRootNodePath);\n-    if (HAUtil.isHAEnabled(getConfig())){\n-      fence();\n+    setRootNodeAcls();\n+    delete(fencingNodePath);\n+    if (HAUtil.isHAEnabled(getConfig())) {\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n     create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    setRootNodeAcls();\n    delete(fencingNodePath);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "f271d377357ad680924d19f07e6c8315e7c89bae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3736. Add RMStateStore apis to store and load accepted reservations for failover (adhoot via asuresh)\n",
      "commitDate": "05/08/15 12:57 PM",
      "commitName": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/07/15 2:16 PM",
      "commitNameOld": "c9dd2cada055c0beffd04bad0ded8324f66ad1b7",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 28.95,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDirRecursively(znodeWorkingPath);\n     create(zkRootNodePath);\n     if (HAUtil.isHAEnabled(getConfig())){\n       fence();\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     create(rmAppRoot);\n     create(rmDTSecretManagerRoot);\n     create(dtMasterKeysRootPath);\n     create(delegationTokensRootPath);\n     create(dtSequenceNumberPath);\n     create(amrmTokenSecretManagerRoot);\n+    create(reservationRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n    create(reservationRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDirRecursively(znodeWorkingPath);\n-    createRootDir(zkRootNodePath);\n+    create(zkRootNodePath);\n     if (HAUtil.isHAEnabled(getConfig())){\n       fence();\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n-    createRootDir(rmAppRoot);\n-    createRootDir(rmDTSecretManagerRoot);\n-    createRootDir(dtMasterKeysRootPath);\n-    createRootDir(delegationTokensRootPath);\n-    createRootDir(dtSequenceNumberPath);\n-    createRootDir(amrmTokenSecretManagerRoot);\n+    create(rmAppRoot);\n+    create(rmDTSecretManagerRoot);\n+    create(dtMasterKeysRootPath);\n+    create(delegationTokensRootPath);\n+    create(dtSequenceNumberPath);\n+    create(amrmTokenSecretManagerRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDirRecursively(znodeWorkingPath);\n    create(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    create(rmAppRoot);\n    create(rmDTSecretManagerRoot);\n    create(dtMasterKeysRootPath);\n    create(delegationTokensRootPath);\n    create(dtSequenceNumberPath);\n    create(amrmTokenSecretManagerRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "054a947989d6ccbe54a803ca96dcebeba8328367": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3077. Fixed RM to create zk root path recursively. Contributed by Chun Chen\n",
      "commitDate": "30/01/15 5:34 PM",
      "commitName": "054a947989d6ccbe54a803ca96dcebeba8328367",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/01/15 1:33 PM",
      "commitNameOld": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 25.17,
      "commitsBetweenForRepo": 185,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n-    createRootDir(znodeWorkingPath);\n+    createRootDirRecursively(znodeWorkingPath);\n     createRootDir(zkRootNodePath);\n     if (HAUtil.isHAEnabled(getConfig())){\n       fence();\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     createRootDir(rmAppRoot);\n     createRootDir(rmDTSecretManagerRoot);\n     createRootDir(dtMasterKeysRootPath);\n     createRootDir(delegationTokensRootPath);\n     createRootDir(dtSequenceNumberPath);\n     createRootDir(amrmTokenSecretManagerRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDirRecursively(znodeWorkingPath);\n    createRootDir(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    createRootDir(rmAppRoot);\n    createRootDir(rmDTSecretManagerRoot);\n    createRootDir(dtMasterKeysRootPath);\n    createRootDir(delegationTokensRootPath);\n    createRootDir(dtSequenceNumberPath);\n    createRootDir(amrmTokenSecretManagerRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2211. Persist AMRMToken master key in RMStateStore for RM recovery. Contributed by Xuan Gong\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613515 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 1:42 PM",
      "commitName": "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/07/14 12:58 PM",
      "commitNameOld": "8fbca62a9008306249779367af1d3c329f875552",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 16.03,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDir(znodeWorkingPath);\n     createRootDir(zkRootNodePath);\n     if (HAUtil.isHAEnabled(getConfig())){\n       fence();\n       verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n       verifyActiveStatusThread.start();\n     }\n     createRootDir(rmAppRoot);\n     createRootDir(rmDTSecretManagerRoot);\n     createRootDir(dtMasterKeysRootPath);\n     createRootDir(delegationTokensRootPath);\n     createRootDir(dtSequenceNumberPath);\n+    createRootDir(amrmTokenSecretManagerRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDir(znodeWorkingPath);\n    createRootDir(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    createRootDir(rmAppRoot);\n    createRootDir(rmDTSecretManagerRoot);\n    createRootDir(dtMasterKeysRootPath);\n    createRootDir(delegationTokensRootPath);\n    createRootDir(dtSequenceNumberPath);\n    createRootDir(amrmTokenSecretManagerRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "41ec3cce7698c4f6a8156cb6a20e752e25a993a0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1641. ZK store should attempt a write periodically to ensure it is still Active. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1567628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/14 6:09 AM",
      "commitName": "41ec3cce7698c4f6a8156cb6a20e752e25a993a0",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/01/14 10:22 PM",
      "commitNameOld": "482993ac5351b532bb3ea9ceccf95e25087b823a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 20.32,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDir(znodeWorkingPath);\n     createRootDir(zkRootNodePath);\n     if (HAUtil.isHAEnabled(getConfig())){\n       fence();\n+      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n+      verifyActiveStatusThread.start();\n     }\n     createRootDir(rmAppRoot);\n     createRootDir(rmDTSecretManagerRoot);\n     createRootDir(dtMasterKeysRootPath);\n     createRootDir(delegationTokensRootPath);\n     createRootDir(dtSequenceNumberPath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDir(znodeWorkingPath);\n    createRootDir(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n      verifyActiveStatusThread \u003d new VerifyActiveStatusThread();\n      verifyActiveStatusThread.start();\n    }\n    createRootDir(rmAppRoot);\n    createRootDir(rmDTSecretManagerRoot);\n    createRootDir(dtMasterKeysRootPath);\n    createRootDir(delegationTokensRootPath);\n    createRootDir(dtSequenceNumberPath);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/12/13 8:17 PM",
      "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDir(znodeWorkingPath);\n     createRootDir(zkRootNodePath);\n     if (HAUtil.isHAEnabled(getConfig())){\n       fence();\n     }\n-    createRootDir(rmDTSecretManagerRoot);\n     createRootDir(rmAppRoot);\n+    createRootDir(rmDTSecretManagerRoot);\n+    createRootDir(dtMasterKeysRootPath);\n+    createRootDir(delegationTokensRootPath);\n+    createRootDir(dtSequenceNumberPath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDir(znodeWorkingPath);\n    createRootDir(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n    }\n    createRootDir(rmAppRoot);\n    createRootDir(rmDTSecretManagerRoot);\n    createRootDir(dtMasterKeysRootPath);\n    createRootDir(delegationTokensRootPath);\n    createRootDir(dtSequenceNumberPath);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 9:53 AM",
      "commitName": "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "31/10/13 10:25 AM",
      "commitNameOld": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.02,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,13 @@\n   public synchronized void startInternal() throws Exception {\n     // createConnection for future API calls\n     createConnection();\n \n     // ensure root dirs exist\n     createRootDir(znodeWorkingPath);\n     createRootDir(zkRootNodePath);\n+    if (HAUtil.isHAEnabled(getConfig())){\n+      fence();\n+    }\n     createRootDir(rmDTSecretManagerRoot);\n     createRootDir(rmAppRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDir(znodeWorkingPath);\n    createRootDir(zkRootNodePath);\n    if (HAUtil.isHAEnabled(getConfig())){\n      fence();\n    }\n    createRootDir(rmDTSecretManagerRoot);\n    createRootDir(rmAppRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,10 @@\n+  public synchronized void startInternal() throws Exception {\n+    // createConnection for future API calls\n+    createConnection();\n+\n+    // ensure root dirs exist\n+    createRootDir(znodeWorkingPath);\n+    createRootDir(zkRootNodePath);\n+    createRootDir(rmDTSecretManagerRoot);\n+    createRootDir(rmAppRoot);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void startInternal() throws Exception {\n    // createConnection for future API calls\n    createConnection();\n\n    // ensure root dirs exist\n    createRootDir(znodeWorkingPath);\n    createRootDir(zkRootNodePath);\n    createRootDir(rmDTSecretManagerRoot);\n    createRootDir(rmAppRoot);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}