{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsVolumeList.java",
  "functionName": "handleVolumeFailures",
  "functionId": "handleVolumeFailures___failedVolumes-Set__FsVolumeSpi__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
  "functionStartLine": 239,
  "functionEndLine": 257,
  "numCommitsSeen": 42,
  "timeTaken": 1816,
  "changeHistory": [
    "f678080dbd25a218e0406463a3c3a1fc03680702"
  ],
  "changeHistoryShort": {
    "f678080dbd25a218e0406463a3c3a1fc03680702": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f678080dbd25a218e0406463a3c3a1fc03680702": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11182. Update DataNode to use DatasetVolumeChecker. Contributed by Arpit Agarwal.\n",
      "commitDate": "20/12/16 1:53 PM",
      "commitName": "f678080dbd25a218e0406463a3c3a1fc03680702",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,19 @@\n+  void handleVolumeFailures(Set\u003cFsVolumeSpi\u003e failedVolumes) {\n+    try (AutoCloseableLock lock \u003d checkDirsLock.acquire()) {\n+\n+      for(FsVolumeSpi vol : failedVolumes) {\n+        FsVolumeImpl fsv \u003d (FsVolumeImpl) vol;\n+        try (FsVolumeReference ref \u003d fsv.obtainReference()) {\n+          addVolumeFailureInfo(fsv);\n+          removeVolume(fsv);\n+        } catch (ClosedChannelException e) {\n+          FsDatasetImpl.LOG.debug(\"Caught exception when obtaining \" +\n+            \"reference count on closed volume\", e);\n+        } catch (IOException e) {\n+          FsDatasetImpl.LOG.error(\"Unexpected IOException\", e);\n+        }\n+      }\n+      \n+      waitVolumeRemoved(5000, checkDirsLockCondition);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void handleVolumeFailures(Set\u003cFsVolumeSpi\u003e failedVolumes) {\n    try (AutoCloseableLock lock \u003d checkDirsLock.acquire()) {\n\n      for(FsVolumeSpi vol : failedVolumes) {\n        FsVolumeImpl fsv \u003d (FsVolumeImpl) vol;\n        try (FsVolumeReference ref \u003d fsv.obtainReference()) {\n          addVolumeFailureInfo(fsv);\n          removeVolume(fsv);\n        } catch (ClosedChannelException e) {\n          FsDatasetImpl.LOG.debug(\"Caught exception when obtaining \" +\n            \"reference count on closed volume\", e);\n        } catch (IOException e) {\n          FsDatasetImpl.LOG.error(\"Unexpected IOException\", e);\n        }\n      }\n      \n      waitVolumeRemoved(5000, checkDirsLockCondition);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java"
    }
  }
}