{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FTPFileSystem.java",
  "functionName": "mkdirs",
  "functionId": "mkdirs___client-FTPClient__file-Path__permission-FsPermission",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
  "functionStartLine": 590,
  "functionEndLine": 610,
  "numCommitsSeen": 25,
  "timeTaken": 1432,
  "changeHistory": [
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
    "6afabd7e573ea436186f150753833936f52d2d00",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": "Ybodychange",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": "Ybodychange",
    "6afabd7e573ea436186f150753833936f52d2d00": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:04 AM",
      "commitName": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "09/01/13 3:30 PM",
      "commitNameOld": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 539.52,
      "commitsBetweenForRepo": 3454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n       throws IOException {\n     boolean created \u003d true;\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     String pathName \u003d absolute.getName();\n     if (!exists(client, absolute)) {\n       Path parent \u003d absolute.getParent();\n       created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n           .getDirDefault()));\n       if (created) {\n         String parentDir \u003d parent.toUri().getPath();\n         client.changeWorkingDirectory(parentDir);\n         created \u003d created \u0026\u0026 client.makeDirectory(pathName);\n       }\n     } else if (isFile(client, absolute)) {\n-      throw new IOException(String.format(\n+      throw new ParentNotDirectoryException(String.format(\n           \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n     }\n     return created;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDirDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026\u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new ParentNotDirectoryException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9155. FsPermission should have different default value, 777 for directory and 666 for file. Contributed by Binglin Chang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 3:30 PM",
      "commitName": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "16/09/12 6:39 PM",
      "commitNameOld": "6afabd7e573ea436186f150753833936f52d2d00",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 114.91,
      "commitsBetweenForRepo": 558,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n       throws IOException {\n     boolean created \u003d true;\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     String pathName \u003d absolute.getName();\n     if (!exists(client, absolute)) {\n       Path parent \u003d absolute.getParent();\n       created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n-          .getDefault()));\n+          .getDirDefault()));\n       if (created) {\n         String parentDir \u003d parent.toUri().getPath();\n         client.changeWorkingDirectory(parentDir);\n         created \u003d created \u0026\u0026 client.makeDirectory(pathName);\n       }\n     } else if (isFile(client, absolute)) {\n       throw new IOException(String.format(\n           \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n     }\n     return created;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDirDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026\u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new IOException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "6afabd7e573ea436186f150753833936f52d2d00": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8819. Incorrectly \u0026 is used instead of \u0026\u0026 in some file system implementations. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1386451 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/09/12 6:39 PM",
      "commitName": "6afabd7e573ea436186f150753833936f52d2d00",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 23.02,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n       throws IOException {\n     boolean created \u003d true;\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     String pathName \u003d absolute.getName();\n     if (!exists(client, absolute)) {\n       Path parent \u003d absolute.getParent();\n       created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n           .getDefault()));\n       if (created) {\n         String parentDir \u003d parent.toUri().getPath();\n         client.changeWorkingDirectory(parentDir);\n-        created \u003d created \u0026 client.makeDirectory(pathName);\n+        created \u003d created \u0026\u0026 client.makeDirectory(pathName);\n       }\n     } else if (isFile(client, absolute)) {\n       throw new IOException(String.format(\n           \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n     }\n     return created;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026\u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new IOException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new IOException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new IOException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new IOException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n+      throws IOException {\n+    boolean created \u003d true;\n+    Path workDir \u003d new Path(client.printWorkingDirectory());\n+    Path absolute \u003d makeAbsolute(workDir, file);\n+    String pathName \u003d absolute.getName();\n+    if (!exists(client, absolute)) {\n+      Path parent \u003d absolute.getParent();\n+      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n+          .getDefault()));\n+      if (created) {\n+        String parentDir \u003d parent.toUri().getPath();\n+        client.changeWorkingDirectory(parentDir);\n+        created \u003d created \u0026 client.makeDirectory(pathName);\n+      }\n+    } else if (isFile(client, absolute)) {\n+      throw new IOException(String.format(\n+          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n+    }\n+    return created;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean mkdirs(FTPClient client, Path file, FsPermission permission)\n      throws IOException {\n    boolean created \u003d true;\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.getName();\n    if (!exists(client, absolute)) {\n      Path parent \u003d absolute.getParent();\n      created \u003d (parent \u003d\u003d null || mkdirs(client, parent, FsPermission\n          .getDefault()));\n      if (created) {\n        String parentDir \u003d parent.toUri().getPath();\n        client.changeWorkingDirectory(parentDir);\n        created \u003d created \u0026 client.makeDirectory(pathName);\n      }\n    } else if (isFile(client, absolute)) {\n      throw new IOException(String.format(\n          \"Can\u0027t make directory for path %s since it is a file.\", absolute));\n    }\n    return created;\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
    }
  }
}