{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageLoader.java",
  "functionName": "loadStringTable",
  "functionId": "loadStringTable___in-InputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
  "functionStartLine": 253,
  "functionEndLine": 266,
  "numCommitsSeen": 22,
  "timeTaken": 2508,
  "changeHistory": [
    "b60ca37914b22550e3630fa02742d40697decb31",
    "caf7298e49f646a40023af999f62d61846fde5e2",
    "1f5b42ac4881b734c799bfb527884c0d117929bd",
    "54c1daa580e1cceee541be86fc2b694fa1be26df"
  ],
  "changeHistoryShort": {
    "b60ca37914b22550e3630fa02742d40697decb31": "Ymultichange(Yreturntypechange,Ybodychange)",
    "caf7298e49f646a40023af999f62d61846fde5e2": "Ymodifierchange",
    "1f5b42ac4881b734c799bfb527884c0d117929bd": "Ymultichange(Yreturntypechange,Ybodychange)",
    "54c1daa580e1cceee541be86fc2b694fa1be26df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b60ca37914b22550e3630fa02742d40697decb31": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
      "commitDate": "15/10/18 3:18 AM",
      "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
          "commitDate": "15/10/18 3:18 AM",
          "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 38.52,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  static String[] loadStringTable(InputStream in) throws\n-  IOException {\n+  static SerialNumberManager.StringTable loadStringTable(InputStream in)\n+        throws IOException {\n     FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n         .parseDelimitedFrom(in);\n     LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n-    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n+    SerialNumberManager.StringTable stringTable \u003d\n+        SerialNumberManager.newStringTable(s.getNumEntry(), s.getMaskBits());\n     for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n       FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n           .StringTableSection.Entry.parseDelimitedFrom(in);\n-      stringTable[e.getId()] \u003d e.getStr();\n+      stringTable.put(e.getId(), e.getStr());\n     }\n     return stringTable;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static SerialNumberManager.StringTable loadStringTable(InputStream in)\n        throws IOException {\n    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n        .parseDelimitedFrom(in);\n    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n    SerialNumberManager.StringTable stringTable \u003d\n        SerialNumberManager.newStringTable(s.getNumEntry(), s.getMaskBits());\n    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n          .StringTableSection.Entry.parseDelimitedFrom(in);\n      stringTable.put(e.getId(), e.getStr());\n    }\n    return stringTable;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {
            "oldValue": "String[]",
            "newValue": "SerialNumberManager.StringTable"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
          "commitDate": "15/10/18 3:18 AM",
          "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 38.52,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  static String[] loadStringTable(InputStream in) throws\n-  IOException {\n+  static SerialNumberManager.StringTable loadStringTable(InputStream in)\n+        throws IOException {\n     FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n         .parseDelimitedFrom(in);\n     LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n-    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n+    SerialNumberManager.StringTable stringTable \u003d\n+        SerialNumberManager.newStringTable(s.getNumEntry(), s.getMaskBits());\n     for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n       FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n           .StringTableSection.Entry.parseDelimitedFrom(in);\n-      stringTable[e.getId()] \u003d e.getStr();\n+      stringTable.put(e.getId(), e.getStr());\n     }\n     return stringTable;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static SerialNumberManager.StringTable loadStringTable(InputStream in)\n        throws IOException {\n    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n        .parseDelimitedFrom(in);\n    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n    SerialNumberManager.StringTable stringTable \u003d\n        SerialNumberManager.newStringTable(s.getNumEntry(), s.getMaskBits());\n    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n          .StringTableSection.Entry.parseDelimitedFrom(in);\n      stringTable.put(e.getId(), e.getStr());\n    }\n    return stringTable;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "caf7298e49f646a40023af999f62d61846fde5e2": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6673. Add delimited format support to PB OIV tool. Contributed by Eddy Xu.\n",
      "commitDate": "28/01/15 12:36 PM",
      "commitName": "caf7298e49f646a40023af999f62d61846fde5e2",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 48.0,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  private static String[] loadStringTable(InputStream in) throws\n+  static String[] loadStringTable(InputStream in) throws\n   IOException {\n     FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n         .parseDelimitedFrom(in);\n     LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n     String[] stringTable \u003d new String[s.getNumEntry() + 1];\n     for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n       FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n           .StringTableSection.Entry.parseDelimitedFrom(in);\n       stringTable[e.getId()] \u003d e.getStr();\n     }\n     return stringTable;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String[] loadStringTable(InputStream in) throws\n  IOException {\n    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n        .parseDelimitedFrom(in);\n    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n          .StringTableSection.Entry.parseDelimitedFrom(in);\n      stringTable[e.getId()] \u003d e.getStr();\n    }\n    return stringTable;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[static]"
      }
    },
    "1f5b42ac4881b734c799bfb527884c0d117929bd": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
      "commitDate": "01/10/14 10:53 AM",
      "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "01/10/14 10:53 AM",
          "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/14 10:27 PM",
          "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private static void loadStringTable(InputStream in) throws IOException {\n+  private static String[] loadStringTable(InputStream in) throws\n+  IOException {\n     FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n         .parseDelimitedFrom(in);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Found \" + s.getNumEntry() + \" strings in string section\");\n-    }\n-    stringTable \u003d new String[s.getNumEntry() + 1];\n+    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n+    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n     for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n       FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n           .StringTableSection.Entry.parseDelimitedFrom(in);\n       stringTable[e.getId()] \u003d e.getStr();\n-      if (LOG.isTraceEnabled()) {\n-        LOG.trace(\"Loaded string \" + e.getStr());\n-      }\n     }\n+    return stringTable;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String[] loadStringTable(InputStream in) throws\n  IOException {\n    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n        .parseDelimitedFrom(in);\n    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n          .StringTableSection.Entry.parseDelimitedFrom(in);\n      stringTable[e.getId()] \u003d e.getStr();\n    }\n    return stringTable;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "String[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "01/10/14 10:53 AM",
          "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/14 10:27 PM",
          "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private static void loadStringTable(InputStream in) throws IOException {\n+  private static String[] loadStringTable(InputStream in) throws\n+  IOException {\n     FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n         .parseDelimitedFrom(in);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Found \" + s.getNumEntry() + \" strings in string section\");\n-    }\n-    stringTable \u003d new String[s.getNumEntry() + 1];\n+    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n+    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n     for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n       FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n           .StringTableSection.Entry.parseDelimitedFrom(in);\n       stringTable[e.getId()] \u003d e.getStr();\n-      if (LOG.isTraceEnabled()) {\n-        LOG.trace(\"Loaded string \" + e.getStr());\n-      }\n     }\n+    return stringTable;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String[] loadStringTable(InputStream in) throws\n  IOException {\n    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n        .parseDelimitedFrom(in);\n    LOG.info(\"Loading \" + s.getNumEntry() + \" strings\");\n    String[] stringTable \u003d new String[s.getNumEntry() + 1];\n    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n          .StringTableSection.Entry.parseDelimitedFrom(in);\n      stringTable[e.getId()] \u003d e.getStr();\n    }\n    return stringTable;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "54c1daa580e1cceee541be86fc2b694fa1be26df": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5978. Create a tool to take fsimage and expose read-only WebHDFS API. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/14 11:15 AM",
      "commitName": "54c1daa580e1cceee541be86fc2b694fa1be26df",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,16 @@\n+  private static void loadStringTable(InputStream in) throws IOException {\n+    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n+        .parseDelimitedFrom(in);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Found \" + s.getNumEntry() + \" strings in string section\");\n+    }\n+    stringTable \u003d new String[s.getNumEntry() + 1];\n+    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n+      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n+          .StringTableSection.Entry.parseDelimitedFrom(in);\n+      stringTable[e.getId()] \u003d e.getStr();\n+      if (LOG.isTraceEnabled()) {\n+        LOG.trace(\"Loaded string \" + e.getStr());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadStringTable(InputStream in) throws IOException {\n    FsImageProto.StringTableSection s \u003d FsImageProto.StringTableSection\n        .parseDelimitedFrom(in);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Found \" + s.getNumEntry() + \" strings in string section\");\n    }\n    stringTable \u003d new String[s.getNumEntry() + 1];\n    for (int i \u003d 0; i \u003c s.getNumEntry(); ++i) {\n      FsImageProto.StringTableSection.Entry e \u003d FsImageProto\n          .StringTableSection.Entry.parseDelimitedFrom(in);\n      stringTable[e.getId()] \u003d e.getStr();\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Loaded string \" + e.getStr());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java"
    }
  }
}