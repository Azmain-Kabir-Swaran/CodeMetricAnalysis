{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AllocateResponsePBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
  "functionStartLine": 129,
  "functionEndLine": 193,
  "numCommitsSeen": 35,
  "timeTaken": 10038,
  "changeHistory": [
    "06eb63e64b05e2e8bb8a76c15360ab0495f11317",
    "fedabcad42067ac7dd24de40fab6be2d3485a540",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "f9da5cdb2b2dd071fd60fc01ea1edf0f79c0819b",
    "dfe2cb849fcb273d32e840d8562eaaee904af054",
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
    "9c4168f45ab66ac42cf836040db04b45437db66b",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "769a0bd8314cd7317c083a9b74abf47242acb58c",
    "1858c7e52e709bb5ebeab6c742d9ffa2abae1708",
    "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c",
    "1bd345d6e3855ab330963efd32e0fac102e61d1a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "06eb63e64b05e2e8bb8a76c15360ab0495f11317": "Ybodychange",
    "fedabcad42067ac7dd24de40fab6be2d3485a540": "Ybodychange",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ybodychange",
    "f9da5cdb2b2dd071fd60fc01ea1edf0f79c0819b": "Ybodychange",
    "dfe2cb849fcb273d32e840d8562eaaee904af054": "Ybodychange",
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb": "Ybodychange",
    "9c4168f45ab66ac42cf836040db04b45437db66b": "Ybodychange",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "769a0bd8314cd7317c083a9b74abf47242acb58c": "Ybodychange",
    "1858c7e52e709bb5ebeab6c742d9ffa2abae1708": "Ybodychange",
    "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c": "Ybodychange",
    "1bd345d6e3855ab330963efd32e0fac102e61d1a": "Ymultichange(Ymodifierchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06eb63e64b05e2e8bb8a76c15360ab0495f11317": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7669. API and interface modifications for placement constraint processor. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "06eb63e64b05e2e8bb8a76c15360ab0495f11317",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "27/11/17 10:19 AM",
      "commitNameOld": "fedabcad42067ac7dd24de40fab6be2d3485a540",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 64.63,
      "commitsBetweenForRepo": 372,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,65 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n+    if (this.rejectedRequests !\u003d null) {\n+      builder.clearRejectedSchedulingRequests();\n+      Iterable\u003cYarnProtos.RejectedSchedulingRequestProto\u003e iterable \u003d\n+          getRejectedSchedulingRequestsProtoIterable(\n+              this.rejectedRequests);\n+      builder.addAllRejectedSchedulingRequests(iterable);\n+    }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n     if (this.updatedContainers !\u003d null) {\n       builder.clearUpdatedContainers();\n       Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n           getUpdatedContainerProtoIterable(this.updatedContainers);\n       builder.addAllUpdatedContainers(iterable);\n     }\n     if (this.updateErrors !\u003d null) {\n       builder.clearUpdateErrors();\n       Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n           getUpdateErrorsIterable(this.updateErrors);\n       builder.addAllUpdateErrors(iterable);\n     }\n     if (this.amrmToken !\u003d null) {\n       builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n     }\n     if (this.collectorInfo !\u003d null) {\n       builder.setCollectorInfo(convertToProtoFormat(this.collectorInfo));\n     }\n     if (this.appPriority !\u003d null) {\n       builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n     }\n     if (this.containersFromPreviousAttempts !\u003d null) {\n       builder.clearContainersFromPreviousAttempts();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.containersFromPreviousAttempts);\n       builder.addAllContainersFromPreviousAttempts(iterable);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.rejectedRequests !\u003d null) {\n      builder.clearRejectedSchedulingRequests();\n      Iterable\u003cYarnProtos.RejectedSchedulingRequestProto\u003e iterable \u003d\n          getRejectedSchedulingRequestsProtoIterable(\n              this.rejectedRequests);\n      builder.addAllRejectedSchedulingRequests(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.updatedContainers !\u003d null) {\n      builder.clearUpdatedContainers();\n      Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n          getUpdatedContainerProtoIterable(this.updatedContainers);\n      builder.addAllUpdatedContainers(iterable);\n    }\n    if (this.updateErrors !\u003d null) {\n      builder.clearUpdateErrors();\n      Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n          getUpdateErrorsIterable(this.updateErrors);\n      builder.addAllUpdateErrors(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n    if (this.collectorInfo !\u003d null) {\n      builder.setCollectorInfo(convertToProtoFormat(this.collectorInfo));\n    }\n    if (this.appPriority !\u003d null) {\n      builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n    }\n    if (this.containersFromPreviousAttempts !\u003d null) {\n      builder.clearContainersFromPreviousAttempts();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.containersFromPreviousAttempts);\n      builder.addAllContainersFromPreviousAttempts(iterable);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "fedabcad42067ac7dd24de40fab6be2d3485a540": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6168. Restarted RM may not inform AM about all existing containers. Contributed by Chandni Singh\n",
      "commitDate": "27/11/17 10:19 AM",
      "commitName": "fedabcad42067ac7dd24de40fab6be2d3485a540",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 89.51,
      "commitsBetweenForRepo": 760,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,58 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n     if (this.updatedContainers !\u003d null) {\n       builder.clearUpdatedContainers();\n       Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n           getUpdatedContainerProtoIterable(this.updatedContainers);\n       builder.addAllUpdatedContainers(iterable);\n     }\n     if (this.updateErrors !\u003d null) {\n       builder.clearUpdateErrors();\n       Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n           getUpdateErrorsIterable(this.updateErrors);\n       builder.addAllUpdateErrors(iterable);\n     }\n     if (this.amrmToken !\u003d null) {\n       builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n     }\n     if (this.collectorInfo !\u003d null) {\n       builder.setCollectorInfo(convertToProtoFormat(this.collectorInfo));\n     }\n     if (this.appPriority !\u003d null) {\n       builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n     }\n+    if (this.containersFromPreviousAttempts !\u003d null) {\n+      builder.clearContainersFromPreviousAttempts();\n+      Iterable\u003cContainerProto\u003e iterable \u003d\n+          getContainerProtoIterable(this.containersFromPreviousAttempts);\n+      builder.addAllContainersFromPreviousAttempts(iterable);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.updatedContainers !\u003d null) {\n      builder.clearUpdatedContainers();\n      Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n          getUpdatedContainerProtoIterable(this.updatedContainers);\n      builder.addAllUpdatedContainers(iterable);\n    }\n    if (this.updateErrors !\u003d null) {\n      builder.clearUpdateErrors();\n      Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n          getUpdateErrorsIterable(this.updateErrors);\n      builder.addAllUpdateErrors(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n    if (this.collectorInfo !\u003d null) {\n      builder.setCollectorInfo(convertToProtoFormat(this.collectorInfo));\n    }\n    if (this.appPriority !\u003d null) {\n      builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n    }\n    if (this.containersFromPreviousAttempts !\u003d null) {\n      builder.clearContainersFromPreviousAttempts();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.containersFromPreviousAttempts);\n      builder.addAllContainersFromPreviousAttempts(iterable);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "08/06/17 10:08 AM",
      "commitNameOld": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 82.54,
      "commitsBetweenForRepo": 530,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,52 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n     if (this.updatedContainers !\u003d null) {\n       builder.clearUpdatedContainers();\n       Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n           getUpdatedContainerProtoIterable(this.updatedContainers);\n       builder.addAllUpdatedContainers(iterable);\n     }\n     if (this.updateErrors !\u003d null) {\n       builder.clearUpdateErrors();\n       Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n           getUpdateErrorsIterable(this.updateErrors);\n       builder.addAllUpdateErrors(iterable);\n     }\n     if (this.amrmToken !\u003d null) {\n       builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n     }\n+    if (this.collectorInfo !\u003d null) {\n+      builder.setCollectorInfo(convertToProtoFormat(this.collectorInfo));\n+    }\n     if (this.appPriority !\u003d null) {\n       builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.updatedContainers !\u003d null) {\n      builder.clearUpdatedContainers();\n      Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n          getUpdatedContainerProtoIterable(this.updatedContainers);\n      builder.addAllUpdatedContainers(iterable);\n    }\n    if (this.updateErrors !\u003d null) {\n      builder.clearUpdateErrors();\n      Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n          getUpdateErrorsIterable(this.updateErrors);\n      builder.addAllUpdateErrors(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n    if (this.collectorInfo !\u003d null) {\n      builder.setCollectorInfo(convertToProtoFormat(this.collectorInfo));\n    }\n    if (this.appPriority !\u003d null) {\n      builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 51.3,
      "commitsBetweenForRepo": 452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n-    if (this.increasedContainers !\u003d null) {\n-      builder.clearIncreasedContainers();\n-      Iterable\u003cContainerProto\u003e iterable \u003d\n-          getContainerProtoIterable(this.increasedContainers);\n-      builder.addAllIncreasedContainers(iterable);\n+    if (this.updatedContainers !\u003d null) {\n+      builder.clearUpdatedContainers();\n+      Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n+          getUpdatedContainerProtoIterable(this.updatedContainers);\n+      builder.addAllUpdatedContainers(iterable);\n     }\n-    if (this.decreasedContainers !\u003d null) {\n-      builder.clearDecreasedContainers();\n-      Iterable\u003cContainerProto\u003e iterable \u003d\n-          getContainerProtoIterable(this.decreasedContainers);\n-      builder.addAllDecreasedContainers(iterable);\n+    if (this.updateErrors !\u003d null) {\n+      builder.clearUpdateErrors();\n+      Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n+          getUpdateErrorsIterable(this.updateErrors);\n+      builder.addAllUpdateErrors(iterable);\n     }\n     if (this.amrmToken !\u003d null) {\n       builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n     }\n     if (this.appPriority !\u003d null) {\n       builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.updatedContainers !\u003d null) {\n      builder.clearUpdatedContainers();\n      Iterable\u003cYarnServiceProtos.UpdatedContainerProto\u003e iterable \u003d\n          getUpdatedContainerProtoIterable(this.updatedContainers);\n      builder.addAllUpdatedContainers(iterable);\n    }\n    if (this.updateErrors !\u003d null) {\n      builder.clearUpdateErrors();\n      Iterable\u003cYarnServiceProtos.UpdateContainerErrorProto\u003e iterable \u003d\n          getUpdateErrorsIterable(this.updateErrors);\n      builder.addAllUpdateErrors(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n    if (this.appPriority !\u003d null) {\n      builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "f9da5cdb2b2dd071fd60fc01ea1edf0f79c0819b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4170. AM need to be notified with priority in AllocateResponse. Contributed by Sunil G\n",
      "commitDate": "16/10/15 3:26 PM",
      "commitName": "f9da5cdb2b2dd071fd60fc01ea1edf0f79c0819b",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "dfe2cb849fcb273d32e840d8562eaaee904af054",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 23.08,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,49 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n     if (this.increasedContainers !\u003d null) {\n       builder.clearIncreasedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.increasedContainers);\n       builder.addAllIncreasedContainers(iterable);\n     }\n     if (this.decreasedContainers !\u003d null) {\n       builder.clearDecreasedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.decreasedContainers);\n       builder.addAllDecreasedContainers(iterable);\n     }\n     if (this.amrmToken !\u003d null) {\n       builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n     }\n+    if (this.appPriority !\u003d null) {\n+      builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.increasedContainers !\u003d null) {\n      builder.clearIncreasedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.increasedContainers);\n      builder.addAllIncreasedContainers(iterable);\n    }\n    if (this.decreasedContainers !\u003d null) {\n      builder.clearDecreasedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.decreasedContainers);\n      builder.addAllDecreasedContainers(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n    if (this.appPriority !\u003d null) {\n      builder.setApplicationPriority(convertToProtoFormat(this.appPriority));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "dfe2cb849fcb273d32e840d8562eaaee904af054": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3866. AM-RM protocol changes to support container resizing. Contributed by Meng Ding\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "dfe2cb849fcb273d32e840d8562eaaee904af054",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/08/14 2:38 PM",
      "commitNameOld": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
      "commitAuthorOld": "Xuan Gong",
      "daysBetweenCommits": 410.95,
      "commitsBetweenForRepo": 3308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n     if (this.increasedContainers !\u003d null) {\n       builder.clearIncreasedContainers();\n-      Iterable\u003cContainerResourceIncreaseProto\u003e iterable \u003d\n-          getIncreaseProtoIterable(this.increasedContainers);\n+      Iterable\u003cContainerProto\u003e iterable \u003d\n+          getContainerProtoIterable(this.increasedContainers);\n       builder.addAllIncreasedContainers(iterable);\n     }\n     if (this.decreasedContainers !\u003d null) {\n       builder.clearDecreasedContainers();\n-      Iterable\u003cContainerResourceDecreaseProto\u003e iterable \u003d\n-          getChangeProtoIterable(this.decreasedContainers);\n+      Iterable\u003cContainerProto\u003e iterable \u003d\n+          getContainerProtoIterable(this.decreasedContainers);\n       builder.addAllDecreasedContainers(iterable);\n     }\n     if (this.amrmToken !\u003d null) {\n       builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.increasedContainers !\u003d null) {\n      builder.clearIncreasedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.increasedContainers);\n      builder.addAllIncreasedContainers(iterable);\n    }\n    if (this.decreasedContainers !\u003d null) {\n      builder.clearDecreasedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.decreasedContainers);\n      builder.addAllDecreasedContainers(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2212: ApplicationMaster needs to find a way to update the AMRMToken periodically. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616892 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:38 PM",
      "commitName": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
      "commitAuthor": "Xuan Gong",
      "commitDateOld": "09/12/13 9:44 AM",
      "commitNameOld": "9c4168f45ab66ac42cf836040db04b45437db66b",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 242.16,
      "commitsBetweenForRepo": 1654,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,46 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n     if (this.increasedContainers !\u003d null) {\n       builder.clearIncreasedContainers();\n       Iterable\u003cContainerResourceIncreaseProto\u003e iterable \u003d\n           getIncreaseProtoIterable(this.increasedContainers);\n       builder.addAllIncreasedContainers(iterable);\n     }\n     if (this.decreasedContainers !\u003d null) {\n       builder.clearDecreasedContainers();\n       Iterable\u003cContainerResourceDecreaseProto\u003e iterable \u003d\n           getChangeProtoIterable(this.decreasedContainers);\n       builder.addAllDecreasedContainers(iterable);\n     }\n+    if (this.amrmToken !\u003d null) {\n+      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.increasedContainers !\u003d null) {\n      builder.clearIncreasedContainers();\n      Iterable\u003cContainerResourceIncreaseProto\u003e iterable \u003d\n          getIncreaseProtoIterable(this.increasedContainers);\n      builder.addAllIncreasedContainers(iterable);\n    }\n    if (this.decreasedContainers !\u003d null) {\n      builder.clearDecreasedContainers();\n      Iterable\u003cContainerResourceDecreaseProto\u003e iterable \u003d\n          getChangeProtoIterable(this.decreasedContainers);\n      builder.addAllDecreasedContainers(iterable);\n    }\n    if (this.amrmToken !\u003d null) {\n      builder.setAmRmToken(convertToProtoFormat(this.amrmToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "9c4168f45ab66ac42cf836040db04b45437db66b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1448. AM-RM protocol changes to support container resizing (Wangda Tan via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1549627 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/13 9:44 AM",
      "commitName": "9c4168f45ab66ac42cf836040db04b45437db66b",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "15/08/13 12:20 AM",
      "commitNameOld": "b776bd46aed2f5b3aa226af36c0081a7d1f69eda",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 116.43,
      "commitsBetweenForRepo": 707,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,43 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n-          getProtoIterable(this.allocatedContainers);\n+          getContainerProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n       Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n+    if (this.increasedContainers !\u003d null) {\n+      builder.clearIncreasedContainers();\n+      Iterable\u003cContainerResourceIncreaseProto\u003e iterable \u003d\n+          getIncreaseProtoIterable(this.increasedContainers);\n+      builder.addAllIncreasedContainers(iterable);\n+    }\n+    if (this.decreasedContainers !\u003d null) {\n+      builder.clearDecreasedContainers();\n+      Iterable\u003cContainerResourceDecreaseProto\u003e iterable \u003d\n+          getChangeProtoIterable(this.decreasedContainers);\n+      builder.addAllDecreasedContainers(iterable);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getContainerProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n    if (this.increasedContainers !\u003d null) {\n      builder.clearIncreasedContainers();\n      Iterable\u003cContainerResourceIncreaseProto\u003e iterable \u003d\n          getIncreaseProtoIterable(this.increasedContainers);\n      builder.addAllIncreasedContainers(iterable);\n    }\n    if (this.decreasedContainers !\u003d null) {\n      builder.clearDecreasedContainers();\n      Iterable\u003cContainerResourceDecreaseProto\u003e iterable \u003d\n          getChangeProtoIterable(this.decreasedContainers);\n      builder.addAllDecreasedContainers(iterable);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java"
      }
    },
    "769a0bd8314cd7317c083a9b74abf47242acb58c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-693. Modified RM to send NMTokens on allocate call so that AMs can then use them for authentication with NMs. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:11 PM",
      "commitName": "769a0bd8314cd7317c083a9b74abf47242acb58c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/06/13 4:33 PM",
      "commitNameOld": "9fcfbf5f51f2557566694377f94a556226585d68",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 9.15,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (nmTokens !\u003d null) {\n       builder.clearNmTokens();\n-      Iterable\u003cTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n+      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n       builder.addAllNmTokens(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cNMTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "1858c7e52e709bb5ebeab6c742d9ffa2abae1708": {
      "type": "Ybodychange",
      "commitMessage": "YARN-714. Added NMTokens to be sent to AMs as part of heart-beat response. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487704 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 6:57 PM",
      "commitName": "1858c7e52e709bb5ebeab6c742d9ffa2abae1708",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/05/13 11:12 PM",
      "commitNameOld": "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 22.82,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,31 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n+    if (nmTokens !\u003d null) {\n+      builder.clearNmTokens();\n+      Iterable\u003cTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n+      builder.addAllNmTokens(iterable);\n+    }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n     if (this.preempt !\u003d null) {\n       builder.setPreempt(convertToProtoFormat(this.preempt));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (nmTokens !\u003d null) {\n      builder.clearNmTokens();\n      Iterable\u003cTokenProto\u003e iterable \u003d getTokenProtoIterable(nmTokens);\n      builder.addAllNmTokens(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-45. Add protocol for schedulers to request containers back from\nApplicationMasters. Contributed by Carlo Curino and Chris Douglas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1479771 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 11:12 PM",
      "commitName": "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "20/03/13 1:44 PM",
      "commitNameOld": "1bd345d6e3855ab330963efd32e0fac102e61d1a",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 47.39,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.allocatedContainers !\u003d null) {\n       builder.clearAllocatedContainers();\n       Iterable\u003cContainerProto\u003e iterable \u003d\n           getProtoIterable(this.allocatedContainers);\n       builder.addAllAllocatedContainers(iterable);\n     }\n     if (this.completedContainersStatuses !\u003d null) {\n       builder.clearCompletedContainerStatuses();\n       Iterable\u003cContainerStatusProto\u003e iterable \u003d\n           getContainerStatusProtoIterable(this.completedContainersStatuses);\n       builder.addAllCompletedContainerStatuses(iterable);\n     }\n     if (this.updatedNodes !\u003d null) {\n       builder.clearUpdatedNodes();\n       Iterable\u003cNodeReportProto\u003e iterable \u003d\n           getNodeReportProtoIterable(this.updatedNodes);\n       builder.addAllUpdatedNodes(iterable);\n     }\n     if (this.limit !\u003d null) {\n       builder.setLimit(convertToProtoFormat(this.limit));\n     }\n+    if (this.preempt !\u003d null) {\n+      builder.setPreempt(convertToProtoFormat(this.preempt));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n    if (this.preempt !\u003d null) {\n      builder.setPreempt(convertToProtoFormat(this.preempt));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {}
    },
    "1bd345d6e3855ab330963efd32e0fac102e61d1a": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-396. Rationalize AllocateResponse in RM Scheduler API. Contributed by Zhijie Shen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/13 1:44 PM",
      "commitName": "1bd345d6e3855ab330963efd32e0fac102e61d1a",
      "commitAuthor": "Hitesh Shah",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-396. Rationalize AllocateResponse in RM Scheduler API. Contributed by Zhijie Shen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459040 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/13 1:44 PM",
          "commitName": "1bd345d6e3855ab330963efd32e0fac102e61d1a",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 224.64,
          "commitsBetweenForRepo": 1145,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,23 @@\n-  private void mergeLocalToBuilder() {\n-    if (this.amResponse !\u003d null) {\n-      builder.setAMResponse(convertToProtoFormat(this.amResponse));\n+  private synchronized void mergeLocalToBuilder() {\n+    if (this.allocatedContainers !\u003d null) {\n+      builder.clearAllocatedContainers();\n+      Iterable\u003cContainerProto\u003e iterable \u003d\n+          getProtoIterable(this.allocatedContainers);\n+      builder.addAllAllocatedContainers(iterable);\n+    }\n+    if (this.completedContainersStatuses !\u003d null) {\n+      builder.clearCompletedContainerStatuses();\n+      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n+          getContainerStatusProtoIterable(this.completedContainersStatuses);\n+      builder.addAllCompletedContainerStatuses(iterable);\n+    }\n+    if (this.updatedNodes !\u003d null) {\n+      builder.clearUpdatedNodes();\n+      Iterable\u003cNodeReportProto\u003e iterable \u003d\n+          getNodeReportProtoIterable(this.updatedNodes);\n+      builder.addAllUpdatedNodes(iterable);\n+    }\n+    if (this.limit !\u003d null) {\n+      builder.setLimit(convertToProtoFormat(this.limit));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-396. Rationalize AllocateResponse in RM Scheduler API. Contributed by Zhijie Shen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459040 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/13 1:44 PM",
          "commitName": "1bd345d6e3855ab330963efd32e0fac102e61d1a",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 224.64,
          "commitsBetweenForRepo": 1145,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,23 @@\n-  private void mergeLocalToBuilder() {\n-    if (this.amResponse !\u003d null) {\n-      builder.setAMResponse(convertToProtoFormat(this.amResponse));\n+  private synchronized void mergeLocalToBuilder() {\n+    if (this.allocatedContainers !\u003d null) {\n+      builder.clearAllocatedContainers();\n+      Iterable\u003cContainerProto\u003e iterable \u003d\n+          getProtoIterable(this.allocatedContainers);\n+      builder.addAllAllocatedContainers(iterable);\n+    }\n+    if (this.completedContainersStatuses !\u003d null) {\n+      builder.clearCompletedContainerStatuses();\n+      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n+          getContainerStatusProtoIterable(this.completedContainersStatuses);\n+      builder.addAllCompletedContainerStatuses(iterable);\n+    }\n+    if (this.updatedNodes !\u003d null) {\n+      builder.clearUpdatedNodes();\n+      Iterable\u003cNodeReportProto\u003e iterable \u003d\n+          getNodeReportProtoIterable(this.updatedNodes);\n+      builder.addAllUpdatedNodes(iterable);\n+    }\n+    if (this.limit !\u003d null) {\n+      builder.setLimit(convertToProtoFormat(this.limit));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.allocatedContainers !\u003d null) {\n      builder.clearAllocatedContainers();\n      Iterable\u003cContainerProto\u003e iterable \u003d\n          getProtoIterable(this.allocatedContainers);\n      builder.addAllAllocatedContainers(iterable);\n    }\n    if (this.completedContainersStatuses !\u003d null) {\n      builder.clearCompletedContainerStatuses();\n      Iterable\u003cContainerStatusProto\u003e iterable \u003d\n          getContainerStatusProtoIterable(this.completedContainersStatuses);\n      builder.addAllCompletedContainerStatuses(iterable);\n    }\n    if (this.updatedNodes !\u003d null) {\n      builder.clearUpdatedNodes();\n      Iterable\u003cNodeReportProto\u003e iterable \u003d\n          getNodeReportProtoIterable(this.updatedNodes);\n      builder.addAllUpdatedNodes(iterable);\n    }\n    if (this.limit !\u003d null) {\n      builder.setLimit(convertToProtoFormat(this.limit));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.amResponse !\u003d null) {\n      builder.setAMResponse(convertToProtoFormat(this.amResponse));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.amResponse !\u003d null) {\n      builder.setAMResponse(convertToProtoFormat(this.amResponse));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.amResponse !\u003d null) {\n+      builder.setAMResponse(convertToProtoFormat(this.amResponse));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.amResponse !\u003d null) {\n      builder.setAMResponse(convertToProtoFormat(this.amResponse));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateResponsePBImpl.java"
    }
  }
}