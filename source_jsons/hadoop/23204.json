{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultipleOutputs.java",
  "functionName": "getRecordWriter",
  "functionId": "getRecordWriter___taskContext-TaskAttemptContext__baseFileName-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
  "functionStartLine": 474,
  "functionEndLine": 503,
  "numCommitsSeen": 8,
  "timeTaken": 4359,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized RecordWriter getRecordWriter(\n      TaskAttemptContext taskContext, String baseFileName) \n      throws IOException, InterruptedException {\n    \n    // look for record-writer in the cache\n    RecordWriter writer \u003d recordWriters.get(baseFileName);\n    \n    // If not in cache, create a new one\n    if (writer \u003d\u003d null) {\n      // get the record writer from context output format\n      FileOutputFormat.setOutputName(taskContext, baseFileName);\n      try {\n        writer \u003d ((OutputFormat) ReflectionUtils.newInstance(\n          taskContext.getOutputFormatClass(), taskContext.getConfiguration()))\n          .getRecordWriter(taskContext);\n      } catch (ClassNotFoundException e) {\n        throw new IOException(e);\n      }\n \n      // if counters are enabled, wrap the writer with context \n      // to increment counters \n      if (countersEnabled) {\n        writer \u003d new RecordWriterWithCounter(writer, baseFileName, context);\n      }\n      \n      // add the record-writer to the cache\n      recordWriters.put(baseFileName, writer);\n    }\n    return writer;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized RecordWriter getRecordWriter(\n      TaskAttemptContext taskContext, String baseFileName) \n      throws IOException, InterruptedException {\n    \n    // look for record-writer in the cache\n    RecordWriter writer \u003d recordWriters.get(baseFileName);\n    \n    // If not in cache, create a new one\n    if (writer \u003d\u003d null) {\n      // get the record writer from context output format\n      FileOutputFormat.setOutputName(taskContext, baseFileName);\n      try {\n        writer \u003d ((OutputFormat) ReflectionUtils.newInstance(\n          taskContext.getOutputFormatClass(), taskContext.getConfiguration()))\n          .getRecordWriter(taskContext);\n      } catch (ClassNotFoundException e) {\n        throw new IOException(e);\n      }\n \n      // if counters are enabled, wrap the writer with context \n      // to increment counters \n      if (countersEnabled) {\n        writer \u003d new RecordWriterWithCounter(writer, baseFileName, context);\n      }\n      \n      // add the record-writer to the cache\n      recordWriters.put(baseFileName, writer);\n    }\n    return writer;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,30 @@\n+  private synchronized RecordWriter getRecordWriter(\n+      TaskAttemptContext taskContext, String baseFileName) \n+      throws IOException, InterruptedException {\n+    \n+    // look for record-writer in the cache\n+    RecordWriter writer \u003d recordWriters.get(baseFileName);\n+    \n+    // If not in cache, create a new one\n+    if (writer \u003d\u003d null) {\n+      // get the record writer from context output format\n+      FileOutputFormat.setOutputName(taskContext, baseFileName);\n+      try {\n+        writer \u003d ((OutputFormat) ReflectionUtils.newInstance(\n+          taskContext.getOutputFormatClass(), taskContext.getConfiguration()))\n+          .getRecordWriter(taskContext);\n+      } catch (ClassNotFoundException e) {\n+        throw new IOException(e);\n+      }\n+ \n+      // if counters are enabled, wrap the writer with context \n+      // to increment counters \n+      if (countersEnabled) {\n+        writer \u003d new RecordWriterWithCounter(writer, baseFileName, context);\n+      }\n+      \n+      // add the record-writer to the cache\n+      recordWriters.put(baseFileName, writer);\n+    }\n+    return writer;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized RecordWriter getRecordWriter(\n      TaskAttemptContext taskContext, String baseFileName) \n      throws IOException, InterruptedException {\n    \n    // look for record-writer in the cache\n    RecordWriter writer \u003d recordWriters.get(baseFileName);\n    \n    // If not in cache, create a new one\n    if (writer \u003d\u003d null) {\n      // get the record writer from context output format\n      FileOutputFormat.setOutputName(taskContext, baseFileName);\n      try {\n        writer \u003d ((OutputFormat) ReflectionUtils.newInstance(\n          taskContext.getOutputFormatClass(), taskContext.getConfiguration()))\n          .getRecordWriter(taskContext);\n      } catch (ClassNotFoundException e) {\n        throw new IOException(e);\n      }\n \n      // if counters are enabled, wrap the writer with context \n      // to increment counters \n      if (countersEnabled) {\n        writer \u003d new RecordWriterWithCounter(writer, baseFileName, context);\n      }\n      \n      // add the record-writer to the cache\n      recordWriters.put(baseFileName, writer);\n    }\n    return writer;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java"
    }
  }
}