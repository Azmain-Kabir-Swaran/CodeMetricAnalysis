{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHeartbeatResponsePBImpl.java",
  "functionName": "initAppCollectorsMap",
  "functionId": "initAppCollectorsMap",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
  "functionStartLine": 632,
  "functionEndLine": 649,
  "numCommitsSeen": 48,
  "timeTaken": 4383,
  "changeHistory": [
    "6a923464afa6b635f505be5d5b2414d47d570f99",
    "e276c75ec17634fc3b521fdb15b6ac141b001274",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
    "78b7e070d8009c78665a2baa64fe888788f53e69",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "9b5636408005676ae580f8d929f8e912c27828e7"
  ],
  "changeHistoryShort": {
    "6a923464afa6b635f505be5d5b2414d47d570f99": "Ybodychange",
    "e276c75ec17634fc3b521fdb15b6ac141b001274": "Ybodychange",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": "Ybodychange",
    "78b7e070d8009c78665a2baa64fe888788f53e69": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ybodychange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yrename,Ybodychange)",
    "9b5636408005676ae580f8d929f8e912c27828e7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a923464afa6b635f505be5d5b2414d47d570f99": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6523. Optimize system credentials sent in node heartbeat responses. Contributed by Manikandan R\n",
      "commitDate": "08/01/19 2:54 PM",
      "commitName": "6a923464afa6b635f505be5d5b2414d47d570f99",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/12/18 6:56 PM",
      "commitNameOld": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 18.83,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n     List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n     if (!list.isEmpty()) {\n       this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n       for (AppCollectorDataProto c : list) {\n-        ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n+        ApplicationId appId \u003d ProtoUtils.convertFromProtoFormat(c.getAppId());\n         Token collectorToken \u003d null;\n         if (c.hasAppCollectorToken()){\n           collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n         }\n         AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n             c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion(),\n             collectorToken);\n         this.appCollectorsMap.put(appId, data);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n    if (!list.isEmpty()) {\n      this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n      for (AppCollectorDataProto c : list) {\n        ApplicationId appId \u003d ProtoUtils.convertFromProtoFormat(c.getAppId());\n        Token collectorToken \u003d null;\n        if (c.hasAppCollectorToken()){\n          collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n        }\n        AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion(),\n            collectorToken);\n        this.appCollectorsMap.put(appId, data);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e276c75ec17634fc3b521fdb15b6ac141b001274": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7041. Nodemanager NPE running jobs with security off. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "e276c75ec17634fc3b521fdb15b6ac141b001274",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n     List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n     if (!list.isEmpty()) {\n       this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n       for (AppCollectorDataProto c : list) {\n         ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n-        Token collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n+        Token collectorToken \u003d null;\n+        if (c.hasAppCollectorToken()){\n+          collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n+        }\n         AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n             c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion(),\n             collectorToken);\n         this.appCollectorsMap.put(appId, data);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n    if (!list.isEmpty()) {\n      this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n      for (AppCollectorDataProto c : list) {\n        ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n        Token collectorToken \u003d null;\n        if (c.hasAppCollectorToken()){\n          collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n        }\n        AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion(),\n            collectorToken);\n        this.appCollectorsMap.put(appId, data);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "78b7e070d8009c78665a2baa64fe888788f53e69",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n     List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n     if (!list.isEmpty()) {\n       this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n       for (AppCollectorDataProto c : list) {\n         ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n+        Token collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n         AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n-            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion());\n+            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion(),\n+            collectorToken);\n         this.appCollectorsMap.put(appId, data);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n    if (!list.isEmpty()) {\n      this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n      for (AppCollectorDataProto c : list) {\n        ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n        Token collectorToken \u003d convertFromProtoFormat(c.getAppCollectorToken());\n        AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion(),\n            collectorToken);\n        this.appCollectorsMap.put(appId, data);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "78b7e070d8009c78665a2baa64fe888788f53e69": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5638. Introduce a collector timestamp to uniquely identify collectors creation order in collector discovery. Contributed by Li Lu.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "78b7e070d8009c78665a2baa64fe888788f53e69",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "20/08/17 7:54 AM",
      "commitNameOld": "8410d862d3a72740f461ef91dddb5325955e1ca5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 9.63,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n-    List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n+    List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n     if (!list.isEmpty()) {\n       this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n-      for (AppCollectorsMapProto c : list) {\n+      for (AppCollectorDataProto c : list) {\n         ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n-        this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n+        AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n+            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion());\n+        this.appCollectorsMap.put(appId, data);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorDataProto\u003e list \u003d p.getAppCollectorsList();\n    if (!list.isEmpty()) {\n      this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n      for (AppCollectorDataProto c : list) {\n        ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n        AppCollectorData data \u003d AppCollectorData.newInstance(appId,\n            c.getAppCollectorAddr(), c.getRmIdentifier(), c.getVersion());\n        this.appCollectorsMap.put(appId, data);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n     List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n-    this.appCollectorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n-    for (AppCollectorsMapProto c : list) {\n-      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n-      this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n+    if (!list.isEmpty()) {\n+      this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n+      for (AppCollectorsMapProto c : list) {\n+        ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n+        this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n    if (!list.isEmpty()) {\n      this.appCollectorsMap \u003d new HashMap\u003c\u003e();\n      for (AppCollectorsMapProto c : list) {\n        ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n        this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private void initAppAggregatorsMap() {\n+  private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n-    List\u003cAppAggregatorsMapProto\u003e list \u003d p.getAppAggregatorsMapList();\n-    this.appAggregatorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n-    for (AppAggregatorsMapProto c : list) {\n+    List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n+    this.appCollectorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n+    for (AppCollectorsMapProto c : list) {\n       ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n-      this.appAggregatorsMap.put(appId, c.getAppAggregatorAddr());\n+      this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n    this.appCollectorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n    for (AppCollectorsMapProto c : list) {\n      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n      this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "initAppAggregatorsMap",
            "newValue": "initAppCollectorsMap"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private void initAppAggregatorsMap() {\n+  private void initAppCollectorsMap() {\n     NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n-    List\u003cAppAggregatorsMapProto\u003e list \u003d p.getAppAggregatorsMapList();\n-    this.appAggregatorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n-    for (AppAggregatorsMapProto c : list) {\n+    List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n+    this.appCollectorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n+    for (AppCollectorsMapProto c : list) {\n       ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n-      this.appAggregatorsMap.put(appId, c.getAppAggregatorAddr());\n+      this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initAppCollectorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppCollectorsMapProto\u003e list \u003d p.getAppCollectorsMapList();\n    this.appCollectorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n    for (AppCollectorsMapProto c : list) {\n      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n      this.appCollectorsMap.put(appId, c.getAppCollectorAddr());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,9 @@\n+  private void initAppAggregatorsMap() {\n+    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    List\u003cAppAggregatorsMapProto\u003e list \u003d p.getAppAggregatorsMapList();\n+    this.appAggregatorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n+    for (AppAggregatorsMapProto c : list) {\n+      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n+      this.appAggregatorsMap.put(appId, c.getAppAggregatorAddr());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAppAggregatorsMap() {\n    NodeHeartbeatResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cAppAggregatorsMapProto\u003e list \u003d p.getAppAggregatorsMapList();\n    this.appAggregatorsMap \u003d new HashMap\u003cApplicationId, String\u003e ();\n    for (AppAggregatorsMapProto c : list) {\n      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n      this.appAggregatorsMap.put(appId, c.getAppAggregatorAddr());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java"
    }
  }
}