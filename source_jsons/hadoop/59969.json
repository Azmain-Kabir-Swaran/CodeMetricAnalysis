{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GetLabelsToNodesResponsePBImpl.java",
  "functionName": "initLabelsToNodes",
  "functionId": "initLabelsToNodes",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/GetLabelsToNodesResponsePBImpl.java",
  "functionStartLine": 60,
  "functionEndLine": 79,
  "numCommitsSeen": 3,
  "timeTaken": 1489,
  "changeHistory": [
    "1a6ca75f3872587fb34c995a4b372b8cd6366d7d",
    "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87",
    "d49ae725d5fa3eecf879ac42c42a368dd811f854"
  ],
  "changeHistoryShort": {
    "1a6ca75f3872587fb34c995a4b372b8cd6366d7d": "Ybodychange",
    "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87": "Ybodychange",
    "d49ae725d5fa3eecf879ac42c42a368dd811f854": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a6ca75f3872587fb34c995a4b372b8cd6366d7d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6143. Fix incompatible issue caused by YARN-3583. (Sunil G via wangda)\n",
      "commitDate": "22/02/17 11:17 AM",
      "commitName": "1a6ca75f3872587fb34c995a4b372b8cd6366d7d",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "19/05/15 4:54 PM",
      "commitNameOld": "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 644.81,
      "commitsBetweenForRepo": 4495,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void initLabelsToNodes() {\n     if (this.labelsToNodes !\u003d null) {\n       return;\n     }\n     GetLabelsToNodesResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n     List\u003cLabelsToNodeIdsProto\u003e list \u003d p.getLabelsToNodesList();\n-    this.labelsToNodes \u003d new HashMap\u003cNodeLabel, Set\u003cNodeId\u003e\u003e();\n+    this.labelsToNodes \u003d new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n \n     for (LabelsToNodeIdsProto c : list) {\n       Set\u003cNodeId\u003e setNodes \u003d new HashSet\u003cNodeId\u003e();\n       for(NodeIdProto n : c.getNodeIdList()) {\n         NodeId node \u003d new NodeIdPBImpl(n);\n         setNodes.add(node);\n       }\n       if (!setNodes.isEmpty()) {\n         this.labelsToNodes\n-            .put(new NodeLabelPBImpl(c.getNodeLabels()), setNodes);\n+            .put(c.getNodeLabels(), setNodes);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initLabelsToNodes() {\n    if (this.labelsToNodes !\u003d null) {\n      return;\n    }\n    GetLabelsToNodesResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cLabelsToNodeIdsProto\u003e list \u003d p.getLabelsToNodesList();\n    this.labelsToNodes \u003d new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n\n    for (LabelsToNodeIdsProto c : list) {\n      Set\u003cNodeId\u003e setNodes \u003d new HashSet\u003cNodeId\u003e();\n      for(NodeIdProto n : c.getNodeIdList()) {\n        NodeId node \u003d new NodeIdPBImpl(n);\n        setNodes.add(node);\n      }\n      if (!setNodes.isEmpty()) {\n        this.labelsToNodes\n            .put(c.getNodeLabels(), setNodes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/GetLabelsToNodesResponsePBImpl.java",
      "extendedDetails": {}
    },
    "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3583. Support of NodeLabel object instead of plain String in YarnClient side. (Sunil G via wangda)\n",
      "commitDate": "19/05/15 4:54 PM",
      "commitName": "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "19/02/15 11:00 AM",
      "commitNameOld": "d49ae725d5fa3eecf879ac42c42a368dd811f854",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 89.2,
      "commitsBetweenForRepo": 848,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private void initLabelsToNodes() {\n     if (this.labelsToNodes !\u003d null) {\n       return;\n     }\n     GetLabelsToNodesResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n     List\u003cLabelsToNodeIdsProto\u003e list \u003d p.getLabelsToNodesList();\n-    this.labelsToNodes \u003d new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n+    this.labelsToNodes \u003d new HashMap\u003cNodeLabel, Set\u003cNodeId\u003e\u003e();\n \n     for (LabelsToNodeIdsProto c : list) {\n       Set\u003cNodeId\u003e setNodes \u003d new HashSet\u003cNodeId\u003e();\n       for(NodeIdProto n : c.getNodeIdList()) {\n         NodeId node \u003d new NodeIdPBImpl(n);\n         setNodes.add(node);\n       }\n-      if(!setNodes.isEmpty()) {\n-        this.labelsToNodes.put(c.getNodeLabels(), setNodes);\n+      if (!setNodes.isEmpty()) {\n+        this.labelsToNodes\n+            .put(new NodeLabelPBImpl(c.getNodeLabels()), setNodes);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initLabelsToNodes() {\n    if (this.labelsToNodes !\u003d null) {\n      return;\n    }\n    GetLabelsToNodesResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cLabelsToNodeIdsProto\u003e list \u003d p.getLabelsToNodesList();\n    this.labelsToNodes \u003d new HashMap\u003cNodeLabel, Set\u003cNodeId\u003e\u003e();\n\n    for (LabelsToNodeIdsProto c : list) {\n      Set\u003cNodeId\u003e setNodes \u003d new HashSet\u003cNodeId\u003e();\n      for(NodeIdProto n : c.getNodeIdList()) {\n        NodeId node \u003d new NodeIdPBImpl(n);\n        setNodes.add(node);\n      }\n      if (!setNodes.isEmpty()) {\n        this.labelsToNodes\n            .put(new NodeLabelPBImpl(c.getNodeLabels()), setNodes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/GetLabelsToNodesResponsePBImpl.java",
      "extendedDetails": {}
    },
    "d49ae725d5fa3eecf879ac42c42a368dd811f854": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3076. Add API/Implementation to YarnClient to retrieve label-to-node mapping (Varun Saxena via wangda)\n",
      "commitDate": "19/02/15 11:00 AM",
      "commitName": "d49ae725d5fa3eecf879ac42c42a368dd811f854",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,19 @@\n+  private void initLabelsToNodes() {\n+    if (this.labelsToNodes !\u003d null) {\n+      return;\n+    }\n+    GetLabelsToNodesResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    List\u003cLabelsToNodeIdsProto\u003e list \u003d p.getLabelsToNodesList();\n+    this.labelsToNodes \u003d new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n+\n+    for (LabelsToNodeIdsProto c : list) {\n+      Set\u003cNodeId\u003e setNodes \u003d new HashSet\u003cNodeId\u003e();\n+      for(NodeIdProto n : c.getNodeIdList()) {\n+        NodeId node \u003d new NodeIdPBImpl(n);\n+        setNodes.add(node);\n+      }\n+      if(!setNodes.isEmpty()) {\n+        this.labelsToNodes.put(c.getNodeLabels(), setNodes);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initLabelsToNodes() {\n    if (this.labelsToNodes !\u003d null) {\n      return;\n    }\n    GetLabelsToNodesResponseProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cLabelsToNodeIdsProto\u003e list \u003d p.getLabelsToNodesList();\n    this.labelsToNodes \u003d new HashMap\u003cString, Set\u003cNodeId\u003e\u003e();\n\n    for (LabelsToNodeIdsProto c : list) {\n      Set\u003cNodeId\u003e setNodes \u003d new HashSet\u003cNodeId\u003e();\n      for(NodeIdProto n : c.getNodeIdList()) {\n        NodeId node \u003d new NodeIdPBImpl(n);\n        setNodes.add(node);\n      }\n      if(!setNodes.isEmpty()) {\n        this.labelsToNodes.put(c.getNodeLabels(), setNodes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/GetLabelsToNodesResponsePBImpl.java"
    }
  }
}