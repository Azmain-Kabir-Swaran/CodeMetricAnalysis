{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeaseRenewer.java",
  "functionName": "put",
  "functionId": "put___dfsc-DFSClient(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
  "functionStartLine": 295,
  "functionEndLine": 331,
  "numCommitsSeen": 44,
  "timeTaken": 8650,
  "changeHistory": [
    "738d1a206aba05f0b4be7d633b17db7fcd1c74bc",
    "39285e6a1978ea5e53bdc1b0aef62421382124a8",
    "6ee0539ede78b640f01c5eac18ded161182a7835",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
    "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "738d1a206aba05f0b4be7d633b17db7fcd1c74bc": "Ymultichange(Yparameterchange,Ybodychange)",
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": "Ybodychange",
    "6ee0539ede78b640f01c5eac18ded161182a7835": "Ybodychange",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3": "Ymultichange(Yfilerename,Ymodifierchange)",
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc": "Ymultichange(Yparameterchange,Ybodychange)",
    "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "738d1a206aba05f0b4be7d633b17db7fcd1c74bc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12754. Lease renewal can hit a deadlock. Contributed by Kuhu Shukla.\n",
      "commitDate": "22/11/17 11:01 AM",
      "commitName": "738d1a206aba05f0b4be7d633b17db7fcd1c74bc",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12754. Lease renewal can hit a deadlock. Contributed by Kuhu Shukla.\n",
          "commitDate": "22/11/17 11:01 AM",
          "commitName": "738d1a206aba05f0b4be7d633b17db7fcd1c74bc",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "03/10/15 11:38 AM",
          "commitNameOld": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 781.02,
          "commitsBetweenForRepo": 5310,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,37 @@\n-  public synchronized void put(final long inodeId, final DFSOutputStream out,\n-      final DFSClient dfsc) {\n+  public synchronized void put(final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               LOG.debug(\"LeaseRenewer is interrupted.\", e);\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n-      dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void put(final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
          "extendedDetails": {
            "oldValue": "[inodeId-long(modifiers-final), out-DFSOutputStream(modifiers-final), dfsc-DFSClient(modifiers-final)]",
            "newValue": "[dfsc-DFSClient(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12754. Lease renewal can hit a deadlock. Contributed by Kuhu Shukla.\n",
          "commitDate": "22/11/17 11:01 AM",
          "commitName": "738d1a206aba05f0b4be7d633b17db7fcd1c74bc",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "03/10/15 11:38 AM",
          "commitNameOld": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 781.02,
          "commitsBetweenForRepo": 5310,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,37 @@\n-  public synchronized void put(final long inodeId, final DFSOutputStream out,\n-      final DFSClient dfsc) {\n+  public synchronized void put(final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               LOG.debug(\"LeaseRenewer is interrupted.\", e);\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n-      dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void put(final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
          "extendedDetails": {}
        }
      ]
    },
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8971. Remove guards when calling LOG.debug() and LOG.trace() in client package. Contributed by Mingliang Liu.\n",
      "commitDate": "29/09/15 5:52 PM",
      "commitName": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:51 PM",
      "commitNameOld": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,39 @@\n   public synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n-              if (LOG.isDebugEnabled()) {\n-                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n-                    + \" is interrupted.\", e);\n-              }\n+              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n       dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "6ee0539ede78b640f01c5eac18ded161182a7835": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\"\n\nThis reverts commit d5a9a3daa0224249221ffa7b8bd5751ab2feca56.\n",
      "commitDate": "29/09/15 5:51 PM",
      "commitName": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:48 PM",
      "commitNameOld": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,42 @@\n   public synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n-              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n+              if (LOG.isDebugEnabled()) {\n+                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n+                    + \" is interrupted.\", e);\n+              }\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n       dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "29/09/15 5:48 PM",
      "commitName": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 11:08 AM",
      "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.28,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,39 @@\n   public synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n-              if (LOG.isDebugEnabled()) {\n-                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n-                    + \" is interrupted.\", e);\n-              }\n+              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n       dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              LOG.debug(\"LeaseRenewer is interrupted.\", e);\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java"
      }
    },
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "HDFS-8086. Move LeaseRenewer to the hdfs.client.impl package.  Contributed by Takanobu\n",
      "commitDate": "01/05/15 3:12 PM",
      "commitName": "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8086. Move LeaseRenewer to the hdfs.client.impl package.  Contributed by Takanobu\n",
          "commitDate": "01/05/15 3:12 PM",
          "commitName": "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "01/05/15 2:43 PM",
          "commitNameOld": "64d30a61867e5cb0a2acaa7ae4fa4d3eb3be8edd",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  synchronized void put(final long inodeId, final DFSOutputStream out,\n+  public synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                     + \" is interrupted.\", e);\n               }\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n-          \n+\n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n       dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8086. Move LeaseRenewer to the hdfs.client.impl package.  Contributed by Takanobu\n",
          "commitDate": "01/05/15 3:12 PM",
          "commitName": "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "01/05/15 2:43 PM",
          "commitNameOld": "64d30a61867e5cb0a2acaa7ae4fa4d3eb3be8edd",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  synchronized void put(final long inodeId, final DFSOutputStream out,\n+  public synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                     + \" is interrupted.\", e);\n               }\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n-          \n+\n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n       dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n\n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
          "extendedDetails": {
            "oldValue": "[synchronized]",
            "newValue": "[public, synchronized]"
          }
        }
      ]
    },
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6294. Use INode IDs to avoid conflicts when a file open for write is renamed (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593634 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/05/14 3:36 PM",
      "commitName": "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6294. Use INode IDs to avoid conflicts when a file open for write is renamed (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593634 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/05/14 3:36 PM",
          "commitName": "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "02/08/13 12:08 AM",
          "commitNameOld": "c04a7d974aa5ae2589d36f63c4ac45fb42cd1b80",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 280.64,
          "commitsBetweenForRepo": 1887,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  synchronized void put(final String src, final DFSOutputStream out,\n+  synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                     + \" is interrupted.\", e);\n               }\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n           \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n-      dfsc.putFileBeingWritten(src, out);\n+      dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n          \n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
          "extendedDetails": {
            "oldValue": "[src-String(modifiers-final), out-DFSOutputStream(modifiers-final), dfsc-DFSClient(modifiers-final)]",
            "newValue": "[inodeId-long(modifiers-final), out-DFSOutputStream(modifiers-final), dfsc-DFSClient(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6294. Use INode IDs to avoid conflicts when a file open for write is renamed (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593634 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/05/14 3:36 PM",
          "commitName": "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "02/08/13 12:08 AM",
          "commitNameOld": "c04a7d974aa5ae2589d36f63c4ac45fb42cd1b80",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 280.64,
          "commitsBetweenForRepo": 1887,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  synchronized void put(final String src, final DFSOutputStream out,\n+  synchronized void put(final long inodeId, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" started\");\n               }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                     + \" is interrupted.\", e);\n               }\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                     + \" with renew id \" + id + \" exited\");\n               }\n             }\n           }\n           \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n-      dfsc.putFileBeingWritten(src, out);\n+      dfsc.putFileBeingWritten(inodeId, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void put(final long inodeId, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n          \n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(inodeId, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2803. Add logging to LeaseRenewer for better lease expiration debugging. Contributed by Jimmy Xiang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233453 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 8:35 AM",
      "commitName": "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "04/09/11 12:30 PM",
      "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 136.88,
      "commitsBetweenForRepo": 856,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,42 @@\n   synchronized void put(final String src, final DFSOutputStream out,\n       final DFSClient dfsc) {\n     if (dfsc.isClientRunning()) {\n       if (!isRunning() || isRenewerExpired()) {\n         //start a new deamon with a new id.\n         final int id \u003d ++currentId;\n         daemon \u003d new Daemon(new Runnable() {\n           @Override\n           public void run() {\n             try {\n+              if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n+                    + \" with renew id \" + id + \" started\");\n+              }\n               LeaseRenewer.this.run(id);\n             } catch(InterruptedException e) {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                     + \" is interrupted.\", e);\n               }\n             } finally {\n               synchronized(LeaseRenewer.this) {\n                 Factory.INSTANCE.remove(LeaseRenewer.this);\n               }\n+              if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n+                    + \" with renew id \" + id + \" exited\");\n+              }\n             }\n           }\n           \n           @Override\n           public String toString() {\n             return String.valueOf(LeaseRenewer.this);\n           }\n         });\n         daemon.start();\n       }\n       dfsc.putFileBeingWritten(src, out);\n       emptyTime \u003d Long.MAX_VALUE;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void put(final String src, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" started\");\n              }\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Lease renewer daemon for \" + clientsString()\n                    + \" with renew id \" + id + \" exited\");\n              }\n            }\n          }\n          \n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(src, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void put(final String src, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n            }\n          }\n          \n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(src, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void put(final String src, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n            }\n          }\n          \n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(src, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,34 @@\n+  synchronized void put(final String src, final DFSOutputStream out,\n+      final DFSClient dfsc) {\n+    if (dfsc.isClientRunning()) {\n+      if (!isRunning() || isRenewerExpired()) {\n+        //start a new deamon with a new id.\n+        final int id \u003d ++currentId;\n+        daemon \u003d new Daemon(new Runnable() {\n+          @Override\n+          public void run() {\n+            try {\n+              LeaseRenewer.this.run(id);\n+            } catch(InterruptedException e) {\n+              if (LOG.isDebugEnabled()) {\n+                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n+                    + \" is interrupted.\", e);\n+              }\n+            } finally {\n+              synchronized(LeaseRenewer.this) {\n+                Factory.INSTANCE.remove(LeaseRenewer.this);\n+              }\n+            }\n+          }\n+          \n+          @Override\n+          public String toString() {\n+            return String.valueOf(LeaseRenewer.this);\n+          }\n+        });\n+        daemon.start();\n+      }\n+      dfsc.putFileBeingWritten(src, out);\n+      emptyTime \u003d Long.MAX_VALUE;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void put(final String src, final DFSOutputStream out,\n      final DFSClient dfsc) {\n    if (dfsc.isClientRunning()) {\n      if (!isRunning() || isRenewerExpired()) {\n        //start a new deamon with a new id.\n        final int id \u003d ++currentId;\n        daemon \u003d new Daemon(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              LeaseRenewer.this.run(id);\n            } catch(InterruptedException e) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(LeaseRenewer.this.getClass().getSimpleName()\n                    + \" is interrupted.\", e);\n              }\n            } finally {\n              synchronized(LeaseRenewer.this) {\n                Factory.INSTANCE.remove(LeaseRenewer.this);\n              }\n            }\n          }\n          \n          @Override\n          public String toString() {\n            return String.valueOf(LeaseRenewer.this);\n          }\n        });\n        daemon.start();\n      }\n      dfsc.putFileBeingWritten(src, out);\n      emptyTime \u003d Long.MAX_VALUE;\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/LeaseRenewer.java"
    }
  }
}