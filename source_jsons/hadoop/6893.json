{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "INodeDirectory.java",
  "functionName": "dumpTreeRecursively",
  "functionId": "dumpTreeRecursively___out-PrintWriter__prefix-StringBuilder__snapshot-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
  "functionStartLine": 914,
  "functionEndLine": 967,
  "numCommitsSeen": 228,
  "timeTaken": 3145,
  "changeHistory": [
    "0a85af959ce505f0659e5c69d0ca83a5dce0a7c2",
    "76a621ffd2d66bf012a554f4400091a92a5b473e",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b"
  ],
  "changeHistoryShort": {
    "0a85af959ce505f0659e5c69d0ca83a5dce0a7c2": "Ybodychange",
    "76a621ffd2d66bf012a554f4400091a92a5b473e": "Ybodychange",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ymultichange(Yparameterchange,Ybodychange)",
    "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b": "Ybodychange"
  },
  "changeHistoryDetails": {
    "0a85af959ce505f0659e5c69d0ca83a5dce0a7c2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13101. Yet another fsimage corruption related to snapshot. Contributed by Shashikant Banerjee.\n",
      "commitDate": "14/08/19 9:46 PM",
      "commitName": "0a85af959ce505f0659e5c69d0ca83a5dce0a7c2",
      "commitAuthor": "Shashikant Banerjee",
      "commitDateOld": "22/07/19 8:07 PM",
      "commitNameOld": "377f95bbe8d2d171b5d7b0bfa7559e67ca4aae46",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 23.07,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,54 @@\n   public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n       final int snapshot) {\n     super.dumpTreeRecursively(out, prefix, snapshot);\n     out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n     final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n     if (q !\u003d null) {\n       out.print(\", \" + q);\n     }\n     if (this instanceof Snapshot.Root) {\n       out.print(\", snapshotId\u003d\" + snapshot);\n     }\n     out.println();\n \n     if (prefix.length() \u003e\u003d 2) {\n       prefix.setLength(prefix.length() - 2);\n       prefix.append(\"  \");\n     }\n+\n+    final DirectoryWithSnapshotFeature snapshotFeature \u003d\n+        getDirectoryWithSnapshotFeature();\n+    if (snapshotFeature !\u003d null) {\n+      out.print(prefix);\n+      out.print(snapshotFeature);\n+    }\n+    out.println();\n     dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n       final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n       \n       @Override\n       public Iterator\u003cSnapshotAndINode\u003e iterator() {\n         return new Iterator\u003cSnapshotAndINode\u003e() {\n           @Override\n           public boolean hasNext() {\n             return i.hasNext();\n           }\n \n           @Override\n           public SnapshotAndINode next() {\n             return new SnapshotAndINode(snapshot, i.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n     });\n \n     final DirectorySnapshottableFeature s \u003d getDirectorySnapshottableFeature();\n     if (s !\u003d null) {\n       s.dumpTreeRecursively(this, out, prefix, snapshot);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n      final int snapshot) {\n    super.dumpTreeRecursively(out, prefix, snapshot);\n    out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n    final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n    if (q !\u003d null) {\n      out.print(\", \" + q);\n    }\n    if (this instanceof Snapshot.Root) {\n      out.print(\", snapshotId\u003d\" + snapshot);\n    }\n    out.println();\n\n    if (prefix.length() \u003e\u003d 2) {\n      prefix.setLength(prefix.length() - 2);\n      prefix.append(\"  \");\n    }\n\n    final DirectoryWithSnapshotFeature snapshotFeature \u003d\n        getDirectoryWithSnapshotFeature();\n    if (snapshotFeature !\u003d null) {\n      out.print(prefix);\n      out.print(snapshotFeature);\n    }\n    out.println();\n    dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n      final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n      \n      @Override\n      public Iterator\u003cSnapshotAndINode\u003e iterator() {\n        return new Iterator\u003cSnapshotAndINode\u003e() {\n          @Override\n          public boolean hasNext() {\n            return i.hasNext();\n          }\n\n          @Override\n          public SnapshotAndINode next() {\n            return new SnapshotAndINode(snapshot, i.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    });\n\n    final DirectorySnapshottableFeature s \u003d getDirectorySnapshottableFeature();\n    if (s !\u003d null) {\n      s.dumpTreeRecursively(this, out, prefix, snapshot);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
      "extendedDetails": {}
    },
    "76a621ffd2d66bf012a554f4400091a92a5b473e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 5:08 PM",
      "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/06/14 3:59 PM",
      "commitNameOld": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 16.05,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,46 @@\n   public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n       final int snapshot) {\n     super.dumpTreeRecursively(out, prefix, snapshot);\n     out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n     final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n     if (q !\u003d null) {\n       out.print(\", \" + q);\n     }\n     if (this instanceof Snapshot.Root) {\n       out.print(\", snapshotId\u003d\" + snapshot);\n     }\n     out.println();\n \n     if (prefix.length() \u003e\u003d 2) {\n       prefix.setLength(prefix.length() - 2);\n       prefix.append(\"  \");\n     }\n     dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n       final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n       \n       @Override\n       public Iterator\u003cSnapshotAndINode\u003e iterator() {\n         return new Iterator\u003cSnapshotAndINode\u003e() {\n           @Override\n           public boolean hasNext() {\n             return i.hasNext();\n           }\n \n           @Override\n           public SnapshotAndINode next() {\n             return new SnapshotAndINode(snapshot, i.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n     });\n+\n+    final DirectorySnapshottableFeature s \u003d getDirectorySnapshottableFeature();\n+    if (s !\u003d null) {\n+      s.dumpTreeRecursively(this, out, prefix, snapshot);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n      final int snapshot) {\n    super.dumpTreeRecursively(out, prefix, snapshot);\n    out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n    final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n    if (q !\u003d null) {\n      out.print(\", \" + q);\n    }\n    if (this instanceof Snapshot.Root) {\n      out.print(\", snapshotId\u003d\" + snapshot);\n    }\n    out.println();\n\n    if (prefix.length() \u003e\u003d 2) {\n      prefix.setLength(prefix.length() - 2);\n      prefix.append(\"  \");\n    }\n    dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n      final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n      \n      @Override\n      public Iterator\u003cSnapshotAndINode\u003e iterator() {\n        return new Iterator\u003cSnapshotAndINode\u003e() {\n          @Override\n          public boolean hasNext() {\n            return i.hasNext();\n          }\n\n          @Override\n          public SnapshotAndINode next() {\n            return new SnapshotAndINode(snapshot, i.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    });\n\n    final DirectorySnapshottableFeature s \u003d getDirectorySnapshottableFeature();\n    if (s !\u003d null) {\n      s.dumpTreeRecursively(this, out, prefix, snapshot);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
      "extendedDetails": {}
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,41 @@\n   public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n-      final Snapshot snapshot) {\n+      final int snapshot) {\n     super.dumpTreeRecursively(out, prefix, snapshot);\n     out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n     final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n     if (q !\u003d null) {\n       out.print(\", \" + q);\n     }\n     if (this instanceof Snapshot.Root) {\n-      out.print(\", snapshotId\u003d\" + snapshot.getId());\n+      out.print(\", snapshotId\u003d\" + snapshot);\n     }\n     out.println();\n \n     if (prefix.length() \u003e\u003d 2) {\n       prefix.setLength(prefix.length() - 2);\n       prefix.append(\"  \");\n     }\n     dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n       final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n       \n       @Override\n       public Iterator\u003cSnapshotAndINode\u003e iterator() {\n         return new Iterator\u003cSnapshotAndINode\u003e() {\n           @Override\n           public boolean hasNext() {\n             return i.hasNext();\n           }\n \n           @Override\n           public SnapshotAndINode next() {\n             return new SnapshotAndINode(snapshot, i.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n      final int snapshot) {\n    super.dumpTreeRecursively(out, prefix, snapshot);\n    out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n    final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n    if (q !\u003d null) {\n      out.print(\", \" + q);\n    }\n    if (this instanceof Snapshot.Root) {\n      out.print(\", snapshotId\u003d\" + snapshot);\n    }\n    out.println();\n\n    if (prefix.length() \u003e\u003d 2) {\n      prefix.setLength(prefix.length() - 2);\n      prefix.append(\"  \");\n    }\n    dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n      final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n      \n      @Override\n      public Iterator\u003cSnapshotAndINode\u003e iterator() {\n        return new Iterator\u003cSnapshotAndINode\u003e() {\n          @Override\n          public boolean hasNext() {\n            return i.hasNext();\n          }\n\n          @Override\n          public SnapshotAndINode next() {\n            return new SnapshotAndINode(snapshot, i.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
          "extendedDetails": {
            "oldValue": "[out-PrintWriter, prefix-StringBuilder, snapshot-Snapshot(modifiers-final)]",
            "newValue": "[out-PrintWriter, prefix-StringBuilder, snapshot-int(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,41 @@\n   public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n-      final Snapshot snapshot) {\n+      final int snapshot) {\n     super.dumpTreeRecursively(out, prefix, snapshot);\n     out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n     final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n     if (q !\u003d null) {\n       out.print(\", \" + q);\n     }\n     if (this instanceof Snapshot.Root) {\n-      out.print(\", snapshotId\u003d\" + snapshot.getId());\n+      out.print(\", snapshotId\u003d\" + snapshot);\n     }\n     out.println();\n \n     if (prefix.length() \u003e\u003d 2) {\n       prefix.setLength(prefix.length() - 2);\n       prefix.append(\"  \");\n     }\n     dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n       final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n       \n       @Override\n       public Iterator\u003cSnapshotAndINode\u003e iterator() {\n         return new Iterator\u003cSnapshotAndINode\u003e() {\n           @Override\n           public boolean hasNext() {\n             return i.hasNext();\n           }\n \n           @Override\n           public SnapshotAndINode next() {\n             return new SnapshotAndINode(snapshot, i.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n      final int snapshot) {\n    super.dumpTreeRecursively(out, prefix, snapshot);\n    out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n    final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n    if (q !\u003d null) {\n      out.print(\", \" + q);\n    }\n    if (this instanceof Snapshot.Root) {\n      out.print(\", snapshotId\u003d\" + snapshot);\n    }\n    out.println();\n\n    if (prefix.length() \u003e\u003d 2) {\n      prefix.setLength(prefix.length() - 2);\n      prefix.append(\"  \");\n    }\n    dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n      final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n      \n      @Override\n      public Iterator\u003cSnapshotAndINode\u003e iterator() {\n        return new Iterator\u003cSnapshotAndINode\u003e() {\n          @Override\n          public boolean hasNext() {\n            return i.hasNext();\n          }\n\n          @Override\n          public SnapshotAndINode next() {\n            return new SnapshotAndINode(snapshot, i.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5286. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithQuota with DirectoryWithQuotaFeature.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1545768 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/11/13 10:33 AM",
      "commitName": "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "21/11/13 5:39 PM",
      "commitNameOld": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 4.7,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n   public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n       final Snapshot snapshot) {\n     super.dumpTreeRecursively(out, prefix, snapshot);\n     out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n-    if (this instanceof INodeDirectoryWithQuota) {\n-      out.print(((INodeDirectoryWithQuota)this).quotaString());\n+    final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n+    if (q !\u003d null) {\n+      out.print(\", \" + q);\n     }\n     if (this instanceof Snapshot.Root) {\n       out.print(\", snapshotId\u003d\" + snapshot.getId());\n     }\n     out.println();\n \n     if (prefix.length() \u003e\u003d 2) {\n       prefix.setLength(prefix.length() - 2);\n       prefix.append(\"  \");\n     }\n     dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n       final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n       \n       @Override\n       public Iterator\u003cSnapshotAndINode\u003e iterator() {\n         return new Iterator\u003cSnapshotAndINode\u003e() {\n           @Override\n           public boolean hasNext() {\n             return i.hasNext();\n           }\n \n           @Override\n           public SnapshotAndINode next() {\n             return new SnapshotAndINode(snapshot, i.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix,\n      final Snapshot snapshot) {\n    super.dumpTreeRecursively(out, prefix, snapshot);\n    out.print(\", childrenSize\u003d\" + getChildrenList(snapshot).size());\n    final DirectoryWithQuotaFeature q \u003d getDirectoryWithQuotaFeature();\n    if (q !\u003d null) {\n      out.print(\", \" + q);\n    }\n    if (this instanceof Snapshot.Root) {\n      out.print(\", snapshotId\u003d\" + snapshot.getId());\n    }\n    out.println();\n\n    if (prefix.length() \u003e\u003d 2) {\n      prefix.setLength(prefix.length() - 2);\n      prefix.append(\"  \");\n    }\n    dumpTreeRecursively(out, prefix, new Iterable\u003cSnapshotAndINode\u003e() {\n      final Iterator\u003cINode\u003e i \u003d getChildrenList(snapshot).iterator();\n      \n      @Override\n      public Iterator\u003cSnapshotAndINode\u003e iterator() {\n        return new Iterator\u003cSnapshotAndINode\u003e() {\n          @Override\n          public boolean hasNext() {\n            return i.hasNext();\n          }\n\n          @Override\n          public SnapshotAndINode next() {\n            return new SnapshotAndINode(snapshot, i.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
      "extendedDetails": {}
    }
  }
}