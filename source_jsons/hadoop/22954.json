{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ChainReducer.java",
  "functionName": "run",
  "functionId": "run___context-Context",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java",
  "functionStartLine": 185,
  "functionEndLine": 219,
  "numCommitsSeen": 4,
  "timeTaken": 4312,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void run(Context context) throws IOException, InterruptedException {\n    setup(context);\n\n    // if no reducer is set, just do nothing\n    if (chain.getReducer() \u003d\u003d null) {\n      return;\n    }\n    int numMappers \u003d chain.getAllMappers().size();\n    // if there are no mappers in chain, run the reducer\n    if (numMappers \u003d\u003d 0) {\n      chain.runReducer(context);\n      return;\n    }\n\n    // add reducer and all mappers with proper context\n    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e inputqueue;\n    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e outputqueue;\n    // add reducer\n    outputqueue \u003d chain.createBlockingQueue();\n    chain.addReducer(context, outputqueue);\n    // add all mappers except last one\n    for (int i \u003d 0; i \u003c numMappers - 1; i++) {\n      inputqueue \u003d outputqueue;\n      outputqueue \u003d chain.createBlockingQueue();\n      chain.addMapper(inputqueue, outputqueue, context, i);\n    }\n    // add last mapper\n    chain.addMapper(outputqueue, context, numMappers - 1);\n\n    // start all threads\n    chain.startAllThreads();\n    \n    // wait for all threads\n    chain.joinAllThreads();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void run(Context context) throws IOException, InterruptedException {\n    setup(context);\n\n    // if no reducer is set, just do nothing\n    if (chain.getReducer() \u003d\u003d null) {\n      return;\n    }\n    int numMappers \u003d chain.getAllMappers().size();\n    // if there are no mappers in chain, run the reducer\n    if (numMappers \u003d\u003d 0) {\n      chain.runReducer(context);\n      return;\n    }\n\n    // add reducer and all mappers with proper context\n    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e inputqueue;\n    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e outputqueue;\n    // add reducer\n    outputqueue \u003d chain.createBlockingQueue();\n    chain.addReducer(context, outputqueue);\n    // add all mappers except last one\n    for (int i \u003d 0; i \u003c numMappers - 1; i++) {\n      inputqueue \u003d outputqueue;\n      outputqueue \u003d chain.createBlockingQueue();\n      chain.addMapper(inputqueue, outputqueue, context, i);\n    }\n    // add last mapper\n    chain.addMapper(outputqueue, context, numMappers - 1);\n\n    // start all threads\n    chain.startAllThreads();\n    \n    // wait for all threads\n    chain.joinAllThreads();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,35 @@\n+  public void run(Context context) throws IOException, InterruptedException {\n+    setup(context);\n+\n+    // if no reducer is set, just do nothing\n+    if (chain.getReducer() \u003d\u003d null) {\n+      return;\n+    }\n+    int numMappers \u003d chain.getAllMappers().size();\n+    // if there are no mappers in chain, run the reducer\n+    if (numMappers \u003d\u003d 0) {\n+      chain.runReducer(context);\n+      return;\n+    }\n+\n+    // add reducer and all mappers with proper context\n+    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e inputqueue;\n+    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e outputqueue;\n+    // add reducer\n+    outputqueue \u003d chain.createBlockingQueue();\n+    chain.addReducer(context, outputqueue);\n+    // add all mappers except last one\n+    for (int i \u003d 0; i \u003c numMappers - 1; i++) {\n+      inputqueue \u003d outputqueue;\n+      outputqueue \u003d chain.createBlockingQueue();\n+      chain.addMapper(inputqueue, outputqueue, context, i);\n+    }\n+    // add last mapper\n+    chain.addMapper(outputqueue, context, numMappers - 1);\n+\n+    // start all threads\n+    chain.startAllThreads();\n+    \n+    // wait for all threads\n+    chain.joinAllThreads();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run(Context context) throws IOException, InterruptedException {\n    setup(context);\n\n    // if no reducer is set, just do nothing\n    if (chain.getReducer() \u003d\u003d null) {\n      return;\n    }\n    int numMappers \u003d chain.getAllMappers().size();\n    // if there are no mappers in chain, run the reducer\n    if (numMappers \u003d\u003d 0) {\n      chain.runReducer(context);\n      return;\n    }\n\n    // add reducer and all mappers with proper context\n    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e inputqueue;\n    ChainBlockingQueue\u003cChain.KeyValuePair\u003c?, ?\u003e\u003e outputqueue;\n    // add reducer\n    outputqueue \u003d chain.createBlockingQueue();\n    chain.addReducer(context, outputqueue);\n    // add all mappers except last one\n    for (int i \u003d 0; i \u003c numMappers - 1; i++) {\n      inputqueue \u003d outputqueue;\n      outputqueue \u003d chain.createBlockingQueue();\n      chain.addMapper(inputqueue, outputqueue, context, i);\n    }\n    // add last mapper\n    chain.addMapper(outputqueue, context, numMappers - 1);\n\n    // start all threads\n    chain.startAllThreads();\n    \n    // wait for all threads\n    chain.joinAllThreads();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/chain/ChainReducer.java"
    }
  }
}