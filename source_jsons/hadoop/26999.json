{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BufferPool.java",
  "functionName": "createDir",
  "functionId": "createDir___dirPath-String",
  "sourceFilePath": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/BufferPool.java",
  "functionStartLine": 64,
  "functionEndLine": 90,
  "numCommitsSeen": 2,
  "timeTaken": 829,
  "changeHistory": [
    "82ff7bc9abc8f3ad549db898953d98ef142ab02d",
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2"
  ],
  "changeHistoryShort": {
    "82ff7bc9abc8f3ad549db898953d98ef142ab02d": "Ybodychange",
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82ff7bc9abc8f3ad549db898953d98ef142ab02d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16959. Resolve hadoop-cos dependency conflict. Contributed by Yang Yu.\n",
      "commitDate": "20/04/20 3:14 AM",
      "commitName": "82ff7bc9abc8f3ad549db898953d98ef142ab02d",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "27/09/19 1:53 AM",
      "commitNameOld": "8a9ede5cff816b66afc37e7c9d2b33aee48795d2",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 206.06,
      "commitsBetweenForRepo": 773,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,27 @@\n   private File createDir(String dirPath) throws IOException {\n     File dir \u003d new File(dirPath);\n-    if (null !\u003d dir) {\n-      if (!dir.exists()) {\n-        LOG.debug(\"Buffer dir: [{}] does not exists. create it first.\",\n-            dirPath);\n-        if (dir.mkdirs()) {\n-          if (!dir.setWritable(true) || !dir.setReadable(true)\n-              || !dir.setExecutable(true)) {\n-            LOG.warn(\"Set the buffer dir: [{}]\u0027s permission [writable,\"\n-                + \"readable, executable] failed.\", dir.getAbsolutePath());\n-          }\n-          LOG.debug(\"Buffer dir: [{}] is created successfully.\",\n-              dir.getAbsolutePath());\n-        } else {\n-          // Once again, check if it has been created successfully.\n-          // Prevent problems created by multiple processes at the same time.\n-          if (!dir.exists()) {\n-            throw new IOException(\"buffer dir:\" + dir.getAbsolutePath()\n-                + \" is created unsuccessfully\");\n-          }\n+    if (!dir.exists()) {\n+      LOG.debug(\"Buffer dir: [{}] does not exists. create it first.\",\n+          dirPath);\n+      if (dir.mkdirs()) {\n+        if (!dir.setWritable(true) || !dir.setReadable(true)\n+            || !dir.setExecutable(true)) {\n+          LOG.warn(\"Set the buffer dir: [{}]\u0027s permission [writable,\"\n+              + \"readable, executable] failed.\", dir.getAbsolutePath());\n         }\n+        LOG.debug(\"Buffer dir: [{}] is created successfully.\",\n+            dir.getAbsolutePath());\n       } else {\n-        LOG.debug(\"buffer dir: {} already exists.\", dirPath);\n+        // Once again, check if it has been created successfully.\n+        // Prevent problems created by multiple processes at the same time.\n+        if (!dir.exists()) {\n+          throw new IOException(\"buffer dir:\" + dir.getAbsolutePath()\n+              + \" is created unsuccessfully\");\n+        }\n       }\n     } else {\n-      throw new IOException(\"creating buffer dir: \" + dir.getAbsolutePath()\n-          + \"unsuccessfully.\");\n+      LOG.debug(\"buffer dir: {} already exists.\", dirPath);\n     }\n \n     return dir;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private File createDir(String dirPath) throws IOException {\n    File dir \u003d new File(dirPath);\n    if (!dir.exists()) {\n      LOG.debug(\"Buffer dir: [{}] does not exists. create it first.\",\n          dirPath);\n      if (dir.mkdirs()) {\n        if (!dir.setWritable(true) || !dir.setReadable(true)\n            || !dir.setExecutable(true)) {\n          LOG.warn(\"Set the buffer dir: [{}]\u0027s permission [writable,\"\n              + \"readable, executable] failed.\", dir.getAbsolutePath());\n        }\n        LOG.debug(\"Buffer dir: [{}] is created successfully.\",\n            dir.getAbsolutePath());\n      } else {\n        // Once again, check if it has been created successfully.\n        // Prevent problems created by multiple processes at the same time.\n        if (!dir.exists()) {\n          throw new IOException(\"buffer dir:\" + dir.getAbsolutePath()\n              + \" is created unsuccessfully\");\n        }\n      }\n    } else {\n      LOG.debug(\"buffer dir: {} already exists.\", dirPath);\n    }\n\n    return dir;\n  }",
      "path": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/BufferPool.java",
      "extendedDetails": {}
    },
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15616. Incorporate Tencent Cloud COS File System Implementation. Contributed by Yang Yu.\n",
      "commitDate": "27/09/19 1:53 AM",
      "commitName": "8a9ede5cff816b66afc37e7c9d2b33aee48795d2",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,32 @@\n+  private File createDir(String dirPath) throws IOException {\n+    File dir \u003d new File(dirPath);\n+    if (null !\u003d dir) {\n+      if (!dir.exists()) {\n+        LOG.debug(\"Buffer dir: [{}] does not exists. create it first.\",\n+            dirPath);\n+        if (dir.mkdirs()) {\n+          if (!dir.setWritable(true) || !dir.setReadable(true)\n+              || !dir.setExecutable(true)) {\n+            LOG.warn(\"Set the buffer dir: [{}]\u0027s permission [writable,\"\n+                + \"readable, executable] failed.\", dir.getAbsolutePath());\n+          }\n+          LOG.debug(\"Buffer dir: [{}] is created successfully.\",\n+              dir.getAbsolutePath());\n+        } else {\n+          // Once again, check if it has been created successfully.\n+          // Prevent problems created by multiple processes at the same time.\n+          if (!dir.exists()) {\n+            throw new IOException(\"buffer dir:\" + dir.getAbsolutePath()\n+                + \" is created unsuccessfully\");\n+          }\n+        }\n+      } else {\n+        LOG.debug(\"buffer dir: {} already exists.\", dirPath);\n+      }\n+    } else {\n+      throw new IOException(\"creating buffer dir: \" + dir.getAbsolutePath()\n+          + \"unsuccessfully.\");\n+    }\n+\n+    return dir;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private File createDir(String dirPath) throws IOException {\n    File dir \u003d new File(dirPath);\n    if (null !\u003d dir) {\n      if (!dir.exists()) {\n        LOG.debug(\"Buffer dir: [{}] does not exists. create it first.\",\n            dirPath);\n        if (dir.mkdirs()) {\n          if (!dir.setWritable(true) || !dir.setReadable(true)\n              || !dir.setExecutable(true)) {\n            LOG.warn(\"Set the buffer dir: [{}]\u0027s permission [writable,\"\n                + \"readable, executable] failed.\", dir.getAbsolutePath());\n          }\n          LOG.debug(\"Buffer dir: [{}] is created successfully.\",\n              dir.getAbsolutePath());\n        } else {\n          // Once again, check if it has been created successfully.\n          // Prevent problems created by multiple processes at the same time.\n          if (!dir.exists()) {\n            throw new IOException(\"buffer dir:\" + dir.getAbsolutePath()\n                + \" is created unsuccessfully\");\n          }\n        }\n      } else {\n        LOG.debug(\"buffer dir: {} already exists.\", dirPath);\n      }\n    } else {\n      throw new IOException(\"creating buffer dir: \" + dir.getAbsolutePath()\n          + \"unsuccessfully.\");\n    }\n\n    return dir;\n  }",
      "path": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/BufferPool.java"
    }
  }
}