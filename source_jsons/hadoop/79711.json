{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultipartUploader.java",
  "functionName": "checkUploadId",
  "functionId": "checkUploadId___uploadId-byte[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/MultipartUploader.java",
  "functionStartLine": 110,
  "functionEndLine": 115,
  "numCommitsSeen": 7,
  "timeTaken": 3712,
  "changeHistory": [
    "c1d24f848345f6d34a2ac2d570d49e9787a0df6a",
    "2e6c1109dcdeedb59a3345047e9201271c9a0b27",
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa"
  ],
  "changeHistoryShort": {
    "c1d24f848345f6d34a2ac2d570d49e9787a0df6a": "Ybodychange",
    "2e6c1109dcdeedb59a3345047e9201271c9a0b27": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c1d24f848345f6d34a2ac2d570d49e9787a0df6a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13713. Add specification of Multipart Upload API to FS specification, with contract tests.\n\nContributed by Ewan Higgs and Steve Loughran.\n",
      "commitDate": "29/11/18 7:12 AM",
      "commitName": "c1d24f848345f6d34a2ac2d570d49e9787a0df6a",
      "commitAuthor": "Ewan Higgs",
      "commitDateOld": "24/09/18 8:49 AM",
      "commitNameOld": "d060cbea48ffc75da0f4fa98c3ea5203d6db1360",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 65.97,
      "commitsBetweenForRepo": 566,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n   protected void checkUploadId(byte[] uploadId)\n       throws IllegalArgumentException {\n-    Preconditions.checkArgument(uploadId.length \u003e 0,\n+    checkArgument(uploadId !\u003d null, \"null uploadId\");\n+    checkArgument(uploadId.length \u003e 0,\n         \"Empty UploadId is not valid\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkUploadId(byte[] uploadId)\n      throws IllegalArgumentException {\n    checkArgument(uploadId !\u003d null, \"null uploadId\");\n    checkArgument(uploadId.length \u003e 0,\n        \"Empty UploadId is not valid\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/MultipartUploader.java",
      "extendedDetails": {}
    },
    "2e6c1109dcdeedb59a3345047e9201271c9a0b27": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HADOOP-15667. FileSystemMultipartUploader should verify that UploadHandle has non-0 length.\nContributed by Ewan Higgs\n",
      "commitDate": "30/08/18 6:33 AM",
      "commitName": "2e6c1109dcdeedb59a3345047e9201271c9a0b27",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-15667. FileSystemMultipartUploader should verify that UploadHandle has non-0 length.\nContributed by Ewan Higgs\n",
          "commitDate": "30/08/18 6:33 AM",
          "commitName": "2e6c1109dcdeedb59a3345047e9201271c9a0b27",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "29/08/18 10:07 PM",
          "commitNameOld": "781437c219dc3422797a32dc7ba72cd4f5ee38e2",
          "commitAuthorOld": "Kitti Nanasi",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,5 @@\n-  private void checkUploadId(byte[] uploadId) throws IllegalArgumentException {\n+  protected void checkUploadId(byte[] uploadId)\n+      throws IllegalArgumentException {\n     Preconditions.checkArgument(uploadId.length \u003e 0,\n         \"Empty UploadId is not valid\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void checkUploadId(byte[] uploadId)\n      throws IllegalArgumentException {\n    Preconditions.checkArgument(uploadId.length \u003e 0,\n        \"Empty UploadId is not valid\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/MultipartUploader.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AMultipartUploader.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/MultipartUploader.java",
            "oldMethodName": "checkUploadId",
            "newMethodName": "checkUploadId"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-15667. FileSystemMultipartUploader should verify that UploadHandle has non-0 length.\nContributed by Ewan Higgs\n",
          "commitDate": "30/08/18 6:33 AM",
          "commitName": "2e6c1109dcdeedb59a3345047e9201271c9a0b27",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "29/08/18 10:07 PM",
          "commitNameOld": "781437c219dc3422797a32dc7ba72cd4f5ee38e2",
          "commitAuthorOld": "Kitti Nanasi",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,5 @@\n-  private void checkUploadId(byte[] uploadId) throws IllegalArgumentException {\n+  protected void checkUploadId(byte[] uploadId)\n+      throws IllegalArgumentException {\n     Preconditions.checkArgument(uploadId.length \u003e 0,\n         \"Empty UploadId is not valid\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void checkUploadId(byte[] uploadId)\n      throws IllegalArgumentException {\n    Preconditions.checkArgument(uploadId.length \u003e 0,\n        \"Empty UploadId is not valid\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/MultipartUploader.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        }
      ]
    },
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15576. S3A Multipart Uploader to work with S3Guard and encryption Originally contributed by Ewan Higgs with refinements by Steve Loughran.\n",
      "commitDate": "08/08/18 4:50 AM",
      "commitName": "2ec97abb2e93c1a8127e7a146c08e26454b583fa",
      "commitAuthor": "Ewan Higgs",
      "diff": "@@ -0,0 +1,4 @@\n+  private void checkUploadId(byte[] uploadId) throws IllegalArgumentException {\n+    Preconditions.checkArgument(uploadId.length \u003e 0,\n+        \"Empty UploadId is not valid\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkUploadId(byte[] uploadId) throws IllegalArgumentException {\n    Preconditions.checkArgument(uploadId.length \u003e 0,\n        \"Empty UploadId is not valid\");\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AMultipartUploader.java"
    }
  }
}