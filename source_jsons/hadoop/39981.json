{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerQueueManager.java",
  "functionName": "setQueueAcls",
  "functionId": "setQueueAcls___authorizer-YarnAuthorizationProvider__appPriorityACLManager-AppPriorityACLsManager__queues-CSQueueStore",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
  "functionStartLine": 337,
  "functionEndLine": 357,
  "numCommitsSeen": 176,
  "timeTaken": 6985,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "287d3d6804a869723ae36605a3c2d2b3eae3941e",
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d",
    "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ymultichange(Yparameterchange,Ybodychange)",
    "287d3d6804a869723ae36605a3c2d2b3eae3941e": "Ymultichange(Yparameterchange,Ybodychange)",
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d": "Ymovefromfile",
    "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9": "Ybodychange",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/01/20 9:46 AM",
          "commitNameOld": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 56.73,
          "commitsBetweenForRepo": 185,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n-      AppPriorityACLsManager appPriorityACLManager, Map\u003cString, CSQueue\u003e queues)\n+      AppPriorityACLsManager appPriorityACLManager, CSQueueStore queues)\n       throws IOException {\n     List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n-    for (CSQueue queue : queues.values()) {\n+    for (CSQueue queue : queues.getQueues()) {\n       AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n       permissions.add(\n           new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n \n       if (queue instanceof LeafQueue) {\n         LeafQueue lQueue \u003d (LeafQueue) queue;\n \n         // Clear Priority ACLs first since reinitialize also call same.\n-        appPriorityACLManager.clearPriorityACLs(lQueue.getQueueName());\n+        appPriorityACLManager.clearPriorityACLs(lQueue.getQueuePath());\n         appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n-            lQueue.getQueueName());\n+            lQueue.getQueuePath());\n       }\n     }\n     authorizer.setPermission(permissions,\n         UserGroupInformation.getCurrentUser());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      AppPriorityACLsManager appPriorityACLManager, CSQueueStore queues)\n      throws IOException {\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : queues.getQueues()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      permissions.add(\n          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n\n      if (queue instanceof LeafQueue) {\n        LeafQueue lQueue \u003d (LeafQueue) queue;\n\n        // Clear Priority ACLs first since reinitialize also call same.\n        appPriorityACLManager.clearPriorityACLs(lQueue.getQueuePath());\n        appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n            lQueue.getQueuePath());\n      }\n    }\n    authorizer.setPermission(permissions,\n        UserGroupInformation.getCurrentUser());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
          "extendedDetails": {
            "oldValue": "[authorizer-YarnAuthorizationProvider, appPriorityACLManager-AppPriorityACLsManager, queues-Map\u003cString,CSQueue\u003e]",
            "newValue": "[authorizer-YarnAuthorizationProvider, appPriorityACLManager-AppPriorityACLsManager, queues-CSQueueStore]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/01/20 9:46 AM",
          "commitNameOld": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 56.73,
          "commitsBetweenForRepo": 185,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n-      AppPriorityACLsManager appPriorityACLManager, Map\u003cString, CSQueue\u003e queues)\n+      AppPriorityACLsManager appPriorityACLManager, CSQueueStore queues)\n       throws IOException {\n     List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n-    for (CSQueue queue : queues.values()) {\n+    for (CSQueue queue : queues.getQueues()) {\n       AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n       permissions.add(\n           new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n \n       if (queue instanceof LeafQueue) {\n         LeafQueue lQueue \u003d (LeafQueue) queue;\n \n         // Clear Priority ACLs first since reinitialize also call same.\n-        appPriorityACLManager.clearPriorityACLs(lQueue.getQueueName());\n+        appPriorityACLManager.clearPriorityACLs(lQueue.getQueuePath());\n         appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n-            lQueue.getQueueName());\n+            lQueue.getQueuePath());\n       }\n     }\n     authorizer.setPermission(permissions,\n         UserGroupInformation.getCurrentUser());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      AppPriorityACLsManager appPriorityACLManager, CSQueueStore queues)\n      throws IOException {\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : queues.getQueues()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      permissions.add(\n          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n\n      if (queue instanceof LeafQueue) {\n        LeafQueue lQueue \u003d (LeafQueue) queue;\n\n        // Clear Priority ACLs first since reinitialize also call same.\n        appPriorityACLManager.clearPriorityACLs(lQueue.getQueuePath());\n        appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n            lQueue.getQueuePath());\n      }\n    }\n    authorizer.setPermission(permissions,\n        UserGroupInformation.getCurrentUser());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "287d3d6804a869723ae36605a3c2d2b3eae3941e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3955. Support for application priority ACLs in queues of CapacityScheduler. (Sunil G via wangda)\n",
      "commitDate": "09/01/17 8:40 AM",
      "commitName": "287d3d6804a869723ae36605a3c2d2b3eae3941e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3955. Support for application priority ACLs in queues of CapacityScheduler. (Sunil G via wangda)\n",
          "commitDate": "09/01/17 8:40 AM",
          "commitName": "287d3d6804a869723ae36605a3c2d2b3eae3941e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "27/12/16 9:18 PM",
          "commitNameOld": "0840b4329b2428b20b862f70d72cbdcd6d1618ed",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 12.47,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,21 @@\n   public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n-      Map\u003cString, CSQueue\u003e queues) throws IOException {\n+      AppPriorityACLsManager appPriorityACLManager, Map\u003cString, CSQueue\u003e queues)\n+      throws IOException {\n     List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n     for (CSQueue queue : queues.values()) {\n       AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n       permissions.add(\n           new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n+\n+      if (queue instanceof LeafQueue) {\n+        LeafQueue lQueue \u003d (LeafQueue) queue;\n+\n+        // Clear Priority ACLs first since reinitialize also call same.\n+        appPriorityACLManager.clearPriorityACLs(lQueue.getQueueName());\n+        appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n+            lQueue.getQueueName());\n+      }\n     }\n     authorizer.setPermission(permissions,\n         UserGroupInformation.getCurrentUser());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      AppPriorityACLsManager appPriorityACLManager, Map\u003cString, CSQueue\u003e queues)\n      throws IOException {\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : queues.values()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      permissions.add(\n          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n\n      if (queue instanceof LeafQueue) {\n        LeafQueue lQueue \u003d (LeafQueue) queue;\n\n        // Clear Priority ACLs first since reinitialize also call same.\n        appPriorityACLManager.clearPriorityACLs(lQueue.getQueueName());\n        appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n            lQueue.getQueueName());\n      }\n    }\n    authorizer.setPermission(permissions,\n        UserGroupInformation.getCurrentUser());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
          "extendedDetails": {
            "oldValue": "[authorizer-YarnAuthorizationProvider, queues-Map\u003cString,CSQueue\u003e]",
            "newValue": "[authorizer-YarnAuthorizationProvider, appPriorityACLManager-AppPriorityACLsManager, queues-Map\u003cString,CSQueue\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3955. Support for application priority ACLs in queues of CapacityScheduler. (Sunil G via wangda)\n",
          "commitDate": "09/01/17 8:40 AM",
          "commitName": "287d3d6804a869723ae36605a3c2d2b3eae3941e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "27/12/16 9:18 PM",
          "commitNameOld": "0840b4329b2428b20b862f70d72cbdcd6d1618ed",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 12.47,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,21 @@\n   public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n-      Map\u003cString, CSQueue\u003e queues) throws IOException {\n+      AppPriorityACLsManager appPriorityACLManager, Map\u003cString, CSQueue\u003e queues)\n+      throws IOException {\n     List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n     for (CSQueue queue : queues.values()) {\n       AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n       permissions.add(\n           new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n+\n+      if (queue instanceof LeafQueue) {\n+        LeafQueue lQueue \u003d (LeafQueue) queue;\n+\n+        // Clear Priority ACLs first since reinitialize also call same.\n+        appPriorityACLManager.clearPriorityACLs(lQueue.getQueueName());\n+        appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n+            lQueue.getQueueName());\n+      }\n     }\n     authorizer.setPermission(permissions,\n         UserGroupInformation.getCurrentUser());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      AppPriorityACLsManager appPriorityACLManager, Map\u003cString, CSQueue\u003e queues)\n      throws IOException {\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : queues.values()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      permissions.add(\n          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n\n      if (queue instanceof LeafQueue) {\n        LeafQueue lQueue \u003d (LeafQueue) queue;\n\n        // Clear Priority ACLs first since reinitialize also call same.\n        appPriorityACLManager.clearPriorityACLs(lQueue.getQueueName());\n        appPriorityACLManager.addPrioirityACLs(lQueue.getPriorityACLs(),\n            lQueue.getQueueName());\n      }\n    }\n    authorizer.setPermission(permissions,\n        UserGroupInformation.getCurrentUser());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-5761. Separate QueueManager from Scheduler. (Xuan Gong via gtcarrera9)\n",
      "commitDate": "30/11/16 1:38 PM",
      "commitName": "69fb70c31aa277f7fb14b05c0185ddc5cd90793d",
      "commitAuthor": "Li Lu",
      "commitDateOld": "30/11/16 1:01 PM",
      "commitNameOld": "3fd844b99fdfae6be6e5e261f371d175aad14229",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n       Map\u003cString, CSQueue\u003e queues) throws IOException {\n     List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n     for (CSQueue queue : queues.values()) {\n       AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n       permissions.add(\n           new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n     }\n-    authorizer.setPermission(permissions, UserGroupInformation.getCurrentUser());\n+    authorizer.setPermission(permissions,\n+        UserGroupInformation.getCurrentUser());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      Map\u003cString, CSQueue\u003e queues) throws IOException {\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : queues.values()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      permissions.add(\n          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n    }\n    authorizer.setPermission(permissions,\n        UserGroupInformation.getCurrentUser());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerQueueManager.java",
        "oldMethodName": "setQueueAcls",
        "newMethodName": "setQueueAcls"
      }
    },
    "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4571. Make app id/name available to the yarn authorizer provider for better auditing. (Jian He via wangda)\n",
      "commitDate": "12/01/16 9:18 PM",
      "commitName": "c0537bcd2c2dcdb4812fcab7badf42e4f55a54d9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/01/16 3:51 PM",
      "commitNameOld": "109e528ef5d8df07443373751266b4417acc981a",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 4.23,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n       Map\u003cString, CSQueue\u003e queues) throws IOException {\n+    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n     for (CSQueue queue : queues.values()) {\n       AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n-      authorizer.setPermission(csQueue.getPrivilegedEntity(),\n-        csQueue.getACLs(), UserGroupInformation.getCurrentUser());\n+      permissions.add(\n+          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n     }\n+    authorizer.setPermission(permissions, UserGroupInformation.getCurrentUser());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      Map\u003cString, CSQueue\u003e queues) throws IOException {\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : queues.values()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      permissions.add(\n          new Permission(csQueue.getPrivilegedEntity(), csQueue.getACLs()));\n    }\n    authorizer.setPermission(permissions, UserGroupInformation.getCurrentUser());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3100. Made YARN authorization pluggable. Contributed by Jian He.\n",
      "commitDate": "09/02/15 8:34 PM",
      "commitName": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,8 @@\n+  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n+      Map\u003cString, CSQueue\u003e queues) throws IOException {\n+    for (CSQueue queue : queues.values()) {\n+      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n+      authorizer.setPermission(csQueue.getPrivilegedEntity(),\n+        csQueue.getACLs(), UserGroupInformation.getCurrentUser());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void setQueueAcls(YarnAuthorizationProvider authorizer,\n      Map\u003cString, CSQueue\u003e queues) throws IOException {\n    for (CSQueue queue : queues.values()) {\n      AbstractCSQueue csQueue \u003d (AbstractCSQueue) queue;\n      authorizer.setPermission(csQueue.getPrivilegedEntity(),\n        csQueue.getACLs(), UserGroupInformation.getCurrentUser());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}