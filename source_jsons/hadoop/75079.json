{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractJavaKeyStoreProvider.java",
  "functionName": "getAliases",
  "functionId": "getAliases",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
  "functionStartLine": 203,
  "functionEndLine": 222,
  "numCommitsSeen": 13,
  "timeTaken": 1512,
  "changeHistory": [
    "860b8373c3a851386b8cd2d4265dd35e5aabc941",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": "Ymultichange(Ymovefromfile,Ybodychange)",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.\n",
      "commitDate": "28/05/15 3:01 PM",
      "commitName": "860b8373c3a851386b8cd2d4265dd35e5aabc941",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.\n",
          "commitDate": "28/05/15 3:01 PM",
          "commitName": "860b8373c3a851386b8cd2d4265dd35e5aabc941",
          "commitAuthor": "cnauroth",
          "commitDateOld": "28/05/15 1:24 PM",
          "commitNameOld": "ae1454342064c71f414d20ad0885e60a335c7420",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   public List\u003cString\u003e getAliases() throws IOException {\n     readLock.lock();\n     try {\n       ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n       String alias \u003d null;\n       try {\n         Enumeration\u003cString\u003e e \u003d keyStore.aliases();\n         while (e.hasMoreElements()) {\n-           alias \u003d e.nextElement();\n-           list.add(alias);\n+          alias \u003d e.nextElement();\n+          list.add(alias);\n         }\n       } catch (KeyStoreException e) {\n-        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \" + path, e);\n+        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \"\n+            + getPathAsString(), e);\n       }\n       return list;\n-    }\n-    finally {\n+    } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cString\u003e getAliases() throws IOException {\n    readLock.lock();\n    try {\n      ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n      String alias \u003d null;\n      try {\n        Enumeration\u003cString\u003e e \u003d keyStore.aliases();\n        while (e.hasMoreElements()) {\n          alias \u003d e.nextElement();\n          list.add(alias);\n        }\n      } catch (KeyStoreException e) {\n        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \"\n            + getPathAsString(), e);\n      }\n      return list;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
            "oldMethodName": "getAliases",
            "newMethodName": "getAliases"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.\n",
          "commitDate": "28/05/15 3:01 PM",
          "commitName": "860b8373c3a851386b8cd2d4265dd35e5aabc941",
          "commitAuthor": "cnauroth",
          "commitDateOld": "28/05/15 1:24 PM",
          "commitNameOld": "ae1454342064c71f414d20ad0885e60a335c7420",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   public List\u003cString\u003e getAliases() throws IOException {\n     readLock.lock();\n     try {\n       ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n       String alias \u003d null;\n       try {\n         Enumeration\u003cString\u003e e \u003d keyStore.aliases();\n         while (e.hasMoreElements()) {\n-           alias \u003d e.nextElement();\n-           list.add(alias);\n+          alias \u003d e.nextElement();\n+          list.add(alias);\n         }\n       } catch (KeyStoreException e) {\n-        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \" + path, e);\n+        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \"\n+            + getPathAsString(), e);\n       }\n       return list;\n-    }\n-    finally {\n+    } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cString\u003e getAliases() throws IOException {\n    readLock.lock();\n    try {\n      ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n      String alias \u003d null;\n      try {\n        Enumeration\u003cString\u003e e \u003d keyStore.aliases();\n        while (e.hasMoreElements()) {\n          alias \u003d e.nextElement();\n          list.add(alias);\n        }\n      } catch (KeyStoreException e) {\n        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \"\n            + getPathAsString(), e);\n      }\n      return list;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,20 @@\n+  public List\u003cString\u003e getAliases() throws IOException {\n+    readLock.lock();\n+    try {\n+      ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n+      String alias \u003d null;\n+      try {\n+        Enumeration\u003cString\u003e e \u003d keyStore.aliases();\n+        while (e.hasMoreElements()) {\n+           alias \u003d e.nextElement();\n+           list.add(alias);\n+        }\n+      } catch (KeyStoreException e) {\n+        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \" + path, e);\n+      }\n+      return list;\n+    }\n+    finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e getAliases() throws IOException {\n    readLock.lock();\n    try {\n      ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n      String alias \u003d null;\n      try {\n        Enumeration\u003cString\u003e e \u003d keyStore.aliases();\n        while (e.hasMoreElements()) {\n           alias \u003d e.nextElement();\n           list.add(alias);\n        }\n      } catch (KeyStoreException e) {\n        throw new IOException(\"Can\u0027t get alias \" + alias + \" from \" + path, e);\n      }\n      return list;\n    }\n    finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java"
    }
  }
}