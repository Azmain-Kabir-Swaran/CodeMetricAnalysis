{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RLESparseResourceAllocation.java",
  "functionName": "getLatestNonNullTime",
  "functionId": "getLatestNonNullTime",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/RLESparseResourceAllocation.java",
  "functionStartLine": 172,
  "functionEndLine": 190,
  "numCommitsSeen": 15,
  "timeTaken": 2119,
  "changeHistory": [
    "da1016365aba1cee9c06771ab142d077379f27af",
    "cf4b34282aafee9f6b09d3433c4de1ae4b359168"
  ],
  "changeHistoryShort": {
    "da1016365aba1cee9c06771ab142d077379f27af": "Ymultichange(Yrename,Ybodychange)",
    "cf4b34282aafee9f6b09d3433c4de1ae4b359168": "Yintroduced"
  },
  "changeHistoryDetails": {
    "da1016365aba1cee9c06771ab142d077379f27af": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-3454. Add efficient merge operation to RLESparseResourceAllocation (Carlo Curino via asuresh)\n",
      "commitDate": "21/11/15 9:59 AM",
      "commitName": "da1016365aba1cee9c06771ab142d077379f27af",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3454. Add efficient merge operation to RLESparseResourceAllocation (Carlo Curino via asuresh)\n",
          "commitDate": "21/11/15 9:59 AM",
          "commitName": "da1016365aba1cee9c06771ab142d077379f27af",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "25/07/15 7:39 AM",
          "commitNameOld": "156f24ead00436faad5d4aeef327a546392cd265",
          "commitAuthorOld": "ccurino",
          "daysBetweenCommits": 119.14,
          "commitsBetweenForRepo": 803,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  public long getLatestEndTime() {\n+  public long getLatestNonNullTime() {\n     readLock.lock();\n     try {\n       if (cumulativeCapacity.isEmpty()) {\n         return -1;\n       } else {\n-        return cumulativeCapacity.lastKey();\n+        // the last entry might contain null (to terminate\n+        // the sequence)... return previous one.\n+        Entry\u003cLong, Resource\u003e last \u003d cumulativeCapacity.lastEntry();\n+        if (last.getValue() \u003d\u003d null) {\n+          return cumulativeCapacity.floorKey(last.getKey() - 1);\n+        } else {\n+          return last.getKey();\n+        }\n       }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getLatestNonNullTime() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return -1;\n      } else {\n        // the last entry might contain null (to terminate\n        // the sequence)... return previous one.\n        Entry\u003cLong, Resource\u003e last \u003d cumulativeCapacity.lastEntry();\n        if (last.getValue() \u003d\u003d null) {\n          return cumulativeCapacity.floorKey(last.getKey() - 1);\n        } else {\n          return last.getKey();\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/RLESparseResourceAllocation.java",
          "extendedDetails": {
            "oldValue": "getLatestEndTime",
            "newValue": "getLatestNonNullTime"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3454. Add efficient merge operation to RLESparseResourceAllocation (Carlo Curino via asuresh)\n",
          "commitDate": "21/11/15 9:59 AM",
          "commitName": "da1016365aba1cee9c06771ab142d077379f27af",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "25/07/15 7:39 AM",
          "commitNameOld": "156f24ead00436faad5d4aeef327a546392cd265",
          "commitAuthorOld": "ccurino",
          "daysBetweenCommits": 119.14,
          "commitsBetweenForRepo": 803,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  public long getLatestEndTime() {\n+  public long getLatestNonNullTime() {\n     readLock.lock();\n     try {\n       if (cumulativeCapacity.isEmpty()) {\n         return -1;\n       } else {\n-        return cumulativeCapacity.lastKey();\n+        // the last entry might contain null (to terminate\n+        // the sequence)... return previous one.\n+        Entry\u003cLong, Resource\u003e last \u003d cumulativeCapacity.lastEntry();\n+        if (last.getValue() \u003d\u003d null) {\n+          return cumulativeCapacity.floorKey(last.getKey() - 1);\n+        } else {\n+          return last.getKey();\n+        }\n       }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getLatestNonNullTime() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return -1;\n      } else {\n        // the last entry might contain null (to terminate\n        // the sequence)... return previous one.\n        Entry\u003cLong, Resource\u003e last \u003d cumulativeCapacity.lastEntry();\n        if (last.getValue() \u003d\u003d null) {\n          return cumulativeCapacity.floorKey(last.getKey() - 1);\n        } else {\n          return last.getKey();\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/RLESparseResourceAllocation.java",
          "extendedDetails": {}
        }
      ]
    },
    "cf4b34282aafee9f6b09d3433c4de1ae4b359168": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1709. In-memory data structures used to track resources over time to enable reservations.\n(cherry picked from commit 0d8b2cd88b958b1e602fd4ea4078ef8d4742a7c3)\n",
      "commitDate": "03/10/14 3:41 PM",
      "commitName": "cf4b34282aafee9f6b09d3433c4de1ae4b359168",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,12 @@\n+  public long getLatestEndTime() {\n+    readLock.lock();\n+    try {\n+      if (cumulativeCapacity.isEmpty()) {\n+        return -1;\n+      } else {\n+        return cumulativeCapacity.lastKey();\n+      }\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public long getLatestEndTime() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return -1;\n      } else {\n        return cumulativeCapacity.lastKey();\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/RLESparseResourceAllocation.java"
    }
  }
}