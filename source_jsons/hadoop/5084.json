{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatPBSnapshot.java",
  "functionName": "serializeFileDiffList",
  "functionId": "serializeFileDiffList___file-INodeFile__out-OutputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
  "functionStartLine": 542,
  "functionEndLine": 569,
  "numCommitsSeen": 34,
  "timeTaken": 3310,
  "changeHistory": [
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "08ac06283a3e9bf0d49d873823aabd419b08e41f",
    "d03acc756094a332f98167426a39db8faf38f450",
    "5c978a43c3052cc1466b23653c354399186b4e10",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "08ac06283a3e9bf0d49d873823aabd419b08e41f": "Ybodychange",
    "d03acc756094a332f98167426a39db8faf38f450": "Ybodychange",
    "5c978a43c3052cc1466b23653c354399186b4e10": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13142. Define and Implement a DiifList Interface to store and manage SnapshotDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "15/02/18 3:33 AM",
      "commitName": "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "06/02/18 2:46 PM",
      "commitNameOld": "4d1bf33d0fa7689a6f83a9c6e5adaac665c0d5d5",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 8.53,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void serializeFileDiffList(INodeFile file, OutputStream out)\n         throws IOException {\n       FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n       if (sf !\u003d null) {\n-        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n+        DiffList\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n         SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n             .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n             .setNumOfDiff(diffList.size()).build();\n         entry.writeDelimitedTo(out);\n         for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n           FileDiff diff \u003d diffList.get(i);\n           SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n               .newBuilder().setSnapshotId(diff.getSnapshotId())\n               .setFileSize(diff.getFileSize());\n           if(diff.getBlocks() !\u003d null) {\n             for(Block block : diff.getBlocks()) {\n               fb.addBlocks(PBHelperClient.convert(block));\n             }\n           }\n           INodeFileAttributes copy \u003d diff.snapshotINode;\n           if (copy !\u003d null) {\n             fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                 .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n           }\n           fb.build().writeDelimitedTo(out);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void serializeFileDiffList(INodeFile file, OutputStream out)\n        throws IOException {\n      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n      if (sf !\u003d null) {\n        DiffList\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n            .setNumOfDiff(diffList.size()).build();\n        entry.writeDelimitedTo(out);\n        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n          FileDiff diff \u003d diffList.get(i);\n          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n              .newBuilder().setSnapshotId(diff.getSnapshotId())\n              .setFileSize(diff.getFileSize());\n          if(diff.getBlocks() !\u003d null) {\n            for(Block block : diff.getBlocks()) {\n              fb.addBlocks(PBHelperClient.convert(block));\n            }\n          }\n          INodeFileAttributes copy \u003d diff.snapshotINode;\n          if (copy !\u003d null) {\n            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n          }\n          fb.build().writeDelimitedTo(out);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/08/15 12:09 AM",
      "commitNameOld": "745d04be59accf80feda0ad38efcc74ba362f2ca",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.78,
      "commitsBetweenForRepo": 178,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void serializeFileDiffList(INodeFile file, OutputStream out)\n         throws IOException {\n       FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n       if (sf !\u003d null) {\n         List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n         SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n             .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n             .setNumOfDiff(diffList.size()).build();\n         entry.writeDelimitedTo(out);\n         for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n           FileDiff diff \u003d diffList.get(i);\n           SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n               .newBuilder().setSnapshotId(diff.getSnapshotId())\n               .setFileSize(diff.getFileSize());\n           if(diff.getBlocks() !\u003d null) {\n             for(Block block : diff.getBlocks()) {\n-              fb.addBlocks(PBHelper.convert(block));\n+              fb.addBlocks(PBHelperClient.convert(block));\n             }\n           }\n           INodeFileAttributes copy \u003d diff.snapshotINode;\n           if (copy !\u003d null) {\n             fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                 .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n           }\n           fb.build().writeDelimitedTo(out);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void serializeFileDiffList(INodeFile file, OutputStream out)\n        throws IOException {\n      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n      if (sf !\u003d null) {\n        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n            .setNumOfDiff(diffList.size()).build();\n        entry.writeDelimitedTo(out);\n        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n          FileDiff diff \u003d diffList.get(i);\n          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n              .newBuilder().setSnapshotId(diff.getSnapshotId())\n              .setFileSize(diff.getFileSize());\n          if(diff.getBlocks() !\u003d null) {\n            for(Block block : diff.getBlocks()) {\n              fb.addBlocks(PBHelperClient.convert(block));\n            }\n          }\n          INodeFileAttributes copy \u003d diff.snapshotINode;\n          if (copy !\u003d null) {\n            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n          }\n          fb.build().writeDelimitedTo(out);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "08ac06283a3e9bf0d49d873823aabd419b08e41f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7056. Snapshot support for truncate. Contributed by Konstantin Shvachko and Plamen Jeliazkov.",
      "commitDate": "13/01/15 12:24 AM",
      "commitName": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "04/12/14 8:49 PM",
      "commitNameOld": "0653918dad855b394e8e3b8b3f512f474d872ee9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 39.15,
      "commitsBetweenForRepo": 219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,28 @@\n     private void serializeFileDiffList(INodeFile file, OutputStream out)\n         throws IOException {\n       FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n       if (sf !\u003d null) {\n         List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n         SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n             .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n             .setNumOfDiff(diffList.size()).build();\n         entry.writeDelimitedTo(out);\n         for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n           FileDiff diff \u003d diffList.get(i);\n           SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n               .newBuilder().setSnapshotId(diff.getSnapshotId())\n               .setFileSize(diff.getFileSize());\n+          if(diff.getBlocks() !\u003d null) {\n+            for(Block block : diff.getBlocks()) {\n+              fb.addBlocks(PBHelper.convert(block));\n+            }\n+          }\n           INodeFileAttributes copy \u003d diff.snapshotINode;\n           if (copy !\u003d null) {\n             fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                 .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n           }\n           fb.build().writeDelimitedTo(out);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void serializeFileDiffList(INodeFile file, OutputStream out)\n        throws IOException {\n      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n      if (sf !\u003d null) {\n        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n            .setNumOfDiff(diffList.size()).build();\n        entry.writeDelimitedTo(out);\n        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n          FileDiff diff \u003d diffList.get(i);\n          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n              .newBuilder().setSnapshotId(diff.getSnapshotId())\n              .setFileSize(diff.getFileSize());\n          if(diff.getBlocks() !\u003d null) {\n            for(Block block : diff.getBlocks()) {\n              fb.addBlocks(PBHelper.convert(block));\n            }\n          }\n          INodeFileAttributes copy \u003d diff.snapshotINode;\n          if (copy !\u003d null) {\n            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n          }\n          fb.build().writeDelimitedTo(out);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "d03acc756094a332f98167426a39db8faf38f450": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5914. Incorporate ACLs with the changes from HDFS-5698. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1566991 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 10:25 PM",
      "commitName": "d03acc756094a332f98167426a39db8faf38f450",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "10/02/14 10:00 PM",
      "commitNameOld": "3bf2f04baca59ee7c74f13193a569ed1d6f5458e",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void serializeFileDiffList(INodeFile file, OutputStream out)\n         throws IOException {\n       FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n       if (sf !\u003d null) {\n         List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n         SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n             .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n             .setNumOfDiff(diffList.size()).build();\n         entry.writeDelimitedTo(out);\n         for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n           FileDiff diff \u003d diffList.get(i);\n           SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n               .newBuilder().setSnapshotId(diff.getSnapshotId())\n               .setFileSize(diff.getFileSize());\n           INodeFileAttributes copy \u003d diff.snapshotINode;\n           if (copy !\u003d null) {\n             fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n-                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext().getStringMap()));\n+                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n           }\n           fb.build().writeDelimitedTo(out);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void serializeFileDiffList(INodeFile file, OutputStream out)\n        throws IOException {\n      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n      if (sf !\u003d null) {\n        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n            .setNumOfDiff(diffList.size()).build();\n        entry.writeDelimitedTo(out);\n        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n          FileDiff diff \u003d diffList.get(i);\n          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n              .newBuilder().setSnapshotId(diff.getSnapshotId())\n              .setFileSize(diff.getFileSize());\n          INodeFileAttributes copy \u003d diff.snapshotINode;\n          if (copy !\u003d null) {\n            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext()));\n          }\n          fb.build().writeDelimitedTo(out);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "5c978a43c3052cc1466b23653c354399186b4e10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5915. Refactor FSImageFormatProtobuf to simplify cross section reads. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566824 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 3:13 PM",
      "commitName": "5c978a43c3052cc1466b23653c354399186b4e10",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "09/02/14 11:18 AM",
      "commitNameOld": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.16,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void serializeFileDiffList(INodeFile file, OutputStream out)\n         throws IOException {\n       FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n       if (sf !\u003d null) {\n         List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n         SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n             .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n             .setNumOfDiff(diffList.size()).build();\n         entry.writeDelimitedTo(out);\n         for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n           FileDiff diff \u003d diffList.get(i);\n           SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n               .newBuilder().setSnapshotId(diff.getSnapshotId())\n               .setFileSize(diff.getFileSize());\n           INodeFileAttributes copy \u003d diff.snapshotINode;\n           if (copy !\u003d null) {\n             fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n-                .setSnapshotCopy(buildINodeFile(copy, parent.getStringMap()));\n+                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext().getStringMap()));\n           }\n           fb.build().writeDelimitedTo(out);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void serializeFileDiffList(INodeFile file, OutputStream out)\n        throws IOException {\n      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n      if (sf !\u003d null) {\n        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n            .setNumOfDiff(diffList.size()).build();\n        entry.writeDelimitedTo(out);\n        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n          FileDiff diff \u003d diffList.get(i);\n          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n              .newBuilder().setSnapshotId(diff.getSnapshotId())\n              .setFileSize(diff.getFileSize());\n          INodeFileAttributes copy \u003d diff.snapshotINode;\n          if (copy !\u003d null) {\n            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                .setSnapshotCopy(buildINodeFile(copy, parent.getSaverContext().getStringMap()));\n          }\n          fb.build().writeDelimitedTo(out);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,23 @@\n+    private void serializeFileDiffList(INodeFile file, OutputStream out)\n+        throws IOException {\n+      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n+      if (sf !\u003d null) {\n+        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n+        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n+            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n+            .setNumOfDiff(diffList.size()).build();\n+        entry.writeDelimitedTo(out);\n+        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n+          FileDiff diff \u003d diffList.get(i);\n+          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n+              .newBuilder().setSnapshotId(diff.getSnapshotId())\n+              .setFileSize(diff.getFileSize());\n+          INodeFileAttributes copy \u003d diff.snapshotINode;\n+          if (copy !\u003d null) {\n+            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n+                .setSnapshotCopy(buildINodeFile(copy, parent.getStringMap()));\n+          }\n+          fb.build().writeDelimitedTo(out);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void serializeFileDiffList(INodeFile file, OutputStream out)\n        throws IOException {\n      FileWithSnapshotFeature sf \u003d file.getFileWithSnapshotFeature();\n      if (sf !\u003d null) {\n        List\u003cFileDiff\u003e diffList \u003d sf.getDiffs().asList();\n        SnapshotDiffSection.DiffEntry entry \u003d SnapshotDiffSection.DiffEntry\n            .newBuilder().setInodeId(file.getId()).setType(Type.FILEDIFF)\n            .setNumOfDiff(diffList.size()).build();\n        entry.writeDelimitedTo(out);\n        for (int i \u003d diffList.size() - 1; i \u003e\u003d 0; i--) {\n          FileDiff diff \u003d diffList.get(i);\n          SnapshotDiffSection.FileDiff.Builder fb \u003d SnapshotDiffSection.FileDiff\n              .newBuilder().setSnapshotId(diff.getSnapshotId())\n              .setFileSize(diff.getFileSize());\n          INodeFileAttributes copy \u003d diff.snapshotINode;\n          if (copy !\u003d null) {\n            fb.setName(ByteString.copyFrom(copy.getLocalNameBytes()))\n                .setSnapshotCopy(buildINodeFile(copy, parent.getStringMap()));\n          }\n          fb.build().writeDelimitedTo(out);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java"
    }
  }
}