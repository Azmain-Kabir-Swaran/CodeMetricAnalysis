{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeStatusUpdaterImpl.java",
  "functionName": "removeOrTrackCompletedContainersFromContext",
  "functionId": "removeOrTrackCompletedContainersFromContext___containerIds-List__ContainerId__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
  "functionStartLine": 700,
  "functionEndLine": 725,
  "numCommitsSeen": 207,
  "timeTaken": 5103,
  "changeHistory": [
    "1a18d5e514d13aa3a88e9b6089394a27296d6bc3",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
    "f45bc5a83ed2f2292ecf1f4c990b7153d8051fc9",
    "cc2a745f7e82c9fa6de03242952347c54c52dccc",
    "c3d475070a1ec54c4b05923f4782cef204effd2c",
    "0a641496c706fc175e7bf66d69ebf71c7d078e84",
    "1c4047b0e46e95a92509de2e59a93433f5968538"
  ],
  "changeHistoryShort": {
    "1a18d5e514d13aa3a88e9b6089394a27296d6bc3": "Ybodychange",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": "Ybodychange",
    "f45bc5a83ed2f2292ecf1f4c990b7153d8051fc9": "Ybodychange",
    "cc2a745f7e82c9fa6de03242952347c54c52dccc": "Ybodychange",
    "c3d475070a1ec54c4b05923f4782cef204effd2c": "Ymultichange(Yrename,Ybodychange)",
    "0a641496c706fc175e7bf66d69ebf71c7d078e84": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "1c4047b0e46e95a92509de2e59a93433f5968538": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a18d5e514d13aa3a88e9b6089394a27296d6bc3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6515. Fix warnings from Spotbugs in hadoop-yarn-server-nodemanager. Contributed by Naganarasimha G R.\n",
      "commitDate": "09/08/17 5:56 AM",
      "commitName": "1a18d5e514d13aa3a88e9b6089394a27296d6bc3",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/05/17 10:46 AM",
      "commitNameOld": "74a61438ca01e2191b54000af73b654a2d0b8253",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 90.8,
      "commitsBetweenForRepo": 513,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,26 @@\n   public void removeOrTrackCompletedContainersFromContext(\n       List\u003cContainerId\u003e containerIds) throws IOException {\n     Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n-    Set\u003cContainerId\u003e removedNullContainers \u003d new HashSet\u003cContainerId\u003e();\n \n     pendingContainersToRemove.addAll(containerIds);\n     Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n     while (iter.hasNext()) {\n       ContainerId containerId \u003d iter.next();\n       // remove the container only if the container is at DONE state\n       Container nmContainer \u003d context.getContainers().get(containerId);\n       if (nmContainer \u003d\u003d null) {\n         iter.remove();\n-        removedNullContainers.add(containerId);\n       } else if (nmContainer.getContainerState().equals(\n         org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n         context.getContainers().remove(containerId);\n         removedContainers.add(containerId);\n         iter.remove();\n       }\n     }\n \n     if (!removedContainers.isEmpty()) {\n       LOG.info(\"Removed completed containers from NM context: \"\n           + removedContainers);\n     }\n     pendingCompletedContainers.clear();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeOrTrackCompletedContainersFromContext(\n      List\u003cContainerId\u003e containerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    pendingContainersToRemove.addAll(containerIds);\n    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next();\n      // remove the container only if the container is at DONE state\n      Container nmContainer \u003d context.getContainers().get(containerId);\n      if (nmContainer \u003d\u003d null) {\n        iter.remove();\n      } else if (nmContainer.getContainerState().equals(\n        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n        context.getContainers().remove(containerId);\n        removedContainers.add(containerId);\n        iter.remove();\n      }\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \"\n          + removedContainers);\n    }\n    pendingCompletedContainers.clear();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
      "commitDate": "15/11/16 7:56 AM",
      "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "08/11/16 2:01 PM",
      "commitNameOld": "3f93ac0733058238a2c8f23960c986c71dca0e02",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 6.75,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,28 @@\n   public void removeOrTrackCompletedContainersFromContext(\n       List\u003cContainerId\u003e containerIds) throws IOException {\n     Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n     Set\u003cContainerId\u003e removedNullContainers \u003d new HashSet\u003cContainerId\u003e();\n \n     pendingContainersToRemove.addAll(containerIds);\n     Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n     while (iter.hasNext()) {\n       ContainerId containerId \u003d iter.next();\n       // remove the container only if the container is at DONE state\n       Container nmContainer \u003d context.getContainers().get(containerId);\n       if (nmContainer \u003d\u003d null) {\n         iter.remove();\n         removedNullContainers.add(containerId);\n       } else if (nmContainer.getContainerState().equals(\n         org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n         context.getContainers().remove(containerId);\n         removedContainers.add(containerId);\n         iter.remove();\n       }\n     }\n \n-    // Remove null containers from queuing context for killed queued containers.\n-    Iterator\u003cContainerTokenIdentifier\u003e killedQueuedContIter \u003d\n-        context.getQueuingContext().getKilledQueuedContainers().keySet().\n-            iterator();\n-    while (killedQueuedContIter.hasNext()) {\n-      if (removedNullContainers.contains(\n-          killedQueuedContIter.next().getContainerID())) {\n-        killedQueuedContIter.remove();\n-      }\n-    }\n-\n     if (!removedContainers.isEmpty()) {\n       LOG.info(\"Removed completed containers from NM context: \"\n           + removedContainers);\n     }\n     pendingCompletedContainers.clear();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeOrTrackCompletedContainersFromContext(\n      List\u003cContainerId\u003e containerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n    Set\u003cContainerId\u003e removedNullContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    pendingContainersToRemove.addAll(containerIds);\n    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next();\n      // remove the container only if the container is at DONE state\n      Container nmContainer \u003d context.getContainers().get(containerId);\n      if (nmContainer \u003d\u003d null) {\n        iter.remove();\n        removedNullContainers.add(containerId);\n      } else if (nmContainer.getContainerState().equals(\n        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n        context.getContainers().remove(containerId);\n        removedContainers.add(containerId);\n        iter.remove();\n      }\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \"\n          + removedContainers);\n    }\n    pendingCompletedContainers.clear();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "f45bc5a83ed2f2292ecf1f4c990b7153d8051fc9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4738. Notify the RM about the status of OPPORTUNISTIC containers (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "15/05/16 5:54 PM",
      "commitName": "f45bc5a83ed2f2292ecf1f4c990b7153d8051fc9",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "13/05/16 1:38 PM",
      "commitNameOld": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 2.18,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,39 @@\n   public void removeOrTrackCompletedContainersFromContext(\n       List\u003cContainerId\u003e containerIds) throws IOException {\n     Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n+    Set\u003cContainerId\u003e removedNullContainers \u003d new HashSet\u003cContainerId\u003e();\n \n     pendingContainersToRemove.addAll(containerIds);\n     Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n     while (iter.hasNext()) {\n       ContainerId containerId \u003d iter.next();\n       // remove the container only if the container is at DONE state\n       Container nmContainer \u003d context.getContainers().get(containerId);\n       if (nmContainer \u003d\u003d null) {\n         iter.remove();\n+        removedNullContainers.add(containerId);\n       } else if (nmContainer.getContainerState().equals(\n         org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n         context.getContainers().remove(containerId);\n         removedContainers.add(containerId);\n         iter.remove();\n       }\n     }\n \n+    // Remove null containers from queuing context for killed queued containers.\n+    Iterator\u003cContainerTokenIdentifier\u003e killedQueuedContIter \u003d\n+        context.getQueuingContext().getKilledQueuedContainers().keySet().\n+            iterator();\n+    while (killedQueuedContIter.hasNext()) {\n+      if (removedNullContainers.contains(\n+          killedQueuedContIter.next().getContainerID())) {\n+        killedQueuedContIter.remove();\n+      }\n+    }\n+\n     if (!removedContainers.isEmpty()) {\n       LOG.info(\"Removed completed containers from NM context: \"\n           + removedContainers);\n     }\n     pendingCompletedContainers.clear();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeOrTrackCompletedContainersFromContext(\n      List\u003cContainerId\u003e containerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n    Set\u003cContainerId\u003e removedNullContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    pendingContainersToRemove.addAll(containerIds);\n    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next();\n      // remove the container only if the container is at DONE state\n      Container nmContainer \u003d context.getContainers().get(containerId);\n      if (nmContainer \u003d\u003d null) {\n        iter.remove();\n        removedNullContainers.add(containerId);\n      } else if (nmContainer.getContainerState().equals(\n        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n        context.getContainers().remove(containerId);\n        removedContainers.add(containerId);\n        iter.remove();\n      }\n    }\n\n    // Remove null containers from queuing context for killed queued containers.\n    Iterator\u003cContainerTokenIdentifier\u003e killedQueuedContIter \u003d\n        context.getQueuingContext().getKilledQueuedContainers().keySet().\n            iterator();\n    while (killedQueuedContIter.hasNext()) {\n      if (removedNullContainers.contains(\n          killedQueuedContIter.next().getContainerID())) {\n        killedQueuedContIter.remove();\n      }\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \"\n          + removedContainers);\n    }\n    pendingCompletedContainers.clear();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "cc2a745f7e82c9fa6de03242952347c54c52dccc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2997. Fixed NodeStatusUpdater to not send alreay-sent completed container statuses on heartbeat. Contributed by Chengbing Liu\n",
      "commitDate": "08/01/15 11:12 AM",
      "commitName": "cc2a745f7e82c9fa6de03242952347c54c52dccc",
      "commitAuthor": "Jian He",
      "commitDateOld": "12/11/14 11:07 AM",
      "commitNameOld": "be7bf956e96dd0fd9b521ca71df9124b9cc5ebd0",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 57.0,
      "commitsBetweenForRepo": 342,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   public void removeOrTrackCompletedContainersFromContext(\n       List\u003cContainerId\u003e containerIds) throws IOException {\n     Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n \n     pendingContainersToRemove.addAll(containerIds);\n     Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n     while (iter.hasNext()) {\n       ContainerId containerId \u003d iter.next();\n       // remove the container only if the container is at DONE state\n       Container nmContainer \u003d context.getContainers().get(containerId);\n-      if (nmContainer !\u003d null \u0026\u0026 nmContainer.getContainerState().equals(\n+      if (nmContainer \u003d\u003d null) {\n+        iter.remove();\n+      } else if (nmContainer.getContainerState().equals(\n         org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n         context.getContainers().remove(containerId);\n         removedContainers.add(containerId);\n         iter.remove();\n       }\n     }\n \n     if (!removedContainers.isEmpty()) {\n       LOG.info(\"Removed completed containers from NM context: \"\n           + removedContainers);\n     }\n+    pendingCompletedContainers.clear();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeOrTrackCompletedContainersFromContext(\n      List\u003cContainerId\u003e containerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    pendingContainersToRemove.addAll(containerIds);\n    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next();\n      // remove the container only if the container is at DONE state\n      Container nmContainer \u003d context.getContainers().get(containerId);\n      if (nmContainer \u003d\u003d null) {\n        iter.remove();\n      } else if (nmContainer.getContainerState().equals(\n        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n        context.getContainers().remove(containerId);\n        removedContainers.add(containerId);\n        iter.remove();\n      }\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \"\n          + removedContainers);\n    }\n    pendingCompletedContainers.clear();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "c3d475070a1ec54c4b05923f4782cef204effd2c": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-2825. Container leak on NM. Contributed by Jian He\n",
      "commitDate": "07/11/14 3:16 PM",
      "commitName": "c3d475070a1ec54c4b05923f4782cef204effd2c",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2825. Container leak on NM. Contributed by Jian He\n",
          "commitDate": "07/11/14 3:16 PM",
          "commitName": "c3d475070a1ec54c4b05923f4782cef204effd2c",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "01/11/14 4:32 PM",
          "commitNameOld": "5c0381c96aa79196829edbca497c649eb6776944",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 5.99,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,23 @@\n-  public void removeCompletedContainersFromContext(\n+  public void removeOrTrackCompletedContainersFromContext(\n       List\u003cContainerId\u003e containerIds) throws IOException {\n     Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n \n-    // If the AM has pulled the completedContainer it can be removed\n-    for (ContainerId containerId : containerIds) {\n-      context.getContainers().remove(containerId);\n-      removedContainers.add(containerId);\n+    pendingContainersToRemove.addAll(containerIds);\n+    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n+    while (iter.hasNext()) {\n+      ContainerId containerId \u003d iter.next();\n+      // remove the container only if the container is at DONE state\n+      Container nmContainer \u003d context.getContainers().get(containerId);\n+      if (nmContainer !\u003d null \u0026\u0026 nmContainer.getContainerState().equals(\n+        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n+        context.getContainers().remove(containerId);\n+        removedContainers.add(containerId);\n+        iter.remove();\n+      }\n     }\n \n     if (!removedContainers.isEmpty()) {\n-      LOG.info(\"Removed completed containers from NM context: \" +\n-          removedContainers);\n+      LOG.info(\"Removed completed containers from NM context: \"\n+          + removedContainers);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeOrTrackCompletedContainersFromContext(\n      List\u003cContainerId\u003e containerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    pendingContainersToRemove.addAll(containerIds);\n    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next();\n      // remove the container only if the container is at DONE state\n      Container nmContainer \u003d context.getContainers().get(containerId);\n      if (nmContainer !\u003d null \u0026\u0026 nmContainer.getContainerState().equals(\n        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n        context.getContainers().remove(containerId);\n        removedContainers.add(containerId);\n        iter.remove();\n      }\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \"\n          + removedContainers);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "removeCompletedContainersFromContext",
            "newValue": "removeOrTrackCompletedContainersFromContext"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2825. Container leak on NM. Contributed by Jian He\n",
          "commitDate": "07/11/14 3:16 PM",
          "commitName": "c3d475070a1ec54c4b05923f4782cef204effd2c",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "01/11/14 4:32 PM",
          "commitNameOld": "5c0381c96aa79196829edbca497c649eb6776944",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 5.99,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,23 @@\n-  public void removeCompletedContainersFromContext(\n+  public void removeOrTrackCompletedContainersFromContext(\n       List\u003cContainerId\u003e containerIds) throws IOException {\n     Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n \n-    // If the AM has pulled the completedContainer it can be removed\n-    for (ContainerId containerId : containerIds) {\n-      context.getContainers().remove(containerId);\n-      removedContainers.add(containerId);\n+    pendingContainersToRemove.addAll(containerIds);\n+    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n+    while (iter.hasNext()) {\n+      ContainerId containerId \u003d iter.next();\n+      // remove the container only if the container is at DONE state\n+      Container nmContainer \u003d context.getContainers().get(containerId);\n+      if (nmContainer !\u003d null \u0026\u0026 nmContainer.getContainerState().equals(\n+        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n+        context.getContainers().remove(containerId);\n+        removedContainers.add(containerId);\n+        iter.remove();\n+      }\n     }\n \n     if (!removedContainers.isEmpty()) {\n-      LOG.info(\"Removed completed containers from NM context: \" +\n-          removedContainers);\n+      LOG.info(\"Removed completed containers from NM context: \"\n+          + removedContainers);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeOrTrackCompletedContainersFromContext(\n      List\u003cContainerId\u003e containerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    pendingContainersToRemove.addAll(containerIds);\n    Iterator\u003cContainerId\u003e iter \u003d pendingContainersToRemove.iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next();\n      // remove the container only if the container is at DONE state\n      Container nmContainer \u003d context.getContainers().get(containerId);\n      if (nmContainer !\u003d null \u0026\u0026 nmContainer.getContainerState().equals(\n        org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE)) {\n        context.getContainers().remove(containerId);\n        removedContainers.add(containerId);\n        iter.remove();\n      }\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \"\n          + removedContainers);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "0a641496c706fc175e7bf66d69ebf71c7d078e84": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1372. Ensure all completed containers are reported to the AMs across RM restart. Contributed by Anubhav Dhoot\n",
      "commitDate": "22/09/14 10:30 AM",
      "commitName": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1372. Ensure all completed containers are reported to the AMs across RM restart. Contributed by Anubhav Dhoot\n",
          "commitDate": "22/09/14 10:30 AM",
          "commitName": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
          "commitAuthor": "Jian He",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 41.27,
          "commitsBetweenForRepo": 399,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  private void removeCompletedContainersFromContext() {\n-    synchronized (previousCompletedContainers) {\n-      if (!previousCompletedContainers.isEmpty()) {\n-        for (ContainerId containerId : previousCompletedContainers) {\n-          this.context.getContainers().remove(containerId);\n-        }\n-        LOG.info(\"Removed completed containers from NM context: \"\n-            + previousCompletedContainers);\n-        previousCompletedContainers.clear();\n-      }\n+  public void removeCompletedContainersFromContext(\n+      List\u003cContainerId\u003econtainerIds) throws IOException {\n+    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n+\n+    // If the AM has pulled the completedContainer it can be removed\n+    for (ContainerId containerId : containerIds) {\n+      context.getContainers().remove(containerId);\n+      removedContainers.add(containerId);\n+    }\n+\n+    if (!removedContainers.isEmpty()) {\n+      LOG.info(\"Removed completed containers from NM context: \" +\n+          removedContainers);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeCompletedContainersFromContext(\n      List\u003cContainerId\u003econtainerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    // If the AM has pulled the completedContainer it can be removed\n    for (ContainerId containerId : containerIds) {\n      context.getContainers().remove(containerId);\n      removedContainers.add(containerId);\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \" +\n          removedContainers);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[containerIds-List\u003cContainerId\u003e]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1372. Ensure all completed containers are reported to the AMs across RM restart. Contributed by Anubhav Dhoot\n",
          "commitDate": "22/09/14 10:30 AM",
          "commitName": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
          "commitAuthor": "Jian He",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 41.27,
          "commitsBetweenForRepo": 399,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  private void removeCompletedContainersFromContext() {\n-    synchronized (previousCompletedContainers) {\n-      if (!previousCompletedContainers.isEmpty()) {\n-        for (ContainerId containerId : previousCompletedContainers) {\n-          this.context.getContainers().remove(containerId);\n-        }\n-        LOG.info(\"Removed completed containers from NM context: \"\n-            + previousCompletedContainers);\n-        previousCompletedContainers.clear();\n-      }\n+  public void removeCompletedContainersFromContext(\n+      List\u003cContainerId\u003econtainerIds) throws IOException {\n+    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n+\n+    // If the AM has pulled the completedContainer it can be removed\n+    for (ContainerId containerId : containerIds) {\n+      context.getContainers().remove(containerId);\n+      removedContainers.add(containerId);\n+    }\n+\n+    if (!removedContainers.isEmpty()) {\n+      LOG.info(\"Removed completed containers from NM context: \" +\n+          removedContainers);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeCompletedContainersFromContext(\n      List\u003cContainerId\u003econtainerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    // If the AM has pulled the completedContainer it can be removed\n    for (ContainerId containerId : containerIds) {\n      context.getContainers().remove(containerId);\n      removedContainers.add(containerId);\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \" +\n          removedContainers);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1372. Ensure all completed containers are reported to the AMs across RM restart. Contributed by Anubhav Dhoot\n",
          "commitDate": "22/09/14 10:30 AM",
          "commitName": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
          "commitAuthor": "Jian He",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 41.27,
          "commitsBetweenForRepo": 399,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  private void removeCompletedContainersFromContext() {\n-    synchronized (previousCompletedContainers) {\n-      if (!previousCompletedContainers.isEmpty()) {\n-        for (ContainerId containerId : previousCompletedContainers) {\n-          this.context.getContainers().remove(containerId);\n-        }\n-        LOG.info(\"Removed completed containers from NM context: \"\n-            + previousCompletedContainers);\n-        previousCompletedContainers.clear();\n-      }\n+  public void removeCompletedContainersFromContext(\n+      List\u003cContainerId\u003econtainerIds) throws IOException {\n+    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n+\n+    // If the AM has pulled the completedContainer it can be removed\n+    for (ContainerId containerId : containerIds) {\n+      context.getContainers().remove(containerId);\n+      removedContainers.add(containerId);\n+    }\n+\n+    if (!removedContainers.isEmpty()) {\n+      LOG.info(\"Removed completed containers from NM context: \" +\n+          removedContainers);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeCompletedContainersFromContext(\n      List\u003cContainerId\u003econtainerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    // If the AM has pulled the completedContainer it can be removed\n    for (ContainerId containerId : containerIds) {\n      context.getContainers().remove(containerId);\n      removedContainers.add(containerId);\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \" +\n          removedContainers);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1372. Ensure all completed containers are reported to the AMs across RM restart. Contributed by Anubhav Dhoot\n",
          "commitDate": "22/09/14 10:30 AM",
          "commitName": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
          "commitAuthor": "Jian He",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 41.27,
          "commitsBetweenForRepo": 399,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  private void removeCompletedContainersFromContext() {\n-    synchronized (previousCompletedContainers) {\n-      if (!previousCompletedContainers.isEmpty()) {\n-        for (ContainerId containerId : previousCompletedContainers) {\n-          this.context.getContainers().remove(containerId);\n-        }\n-        LOG.info(\"Removed completed containers from NM context: \"\n-            + previousCompletedContainers);\n-        previousCompletedContainers.clear();\n-      }\n+  public void removeCompletedContainersFromContext(\n+      List\u003cContainerId\u003econtainerIds) throws IOException {\n+    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n+\n+    // If the AM has pulled the completedContainer it can be removed\n+    for (ContainerId containerId : containerIds) {\n+      context.getContainers().remove(containerId);\n+      removedContainers.add(containerId);\n+    }\n+\n+    if (!removedContainers.isEmpty()) {\n+      LOG.info(\"Removed completed containers from NM context: \" +\n+          removedContainers);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeCompletedContainersFromContext(\n      List\u003cContainerId\u003econtainerIds) throws IOException {\n    Set\u003cContainerId\u003e removedContainers \u003d new HashSet\u003cContainerId\u003e();\n\n    // If the AM has pulled the completedContainer it can be removed\n    for (ContainerId containerId : containerIds) {\n      context.getContainers().remove(containerId);\n      removedContainers.add(containerId);\n    }\n\n    if (!removedContainers.isEmpty()) {\n      LOG.info(\"Removed completed containers from NM context: \" +\n          removedContainers);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "1c4047b0e46e95a92509de2e59a93433f5968538": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1783. Fixed a bug in NodeManager\u0027s status-updater that was losing completed container statuses when NodeManager is forced to resync by the ResourceManager. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/03/14 2:36 PM",
      "commitName": "1c4047b0e46e95a92509de2e59a93433f5968538",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  private void removeCompletedContainersFromContext() {\n+    synchronized (previousCompletedContainers) {\n+      if (!previousCompletedContainers.isEmpty()) {\n+        for (ContainerId containerId : previousCompletedContainers) {\n+          this.context.getContainers().remove(containerId);\n+        }\n+        LOG.info(\"Removed completed containers from NM context: \"\n+            + previousCompletedContainers);\n+        previousCompletedContainers.clear();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeCompletedContainersFromContext() {\n    synchronized (previousCompletedContainers) {\n      if (!previousCompletedContainers.isEmpty()) {\n        for (ContainerId containerId : previousCompletedContainers) {\n          this.context.getContainers().remove(containerId);\n        }\n        LOG.info(\"Removed completed containers from NM context: \"\n            + previousCompletedContainers);\n        previousCompletedContainers.clear();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
    }
  }
}