{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDownload.java",
  "functionName": "downloadAndUnpack",
  "functionId": "downloadAndUnpack___source-Path__destination-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
  "functionStartLine": 297,
  "functionEndLine": 313,
  "numCommitsSeen": 26,
  "timeTaken": 768,
  "changeHistory": [
    "7288b08330001102f944124d18e02bf0585d3e96"
  ],
  "changeHistoryShort": {
    "7288b08330001102f944124d18e02bf0585d3e96": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7288b08330001102f944124d18e02bf0585d3e96": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2185. Use pipes when localizing archives. Contributed by Miklos Szegedi\n",
      "commitDate": "31/01/18 7:39 AM",
      "commitName": "7288b08330001102f944124d18e02bf0585d3e96",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,17 @@\n+  private void downloadAndUnpack(Path source, Path destination)\n+      throws YarnException {\n+    try {\n+      FileSystem sourceFileSystem \u003d source.getFileSystem(conf);\n+      FileSystem destinationFileSystem \u003d destination.getFileSystem(conf);\n+      if (sourceFileSystem.getFileStatus(source).isDirectory()) {\n+        FileUtil.copy(\n+            sourceFileSystem, source,\n+            destinationFileSystem, destination, false,\n+            true, conf);\n+      } else {\n+        unpack(source, destination, sourceFileSystem, destinationFileSystem);\n+      }\n+    } catch (Exception e) {\n+      throw new YarnException(\"Download and unpack failed\", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void downloadAndUnpack(Path source, Path destination)\n      throws YarnException {\n    try {\n      FileSystem sourceFileSystem \u003d source.getFileSystem(conf);\n      FileSystem destinationFileSystem \u003d destination.getFileSystem(conf);\n      if (sourceFileSystem.getFileStatus(source).isDirectory()) {\n        FileUtil.copy(\n            sourceFileSystem, source,\n            destinationFileSystem, destination, false,\n            true, conf);\n      } else {\n        unpack(source, destination, sourceFileSystem, destinationFileSystem);\n      }\n    } catch (Exception e) {\n      throw new YarnException(\"Download and unpack failed\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java"
    }
  }
}