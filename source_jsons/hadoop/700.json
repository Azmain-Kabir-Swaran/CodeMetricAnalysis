{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStreamer.java",
  "functionName": "initRestartingNode",
  "functionId": "initRestartingNode___i-int__message-String__shouldWait-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
  "functionStartLine": 378,
  "functionEndLine": 392,
  "numCommitsSeen": 77,
  "timeTaken": 2964,
  "changeHistory": [
    "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "8f378733423a5244461df79a92c00239514b8b93"
  ],
  "changeHistoryShort": {
    "29b7df960fc3d0a7d1416225c3106c7d4222f0ca": "Ymultichange(Yparameterchange,Ybodychange)",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "8f378733423a5244461df79a92c00239514b8b93": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29b7df960fc3d0a7d1416225c3106c7d4222f0ca": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11856. Ability to re-add Upgrading Nodes to pipeline for future pipeline updates. Contributed by Vinayakumar B.\n",
      "commitDate": "25/05/17 11:05 AM",
      "commitName": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11856. Ability to re-add Upgrading Nodes to pipeline for future pipeline updates. Contributed by Vinayakumar B.\n",
          "commitDate": "25/05/17 11:05 AM",
          "commitName": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "05/05/17 12:01 PM",
          "commitNameOld": "a3954ccab148bddc290cb96528e63ff19799bcc9",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 19.96,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-    synchronized void initRestartingNode(int i, String message) {\n+    synchronized void initRestartingNode(int i, String message,\n+        boolean shouldWait) {\n       restartingNodeIndex \u003d i;\n-      restartingNodeDeadline \u003d  Time.monotonicNow() + datanodeRestartTimeout;\n-      // If the data streamer has already set the primary node\n-      // bad, clear it. It is likely that the write failed due to\n-      // the DN shutdown. Even if it was a real failure, the pipeline\n-      // recovery will take care of it.\n-      badNodeIndex \u003d -1;\n+      if (shouldWait) {\n+        restartingNodeDeadline \u003d Time.monotonicNow() + datanodeRestartTimeout;\n+        // If the data streamer has already set the primary node\n+        // bad, clear it. It is likely that the write failed due to\n+        // the DN shutdown. Even if it was a real failure, the pipeline\n+        // recovery will take care of it.\n+        badNodeIndex \u003d -1;\n+      } else {\n+        this.waitForRestart \u003d false;\n+      }\n       LOG.info(message);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized void initRestartingNode(int i, String message,\n        boolean shouldWait) {\n      restartingNodeIndex \u003d i;\n      if (shouldWait) {\n        restartingNodeDeadline \u003d Time.monotonicNow() + datanodeRestartTimeout;\n        // If the data streamer has already set the primary node\n        // bad, clear it. It is likely that the write failed due to\n        // the DN shutdown. Even if it was a real failure, the pipeline\n        // recovery will take care of it.\n        badNodeIndex \u003d -1;\n      } else {\n        this.waitForRestart \u003d false;\n      }\n      LOG.info(message);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {
            "oldValue": "[i-int, message-String]",
            "newValue": "[i-int, message-String, shouldWait-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11856. Ability to re-add Upgrading Nodes to pipeline for future pipeline updates. Contributed by Vinayakumar B.\n",
          "commitDate": "25/05/17 11:05 AM",
          "commitName": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "05/05/17 12:01 PM",
          "commitNameOld": "a3954ccab148bddc290cb96528e63ff19799bcc9",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 19.96,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-    synchronized void initRestartingNode(int i, String message) {\n+    synchronized void initRestartingNode(int i, String message,\n+        boolean shouldWait) {\n       restartingNodeIndex \u003d i;\n-      restartingNodeDeadline \u003d  Time.monotonicNow() + datanodeRestartTimeout;\n-      // If the data streamer has already set the primary node\n-      // bad, clear it. It is likely that the write failed due to\n-      // the DN shutdown. Even if it was a real failure, the pipeline\n-      // recovery will take care of it.\n-      badNodeIndex \u003d -1;\n+      if (shouldWait) {\n+        restartingNodeDeadline \u003d Time.monotonicNow() + datanodeRestartTimeout;\n+        // If the data streamer has already set the primary node\n+        // bad, clear it. It is likely that the write failed due to\n+        // the DN shutdown. Even if it was a real failure, the pipeline\n+        // recovery will take care of it.\n+        badNodeIndex \u003d -1;\n+      } else {\n+        this.waitForRestart \u003d false;\n+      }\n       LOG.info(message);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized void initRestartingNode(int i, String message,\n        boolean shouldWait) {\n      restartingNodeIndex \u003d i;\n      if (shouldWait) {\n        restartingNodeDeadline \u003d Time.monotonicNow() + datanodeRestartTimeout;\n        // If the data streamer has already set the primary node\n        // bad, clear it. It is likely that the write failed due to\n        // the DN shutdown. Even if it was a real failure, the pipeline\n        // recovery will take care of it.\n        badNodeIndex \u003d -1;\n      } else {\n        this.waitForRestart \u003d false;\n      }\n      LOG.info(message);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized void initRestartingNode(int i, String message) {\n      restartingNodeIndex \u003d i;\n      restartingNodeDeadline \u003d  Time.monotonicNow() + datanodeRestartTimeout;\n      // If the data streamer has already set the primary node\n      // bad, clear it. It is likely that the write failed due to\n      // the DN shutdown. Even if it was a real failure, the pipeline\n      // recovery will take care of it.\n      badNodeIndex \u003d -1;\n      LOG.info(message);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
      }
    },
    "8f378733423a5244461df79a92c00239514b8b93": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8397. Refactor the error handling code in DataStreamer. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "15/05/15 4:14 PM",
      "commitName": "8f378733423a5244461df79a92c00239514b8b93",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,10 @@\n+    synchronized void initRestartingNode(int i, String message) {\n+      restartingNodeIndex \u003d i;\n+      restartingNodeDeadline \u003d  Time.monotonicNow() + datanodeRestartTimeout;\n+      // If the data streamer has already set the primary node\n+      // bad, clear it. It is likely that the write failed due to\n+      // the DN shutdown. Even if it was a real failure, the pipeline\n+      // recovery will take care of it.\n+      badNodeIndex \u003d -1;\n+      LOG.info(message);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized void initRestartingNode(int i, String message) {\n      restartingNodeIndex \u003d i;\n      restartingNodeDeadline \u003d  Time.monotonicNow() + datanodeRestartTimeout;\n      // If the data streamer has already set the primary node\n      // bad, clear it. It is likely that the write failed due to\n      // the DN shutdown. Even if it was a real failure, the pipeline\n      // recovery will take care of it.\n      badNodeIndex \u003d -1;\n      LOG.info(message);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
    }
  }
}