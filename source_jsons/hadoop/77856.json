{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommandWithDestination.java",
  "functionName": "checkPathsForReservedRaw",
  "functionId": "checkPathsForReservedRaw___src-Path__target-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
  "functionStartLine": 374,
  "functionEndLine": 395,
  "numCommitsSeen": 29,
  "timeTaken": 1000,
  "changeHistory": [
    "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88"
  ],
  "changeHistoryShort": {
    "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10919. Copy command should preserve raw.* namespace extended attributes. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1616840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 10:58 AM",
      "commitName": "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88",
      "commitAuthor": "Charles Lamb",
      "diff": "@@ -0,0 +1,22 @@\n+  private boolean checkPathsForReservedRaw(Path src, Path target)\n+      throws PathOperationException {\n+    final boolean srcIsRR \u003d Path.getPathWithoutSchemeAndAuthority(src).\n+        toString().startsWith(RESERVED_RAW);\n+    final boolean dstIsRR \u003d Path.getPathWithoutSchemeAndAuthority(target).\n+        toString().startsWith(RESERVED_RAW);\n+    boolean preserveRawXattrs \u003d false;\n+    if (srcIsRR \u0026\u0026 !dstIsRR) {\n+      final String s \u003d \"\u0027 copy from \u0027\" + RESERVED_RAW + \"\u0027 to non \u0027\" +\n+          RESERVED_RAW + \"\u0027. Either both source and target must be in \u0027\" +\n+          RESERVED_RAW + \"\u0027 or neither.\";\n+      throw new PathOperationException(\"\u0027\" + src.toString() + s);\n+    } else if (!srcIsRR \u0026\u0026 dstIsRR) {\n+      final String s \u003d \"\u0027 copy from non \u0027\" + RESERVED_RAW +\"\u0027 to \u0027\" +\n+          RESERVED_RAW + \"\u0027. Either both source and target must be in \u0027\" +\n+          RESERVED_RAW + \"\u0027 or neither.\";\n+      throw new PathOperationException(\"\u0027\" + dst.toString() + s);\n+    } else if (srcIsRR \u0026\u0026 dstIsRR) {\n+      preserveRawXattrs \u003d true;\n+    }\n+    return preserveRawXattrs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkPathsForReservedRaw(Path src, Path target)\n      throws PathOperationException {\n    final boolean srcIsRR \u003d Path.getPathWithoutSchemeAndAuthority(src).\n        toString().startsWith(RESERVED_RAW);\n    final boolean dstIsRR \u003d Path.getPathWithoutSchemeAndAuthority(target).\n        toString().startsWith(RESERVED_RAW);\n    boolean preserveRawXattrs \u003d false;\n    if (srcIsRR \u0026\u0026 !dstIsRR) {\n      final String s \u003d \"\u0027 copy from \u0027\" + RESERVED_RAW + \"\u0027 to non \u0027\" +\n          RESERVED_RAW + \"\u0027. Either both source and target must be in \u0027\" +\n          RESERVED_RAW + \"\u0027 or neither.\";\n      throw new PathOperationException(\"\u0027\" + src.toString() + s);\n    } else if (!srcIsRR \u0026\u0026 dstIsRR) {\n      final String s \u003d \"\u0027 copy from non \u0027\" + RESERVED_RAW +\"\u0027 to \u0027\" +\n          RESERVED_RAW + \"\u0027. Either both source and target must be in \u0027\" +\n          RESERVED_RAW + \"\u0027 or neither.\";\n      throw new PathOperationException(\"\u0027\" + dst.toString() + s);\n    } else if (srcIsRR \u0026\u0026 dstIsRR) {\n      preserveRawXattrs \u003d true;\n    }\n    return preserveRawXattrs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
    }
  }
}