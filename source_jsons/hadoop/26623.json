{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobImpl.java",
  "functionName": "computeProgress",
  "functionId": "computeProgress",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
  "functionStartLine": 916,
  "functionEndLine": 939,
  "numCommitsSeen": 113,
  "timeTaken": 8098,
  "changeHistory": [
    "27d1c74a0c7831f8a83922ea2e87d1762ccf8021",
    "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "27d1c74a0c7831f8a83922ea2e87d1762ccf8021": "Ybodychange",
    "fcbad14a3da7fadbb601bf245552ecca2fbc5026": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "27d1c74a0c7831f8a83922ea2e87d1762ccf8021": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3927. Shuffle hang when set map.failures.percent (Bhallamudi Venkata Siva Kamesh via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1348846 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/12 6:54 AM",
      "commitName": "27d1c74a0c7831f8a83922ea2e87d1762ccf8021",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "23/04/12 12:44 PM",
      "commitNameOld": "80ab78c21728e9979e892283e9e0caf6ab3b0fef",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 48.76,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void computeProgress() {\n     this.readLock.lock();\n     try {\n       float mapProgress \u003d 0f;\n       float reduceProgress \u003d 0f;\n       for (Task task : this.tasks.values()) {\n         if (task.getType() \u003d\u003d TaskType.MAP) {\n-          mapProgress +\u003d task.getProgress();\n+          mapProgress +\u003d (task.isFinished() ? 1f : task.getProgress());\n         } else {\n-          reduceProgress +\u003d task.getProgress();\n+          reduceProgress +\u003d (task.isFinished() ? 1f : task.getProgress());\n         }\n       }\n       if (this.numMapTasks !\u003d 0) {\n         mapProgress \u003d mapProgress / this.numMapTasks;\n       }\n       if (this.numReduceTasks !\u003d 0) {\n         reduceProgress \u003d reduceProgress / this.numReduceTasks;\n       }\n       this.mapProgress \u003d mapProgress;\n       this.reduceProgress \u003d reduceProgress;\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void computeProgress() {\n    this.readLock.lock();\n    try {\n      float mapProgress \u003d 0f;\n      float reduceProgress \u003d 0f;\n      for (Task task : this.tasks.values()) {\n        if (task.getType() \u003d\u003d TaskType.MAP) {\n          mapProgress +\u003d (task.isFinished() ? 1f : task.getProgress());\n        } else {\n          reduceProgress +\u003d (task.isFinished() ? 1f : task.getProgress());\n        }\n      }\n      if (this.numMapTasks !\u003d 0) {\n        mapProgress \u003d mapProgress / this.numMapTasks;\n      }\n      if (this.numReduceTasks !\u003d 0) {\n        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n      }\n      this.mapProgress \u003d mapProgress;\n      this.reduceProgress \u003d reduceProgress;\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "fcbad14a3da7fadbb601bf245552ecca2fbc5026": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3568. Optimized Job\u0027s progress calculations in MR AM. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1224995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/12/11 11:54 AM",
      "commitName": "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3568. Optimized Job\u0027s progress calculations in MR AM. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1224995 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/12/11 11:54 AM",
          "commitName": "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/12/11 2:34 PM",
          "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 4.89,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-  private float computeProgress(Set\u003cTaskId\u003e taskIds) {\n-    readLock.lock();\n+  private void computeProgress() {\n+    this.readLock.lock();\n     try {\n-      float progress \u003d 0;\n-      for (TaskId taskId : taskIds) {\n-        Task task \u003d tasks.get(taskId);\n-        progress +\u003d task.getProgress();\n+      float mapProgress \u003d 0f;\n+      float reduceProgress \u003d 0f;\n+      for (Task task : this.tasks.values()) {\n+        if (task.getType() \u003d\u003d TaskType.MAP) {\n+          mapProgress +\u003d task.getProgress();\n+        } else {\n+          reduceProgress +\u003d task.getProgress();\n+        }\n       }\n-      int taskIdsSize \u003d taskIds.size();\n-      if (taskIdsSize !\u003d 0) {\n-        progress \u003d progress/taskIdsSize;\n+      if (this.numMapTasks !\u003d 0) {\n+        mapProgress \u003d mapProgress / this.numMapTasks;\n       }\n-      return progress;\n+      if (this.numReduceTasks !\u003d 0) {\n+        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n+      }\n+      this.mapProgress \u003d mapProgress;\n+      this.reduceProgress \u003d reduceProgress;\n     } finally {\n-      readLock.unlock();\n+      this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void computeProgress() {\n    this.readLock.lock();\n    try {\n      float mapProgress \u003d 0f;\n      float reduceProgress \u003d 0f;\n      for (Task task : this.tasks.values()) {\n        if (task.getType() \u003d\u003d TaskType.MAP) {\n          mapProgress +\u003d task.getProgress();\n        } else {\n          reduceProgress +\u003d task.getProgress();\n        }\n      }\n      if (this.numMapTasks !\u003d 0) {\n        mapProgress \u003d mapProgress / this.numMapTasks;\n      }\n      if (this.numReduceTasks !\u003d 0) {\n        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n      }\n      this.mapProgress \u003d mapProgress;\n      this.reduceProgress \u003d reduceProgress;\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
          "extendedDetails": {
            "oldValue": "[taskIds-Set\u003cTaskId\u003e]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-3568. Optimized Job\u0027s progress calculations in MR AM. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1224995 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/12/11 11:54 AM",
          "commitName": "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/12/11 2:34 PM",
          "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 4.89,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-  private float computeProgress(Set\u003cTaskId\u003e taskIds) {\n-    readLock.lock();\n+  private void computeProgress() {\n+    this.readLock.lock();\n     try {\n-      float progress \u003d 0;\n-      for (TaskId taskId : taskIds) {\n-        Task task \u003d tasks.get(taskId);\n-        progress +\u003d task.getProgress();\n+      float mapProgress \u003d 0f;\n+      float reduceProgress \u003d 0f;\n+      for (Task task : this.tasks.values()) {\n+        if (task.getType() \u003d\u003d TaskType.MAP) {\n+          mapProgress +\u003d task.getProgress();\n+        } else {\n+          reduceProgress +\u003d task.getProgress();\n+        }\n       }\n-      int taskIdsSize \u003d taskIds.size();\n-      if (taskIdsSize !\u003d 0) {\n-        progress \u003d progress/taskIdsSize;\n+      if (this.numMapTasks !\u003d 0) {\n+        mapProgress \u003d mapProgress / this.numMapTasks;\n       }\n-      return progress;\n+      if (this.numReduceTasks !\u003d 0) {\n+        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n+      }\n+      this.mapProgress \u003d mapProgress;\n+      this.reduceProgress \u003d reduceProgress;\n     } finally {\n-      readLock.unlock();\n+      this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void computeProgress() {\n    this.readLock.lock();\n    try {\n      float mapProgress \u003d 0f;\n      float reduceProgress \u003d 0f;\n      for (Task task : this.tasks.values()) {\n        if (task.getType() \u003d\u003d TaskType.MAP) {\n          mapProgress +\u003d task.getProgress();\n        } else {\n          reduceProgress +\u003d task.getProgress();\n        }\n      }\n      if (this.numMapTasks !\u003d 0) {\n        mapProgress \u003d mapProgress / this.numMapTasks;\n      }\n      if (this.numReduceTasks !\u003d 0) {\n        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n      }\n      this.mapProgress \u003d mapProgress;\n      this.reduceProgress \u003d reduceProgress;\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
          "extendedDetails": {
            "oldValue": "float",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3568. Optimized Job\u0027s progress calculations in MR AM. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1224995 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/12/11 11:54 AM",
          "commitName": "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/12/11 2:34 PM",
          "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 4.89,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-  private float computeProgress(Set\u003cTaskId\u003e taskIds) {\n-    readLock.lock();\n+  private void computeProgress() {\n+    this.readLock.lock();\n     try {\n-      float progress \u003d 0;\n-      for (TaskId taskId : taskIds) {\n-        Task task \u003d tasks.get(taskId);\n-        progress +\u003d task.getProgress();\n+      float mapProgress \u003d 0f;\n+      float reduceProgress \u003d 0f;\n+      for (Task task : this.tasks.values()) {\n+        if (task.getType() \u003d\u003d TaskType.MAP) {\n+          mapProgress +\u003d task.getProgress();\n+        } else {\n+          reduceProgress +\u003d task.getProgress();\n+        }\n       }\n-      int taskIdsSize \u003d taskIds.size();\n-      if (taskIdsSize !\u003d 0) {\n-        progress \u003d progress/taskIdsSize;\n+      if (this.numMapTasks !\u003d 0) {\n+        mapProgress \u003d mapProgress / this.numMapTasks;\n       }\n-      return progress;\n+      if (this.numReduceTasks !\u003d 0) {\n+        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n+      }\n+      this.mapProgress \u003d mapProgress;\n+      this.reduceProgress \u003d reduceProgress;\n     } finally {\n-      readLock.unlock();\n+      this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void computeProgress() {\n    this.readLock.lock();\n    try {\n      float mapProgress \u003d 0f;\n      float reduceProgress \u003d 0f;\n      for (Task task : this.tasks.values()) {\n        if (task.getType() \u003d\u003d TaskType.MAP) {\n          mapProgress +\u003d task.getProgress();\n        } else {\n          reduceProgress +\u003d task.getProgress();\n        }\n      }\n      if (this.numMapTasks !\u003d 0) {\n        mapProgress \u003d mapProgress / this.numMapTasks;\n      }\n      if (this.numReduceTasks !\u003d 0) {\n        reduceProgress \u003d reduceProgress / this.numReduceTasks;\n      }\n      this.mapProgress \u003d mapProgress;\n      this.reduceProgress \u003d reduceProgress;\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private float computeProgress(Set\u003cTaskId\u003e taskIds) {\n    readLock.lock();\n    try {\n      float progress \u003d 0;\n      for (TaskId taskId : taskIds) {\n        Task task \u003d tasks.get(taskId);\n        progress +\u003d task.getProgress();\n      }\n      int taskIdsSize \u003d taskIds.size();\n      if (taskIdsSize !\u003d 0) {\n        progress \u003d progress/taskIdsSize;\n      }\n      return progress;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  private float computeProgress(Set\u003cTaskId\u003e taskIds) {\n+    readLock.lock();\n+    try {\n+      float progress \u003d 0;\n+      for (TaskId taskId : taskIds) {\n+        Task task \u003d tasks.get(taskId);\n+        progress +\u003d task.getProgress();\n+      }\n+      int taskIdsSize \u003d taskIds.size();\n+      if (taskIdsSize !\u003d 0) {\n+        progress \u003d progress/taskIdsSize;\n+      }\n+      return progress;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private float computeProgress(Set\u003cTaskId\u003e taskIds) {\n    readLock.lock();\n    try {\n      float progress \u003d 0;\n      for (TaskId taskId : taskIds) {\n        Task task \u003d tasks.get(taskId);\n        progress +\u003d task.getProgress();\n      }\n      int taskIdsSize \u003d taskIds.size();\n      if (taskIdsSize !\u003d 0) {\n        progress \u003d progress/taskIdsSize;\n      }\n      return progress;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
    }
  }
}