{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompositeService.java",
  "functionName": "stop",
  "functionId": "stop___numOfServicesStarted-int__stopOnlyStartedServices-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/CompositeService.java",
  "functionStartLine": 146,
  "functionEndLine": 169,
  "numCommitsSeen": 19,
  "timeTaken": 2000,
  "changeHistory": [
    "7a241aee90f042672fc30ba402ed9dff912bc535",
    "b9efe6bd4a1277b4067ecde715a7713a85968886",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad"
  ],
  "changeHistoryShort": {
    "7a241aee90f042672fc30ba402ed9dff912bc535": "Ymodifierchange",
    "b9efe6bd4a1277b4067ecde715a7713a85968886": "Yfilerename",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a241aee90f042672fc30ba402ed9dff912bc535": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1929. Fixed a deadlock in ResourceManager that occurs when failover happens right at the time of shutdown. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1591071 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/14 12:49 PM",
      "commitName": "7a241aee90f042672fc30ba402ed9dff912bc535",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "02/02/14 11:51 AM",
      "commitNameOld": "88d8ea95092d8391c106532511d40c897ade5707",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 86.0,
      "commitsBetweenForRepo": 681,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n-  private synchronized void stop(int numOfServicesStarted,\n-                                 boolean stopOnlyStartedServices) {\n+  private void stop(int numOfServicesStarted, boolean stopOnlyStartedServices) {\n     // stop in reverse order of start\n     Exception firstException \u003d null;\n     List\u003cService\u003e services \u003d getServices();\n     for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n       Service service \u003d services.get(i);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Stopping service #\" + i + \": \" + service);\n       }\n       STATE state \u003d service.getServiceState();\n       //depending on the stop police\n       if (state \u003d\u003d STATE.STARTED \n          || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n         Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n         if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n           firstException \u003d ex;\n         }\n       }\n     }\n     //after stopping all services, rethrow the first exception raised\n     if (firstException !\u003d null) {\n       throw ServiceStateException.convert(firstException);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void stop(int numOfServicesStarted, boolean stopOnlyStartedServices) {\n    // stop in reverse order of start\n    Exception firstException \u003d null;\n    List\u003cService\u003e services \u003d getServices();\n    for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n      Service service \u003d services.get(i);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Stopping service #\" + i + \": \" + service);\n      }\n      STATE state \u003d service.getServiceState();\n      //depending on the stop police\n      if (state \u003d\u003d STATE.STARTED \n         || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n        Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n        if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n          firstException \u003d ex;\n        }\n      }\n    }\n    //after stopping all services, rethrow the first exception raised\n    if (firstException !\u003d null) {\n      throw ServiceStateException.convert(firstException);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/CompositeService.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[private]"
      }
    },
    "b9efe6bd4a1277b4067ecde715a7713a85968886": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-9649. Promoted YARN service life-cycle libraries into Hadoop Common for usage across all Hadoop projects. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493650 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 11:39 PM",
      "commitName": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 9:49 PM",
      "commitNameOld": "d4a811edb25e2d1569ee6b8972a887a0180dfa2e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void stop(int numOfServicesStarted,\n                                 boolean stopOnlyStartedServices) {\n    // stop in reverse order of start\n    Exception firstException \u003d null;\n    List\u003cService\u003e services \u003d getServices();\n    for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n      Service service \u003d services.get(i);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Stopping service #\" + i + \": \" + service);\n      }\n      STATE state \u003d service.getServiceState();\n      //depending on the stop police\n      if (state \u003d\u003d STATE.STARTED \n         || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n        Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n        if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n          firstException \u003d ex;\n        }\n      }\n    }\n    //after stopping all services, rethrow the first exception raised\n    if (firstException !\u003d null) {\n      throw ServiceStateException.convert(firstException);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/CompositeService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/CompositeService.java"
      }
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,25 @@\n-  private synchronized void stop(int numOfServicesStarted) {\n-    // stop in reserve order of start\n-    for (int i \u003d numOfServicesStarted; i \u003e\u003d 0; i--) {\n-      Service service \u003d serviceList.get(i);\n-      try {\n-        service.stop();\n-      } catch (Throwable t) {\n-        LOG.info(\"Error stopping \" + service.getName(), t);\n+  private synchronized void stop(int numOfServicesStarted,\n+                                 boolean stopOnlyStartedServices) {\n+    // stop in reverse order of start\n+    Exception firstException \u003d null;\n+    List\u003cService\u003e services \u003d getServices();\n+    for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n+      Service service \u003d services.get(i);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Stopping service #\" + i + \": \" + service);\n       }\n+      STATE state \u003d service.getServiceState();\n+      //depending on the stop police\n+      if (state \u003d\u003d STATE.STARTED \n+         || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n+        Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n+        if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n+          firstException \u003d ex;\n+        }\n+      }\n+    }\n+    //after stopping all services, rethrow the first exception raised\n+    if (firstException !\u003d null) {\n+      throw ServiceStateException.convert(firstException);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void stop(int numOfServicesStarted,\n                                 boolean stopOnlyStartedServices) {\n    // stop in reverse order of start\n    Exception firstException \u003d null;\n    List\u003cService\u003e services \u003d getServices();\n    for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n      Service service \u003d services.get(i);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Stopping service #\" + i + \": \" + service);\n      }\n      STATE state \u003d service.getServiceState();\n      //depending on the stop police\n      if (state \u003d\u003d STATE.STARTED \n         || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n        Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n        if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n          firstException \u003d ex;\n        }\n      }\n    }\n    //after stopping all services, rethrow the first exception raised\n    if (firstException !\u003d null) {\n      throw ServiceStateException.convert(firstException);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java",
          "extendedDetails": {
            "oldValue": "[numOfServicesStarted-int]",
            "newValue": "[numOfServicesStarted-int, stopOnlyStartedServices-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,25 @@\n-  private synchronized void stop(int numOfServicesStarted) {\n-    // stop in reserve order of start\n-    for (int i \u003d numOfServicesStarted; i \u003e\u003d 0; i--) {\n-      Service service \u003d serviceList.get(i);\n-      try {\n-        service.stop();\n-      } catch (Throwable t) {\n-        LOG.info(\"Error stopping \" + service.getName(), t);\n+  private synchronized void stop(int numOfServicesStarted,\n+                                 boolean stopOnlyStartedServices) {\n+    // stop in reverse order of start\n+    Exception firstException \u003d null;\n+    List\u003cService\u003e services \u003d getServices();\n+    for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n+      Service service \u003d services.get(i);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Stopping service #\" + i + \": \" + service);\n       }\n+      STATE state \u003d service.getServiceState();\n+      //depending on the stop police\n+      if (state \u003d\u003d STATE.STARTED \n+         || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n+        Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n+        if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n+          firstException \u003d ex;\n+        }\n+      }\n+    }\n+    //after stopping all services, rethrow the first exception raised\n+    if (firstException !\u003d null) {\n+      throw ServiceStateException.convert(firstException);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void stop(int numOfServicesStarted,\n                                 boolean stopOnlyStartedServices) {\n    // stop in reverse order of start\n    Exception firstException \u003d null;\n    List\u003cService\u003e services \u003d getServices();\n    for (int i \u003d numOfServicesStarted - 1; i \u003e\u003d 0; i--) {\n      Service service \u003d services.get(i);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Stopping service #\" + i + \": \" + service);\n      }\n      STATE state \u003d service.getServiceState();\n      //depending on the stop police\n      if (state \u003d\u003d STATE.STARTED \n         || (!stopOnlyStartedServices \u0026\u0026 state \u003d\u003d STATE.INITED)) {\n        Exception ex \u003d ServiceOperations.stopQuietly(LOG, service);\n        if (ex !\u003d null \u0026\u0026 firstException \u003d\u003d null) {\n          firstException \u003d ex;\n        }\n      }\n    }\n    //after stopping all services, rethrow the first exception raised\n    if (firstException !\u003d null) {\n      throw ServiceStateException.convert(firstException);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void stop(int numOfServicesStarted) {\n    // stop in reserve order of start\n    for (int i \u003d numOfServicesStarted; i \u003e\u003d 0; i--) {\n      Service service \u003d serviceList.get(i);\n      try {\n        service.stop();\n      } catch (Throwable t) {\n        LOG.info(\"Error stopping \" + service.getName(), t);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java"
      }
    },
    "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2966. Added ShutDown hooks for MRV2 processes so that they can gracefully exit. Contributed by Abhijit Suresh Shingate.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1170746 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/09/11 10:57 AM",
      "commitName": "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+  private synchronized void stop(int numOfServicesStarted) {\n+    // stop in reserve order of start\n+    for (int i \u003d numOfServicesStarted; i \u003e\u003d 0; i--) {\n+      Service service \u003d serviceList.get(i);\n+      try {\n+        service.stop();\n+      } catch (Throwable t) {\n+        LOG.info(\"Error stopping \" + service.getName(), t);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void stop(int numOfServicesStarted) {\n    // stop in reserve order of start\n    for (int i \u003d numOfServicesStarted; i \u003e\u003d 0; i--) {\n      Service service \u003d serviceList.get(i);\n      try {\n        service.stop();\n      } catch (Throwable t) {\n        LOG.info(\"Error stopping \" + service.getName(), t);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/CompositeService.java"
    }
  }
}