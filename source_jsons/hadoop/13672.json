{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPlacementPolicyDefault.java",
  "functionName": "initialize",
  "functionId": "initialize___conf-Configuration__stats-FSClusterStats__clusterMap-NetworkTopology__host2datanodeMap-Host2NodesMap",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
  "functionStartLine": 113,
  "functionEndLine": 140,
  "numCommitsSeen": 144,
  "timeTaken": 8343,
  "changeHistory": [
    "66357574ae1da09ced735da36bf7d80a40c3fa1b",
    "de4894936a5b581572f35fa5b8979d9f23da0891",
    "d37dc5d1b8e022a7085118a2e7066623483c293f",
    "d8b729e16fb253e6c84f414d419b5663d9219a43",
    "ba6d5ed955aa34cdcb7aaa4b1025da6ee5e91355",
    "bf6aa30a156b3c5cac5469014a5989e0dfdc7256",
    "b2f65c276da2c4420a0974a7e2d75e081abf5d63",
    "2887bbb33cefaac0c548eb2450a1f8e3e60f5ea7",
    "2e0a15c48890f646d4dfa7bc8844430ebed888aa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "66357574ae1da09ced735da36bf7d80a40c3fa1b": "Ybodychange",
    "de4894936a5b581572f35fa5b8979d9f23da0891": "Ybodychange",
    "d37dc5d1b8e022a7085118a2e7066623483c293f": "Ybodychange",
    "d8b729e16fb253e6c84f414d419b5663d9219a43": "Ybodychange",
    "ba6d5ed955aa34cdcb7aaa4b1025da6ee5e91355": "Ybodychange",
    "bf6aa30a156b3c5cac5469014a5989e0dfdc7256": "Ybodychange",
    "b2f65c276da2c4420a0974a7e2d75e081abf5d63": "Ymultichange(Yparameterchange,Ybodychange)",
    "2887bbb33cefaac0c548eb2450a1f8e3e60f5ea7": "Ybodychange",
    "2e0a15c48890f646d4dfa7bc8844430ebed888aa": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Yfilerename",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Yfilerename",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66357574ae1da09ced735da36bf7d80a40c3fa1b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14346. Add better time precision to Configuration#getTimeDuration, allowing return unit and default unit to be specified independently. Contributed by Chao Sun.\n",
      "commitDate": "13/03/19 1:15 PM",
      "commitName": "66357574ae1da09ced735da36bf7d80a40c3fa1b",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "28/11/18 11:33 AM",
      "commitNameOld": "300f560fcca879d212eadffaa59fbbb7017c9a3f",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 105.03,
      "commitsBetweenForRepo": 769,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap, \n                          Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_KEY,\n         DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_DEFAULT);\n     this.considerLoadFactor \u003d conf.getDouble(\n         DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR,\n         DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR_DEFAULT);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getTimeDuration(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n-        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT, TimeUnit.SECONDS) * 1000;\n+        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT,\n+        TimeUnit.SECONDS, TimeUnit.MILLISECONDS);\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n     this.preferLocalNode \u003d conf.getBoolean(\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_KEY,\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_DEFAULT);\n    this.considerLoadFactor \u003d conf.getDouble(\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR,\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR_DEFAULT);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getTimeDuration(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT,\n        TimeUnit.SECONDS, TimeUnit.MILLISECONDS);\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n    this.preferLocalNode \u003d conf.getBoolean(\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "de4894936a5b581572f35fa5b8979d9f23da0891": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11368. Erasure Coding: Deprecate replication-related config keys. Contributed by Rakesh R.\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "de4894936a5b581572f35fa5b8979d9f23da0891",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "25/10/16 7:50 PM",
      "commitNameOld": "9dce9011ad211bf35fe2538ded0f19d68f5c16d2",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 28.91,
      "commitsBetweenForRepo": 267,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap, \n                          Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n-        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,\n-        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT);\n+        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_KEY,\n+        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_DEFAULT);\n     this.considerLoadFactor \u003d conf.getDouble(\n-        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n-        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n+        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR,\n+        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR_DEFAULT);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getTimeDuration(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT, TimeUnit.SECONDS) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n     this.preferLocalNode \u003d conf.getBoolean(\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_KEY,\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_DEFAULT);\n    this.considerLoadFactor \u003d conf.getDouble(\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR,\n        DFSConfigKeys.DFS_NAMENODE_REDUNDANCY_CONSIDERLOAD_FACTOR_DEFAULT);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getTimeDuration(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT, TimeUnit.SECONDS) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n    this.preferLocalNode \u003d conf.getBoolean(\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "d37dc5d1b8e022a7085118a2e7066623483c293f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9847. HDFS configuration should accept time units. Contributed by Yiqun Lin\n",
      "commitDate": "06/09/16 10:38 AM",
      "commitName": "d37dc5d1b8e022a7085118a2e7066623483c293f",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "04/05/16 5:02 PM",
      "commitNameOld": "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 124.73,
      "commitsBetweenForRepo": 956,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap, \n                          Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT);\n     this.considerLoadFactor \u003d conf.getDouble(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.host2datanodeMap \u003d host2datanodeMap;\n-    this.heartbeatInterval \u003d conf.getLong(\n+    this.heartbeatInterval \u003d conf.getTimeDuration(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n-        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n+        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT, TimeUnit.SECONDS) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n     this.preferLocalNode \u003d conf.getBoolean(\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT);\n    this.considerLoadFactor \u003d conf.getDouble(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getTimeDuration(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT, TimeUnit.SECONDS) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n    this.preferLocalNode \u003d conf.getBoolean(\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "d8b729e16fb253e6c84f414d419b5663d9219a43": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10302. BlockPlacementPolicyDefault should use default replication considerload value. Contributed by  Lin Yiqun.\n",
      "commitDate": "18/04/16 5:58 AM",
      "commitName": "d8b729e16fb253e6c84f414d419b5663d9219a43",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "28/02/16 2:54 PM",
      "commitNameOld": "408f2c807bbaaaa37ce1b69a5dfa9d76ed427d6e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 49.59,
      "commitsBetweenForRepo": 296,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap, \n                          Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n-        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n+        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,\n+        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT);\n     this.considerLoadFactor \u003d conf.getDouble(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n     this.preferLocalNode \u003d conf.getBoolean(\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n         DFSConfigKeys.\n             DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT);\n    this.considerLoadFactor \u003d conf.getDouble(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n    this.preferLocalNode \u003d conf.getBoolean(\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "ba6d5ed955aa34cdcb7aaa4b1025da6ee5e91355": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4946. Allow preferLocalNode in BlockPlacementPolicyDefault to be configurable. Contributed by James Kinley and Nathan Roberts.\n",
      "commitDate": "18/02/16 11:21 AM",
      "commitName": "ba6d5ed955aa34cdcb7aaa4b1025da6ee5e91355",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "17/12/15 10:08 PM",
      "commitNameOld": "bfadf11b36e9d97e03d6ed1e71829907c2301412",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 62.55,
      "commitsBetweenForRepo": 382,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,26 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap, \n                          Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n     this.considerLoadFactor \u003d conf.getDouble(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n+    this.preferLocalNode \u003d conf.getBoolean(\n+        DFSConfigKeys.\n+            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n+        DFSConfigKeys.\n+            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.considerLoadFactor \u003d conf.getDouble(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n    this.preferLocalNode \u003d conf.getBoolean(\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY,\n        DFSConfigKeys.\n            DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "bf6aa30a156b3c5cac5469014a5989e0dfdc7256": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9318. considerLoad factor can be improved. Contributed by Kuhu Shukla.\n",
      "commitDate": "06/11/15 11:30 AM",
      "commitName": "bf6aa30a156b3c5cac5469014a5989e0dfdc7256",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "05/11/15 7:25 AM",
      "commitNameOld": "ff47f35deed14ba6463cba76f0e6a6c15abb3eca",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap, \n                          Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n+    this.considerLoadFactor \u003d conf.getDouble(\n+        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n+        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.considerLoadFactor \u003d conf.getDouble(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR,\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "b2f65c276da2c4420a0974a7e2d75e081abf5d63": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5168. Add cross node dependency support to BlockPlacementPolicy.  Contributed by Nikola Vujic\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592179 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/14 4:02 AM",
      "commitName": "b2f65c276da2c4420a0974a7e2d75e081abf5d63",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5168. Add cross node dependency support to BlockPlacementPolicy.  Contributed by Nikola Vujic\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592179 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/05/14 4:02 AM",
          "commitName": "b2f65c276da2c4420a0974a7e2d75e081abf5d63",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "19/02/14 2:59 PM",
          "commitNameOld": "2f341414dd4a052bee3907ff4a6db283a15f9d53",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 72.5,
          "commitsBetweenForRepo": 542,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n-                         NetworkTopology clusterMap) {\n+                         NetworkTopology clusterMap, \n+                         Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n+    this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, stats-FSClusterStats, clusterMap-NetworkTopology]",
            "newValue": "[conf-Configuration, stats-FSClusterStats, clusterMap-NetworkTopology, host2datanodeMap-Host2NodesMap]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5168. Add cross node dependency support to BlockPlacementPolicy.  Contributed by Nikola Vujic\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592179 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/05/14 4:02 AM",
          "commitName": "b2f65c276da2c4420a0974a7e2d75e081abf5d63",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "19/02/14 2:59 PM",
          "commitNameOld": "2f341414dd4a052bee3907ff4a6db283a15f9d53",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 72.5,
          "commitsBetweenForRepo": 542,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n-                         NetworkTopology clusterMap) {\n+                         NetworkTopology clusterMap, \n+                         Host2NodesMap host2datanodeMap) {\n     this.considerLoad \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n+    this.host2datanodeMap \u003d host2datanodeMap;\n     this.heartbeatInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n     this.staleInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n         DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap, \n                         Host2NodesMap host2datanodeMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.host2datanodeMap \u003d host2datanodeMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {}
        }
      ]
    },
    "2887bbb33cefaac0c548eb2450a1f8e3e60f5ea7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3912. Detect and avoid stale datanodes for writes. Contributed by Jing Zhao\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1397211 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/12 11:08 AM",
      "commitName": "2887bbb33cefaac0c548eb2450a1f8e3e60f5ea7",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "04/09/12 4:56 PM",
      "commitNameOld": "658e7b5818fe38419b3192a801d14e82864ea4ae",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 36.76,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap) {\n-    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n+    this.considerLoad \u003d conf.getBoolean(\n+        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n     this.heartbeatInterval \u003d conf.getLong(\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n         DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n     this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n         DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n+    this.staleInterval \u003d conf.getLong(\n+        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n+        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n    this.staleInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY, \n        DFSConfigKeys.DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "2e0a15c48890f646d4dfa7bc8844430ebed888aa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3368. Missing blocks due to bad DataNodes coming up and down. \n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1342512 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/05/12 11:29 PM",
      "commitName": "2e0a15c48890f646d4dfa7bc8844430ebed888aa",
      "commitAuthor": "Konstantin Shvachko",
      "commitDateOld": "10/05/12 2:41 PM",
      "commitNameOld": "7e8e983620f3ae3462d115972707c72b7d9cbabd",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 14.37,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,12 @@\n   public void initialize(Configuration conf,  FSClusterStats stats,\n                          NetworkTopology clusterMap) {\n     this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n     this.stats \u003d stats;\n     this.clusterMap \u003d clusterMap;\n+    this.heartbeatInterval \u003d conf.getLong(\n+        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n+        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n+    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n+        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n+        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n    this.heartbeatInterval \u003d conf.getLong(\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,\n        DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000;\n    this.tolerateHeartbeatMultiplier \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,\n        DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 5:26 PM",
      "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Yfilerename",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 4:57 PM",
      "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java"
      }
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 9:21 AM",
      "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,6 @@\n+  public void initialize(Configuration conf,  FSClusterStats stats,\n+                         NetworkTopology clusterMap) {\n+    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n+    this.stats \u003d stats;\n+    this.clusterMap \u003d clusterMap;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf,  FSClusterStats stats,\n                         NetworkTopology clusterMap) {\n    this.considerLoad \u003d conf.getBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY, true);\n    this.stats \u003d stats;\n    this.clusterMap \u003d clusterMap;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java"
    }
  }
}