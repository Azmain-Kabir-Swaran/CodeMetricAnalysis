{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeAttributesManagerImpl.java",
  "functionName": "getNodesToAttributes",
  "functionId": "getNodesToAttributes___hostNames-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
  "functionStartLine": 476,
  "functionEndLine": 497,
  "numCommitsSeen": 18,
  "timeTaken": 1896,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public Map\u003cString, Set\u003cNodeAttribute\u003e\u003e getNodesToAttributes(\n       Set\u003cString\u003e hostNames) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       boolean fetchAllNodes \u003d (hostNames \u003d\u003d null || hostNames.isEmpty());\n       Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeToAttrs \u003d new HashMap\u003c\u003e();\n       if (fetchAllNodes) {\n         nodeCollections.forEach((key, value) -\u003e nodeToAttrs\n             .put(key, value.getAttributes().keySet()));\n       } else {\n         for (String hostName : hostNames) {\n           Host host \u003d nodeCollections.get(hostName);\n           if (host !\u003d null) {\n             nodeToAttrs.put(hostName, host.getAttributes().keySet());\n           }\n         }\n       }\n       return nodeToAttrs;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Set\u003cNodeAttribute\u003e\u003e getNodesToAttributes(\n      Set\u003cString\u003e hostNames) {\n    readLock.lock();\n    try {\n      boolean fetchAllNodes \u003d (hostNames \u003d\u003d null || hostNames.isEmpty());\n      Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeToAttrs \u003d new HashMap\u003c\u003e();\n      if (fetchAllNodes) {\n        nodeCollections.forEach((key, value) -\u003e nodeToAttrs\n            .put(key, value.getAttributes().keySet()));\n      } else {\n        for (String hostName : hostNames) {\n          Host host \u003d nodeCollections.get(hostName);\n          if (host !\u003d null) {\n            nodeToAttrs.put(hostName, host.getAttributes().keySet());\n          }\n        }\n      }\n      return nodeToAttrs;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
      "extendedDetails": {}
    },
    "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8104. Add API to fetch node to attribute mapping. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,22 @@\n+  public Map\u003cString, Set\u003cNodeAttribute\u003e\u003e getNodesToAttributes(\n+      Set\u003cString\u003e hostNames) {\n+    try {\n+      readLock.lock();\n+      boolean fetchAllNodes \u003d (hostNames \u003d\u003d null || hostNames.isEmpty());\n+      Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeToAttrs \u003d new HashMap\u003c\u003e();\n+      if (fetchAllNodes) {\n+        nodeCollections.forEach((key, value) -\u003e nodeToAttrs\n+            .put(key, value.getAttributes().keySet()));\n+      } else {\n+        for (String hostName : hostNames) {\n+          Host host \u003d nodeCollections.get(hostName);\n+          if (host !\u003d null) {\n+            nodeToAttrs.put(hostName, host.getAttributes().keySet());\n+          }\n+        }\n+      }\n+      return nodeToAttrs;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Set\u003cNodeAttribute\u003e\u003e getNodesToAttributes(\n      Set\u003cString\u003e hostNames) {\n    try {\n      readLock.lock();\n      boolean fetchAllNodes \u003d (hostNames \u003d\u003d null || hostNames.isEmpty());\n      Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeToAttrs \u003d new HashMap\u003c\u003e();\n      if (fetchAllNodes) {\n        nodeCollections.forEach((key, value) -\u003e nodeToAttrs\n            .put(key, value.getAttributes().keySet()));\n      } else {\n        for (String hostName : hostNames) {\n          Host host \u003d nodeCollections.get(hostName);\n          if (host !\u003d null) {\n            nodeToAttrs.put(hostName, host.getAttributes().keySet());\n          }\n        }\n      }\n      return nodeToAttrs;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java"
    }
  }
}