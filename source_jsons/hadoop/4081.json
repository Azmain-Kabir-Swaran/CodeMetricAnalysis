{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "setErasureCodingPolicy",
  "functionId": "setErasureCodingPolicy___path-Path(modifiers-final)__ecPolicyName-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 3019,
  "functionEndLine": 3043,
  "numCommitsSeen": 126,
  "timeTaken": 5056,
  "changeHistory": [
    "f534736867eed962899615ca1b7eb68bcf591d17",
    "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f",
    "82ef9accafe7318278efb169678e17065e082c8e",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93"
  ],
  "changeHistoryShort": {
    "f534736867eed962899615ca1b7eb68bcf591d17": "Ybodychange",
    "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f": "Ybodychange",
    "82ef9accafe7318278efb169678e17065e082c8e": "Ymultichange(Yparameterchange,Ybodychange)",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange"
  },
  "changeHistoryDetails": {
    "f534736867eed962899615ca1b7eb68bcf591d17": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14095. EC: Track Erasure Coding commands in DFS statistics. Contributed by Ayush Saxena.\n",
      "commitDate": "29/11/18 10:48 AM",
      "commitName": "f534736867eed962899615ca1b7eb68bcf591d17",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "15/10/18 10:51 AM",
      "commitNameOld": "b6fc72a0250ac3f2341ebe8a14d19b073e6224c8",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 45.04,
      "commitsBetweenForRepo": 367,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public void setErasureCodingPolicy(final Path path,\n       final String ecPolicyName) throws IOException {\n+    statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.SET_EC_POLICY);\n     Path absF \u003d fixRelativePart(path);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException {\n         dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n         return null;\n       }\n \n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           myDfs.setErasureCodingPolicy(p, ecPolicyName);\n           return null;\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot setErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setErasureCodingPolicy(final Path path,\n      final String ecPolicyName) throws IOException {\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.SET_EC_POLICY);\n    Path absF \u003d fixRelativePart(path);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.setErasureCodingPolicy(p, ecPolicyName);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot setErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11975. Provide a system-default EC policy. Contributed by Huichun Lu\n",
      "commitDate": "08/08/17 7:12 PM",
      "commitName": "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "31/07/17 8:12 PM",
      "commitNameOld": "9586b0e24fce29c278134658e68b8c47cd9d8c51",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 7.96,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   public void setErasureCodingPolicy(final Path path,\n       final String ecPolicyName) throws IOException {\n     Path absF \u003d fixRelativePart(path);\n-    Preconditions.checkNotNull(ecPolicyName, \"Erasure coding policy cannot be\" +\n-        \" null.\");\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException {\n         dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n         return null;\n       }\n \n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           myDfs.setErasureCodingPolicy(p, ecPolicyName);\n           return null;\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot setErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setErasureCodingPolicy(final Path path,\n      final String ecPolicyName) throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.setErasureCodingPolicy(p, ecPolicyName);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot setErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "82ef9accafe7318278efb169678e17065e082c8e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11428. Change setErasureCodingPolicy to take a required string EC policy name. Contributed by Andrew Wang.\n",
      "commitDate": "01/03/17 2:36 AM",
      "commitName": "82ef9accafe7318278efb169678e17065e082c8e",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11428. Change setErasureCodingPolicy to take a required string EC policy name. Contributed by Andrew Wang.\n",
          "commitDate": "01/03/17 2:36 AM",
          "commitName": "82ef9accafe7318278efb169678e17065e082c8e",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "14/02/17 2:57 AM",
          "commitNameOld": "4164a2032a41e7318749efd0301751eb2b369cdc",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 14.99,
          "commitsBetweenForRepo": 97,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n   public void setErasureCodingPolicy(final Path path,\n-      final ErasureCodingPolicy ecPolicy) throws IOException {\n+      final String ecPolicyName) throws IOException {\n     Path absF \u003d fixRelativePart(path);\n+    Preconditions.checkNotNull(ecPolicyName, \"Erasure coding policy cannot be\" +\n+        \" null.\");\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException {\n-        dfs.setErasureCodingPolicy(getPathName(p), ecPolicy);\n+        dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n         return null;\n       }\n \n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n-          myDfs.setErasureCodingPolicy(p, ecPolicy);\n+          myDfs.setErasureCodingPolicy(p, ecPolicyName);\n           return null;\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot setErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setErasureCodingPolicy(final Path path,\n      final String ecPolicyName) throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    Preconditions.checkNotNull(ecPolicyName, \"Erasure coding policy cannot be\" +\n        \" null.\");\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.setErasureCodingPolicy(p, ecPolicyName);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot setErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "[path-Path(modifiers-final), ecPolicy-ErasureCodingPolicy(modifiers-final)]",
            "newValue": "[path-Path(modifiers-final), ecPolicyName-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11428. Change setErasureCodingPolicy to take a required string EC policy name. Contributed by Andrew Wang.\n",
          "commitDate": "01/03/17 2:36 AM",
          "commitName": "82ef9accafe7318278efb169678e17065e082c8e",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "14/02/17 2:57 AM",
          "commitNameOld": "4164a2032a41e7318749efd0301751eb2b369cdc",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 14.99,
          "commitsBetweenForRepo": 97,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n   public void setErasureCodingPolicy(final Path path,\n-      final ErasureCodingPolicy ecPolicy) throws IOException {\n+      final String ecPolicyName) throws IOException {\n     Path absF \u003d fixRelativePart(path);\n+    Preconditions.checkNotNull(ecPolicyName, \"Erasure coding policy cannot be\" +\n+        \" null.\");\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException {\n-        dfs.setErasureCodingPolicy(getPathName(p), ecPolicy);\n+        dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n         return null;\n       }\n \n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n-          myDfs.setErasureCodingPolicy(p, ecPolicy);\n+          myDfs.setErasureCodingPolicy(p, ecPolicyName);\n           return null;\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot setErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setErasureCodingPolicy(final Path path,\n      final String ecPolicyName) throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    Preconditions.checkNotNull(ecPolicyName, \"Erasure coding policy cannot be\" +\n        \" null.\");\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.setErasureCodingPolicy(getPathName(p), ecPolicyName);\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.setErasureCodingPolicy(p, ecPolicyName);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot setErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n-  public void setErasureCodingPolicy(final Path path, final ErasureCodingPolicy ecPolicy)\n-      throws IOException {\n+  public void setErasureCodingPolicy(final Path path,\n+      final ErasureCodingPolicy ecPolicy) throws IOException {\n     Path absF \u003d fixRelativePart(path);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n-      public Void doCall(final Path p) throws IOException,\n-          UnresolvedLinkException {\n+      public Void doCall(final Path p) throws IOException {\n         dfs.setErasureCodingPolicy(getPathName(p), ecPolicy);\n         return null;\n       }\n \n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           myDfs.setErasureCodingPolicy(p, ecPolicy);\n           return null;\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot setErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setErasureCodingPolicy(final Path path,\n      final ErasureCodingPolicy ecPolicy) throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.setErasureCodingPolicy(getPathName(p), ecPolicy);\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.setErasureCodingPolicy(p, ecPolicy);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot setErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    }
  }
}