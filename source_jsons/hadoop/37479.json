{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceManager.java",
  "functionName": "createEmbeddedElector",
  "functionId": "createEmbeddedElector",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
  "functionStartLine": 379,
  "functionEndLine": 391,
  "numCommitsSeen": 192,
  "timeTaken": 4797,
  "changeHistory": [
    "a9c70b0e84dab0c41e480a0dc0cb1a22efdc64ee",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "a6410a542e59acd9827457df4a257a843f785c29"
  ],
  "changeHistoryShort": {
    "a9c70b0e84dab0c41e480a0dc0cb1a22efdc64ee": "Ybodychange",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Ybodychange",
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60": "Ybodychange",
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "a6410a542e59acd9827457df4a257a843f785c29": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a9c70b0e84dab0c41e480a0dc0cb1a22efdc64ee": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7453. Fix issue where RM fails to switch to active after first successful start. (Rohith Sharma K S via asuresh)\n",
      "commitDate": "08/11/17 8:00 AM",
      "commitName": "a9c70b0e84dab0c41e480a0dc0cb1a22efdc64ee",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "09/10/17 8:36 PM",
      "commitNameOld": "5cfbad68c0ef6e70d248d4989f9889576d5fcf7e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 29.52,
      "commitsBetweenForRepo": 283,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected EmbeddedElector createEmbeddedElector() throws IOException {\n     EmbeddedElector elector;\n     curatorEnabled \u003d\n         conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n             YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n     if (curatorEnabled) {\n-      this.zkManager \u003d getAndStartZKManager(conf);\n+      this.zkManager \u003d createAndStartZKManager(conf);\n       elector \u003d new CuratorBasedElectorService(this);\n     } else {\n       elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n     }\n     return elector;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected EmbeddedElector createEmbeddedElector() throws IOException {\n    EmbeddedElector elector;\n    curatorEnabled \u003d\n        conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n            YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n    if (curatorEnabled) {\n      this.zkManager \u003d createAndStartZKManager(conf);\n      elector \u003d new CuratorBasedElectorService(this);\n    } else {\n      elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n    }\n    return elector;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "06/10/17 9:49 AM",
      "commitNameOld": "72d22b753abde4d07a727479d3f3d5d84d5dd6b2",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 3.06,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected EmbeddedElector createEmbeddedElector() throws IOException {\n     EmbeddedElector elector;\n     curatorEnabled \u003d\n         conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n             YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n     if (curatorEnabled) {\n-      this.zkManager \u003d createAndStartZKManager(conf);\n+      this.zkManager \u003d getAndStartZKManager(conf);\n       elector \u003d new CuratorBasedElectorService(this);\n     } else {\n       elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n     }\n     return elector;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected EmbeddedElector createEmbeddedElector() throws IOException {\n    EmbeddedElector elector;\n    curatorEnabled \u003d\n        conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n            YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n    if (curatorEnabled) {\n      this.zkManager \u003d getAndStartZKManager(conf);\n      elector \u003d new CuratorBasedElectorService(this);\n    } else {\n      elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n    }\n    return elector;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14741. Refactor curator based ZooKeeper communication into common library. (Íñigo Goiri via Subru).\n",
      "commitDate": "11/08/17 1:58 PM",
      "commitName": "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "2797507d51566ab3b8328e5fb1d0beb9fbce5bae",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 9.85,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected EmbeddedElector createEmbeddedElector() throws IOException {\n     EmbeddedElector elector;\n     curatorEnabled \u003d\n         conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n             YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n     if (curatorEnabled) {\n-      this.curator \u003d createAndStartCurator(conf);\n+      this.zkManager \u003d createAndStartZKManager(conf);\n       elector \u003d new CuratorBasedElectorService(this);\n     } else {\n       elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n     }\n     return elector;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected EmbeddedElector createEmbeddedElector() throws IOException {\n    EmbeddedElector elector;\n    curatorEnabled \u003d\n        conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n            YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n    if (curatorEnabled) {\n      this.zkManager \u003d createAndStartZKManager(conf);\n      elector \u003d new CuratorBasedElectorService(this);\n    } else {\n      elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n    }\n    return elector;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "31/05/17 8:18 AM",
      "commitNameOld": "cbfed0e82f57e96b8d5309e0613057963840554f",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 53.62,
      "commitsBetweenForRepo": 247,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected EmbeddedElector createEmbeddedElector() throws IOException {\n     EmbeddedElector elector;\n     curatorEnabled \u003d\n         conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n             YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n     if (curatorEnabled) {\n       this.curator \u003d createAndStartCurator(conf);\n-      elector \u003d new CuratorBasedElectorService(rmContext, this);\n+      elector \u003d new CuratorBasedElectorService(this);\n     } else {\n-      elector \u003d new ActiveStandbyElectorBasedElectorService(rmContext);\n+      elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n     }\n     return elector;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected EmbeddedElector createEmbeddedElector() throws IOException {\n    EmbeddedElector elector;\n    curatorEnabled \u003d\n        conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n            YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n    if (curatorEnabled) {\n      this.curator \u003d createAndStartCurator(conf);\n      elector \u003d new CuratorBasedElectorService(this);\n    } else {\n      elector \u003d new ActiveStandbyElectorBasedElectorService(this);\n    }\n    return elector;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,13 @@\n+  protected EmbeddedElector createEmbeddedElector() throws IOException {\n+    EmbeddedElector elector;\n+    curatorEnabled \u003d\n+        conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n+            YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n+    if (curatorEnabled) {\n+      this.curator \u003d createAndStartCurator(conf);\n+      elector \u003d new CuratorBasedElectorService(rmContext, this);\n+    } else {\n+      elector \u003d new ActiveStandbyElectorBasedElectorService(rmContext);\n+    }\n+    return elector;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected EmbeddedElector createEmbeddedElector() throws IOException {\n    EmbeddedElector elector;\n    curatorEnabled \u003d\n        conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n            YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n    if (curatorEnabled) {\n      this.curator \u003d createAndStartCurator(conf);\n      elector \u003d new CuratorBasedElectorService(rmContext, this);\n    } else {\n      elector \u003d new ActiveStandbyElectorBasedElectorService(rmContext);\n    }\n    return elector;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
    }
  }
}