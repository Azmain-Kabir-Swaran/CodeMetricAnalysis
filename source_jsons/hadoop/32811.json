{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerLaunch.java",
  "functionName": "pauseContainer",
  "functionId": "pauseContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java",
  "functionStartLine": 904,
  "functionEndLine": 945,
  "numCommitsSeen": 95,
  "timeTaken": 2114,
  "changeHistory": [
    "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
    "864fbacd4548004b1de8b0812627976acd22aff5"
  ],
  "changeHistoryShort": {
    "66ca0a65408521d5f9b080dd16b353b49fb8eaea": "Ybodychange",
    "864fbacd4548004b1de8b0812627976acd22aff5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66ca0a65408521d5f9b080dd16b353b49fb8eaea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6059. Update paused container state in the NM state store. (Hitesh Sharma via asuresh)\n",
      "commitDate": "14/09/17 8:51 AM",
      "commitName": "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "14/09/17 8:48 AM",
      "commitNameOld": "864fbacd4548004b1de8b0812627976acd22aff5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,42 @@\n   public void pauseContainer() throws IOException {\n     ContainerId containerId \u003d container.getContainerId();\n     String containerIdStr \u003d containerId.toString();\n     LOG.info(\"Pausing the container \" + containerIdStr);\n \n     // The pause event is only handled if the container is in the running state\n     // (the container state machine), so we don\u0027t check for\n     // shouldLaunchContainer over here\n \n     if (!shouldPauseContainer.compareAndSet(false, true)) {\n       LOG.info(\"Container \" + containerId + \" not paused as \"\n           + \"resume already called\");\n       return;\n     }\n \n     try {\n       // Pause the container\n       exec.pauseContainer(container);\n \n       // PauseContainer is a blocking call. We are here almost means the\n       // container is paused, so send out the event.\n       dispatcher.getEventHandler().handle(new ContainerEvent(\n           containerId,\n           ContainerEventType.CONTAINER_PAUSED));\n+\n+      try {\n+        this.context.getNMStateStore().storeContainerPaused(\n+            container.getContainerId());\n+      } catch (IOException e) {\n+        LOG.warn(\"Could not store container [\" + container.getContainerId()\n+            + \"] state. The Container has been paused.\", e);\n+      }\n     } catch (Exception e) {\n       String message \u003d\n           \"Exception when trying to pause container \" + containerIdStr\n               + \": \" + StringUtils.stringifyException(e);\n       LOG.info(message);\n       container.handle(new ContainerKillEvent(container.getContainerId(),\n           ContainerExitStatus.PREEMPTED, \"Container preempted as there was \"\n           + \" an exception in pausing it.\"));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void pauseContainer() throws IOException {\n    ContainerId containerId \u003d container.getContainerId();\n    String containerIdStr \u003d containerId.toString();\n    LOG.info(\"Pausing the container \" + containerIdStr);\n\n    // The pause event is only handled if the container is in the running state\n    // (the container state machine), so we don\u0027t check for\n    // shouldLaunchContainer over here\n\n    if (!shouldPauseContainer.compareAndSet(false, true)) {\n      LOG.info(\"Container \" + containerId + \" not paused as \"\n          + \"resume already called\");\n      return;\n    }\n\n    try {\n      // Pause the container\n      exec.pauseContainer(container);\n\n      // PauseContainer is a blocking call. We are here almost means the\n      // container is paused, so send out the event.\n      dispatcher.getEventHandler().handle(new ContainerEvent(\n          containerId,\n          ContainerEventType.CONTAINER_PAUSED));\n\n      try {\n        this.context.getNMStateStore().storeContainerPaused(\n            container.getContainerId());\n      } catch (IOException e) {\n        LOG.warn(\"Could not store container [\" + container.getContainerId()\n            + \"] state. The Container has been paused.\", e);\n      }\n    } catch (Exception e) {\n      String message \u003d\n          \"Exception when trying to pause container \" + containerIdStr\n              + \": \" + StringUtils.stringifyException(e);\n      LOG.info(message);\n      container.handle(new ContainerKillEvent(container.getContainerId(),\n          ContainerExitStatus.PREEMPTED, \"Container preempted as there was \"\n          + \" an exception in pausing it.\"));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java",
      "extendedDetails": {}
    },
    "864fbacd4548004b1de8b0812627976acd22aff5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5292. NM Container lifecycle and state transitions to support for PAUSED container state. (Hitesh Sharma via asuresh)\n",
      "commitDate": "14/09/17 8:48 AM",
      "commitName": "864fbacd4548004b1de8b0812627976acd22aff5",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,34 @@\n+  public void pauseContainer() throws IOException {\n+    ContainerId containerId \u003d container.getContainerId();\n+    String containerIdStr \u003d containerId.toString();\n+    LOG.info(\"Pausing the container \" + containerIdStr);\n+\n+    // The pause event is only handled if the container is in the running state\n+    // (the container state machine), so we don\u0027t check for\n+    // shouldLaunchContainer over here\n+\n+    if (!shouldPauseContainer.compareAndSet(false, true)) {\n+      LOG.info(\"Container \" + containerId + \" not paused as \"\n+          + \"resume already called\");\n+      return;\n+    }\n+\n+    try {\n+      // Pause the container\n+      exec.pauseContainer(container);\n+\n+      // PauseContainer is a blocking call. We are here almost means the\n+      // container is paused, so send out the event.\n+      dispatcher.getEventHandler().handle(new ContainerEvent(\n+          containerId,\n+          ContainerEventType.CONTAINER_PAUSED));\n+    } catch (Exception e) {\n+      String message \u003d\n+          \"Exception when trying to pause container \" + containerIdStr\n+              + \": \" + StringUtils.stringifyException(e);\n+      LOG.info(message);\n+      container.handle(new ContainerKillEvent(container.getContainerId(),\n+          ContainerExitStatus.PREEMPTED, \"Container preempted as there was \"\n+          + \" an exception in pausing it.\"));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void pauseContainer() throws IOException {\n    ContainerId containerId \u003d container.getContainerId();\n    String containerIdStr \u003d containerId.toString();\n    LOG.info(\"Pausing the container \" + containerIdStr);\n\n    // The pause event is only handled if the container is in the running state\n    // (the container state machine), so we don\u0027t check for\n    // shouldLaunchContainer over here\n\n    if (!shouldPauseContainer.compareAndSet(false, true)) {\n      LOG.info(\"Container \" + containerId + \" not paused as \"\n          + \"resume already called\");\n      return;\n    }\n\n    try {\n      // Pause the container\n      exec.pauseContainer(container);\n\n      // PauseContainer is a blocking call. We are here almost means the\n      // container is paused, so send out the event.\n      dispatcher.getEventHandler().handle(new ContainerEvent(\n          containerId,\n          ContainerEventType.CONTAINER_PAUSED));\n    } catch (Exception e) {\n      String message \u003d\n          \"Exception when trying to pause container \" + containerIdStr\n              + \": \" + StringUtils.stringifyException(e);\n      LOG.info(message);\n      container.handle(new ContainerKillEvent(container.getContainerId(),\n          ContainerExitStatus.PREEMPTED, \"Container preempted as there was \"\n          + \" an exception in pausing it.\"));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java"
    }
  }
}