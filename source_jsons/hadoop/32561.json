{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerLogsPage.java",
  "functionName": "printLocalLogFileDirectory",
  "functionId": "printLocalLogFileDirectory___html-Block__containerLogsDirs-List__File__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
  "functionStartLine": 252,
  "functionEndLine": 275,
  "numCommitsSeen": 22,
  "timeTaken": 3052,
  "changeHistory": [
    "631b5c2db733b0733a779e843b8035f68d0fcdf3",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "a759abcd898224c3481c55aa7e424bc286f60b15"
  ],
  "changeHistoryShort": {
    "631b5c2db733b0733a779e843b8035f68d0fcdf3": "Yrename",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "a759abcd898224c3481c55aa7e424bc286f60b15": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631b5c2db733b0733a779e843b8035f68d0fcdf3": {
      "type": "Yrename",
      "commitMessage": "YARN-5418. When partial log aggregation is enabled, display the list of aggregated files on the container log page. (Xuan Gong via wangda)\n\nChange-Id: I1befb0bbaeb89fb315bafe3e2f3379663f8cf1ec\n",
      "commitDate": "15/12/17 3:38 PM",
      "commitName": "631b5c2db733b0733a779e843b8035f68d0fcdf3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 140.98,
      "commitsBetweenForRepo": 1187,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n-    private void printLogFileDirectory(Block html, List\u003cFile\u003e containerLogsDirs) {\n+    private void printLocalLogFileDirectory(Block html,\n+        List\u003cFile\u003e containerLogsDirs) {\n       // Print out log types in lexical order\n       Collections.sort(containerLogsDirs);\n       boolean foundLogFile \u003d false;\n       for (File containerLogsDir : containerLogsDirs) {\n         File[] logFiles \u003d containerLogsDir.listFiles();\n         if (logFiles !\u003d null) {\n           Arrays.sort(logFiles);\n           for (File logFile : logFiles) {\n             foundLogFile \u003d true;\n             html.p()\n                 .a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n                     logFile.getName(), \"?start\u003d-4096\"),\n                     logFile.getName() + \" : Total file length is \"\n                         + logFile.length() + \" bytes.\").__();\n           }\n         }\n       }\n       if (!foundLogFile) {\n         html.h1(\"No logs available for container \" + $(CONTAINER_ID));\n         return;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void printLocalLogFileDirectory(Block html,\n        List\u003cFile\u003e containerLogsDirs) {\n      // Print out log types in lexical order\n      Collections.sort(containerLogsDirs);\n      boolean foundLogFile \u003d false;\n      for (File containerLogsDir : containerLogsDirs) {\n        File[] logFiles \u003d containerLogsDir.listFiles();\n        if (logFiles !\u003d null) {\n          Arrays.sort(logFiles);\n          for (File logFile : logFiles) {\n            foundLogFile \u003d true;\n            html.p()\n                .a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n                    logFile.getName(), \"?start\u003d-4096\"),\n                    logFile.getName() + \" : Total file length is \"\n                        + logFile.length() + \" bytes.\").__();\n          }\n        }\n      }\n      if (!foundLogFile) {\n        html.h1(\"No logs available for container \" + $(CONTAINER_ID));\n        return;\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {
        "oldValue": "printLogFileDirectory",
        "newValue": "printLocalLogFileDirectory"
      }
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 408.09,
      "commitsBetweenForRepo": 2572,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void printLogFileDirectory(Block html, List\u003cFile\u003e containerLogsDirs) {\n       // Print out log types in lexical order\n       Collections.sort(containerLogsDirs);\n       boolean foundLogFile \u003d false;\n       for (File containerLogsDir : containerLogsDirs) {\n         File[] logFiles \u003d containerLogsDir.listFiles();\n         if (logFiles !\u003d null) {\n           Arrays.sort(logFiles);\n           for (File logFile : logFiles) {\n             foundLogFile \u003d true;\n             html.p()\n                 .a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n                     logFile.getName(), \"?start\u003d-4096\"),\n                     logFile.getName() + \" : Total file length is \"\n-                        + logFile.length() + \" bytes.\")._();\n+                        + logFile.length() + \" bytes.\").__();\n           }\n         }\n       }\n       if (!foundLogFile) {\n         html.h1(\"No logs available for container \" + $(CONTAINER_ID));\n         return;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void printLogFileDirectory(Block html, List\u003cFile\u003e containerLogsDirs) {\n      // Print out log types in lexical order\n      Collections.sort(containerLogsDirs);\n      boolean foundLogFile \u003d false;\n      for (File containerLogsDir : containerLogsDirs) {\n        File[] logFiles \u003d containerLogsDir.listFiles();\n        if (logFiles !\u003d null) {\n          Arrays.sort(logFiles);\n          for (File logFile : logFiles) {\n            foundLogFile \u003d true;\n            html.p()\n                .a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n                    logFile.getName(), \"?start\u003d-4096\"),\n                    logFile.getName() + \" : Total file length is \"\n                        + logFile.length() + \" bytes.\").__();\n          }\n        }\n      }\n      if (!foundLogFile) {\n        html.h1(\"No logs available for container \" + $(CONTAINER_ID));\n        return;\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {}
    },
    "a759abcd898224c3481c55aa7e424bc286f60b15": {
      "type": "Yintroduced",
      "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/09/13 5:09 PM",
      "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+    private void printLogFileDirectory(Block html, List\u003cFile\u003e containerLogsDirs) {\n+      // Print out log types in lexical order\n+      Collections.sort(containerLogsDirs);\n+      boolean foundLogFile \u003d false;\n+      for (File containerLogsDir : containerLogsDirs) {\n+        File[] logFiles \u003d containerLogsDir.listFiles();\n+        if (logFiles !\u003d null) {\n+          Arrays.sort(logFiles);\n+          for (File logFile : logFiles) {\n+            foundLogFile \u003d true;\n+            html.p()\n+                .a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n+                    logFile.getName(), \"?start\u003d-4096\"),\n+                    logFile.getName() + \" : Total file length is \"\n+                        + logFile.length() + \" bytes.\")._();\n+          }\n+        }\n+      }\n+      if (!foundLogFile) {\n+        html.h1(\"No logs available for container \" + $(CONTAINER_ID));\n+        return;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void printLogFileDirectory(Block html, List\u003cFile\u003e containerLogsDirs) {\n      // Print out log types in lexical order\n      Collections.sort(containerLogsDirs);\n      boolean foundLogFile \u003d false;\n      for (File containerLogsDir : containerLogsDirs) {\n        File[] logFiles \u003d containerLogsDir.listFiles();\n        if (logFiles !\u003d null) {\n          Arrays.sort(logFiles);\n          for (File logFile : logFiles) {\n            foundLogFile \u003d true;\n            html.p()\n                .a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n                    logFile.getName(), \"?start\u003d-4096\"),\n                    logFile.getName() + \" : Total file length is \"\n                        + logFile.length() + \" bytes.\")._();\n          }\n        }\n      }\n      if (!foundLogFile) {\n        html.h1(\"No logs available for container \" + $(CONTAINER_ID));\n        return;\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java"
    }
  }
}