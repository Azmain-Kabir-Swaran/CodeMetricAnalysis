{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsRegistry.java",
  "functionName": "newQuantiles",
  "functionId": "newQuantiles___name-String__desc-String__sampleName-String__valueName-String__interval-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsRegistry.java",
  "functionStartLine": 217,
  "functionEndLine": 228,
  "numCommitsSeen": 9,
  "timeTaken": 967,
  "changeHistory": [
    "e1bf8b3df6f019b92a3dad37c977f40397324e75",
    "b5b0ac64a18ccefe1626ce985adf576549172911"
  ],
  "changeHistoryShort": {
    "e1bf8b3df6f019b92a3dad37c977f40397324e75": "Ybodychange",
    "b5b0ac64a18ccefe1626ce985adf576549172911": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1bf8b3df6f019b92a3dad37c977f40397324e75": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11104. org.apache.hadoop.metrics2.lib.MetricsRegistry needs numerical parameter checking. Contributed by Ray Chiang.\n",
      "commitDate": "08/10/15 7:10 PM",
      "commitName": "e1bf8b3df6f019b92a3dad37c977f40397324e75",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "15/01/15 11:39 AM",
      "commitNameOld": "b6ff9c03a4f8aba945e562a7ff60b0fc6a1cd040",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 266.27,
      "commitsBetweenForRepo": 2295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,12 @@\n   public synchronized MutableQuantiles newQuantiles(String name, String desc,\n       String sampleName, String valueName, int interval) {\n     checkMetricName(name);\n-    MutableQuantiles ret \u003d \n+    if (interval \u003c\u003d 0) {\n+      throw new MetricsException(\"Interval should be positive.  Value passed\" +\n+          \" is: \" + interval);\n+    }\n+    MutableQuantiles ret \u003d\n         new MutableQuantiles(name, desc, sampleName, valueName, interval);\n     metricsMap.put(name, ret);\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MutableQuantiles newQuantiles(String name, String desc,\n      String sampleName, String valueName, int interval) {\n    checkMetricName(name);\n    if (interval \u003c\u003d 0) {\n      throw new MetricsException(\"Interval should be positive.  Value passed\" +\n          \" is: \" + interval);\n    }\n    MutableQuantiles ret \u003d\n        new MutableQuantiles(name, desc, sampleName, valueName, interval);\n    metricsMap.put(name, ret);\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsRegistry.java",
      "extendedDetails": {}
    },
    "b5b0ac64a18ccefe1626ce985adf576549172911": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8541. Better high-percentile latency metrics. Contributed by Andrew Wang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 6:31 PM",
      "commitName": "b5b0ac64a18ccefe1626ce985adf576549172911",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,8 @@\n+  public synchronized MutableQuantiles newQuantiles(String name, String desc,\n+      String sampleName, String valueName, int interval) {\n+    checkMetricName(name);\n+    MutableQuantiles ret \u003d \n+        new MutableQuantiles(name, desc, sampleName, valueName, interval);\n+    metricsMap.put(name, ret);\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized MutableQuantiles newQuantiles(String name, String desc,\n      String sampleName, String valueName, int interval) {\n    checkMetricName(name);\n    MutableQuantiles ret \u003d \n        new MutableQuantiles(name, desc, sampleName, valueName, interval);\n    metricsMap.put(name, ret);\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsRegistry.java"
    }
  }
}