{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamenodeWebHdfsMethods.java",
  "functionName": "createCredentials",
  "functionId": "createCredentials___ugi-UserGroupInformation(modifiers-final)__renewer-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
  "functionStartLine": 363,
  "functionEndLine": 369,
  "numCommitsSeen": 294,
  "timeTaken": 8174,
  "changeHistory": [
    "f5b4e0f971b138666a1f7015f387ae960f85d589",
    "e7b63baca1e10b28d8b4462fd80537b871951aa3",
    "85cd06f6636f295ad1f3bf2a90063f4714c9cca7",
    "5c97db07fb306842f49d73a67a90cecec19a7833",
    "bbff44cb03d0150f990acc3b77170893241cc282",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
    "a549d6fa2c103965d1bd3cfbfdf2ce08533eb4a4",
    "a590b498acf1a424ffbb3a9d8849c0abb409366d",
    "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8",
    "32cad9affe159ff7c6e4c7e31f57174967ef210a",
    "a2d7287873685249c2ceeda49f9feadfb307f5c2",
    "78e3821b819b441d1faf4bc66c659cdeddc6006c"
  ],
  "changeHistoryShort": {
    "f5b4e0f971b138666a1f7015f387ae960f85d589": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "e7b63baca1e10b28d8b4462fd80537b871951aa3": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "85cd06f6636f295ad1f3bf2a90063f4714c9cca7": "Ybodychange",
    "5c97db07fb306842f49d73a67a90cecec19a7833": "Ybodychange",
    "bbff44cb03d0150f990acc3b77170893241cc282": "Ybodychange",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": "Ybodychange",
    "a549d6fa2c103965d1bd3cfbfdf2ce08533eb4a4": "Ybodychange",
    "a590b498acf1a424ffbb3a9d8849c0abb409366d": "Ybodychange",
    "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8": "Ybodychange",
    "32cad9affe159ff7c6e4c7e31f57174967ef210a": "Ybodychange",
    "a2d7287873685249c2ceeda49f9feadfb307f5c2": "Ybodychange",
    "78e3821b819b441d1faf4bc66c659cdeddc6006c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f5b4e0f971b138666a1f7015f387ae960f85d589": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-14302. Refactor NameNodeWebHdfsMethods#generateDelegationToken() to allow better extensibility. Contributed by CR Hota.\n",
      "commitDate": "20/02/19 1:55 PM",
      "commitName": "f5b4e0f971b138666a1f7015f387ae960f85d589",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-14302. Refactor NameNodeWebHdfsMethods#generateDelegationToken() to allow better extensibility. Contributed by CR Hota.\n",
          "commitDate": "20/02/19 1:55 PM",
          "commitName": "f5b4e0f971b138666a1f7015f387ae960f85d589",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "23/01/19 3:30 AM",
          "commitNameOld": "221e308cb5ea13053652981ef43144a168bb7e83",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 28.43,
          "commitsBetweenForRepo": 203,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,7 @@\n-  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n-      final UserGroupInformation ugi,\n+  public Credentials createCredentials(final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n-    if (c \u003d\u003d null) {\n-      return null;\n-    }\n-    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    Text kind \u003d scheme.equals(\"http\")\n-        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n-        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n-    t.setKind(kind);\n-    return t;\n+    return c;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Credentials createCredentials(final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    return c;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
          "extendedDetails": {
            "oldValue": "generateDelegationToken",
            "newValue": "createCredentials"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-14302. Refactor NameNodeWebHdfsMethods#generateDelegationToken() to allow better extensibility. Contributed by CR Hota.\n",
          "commitDate": "20/02/19 1:55 PM",
          "commitName": "f5b4e0f971b138666a1f7015f387ae960f85d589",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "23/01/19 3:30 AM",
          "commitNameOld": "221e308cb5ea13053652981ef43144a168bb7e83",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 28.43,
          "commitsBetweenForRepo": 203,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,7 @@\n-  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n-      final UserGroupInformation ugi,\n+  public Credentials createCredentials(final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n-    if (c \u003d\u003d null) {\n-      return null;\n-    }\n-    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    Text kind \u003d scheme.equals(\"http\")\n-        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n-        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n-    t.setKind(kind);\n-    return t;\n+    return c;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Credentials createCredentials(final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    return c;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
          "extendedDetails": {
            "oldValue": "Token\u003c? extends TokenIdentifier\u003e",
            "newValue": "Credentials"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14302. Refactor NameNodeWebHdfsMethods#generateDelegationToken() to allow better extensibility. Contributed by CR Hota.\n",
          "commitDate": "20/02/19 1:55 PM",
          "commitName": "f5b4e0f971b138666a1f7015f387ae960f85d589",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "23/01/19 3:30 AM",
          "commitNameOld": "221e308cb5ea13053652981ef43144a168bb7e83",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 28.43,
          "commitsBetweenForRepo": 203,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,7 @@\n-  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n-      final UserGroupInformation ugi,\n+  public Credentials createCredentials(final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n-    if (c \u003d\u003d null) {\n-      return null;\n-    }\n-    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    Text kind \u003d scheme.equals(\"http\")\n-        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n-        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n-    t.setKind(kind);\n-    return t;\n+    return c;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Credentials createCredentials(final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    return c;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
          "extendedDetails": {}
        }
      ]
    },
    "e7b63baca1e10b28d8b4462fd80537b871951aa3": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-14070. Refactor NameNodeWebHdfsMethods to allow better extensibility. Contributed by CR Hota\n",
      "commitDate": "12/11/18 11:15 PM",
      "commitName": "e7b63baca1e10b28d8b4462fd80537b871951aa3",
      "commitAuthor": "Brahma Reddy Battula",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14070. Refactor NameNodeWebHdfsMethods to allow better extensibility. Contributed by CR Hota\n",
          "commitDate": "12/11/18 11:15 PM",
          "commitName": "e7b63baca1e10b28d8b4462fd80537b871951aa3",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "10/10/18 10:11 AM",
          "commitNameOld": "3ead525c71cba068e7abf1c76ad629bfeec10852",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 33.59,
          "commitsBetweenForRepo": 307,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n-      final NameNode namenode, final UserGroupInformation ugi,\n+  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n+      final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n+    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     if (c \u003d\u003d null) {\n       return null;\n     }\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     Text kind \u003d scheme.equals(\"http\")\n         ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n         : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n     t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    if (c \u003d\u003d null) {\n      return null;\n    }\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d scheme.equals(\"http\")\n        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
          "extendedDetails": {
            "oldValue": "[namenode-NameNode(modifiers-final), ugi-UserGroupInformation(modifiers-final), renewer-String(modifiers-final)]",
            "newValue": "[ugi-UserGroupInformation(modifiers-final), renewer-String(modifiers-final)]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-14070. Refactor NameNodeWebHdfsMethods to allow better extensibility. Contributed by CR Hota\n",
          "commitDate": "12/11/18 11:15 PM",
          "commitName": "e7b63baca1e10b28d8b4462fd80537b871951aa3",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "10/10/18 10:11 AM",
          "commitNameOld": "3ead525c71cba068e7abf1c76ad629bfeec10852",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 33.59,
          "commitsBetweenForRepo": 307,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n-      final NameNode namenode, final UserGroupInformation ugi,\n+  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n+      final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n+    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     if (c \u003d\u003d null) {\n       return null;\n     }\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     Text kind \u003d scheme.equals(\"http\")\n         ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n         : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n     t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    if (c \u003d\u003d null) {\n      return null;\n    }\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d scheme.equals(\"http\")\n        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14070. Refactor NameNodeWebHdfsMethods to allow better extensibility. Contributed by CR Hota\n",
          "commitDate": "12/11/18 11:15 PM",
          "commitName": "e7b63baca1e10b28d8b4462fd80537b871951aa3",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "10/10/18 10:11 AM",
          "commitNameOld": "3ead525c71cba068e7abf1c76ad629bfeec10852",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 33.59,
          "commitsBetweenForRepo": 307,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n-      final NameNode namenode, final UserGroupInformation ugi,\n+  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n+      final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n+    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     if (c \u003d\u003d null) {\n       return null;\n     }\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     Text kind \u003d scheme.equals(\"http\")\n         ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n         : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n     t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    if (c \u003d\u003d null) {\n      return null;\n    }\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d scheme.equals(\"http\")\n        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
          "extendedDetails": {}
        }
      ]
    },
    "85cd06f6636f295ad1f3bf2a90063f4714c9cca7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10789. Route webhdfs through the RPC call queue. Contributed by Daryn Sharp and Rushabh S Shah.\n",
      "commitDate": "12/10/16 1:11 PM",
      "commitName": "85cd06f6636f295ad1f3bf2a90063f4714c9cca7",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/09/16 11:02 AM",
      "commitNameOld": "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 36.09,
      "commitsBetweenForRepo": 241,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     if (c \u003d\u003d null) {\n       return null;\n     }\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n+    Text kind \u003d scheme.equals(\"http\")\n+        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n         : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n     t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    if (c \u003d\u003d null) {\n      return null;\n    }\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d scheme.equals(\"http\")\n        ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "5c97db07fb306842f49d73a67a90cecec19a7833": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8169. Move LocatedBlocks and related classes to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "20/04/15 12:36 AM",
      "commitName": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "05/02/15 7:45 AM",
      "commitNameOld": "03f7ed382b2c06f075811b29096d5bf79f26a5e5",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 73.66,
      "commitsBetweenForRepo": 661,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     if (c \u003d\u003d null) {\n       return null;\n     }\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsFileSystem.TOKEN_KIND\n-        : SWebHdfsFileSystem.TOKEN_KIND;\n+    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n+        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n     t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    if (c \u003d\u003d null) {\n      return null;\n    }\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsConstants.WEBHDFS_TOKEN_KIND\n        : WebHdfsConstants.SWEBHDFS_TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "bbff44cb03d0150f990acc3b77170893241cc282": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6776. Using distcp to copy data between insecure and secure cluster via webdhfs doesn\u0027t work. (yzhangal via tucu)\n",
      "commitDate": "09/09/14 10:16 PM",
      "commitName": "bbff44cb03d0150f990acc3b77170893241cc282",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "30/07/14 10:49 AM",
      "commitNameOld": "535fe14dedbf919442ec03ac573315c7a16a6dbe",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 41.48,
      "commitsBetweenForRepo": 331,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n+    if (c \u003d\u003d null) {\n+      return null;\n+    }\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsFileSystem.TOKEN_KIND\n         : SWebHdfsFileSystem.TOKEN_KIND;\n     t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    if (c \u003d\u003d null) {\n      return null;\n    }\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsFileSystem.TOKEN_KIND\n        : SWebHdfsFileSystem.TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3987. Support webhdfs over HTTPS. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543962 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/11/13 1:51 PM",
      "commitName": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "02/04/13 12:11 PM",
      "commitNameOld": "8293e225657a09b9352539d07ced67008976816a",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 232.11,
      "commitsBetweenForRepo": 1460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n+    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsFileSystem.TOKEN_KIND : SWebHdfsFileSystem.TOKEN_KIND;\n+    t.setKind(kind);\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    Text kind \u003d request.getScheme().equals(\"http\") ? WebHdfsFileSystem.TOKEN_KIND : SWebHdfsFileSystem.TOKEN_KIND;\n    t.setKind(kind);\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "a549d6fa2c103965d1bd3cfbfdf2ce08533eb4a4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4571. WebHDFS should not set the service hostname on the server side. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454475 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/13 9:23 AM",
      "commitName": "a549d6fa2c103965d1bd3cfbfdf2ce08533eb4a4",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "29/01/13 10:51 PM",
      "commitNameOld": "481b6cccf0493cb3f740b119552bede0f7268121",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 37.44,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n-    SecurityUtil.setTokenService(t, namenode.getHttpAddress());\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "a590b498acf1a424ffbb3a9d8849c0abb409366d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2528. Webhdfs: set delegation kind to WEBHDFS and add a HDFS token when http requests are redirected to datanode.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1198903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/11/11 12:05 PM",
      "commitName": "a590b498acf1a424ffbb3a9d8849c0abb409366d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "03/11/11 3:34 PM",
      "commitNameOld": "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.9,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n-    SecurityUtil.setTokenService(t, namenode.getNameNodeAddress());\n+    SecurityUtil.setTokenService(t, namenode.getHttpAddress());\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n    SecurityUtil.setTokenService(t, namenode.getHttpAddress());\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2527. WebHdfs: remove the use of \"Range\" header in Open; use ugi username if renewer parameter is null in GetDelegationToken; response OK when setting replication for non-files; rename GETFILEBLOCKLOCATIONS to GET_BLOCK_LOCATIONS and state that it is a private unstable API; replace isDirectory and isSymlink with enum {FILE, DIRECTORY, SYMLINK} in HdfsFileStatus JSON object. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1197329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/11/11 3:34 PM",
      "commitName": "6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "02/11/11 11:54 PM",
      "commitNameOld": "40fe96546fcd68696076db67053f30d38a39a0d5",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n-        namenode, ugi,\n-        renewer !\u003d null? renewer: request.getUserPrincipal().getName());\n+        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n     SecurityUtil.setTokenService(t, namenode.getNameNodeAddress());\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, renewer !\u003d null? renewer: ugi.getShortUserName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n    SecurityUtil.setTokenService(t, namenode.getNameNodeAddress());\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "32cad9affe159ff7c6e4c7e31f57174967ef210a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 1:37 PM",
      "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "27/10/11 4:13 PM",
      "commitNameOld": "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n         namenode, ugi,\n         renewer !\u003d null? renewer: request.getUserPrincipal().getName());\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n-    t.setService(new Text(SecurityUtil.buildDTServiceName(\n-        NameNode.getUri(namenode.getNameNodeAddress()),\n-        NameNode.DEFAULT_PORT)));\n+    t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n+    SecurityUtil.setTokenService(t, namenode.getNameNodeAddress());\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi,\n        renewer !\u003d null? renewer: request.getUserPrincipal().getName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    t.setKind(WebHdfsFileSystem.TOKEN_KIND);\n    SecurityUtil.setTokenService(t, namenode.getNameNodeAddress());\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "a2d7287873685249c2ceeda49f9feadfb307f5c2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2403. NamenodeWebHdfsMethods.generateDelegationToken(..) does not use the renewer parameter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/10/11 2:17 PM",
      "commitName": "a2d7287873685249c2ceeda49f9feadfb307f5c2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "05/10/11 4:29 AM",
      "commitNameOld": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.41,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n       final NameNode namenode, final UserGroupInformation ugi,\n       final String renewer) throws IOException {\n     final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n-        namenode, ugi, request.getUserPrincipal().getName());\n+        namenode, ugi,\n+        renewer !\u003d null? renewer: request.getUserPrincipal().getName());\n     final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n     t.setService(new Text(SecurityUtil.buildDTServiceName(\n         NameNode.getUri(namenode.getNameNodeAddress()),\n         NameNode.DEFAULT_PORT)));\n     return t;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi,\n        renewer !\u003d null? renewer: request.getUserPrincipal().getName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    t.setService(new Text(SecurityUtil.buildDTServiceName(\n        NameNode.getUri(namenode.getNameNodeAddress()),\n        NameNode.DEFAULT_PORT)));\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "78e3821b819b441d1faf4bc66c659cdeddc6006c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2318. Provide authentication to webhdfs using SPNEGO and delegation tokens.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1171611 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/09/11 8:02 AM",
      "commitName": "78e3821b819b441d1faf4bc66c659cdeddc6006c",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,11 @@\n+  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n+      final NameNode namenode, final UserGroupInformation ugi,\n+      final String renewer) throws IOException {\n+    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n+        namenode, ugi, request.getUserPrincipal().getName());\n+    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n+    t.setService(new Text(SecurityUtil.buildDTServiceName(\n+        NameNode.getUri(namenode.getNameNodeAddress()),\n+        NameNode.DEFAULT_PORT)));\n+    return t;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c? extends TokenIdentifier\u003e generateDelegationToken(\n      final NameNode namenode, final UserGroupInformation ugi,\n      final String renewer) throws IOException {\n    final Credentials c \u003d DelegationTokenSecretManager.createCredentials(\n        namenode, ugi, request.getUserPrincipal().getName());\n    final Token\u003c? extends TokenIdentifier\u003e t \u003d c.getAllTokens().iterator().next();\n    t.setService(new Text(SecurityUtil.buildDTServiceName(\n        NameNode.getUri(namenode.getNameNodeAddress()),\n        NameNode.DEFAULT_PORT)));\n    return t;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java"
    }
  }
}