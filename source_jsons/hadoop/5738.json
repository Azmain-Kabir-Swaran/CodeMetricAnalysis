{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirMkdirOp.java",
  "functionName": "unprotectedMkdir",
  "functionId": "unprotectedMkdir___fsd-FSDirectory__inodeId-long__parent-INodesInPath__name-byte[]__permission-PermissionStatus__aclEntries-List__AclEntry____timestamp-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
  "functionStartLine": 211,
  "functionEndLine": 230,
  "numCommitsSeen": 370,
  "timeTaken": 9395,
  "changeHistory": [
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "185e0c7b4c056b88f606362c71e4a22aae7076e0",
    "02f3ff33876752f0cce0d91eef62a4d564e11072",
    "c89c516b95f45e04af55d9030043a42e2d07b02b"
  ],
  "changeHistoryShort": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": "Ybodychange",
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "185e0c7b4c056b88f606362c71e4a22aae7076e0": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "02f3ff33876752f0cce0d91eef62a4d564e11072": "Ymodifierchange",
    "c89c516b95f45e04af55d9030043a42e2d07b02b": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6962. ACL inheritance conflicts with umaskmode. Contributed by Chris Nauroth.\n",
      "commitDate": "06/09/16 11:02 AM",
      "commitName": "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "26/08/16 1:39 PM",
      "commitNameOld": "8b7adf4ddf420a93c586c4b2eac27dd0f649682e",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 10.89,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n       INodesInPath parent, byte[] name, PermissionStatus permission,\n       List\u003cAclEntry\u003e aclEntries, long timestamp)\n       throws QuotaExceededException, AclException, FileAlreadyExistsException {\n     assert fsd.hasWriteLock();\n     assert parent.getLastINode() !\u003d null;\n     if (!parent.getLastINode().isDirectory()) {\n       throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n           parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n     }\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n \n-    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n+    INodesInPath iip \u003d\n+        fsd.addLastINode(parent, dir, permission.getPermission(), true);\n     if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n       AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n     }\n     return iip;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n      INodesInPath parent, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n    assert fsd.hasWriteLock();\n    assert parent.getLastINode() !\u003d null;\n    if (!parent.getLastINode().isDirectory()) {\n      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n    }\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n\n    INodesInPath iip \u003d\n        fsd.addLastINode(parent, dir, permission.getPermission(), true);\n    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n    }\n    return iip;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
      "extendedDetails": {}
    },
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7484. Make FSDirectory#addINode take existing INodes as its parameter. Contributed by Jing Zhao.\n",
      "commitDate": "22/12/14 11:19 PM",
      "commitName": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7484. Make FSDirectory#addINode take existing INodes as its parameter. Contributed by Jing Zhao.\n",
          "commitDate": "22/12/14 11:19 PM",
          "commitName": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "18/12/14 11:25 AM",
          "commitNameOld": "65f2a4ee600dfffa5203450261da3c1989de25a9",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 4.5,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n-  private static INodesInPath unprotectedMkdir(\n-      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n-      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n-      long timestamp)\n-      throws QuotaExceededException, AclException {\n+  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n+      INodesInPath parent, byte[] name, PermissionStatus permission,\n+      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n     assert fsd.hasWriteLock();\n+    assert parent.getLastINode() !\u003d null;\n+    if (!parent.getLastINode().isDirectory()) {\n+      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n+          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n+    }\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n-      if (aclEntries !\u003d null) {\n-        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n-      }\n-      return INodesInPath.replace(inodesInPath, pos, dir);\n-    } else {\n-      return inodesInPath;\n+\n+    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n+    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n+      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n     }\n+    return iip;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n      INodesInPath parent, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n    assert fsd.hasWriteLock();\n    assert parent.getLastINode() !\u003d null;\n    if (!parent.getLastINode().isDirectory()) {\n      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n    }\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n\n    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n    }\n    return iip;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, inodeId-long, inodesInPath-INodesInPath, pos-int, name-byte[], permission-PermissionStatus, aclEntries-List\u003cAclEntry\u003e, timestamp-long]",
            "newValue": "[fsd-FSDirectory, inodeId-long, parent-INodesInPath, name-byte[], permission-PermissionStatus, aclEntries-List\u003cAclEntry\u003e, timestamp-long]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7484. Make FSDirectory#addINode take existing INodes as its parameter. Contributed by Jing Zhao.\n",
          "commitDate": "22/12/14 11:19 PM",
          "commitName": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "18/12/14 11:25 AM",
          "commitNameOld": "65f2a4ee600dfffa5203450261da3c1989de25a9",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 4.5,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n-  private static INodesInPath unprotectedMkdir(\n-      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n-      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n-      long timestamp)\n-      throws QuotaExceededException, AclException {\n+  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n+      INodesInPath parent, byte[] name, PermissionStatus permission,\n+      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n     assert fsd.hasWriteLock();\n+    assert parent.getLastINode() !\u003d null;\n+    if (!parent.getLastINode().isDirectory()) {\n+      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n+          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n+    }\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n-      if (aclEntries !\u003d null) {\n-        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n-      }\n-      return INodesInPath.replace(inodesInPath, pos, dir);\n-    } else {\n-      return inodesInPath;\n+\n+    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n+    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n+      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n     }\n+    return iip;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n      INodesInPath parent, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n    assert fsd.hasWriteLock();\n    assert parent.getLastINode() !\u003d null;\n    if (!parent.getLastINode().isDirectory()) {\n      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n    }\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n\n    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n    }\n    return iip;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException, AclException]",
            "newValue": "[QuotaExceededException, AclException, FileAlreadyExistsException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7484. Make FSDirectory#addINode take existing INodes as its parameter. Contributed by Jing Zhao.\n",
          "commitDate": "22/12/14 11:19 PM",
          "commitName": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "18/12/14 11:25 AM",
          "commitNameOld": "65f2a4ee600dfffa5203450261da3c1989de25a9",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 4.5,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n-  private static INodesInPath unprotectedMkdir(\n-      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n-      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n-      long timestamp)\n-      throws QuotaExceededException, AclException {\n+  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n+      INodesInPath parent, byte[] name, PermissionStatus permission,\n+      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n     assert fsd.hasWriteLock();\n+    assert parent.getLastINode() !\u003d null;\n+    if (!parent.getLastINode().isDirectory()) {\n+      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n+          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n+    }\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n-      if (aclEntries !\u003d null) {\n-        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n-      }\n-      return INodesInPath.replace(inodesInPath, pos, dir);\n-    } else {\n-      return inodesInPath;\n+\n+    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n+    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n+      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n     }\n+    return iip;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath unprotectedMkdir(FSDirectory fsd, long inodeId,\n      INodesInPath parent, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException, FileAlreadyExistsException {\n    assert fsd.hasWriteLock();\n    assert parent.getLastINode() !\u003d null;\n    if (!parent.getLastINode().isDirectory()) {\n      throw new FileAlreadyExistsException(\"Parent path is not a directory: \" +\n          parent.getPath() + \" \" + DFSUtil.bytes2String(name));\n    }\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n\n    INodesInPath iip \u003d fsd.addLastINode(parent, dir, true);\n    if (iip !\u003d null \u0026\u0026 aclEntries !\u003d null) {\n      AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n    }\n    return iip;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-  private static void unprotectedMkdir(\n+  private static INodesInPath unprotectedMkdir(\n       FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n       byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n       long timestamp)\n       throws QuotaExceededException, AclException {\n     assert fsd.hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n     if (fsd.addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n-      inodesInPath.setINode(pos, dir);\n+      return INodesInPath.replace(inodesInPath, pos, dir);\n+    } else {\n+      return inodesInPath;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath unprotectedMkdir(\n      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n      long timestamp)\n      throws QuotaExceededException, AclException {\n    assert fsd.hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      return INodesInPath.replace(inodesInPath, pos, dir);\n    } else {\n      return inodesInPath;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "INodesInPath"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-  private static void unprotectedMkdir(\n+  private static INodesInPath unprotectedMkdir(\n       FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n       byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n       long timestamp)\n       throws QuotaExceededException, AclException {\n     assert fsd.hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n     if (fsd.addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n-      inodesInPath.setINode(pos, dir);\n+      return INodesInPath.replace(inodesInPath, pos, dir);\n+    } else {\n+      return inodesInPath;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath unprotectedMkdir(\n      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n      long timestamp)\n      throws QuotaExceededException, AclException {\n    assert fsd.hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      return INodesInPath.replace(inodesInPath, pos, dir);\n    } else {\n      return inodesInPath;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "185e0c7b4c056b88f606362c71e4a22aae7076e0": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-7462. Consolidate implementation of mkdirs() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "02/12/14 2:53 PM",
      "commitName": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7462. Consolidate implementation of mkdirs() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "02/12/14 2:53 PM",
          "commitName": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/12/14 10:54 AM",
          "commitNameOld": "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission,\n-      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+  private static void unprotectedMkdir(\n+      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n+      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n+      long timestamp)\n       throws QuotaExceededException, AclException {\n-    assert hasWriteLock();\n+    assert fsd.hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (addChild(inodesInPath, pos, dir, true)) {\n+    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void unprotectedMkdir(\n      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n      long timestamp)\n      throws QuotaExceededException, AclException {\n    assert fsd.hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
            "oldMethodName": "unprotectedMkdir",
            "newMethodName": "unprotectedMkdir"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7462. Consolidate implementation of mkdirs() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "02/12/14 2:53 PM",
          "commitName": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/12/14 10:54 AM",
          "commitNameOld": "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission,\n-      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+  private static void unprotectedMkdir(\n+      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n+      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n+      long timestamp)\n       throws QuotaExceededException, AclException {\n-    assert hasWriteLock();\n+    assert fsd.hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (addChild(inodesInPath, pos, dir, true)) {\n+    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void unprotectedMkdir(\n      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n      long timestamp)\n      throws QuotaExceededException, AclException {\n    assert fsd.hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7462. Consolidate implementation of mkdirs() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "02/12/14 2:53 PM",
          "commitName": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/12/14 10:54 AM",
          "commitNameOld": "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission,\n-      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+  private static void unprotectedMkdir(\n+      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n+      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n+      long timestamp)\n       throws QuotaExceededException, AclException {\n-    assert hasWriteLock();\n+    assert fsd.hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (addChild(inodesInPath, pos, dir, true)) {\n+    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void unprotectedMkdir(\n      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n      long timestamp)\n      throws QuotaExceededException, AclException {\n    assert fsd.hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7462. Consolidate implementation of mkdirs() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "02/12/14 2:53 PM",
          "commitName": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/12/14 10:54 AM",
          "commitNameOld": "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission,\n-      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+  private static void unprotectedMkdir(\n+      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n+      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n+      long timestamp)\n       throws QuotaExceededException, AclException {\n-    assert hasWriteLock();\n+    assert fsd.hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n-    if (addChild(inodesInPath, pos, dir, true)) {\n+    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void unprotectedMkdir(\n      FSDirectory fsd, long inodeId, INodesInPath inodesInPath, int pos,\n      byte[] name, PermissionStatus permission, List\u003cAclEntry\u003e aclEntries,\n      long timestamp)\n      throws QuotaExceededException, AclException {\n    assert fsd.hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (fsd.addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "[inodeId-long, inodesInPath-INodesInPath, pos-int, name-byte[], permission-PermissionStatus, aclEntries-List\u003cAclEntry\u003e, timestamp-long]",
            "newValue": "[fsd-FSDirectory, inodeId-long, inodesInPath-INodesInPath, pos-int, name-byte[], permission-PermissionStatus, aclEntries-List\u003cAclEntry\u003e, timestamp-long]"
          }
        }
      ]
    },
    "02f3ff33876752f0cce0d91eef62a4d564e11072": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6330. Move mkdirs() to FSNamesystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602484 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/14 11:04 AM",
      "commitName": "02f3ff33876752f0cce0d91eef62a4d564e11072",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "12/06/14 1:55 PM",
      "commitNameOld": "befa4bb1edb9687cc625e1a823148781f7de8257",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n+  void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n       int pos, byte[] name, PermissionStatus permission,\n       List\u003cAclEntry\u003e aclEntries, long timestamp)\n       throws QuotaExceededException, AclException {\n     assert hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n     if (addChild(inodesInPath, pos, dir, true)) {\n       if (aclEntries !\u003d null) {\n         AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n       }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n      int pos, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException {\n    assert hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "c89c516b95f45e04af55d9030043a42e2d07b02b": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-5616. NameNode: implement default ACL handling. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1565845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/14 3:11 PM",
      "commitName": "c89c516b95f45e04af55d9030043a42e2d07b02b",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5616. NameNode: implement default ACL handling. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1565845 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/02/14 3:11 PM",
          "commitName": "c89c516b95f45e04af55d9030043a42e2d07b02b",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "31/01/14 2:21 PM",
          "commitNameOld": "14f1f76bf609704d36a1699c05fa85750cefe917",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 7.03,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n   private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission, long timestamp)\n-      throws QuotaExceededException {\n+      int pos, byte[] name, PermissionStatus permission,\n+      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, AclException {\n     assert hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n     if (addChild(inodesInPath, pos, dir, true)) {\n+      if (aclEntries !\u003d null) {\n+        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n+      }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n      int pos, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException {\n    assert hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[inodeId-long, inodesInPath-INodesInPath, pos-int, name-byte[], permission-PermissionStatus, timestamp-long]",
            "newValue": "[inodeId-long, inodesInPath-INodesInPath, pos-int, name-byte[], permission-PermissionStatus, aclEntries-List\u003cAclEntry\u003e, timestamp-long]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5616. NameNode: implement default ACL handling. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1565845 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/02/14 3:11 PM",
          "commitName": "c89c516b95f45e04af55d9030043a42e2d07b02b",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "31/01/14 2:21 PM",
          "commitNameOld": "14f1f76bf609704d36a1699c05fa85750cefe917",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 7.03,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n   private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission, long timestamp)\n-      throws QuotaExceededException {\n+      int pos, byte[] name, PermissionStatus permission,\n+      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, AclException {\n     assert hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n     if (addChild(inodesInPath, pos, dir, true)) {\n+      if (aclEntries !\u003d null) {\n+        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n+      }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n      int pos, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException {\n    assert hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException]",
            "newValue": "[QuotaExceededException, AclException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5616. NameNode: implement default ACL handling. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1565845 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/02/14 3:11 PM",
          "commitName": "c89c516b95f45e04af55d9030043a42e2d07b02b",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "31/01/14 2:21 PM",
          "commitNameOld": "14f1f76bf609704d36a1699c05fa85750cefe917",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 7.03,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n   private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n-      int pos, byte[] name, PermissionStatus permission, long timestamp)\n-      throws QuotaExceededException {\n+      int pos, byte[] name, PermissionStatus permission,\n+      List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, AclException {\n     assert hasWriteLock();\n     final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n         timestamp);\n     if (addChild(inodesInPath, pos, dir, true)) {\n+      if (aclEntries !\u003d null) {\n+        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n+      }\n       inodesInPath.setINode(pos, dir);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void unprotectedMkdir(long inodeId, INodesInPath inodesInPath,\n      int pos, byte[] name, PermissionStatus permission,\n      List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, AclException {\n    assert hasWriteLock();\n    final INodeDirectory dir \u003d new INodeDirectory(inodeId, name, permission,\n        timestamp);\n    if (addChild(inodesInPath, pos, dir, true)) {\n      if (aclEntries !\u003d null) {\n        AclStorage.updateINodeAcl(dir, aclEntries, Snapshot.CURRENT_STATE_ID);\n      }\n      inodesInPath.setINode(pos, dir);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}