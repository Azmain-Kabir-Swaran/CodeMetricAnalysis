{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProxyUsers.java",
  "functionName": "refreshSuperUserGroupsConfiguration",
  "functionId": "refreshSuperUserGroupsConfiguration___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
  "functionStartLine": 84,
  "functionEndLine": 86,
  "numCommitsSeen": 23,
  "timeTaken": 2327,
  "changeHistory": [
    "64ed72a047a1ff20e07aaf18ebdb5f5d29569829",
    "4a4868e52360d7543909a7981b4606db939230ea",
    "00779999721a8ff87a97f274646ab0bc33e0a557",
    "1ff694081f28e1aadd955af79ac660bfd1c151e0",
    "bf7b2125739ab0ecc896f93af66e2f7a639ec94b",
    "e908bbe807faa1c31ccbbefae0860525525b8d9f",
    "ec23bf46e4e3657ab9303df869145c896c2a1236",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "8970e93b01c88bd4d489cb8e4f915d47f2adee86",
    "9e2c3bf9ed2014d5be67c5c670fcfdb594046318"
  ],
  "changeHistoryShort": {
    "64ed72a047a1ff20e07aaf18ebdb5f5d29569829": "Ybodychange",
    "4a4868e52360d7543909a7981b4606db939230ea": "Ymultichange(Ymodifierchange,Ybodychange)",
    "00779999721a8ff87a97f274646ab0bc33e0a557": "Ybodychange",
    "1ff694081f28e1aadd955af79ac660bfd1c151e0": "Ybodychange",
    "bf7b2125739ab0ecc896f93af66e2f7a639ec94b": "Ybodychange",
    "e908bbe807faa1c31ccbbefae0860525525b8d9f": "Ybodychange",
    "ec23bf46e4e3657ab9303df869145c896c2a1236": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "8970e93b01c88bd4d489cb8e4f915d47f2adee86": "Ymultichange(Yparameterchange,Ybodychange)",
    "9e2c3bf9ed2014d5be67c5c670fcfdb594046318": "Yintroduced"
  },
  "changeHistoryDetails": {
    "64ed72a047a1ff20e07aaf18ebdb5f5d29569829": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10817. ProxyUsers configuration should support configurable prefixes. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611780 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 12:42 PM",
      "commitName": "64ed72a047a1ff20e07aaf18ebdb5f5d29569829",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "29/05/14 1:52 PM",
      "commitNameOld": "4a4868e52360d7543909a7981b4606db939230ea",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 49.95,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,3 @@\n-  public static void refreshSuperUserGroupsConfiguration(Configuration conf) { \n-    // sip is volatile. Any assignment to it as well as the object\u0027s state\n-    // will be visible to all the other threads. \n-    sip \u003d getInstance(conf);\n-    ProxyServers.refresh(conf);\n+  public static void refreshSuperUserGroupsConfiguration(Configuration conf) {\n+    refreshSuperUserGroupsConfiguration(conf, CONF_HADOOP_PROXYUSER);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    refreshSuperUserGroupsConfiguration(conf, CONF_HADOOP_PROXYUSER);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {}
    },
    "4a4868e52360d7543909a7981b4606db939230ea": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10448. Support pluggable mechanism to specify proxy user settings (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598396 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/14 1:52 PM",
      "commitName": "4a4868e52360d7543909a7981b4606db939230ea",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10448. Support pluggable mechanism to specify proxy user settings (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598396 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/05/14 1:52 PM",
          "commitName": "4a4868e52360d7543909a7981b4606db939230ea",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "13/05/14 9:53 AM",
          "commitNameOld": "00779999721a8ff87a97f274646ab0bc33e0a557",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 16.17,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,6 @@\n-  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n-    \n-    // remove all existing stuff\n-    proxyGroups.clear();\n-    proxyHosts.clear();\n-    proxyUsers.clear();\n-    \n-    // get all the new keys for users\n-    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n-    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n-        Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n-        proxyUsers.put(entry.getKey(), users);\n-      }\n-\n-    // get all the new keys for groups\n-    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n-    allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n-      proxyGroups.put(entry.getKey(), groups );\n-      //cache the groups. This is needed for NetGroups\n-      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n-          new ArrayList\u003cString\u003e(groups));\n-    }\n-\n-    // now hosts\n-    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n-    allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      proxyHosts.put(entry.getKey(),\n-          StringUtils.getTrimmedStringCollection(entry.getValue()));\n-    }\n-    init \u003d true;\n+  public static void refreshSuperUserGroupsConfiguration(Configuration conf) { \n+    // sip is volatile. Any assignment to it as well as the object\u0027s state\n+    // will be visible to all the other threads. \n+    sip \u003d getInstance(conf);\n     ProxyServers.refresh(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void refreshSuperUserGroupsConfiguration(Configuration conf) { \n    // sip is volatile. Any assignment to it as well as the object\u0027s state\n    // will be visible to all the other threads. \n    sip \u003d getInstance(conf);\n    ProxyServers.refresh(conf);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
          "extendedDetails": {
            "oldValue": "[public, static, synchronized]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10448. Support pluggable mechanism to specify proxy user settings (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598396 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/05/14 1:52 PM",
          "commitName": "4a4868e52360d7543909a7981b4606db939230ea",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "13/05/14 9:53 AM",
          "commitNameOld": "00779999721a8ff87a97f274646ab0bc33e0a557",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 16.17,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,6 @@\n-  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n-    \n-    // remove all existing stuff\n-    proxyGroups.clear();\n-    proxyHosts.clear();\n-    proxyUsers.clear();\n-    \n-    // get all the new keys for users\n-    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n-    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n-        Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n-        proxyUsers.put(entry.getKey(), users);\n-      }\n-\n-    // get all the new keys for groups\n-    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n-    allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n-      proxyGroups.put(entry.getKey(), groups );\n-      //cache the groups. This is needed for NetGroups\n-      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n-          new ArrayList\u003cString\u003e(groups));\n-    }\n-\n-    // now hosts\n-    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n-    allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      proxyHosts.put(entry.getKey(),\n-          StringUtils.getTrimmedStringCollection(entry.getValue()));\n-    }\n-    init \u003d true;\n+  public static void refreshSuperUserGroupsConfiguration(Configuration conf) { \n+    // sip is volatile. Any assignment to it as well as the object\u0027s state\n+    // will be visible to all the other threads. \n+    sip \u003d getInstance(conf);\n     ProxyServers.refresh(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void refreshSuperUserGroupsConfiguration(Configuration conf) { \n    // sip is volatile. Any assignment to it as well as the object\u0027s state\n    // will be visible to all the other threads. \n    sip \u003d getInstance(conf);\n    ProxyServers.refresh(conf);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
          "extendedDetails": {}
        }
      ]
    },
    "00779999721a8ff87a97f274646ab0bc33e0a557": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10566. Refactor proxyservers out of ProxyUsers. Contributed by Benoy Antony.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594280 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 9:53 AM",
      "commitName": "00779999721a8ff87a97f274646ab0bc33e0a557",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/05/14 5:45 PM",
      "commitNameOld": "1ff694081f28e1aadd955af79ac660bfd1c151e0",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 5.67,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,36 @@\n   public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n     \n     // remove all existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n     proxyUsers.clear();\n-    proxyServers.clear();\n     \n     // get all the new keys for users\n     String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n     Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n         Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n         proxyUsers.put(entry.getKey(), users);\n       }\n \n     // get all the new keys for groups\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n       proxyGroups.put(entry.getKey(), groups );\n       //cache the groups. This is needed for NetGroups\n       Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n           new ArrayList\u003cString\u003e(groups));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getTrimmedStringCollection(entry.getValue()));\n     }\n-    \n-    // trusted proxy servers such as http proxies\n-    for (String host : conf.getTrimmedStrings(CONF_HADOOP_PROXYSERVERS)) {\n-      InetSocketAddress addr \u003d new InetSocketAddress(host, 0);\n-      if (!addr.isUnresolved()) {\n-        proxyServers.add(addr.getAddress().getHostAddress());\n-      }\n-    }\n     init \u003d true;\n+    ProxyServers.refresh(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove all existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n    proxyUsers.clear();\n    \n    // get all the new keys for users\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n        Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n        proxyUsers.put(entry.getKey(), users);\n      }\n\n    // get all the new keys for groups\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n      proxyGroups.put(entry.getKey(), groups );\n      //cache the groups. This is needed for NetGroups\n      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n          new ArrayList\u003cString\u003e(groups));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getTrimmedStringCollection(entry.getValue()));\n    }\n    init \u003d true;\n    ProxyServers.refresh(conf);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {}
    },
    "1ff694081f28e1aadd955af79ac660bfd1c151e0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10467. Enable proxyuser specification to support list of users in addition to list of groups. (Contributed bt Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593162 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/05/14 5:45 PM",
      "commitName": "1ff694081f28e1aadd955af79ac660bfd1c151e0",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/05/14 3:38 PM",
      "commitNameOld": "2d5362073c61154280b7cd3ac082516113e703f2",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,44 @@\n   public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n     \n     // remove all existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n+    proxyUsers.clear();\n     proxyServers.clear();\n+    \n+    // get all the new keys for users\n+    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n+    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n+    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n+        Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n+        proxyUsers.put(entry.getKey(), users);\n+      }\n \n     // get all the new keys for groups\n-    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n-    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n+    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n+    allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n       proxyGroups.put(entry.getKey(), groups );\n       //cache the groups. This is needed for NetGroups\n       Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n           new ArrayList\u003cString\u003e(groups));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getTrimmedStringCollection(entry.getValue()));\n     }\n     \n     // trusted proxy servers such as http proxies\n     for (String host : conf.getTrimmedStrings(CONF_HADOOP_PROXYSERVERS)) {\n       InetSocketAddress addr \u003d new InetSocketAddress(host, 0);\n       if (!addr.isUnresolved()) {\n         proxyServers.add(addr.getAddress().getHostAddress());\n       }\n     }\n     init \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove all existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n    proxyUsers.clear();\n    proxyServers.clear();\n    \n    // get all the new keys for users\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n        Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n        proxyUsers.put(entry.getKey(), users);\n      }\n\n    // get all the new keys for groups\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n      proxyGroups.put(entry.getKey(), groups );\n      //cache the groups. This is needed for NetGroups\n      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n          new ArrayList\u003cString\u003e(groups));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getTrimmedStringCollection(entry.getValue()));\n    }\n    \n    // trusted proxy servers such as http proxies\n    for (String host : conf.getTrimmedStrings(CONF_HADOOP_PROXYSERVERS)) {\n      InetSocketAddress addr \u003d new InetSocketAddress(host, 0);\n      if (!addr.isUnresolved()) {\n        proxyServers.add(addr.getAddress().getHostAddress());\n      }\n    }\n    init \u003d true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {}
    },
    "bf7b2125739ab0ecc896f93af66e2f7a639ec94b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10498. Add support for proxy server. (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1587608 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/04/14 8:25 AM",
      "commitName": "bf7b2125739ab0ecc896f93af66e2f7a639ec94b",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "31/03/14 1:42 PM",
      "commitNameOld": "e908bbe807faa1c31ccbbefae0860525525b8d9f",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 14.78,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,35 @@\n   public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n     \n-    // remove alle existing stuff\n+    // remove all existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n+    proxyServers.clear();\n \n     // get all the new keys for groups\n     String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n     Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n       proxyGroups.put(entry.getKey(), groups );\n       //cache the groups. This is needed for NetGroups\n       Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n           new ArrayList\u003cString\u003e(groups));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getTrimmedStringCollection(entry.getValue()));\n     }\n     \n+    // trusted proxy servers such as http proxies\n+    for (String host : conf.getTrimmedStrings(CONF_HADOOP_PROXYSERVERS)) {\n+      InetSocketAddress addr \u003d new InetSocketAddress(host, 0);\n+      if (!addr.isUnresolved()) {\n+        proxyServers.add(addr.getAddress().getHostAddress());\n+      }\n+    }\n     init \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove all existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n    proxyServers.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n      proxyGroups.put(entry.getKey(), groups );\n      //cache the groups. This is needed for NetGroups\n      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n          new ArrayList\u003cString\u003e(groups));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getTrimmedStringCollection(entry.getValue()));\n    }\n    \n    // trusted proxy servers such as http proxies\n    for (String host : conf.getTrimmedStrings(CONF_HADOOP_PROXYSERVERS)) {\n      InetSocketAddress addr \u003d new InetSocketAddress(host, 0);\n      if (!addr.isUnresolved()) {\n        proxyServers.add(addr.getAddress().getHostAddress());\n      }\n    }\n    init \u003d true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {}
    },
    "e908bbe807faa1c31ccbbefae0860525525b8d9f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10345. Sanitize the the inputs (groups and hosts) for the proxyuser configuration. Contributed by Benoy Antony.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1583454 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/03/14 1:42 PM",
      "commitName": "e908bbe807faa1c31ccbbefae0860525525b8d9f",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "22/02/14 2:16 PM",
      "commitNameOld": "ec23bf46e4e3657ab9303df869145c896c2a1236",
      "commitAuthorOld": "Devaraj Das",
      "daysBetweenCommits": 36.93,
      "commitsBetweenForRepo": 313,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n     \n     // remove alle existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n \n     // get all the new keys for groups\n     String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n     Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      Collection\u003cString\u003e groups \u003d StringUtils.getStringCollection(entry.getValue());\n+      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n       proxyGroups.put(entry.getKey(), groups );\n       //cache the groups. This is needed for NetGroups\n       Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n           new ArrayList\u003cString\u003e(groups));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n-          StringUtils.getStringCollection(entry.getValue()));\n+          StringUtils.getTrimmedStringCollection(entry.getValue()));\n     }\n     \n     init \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n      proxyGroups.put(entry.getKey(), groups );\n      //cache the groups. This is needed for NetGroups\n      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n          new ArrayList\u003cString\u003e(groups));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getTrimmedStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {}
    },
    "ec23bf46e4e3657ab9303df869145c896c2a1236": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9968. Makes ProxyUsers to work with NetGroups. Contributed by Benoy Antony.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570934 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 2:16 PM",
      "commitName": "ec23bf46e4e3657ab9303df869145c896c2a1236",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "03/02/14 2:10 PM",
      "commitNameOld": "24fa232707b56f6ccc88a460dc0d708d35a28ff4",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.0,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n     \n     // remove alle existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n \n     // get all the new keys for groups\n     String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n     Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      proxyGroups.put(entry.getKey(), \n-          StringUtils.getStringCollection(entry.getValue()));\n+      Collection\u003cString\u003e groups \u003d StringUtils.getStringCollection(entry.getValue());\n+      proxyGroups.put(entry.getKey(), groups );\n+      //cache the groups. This is needed for NetGroups\n+      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n+          new ArrayList\u003cString\u003e(groups));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getStringCollection(entry.getValue()));\n     }\n     \n     init \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      Collection\u003cString\u003e groups \u003d StringUtils.getStringCollection(entry.getValue());\n      proxyGroups.put(entry.getKey(), groups );\n      //cache the groups. This is needed for NetGroups\n      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n          new ArrayList\u003cString\u003e(groups));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyGroups.put(entry.getKey(), \n          StringUtils.getStringCollection(entry.getValue()));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyGroups.put(entry.getKey(), \n          StringUtils.getStringCollection(entry.getValue()));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/authorize/ProxyUsers.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyGroups.put(entry.getKey(), \n          StringUtils.getStringCollection(entry.getValue()));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
      "path": "common/src/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
        "newPath": "common/src/java/org/apache/hadoop/security/authorize/ProxyUsers.java"
      }
    },
    "8970e93b01c88bd4d489cb8e4f915d47f2adee86": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-6815. refreshSuperUserGroupsConfiguration should use server side configuration for the refresh\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@957074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/06/10 4:04 PM",
      "commitName": "8970e93b01c88bd4d489cb8e4f915d47f2adee86",
      "commitAuthor": "Boris Shkolnik",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-6815. refreshSuperUserGroupsConfiguration should use server side configuration for the refresh\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@957074 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/06/10 4:04 PM",
          "commitName": "8970e93b01c88bd4d489cb8e4f915d47f2adee86",
          "commitAuthor": "Boris Shkolnik",
          "commitDateOld": "03/06/10 10:32 AM",
          "commitNameOld": "9e2c3bf9ed2014d5be67c5c670fcfdb594046318",
          "commitAuthorOld": "Boris Shkolnik",
          "daysBetweenCommits": 19.23,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration cn) {\n-    conf \u003d cn;\n-\n+  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n+    \n     // remove alle existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n \n     // get all the new keys for groups\n     String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n     Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyGroups.put(entry.getKey(), \n           StringUtils.getStringCollection(entry.getValue()));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getStringCollection(entry.getValue()));\n     }\n+    \n+    init \u003d true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyGroups.put(entry.getKey(), \n          StringUtils.getStringCollection(entry.getValue()));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
          "path": "src/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
          "extendedDetails": {
            "oldValue": "[cn-Configuration]",
            "newValue": "[conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6815. refreshSuperUserGroupsConfiguration should use server side configuration for the refresh\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@957074 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/06/10 4:04 PM",
          "commitName": "8970e93b01c88bd4d489cb8e4f915d47f2adee86",
          "commitAuthor": "Boris Shkolnik",
          "commitDateOld": "03/06/10 10:32 AM",
          "commitNameOld": "9e2c3bf9ed2014d5be67c5c670fcfdb594046318",
          "commitAuthorOld": "Boris Shkolnik",
          "daysBetweenCommits": 19.23,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration cn) {\n-    conf \u003d cn;\n-\n+  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n+    \n     // remove alle existing stuff\n     proxyGroups.clear();\n     proxyHosts.clear();\n \n     // get all the new keys for groups\n     String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n     Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyGroups.put(entry.getKey(), \n           StringUtils.getStringCollection(entry.getValue()));\n     }\n \n     // now hosts\n     regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n     allMatchKeys \u003d conf.getValByRegex(regex);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getStringCollection(entry.getValue()));\n     }\n+    \n+    init \u003d true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration conf) {\n    \n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyGroups.put(entry.getKey(), \n          StringUtils.getStringCollection(entry.getValue()));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n    \n    init \u003d true;\n  }",
          "path": "src/java/org/apache/hadoop/security/authorize/ProxyUsers.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e2c3bf9ed2014d5be67c5c670fcfdb594046318": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6791.  Refresh for proxy superuser config\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@951081 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/10 10:32 AM",
      "commitName": "9e2c3bf9ed2014d5be67c5c670fcfdb594046318",
      "commitAuthor": "Boris Shkolnik",
      "diff": "@@ -0,0 +1,23 @@\n+  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration cn) {\n+    conf \u003d cn;\n+\n+    // remove alle existing stuff\n+    proxyGroups.clear();\n+    proxyHosts.clear();\n+\n+    // get all the new keys for groups\n+    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n+    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n+    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n+      proxyGroups.put(entry.getKey(), \n+          StringUtils.getStringCollection(entry.getValue()));\n+    }\n+\n+    // now hosts\n+    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n+    allMatchKeys \u003d conf.getValByRegex(regex);\n+    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n+      proxyHosts.put(entry.getKey(),\n+          StringUtils.getStringCollection(entry.getValue()));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized void refreshSuperUserGroupsConfiguration(Configuration cn) {\n    conf \u003d cn;\n\n    // remove alle existing stuff\n    proxyGroups.clear();\n    proxyHosts.clear();\n\n    // get all the new keys for groups\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyGroups.put(entry.getKey(), \n          StringUtils.getStringCollection(entry.getValue()));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getStringCollection(entry.getValue()));\n    }\n  }",
      "path": "src/java/org/apache/hadoop/security/authorize/ProxyUsers.java"
    }
  }
}