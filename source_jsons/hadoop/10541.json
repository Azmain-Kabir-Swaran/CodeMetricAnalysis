{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "handleRollingUpgradeStatus",
  "functionId": "handleRollingUpgradeStatus___resp-HeartbeatResponse",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 625,
  "functionEndLine": 637,
  "numCommitsSeen": 125,
  "timeTaken": 2223,
  "changeHistory": [
    "1a495fbb489c9e9a23b341a52696d10e9e272b04",
    "f949f6b54825dac61511a5761837e2fd14437239"
  ],
  "changeHistoryShort": {
    "1a495fbb489c9e9a23b341a52696d10e9e272b04": "Ybodychange",
    "f949f6b54825dac61511a5761837e2fd14437239": "Yexceptionschange"
  },
  "changeHistoryDetails": {
    "1a495fbb489c9e9a23b341a52696d10e9e272b04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7645. Rolling upgrade is restoring blocks from trash multiple times (Contributed by Vinayakumar B and Keisuke Ogiwara)\n",
      "commitDate": "30/03/15 3:25 PM",
      "commitName": "1a495fbb489c9e9a23b341a52696d10e9e272b04",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "27/03/15 7:05 AM",
      "commitNameOld": "60882ab26d49f05cbf0686944af6559f86b3417d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 3.35,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void handleRollingUpgradeStatus(HeartbeatResponse resp) throws IOException {\n     RollingUpgradeStatus rollingUpgradeStatus \u003d resp.getRollingUpdateStatus();\n     if (rollingUpgradeStatus !\u003d null \u0026\u0026\n         rollingUpgradeStatus.getBlockPoolId().compareTo(bpos.getBlockPoolId()) !\u003d 0) {\n       // Can this ever occur?\n       LOG.error(\"Invalid BlockPoolId \" +\n           rollingUpgradeStatus.getBlockPoolId() +\n           \" in HeartbeatResponse. Expected \" +\n           bpos.getBlockPoolId());\n     } else {\n-      bpos.signalRollingUpgrade(rollingUpgradeStatus !\u003d null);\n+      bpos.signalRollingUpgrade(rollingUpgradeStatus);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleRollingUpgradeStatus(HeartbeatResponse resp) throws IOException {\n    RollingUpgradeStatus rollingUpgradeStatus \u003d resp.getRollingUpdateStatus();\n    if (rollingUpgradeStatus !\u003d null \u0026\u0026\n        rollingUpgradeStatus.getBlockPoolId().compareTo(bpos.getBlockPoolId()) !\u003d 0) {\n      // Can this ever occur?\n      LOG.error(\"Invalid BlockPoolId \" +\n          rollingUpgradeStatus.getBlockPoolId() +\n          \" in HeartbeatResponse. Expected \" +\n          bpos.getBlockPoolId());\n    } else {\n      bpos.signalRollingUpgrade(rollingUpgradeStatus);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "f949f6b54825dac61511a5761837e2fd14437239": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-6981. Fix DN upgrade with layout version change. (Arpit Agarwal)\n",
      "commitDate": "08/09/14 9:20 PM",
      "commitName": "f949f6b54825dac61511a5761837e2fd14437239",
      "commitAuthor": "arp",
      "commitDateOld": "07/08/14 10:41 PM",
      "commitNameOld": "d3a2fe280775e9320181b671d5951f06837bddad",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 31.94,
      "commitsBetweenForRepo": 245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  private void handleRollingUpgradeStatus(HeartbeatResponse resp) {\n+  private void handleRollingUpgradeStatus(HeartbeatResponse resp) throws IOException {\n     RollingUpgradeStatus rollingUpgradeStatus \u003d resp.getRollingUpdateStatus();\n     if (rollingUpgradeStatus !\u003d null \u0026\u0026\n         rollingUpgradeStatus.getBlockPoolId().compareTo(bpos.getBlockPoolId()) !\u003d 0) {\n       // Can this ever occur?\n       LOG.error(\"Invalid BlockPoolId \" +\n           rollingUpgradeStatus.getBlockPoolId() +\n           \" in HeartbeatResponse. Expected \" +\n           bpos.getBlockPoolId());\n     } else {\n       bpos.signalRollingUpgrade(rollingUpgradeStatus !\u003d null);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleRollingUpgradeStatus(HeartbeatResponse resp) throws IOException {\n    RollingUpgradeStatus rollingUpgradeStatus \u003d resp.getRollingUpdateStatus();\n    if (rollingUpgradeStatus !\u003d null \u0026\u0026\n        rollingUpgradeStatus.getBlockPoolId().compareTo(bpos.getBlockPoolId()) !\u003d 0) {\n      // Can this ever occur?\n      LOG.error(\"Invalid BlockPoolId \" +\n          rollingUpgradeStatus.getBlockPoolId() +\n          \" in HeartbeatResponse. Expected \" +\n          bpos.getBlockPoolId());\n    } else {\n      bpos.signalRollingUpgrade(rollingUpgradeStatus !\u003d null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    }
  }
}