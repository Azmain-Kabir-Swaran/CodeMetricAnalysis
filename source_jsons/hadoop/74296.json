{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CrossOriginFilter.java",
  "functionName": "initializeAllowedOrigins",
  "functionId": "initializeAllowedOrigins___filterConfig-FilterConfig",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
  "functionStartLine": 188,
  "functionEndLine": 205,
  "numCommitsSeen": 11,
  "timeTaken": 2253,
  "changeHistory": [
    "df30d8ea092cddc037482bc60fc790b26b577963",
    "4d5dd75b607d25adf8b41f7408713dfcea8f5330",
    "f8adeb712dc834c27cec15c04a986f2f635aba83",
    "54e5794806bd856da0277510efe63656eed23146",
    "51a4faf52199b181471d591a9fde900fc166fc48",
    "41aa4badf8270a8e7d4321809fe8b8a34db98968"
  ],
  "changeHistoryShort": {
    "df30d8ea092cddc037482bc60fc790b26b577963": "Ybodychange",
    "4d5dd75b607d25adf8b41f7408713dfcea8f5330": "Ybodychange",
    "f8adeb712dc834c27cec15c04a986f2f635aba83": "Yfilerename",
    "54e5794806bd856da0277510efe63656eed23146": "Ybodychange",
    "51a4faf52199b181471d591a9fde900fc166fc48": "Ybodychange",
    "41aa4badf8270a8e7d4321809fe8b8a34db98968": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df30d8ea092cddc037482bc60fc790b26b577963": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9727: Allowed Origin pattern is discouraged if regex contains *. Contributed by Zoltan Siegl\n",
      "commitDate": "09/08/19 12:34 AM",
      "commitName": "df30d8ea092cddc037482bc60fc790b26b577963",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 407.08,
      "commitsBetweenForRepo": 3107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void initializeAllowedOrigins(FilterConfig filterConfig) {\n     String allowedOriginsConfig \u003d\n         filterConfig.getInitParameter(ALLOWED_ORIGINS);\n     if (allowedOriginsConfig \u003d\u003d null) {\n       allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n     }\n     allowedOrigins.addAll(\n         Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n     allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n     LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n     LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n     List\u003cString\u003e discouragedAllowedOrigins \u003d allowedOrigins.stream()\n-            .filter(s -\u003e s.length() \u003e 1 \u0026\u0026 s.contains(\"*\"))\n+            .filter(s -\u003e s.length() \u003e 1 \u0026\u0026 s.contains(\"*\") \u0026\u0026 !(s.startsWith(ALLOWED_ORIGINS_REGEX_PREFIX)))\n             .collect(Collectors.toList());\n     for (String discouragedAllowedOrigin : discouragedAllowedOrigins) {\n         LOG.warn(\"Allowed Origin pattern \u0027\" + discouragedAllowedOrigin + \"\u0027 is discouraged, use the \u0027regex:\u0027 prefix and use a Java regular expression instead.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n    String allowedOriginsConfig \u003d\n        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n    if (allowedOriginsConfig \u003d\u003d null) {\n      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n    }\n    allowedOrigins.addAll(\n        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n    allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n    LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n    List\u003cString\u003e discouragedAllowedOrigins \u003d allowedOrigins.stream()\n            .filter(s -\u003e s.length() \u003e 1 \u0026\u0026 s.contains(\"*\") \u0026\u0026 !(s.startsWith(ALLOWED_ORIGINS_REGEX_PREFIX)))\n            .collect(Collectors.toList());\n    for (String discouragedAllowedOrigin : discouragedAllowedOrigins) {\n        LOG.warn(\"Allowed Origin pattern \u0027\" + discouragedAllowedOrigin + \"\u0027 is discouraged, use the \u0027regex:\u0027 prefix and use a Java regular expression instead.\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "4d5dd75b607d25adf8b41f7408713dfcea8f5330": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14908. CrossOriginFilter should trigger regex on more input (Johannes Alberti via aw)\n",
      "commitDate": "03/10/17 10:58 AM",
      "commitName": "4d5dd75b607d25adf8b41f7408713dfcea8f5330",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 77.56,
      "commitsBetweenForRepo": 664,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   private void initializeAllowedOrigins(FilterConfig filterConfig) {\n     String allowedOriginsConfig \u003d\n         filterConfig.getInitParameter(ALLOWED_ORIGINS);\n     if (allowedOriginsConfig \u003d\u003d null) {\n       allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n     }\n     allowedOrigins.addAll(\n         Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n     allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n     LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n     LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n+    List\u003cString\u003e discouragedAllowedOrigins \u003d allowedOrigins.stream()\n+            .filter(s -\u003e s.length() \u003e 1 \u0026\u0026 s.contains(\"*\"))\n+            .collect(Collectors.toList());\n+    for (String discouragedAllowedOrigin : discouragedAllowedOrigins) {\n+        LOG.warn(\"Allowed Origin pattern \u0027\" + discouragedAllowedOrigin + \"\u0027 is discouraged, use the \u0027regex:\u0027 prefix and use a Java regular expression instead.\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n    String allowedOriginsConfig \u003d\n        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n    if (allowedOriginsConfig \u003d\u003d null) {\n      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n    }\n    allowedOrigins.addAll(\n        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n    allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n    LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n    List\u003cString\u003e discouragedAllowedOrigins \u003d allowedOrigins.stream()\n            .filter(s -\u003e s.length() \u003e 1 \u0026\u0026 s.contains(\"*\"))\n            .collect(Collectors.toList());\n    for (String discouragedAllowedOrigin : discouragedAllowedOrigins) {\n        LOG.warn(\"Allowed Origin pattern \u0027\" + discouragedAllowedOrigin + \"\u0027 is discouraged, use the \u0027regex:\u0027 prefix and use a Java regular expression instead.\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "f8adeb712dc834c27cec15c04a986f2f635aba83": {
      "type": "Yfilerename",
      "commitMessage": "YARN-4009. CORS support for ResourceManager REST API. ( Varun Vasudev via jeagles)\n",
      "commitDate": "23/10/15 8:34 AM",
      "commitName": "f8adeb712dc834c27cec15c04a986f2f635aba83",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "23/10/15 7:47 AM",
      "commitNameOld": "35a303dfbe348f96c465fb8778ced6b5bb617e89",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n    String allowedOriginsConfig \u003d\n        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n    if (allowedOriginsConfig \u003d\u003d null) {\n      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n    }\n    allowedOrigins.addAll(\n        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n    allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n    LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java"
      }
    },
    "54e5794806bd856da0277510efe63656eed23146": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2547. Cross Origin Filter throws UnsupportedOperationException upon destroy (Mit Desai via jeagles)\n",
      "commitDate": "12/09/14 1:35 PM",
      "commitName": "54e5794806bd856da0277510efe63656eed23146",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "07/09/14 5:49 PM",
      "commitNameOld": "a092cdf32de4d752456286a9f4dda533d8a62bca",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 4.82,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private void initializeAllowedOrigins(FilterConfig filterConfig) {\n     String allowedOriginsConfig \u003d\n         filterConfig.getInitParameter(ALLOWED_ORIGINS);\n     if (allowedOriginsConfig \u003d\u003d null) {\n       allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n     }\n-    allowedOrigins \u003d\n-        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\"));\n+    allowedOrigins.addAll(\n+        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n     allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n     LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n     LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n    String allowedOriginsConfig \u003d\n        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n    if (allowedOriginsConfig \u003d\u003d null) {\n      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n    }\n    allowedOrigins.addAll(\n        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\")));\n    allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n    LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "51a4faf52199b181471d591a9fde900fc166fc48": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2511. Allowed all origins by default when CrossOriginFilter is enabled. Contributed by Jonathan Eagles.\n",
      "commitDate": "04/09/14 3:01 PM",
      "commitName": "51a4faf52199b181471d591a9fde900fc166fc48",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "13/08/14 1:29 PM",
      "commitNameOld": "41aa4badf8270a8e7d4321809fe8b8a34db98968",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 22.06,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,12 @@\n   private void initializeAllowedOrigins(FilterConfig filterConfig) {\n     String allowedOriginsConfig \u003d\n         filterConfig.getInitParameter(ALLOWED_ORIGINS);\n     if (allowedOriginsConfig \u003d\u003d null) {\n       allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n     }\n     allowedOrigins \u003d\n         Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\"));\n+    allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n     LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n+    LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n    String allowedOriginsConfig \u003d\n        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n    if (allowedOriginsConfig \u003d\u003d null) {\n      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n    }\n    allowedOrigins \u003d\n        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\"));\n    allowAllOrigins \u003d allowedOrigins.contains(\"*\");\n    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n    LOG.info(\"Allow All Origins: \" + allowAllOrigins);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "41aa4badf8270a8e7d4321809fe8b8a34db98968": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2277. Added cross-origin support for the timeline server web services. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617832 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/08/14 1:29 PM",
      "commitName": "41aa4badf8270a8e7d4321809fe8b8a34db98968",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,10 @@\n+  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n+    String allowedOriginsConfig \u003d\n+        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n+    if (allowedOriginsConfig \u003d\u003d null) {\n+      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n+    }\n+    allowedOrigins \u003d\n+        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\"));\n+    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeAllowedOrigins(FilterConfig filterConfig) {\n    String allowedOriginsConfig \u003d\n        filterConfig.getInitParameter(ALLOWED_ORIGINS);\n    if (allowedOriginsConfig \u003d\u003d null) {\n      allowedOriginsConfig \u003d ALLOWED_ORIGINS_DEFAULT;\n    }\n    allowedOrigins \u003d\n        Arrays.asList(allowedOriginsConfig.trim().split(\"\\\\s*,\\\\s*\"));\n    LOG.info(\"Allowed Origins: \" + StringUtils.join(allowedOrigins, \u0027,\u0027));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java"
    }
  }
}