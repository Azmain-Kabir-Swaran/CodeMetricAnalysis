{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CacheManager.java",
  "functionName": "addCacheDirective",
  "functionId": "addCacheDirective___poolName-String(modifiers-final)__directive-CacheDirective(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
  "functionStartLine": 1166,
  "functionEndLine": 1180,
  "numCommitsSeen": 56,
  "timeTaken": 2534,
  "changeHistory": [
    "ca379e1c43fd733a34f3ece6172c96d74c890422",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "ca379e1c43fd733a34f3ece6172c96d74c890422": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ca379e1c43fd733a34f3ece6172c96d74c890422": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13970. Use MultiMap for CacheManager Directives to simplify the code. Contributed by BELUGA BEHR.\n",
      "commitDate": "13/12/18 9:36 PM",
      "commitName": "ca379e1c43fd733a34f3ece6172c96d74c890422",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/09/18 2:59 PM",
      "commitNameOld": "335a8139f5b9004414b2942eeac5a008283a6f75",
      "commitAuthorOld": "Hrishikesh Gadre",
      "daysBetweenCommits": 97.32,
      "commitsBetweenForRepo": 849,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,15 @@\n   private void addCacheDirective(final String poolName,\n       final CacheDirective directive) throws IOException {\n     CachePool pool \u003d cachePools.get(poolName);\n     if (pool \u003d\u003d null) {\n       throw new IOException(\"Directive refers to pool \" + poolName\n           + \", which does not exist.\");\n     }\n     boolean addedDirective \u003d pool.getDirectiveList().add(directive);\n     assert addedDirective;\n     if (directivesById.put(directive.getId(), directive) !\u003d null) {\n       throw new IOException(\"A directive with ID \" + directive.getId()\n           + \" already exists\");\n     }\n-    List\u003cCacheDirective\u003e directives \u003d directivesByPath.get(directive.getPath());\n-    if (directives \u003d\u003d null) {\n-      directives \u003d new LinkedList\u003cCacheDirective\u003e();\n-      directivesByPath.put(directive.getPath(), directives);\n-    }\n-    directives.add(directive);\n+    directivesByPath.put(directive.getPath(), directive);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addCacheDirective(final String poolName,\n      final CacheDirective directive) throws IOException {\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"Directive refers to pool \" + poolName\n          + \", which does not exist.\");\n    }\n    boolean addedDirective \u003d pool.getDirectiveList().add(directive);\n    assert addedDirective;\n    if (directivesById.put(directive.getId(), directive) !\u003d null) {\n      throw new IOException(\"A directive with ID \" + directive.getId()\n          + \" already exists\");\n    }\n    directivesByPath.put(directive.getPath(), directive);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,20 @@\n+  private void addCacheDirective(final String poolName,\n+      final CacheDirective directive) throws IOException {\n+    CachePool pool \u003d cachePools.get(poolName);\n+    if (pool \u003d\u003d null) {\n+      throw new IOException(\"Directive refers to pool \" + poolName\n+          + \", which does not exist.\");\n+    }\n+    boolean addedDirective \u003d pool.getDirectiveList().add(directive);\n+    assert addedDirective;\n+    if (directivesById.put(directive.getId(), directive) !\u003d null) {\n+      throw new IOException(\"A directive with ID \" + directive.getId()\n+          + \" already exists\");\n+    }\n+    List\u003cCacheDirective\u003e directives \u003d directivesByPath.get(directive.getPath());\n+    if (directives \u003d\u003d null) {\n+      directives \u003d new LinkedList\u003cCacheDirective\u003e();\n+      directivesByPath.put(directive.getPath(), directives);\n+    }\n+    directives.add(directive);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addCacheDirective(final String poolName,\n      final CacheDirective directive) throws IOException {\n    CachePool pool \u003d cachePools.get(poolName);\n    if (pool \u003d\u003d null) {\n      throw new IOException(\"Directive refers to pool \" + poolName\n          + \", which does not exist.\");\n    }\n    boolean addedDirective \u003d pool.getDirectiveList().add(directive);\n    assert addedDirective;\n    if (directivesById.put(directive.getId(), directive) !\u003d null) {\n      throw new IOException(\"A directive with ID \" + directive.getId()\n          + \" already exists\");\n    }\n    List\u003cCacheDirective\u003e directives \u003d directivesByPath.get(directive.getPath());\n    if (directives \u003d\u003d null) {\n      directives \u003d new LinkedList\u003cCacheDirective\u003e();\n      directivesByPath.put(directive.getPath(), directives);\n    }\n    directives.add(directive);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CacheManager.java"
    }
  }
}