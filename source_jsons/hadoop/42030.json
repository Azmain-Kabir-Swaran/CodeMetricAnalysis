{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "removeRMDelegationTokenState",
  "functionId": "removeRMDelegationTokenState___rmDTIdentifier-RMDelegationTokenIdentifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 1064,
  "functionEndLine": 1090,
  "numCommitsSeen": 77,
  "timeTaken": 4496,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "4c7b9b6abe2452c9752a11214762be2e7665fb32",
    "e516706b896743e47e2852be81944eb5613e3e76",
    "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e",
    "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344",
    "ce56616037fc160ba875b496bdc369411bb873be",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Ybodychange",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": "Ybodychange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "4c7b9b6abe2452c9752a11214762be2e7665fb32": "Ybodychange",
    "e516706b896743e47e2852be81944eb5613e3e76": "Ybodychange",
    "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e": "Ybodychange",
    "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344": "Ybodychange",
    "ce56616037fc160ba875b496bdc369411bb873be": "Ybodychange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ybodychange",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": "Ybodychange",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,27 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     String nodeRemovePath \u003d getLeafDelegationTokenNodePath(\n         rmDTIdentifier.getSequenceNumber(), false);\n     int splitIndex \u003d delegationTokenNodeSplitIndex;\n     // Look for paths based on other split indices if path as per configured\n     // split index does not exist.\n     if (!exists(nodeRemovePath)) {\n       ZnodeSplitInfo alternatePathInfo \u003d\n           getAlternateDTPath(rmDTIdentifier.getSequenceNumber());\n       if (alternatePathInfo !\u003d null) {\n         nodeRemovePath \u003d alternatePathInfo.path;\n         splitIndex \u003d alternatePathInfo.splitIndex;\n       } else {\n         // Alternate path not found so return.\n         return;\n       }\n     }\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Removing RMDelegationToken_\"\n-          + rmDTIdentifier.getSequenceNumber());\n-    }\n+    LOG.debug(\"Removing RMDelegationToken_{}\",\n+        rmDTIdentifier.getSequenceNumber());\n \n     zkManager.safeDelete(nodeRemovePath, zkAcl, fencingNodePath);\n \n     // Check if we should remove the parent app node as well.\n     checkRemoveParentZnode(nodeRemovePath, splitIndex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d getLeafDelegationTokenNodePath(\n        rmDTIdentifier.getSequenceNumber(), false);\n    int splitIndex \u003d delegationTokenNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(nodeRemovePath)) {\n      ZnodeSplitInfo alternatePathInfo \u003d\n          getAlternateDTPath(rmDTIdentifier.getSequenceNumber());\n      if (alternatePathInfo !\u003d null) {\n        nodeRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n\n    LOG.debug(\"Removing RMDelegationToken_{}\",\n        rmDTIdentifier.getSequenceNumber());\n\n    zkManager.safeDelete(nodeRemovePath, zkAcl, fencingNodePath);\n\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentZnode(nodeRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 17.28,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,29 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n-    String nodeRemovePath \u003d\n-        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n-            + rmDTIdentifier.getSequenceNumber());\n+    String nodeRemovePath \u003d getLeafDelegationTokenNodePath(\n+        rmDTIdentifier.getSequenceNumber(), false);\n+    int splitIndex \u003d delegationTokenNodeSplitIndex;\n+    // Look for paths based on other split indices if path as per configured\n+    // split index does not exist.\n+    if (!exists(nodeRemovePath)) {\n+      ZnodeSplitInfo alternatePathInfo \u003d\n+          getAlternateDTPath(rmDTIdentifier.getSequenceNumber());\n+      if (alternatePathInfo !\u003d null) {\n+        nodeRemovePath \u003d alternatePathInfo.path;\n+        splitIndex \u003d alternatePathInfo.splitIndex;\n+      } else {\n+        // Alternate path not found so return.\n+        return;\n+      }\n+    }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n \n     zkManager.safeDelete(nodeRemovePath, zkAcl, fencingNodePath);\n+\n+    // Check if we should remove the parent app node as well.\n+    checkRemoveParentZnode(nodeRemovePath, splitIndex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d getLeafDelegationTokenNodePath(\n        rmDTIdentifier.getSequenceNumber(), false);\n    int splitIndex \u003d delegationTokenNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(nodeRemovePath)) {\n      ZnodeSplitInfo alternatePathInfo \u003d\n          getAlternateDTPath(rmDTIdentifier.getSequenceNumber());\n      if (alternatePathInfo !\u003d null) {\n        nodeRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n\n    zkManager.safeDelete(nodeRemovePath, zkAcl, fencingNodePath);\n\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentZnode(nodeRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).\n",
      "commitDate": "22/08/17 7:20 PM",
      "commitName": "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "15/08/17 4:53 PM",
      "commitNameOld": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n \n-    safeDelete(nodeRemovePath);\n+    zkManager.safeDelete(nodeRemovePath, zkAcl, fencingNodePath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n\n    zkManager.safeDelete(nodeRemovePath, zkAcl, fencingNodePath);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,11 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n-    if (existsWithRetries(nodeRemovePath, false) !\u003d null) {\n-      ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-      opList.add(Op.delete(nodeRemovePath, -1));\n-      doDeleteMultiWithRetries(opList);\n-    } else {\n-      LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n-    }\n+    safeDelete(nodeRemovePath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    safeDelete(nodeRemovePath);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4c7b9b6abe2452c9752a11214762be2e7665fb32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3385. Fixed a race-condition in ResourceManager\u0027s ZooKeeper based state-store to avoid crashing on duplicate deletes. Contributed by Zhihai Xu.\n",
      "commitDate": "06/05/15 5:51 PM",
      "commitName": "4c7b9b6abe2452c9752a11214762be2e7665fb32",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/05/15 4:13 PM",
      "commitNameOld": "d701acc9c67adc578ba18035edde1166eedaae98",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n-    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n     if (existsWithRetries(nodeRemovePath, false) !\u003d null) {\n+      ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n       opList.add(Op.delete(nodeRemovePath, -1));\n+      doDeleteMultiWithRetries(opList);\n     } else {\n       LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n     }\n-    doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    if (existsWithRetries(nodeRemovePath, false) !\u003d null) {\n      ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n      opList.add(Op.delete(nodeRemovePath, -1));\n      doDeleteMultiWithRetries(opList);\n    } else {\n      LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "e516706b896743e47e2852be81944eb5613e3e76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3469. ZKRMStateStore: Avoid setting watches that are not required. (Jun Hong via kasha)\n",
      "commitDate": "10/04/15 11:20 AM",
      "commitName": "e516706b896743e47e2852be81944eb5613e3e76",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "04/03/15 7:49 PM",
      "commitNameOld": "8d88691d162f87f95c9ed7e0a569ef08e8385d4f",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 36.61,
      "commitsBetweenForRepo": 327,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n-    if (existsWithRetries(nodeRemovePath, true) !\u003d null) {\n+    if (existsWithRetries(nodeRemovePath, false) !\u003d null) {\n       opList.add(Op.delete(nodeRemovePath, -1));\n     } else {\n       LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    if (existsWithRetries(nodeRemovePath, false) !\u003d null) {\n      opList.add(Op.delete(nodeRemovePath, -1));\n    } else {\n      LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n    }\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2061. Revisit logging levels in ZKRMStateStore. (Ray Chiang via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1600498 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/06/14 2:11 PM",
      "commitName": "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "30/05/14 8:24 AM",
      "commitNameOld": "49a3a0cd0ceb0dfe84367a2adfb8f9f0990a5548",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 5.24,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n     if (existsWithRetries(nodeRemovePath, true) !\u003d null) {\n       opList.add(Op.delete(nodeRemovePath, -1));\n     } else {\n-      LOG.info(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n+      LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    if (existsWithRetries(nodeRemovePath, true) !\u003d null) {\n      opList.add(Op.delete(nodeRemovePath, -1));\n    } else {\n      LOG.debug(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n    }\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1934. Fixed a potential NPE in ZKRMStateStore caused by handling Disconnected event from ZK. Contributed by Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1587776 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/04/14 7:02 PM",
      "commitName": "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/04/14 2:51 PM",
      "commitNameOld": "c6b70f4760bc9d4028616de779ccf86219f38ec8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.17,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n-    if (zkClient.exists(nodeRemovePath, true) !\u003d null) {\n+    if (existsWithRetries(nodeRemovePath, true) !\u003d null) {\n       opList.add(Op.delete(nodeRemovePath, -1));\n     } else {\n       LOG.info(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    if (existsWithRetries(nodeRemovePath, true) !\u003d null) {\n      opList.add(Op.delete(nodeRemovePath, -1));\n    } else {\n      LOG.info(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n    }\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "ce56616037fc160ba875b496bdc369411bb873be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1776. Fixed DelegationToken renewal to survive RM failover. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580154 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 9:12 PM",
      "commitName": "ce56616037fc160ba875b496bdc369411bb873be",
      "commitAuthor": "Jian He",
      "commitDateOld": "28/02/14 9:34 AM",
      "commitNameOld": "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 21.44,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,17 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n+    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n     String nodeRemovePath \u003d\n         getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n-    deleteWithRetries(nodeRemovePath, -1);\n+    if (zkClient.exists(nodeRemovePath, true) !\u003d null) {\n+      opList.add(Op.delete(nodeRemovePath, -1));\n+    } else {\n+      LOG.info(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n+    }\n+    doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    if (zkClient.exists(nodeRemovePath, true) !\u003d null) {\n      opList.add(Op.delete(nodeRemovePath, -1));\n    } else {\n      LOG.info(\"Attempted to delete a non-existing znode \" + nodeRemovePath);\n    }\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/12/13 8:17 PM",
      "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     String nodeRemovePath \u003d\n-        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n+        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n     deleteWithRetries(nodeRemovePath, -1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d\n        getNodePath(delegationTokensRootPath, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    deleteWithRetries(nodeRemovePath, -1);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/13 8:17 PM",
      "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/12/13 11:28 AM",
      "commitNameOld": "9c95015bb47f362e592393f0cec899fd8fdd3b04",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.37,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   protected synchronized void removeRMDelegationTokenState(\n       RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n     String nodeRemovePath \u003d\n         getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n             + rmDTIdentifier.getSequenceNumber());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing RMDelegationToken_\"\n           + rmDTIdentifier.getSequenceNumber());\n     }\n-    deleteWithRetries(nodeRemovePath, 0);\n+    deleteWithRetries(nodeRemovePath, -1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d\n        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    deleteWithRetries(nodeRemovePath, -1);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,11 @@\n+  protected synchronized void removeRMDelegationTokenState(\n+      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n+    String nodeRemovePath \u003d\n+        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n+            + rmDTIdentifier.getSequenceNumber());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Removing RMDelegationToken_\"\n+          + rmDTIdentifier.getSequenceNumber());\n+    }\n+    deleteWithRetries(nodeRemovePath, 0);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeRMDelegationTokenState(\n      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception {\n    String nodeRemovePath \u003d\n        getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX\n            + rmDTIdentifier.getSequenceNumber());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing RMDelegationToken_\"\n          + rmDTIdentifier.getSequenceNumber());\n    }\n    deleteWithRetries(nodeRemovePath, 0);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}