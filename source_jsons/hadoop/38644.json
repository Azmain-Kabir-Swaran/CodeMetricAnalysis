{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppSchedulingInfo.java",
  "functionName": "updateMetrics",
  "functionId": "updateMetrics___applicationId-ApplicationId__type-NodeType__node-SchedulerNode__containerAllocated-RMContainer__user-String__queue-Queue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
  "functionStartLine": 745,
  "functionEndLine": 762,
  "numCommitsSeen": 159,
  "timeTaken": 3979,
  "changeHistory": [
    "c30c23cb665761e997bcfc1dc00908f70b069fa2",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "f8c5f5b23732a1e35f012c1a6850bed09c8a5180"
  ],
  "changeHistoryShort": {
    "c30c23cb665761e997bcfc1dc00908f70b069fa2": "Ymultichange(Yparameterchange,Ybodychange)",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "f8c5f5b23732a1e35f012c1a6850bed09c8a5180": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c30c23cb665761e997bcfc1dc00908f70b069fa2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6492. Generate queue metrics for each partition. Contributed by Manikandan R\n",
      "commitDate": "26/05/20 4:29 PM",
      "commitName": "c30c23cb665761e997bcfc1dc00908f70b069fa2",
      "commitAuthor": "Jonathan Hung",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6492. Generate queue metrics for each partition. Contributed by Manikandan R\n",
          "commitDate": "26/05/20 4:29 PM",
          "commitName": "c30c23cb665761e997bcfc1dc00908f70b069fa2",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "26/11/19 1:04 PM",
          "commitNameOld": "ef950b086354c8a02eecd6745f6ab0fe5449f7b0",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 182.1,
          "commitsBetweenForRepo": 609,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,18 @@\n   public static void updateMetrics(ApplicationId applicationId, NodeType type,\n-      SchedulerNode node, Container containerAllocated, String user,\n+      SchedulerNode node, RMContainer containerAllocated, String user,\n       Queue queue) {\n     LOG.debug(\"allocate: applicationId\u003d{} container\u003d{} host\u003d{} user\u003d{}\"\n-        + \" resource\u003d{} type\u003d{}\", applicationId, containerAllocated.getId(),\n-        containerAllocated.getNodeId(), user, containerAllocated.getResource(),\n+        + \" resource\u003d{} type\u003d{}\", applicationId,\n+        containerAllocated.getContainer().getId(),\n+        containerAllocated.getNodeId(), user,\n+        containerAllocated.getContainer().getResource(),\n         type);\n     if(node !\u003d null) {\n       queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n-          containerAllocated.getResource(), true);\n+          containerAllocated.getContainer().getResource(), false);\n+      queue.getMetrics().decrPendingResources(\n+          containerAllocated.getNodeLabelExpression(), user, 1,\n+          containerAllocated.getContainer().getResource());\n     }\n     queue.getMetrics().incrNodeTypeAggregations(user, type);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateMetrics(ApplicationId applicationId, NodeType type,\n      SchedulerNode node, RMContainer containerAllocated, String user,\n      Queue queue) {\n    LOG.debug(\"allocate: applicationId\u003d{} container\u003d{} host\u003d{} user\u003d{}\"\n        + \" resource\u003d{} type\u003d{}\", applicationId,\n        containerAllocated.getContainer().getId(),\n        containerAllocated.getNodeId(), user,\n        containerAllocated.getContainer().getResource(),\n        type);\n    if(node !\u003d null) {\n      queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n          containerAllocated.getContainer().getResource(), false);\n      queue.getMetrics().decrPendingResources(\n          containerAllocated.getNodeLabelExpression(), user, 1,\n          containerAllocated.getContainer().getResource());\n    }\n    queue.getMetrics().incrNodeTypeAggregations(user, type);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {
            "oldValue": "[applicationId-ApplicationId, type-NodeType, node-SchedulerNode, containerAllocated-Container, user-String, queue-Queue]",
            "newValue": "[applicationId-ApplicationId, type-NodeType, node-SchedulerNode, containerAllocated-RMContainer, user-String, queue-Queue]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6492. Generate queue metrics for each partition. Contributed by Manikandan R\n",
          "commitDate": "26/05/20 4:29 PM",
          "commitName": "c30c23cb665761e997bcfc1dc00908f70b069fa2",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "26/11/19 1:04 PM",
          "commitNameOld": "ef950b086354c8a02eecd6745f6ab0fe5449f7b0",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 182.1,
          "commitsBetweenForRepo": 609,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,18 @@\n   public static void updateMetrics(ApplicationId applicationId, NodeType type,\n-      SchedulerNode node, Container containerAllocated, String user,\n+      SchedulerNode node, RMContainer containerAllocated, String user,\n       Queue queue) {\n     LOG.debug(\"allocate: applicationId\u003d{} container\u003d{} host\u003d{} user\u003d{}\"\n-        + \" resource\u003d{} type\u003d{}\", applicationId, containerAllocated.getId(),\n-        containerAllocated.getNodeId(), user, containerAllocated.getResource(),\n+        + \" resource\u003d{} type\u003d{}\", applicationId,\n+        containerAllocated.getContainer().getId(),\n+        containerAllocated.getNodeId(), user,\n+        containerAllocated.getContainer().getResource(),\n         type);\n     if(node !\u003d null) {\n       queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n-          containerAllocated.getResource(), true);\n+          containerAllocated.getContainer().getResource(), false);\n+      queue.getMetrics().decrPendingResources(\n+          containerAllocated.getNodeLabelExpression(), user, 1,\n+          containerAllocated.getContainer().getResource());\n     }\n     queue.getMetrics().incrNodeTypeAggregations(user, type);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateMetrics(ApplicationId applicationId, NodeType type,\n      SchedulerNode node, RMContainer containerAllocated, String user,\n      Queue queue) {\n    LOG.debug(\"allocate: applicationId\u003d{} container\u003d{} host\u003d{} user\u003d{}\"\n        + \" resource\u003d{} type\u003d{}\", applicationId,\n        containerAllocated.getContainer().getId(),\n        containerAllocated.getNodeId(), user,\n        containerAllocated.getContainer().getResource(),\n        type);\n    if(node !\u003d null) {\n      queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n          containerAllocated.getContainer().getResource(), false);\n      queue.getMetrics().decrPendingResources(\n          containerAllocated.getNodeLabelExpression(), user, 1,\n          containerAllocated.getContainer().getResource());\n    }\n    queue.getMetrics().incrNodeTypeAggregations(user, type);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,13 @@\n   public static void updateMetrics(ApplicationId applicationId, NodeType type,\n       SchedulerNode node, Container containerAllocated, String user,\n       Queue queue) {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"allocate: applicationId\u003d\" + applicationId + \" container\u003d\"\n-          + containerAllocated.getId() + \" host\u003d\" + containerAllocated\n-          .getNodeId().toString() + \" user\u003d\" + user + \" resource\u003d\"\n-          + containerAllocated.getResource() + \" type\u003d\"\n-          + type);\n-    }\n+    LOG.debug(\"allocate: applicationId\u003d{} container\u003d{} host\u003d{} user\u003d{}\"\n+        + \" resource\u003d{} type\u003d{}\", applicationId, containerAllocated.getId(),\n+        containerAllocated.getNodeId(), user, containerAllocated.getResource(),\n+        type);\n     if(node !\u003d null) {\n       queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n           containerAllocated.getResource(), true);\n     }\n     queue.getMetrics().incrNodeTypeAggregations(user, type);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void updateMetrics(ApplicationId applicationId, NodeType type,\n      SchedulerNode node, Container containerAllocated, String user,\n      Queue queue) {\n    LOG.debug(\"allocate: applicationId\u003d{} container\u003d{} host\u003d{} user\u003d{}\"\n        + \" resource\u003d{} type\u003d{}\", applicationId, containerAllocated.getId(),\n        containerAllocated.getNodeId(), user, containerAllocated.getResource(),\n        type);\n    if(node !\u003d null) {\n      queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n          containerAllocated.getResource(), true);\n    }\n    queue.getMetrics().incrNodeTypeAggregations(user, type);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "f8c5f5b23732a1e35f012c1a6850bed09c8a5180": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7784. Fix Cluster metrics when placement processor is enabled. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "f8c5f5b23732a1e35f012c1a6850bed09c8a5180",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,16 @@\n+  public static void updateMetrics(ApplicationId applicationId, NodeType type,\n+      SchedulerNode node, Container containerAllocated, String user,\n+      Queue queue) {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"allocate: applicationId\u003d\" + applicationId + \" container\u003d\"\n+          + containerAllocated.getId() + \" host\u003d\" + containerAllocated\n+          .getNodeId().toString() + \" user\u003d\" + user + \" resource\u003d\"\n+          + containerAllocated.getResource() + \" type\u003d\"\n+          + type);\n+    }\n+    if(node !\u003d null) {\n+      queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n+          containerAllocated.getResource(), true);\n+    }\n+    queue.getMetrics().incrNodeTypeAggregations(user, type);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void updateMetrics(ApplicationId applicationId, NodeType type,\n      SchedulerNode node, Container containerAllocated, String user,\n      Queue queue) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"allocate: applicationId\u003d\" + applicationId + \" container\u003d\"\n          + containerAllocated.getId() + \" host\u003d\" + containerAllocated\n          .getNodeId().toString() + \" user\u003d\" + user + \" resource\u003d\"\n          + containerAllocated.getResource() + \" type\u003d\"\n          + type);\n    }\n    if(node !\u003d null) {\n      queue.getMetrics().allocateResources(node.getPartition(), user, 1,\n          containerAllocated.getResource(), true);\n    }\n    queue.getMetrics().incrNodeTypeAggregations(user, type);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
    }
  }
}