{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableCSConfigurationProvider.java",
  "functionName": "formatConfigurationInStore",
  "functionId": "formatConfigurationInStore___config-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
  "functionStartLine": 166,
  "functionEndLine": 188,
  "numCommitsSeen": 23,
  "timeTaken": 2042,
  "changeHistory": [
    "090f73a9aaeb4c03032a78c0a837478b527c27e0",
    "137546a78a45adbfb5ef338c1c2984a97b3cecc2"
  ],
  "changeHistoryShort": {
    "090f73a9aaeb4c03032a78c0a837478b527c27e0": "Ybodychange",
    "137546a78a45adbfb5ef338c1c2984a97b3cecc2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "090f73a9aaeb4c03032a78c0a837478b527c27e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9900. Revert to previous state when Invalid Config is applied and Refresh Support in SchedulerConfig Format. Contributed by Prabhu Joseph.\n",
      "commitDate": "16/10/19 5:44 AM",
      "commitName": "090f73a9aaeb4c03032a78c0a837478b527c27e0",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/10/19 3:23 AM",
      "commitNameOld": "be901f49628a553cfe6a3942478cb528cce2b266",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public void formatConfigurationInStore(Configuration config)\n       throws Exception {\n     formatLock.writeLock().lock();\n     try {\n       confStore.format();\n+      oldConf \u003d new Configuration(schedConf);\n       Configuration initialSchedConf \u003d new Configuration(false);\n       initialSchedConf.addResource(YarnConfiguration.CS_CONFIGURATION_FILE);\n       this.schedConf \u003d new Configuration(false);\n       // We need to explicitly set the key-values in schedConf, otherwise\n       // these configuration keys cannot be deleted when\n       // configuration is reloaded.\n       for (Map.Entry\u003cString, String\u003e kv : initialSchedConf) {\n         schedConf.set(kv.getKey(), kv.getValue());\n       }\n       confStore.initialize(config, schedConf, rmContext);\n       confStore.checkVersion();\n     } catch (Exception e) {\n       throw new IOException(e);\n     } finally {\n       formatLock.writeLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void formatConfigurationInStore(Configuration config)\n      throws Exception {\n    formatLock.writeLock().lock();\n    try {\n      confStore.format();\n      oldConf \u003d new Configuration(schedConf);\n      Configuration initialSchedConf \u003d new Configuration(false);\n      initialSchedConf.addResource(YarnConfiguration.CS_CONFIGURATION_FILE);\n      this.schedConf \u003d new Configuration(false);\n      // We need to explicitly set the key-values in schedConf, otherwise\n      // these configuration keys cannot be deleted when\n      // configuration is reloaded.\n      for (Map.Entry\u003cString, String\u003e kv : initialSchedConf) {\n        schedConf.set(kv.getKey(), kv.getValue());\n      }\n      confStore.initialize(config, schedConf, rmContext);\n      confStore.checkVersion();\n    } catch (Exception e) {\n      throw new IOException(e);\n    } finally {\n      formatLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
      "extendedDetails": {}
    },
    "137546a78a45adbfb5ef338c1c2984a97b3cecc2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9864. Format CS Configuration present in Configuration Store. Contributeed by Prabhu Joseph\n",
      "commitDate": "30/09/19 8:38 PM",
      "commitName": "137546a78a45adbfb5ef338c1c2984a97b3cecc2",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,22 @@\n+  public void formatConfigurationInStore(Configuration config)\n+      throws Exception {\n+    formatLock.writeLock().lock();\n+    try {\n+      confStore.format();\n+      Configuration initialSchedConf \u003d new Configuration(false);\n+      initialSchedConf.addResource(YarnConfiguration.CS_CONFIGURATION_FILE);\n+      this.schedConf \u003d new Configuration(false);\n+      // We need to explicitly set the key-values in schedConf, otherwise\n+      // these configuration keys cannot be deleted when\n+      // configuration is reloaded.\n+      for (Map.Entry\u003cString, String\u003e kv : initialSchedConf) {\n+        schedConf.set(kv.getKey(), kv.getValue());\n+      }\n+      confStore.initialize(config, schedConf, rmContext);\n+      confStore.checkVersion();\n+    } catch (Exception e) {\n+      throw new IOException(e);\n+    } finally {\n+      formatLock.writeLock().unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void formatConfigurationInStore(Configuration config)\n      throws Exception {\n    formatLock.writeLock().lock();\n    try {\n      confStore.format();\n      Configuration initialSchedConf \u003d new Configuration(false);\n      initialSchedConf.addResource(YarnConfiguration.CS_CONFIGURATION_FILE);\n      this.schedConf \u003d new Configuration(false);\n      // We need to explicitly set the key-values in schedConf, otherwise\n      // these configuration keys cannot be deleted when\n      // configuration is reloaded.\n      for (Map.Entry\u003cString, String\u003e kv : initialSchedConf) {\n        schedConf.set(kv.getKey(), kv.getValue());\n      }\n      confStore.initialize(config, schedConf, rmContext);\n      confStore.checkVersion();\n    } catch (Exception e) {\n      throw new IOException(e);\n    } finally {\n      formatLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java"
    }
  }
}