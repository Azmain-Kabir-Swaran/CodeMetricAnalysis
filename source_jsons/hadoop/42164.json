{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemRMStateStore.java",
  "functionName": "storeApplicationStateInternal",
  "functionId": "storeApplicationStateInternal___appId-ApplicationId__appStateDataPB-ApplicationStateData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
  "functionStartLine": 428,
  "functionEndLine": 444,
  "numCommitsSeen": 98,
  "timeTaken": 3626,
  "changeHistory": [
    "9a2a9553eee454ecd18120535d3e845f86fc3584",
    "01a1621930df17a745dd37892996c68fca3447d1",
    "5805a81efbc024024d8172489dfdc6cf77879416",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
    "9f3e488936b6fbfc30e4b0cc42667288355345d1",
    "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895",
    "29ddce96a26c45fc747408801bf65255fbd9990f"
  ],
  "changeHistoryShort": {
    "9a2a9553eee454ecd18120535d3e845f86fc3584": "Ybodychange",
    "01a1621930df17a745dd37892996c68fca3447d1": "Ybodychange",
    "5805a81efbc024024d8172489dfdc6cf77879416": "Ybodychange",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": "Yparameterchange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": "Yrename",
    "9f3e488936b6fbfc30e4b0cc42667288355345d1": "Ybodychange",
    "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895": "Ybodychange",
    "29ddce96a26c45fc747408801bf65255fbd9990f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a2a9553eee454ecd18120535d3e845f86fc3584": {
      "type": "Ybodychange",
      "commitMessage": "Fixing HDFS state-store. Contributed by Arun Suresh.\n",
      "commitDate": "14/05/15 4:13 PM",
      "commitName": "9a2a9553eee454ecd18120535d3e845f86fc3584",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/04/15 5:51 PM",
      "commitNameOld": "e71d0d87d9b388f211a8eb3d2cd9af347abf9bda",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 22.93,
      "commitsBetweenForRepo": 295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n     Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n     mkdirsWithRetries(appDirPath);\n     Path nodeCreatePath \u003d getNodePath(appDirPath, appId.toString());\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n-      writeFileWithRetries(nodeCreatePath, appStateData);\n+      writeFileWithRetries(nodeCreatePath, appStateData, true);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n    mkdirsWithRetries(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appId.toString());\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFileWithRetries(nodeCreatePath, appStateData, true);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "01a1621930df17a745dd37892996c68fca3447d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2820. Retry in FileSystemRMStateStore when FS\u0027s operations fail due to IOException. Contributed by Zhihai Xu.\n",
      "commitDate": "27/02/15 7:56 AM",
      "commitName": "01a1621930df17a745dd37892996c68fca3447d1",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "08/01/15 9:47 AM",
      "commitNameOld": "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 49.92,
      "commitsBetweenForRepo": 453,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n     Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n-    fs.mkdirs(appDirPath);\n+    mkdirsWithRetries(appDirPath);\n     Path nodeCreatePath \u003d getNodePath(appDirPath, appId.toString());\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n-      writeFile(nodeCreatePath, appStateData);\n+      writeFileWithRetries(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n    mkdirsWithRetries(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appId.toString());\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFileWithRetries(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "5805a81efbc024024d8172489dfdc6cf77879416": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "25/11/14 12:48 PM",
      "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthor": "Jian He",
      "commitDateOld": "26/10/14 11:14 AM",
      "commitNameOld": "018664550507981297fd9f91e29408e6b7801ea9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 30.11,
      "commitsBetweenForRepo": 280,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n-    String appIdStr \u003d appId.toString();\n-    Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n+    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n     fs.mkdirs(appDirPath);\n-    Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n+    Path nodeCreatePath \u003d getNodePath(appDirPath, appId.toString());\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n    fs.mkdirs(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appId.toString());\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": {
      "type": "Yparameterchange",
      "commitMessage": "Augmented RMStateStore with state machine. Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/06/14 12:44 PM",
      "commitName": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
      "commitAuthor": "Jian He",
      "commitDateOld": "10/04/14 8:36 PM",
      "commitNameOld": "dc84800184a58a26d370d9cc3ef094c20e687211",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 59.67,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n-      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n+      ApplicationStateData appStateDataPB) throws Exception {\n     String appIdStr \u003d appId.toString();\n     Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n     fs.mkdirs(appDirPath);\n     Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String appIdStr \u003d appId.toString();\n    Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n    fs.mkdirs(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {
        "oldValue": "[appId-ApplicationId, appStateDataPB-ApplicationStateDataPBImpl]",
        "newValue": "[appId-ApplicationId, appStateDataPB-ApplicationStateData]"
      }
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/13 6:33 PM",
          "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 8:17 PM",
          "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.93,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public synchronized void storeApplicationStateInternal(String appId,\n+  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n-    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n+    String appIdStr \u003d appId.toString();\n+    Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n     fs.mkdirs(appDirPath);\n-    Path nodeCreatePath \u003d getNodePath(appDirPath, appId);\n+    Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    String appIdStr \u003d appId.toString();\n    Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n    fs.mkdirs(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[appId-String, appStateDataPB-ApplicationStateDataPBImpl]",
            "newValue": "[appId-ApplicationId, appStateDataPB-ApplicationStateDataPBImpl]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/13 6:33 PM",
          "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 8:17 PM",
          "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.93,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public synchronized void storeApplicationStateInternal(String appId,\n+  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n-    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n+    String appIdStr \u003d appId.toString();\n+    Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n     fs.mkdirs(appDirPath);\n-    Path nodeCreatePath \u003d getNodePath(appDirPath, appId);\n+    Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    String appIdStr \u003d appId.toString();\n    Path appDirPath \u003d getAppDir(rmAppRoot, appIdStr);\n    fs.mkdirs(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appIdStr);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": {
      "type": "Yrename",
      "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/13 10:25 AM",
      "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/10/13 11:14 AM",
      "commitNameOld": "7f97fd131981e88ffc76c11a01ea9d190576a6d6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.97,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  public synchronized void storeApplicationState(String appId,\n+  public synchronized void storeApplicationStateInternal(String appId,\n       ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n     Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n     fs.mkdirs(appDirPath);\n     Path nodeCreatePath \u003d getNodePath(appDirPath, appId);\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(String appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n    fs.mkdirs(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appId);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {
        "oldValue": "storeApplicationState",
        "newValue": "storeApplicationStateInternal"
      }
    },
    "9f3e488936b6fbfc30e4b0cc42667288355345d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-922. Change FileSystemRMStateStore to use directories (Jian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504261 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/13 1:19 PM",
      "commitName": "9f3e488936b6fbfc30e4b0cc42667288355345d1",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "29/05/13 9:14 PM",
      "commitNameOld": "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 48.67,
      "commitsBetweenForRepo": 323,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   public synchronized void storeApplicationState(String appId,\n       ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n-    Path nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n+    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n+    fs.mkdirs(appDirPath);\n+    Path nodeCreatePath \u003d getNodePath(appDirPath, appId);\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationState(String appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    Path appDirPath \u003d getAppDir(rmAppRoot, appId);\n    fs.mkdirs(appDirPath);\n    Path nodeCreatePath \u003d getNodePath(appDirPath, appId);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895": {
      "type": "Ybodychange",
      "commitMessage": "YARN-638. Modified ResourceManager to restore RMDelegationTokens after restarting. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 9:14 PM",
      "commitName": "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/13 8:22 PM",
      "commitNameOld": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.04,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public synchronized void storeApplicationState(String appId,\n-                                     ApplicationStateDataPBImpl appStateDataPB)\n-                                     throws Exception {\n-    Path nodeCreatePath \u003d getNodePath(appId);\n+      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n+    Path nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n \n     LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     try {\n       // currently throw all exceptions. May need to respond differently for HA\n       // based on whether we have lost the right to write to FS\n       writeFile(nodeCreatePath, appStateData);\n     } catch (Exception e) {\n       LOG.info(\"Error storing info for app: \" + appId, e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationState(String appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    Path nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "29ddce96a26c45fc747408801bf65255fbd9990f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-231. RM Restart - Add FS-based persistent store implementation for RMStateStore. Contributed by Bikas Saha\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437245 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/13 4:57 PM",
      "commitName": "29ddce96a26c45fc747408801bf65255fbd9990f",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized void storeApplicationState(String appId,\n+                                     ApplicationStateDataPBImpl appStateDataPB)\n+                                     throws Exception {\n+    Path nodeCreatePath \u003d getNodePath(appId);\n+\n+    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n+    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n+    try {\n+      // currently throw all exceptions. May need to respond differently for HA\n+      // based on whether we have lost the right to write to FS\n+      writeFile(nodeCreatePath, appStateData);\n+    } catch (Exception e) {\n+      LOG.info(\"Error storing info for app: \" + appId, e);\n+      throw e;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationState(String appId,\n                                     ApplicationStateDataPBImpl appStateDataPB)\n                                     throws Exception {\n    Path nodeCreatePath \u003d getNodePath(appId);\n\n    LOG.info(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    try {\n      // currently throw all exceptions. May need to respond differently for HA\n      // based on whether we have lost the right to write to FS\n      writeFile(nodeCreatePath, appStateData);\n    } catch (Exception e) {\n      LOG.info(\"Error storing info for app: \" + appId, e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java"
    }
  }
}