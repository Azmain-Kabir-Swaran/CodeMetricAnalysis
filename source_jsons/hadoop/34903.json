{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyTokenSecretManager.java",
  "functionName": "createAndGetAMRMToken",
  "functionId": "createAndGetAMRMToken___appAttemptId-ApplicationAttemptId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java",
  "functionStartLine": 211,
  "functionEndLine": 226,
  "numCommitsSeen": 4,
  "timeTaken": 739,
  "changeHistory": [
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public Token\u003cAMRMTokenIdentifier\u003e createAndGetAMRMToken(\n+      ApplicationAttemptId appAttemptId) {\n+    this.writeLock.lock();\n+    try {\n+      LOG.info(\"Create AMRMToken for ApplicationAttempt: \" + appAttemptId);\n+      AMRMTokenIdentifier identifier \u003d\n+          new AMRMTokenIdentifier(appAttemptId, getMasterKey()\n+              .getMasterKey().getKeyId());\n+      byte[] password \u003d this.createPassword(identifier);\n+      appAttemptSet.add(appAttemptId);\n+      return new Token\u003cAMRMTokenIdentifier\u003e(identifier.getBytes(),\n+          password, identifier.getKind(), new Text());\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cAMRMTokenIdentifier\u003e createAndGetAMRMToken(\n      ApplicationAttemptId appAttemptId) {\n    this.writeLock.lock();\n    try {\n      LOG.info(\"Create AMRMToken for ApplicationAttempt: \" + appAttemptId);\n      AMRMTokenIdentifier identifier \u003d\n          new AMRMTokenIdentifier(appAttemptId, getMasterKey()\n              .getMasterKey().getKeyId());\n      byte[] password \u003d this.createPassword(identifier);\n      appAttemptSet.add(appAttemptId);\n      return new Token\u003cAMRMTokenIdentifier\u003e(identifier.getBytes(),\n          password, identifier.getKind(), new Text());\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java"
    }
  }
}