{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GpuDiscoverer.java",
  "functionName": "getGpusUsableByYarn",
  "functionId": "getGpusUsableByYarn",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
  "functionStartLine": 152,
  "functionEndLine": 164,
  "numCommitsSeen": 13,
  "timeTaken": 4331,
  "changeHistory": [
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
    "95fbbfed75dd309b5d56032ece64996165572287",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd"
  ],
  "changeHistoryShort": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": "Ybodychange",
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d": "Ybodychange",
    "95fbbfed75dd309b5d56032ece64996165572287": "Ybodychange",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko\n",
      "commitDate": "21/08/19 7:44 AM",
      "commitName": "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "02/08/19 2:24 AM",
      "commitNameOld": "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
      "commitAuthorOld": "Adam Antal",
      "daysBetweenCommits": 19.22,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n       throws YarnException {\n     validateConfOrThrowException();\n \n-    if (IsAutoDiscoveryEnabled()) {\n+    if (isAutoDiscoveryEnabled()) {\n       return parseGpuDevicesFromAutoDiscoveredGpuInfo();\n     } else {\n       if (gpuDevicesFromUser \u003d\u003d null) {\n         gpuDevicesFromUser \u003d parseGpuDevicesFromUserDefinedValues();\n       }\n       return gpuDevicesFromUser;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    if (isAutoDiscoveryEnabled()) {\n      return parseGpuDevicesFromAutoDiscoveredGpuInfo();\n    } else {\n      if (gpuDevicesFromUser \u003d\u003d null) {\n        gpuDevicesFromUser \u003d parseGpuDevicesFromUserDefinedValues();\n      }\n      return gpuDevicesFromUser;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9337. GPU auto-discovery script runs even when the resource is given by hand. Contributed by Adam Antal\n",
      "commitDate": "12/07/19 8:28 AM",
      "commitName": "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 118.67,
      "commitsBetweenForRepo": 819,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,13 @@\n   public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n       throws YarnException {\n     validateConfOrThrowException();\n \n-    String allowedDevicesStr \u003d conf.get(\n-        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n-        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n-\n-    if (allowedDevicesStr.equals(\n-        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n+    if (IsAutoDiscoveryEnabled()) {\n       return parseGpuDevicesFromAutoDiscoveredGpuInfo();\n     } else {\n-      return parseGpuDevicesFromUserDefinedValues(allowedDevicesStr);\n+      if (gpuDevicesFromUser \u003d\u003d null) {\n+        gpuDevicesFromUser \u003d parseGpuDevicesFromUserDefinedValues();\n+      }\n+      return gpuDevicesFromUser;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    if (IsAutoDiscoveryEnabled()) {\n      return parseGpuDevicesFromAutoDiscoveredGpuInfo();\n    } else {\n      if (gpuDevicesFromUser \u003d\u003d null) {\n        gpuDevicesFromUser \u003d parseGpuDevicesFromUserDefinedValues();\n      }\n      return gpuDevicesFromUser;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "95fbbfed75dd309b5d56032ece64996165572287": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9118. Handle exceptions with parsing user defined GPU devices in GpuDiscoverer. Contributed by Szilard Nemeth.\n",
      "commitDate": "22/02/19 6:52 AM",
      "commitName": "95fbbfed75dd309b5d56032ece64996165572287",
      "commitAuthor": "Sunil G",
      "commitDateOld": "28/10/17 10:38 PM",
      "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 481.38,
      "commitsBetweenForRepo": 4153,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,15 @@\n   public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n       throws YarnException {\n     validateConfOrThrowException();\n \n     String allowedDevicesStr \u003d conf.get(\n         YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n \n-    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n-\n     if (allowedDevicesStr.equals(\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n-      // Get gpu device information from system.\n-      if (null \u003d\u003d lastDiscoveredGpuInformation) {\n-        String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n-            + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n-            + \", however automatically discovering \"\n-            + \"GPU information failed, please check NodeManager log for more\"\n-            + \" details, as an alternative, admin can specify \"\n-            + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n-            + \" manually to enable GPU isolation.\";\n-        LOG.error(msg);\n-        throw new YarnException(msg);\n-      }\n-\n-      if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n-        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n-             i++) {\n-          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n-              lastDiscoveredGpuInformation.getGpus();\n-          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n-        }\n-      }\n-    } else{\n-      for (String s : allowedDevicesStr.split(\",\")) {\n-        if (s.trim().length() \u003e 0) {\n-          String[] kv \u003d s.trim().split(\":\");\n-          if (kv.length !\u003d 2) {\n-            throw new YarnException(\n-                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n-                    + s);\n-          }\n-\n-          gpuDevices.add(\n-              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n-        }\n-      }\n-      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n+      return parseGpuDevicesFromAutoDiscoveredGpuInfo();\n+    } else {\n+      return parseGpuDevicesFromUserDefinedValues(allowedDevicesStr);\n     }\n-\n-    return gpuDevices;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    String allowedDevicesStr \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    if (allowedDevicesStr.equals(\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n      return parseGpuDevicesFromAutoDiscoveredGpuInfo();\n    } else {\n      return parseGpuDevicesFromUserDefinedValues(allowedDevicesStr);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
      "commitDate": "28/10/17 10:38 PM",
      "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
          "commitDate": "28/10/17 10:38 PM",
          "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "11/10/17 11:14 AM",
          "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 17.48,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,52 @@\n-  public synchronized List\u003cInteger\u003e getMinorNumbersOfGpusUsableByYarn()\n+  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n       throws YarnException {\n     validateConfOrThrowException();\n \n     String allowedDevicesStr \u003d conf.get(\n         YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n \n-    List\u003cInteger\u003e minorNumbers \u003d new ArrayList\u003c\u003e();\n+    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n \n     if (allowedDevicesStr.equals(\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n       // Get gpu device information from system.\n       if (null \u003d\u003d lastDiscoveredGpuInformation) {\n         String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n             + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n             + \", however automatically discovering \"\n             + \"GPU information failed, please check NodeManager log for more\"\n             + \" details, as an alternative, admin can specify \"\n             + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n             + \" manually to enable GPU isolation.\";\n         LOG.error(msg);\n         throw new YarnException(msg);\n       }\n \n       if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n-        for (PerGpuDeviceInformation gpu : lastDiscoveredGpuInformation\n-            .getGpus()) {\n-          minorNumbers.add(gpu.getMinorNumber());\n+        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n+             i++) {\n+          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n+              lastDiscoveredGpuInformation.getGpus();\n+          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n         }\n       }\n     } else{\n       for (String s : allowedDevicesStr.split(\",\")) {\n         if (s.trim().length() \u003e 0) {\n-          minorNumbers.add(Integer.valueOf(s.trim()));\n+          String[] kv \u003d s.trim().split(\":\");\n+          if (kv.length !\u003d 2) {\n+            throw new YarnException(\n+                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n+                    + s);\n+          }\n+\n+          gpuDevices.add(\n+              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n         }\n       }\n-      LOG.info(\"Allowed GPU devices with minor numbers:\" + allowedDevicesStr);\n+      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n     }\n \n-    return minorNumbers;\n+    return gpuDevices;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    String allowedDevicesStr \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n\n    if (allowedDevicesStr.equals(\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n      // Get gpu device information from system.\n      if (null \u003d\u003d lastDiscoveredGpuInformation) {\n        String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n            + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n            + \", however automatically discovering \"\n            + \"GPU information failed, please check NodeManager log for more\"\n            + \" details, as an alternative, admin can specify \"\n            + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n            + \" manually to enable GPU isolation.\";\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n             i++) {\n          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n              lastDiscoveredGpuInformation.getGpus();\n          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n        }\n      }\n    } else{\n      for (String s : allowedDevicesStr.split(\",\")) {\n        if (s.trim().length() \u003e 0) {\n          String[] kv \u003d s.trim().split(\":\");\n          if (kv.length !\u003d 2) {\n            throw new YarnException(\n                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n                    + s);\n          }\n\n          gpuDevices.add(\n              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n        }\n      }\n      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n    }\n\n    return gpuDevices;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "getMinorNumbersOfGpusUsableByYarn",
            "newValue": "getGpusUsableByYarn"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
          "commitDate": "28/10/17 10:38 PM",
          "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "11/10/17 11:14 AM",
          "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 17.48,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,52 @@\n-  public synchronized List\u003cInteger\u003e getMinorNumbersOfGpusUsableByYarn()\n+  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n       throws YarnException {\n     validateConfOrThrowException();\n \n     String allowedDevicesStr \u003d conf.get(\n         YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n \n-    List\u003cInteger\u003e minorNumbers \u003d new ArrayList\u003c\u003e();\n+    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n \n     if (allowedDevicesStr.equals(\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n       // Get gpu device information from system.\n       if (null \u003d\u003d lastDiscoveredGpuInformation) {\n         String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n             + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n             + \", however automatically discovering \"\n             + \"GPU information failed, please check NodeManager log for more\"\n             + \" details, as an alternative, admin can specify \"\n             + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n             + \" manually to enable GPU isolation.\";\n         LOG.error(msg);\n         throw new YarnException(msg);\n       }\n \n       if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n-        for (PerGpuDeviceInformation gpu : lastDiscoveredGpuInformation\n-            .getGpus()) {\n-          minorNumbers.add(gpu.getMinorNumber());\n+        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n+             i++) {\n+          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n+              lastDiscoveredGpuInformation.getGpus();\n+          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n         }\n       }\n     } else{\n       for (String s : allowedDevicesStr.split(\",\")) {\n         if (s.trim().length() \u003e 0) {\n-          minorNumbers.add(Integer.valueOf(s.trim()));\n+          String[] kv \u003d s.trim().split(\":\");\n+          if (kv.length !\u003d 2) {\n+            throw new YarnException(\n+                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n+                    + s);\n+          }\n+\n+          gpuDevices.add(\n+              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n         }\n       }\n-      LOG.info(\"Allowed GPU devices with minor numbers:\" + allowedDevicesStr);\n+      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n     }\n \n-    return minorNumbers;\n+    return gpuDevices;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    String allowedDevicesStr \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n\n    if (allowedDevicesStr.equals(\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n      // Get gpu device information from system.\n      if (null \u003d\u003d lastDiscoveredGpuInformation) {\n        String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n            + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n            + \", however automatically discovering \"\n            + \"GPU information failed, please check NodeManager log for more\"\n            + \" details, as an alternative, admin can specify \"\n            + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n            + \" manually to enable GPU isolation.\";\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n             i++) {\n          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n              lastDiscoveredGpuInformation.getGpus();\n          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n        }\n      }\n    } else{\n      for (String s : allowedDevicesStr.split(\",\")) {\n        if (s.trim().length() \u003e 0) {\n          String[] kv \u003d s.trim().split(\":\");\n          if (kv.length !\u003d 2) {\n            throw new YarnException(\n                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n                    + s);\n          }\n\n          gpuDevices.add(\n              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n        }\n      }\n      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n    }\n\n    return gpuDevices;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "List\u003cInteger\u003e",
            "newValue": "List\u003cGpuDevice\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
          "commitDate": "28/10/17 10:38 PM",
          "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "11/10/17 11:14 AM",
          "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 17.48,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,52 @@\n-  public synchronized List\u003cInteger\u003e getMinorNumbersOfGpusUsableByYarn()\n+  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n       throws YarnException {\n     validateConfOrThrowException();\n \n     String allowedDevicesStr \u003d conf.get(\n         YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n \n-    List\u003cInteger\u003e minorNumbers \u003d new ArrayList\u003c\u003e();\n+    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n \n     if (allowedDevicesStr.equals(\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n       // Get gpu device information from system.\n       if (null \u003d\u003d lastDiscoveredGpuInformation) {\n         String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n             + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n             + \", however automatically discovering \"\n             + \"GPU information failed, please check NodeManager log for more\"\n             + \" details, as an alternative, admin can specify \"\n             + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n             + \" manually to enable GPU isolation.\";\n         LOG.error(msg);\n         throw new YarnException(msg);\n       }\n \n       if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n-        for (PerGpuDeviceInformation gpu : lastDiscoveredGpuInformation\n-            .getGpus()) {\n-          minorNumbers.add(gpu.getMinorNumber());\n+        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n+             i++) {\n+          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n+              lastDiscoveredGpuInformation.getGpus();\n+          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n         }\n       }\n     } else{\n       for (String s : allowedDevicesStr.split(\",\")) {\n         if (s.trim().length() \u003e 0) {\n-          minorNumbers.add(Integer.valueOf(s.trim()));\n+          String[] kv \u003d s.trim().split(\":\");\n+          if (kv.length !\u003d 2) {\n+            throw new YarnException(\n+                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n+                    + s);\n+          }\n+\n+          gpuDevices.add(\n+              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n         }\n       }\n-      LOG.info(\"Allowed GPU devices with minor numbers:\" + allowedDevicesStr);\n+      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n     }\n \n-    return minorNumbers;\n+    return gpuDevices;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized List\u003cGpuDevice\u003e getGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    String allowedDevicesStr \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    List\u003cGpuDevice\u003e gpuDevices \u003d new ArrayList\u003c\u003e();\n\n    if (allowedDevicesStr.equals(\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n      // Get gpu device information from system.\n      if (null \u003d\u003d lastDiscoveredGpuInformation) {\n        String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n            + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n            + \", however automatically discovering \"\n            + \"GPU information failed, please check NodeManager log for more\"\n            + \" details, as an alternative, admin can specify \"\n            + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n            + \" manually to enable GPU isolation.\";\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n        for (int i \u003d 0; i \u003c lastDiscoveredGpuInformation.getGpus().size();\n             i++) {\n          List\u003cPerGpuDeviceInformation\u003e gpuInfos \u003d\n              lastDiscoveredGpuInformation.getGpus();\n          gpuDevices.add(new GpuDevice(i, gpuInfos.get(i).getMinorNumber()));\n        }\n      }\n    } else{\n      for (String s : allowedDevicesStr.split(\",\")) {\n        if (s.trim().length() \u003e 0) {\n          String[] kv \u003d s.trim().split(\":\");\n          if (kv.length !\u003d 2) {\n            throw new YarnException(\n                \"Illegal format, it should be index:minor_number format, now it\u003d\"\n                    + s);\n          }\n\n          gpuDevices.add(\n              new GpuDevice(Integer.parseInt(kv[0]), Integer.parseInt(kv[1])));\n        }\n      }\n      LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n    }\n\n    return gpuDevices;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {}
        }
      ]
    },
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6620. Add support in NodeManager to isolate GPU devices by using CGroups. Contributed by Wangda Tan.\n",
      "commitDate": "11/10/17 11:14 AM",
      "commitName": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,42 @@\n+  public synchronized List\u003cInteger\u003e getMinorNumbersOfGpusUsableByYarn()\n+      throws YarnException {\n+    validateConfOrThrowException();\n+\n+    String allowedDevicesStr \u003d conf.get(\n+        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n+        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n+\n+    List\u003cInteger\u003e minorNumbers \u003d new ArrayList\u003c\u003e();\n+\n+    if (allowedDevicesStr.equals(\n+        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n+      // Get gpu device information from system.\n+      if (null \u003d\u003d lastDiscoveredGpuInformation) {\n+        String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n+            + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n+            + \", however automatically discovering \"\n+            + \"GPU information failed, please check NodeManager log for more\"\n+            + \" details, as an alternative, admin can specify \"\n+            + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n+            + \" manually to enable GPU isolation.\";\n+        LOG.error(msg);\n+        throw new YarnException(msg);\n+      }\n+\n+      if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n+        for (PerGpuDeviceInformation gpu : lastDiscoveredGpuInformation\n+            .getGpus()) {\n+          minorNumbers.add(gpu.getMinorNumber());\n+        }\n+      }\n+    } else{\n+      for (String s : allowedDevicesStr.split(\",\")) {\n+        if (s.trim().length() \u003e 0) {\n+          minorNumbers.add(Integer.valueOf(s.trim()));\n+        }\n+      }\n+      LOG.info(\"Allowed GPU devices with minor numbers:\" + allowedDevicesStr);\n+    }\n+\n+    return minorNumbers;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized List\u003cInteger\u003e getMinorNumbersOfGpusUsableByYarn()\n      throws YarnException {\n    validateConfOrThrowException();\n\n    String allowedDevicesStr \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    List\u003cInteger\u003e minorNumbers \u003d new ArrayList\u003c\u003e();\n\n    if (allowedDevicesStr.equals(\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES)) {\n      // Get gpu device information from system.\n      if (null \u003d\u003d lastDiscoveredGpuInformation) {\n        String msg \u003d YarnConfiguration.NM_GPU_ALLOWED_DEVICES + \" is set to \"\n            + YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES\n            + \", however automatically discovering \"\n            + \"GPU information failed, please check NodeManager log for more\"\n            + \" details, as an alternative, admin can specify \"\n            + YarnConfiguration.NM_GPU_ALLOWED_DEVICES\n            + \" manually to enable GPU isolation.\";\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n\n      if (lastDiscoveredGpuInformation.getGpus() !\u003d null) {\n        for (PerGpuDeviceInformation gpu : lastDiscoveredGpuInformation\n            .getGpus()) {\n          minorNumbers.add(gpu.getMinorNumber());\n        }\n      }\n    } else{\n      for (String s : allowedDevicesStr.split(\",\")) {\n        if (s.trim().length() \u003e 0) {\n          minorNumbers.add(Integer.valueOf(s.trim()));\n        }\n      }\n      LOG.info(\"Allowed GPU devices with minor numbers:\" + allowedDevicesStr);\n    }\n\n    return minorNumbers;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java"
    }
  }
}