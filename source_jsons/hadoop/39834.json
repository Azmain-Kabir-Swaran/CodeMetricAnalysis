{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableCSConfigurationProvider.java",
  "functionName": "constructKeyValueConfUpdate",
  "functionId": "constructKeyValueConfUpdate___proposedConf-CapacitySchedulerConfiguration__mutationInfo-SchedConfUpdateInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
  "functionStartLine": 237,
  "functionEndLine": 256,
  "numCommitsSeen": 118,
  "timeTaken": 6228,
  "changeHistory": [
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
    "e566fd8b58a6570593b21597aa5294d7b37cb388",
    "a4e62530469e4c3d5b339a06adeac2146fc15fa5",
    "d8a5136b1f3761166a08969eda7a7f66d1578d7e"
  ],
  "changeHistoryShort": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": "Ymultichange(Yparameterchange,Ybodychange)",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Ybodychange",
    "e566fd8b58a6570593b21597aa5294d7b37cb388": "Ymultichange(Yparameterchange,Ybodychange)",
    "a4e62530469e4c3d5b339a06adeac2146fc15fa5": "Ymultichange(Ymovefromfile,Ybodychange)",
    "d8a5136b1f3761166a08969eda7a7f66d1578d7e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-10022. RM Rest API to validate the CapacityScheduler Configuration change\n\nContributed by Kinga Marton.\n",
      "commitDate": "28/01/20 9:46 AM",
      "commitName": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
      "commitAuthor": "Prabhu Joseph",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-10022. RM Rest API to validate the CapacityScheduler Configuration change\n\nContributed by Kinga Marton.\n",
          "commitDate": "28/01/20 9:46 AM",
          "commitName": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
          "commitAuthor": "Prabhu Joseph",
          "commitDateOld": "14/01/20 3:26 AM",
          "commitNameOld": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 14.26,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n+      CapacitySchedulerConfiguration proposedConf,\n       SchedConfUpdateInfo mutationInfo) throws IOException {\n-    CapacitySchedulerConfiguration proposedConf \u003d\n-        new CapacitySchedulerConfiguration(schedConf, false);\n+\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n     for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n         .entrySet()) {\n       confUpdate.put(global.getKey(), global.getValue());\n     }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      CapacitySchedulerConfiguration proposedConf,\n      SchedConfUpdateInfo mutationInfo) throws IOException {\n\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n        .entrySet()) {\n      confUpdate.put(global.getKey(), global.getValue());\n    }\n    return confUpdate;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {
            "oldValue": "[mutationInfo-SchedConfUpdateInfo]",
            "newValue": "[proposedConf-CapacitySchedulerConfiguration, mutationInfo-SchedConfUpdateInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10022. RM Rest API to validate the CapacityScheduler Configuration change\n\nContributed by Kinga Marton.\n",
          "commitDate": "28/01/20 9:46 AM",
          "commitName": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
          "commitAuthor": "Prabhu Joseph",
          "commitDateOld": "14/01/20 3:26 AM",
          "commitNameOld": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 14.26,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n+      CapacitySchedulerConfiguration proposedConf,\n       SchedConfUpdateInfo mutationInfo) throws IOException {\n-    CapacitySchedulerConfiguration proposedConf \u003d\n-        new CapacitySchedulerConfiguration(schedConf, false);\n+\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n     for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n         .entrySet()) {\n       confUpdate.put(global.getKey(), global.getValue());\n     }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      CapacitySchedulerConfiguration proposedConf,\n      SchedConfUpdateInfo mutationInfo) throws IOException {\n\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n        .entrySet()) {\n      confUpdate.put(global.getKey(), global.getValue());\n    }\n    return confUpdate;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "4c8b208adb8c7639628676387e275856cf0842c9",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n       SchedConfUpdateInfo mutationInfo) throws IOException {\n-    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n     CapacitySchedulerConfiguration proposedConf \u003d\n-        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n+        new CapacitySchedulerConfiguration(schedConf, false);\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n     for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n         .entrySet()) {\n       confUpdate.put(global.getKey(), global.getValue());\n     }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      SchedConfUpdateInfo mutationInfo) throws IOException {\n    CapacitySchedulerConfiguration proposedConf \u003d\n        new CapacitySchedulerConfiguration(schedConf, false);\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n        .entrySet()) {\n      confUpdate.put(global.getKey(), global.getValue());\n    }\n    return confUpdate;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
      "extendedDetails": {}
    },
    "e566fd8b58a6570593b21597aa5294d7b37cb388": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6575. Support global configuration mutation in MutableConfProvider. (Jonathan Hung via Xuan Gong)\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "e566fd8b58a6570593b21597aa5294d7b37cb388",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6575. Support global configuration mutation in MutableConfProvider. (Jonathan Hung via Xuan Gong)\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "e566fd8b58a6570593b21597aa5294d7b37cb388",
          "commitAuthor": "Xuan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "a4e62530469e4c3d5b339a06adeac2146fc15fa5",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n-      QueueConfigsUpdateInfo mutationInfo) throws IOException {\n+      SchedConfUpdateInfo mutationInfo) throws IOException {\n     CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n     CapacitySchedulerConfiguration proposedConf \u003d\n         new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n+    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n+        .entrySet()) {\n+      confUpdate.put(global.getKey(), global.getValue());\n+    }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      SchedConfUpdateInfo mutationInfo) throws IOException {\n    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n    CapacitySchedulerConfiguration proposedConf \u003d\n        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n        .entrySet()) {\n      confUpdate.put(global.getKey(), global.getValue());\n    }\n    return confUpdate;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {
            "oldValue": "[mutationInfo-QueueConfigsUpdateInfo]",
            "newValue": "[mutationInfo-SchedConfUpdateInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6575. Support global configuration mutation in MutableConfProvider. (Jonathan Hung via Xuan Gong)\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "e566fd8b58a6570593b21597aa5294d7b37cb388",
          "commitAuthor": "Xuan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "a4e62530469e4c3d5b339a06adeac2146fc15fa5",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n-      QueueConfigsUpdateInfo mutationInfo) throws IOException {\n+      SchedConfUpdateInfo mutationInfo) throws IOException {\n     CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n     CapacitySchedulerConfiguration proposedConf \u003d\n         new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n+    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n+        .entrySet()) {\n+      confUpdate.put(global.getKey(), global.getValue());\n+    }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      SchedConfUpdateInfo mutationInfo) throws IOException {\n    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n    CapacitySchedulerConfiguration proposedConf \u003d\n        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    for (Map.Entry\u003cString, String\u003e global : mutationInfo.getGlobalParams()\n        .entrySet()) {\n      confUpdate.put(global.getKey(), global.getValue());\n    }\n    return confUpdate;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "a4e62530469e4c3d5b339a06adeac2146fc15fa5": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-5949. Add pluggable configuration ACL policy interface and implementation. (Jonathan Hung via wangda)\n\nChange-Id: Ib98e82ff753bede21fcab2e6ca9ec1e7a5a2008f\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "a4e62530469e4c3d5b339a06adeac2146fc15fa5",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5949. Add pluggable configuration ACL policy interface and implementation. (Jonathan Hung via wangda)\n\nChange-Id: Ib98e82ff753bede21fcab2e6ca9ec1e7a5a2008f\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "a4e62530469e4c3d5b339a06adeac2146fc15fa5",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "d8a5136b1f3761166a08969eda7a7f66d1578d7e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n       QueueConfigsUpdateInfo mutationInfo) throws IOException {\n-    CapacitySchedulerConfiguration currentConf \u003d\n-        ((CapacityScheduler) rm.getResourceScheduler()).getConfiguration();\n+    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n     CapacitySchedulerConfiguration proposedConf \u003d\n-        new CapacitySchedulerConfiguration(currentConf, false);\n+        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      QueueConfigsUpdateInfo mutationInfo) throws IOException {\n    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n    CapacitySchedulerConfiguration proposedConf \u003d\n        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    return confUpdate;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
            "oldMethodName": "constructKeyValueConfUpdate",
            "newMethodName": "constructKeyValueConfUpdate"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5949. Add pluggable configuration ACL policy interface and implementation. (Jonathan Hung via wangda)\n\nChange-Id: Ib98e82ff753bede21fcab2e6ca9ec1e7a5a2008f\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "a4e62530469e4c3d5b339a06adeac2146fc15fa5",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "d8a5136b1f3761166a08969eda7a7f66d1578d7e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n   private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n       QueueConfigsUpdateInfo mutationInfo) throws IOException {\n-    CapacitySchedulerConfiguration currentConf \u003d\n-        ((CapacityScheduler) rm.getResourceScheduler()).getConfiguration();\n+    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n     CapacitySchedulerConfiguration proposedConf \u003d\n-        new CapacitySchedulerConfiguration(currentConf, false);\n+        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n     Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n     for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n       removeQueue(queueToRemove, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n       addQueue(addQueueInfo, proposedConf, confUpdate);\n     }\n     for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n       updateQueue(updateQueueInfo, proposedConf, confUpdate);\n     }\n     return confUpdate;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      QueueConfigsUpdateInfo mutationInfo) throws IOException {\n    CapacityScheduler cs \u003d (CapacityScheduler) rmContext.getScheduler();\n    CapacitySchedulerConfiguration proposedConf \u003d\n        new CapacitySchedulerConfiguration(cs.getConfiguration(), false);\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    return confUpdate;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "d8a5136b1f3761166a08969eda7a7f66d1578d7e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5952. Create REST API for changing YARN scheduler configurations. (Jonathan Hung via wangda)\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "d8a5136b1f3761166a08969eda7a7f66d1578d7e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n+      QueueConfigsUpdateInfo mutationInfo) throws IOException {\n+    CapacitySchedulerConfiguration currentConf \u003d\n+        ((CapacityScheduler) rm.getResourceScheduler()).getConfiguration();\n+    CapacitySchedulerConfiguration proposedConf \u003d\n+        new CapacitySchedulerConfiguration(currentConf, false);\n+    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n+    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n+      removeQueue(queueToRemove, proposedConf, confUpdate);\n+    }\n+    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n+      addQueue(addQueueInfo, proposedConf, confUpdate);\n+    }\n+    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n+      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n+    }\n+    return confUpdate;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e constructKeyValueConfUpdate(\n      QueueConfigsUpdateInfo mutationInfo) throws IOException {\n    CapacitySchedulerConfiguration currentConf \u003d\n        ((CapacityScheduler) rm.getResourceScheduler()).getConfiguration();\n    CapacitySchedulerConfiguration proposedConf \u003d\n        new CapacitySchedulerConfiguration(currentConf, false);\n    Map\u003cString, String\u003e confUpdate \u003d new HashMap\u003c\u003e();\n    for (String queueToRemove : mutationInfo.getRemoveQueueInfo()) {\n      removeQueue(queueToRemove, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo addQueueInfo : mutationInfo.getAddQueueInfo()) {\n      addQueue(addQueueInfo, proposedConf, confUpdate);\n    }\n    for (QueueConfigInfo updateQueueInfo : mutationInfo.getUpdateQueueInfo()) {\n      updateQueue(updateQueueInfo, proposedConf, confUpdate);\n    }\n    return confUpdate;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}