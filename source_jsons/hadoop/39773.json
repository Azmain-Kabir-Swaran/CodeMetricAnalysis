{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UsersManager.java",
  "functionName": "activateApplication",
  "functionId": "activateApplication___user-String__applicationId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
  "functionStartLine": 849,
  "functionEndLine": 877,
  "numCommitsSeen": 13,
  "timeTaken": 3284,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "9485c9aee6e9bb935c3e6ae4da81d70b621781de",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "9485c9aee6e9bb935c3e6ae4da81d70b621781de": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,29 @@\n   public void activateApplication(String user, ApplicationId applicationId) {\n \n     this.writeLock.lock();\n     try {\n       User userDesc \u003d getUser(user);\n       if (userDesc !\u003d null \u0026\u0026 userDesc.getActiveApplications() \u003c\u003d 0) {\n         return;\n       }\n \n       Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n       if (userApps \u003d\u003d null) {\n         userApps \u003d new HashSet\u003cApplicationId\u003e();\n         usersApplications.put(user, userApps);\n         activeUsers.incrementAndGet();\n         metrics.incrActiveUsers();\n \n         // A user is added to active list. Invalidate user-limit cache.\n         userLimitNeedsRecompute();\n         updateActiveUsersResourceUsage(user);\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n-              + activeUsers);\n-        }\n+        LOG.debug(\"User {} added to activeUsers, currently: {}\",\n+            user, activeUsers);\n       }\n       if (userApps.add(applicationId)) {\n         metrics.activateApp(user);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void activateApplication(String user, ApplicationId applicationId) {\n\n    this.writeLock.lock();\n    try {\n      User userDesc \u003d getUser(user);\n      if (userDesc !\u003d null \u0026\u0026 userDesc.getActiveApplications() \u003c\u003d 0) {\n        return;\n      }\n\n      Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n      if (userApps \u003d\u003d null) {\n        userApps \u003d new HashSet\u003cApplicationId\u003e();\n        usersApplications.put(user, userApps);\n        activeUsers.incrementAndGet();\n        metrics.incrActiveUsers();\n\n        // A user is added to active list. Invalidate user-limit cache.\n        userLimitNeedsRecompute();\n        updateActiveUsersResourceUsage(user);\n        LOG.debug(\"User {} added to activeUsers, currently: {}\",\n            user, activeUsers);\n      }\n      if (userApps.add(applicationId)) {\n        metrics.activateApp(user);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public void activateApplication(String user, ApplicationId applicationId) {\n-    try {\n-      this.writeLock.lock();\n \n+    this.writeLock.lock();\n+    try {\n       User userDesc \u003d getUser(user);\n       if (userDesc !\u003d null \u0026\u0026 userDesc.getActiveApplications() \u003c\u003d 0) {\n         return;\n       }\n \n       Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n       if (userApps \u003d\u003d null) {\n         userApps \u003d new HashSet\u003cApplicationId\u003e();\n         usersApplications.put(user, userApps);\n         activeUsers.incrementAndGet();\n         metrics.incrActiveUsers();\n \n         // A user is added to active list. Invalidate user-limit cache.\n         userLimitNeedsRecompute();\n         updateActiveUsersResourceUsage(user);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n               + activeUsers);\n         }\n       }\n       if (userApps.add(applicationId)) {\n         metrics.activateApp(user);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void activateApplication(String user, ApplicationId applicationId) {\n\n    this.writeLock.lock();\n    try {\n      User userDesc \u003d getUser(user);\n      if (userDesc !\u003d null \u0026\u0026 userDesc.getActiveApplications() \u003c\u003d 0) {\n        return;\n      }\n\n      Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n      if (userApps \u003d\u003d null) {\n        userApps \u003d new HashSet\u003cApplicationId\u003e();\n        usersApplications.put(user, userApps);\n        activeUsers.incrementAndGet();\n        metrics.incrActiveUsers();\n\n        // A user is added to active list. Invalidate user-limit cache.\n        userLimitNeedsRecompute();\n        updateActiveUsersResourceUsage(user);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n              + activeUsers);\n        }\n      }\n      if (userApps.add(applicationId)) {\n        metrics.activateApp(user);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "9485c9aee6e9bb935c3e6ae4da81d70b621781de": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4606. CapacityScheduler: applications could get starved because computation of #activeUsers considers pending apps. Contributed by Manikandan R\n",
      "commitDate": "25/07/18 9:22 AM",
      "commitName": "9485c9aee6e9bb935c3e6ae4da81d70b621781de",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "06/05/18 8:33 PM",
      "commitNameOld": "67f239c42f676237290d18ddbbc9aec369267692",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 79.53,
      "commitsBetweenForRepo": 580,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,31 @@\n   public void activateApplication(String user, ApplicationId applicationId) {\n     try {\n       this.writeLock.lock();\n \n+      User userDesc \u003d getUser(user);\n+      if (userDesc !\u003d null \u0026\u0026 userDesc.getActiveApplications() \u003c\u003d 0) {\n+        return;\n+      }\n+\n       Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n       if (userApps \u003d\u003d null) {\n         userApps \u003d new HashSet\u003cApplicationId\u003e();\n         usersApplications.put(user, userApps);\n         activeUsers.incrementAndGet();\n         metrics.incrActiveUsers();\n \n         // A user is added to active list. Invalidate user-limit cache.\n         userLimitNeedsRecompute();\n         updateActiveUsersResourceUsage(user);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n               + activeUsers);\n         }\n       }\n       if (userApps.add(applicationId)) {\n         metrics.activateApp(user);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void activateApplication(String user, ApplicationId applicationId) {\n    try {\n      this.writeLock.lock();\n\n      User userDesc \u003d getUser(user);\n      if (userDesc !\u003d null \u0026\u0026 userDesc.getActiveApplications() \u003c\u003d 0) {\n        return;\n      }\n\n      Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n      if (userApps \u003d\u003d null) {\n        userApps \u003d new HashSet\u003cApplicationId\u003e();\n        usersApplications.put(user, userApps);\n        activeUsers.incrementAndGet();\n        metrics.incrActiveUsers();\n\n        // A user is added to active list. Invalidate user-limit cache.\n        userLimitNeedsRecompute();\n        updateActiveUsersResourceUsage(user);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n              + activeUsers);\n        }\n      }\n      if (userApps.add(applicationId)) {\n        metrics.activateApp(user);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+  public void activateApplication(String user, ApplicationId applicationId) {\n+    try {\n+      this.writeLock.lock();\n+\n+      Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n+      if (userApps \u003d\u003d null) {\n+        userApps \u003d new HashSet\u003cApplicationId\u003e();\n+        usersApplications.put(user, userApps);\n+        activeUsers.incrementAndGet();\n+        metrics.incrActiveUsers();\n+\n+        // A user is added to active list. Invalidate user-limit cache.\n+        userLimitNeedsRecompute();\n+        updateActiveUsersResourceUsage(user);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n+              + activeUsers);\n+        }\n+      }\n+      if (userApps.add(applicationId)) {\n+        metrics.activateApp(user);\n+      }\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void activateApplication(String user, ApplicationId applicationId) {\n    try {\n      this.writeLock.lock();\n\n      Set\u003cApplicationId\u003e userApps \u003d usersApplications.get(user);\n      if (userApps \u003d\u003d null) {\n        userApps \u003d new HashSet\u003cApplicationId\u003e();\n        usersApplications.put(user, userApps);\n        activeUsers.incrementAndGet();\n        metrics.incrActiveUsers();\n\n        // A user is added to active list. Invalidate user-limit cache.\n        userLimitNeedsRecompute();\n        updateActiveUsersResourceUsage(user);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"User \" + user + \" added to activeUsers, currently: \"\n              + activeUsers);\n        }\n      }\n      if (userApps.add(applicationId)) {\n        metrics.activateApp(user);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java"
    }
  }
}