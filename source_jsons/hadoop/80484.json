{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystem.java",
  "functionName": "getTrashRoots",
  "functionId": "getTrashRoots___allUsers-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
  "functionStartLine": 3258,
  "functionEndLine": 3284,
  "numCommitsSeen": 143,
  "timeTaken": 3853,
  "changeHistory": [
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
    "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf"
  ],
  "changeHistoryShort": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": "Ybodychange",
    "0fb14aaced7afdbbb72e59316c186ebf6ec2d091": "Ymultichange(Yexceptionschange,Ybodychange)",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "16/11/16 8:08 PM",
      "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 6.86,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers) {\n     Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n     List\u003cFileStatus\u003e ret \u003d new ArrayList\u003c\u003e();\n     try {\n       if (!allUsers) {\n         Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n         if (exists(userTrash)) {\n           ret.add(getFileStatus(userTrash));\n         }\n       } else {\n         Path homeParent \u003d userHome.getParent();\n         if (exists(homeParent)) {\n           FileStatus[] candidates \u003d listStatus(homeParent);\n           for (FileStatus candidate : candidates) {\n             Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n             if (exists(userTrash)) {\n               candidate.setPath(userTrash);\n               ret.add(candidate);\n             }\n           }\n         }\n       }\n     } catch (IOException e) {\n-      LOG.warn(\"Cannot get all trash roots\", e);\n+      LOGGER.warn(\"Cannot get all trash roots\", e);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers) {\n    Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003c\u003e();\n    try {\n      if (!allUsers) {\n        Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n        if (exists(userTrash)) {\n          ret.add(getFileStatus(userTrash));\n        }\n      } else {\n        Path homeParent \u003d userHome.getParent();\n        if (exists(homeParent)) {\n          FileStatus[] candidates \u003d listStatus(homeParent);\n          for (FileStatus candidate : candidates) {\n            Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n            if (exists(userTrash)) {\n              candidate.setPath(userTrash);\n              ret.add(candidate);\n            }\n          }\n        }\n      }\n    } catch (IOException e) {\n      LOGGER.warn(\"Cannot get all trash roots\", e);\n    }\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "0fb14aaced7afdbbb72e59316c186ebf6ec2d091": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-9799. Reimplement getCurrentTrashDir to remove incompatibility. (zhz)\n\nChange-Id: I7834bcebffed38cb384db5395ddb8b6dd9e79a0b\n",
      "commitDate": "17/02/16 1:30 PM",
      "commitName": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-9799. Reimplement getCurrentTrashDir to remove incompatibility. (zhz)\n\nChange-Id: I7834bcebffed38cb384db5395ddb8b6dd9e79a0b\n",
          "commitDate": "17/02/16 1:30 PM",
          "commitName": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "16/02/16 8:43 PM",
          "commitNameOld": "96ea3094315bb1e1a5e268e3817c7fdedc3e9462",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,27 @@\n-  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers)\n-      throws IOException {\n+  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers) {\n     Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n-    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003cFileStatus\u003e();\n-    if (!allUsers) {\n-      Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n-      if (exists(userTrash)) {\n-        ret.add(getFileStatus(userTrash));\n-      }\n-    } else {\n-      Path homeParent \u003d userHome.getParent();\n-      if (exists(homeParent)) {\n-        FileStatus[] candidates \u003d listStatus(homeParent);\n-        for (FileStatus candidate : candidates) {\n-          Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n-          if (exists(userTrash)) {\n-            candidate.setPath(userTrash);\n-            ret.add(candidate);\n+    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003c\u003e();\n+    try {\n+      if (!allUsers) {\n+        Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n+        if (exists(userTrash)) {\n+          ret.add(getFileStatus(userTrash));\n+        }\n+      } else {\n+        Path homeParent \u003d userHome.getParent();\n+        if (exists(homeParent)) {\n+          FileStatus[] candidates \u003d listStatus(homeParent);\n+          for (FileStatus candidate : candidates) {\n+            Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n+            if (exists(userTrash)) {\n+              candidate.setPath(userTrash);\n+              ret.add(candidate);\n+            }\n           }\n         }\n       }\n+    } catch (IOException e) {\n+      LOG.warn(\"Cannot get all trash roots\", e);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers) {\n    Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003c\u003e();\n    try {\n      if (!allUsers) {\n        Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n        if (exists(userTrash)) {\n          ret.add(getFileStatus(userTrash));\n        }\n      } else {\n        Path homeParent \u003d userHome.getParent();\n        if (exists(homeParent)) {\n          FileStatus[] candidates \u003d listStatus(homeParent);\n          for (FileStatus candidate : candidates) {\n            Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n            if (exists(userTrash)) {\n              candidate.setPath(userTrash);\n              ret.add(candidate);\n            }\n          }\n        }\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Cannot get all trash roots\", e);\n    }\n    return ret;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9799. Reimplement getCurrentTrashDir to remove incompatibility. (zhz)\n\nChange-Id: I7834bcebffed38cb384db5395ddb8b6dd9e79a0b\n",
          "commitDate": "17/02/16 1:30 PM",
          "commitName": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "16/02/16 8:43 PM",
          "commitNameOld": "96ea3094315bb1e1a5e268e3817c7fdedc3e9462",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,27 @@\n-  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers)\n-      throws IOException {\n+  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers) {\n     Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n-    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003cFileStatus\u003e();\n-    if (!allUsers) {\n-      Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n-      if (exists(userTrash)) {\n-        ret.add(getFileStatus(userTrash));\n-      }\n-    } else {\n-      Path homeParent \u003d userHome.getParent();\n-      if (exists(homeParent)) {\n-        FileStatus[] candidates \u003d listStatus(homeParent);\n-        for (FileStatus candidate : candidates) {\n-          Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n-          if (exists(userTrash)) {\n-            candidate.setPath(userTrash);\n-            ret.add(candidate);\n+    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003c\u003e();\n+    try {\n+      if (!allUsers) {\n+        Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n+        if (exists(userTrash)) {\n+          ret.add(getFileStatus(userTrash));\n+        }\n+      } else {\n+        Path homeParent \u003d userHome.getParent();\n+        if (exists(homeParent)) {\n+          FileStatus[] candidates \u003d listStatus(homeParent);\n+          for (FileStatus candidate : candidates) {\n+            Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n+            if (exists(userTrash)) {\n+              candidate.setPath(userTrash);\n+              ret.add(candidate);\n+            }\n           }\n         }\n       }\n+    } catch (IOException e) {\n+      LOG.warn(\"Cannot get all trash roots\", e);\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers) {\n    Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003c\u003e();\n    try {\n      if (!allUsers) {\n        Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n        if (exists(userTrash)) {\n          ret.add(getFileStatus(userTrash));\n        }\n      } else {\n        Path homeParent \u003d userHome.getParent();\n        if (exists(homeParent)) {\n          FileStatus[] candidates \u003d listStatus(homeParent);\n          for (FileStatus candidate : candidates) {\n            Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n            if (exists(userTrash)) {\n              candidate.setPath(userTrash);\n              ret.add(candidate);\n            }\n          }\n        }\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Cannot get all trash roots\", e);\n    }\n    return ret;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8831. Trash Support for deletion in HDFS encryption zone. Contributed by Xiaoyu Yao.\n",
      "commitDate": "04/12/15 10:39 AM",
      "commitName": "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,24 @@\n+  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers)\n+      throws IOException {\n+    Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n+    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003cFileStatus\u003e();\n+    if (!allUsers) {\n+      Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n+      if (exists(userTrash)) {\n+        ret.add(getFileStatus(userTrash));\n+      }\n+    } else {\n+      Path homeParent \u003d userHome.getParent();\n+      if (exists(homeParent)) {\n+        FileStatus[] candidates \u003d listStatus(homeParent);\n+        for (FileStatus candidate : candidates) {\n+          Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n+          if (exists(userTrash)) {\n+            candidate.setPath(userTrash);\n+            ret.add(candidate);\n+          }\n+        }\n+      }\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Collection\u003cFileStatus\u003e getTrashRoots(boolean allUsers)\n      throws IOException {\n    Path userHome \u003d new Path(getHomeDirectory().toUri().getPath());\n    List\u003cFileStatus\u003e ret \u003d new ArrayList\u003cFileStatus\u003e();\n    if (!allUsers) {\n      Path userTrash \u003d new Path(userHome, TRASH_PREFIX);\n      if (exists(userTrash)) {\n        ret.add(getFileStatus(userTrash));\n      }\n    } else {\n      Path homeParent \u003d userHome.getParent();\n      if (exists(homeParent)) {\n        FileStatus[] candidates \u003d listStatus(homeParent);\n        for (FileStatus candidate : candidates) {\n          Path userTrash \u003d new Path(candidate.getPath(), TRASH_PREFIX);\n          if (exists(userTrash)) {\n            candidate.setPath(userTrash);\n            ret.add(candidate);\n          }\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}