{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Apps.java",
  "functionName": "getEnvVarsFromInputProperty",
  "functionId": "getEnvVarsFromInputProperty___propName-String__defaultPropValue-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
  "functionStartLine": 219,
  "functionEndLine": 226,
  "numCommitsSeen": 36,
  "timeTaken": 3379,
  "changeHistory": [
    "be539690477f7fee8f836bf3612cbe7ff6a3506e",
    "d69b31f7f70f296ddd180e004fa0f827c2f737f2"
  ],
  "changeHistoryShort": {
    "be539690477f7fee8f836bf3612cbe7ff6a3506e": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "d69b31f7f70f296ddd180e004fa0f827c2f737f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "be539690477f7fee8f836bf3612cbe7ff6a3506e": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-8071. Add ability to specify nodemanager environment variables individually. Contributed by Jim Brennan\n",
      "commitDate": "16/05/18 2:17 PM",
      "commitName": "be539690477f7fee8f836bf3612cbe7ff6a3506e",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-8071. Add ability to specify nodemanager environment variables individually. Contributed by Jim Brennan\n",
          "commitDate": "16/05/18 2:17 PM",
          "commitName": "be539690477f7fee8f836bf3612cbe7ff6a3506e",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "12/04/18 9:12 AM",
          "commitNameOld": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 34.21,
          "commitsBetweenForRepo": 751,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  public static ArrayList\u003cString\u003e getEnvVarsFromInputString(String envString,\n-      String classPathSeparator) {\n-    ArrayList\u003cString\u003e envList \u003d new ArrayList\u003c\u003e();\n-    if (envString !\u003d null \u0026\u0026 envString.length() \u003e 0) {\n-      Matcher varValMatcher \u003d VARVAL_SPLITTER.matcher(envString);\n-      while (varValMatcher.find()) {\n-        String envVar \u003d varValMatcher.group(1);\n-        envList.add(envVar);\n-      }\n-    }\n-    return envList;\n+  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n+      String propName, String defaultPropValue, Configuration conf) {\n+    String envString \u003d conf.get(propName, defaultPropValue);\n+    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n+    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n+    varSet.addAll(propMap.keySet());\n+    return varSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n      String propName, String defaultPropValue, Configuration conf) {\n    String envString \u003d conf.get(propName, defaultPropValue);\n    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n    varSet.addAll(propMap.keySet());\n    return varSet;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
          "extendedDetails": {
            "oldValue": "getEnvVarsFromInputString",
            "newValue": "getEnvVarsFromInputProperty"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8071. Add ability to specify nodemanager environment variables individually. Contributed by Jim Brennan\n",
          "commitDate": "16/05/18 2:17 PM",
          "commitName": "be539690477f7fee8f836bf3612cbe7ff6a3506e",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "12/04/18 9:12 AM",
          "commitNameOld": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 34.21,
          "commitsBetweenForRepo": 751,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  public static ArrayList\u003cString\u003e getEnvVarsFromInputString(String envString,\n-      String classPathSeparator) {\n-    ArrayList\u003cString\u003e envList \u003d new ArrayList\u003c\u003e();\n-    if (envString !\u003d null \u0026\u0026 envString.length() \u003e 0) {\n-      Matcher varValMatcher \u003d VARVAL_SPLITTER.matcher(envString);\n-      while (varValMatcher.find()) {\n-        String envVar \u003d varValMatcher.group(1);\n-        envList.add(envVar);\n-      }\n-    }\n-    return envList;\n+  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n+      String propName, String defaultPropValue, Configuration conf) {\n+    String envString \u003d conf.get(propName, defaultPropValue);\n+    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n+    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n+    varSet.addAll(propMap.keySet());\n+    return varSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n      String propName, String defaultPropValue, Configuration conf) {\n    String envString \u003d conf.get(propName, defaultPropValue);\n    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n    varSet.addAll(propMap.keySet());\n    return varSet;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
          "extendedDetails": {
            "oldValue": "[envString-String, classPathSeparator-String]",
            "newValue": "[propName-String, defaultPropValue-String, conf-Configuration]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-8071. Add ability to specify nodemanager environment variables individually. Contributed by Jim Brennan\n",
          "commitDate": "16/05/18 2:17 PM",
          "commitName": "be539690477f7fee8f836bf3612cbe7ff6a3506e",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "12/04/18 9:12 AM",
          "commitNameOld": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 34.21,
          "commitsBetweenForRepo": 751,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  public static ArrayList\u003cString\u003e getEnvVarsFromInputString(String envString,\n-      String classPathSeparator) {\n-    ArrayList\u003cString\u003e envList \u003d new ArrayList\u003c\u003e();\n-    if (envString !\u003d null \u0026\u0026 envString.length() \u003e 0) {\n-      Matcher varValMatcher \u003d VARVAL_SPLITTER.matcher(envString);\n-      while (varValMatcher.find()) {\n-        String envVar \u003d varValMatcher.group(1);\n-        envList.add(envVar);\n-      }\n-    }\n-    return envList;\n+  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n+      String propName, String defaultPropValue, Configuration conf) {\n+    String envString \u003d conf.get(propName, defaultPropValue);\n+    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n+    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n+    varSet.addAll(propMap.keySet());\n+    return varSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n      String propName, String defaultPropValue, Configuration conf) {\n    String envString \u003d conf.get(propName, defaultPropValue);\n    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n    varSet.addAll(propMap.keySet());\n    return varSet;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
          "extendedDetails": {
            "oldValue": "ArrayList\u003cString\u003e",
            "newValue": "Set\u003cString\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8071. Add ability to specify nodemanager environment variables individually. Contributed by Jim Brennan\n",
          "commitDate": "16/05/18 2:17 PM",
          "commitName": "be539690477f7fee8f836bf3612cbe7ff6a3506e",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "12/04/18 9:12 AM",
          "commitNameOld": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 34.21,
          "commitsBetweenForRepo": 751,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  public static ArrayList\u003cString\u003e getEnvVarsFromInputString(String envString,\n-      String classPathSeparator) {\n-    ArrayList\u003cString\u003e envList \u003d new ArrayList\u003c\u003e();\n-    if (envString !\u003d null \u0026\u0026 envString.length() \u003e 0) {\n-      Matcher varValMatcher \u003d VARVAL_SPLITTER.matcher(envString);\n-      while (varValMatcher.find()) {\n-        String envVar \u003d varValMatcher.group(1);\n-        envList.add(envVar);\n-      }\n-    }\n-    return envList;\n+  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n+      String propName, String defaultPropValue, Configuration conf) {\n+    String envString \u003d conf.get(propName, defaultPropValue);\n+    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n+    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n+    varSet.addAll(propMap.keySet());\n+    return varSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cString\u003e getEnvVarsFromInputProperty(\n      String propName, String defaultPropValue, Configuration conf) {\n    String envString \u003d conf.get(propName, defaultPropValue);\n    Set\u003cString\u003e varSet \u003d getEnvVarsFromInputString(envString);\n    Map\u003cString, String\u003e propMap \u003d conf.getPropsWithPrefix(propName + \".\");\n    varSet.addAll(propMap.keySet());\n    return varSet;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
          "extendedDetails": {}
        }
      ]
    },
    "d69b31f7f70f296ddd180e004fa0f827c2f737f2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7677. Docker image cannot set HADOOP_CONF_DIR. Contributed by Jim Brennan\n",
      "commitDate": "07/03/18 7:20 AM",
      "commitName": "d69b31f7f70f296ddd180e004fa0f827c2f737f2",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,12 @@\n+  public static ArrayList\u003cString\u003e getEnvVarsFromInputString(String envString,\n+      String classPathSeparator) {\n+    ArrayList\u003cString\u003e envList \u003d new ArrayList\u003c\u003e();\n+    if (envString !\u003d null \u0026\u0026 envString.length() \u003e 0) {\n+      Matcher varValMatcher \u003d VARVAL_SPLITTER.matcher(envString);\n+      while (varValMatcher.find()) {\n+        String envVar \u003d varValMatcher.group(1);\n+        envList.add(envVar);\n+      }\n+    }\n+    return envList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ArrayList\u003cString\u003e getEnvVarsFromInputString(String envString,\n      String classPathSeparator) {\n    ArrayList\u003cString\u003e envList \u003d new ArrayList\u003c\u003e();\n    if (envString !\u003d null \u0026\u0026 envString.length() \u003e 0) {\n      Matcher varValMatcher \u003d VARVAL_SPLITTER.matcher(envString);\n      while (varValMatcher.find()) {\n        String envVar \u003d varValMatcher.group(1);\n        envList.add(envVar);\n      }\n    }\n    return envList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java"
    }
  }
}