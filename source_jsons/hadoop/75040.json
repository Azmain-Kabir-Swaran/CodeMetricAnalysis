{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserProvider.java",
  "functionName": "createCredentialEntry",
  "functionId": "createCredentialEntry___name-String__credential-char[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/UserProvider.java",
  "functionStartLine": 65,
  "functionEndLine": 75,
  "numCommitsSeen": 5,
  "timeTaken": 1089,
  "changeHistory": [
    "65b0cfc96b118f0f2b55805d98076dd5229f1bc3",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "65b0cfc96b118f0f2b55805d98076dd5229f1bc3": "Ymodifierchange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "65b0cfc96b118f0f2b55805d98076dd5229f1bc3": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-10831. UserProvider is not thread safe. (Benoy Antony via umamahesh)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610789 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 11:15 AM",
      "commitName": "65b0cfc96b118f0f2b55805d98076dd5229f1bc3",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "18/06/14 8:45 AM",
      "commitNameOld": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 27.1,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  public CredentialEntry createCredentialEntry(String name, char[] credential) \n+  public synchronized CredentialEntry createCredentialEntry(String name, char[] credential) \n       throws IOException {\n     Text nameT \u003d new Text(name);\n     if (credentials.getSecretKey(nameT) !\u003d null) {\n       throw new IOException(\"Credential \" + name + \n           \" already exists in \" + this);\n     }\n     credentials.addSecretKey(new Text(name), \n         new String(credential).getBytes(\"UTF-8\"));\n     return new CredentialEntry(name, credential);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized CredentialEntry createCredentialEntry(String name, char[] credential) \n      throws IOException {\n    Text nameT \u003d new Text(name);\n    if (credentials.getSecretKey(nameT) !\u003d null) {\n      throw new IOException(\"Credential \" + name + \n          \" already exists in \" + this);\n    }\n    credentials.addSecretKey(new Text(name), \n        new String(credential).getBytes(\"UTF-8\"));\n    return new CredentialEntry(name, credential);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/UserProvider.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, synchronized]"
      }
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,11 @@\n+  public CredentialEntry createCredentialEntry(String name, char[] credential) \n+      throws IOException {\n+    Text nameT \u003d new Text(name);\n+    if (credentials.getSecretKey(nameT) !\u003d null) {\n+      throw new IOException(\"Credential \" + name + \n+          \" already exists in \" + this);\n+    }\n+    credentials.addSecretKey(new Text(name), \n+        new String(credential).getBytes(\"UTF-8\"));\n+    return new CredentialEntry(name, credential);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public CredentialEntry createCredentialEntry(String name, char[] credential) \n      throws IOException {\n    Text nameT \u003d new Text(name);\n    if (credentials.getSecretKey(nameT) !\u003d null) {\n      throw new IOException(\"Credential \" + name + \n          \" already exists in \" + this);\n    }\n    credentials.addSecretKey(new Text(name), \n        new String(credential).getBytes(\"UTF-8\"));\n    return new CredentialEntry(name, credential);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/UserProvider.java"
    }
  }
}