{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataNode.java",
  "functionName": "bpRegistrationSucceeded",
  "functionId": "bpRegistrationSucceeded___bpRegistration-DatanodeRegistration__blockPoolId-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
  "functionStartLine": 1602,
  "functionEndLine": 1613,
  "numCommitsSeen": 358,
  "timeTaken": 2132,
  "changeHistory": [
    "dfcb331ba3516264398121c9f23af3a79c0509cc"
  ],
  "changeHistoryShort": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13076: [SPS]: Addendum. Resolve conflicts after rebasing branch to trunk. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "dfcb331ba3516264398121c9f23af3a79c0509cc",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,12 @@\n+  synchronized void bpRegistrationSucceeded(DatanodeRegistration bpRegistration,\n+      String blockPoolId) throws IOException {\n+    id \u003d bpRegistration;\n+\n+    if(!storage.getDatanodeUuid().equals(bpRegistration.getDatanodeUuid())) {\n+      throw new IOException(\"Inconsistent Datanode IDs. Name-node returned \"\n+          + bpRegistration.getDatanodeUuid()\n+          + \". Expecting \" + storage.getDatanodeUuid());\n+    }\n+    \n+    registerBlockPoolWithSecretManager(bpRegistration, blockPoolId);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void bpRegistrationSucceeded(DatanodeRegistration bpRegistration,\n      String blockPoolId) throws IOException {\n    id \u003d bpRegistration;\n\n    if(!storage.getDatanodeUuid().equals(bpRegistration.getDatanodeUuid())) {\n      throw new IOException(\"Inconsistent Datanode IDs. Name-node returned \"\n          + bpRegistration.getDatanodeUuid()\n          + \". Expecting \" + storage.getDatanodeUuid());\n    }\n    \n    registerBlockPoolWithSecretManager(bpRegistration, blockPoolId);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}