{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLog.java",
  "functionName": "registerBackupNode",
  "functionId": "registerBackupNode___bnReg-NamenodeRegistration__nnReg-NamenodeRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
  "functionStartLine": 1555,
  "functionEndLine": 1574,
  "numCommitsSeen": 149,
  "timeTaken": 4652,
  "changeHistory": [
    "faa4455be512e070fa420084be8d1be5c72f3b08",
    "e449de0526ce0aa58bdd0f513b0e2a744a4bbda1",
    "a27adf3de4ea88a80401fc7157c5e39747230c2a",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63"
  ],
  "changeHistoryShort": {
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Ybodychange",
    "e449de0526ce0aa58bdd0f513b0e2a744a4bbda1": "Ybodychange",
    "a27adf3de4ea88a80401fc7157c5e39747230c2a": "Ybodychange",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "23/07/14 12:05 PM",
      "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 41.08,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   synchronized void registerBackupNode(\n       NamenodeRegistration bnReg, // backup node\n       NamenodeRegistration nnReg) // active name-node\n   throws IOException {\n     if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n       return; // checkpoint node does not stream edits\n     \n     JournalManager jas \u003d findBackupJournal(bnReg);\n     if (jas !\u003d null) {\n       // already registered\n       LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n       return;\n     }\n     \n     LOG.info(\"Registering new backup node: \" + bnReg);\n     BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n-    journalSet.add(bjm, false);\n+    synchronized(journalSetLock) {\n+      journalSet.add(bjm, false);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalManager jas \u003d findBackupJournal(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    synchronized(journalSetLock) {\n      journalSet.add(bjm, false);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "e449de0526ce0aa58bdd0f513b0e2a744a4bbda1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3126. Journal stream from Namenode to BackupNode needs to have timeout. Contributed by Hari Mankude.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308636 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 5:55 PM",
      "commitName": "e449de0526ce0aa58bdd0f513b0e2a744a4bbda1",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "01/03/12 5:32 PM",
      "commitNameOld": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 31.97,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   synchronized void registerBackupNode(\n       NamenodeRegistration bnReg, // backup node\n       NamenodeRegistration nnReg) // active name-node\n   throws IOException {\n     if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n       return; // checkpoint node does not stream edits\n     \n     JournalManager jas \u003d findBackupJournal(bnReg);\n     if (jas !\u003d null) {\n       // already registered\n       LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n       return;\n     }\n     \n     LOG.info(\"Registering new backup node: \" + bnReg);\n     BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n-    journalSet.add(bjm, true);\n+    journalSet.add(bjm, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalManager jas \u003d findBackupJournal(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    journalSet.add(bjm, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "a27adf3de4ea88a80401fc7157c5e39747230c2a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2430. The number of failed or low-resource volumes the NN can tolerate should be configurable. Contributed by Aaron T. Myers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211650 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/11 1:47 PM",
      "commitName": "a27adf3de4ea88a80401fc7157c5e39747230c2a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "05/12/11 12:10 PM",
      "commitNameOld": "d18e5b38447273b95d975c703df25fe5f679e006",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   synchronized void registerBackupNode(\n       NamenodeRegistration bnReg, // backup node\n       NamenodeRegistration nnReg) // active name-node\n   throws IOException {\n     if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n       return; // checkpoint node does not stream edits\n     \n     JournalManager jas \u003d findBackupJournal(bnReg);\n     if (jas !\u003d null) {\n       // already registered\n       LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n       return;\n     }\n     \n     LOG.info(\"Registering new backup node: \" + bnReg);\n     BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n-    journalSet.add(bjm);\n+    journalSet.add(bjm, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalManager jas \u003d findBackupJournal(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    journalSet.add(bjm, true);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 6:14 PM",
      "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "06/09/11 1:27 PM",
      "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 23.2,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   synchronized void registerBackupNode(\n       NamenodeRegistration bnReg, // backup node\n       NamenodeRegistration nnReg) // active name-node\n   throws IOException {\n     if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n       return; // checkpoint node does not stream edits\n     \n-    JournalAndStream jas \u003d findBackupJournalAndStream(bnReg);\n+    JournalManager jas \u003d findBackupJournal(bnReg);\n     if (jas !\u003d null) {\n       // already registered\n       LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n       return;\n     }\n     \n     LOG.info(\"Registering new backup node: \" + bnReg);\n     BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n-    journals.add(new JournalAndStream(bjm));\n+    journalSet.add(bjm);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalManager jas \u003d findBackupJournal(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    journalSet.add(bjm);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalAndStream jas \u003d findBackupJournalAndStream(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    journals.add(new JournalAndStream(bjm));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalAndStream jas \u003d findBackupJournalAndStream(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    journals.add(new JournalAndStream(bjm));\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  synchronized void registerBackupNode(\n+      NamenodeRegistration bnReg, // backup node\n+      NamenodeRegistration nnReg) // active name-node\n+  throws IOException {\n+    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n+      return; // checkpoint node does not stream edits\n+    \n+    JournalAndStream jas \u003d findBackupJournalAndStream(bnReg);\n+    if (jas !\u003d null) {\n+      // already registered\n+      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n+      return;\n+    }\n+    \n+    LOG.info(\"Registering new backup node: \" + bnReg);\n+    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n+    journals.add(new JournalAndStream(bjm));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void registerBackupNode(\n      NamenodeRegistration bnReg, // backup node\n      NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    if(bnReg.isRole(NamenodeRole.CHECKPOINT))\n      return; // checkpoint node does not stream edits\n    \n    JournalAndStream jas \u003d findBackupJournalAndStream(bnReg);\n    if (jas !\u003d null) {\n      // already registered\n      LOG.info(\"Backup node \" + bnReg + \" re-registers\");\n      return;\n    }\n    \n    LOG.info(\"Registering new backup node: \" + bnReg);\n    BackupJournalManager bjm \u003d new BackupJournalManager(bnReg, nnReg);\n    journals.add(new JournalAndStream(bjm));\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    }
  }
}