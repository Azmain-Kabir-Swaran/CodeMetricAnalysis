{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPOfferService.java",
  "functionName": "createRegistration",
  "functionId": "createRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
  "functionStartLine": 450,
  "functionEndLine": 459,
  "numCommitsSeen": 87,
  "timeTaken": 2261,
  "changeHistory": [
    "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
    "1f6c2b09c6a5dc07f5caa1cad7036e0e1465f33e",
    "0091606e2d802e7c59e29745963c50ec0ca54aac",
    "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e"
  ],
  "changeHistoryShort": {
    "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45": "Ymultichange(Ymodifierchange,Ybodychange)",
    "1f6c2b09c6a5dc07f5caa1cad7036e0e1465f33e": "Yexceptionschange",
    "0091606e2d802e7c59e29745963c50ec0ca54aac": "Yexceptionschange",
    "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e": "Ymodifierchange"
  },
  "changeHistoryDetails": {
    "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-6788. Improve synchronization in BPOfferService with read write lock. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615190 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/14 11:56 AM",
      "commitName": "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6788. Improve synchronization in BPOfferService with read write lock. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615190 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/08/14 11:56 AM",
          "commitName": "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 12:41 AM",
          "commitNameOld": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 10.47,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,10 @@\n-  synchronized DatanodeRegistration createRegistration() {\n-    Preconditions.checkState(bpNSInfo !\u003d null,\n-        \"getRegistration() can only be called after initial handshake\");\n-    return dn.createBPRegistration(bpNSInfo);\n+  DatanodeRegistration createRegistration() {\n+    writeLock();\n+    try {\n+      Preconditions.checkState(bpNSInfo !\u003d null,\n+          \"getRegistration() can only be called after initial handshake\");\n+      return dn.createBPRegistration(bpNSInfo);\n+    } finally {\n+      writeUnlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DatanodeRegistration createRegistration() {\n    writeLock();\n    try {\n      Preconditions.checkState(bpNSInfo !\u003d null,\n          \"getRegistration() can only be called after initial handshake\");\n      return dn.createBPRegistration(bpNSInfo);\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
          "extendedDetails": {
            "oldValue": "[synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6788. Improve synchronization in BPOfferService with read write lock. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615190 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/08/14 11:56 AM",
          "commitName": "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 12:41 AM",
          "commitNameOld": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 10.47,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,10 @@\n-  synchronized DatanodeRegistration createRegistration() {\n-    Preconditions.checkState(bpNSInfo !\u003d null,\n-        \"getRegistration() can only be called after initial handshake\");\n-    return dn.createBPRegistration(bpNSInfo);\n+  DatanodeRegistration createRegistration() {\n+    writeLock();\n+    try {\n+      Preconditions.checkState(bpNSInfo !\u003d null,\n+          \"getRegistration() can only be called after initial handshake\");\n+      return dn.createBPRegistration(bpNSInfo);\n+    } finally {\n+      writeUnlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DatanodeRegistration createRegistration() {\n    writeLock();\n    try {\n      Preconditions.checkState(bpNSInfo !\u003d null,\n          \"getRegistration() can only be called after initial handshake\");\n      return dn.createBPRegistration(bpNSInfo);\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f6c2b09c6a5dc07f5caa1cad7036e0e1465f33e": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-6076. DataNode with SimulatedDataSet should not create DatanodeRegistration with namenode layout version and namenode node type.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/03/14 3:47 PM",
      "commitName": "1f6c2b09c6a5dc07f5caa1cad7036e0e1465f33e",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/02/14 12:46 PM",
      "commitNameOld": "dbf14320c093991d2ca97b3608efe1c3c0af9888",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 11.13,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-  synchronized DatanodeRegistration createRegistration() throws IOException {\n+  synchronized DatanodeRegistration createRegistration() {\n     Preconditions.checkState(bpNSInfo !\u003d null,\n         \"getRegistration() can only be called after initial handshake\");\n     return dn.createBPRegistration(bpNSInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized DatanodeRegistration createRegistration() {\n    Preconditions.checkState(bpNSInfo !\u003d null,\n        \"getRegistration() can only be called after initial handshake\");\n    return dn.createBPRegistration(bpNSInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[]"
      }
    },
    "0091606e2d802e7c59e29745963c50ec0ca54aac": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-5448. Fix break caused by previous checkin for HDFS-5448.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1538655 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/11/13 8:00 AM",
      "commitName": "0091606e2d802e7c59e29745963c50ec0ca54aac",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "29/10/13 2:04 PM",
      "commitNameOld": "c2495a7bff01df9660d50484cf3c15c1083a70d2",
      "commitAuthorOld": "",
      "daysBetweenCommits": 5.79,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n-  synchronized DatanodeRegistration createRegistration() {\n+  synchronized DatanodeRegistration createRegistration()\n+      throws IOException {\n     Preconditions.checkState(bpNSInfo !\u003d null,\n         \"getRegistration() can only be called after initial handshake\");\n     return dn.createBPRegistration(bpNSInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized DatanodeRegistration createRegistration()\n      throws IOException {\n    Preconditions.checkState(bpNSInfo !\u003d null,\n        \"getRegistration() can only be called after initial handshake\");\n    return dn.createBPRegistration(bpNSInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-3039. Address findbugs and javadoc warnings on branch. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1296017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/03/12 5:32 PM",
      "commitName": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "28/02/12 5:09 PM",
      "commitNameOld": "978a8050e28b2afb193a3e00d82a8475fa4d2428",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 2.02,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-  DatanodeRegistration createRegistration() {\n+  synchronized DatanodeRegistration createRegistration() {\n     Preconditions.checkState(bpNSInfo !\u003d null,\n         \"getRegistration() can only be called after initial handshake\");\n     return dn.createBPRegistration(bpNSInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized DatanodeRegistration createRegistration() {\n    Preconditions.checkState(bpNSInfo !\u003d null,\n        \"getRegistration() can only be called after initial handshake\");\n    return dn.createBPRegistration(bpNSInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[synchronized]"
      }
    }
  }
}