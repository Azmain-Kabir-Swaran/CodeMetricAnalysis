{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetUtils.java",
  "functionName": "createSocketAddr",
  "functionId": "createSocketAddr___target-String__defaultPort-int__configName-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
  "functionStartLine": 181,
  "functionEndLine": 218,
  "numCommitsSeen": 39,
  "timeTaken": 1744,
  "changeHistory": [
    "ef950ea1c08f5a95137a95df6d4c90241a25b70e",
    "b7d48286a94d469483f0af0ff52fb7341552b00c",
    "965ce9e24ed051c6705defc0f85dcfaa4fc9a3ef",
    "4bb572d3366c478924fa95e513858e8a8c793774",
    "6cd5a1b0f78a8245783600ab3257e5f2e2c08496"
  ],
  "changeHistoryShort": {
    "ef950ea1c08f5a95137a95df6d4c90241a25b70e": "Ybodychange",
    "b7d48286a94d469483f0af0ff52fb7341552b00c": "Ybodychange",
    "965ce9e24ed051c6705defc0f85dcfaa4fc9a3ef": "Ybodychange",
    "4bb572d3366c478924fa95e513858e8a8c793774": "Ybodychange",
    "6cd5a1b0f78a8245783600ab3257e5f2e2c08496": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ef950ea1c08f5a95137a95df6d4c90241a25b70e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11589. NetUtils.createSocketAddr should trim the input URI. Contributed by Rakesh R.\n",
      "commitDate": "14/02/15 7:30 AM",
      "commitName": "ef950ea1c08f5a95137a95df6d4c90241a25b70e",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "14/02/15 7:28 AM",
      "commitNameOld": "b7d48286a94d469483f0af0ff52fb7341552b00c",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   public static InetSocketAddress createSocketAddr(String target,\n                                                    int defaultPort,\n                                                    String configName) {\n     String helpText \u003d \"\";\n     if (configName !\u003d null) {\n       helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n     }\n     if (target \u003d\u003d null) {\n       throw new IllegalArgumentException(\"Target address cannot be null.\" +\n           helpText);\n     }\n+    target \u003d target.trim();\n     boolean hasScheme \u003d target.contains(\"://\");    \n     URI uri \u003d null;\n     try {\n       uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n     } catch (IllegalArgumentException e) {\n       throw new IllegalArgumentException(\n           \"Does not contain a valid host:port authority: \" + target + helpText\n       );\n     }\n \n     String host \u003d uri.getHost();\n     int port \u003d uri.getPort();\n     if (port \u003d\u003d -1) {\n       port \u003d defaultPort;\n     }\n     String path \u003d uri.getPath();\n     \n     if ((host \u003d\u003d null) || (port \u003c 0) ||\n         (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n     {\n       throw new IllegalArgumentException(\n           \"Does not contain a valid host:port authority: \" + target + helpText\n       );\n     }\n     return createSocketAddrForHost(host, port);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddr(String target,\n                                                   int defaultPort,\n                                                   String configName) {\n    String helpText \u003d \"\";\n    if (configName !\u003d null) {\n      helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n    }\n    if (target \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Target address cannot be null.\" +\n          helpText);\n    }\n    target \u003d target.trim();\n    boolean hasScheme \u003d target.contains(\"://\");    \n    URI uri \u003d null;\n    try {\n      uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n\n    String host \u003d uri.getHost();\n    int port \u003d uri.getPort();\n    if (port \u003d\u003d -1) {\n      port \u003d defaultPort;\n    }\n    String path \u003d uri.getPath();\n    \n    if ((host \u003d\u003d null) || (port \u003c 0) ||\n        (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n    {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n    return createSocketAddrForHost(host, port);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "b7d48286a94d469483f0af0ff52fb7341552b00c": {
      "type": "Ybodychange",
      "commitMessage": "Rvert \"HADOOP-11589. NetUtils.createSocketAddr should trim the input URI. Contributed by Rakesh R.\"\n\nThis reverts commit 965ce9e24ed051c6705defc0f85dcfaa4fc9a3ef.\n",
      "commitDate": "14/02/15 7:28 AM",
      "commitName": "b7d48286a94d469483f0af0ff52fb7341552b00c",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "14/02/15 7:13 AM",
      "commitNameOld": "965ce9e24ed051c6705defc0f85dcfaa4fc9a3ef",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,37 @@\n   public static InetSocketAddress createSocketAddr(String target,\n                                                    int defaultPort,\n                                                    String configName) {\n     String helpText \u003d \"\";\n     if (configName !\u003d null) {\n       helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n     }\n     if (target \u003d\u003d null) {\n       throw new IllegalArgumentException(\"Target address cannot be null.\" +\n           helpText);\n     }\n-    target \u003d target.trim();\n     boolean hasScheme \u003d target.contains(\"://\");    \n     URI uri \u003d null;\n     try {\n       uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n     } catch (IllegalArgumentException e) {\n       throw new IllegalArgumentException(\n           \"Does not contain a valid host:port authority: \" + target + helpText\n       );\n     }\n \n     String host \u003d uri.getHost();\n     int port \u003d uri.getPort();\n     if (port \u003d\u003d -1) {\n       port \u003d defaultPort;\n     }\n     String path \u003d uri.getPath();\n     \n     if ((host \u003d\u003d null) || (port \u003c 0) ||\n         (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n     {\n       throw new IllegalArgumentException(\n           \"Does not contain a valid host:port authority: \" + target + helpText\n       );\n     }\n     return createSocketAddrForHost(host, port);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddr(String target,\n                                                   int defaultPort,\n                                                   String configName) {\n    String helpText \u003d \"\";\n    if (configName !\u003d null) {\n      helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n    }\n    if (target \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Target address cannot be null.\" +\n          helpText);\n    }\n    boolean hasScheme \u003d target.contains(\"://\");    \n    URI uri \u003d null;\n    try {\n      uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n\n    String host \u003d uri.getHost();\n    int port \u003d uri.getPort();\n    if (port \u003d\u003d -1) {\n      port \u003d defaultPort;\n    }\n    String path \u003d uri.getPath();\n    \n    if ((host \u003d\u003d null) || (port \u003c 0) ||\n        (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n    {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n    return createSocketAddrForHost(host, port);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "965ce9e24ed051c6705defc0f85dcfaa4fc9a3ef": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11589. NetUtils.createSocketAddr should trim the input URI. Contributed by Rakesh R.\n",
      "commitDate": "14/02/15 7:13 AM",
      "commitName": "965ce9e24ed051c6705defc0f85dcfaa4fc9a3ef",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "05/01/15 7:45 PM",
      "commitNameOld": "9803ae374f69942aec82ec6eeeb9722523a1ade0",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 39.48,
      "commitsBetweenForRepo": 361,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   public static InetSocketAddress createSocketAddr(String target,\n                                                    int defaultPort,\n                                                    String configName) {\n     String helpText \u003d \"\";\n     if (configName !\u003d null) {\n       helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n     }\n     if (target \u003d\u003d null) {\n       throw new IllegalArgumentException(\"Target address cannot be null.\" +\n           helpText);\n     }\n+    target \u003d target.trim();\n     boolean hasScheme \u003d target.contains(\"://\");    \n     URI uri \u003d null;\n     try {\n       uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n     } catch (IllegalArgumentException e) {\n       throw new IllegalArgumentException(\n           \"Does not contain a valid host:port authority: \" + target + helpText\n       );\n     }\n \n     String host \u003d uri.getHost();\n     int port \u003d uri.getPort();\n     if (port \u003d\u003d -1) {\n       port \u003d defaultPort;\n     }\n     String path \u003d uri.getPath();\n     \n     if ((host \u003d\u003d null) || (port \u003c 0) ||\n         (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n     {\n       throw new IllegalArgumentException(\n           \"Does not contain a valid host:port authority: \" + target + helpText\n       );\n     }\n     return createSocketAddrForHost(host, port);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddr(String target,\n                                                   int defaultPort,\n                                                   String configName) {\n    String helpText \u003d \"\";\n    if (configName !\u003d null) {\n      helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n    }\n    if (target \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Target address cannot be null.\" +\n          helpText);\n    }\n    target \u003d target.trim();\n    boolean hasScheme \u003d target.contains(\"://\");    \n    URI uri \u003d null;\n    try {\n      uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n\n    String host \u003d uri.getHost();\n    int port \u003d uri.getPort();\n    if (port \u003d\u003d -1) {\n      port \u003d defaultPort;\n    }\n    String path \u003d uri.getPath();\n    \n    if ((host \u003d\u003d null) || (port \u003c 0) ||\n        (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n    {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n    return createSocketAddrForHost(host, port);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "4bb572d3366c478924fa95e513858e8a8c793774": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7808. Port HADOOP-7510 - Add configurable option to use original hostname in token instead of IP to allow server IP change. Contributed by Daryn Sharp.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227737 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 10:41 AM",
      "commitName": "4bb572d3366c478924fa95e513858e8a8c793774",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "20/10/11 3:26 PM",
      "commitNameOld": "6cd5a1b0f78a8245783600ab3257e5f2e2c08496",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 76.84,
      "commitsBetweenForRepo": 452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,37 @@\n   public static InetSocketAddress createSocketAddr(String target,\n                                                    int defaultPort,\n                                                    String configName) {\n     String helpText \u003d \"\";\n     if (configName !\u003d null) {\n       helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n     }\n     if (target \u003d\u003d null) {\n       throw new IllegalArgumentException(\"Target address cannot be null.\" +\n           helpText);\n     }\n-    int colonIndex \u003d target.indexOf(\u0027:\u0027);\n-    if (colonIndex \u003c 0 \u0026\u0026 defaultPort \u003d\u003d -1) {\n-      throw new RuntimeException(\"Not a host:port pair: \" + target +\n-          helpText);\n-    }\n-    String hostname;\n-    int port \u003d -1;\n-    if (!target.contains(\"/\")) {\n-      if (colonIndex \u003d\u003d -1) {\n-        hostname \u003d target;\n-      } else {\n-        // must be the old style \u003chost\u003e:\u003cport\u003e\n-        hostname \u003d target.substring(0, colonIndex);\n-        String portStr \u003d target.substring(colonIndex + 1);\n-        try {\n-          port \u003d Integer.parseInt(portStr);\n-        } catch (NumberFormatException nfe) {\n-          throw new IllegalArgumentException(\n-              \"Can\u0027t parse port \u0027\" + portStr + \"\u0027\"\n-              + helpText);\n-        }\n-      }\n-    } else {\n-      // a new uri\n-      URI addr \u003d new Path(target).toUri();\n-      hostname \u003d addr.getHost();\n-      port \u003d addr.getPort();\n+    boolean hasScheme \u003d target.contains(\"://\");    \n+    URI uri \u003d null;\n+    try {\n+      uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n+    } catch (IllegalArgumentException e) {\n+      throw new IllegalArgumentException(\n+          \"Does not contain a valid host:port authority: \" + target + helpText\n+      );\n     }\n \n+    String host \u003d uri.getHost();\n+    int port \u003d uri.getPort();\n     if (port \u003d\u003d -1) {\n       port \u003d defaultPort;\n     }\n-  \n-    if (getStaticResolution(hostname) !\u003d null) {\n-      hostname \u003d getStaticResolution(hostname);\n+    String path \u003d uri.getPath();\n+    \n+    if ((host \u003d\u003d null) || (port \u003c 0) ||\n+        (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n+    {\n+      throw new IllegalArgumentException(\n+          \"Does not contain a valid host:port authority: \" + target + helpText\n+      );\n     }\n-    return new InetSocketAddress(hostname, port);\n+    return createSocketAddrForHost(host, port);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddr(String target,\n                                                   int defaultPort,\n                                                   String configName) {\n    String helpText \u003d \"\";\n    if (configName !\u003d null) {\n      helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n    }\n    if (target \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Target address cannot be null.\" +\n          helpText);\n    }\n    boolean hasScheme \u003d target.contains(\"://\");    \n    URI uri \u003d null;\n    try {\n      uri \u003d hasScheme ? URI.create(target) : URI.create(\"dummyscheme://\"+target);\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n\n    String host \u003d uri.getHost();\n    int port \u003d uri.getPort();\n    if (port \u003d\u003d -1) {\n      port \u003d defaultPort;\n    }\n    String path \u003d uri.getPath();\n    \n    if ((host \u003d\u003d null) || (port \u003c 0) ||\n        (!hasScheme \u0026\u0026 path !\u003d null \u0026\u0026 !path.isEmpty()))\n    {\n      throw new IllegalArgumentException(\n          \"Does not contain a valid host:port authority: \" + target + helpText\n      );\n    }\n    return createSocketAddrForHost(host, port);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "6cd5a1b0f78a8245783600ab3257e5f2e2c08496": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7749. Add a NetUtils createSocketAddr call which provides more help in exception messages. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1187103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 3:26 PM",
      "commitName": "6cd5a1b0f78a8245783600ab3257e5f2e2c08496",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,49 @@\n+  public static InetSocketAddress createSocketAddr(String target,\n+                                                   int defaultPort,\n+                                                   String configName) {\n+    String helpText \u003d \"\";\n+    if (configName !\u003d null) {\n+      helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n+    }\n+    if (target \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"Target address cannot be null.\" +\n+          helpText);\n+    }\n+    int colonIndex \u003d target.indexOf(\u0027:\u0027);\n+    if (colonIndex \u003c 0 \u0026\u0026 defaultPort \u003d\u003d -1) {\n+      throw new RuntimeException(\"Not a host:port pair: \" + target +\n+          helpText);\n+    }\n+    String hostname;\n+    int port \u003d -1;\n+    if (!target.contains(\"/\")) {\n+      if (colonIndex \u003d\u003d -1) {\n+        hostname \u003d target;\n+      } else {\n+        // must be the old style \u003chost\u003e:\u003cport\u003e\n+        hostname \u003d target.substring(0, colonIndex);\n+        String portStr \u003d target.substring(colonIndex + 1);\n+        try {\n+          port \u003d Integer.parseInt(portStr);\n+        } catch (NumberFormatException nfe) {\n+          throw new IllegalArgumentException(\n+              \"Can\u0027t parse port \u0027\" + portStr + \"\u0027\"\n+              + helpText);\n+        }\n+      }\n+    } else {\n+      // a new uri\n+      URI addr \u003d new Path(target).toUri();\n+      hostname \u003d addr.getHost();\n+      port \u003d addr.getPort();\n+    }\n+\n+    if (port \u003d\u003d -1) {\n+      port \u003d defaultPort;\n+    }\n+  \n+    if (getStaticResolution(hostname) !\u003d null) {\n+      hostname \u003d getStaticResolution(hostname);\n+    }\n+    return new InetSocketAddress(hostname, port);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddr(String target,\n                                                   int defaultPort,\n                                                   String configName) {\n    String helpText \u003d \"\";\n    if (configName !\u003d null) {\n      helpText \u003d \" (configuration property \u0027\" + configName + \"\u0027)\";\n    }\n    if (target \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Target address cannot be null.\" +\n          helpText);\n    }\n    int colonIndex \u003d target.indexOf(\u0027:\u0027);\n    if (colonIndex \u003c 0 \u0026\u0026 defaultPort \u003d\u003d -1) {\n      throw new RuntimeException(\"Not a host:port pair: \" + target +\n          helpText);\n    }\n    String hostname;\n    int port \u003d -1;\n    if (!target.contains(\"/\")) {\n      if (colonIndex \u003d\u003d -1) {\n        hostname \u003d target;\n      } else {\n        // must be the old style \u003chost\u003e:\u003cport\u003e\n        hostname \u003d target.substring(0, colonIndex);\n        String portStr \u003d target.substring(colonIndex + 1);\n        try {\n          port \u003d Integer.parseInt(portStr);\n        } catch (NumberFormatException nfe) {\n          throw new IllegalArgumentException(\n              \"Can\u0027t parse port \u0027\" + portStr + \"\u0027\"\n              + helpText);\n        }\n      }\n    } else {\n      // a new uri\n      URI addr \u003d new Path(target).toUri();\n      hostname \u003d addr.getHost();\n      port \u003d addr.getPort();\n    }\n\n    if (port \u003d\u003d -1) {\n      port \u003d defaultPort;\n    }\n  \n    if (getStaticResolution(hostname) !\u003d null) {\n      hostname \u003d getStaticResolution(hostname);\n    }\n    return new InetSocketAddress(hostname, port);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java"
    }
  }
}