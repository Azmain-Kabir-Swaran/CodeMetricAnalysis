{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskRunner.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java",
  "functionStartLine": 148,
  "functionEndLine": 163,
  "numCommitsSeen": 4,
  "timeTaken": 765,
  "changeHistory": [
    "de69d6e81128470dd5d2fd865d4b3a79188f740b",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "25/07/14 6:29 PM",
      "commitNameOld": "b0c2c856192e71145c012504511fad172436131b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1000.14,
      "commitsBetweenForRepo": 7489,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void start() {\n-    if (executor !\u003d null) {\n-      throw new IllegalStateException(\"Already started\");\n+    if (executor !\u003d null \u0026\u0026 !executor.isTerminated()) {\n+      throw new IllegalStateException(\"Executor already running\");\n     }\n     DelayQueue preStartQueue \u003d queue;\n \n     queue \u003d new DelayQueue();\n     executor \u003d new ThreadPoolExecutor(threadPoolSize, threadPoolSize, 0,\n       TimeUnit.MILLISECONDS, queue);\n     executor.prestartAllCoreThreads();\n \n     startTimeMS \u003d System.currentTimeMillis();\n     for (Object d : preStartQueue) {\n       schedule((Task) d, startTimeMS);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (executor !\u003d null \u0026\u0026 !executor.isTerminated()) {\n      throw new IllegalStateException(\"Executor already running\");\n    }\n    DelayQueue preStartQueue \u003d queue;\n\n    queue \u003d new DelayQueue();\n    executor \u003d new ThreadPoolExecutor(threadPoolSize, threadPoolSize, 0,\n      TimeUnit.MILLISECONDS, queue);\n    executor.prestartAllCoreThreads();\n\n    startTimeMS \u003d System.currentTimeMillis();\n    for (Object d : preStartQueue) {\n      schedule((Task) d, startTimeMS);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,16 @@\n+  public void start() {\n+    if (executor !\u003d null) {\n+      throw new IllegalStateException(\"Already started\");\n+    }\n+    DelayQueue preStartQueue \u003d queue;\n+\n+    queue \u003d new DelayQueue();\n+    executor \u003d new ThreadPoolExecutor(threadPoolSize, threadPoolSize, 0,\n+      TimeUnit.MILLISECONDS, queue);\n+    executor.prestartAllCoreThreads();\n+\n+    startTimeMS \u003d System.currentTimeMillis();\n+    for (Object d : preStartQueue) {\n+      schedule((Task) d, startTimeMS);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (executor !\u003d null) {\n      throw new IllegalStateException(\"Already started\");\n    }\n    DelayQueue preStartQueue \u003d queue;\n\n    queue \u003d new DelayQueue();\n    executor \u003d new ThreadPoolExecutor(threadPoolSize, threadPoolSize, 0,\n      TimeUnit.MILLISECONDS, queue);\n    executor.prestartAllCoreThreads();\n\n    startTimeMS \u003d System.currentTimeMillis();\n    for (Object d : preStartQueue) {\n      schedule((Task) d, startTimeMS);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/TaskRunner.java"
    }
  }
}