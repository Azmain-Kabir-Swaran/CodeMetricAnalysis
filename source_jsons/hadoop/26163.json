{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobBlock.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
  "functionStartLine": 58,
  "functionEndLine": 200,
  "numCommitsSeen": 10,
  "timeTaken": 8251,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "11ac84820746e43f1e7072e08f62ddf81713aeb2",
    "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
    "4bca22005f48f426b9bc7cf36d435ead470a2590",
    "bc374626bebef8297c7fd03ceaa27932baf6a523",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "11ac84820746e43f1e7072e08f62ddf81713aeb2": "Ybodychange",
    "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0": "Ybodychange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ybodychange",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": "Ybodychange",
    "4bca22005f48f426b9bc7cf36d435ead470a2590": "Ybodychange",
    "bc374626bebef8297c7fd03ceaa27932baf6a523": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/06/15 2:40 PM",
      "commitNameOld": "11ac84820746e43f1e7072e08f62ddf81713aeb2",
      "commitAuthorOld": "Gera Shegalov",
      "daysBetweenCommits": 766.1,
      "commitsBetweenForRepo": 4935,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,143 +1,143 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n-        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n+        p().__(\"Sorry, can\u0027t do anything without a JobID.\").__();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n-        p()._(\"Sorry, \", jid, \" not found.\")._();\n+        p().__(\"Sorry, \", jid, \" not found.\").__();\n       return;\n     }\n \n     List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n     String amString \u003d\n         amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n \n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n-        _(\"Job Name:\", jinfo.getName()).\n-        _(\"User Name:\", jinfo.getUserName()).\n-        _(\"Queue Name:\", jinfo.getQueueName()).\n-        _(\"State:\", jinfo.getState()).\n-        _(\"Uberized:\", jinfo.isUberized()).\n-        _(\"Started:\", new Date(jinfo.getStartTime())).\n-        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n+        __(\"Job Name:\", jinfo.getName()).\n+        __(\"User Name:\", jinfo.getUserName()).\n+        __(\"Queue Name:\", jinfo.getQueueName()).\n+        __(\"State:\", jinfo.getState()).\n+        __(\"Uberized:\", jinfo.isUberized()).\n+        __(\"Started:\", new Date(jinfo.getStartTime())).\n+        __(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     DIV\u003cHamlet\u003e div \u003d html.\n-      _(InfoBlock.class).\n+        __(InfoBlock.class).\n       div(_INFO_WRAP);\n \n     // MRAppMasters Table\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n     table.\n       tr().\n       th(amString).\n-      _().\n+        __().\n       tr().\n       th(_TH, \"Attempt Number\").\n       th(_TH, \"Start Time\").\n       th(_TH, \"Node\").\n       th(_TH, \"Logs\").\n-      _();\n+        __();\n     for (AMInfo amInfo : amInfos) {\n       AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n           jinfo.getId(), jinfo.getUserName());\n \n       table.tr().\n         td(String.valueOf(attempt.getAttemptId())).\n         td(new Date(attempt.getStartTime()).toString()).\n         td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n             attempt.getNodeHttpAddress()),\n-            attempt.getNodeHttpAddress())._().\n+            attempt.getNodeHttpAddress()).__().\n         td().a(\".logslink\", url(attempt.getLogsLink()), \n-            \"logs\")._().\n-        _();\n+            \"logs\").__().\n+          __();\n     }\n \n-    table._();\n-    div._();\n+    table.__();\n+    div.__();\n \n     html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n-            th(_TH, \"Complete\")._().\n+            th(_TH, \"Complete\").__().\n           tr(_ODD).\n             th(\"Map\").\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n-                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n-            td().a(url(\"tasks\", jid, \"m\", \"ALL\"),String.valueOf(jinfo.getMapsTotal()))._().\n-            td().a(url(\"tasks\", jid, \"m\", \"PENDING\"),String.valueOf(jinfo.getMapsPending()))._().\n-            td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"),String.valueOf(jinfo.getMapsRunning()))._().\n-            td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"),String.valueOf(jinfo.getMapsCompleted()))._()._().\n+                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027)).__().__().__().\n+            td().a(url(\"tasks\", jid, \"m\", \"ALL\"), String.valueOf(jinfo.getMapsTotal())).__().\n+            td().a(url(\"tasks\", jid, \"m\", \"PENDING\"), String.valueOf(jinfo.getMapsPending())).__().\n+            td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"), String.valueOf(jinfo.getMapsRunning())).__().\n+            td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"), String.valueOf(jinfo.getMapsCompleted())).__().__().\n           tr(_EVEN).\n             th(\"Reduce\").\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n-                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n-            td().a(url(\"tasks\", jid, \"r\", \"ALL\"),String.valueOf(jinfo.getReducesTotal()))._().\n-            td().a(url(\"tasks\", jid, \"r\", \"PENDING\"),String.valueOf(jinfo.getReducesPending()))._().\n-            td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"),String.valueOf(jinfo.getReducesRunning()))._().\n-            td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"),String.valueOf(jinfo.getReducesCompleted()))._()._()\n-          ._().\n+                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027)).__().__().__().\n+            td().a(url(\"tasks\", jid, \"r\", \"ALL\"), String.valueOf(jinfo.getReducesTotal())).__().\n+            td().a(url(\"tasks\", jid, \"r\", \"PENDING\"), String.valueOf(jinfo.getReducesPending())).__().\n+            td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"), String.valueOf(jinfo.getReducesRunning())).__().\n+            td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"), String.valueOf(jinfo.getReducesCompleted())).__().__()\n+          .__().\n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n-          th(_TH, \"Successful\")._().\n+          th(_TH, \"Successful\").__().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n-              String.valueOf(jinfo.getNewMapAttempts()))._().\n+              String.valueOf(jinfo.getNewMapAttempts())).__().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n-              String.valueOf(jinfo.getRunningMapAttempts()))._().\n+              String.valueOf(jinfo.getRunningMapAttempts())).__().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n-              String.valueOf(jinfo.getFailedMapAttempts()))._().\n+              String.valueOf(jinfo.getFailedMapAttempts())).__().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n-              String.valueOf(jinfo.getKilledMapAttempts()))._().\n+              String.valueOf(jinfo.getKilledMapAttempts())).__().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n-              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n-        _().\n+              String.valueOf(jinfo.getSuccessfulMapAttempts())).__().\n+        __().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n-              String.valueOf(jinfo.getNewReduceAttempts()))._().\n+              String.valueOf(jinfo.getNewReduceAttempts())).__().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n-              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n+              String.valueOf(jinfo.getRunningReduceAttempts())).__().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n-              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n+              String.valueOf(jinfo.getFailedReduceAttempts())).__().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n-              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n+              String.valueOf(jinfo.getKilledReduceAttempts())).__().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n-              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n-         _().\n-       _().\n-     _();\n+              String.valueOf(jinfo.getSuccessfulReduceAttempts())).__().\n+        __().\n+        __().\n+        __();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p().__(\"Sorry, can\u0027t do anything without a JobID.\").__();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p().__(\"Sorry, \", jid, \" not found.\").__();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        __(\"Job Name:\", jinfo.getName()).\n        __(\"User Name:\", jinfo.getUserName()).\n        __(\"Queue Name:\", jinfo.getQueueName()).\n        __(\"State:\", jinfo.getState()).\n        __(\"Uberized:\", jinfo.isUberized()).\n        __(\"Started:\", new Date(jinfo.getStartTime())).\n        __(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n        __(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n        __().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n        __();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n            attempt.getNodeHttpAddress()),\n            attempt.getNodeHttpAddress()).__().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\").__().\n          __();\n    }\n\n    table.__();\n    div.__();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\").__().\n          tr(_ODD).\n            th(\"Map\").\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027)).__().__().__().\n            td().a(url(\"tasks\", jid, \"m\", \"ALL\"), String.valueOf(jinfo.getMapsTotal())).__().\n            td().a(url(\"tasks\", jid, \"m\", \"PENDING\"), String.valueOf(jinfo.getMapsPending())).__().\n            td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"), String.valueOf(jinfo.getMapsRunning())).__().\n            td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"), String.valueOf(jinfo.getMapsCompleted())).__().__().\n          tr(_EVEN).\n            th(\"Reduce\").\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027)).__().__().__().\n            td().a(url(\"tasks\", jid, \"r\", \"ALL\"), String.valueOf(jinfo.getReducesTotal())).__().\n            td().a(url(\"tasks\", jid, \"r\", \"PENDING\"), String.valueOf(jinfo.getReducesPending())).__().\n            td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"), String.valueOf(jinfo.getReducesRunning())).__().\n            td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"), String.valueOf(jinfo.getReducesCompleted())).__().__()\n          .__().\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\").__().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts())).__().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts())).__().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts())).__().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts())).__().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts())).__().\n        __().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts())).__().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts())).__().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts())).__().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts())).__().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts())).__().\n        __().\n        __().\n        __();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "11ac84820746e43f1e7072e08f62ddf81713aeb2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6408. Queue name and user name should be printed on the job page. (Siqi Li via gera)\n",
      "commitDate": "22/06/15 2:40 PM",
      "commitName": "11ac84820746e43f1e7072e08f62ddf81713aeb2",
      "commitAuthor": "Gera Shegalov",
      "commitDateOld": "12/03/14 3:04 PM",
      "commitNameOld": "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 466.98,
      "commitsBetweenForRepo": 3815,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,141 +1,143 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n \n     List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n     String amString \u003d\n         amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n \n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n         _(\"Job Name:\", jinfo.getName()).\n+        _(\"User Name:\", jinfo.getUserName()).\n+        _(\"Queue Name:\", jinfo.getQueueName()).\n         _(\"State:\", jinfo.getState()).\n         _(\"Uberized:\", jinfo.isUberized()).\n         _(\"Started:\", new Date(jinfo.getStartTime())).\n         _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     DIV\u003cHamlet\u003e div \u003d html.\n       _(InfoBlock.class).\n       div(_INFO_WRAP);\n \n     // MRAppMasters Table\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n     table.\n       tr().\n       th(amString).\n       _().\n       tr().\n       th(_TH, \"Attempt Number\").\n       th(_TH, \"Start Time\").\n       th(_TH, \"Node\").\n       th(_TH, \"Logs\").\n       _();\n     for (AMInfo amInfo : amInfos) {\n       AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n           jinfo.getId(), jinfo.getUserName());\n \n       table.tr().\n         td(String.valueOf(attempt.getAttemptId())).\n         td(new Date(attempt.getStartTime()).toString()).\n         td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n             attempt.getNodeHttpAddress()),\n             attempt.getNodeHttpAddress())._().\n         td().a(\".logslink\", url(attempt.getLogsLink()), \n             \"logs\")._().\n         _();\n     }\n \n     table._();\n     div._();\n \n     html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n             th(\"Map\").\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n             td().a(url(\"tasks\", jid, \"m\", \"ALL\"),String.valueOf(jinfo.getMapsTotal()))._().\n             td().a(url(\"tasks\", jid, \"m\", \"PENDING\"),String.valueOf(jinfo.getMapsPending()))._().\n             td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"),String.valueOf(jinfo.getMapsRunning()))._().\n             td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"),String.valueOf(jinfo.getMapsCompleted()))._()._().\n           tr(_EVEN).\n             th(\"Reduce\").\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n             td().a(url(\"tasks\", jid, \"r\", \"ALL\"),String.valueOf(jinfo.getReducesTotal()))._().\n             td().a(url(\"tasks\", jid, \"r\", \"PENDING\"),String.valueOf(jinfo.getReducesPending()))._().\n             td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"),String.valueOf(jinfo.getReducesRunning()))._().\n             td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"),String.valueOf(jinfo.getReducesCompleted()))._()._()\n           ._().\n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"User Name:\", jinfo.getUserName()).\n        _(\"Queue Name:\", jinfo.getQueueName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n      _().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n      _();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n            attempt.getNodeHttpAddress()),\n            attempt.getNodeHttpAddress())._().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\")._().\n        _();\n    }\n\n    table._();\n    div._();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th(\"Map\").\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td().a(url(\"tasks\", jid, \"m\", \"ALL\"),String.valueOf(jinfo.getMapsTotal()))._().\n            td().a(url(\"tasks\", jid, \"m\", \"PENDING\"),String.valueOf(jinfo.getMapsPending()))._().\n            td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"),String.valueOf(jinfo.getMapsRunning()))._().\n            td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"),String.valueOf(jinfo.getMapsCompleted()))._()._().\n          tr(_EVEN).\n            th(\"Reduce\").\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td().a(url(\"tasks\", jid, \"r\", \"ALL\"),String.valueOf(jinfo.getReducesTotal()))._().\n            td().a(url(\"tasks\", jid, \"r\", \"PENDING\"),String.valueOf(jinfo.getReducesPending()))._().\n            td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"),String.valueOf(jinfo.getReducesRunning()))._().\n            td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"),String.valueOf(jinfo.getReducesCompleted()))._()._()\n          ._().\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5553. Allow users to easily access completed/pending/successful/failed tasks on MR AM web-ui. Contributed by Paul Han.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1576946 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/14 3:04 PM",
      "commitName": "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "01/10/13 3:52 PM",
      "commitNameOld": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 161.97,
      "commitsBetweenForRepo": 1142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,144 +1,141 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n \n     List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n     String amString \u003d\n         amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n \n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n         _(\"Job Name:\", jinfo.getName()).\n         _(\"State:\", jinfo.getState()).\n         _(\"Uberized:\", jinfo.isUberized()).\n         _(\"Started:\", new Date(jinfo.getStartTime())).\n         _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     DIV\u003cHamlet\u003e div \u003d html.\n       _(InfoBlock.class).\n       div(_INFO_WRAP);\n \n     // MRAppMasters Table\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n     table.\n       tr().\n       th(amString).\n       _().\n       tr().\n       th(_TH, \"Attempt Number\").\n       th(_TH, \"Start Time\").\n       th(_TH, \"Node\").\n       th(_TH, \"Logs\").\n       _();\n     for (AMInfo amInfo : amInfos) {\n       AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n           jinfo.getId(), jinfo.getUserName());\n \n       table.tr().\n         td(String.valueOf(attempt.getAttemptId())).\n         td(new Date(attempt.getStartTime()).toString()).\n         td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n             attempt.getNodeHttpAddress()),\n             attempt.getNodeHttpAddress())._().\n         td().a(\".logslink\", url(attempt.getLogsLink()), \n             \"logs\")._().\n         _();\n     }\n \n     table._();\n     div._();\n \n     html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n-            th().\n-              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n+            th(\"Map\").\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n-            td(String.valueOf(jinfo.getMapsTotal())).\n-            td(String.valueOf(jinfo.getMapsPending())).\n-            td(String.valueOf(jinfo.getMapsRunning())).\n-            td(String.valueOf(jinfo.getMapsCompleted()))._().\n+            td().a(url(\"tasks\", jid, \"m\", \"ALL\"),String.valueOf(jinfo.getMapsTotal()))._().\n+            td().a(url(\"tasks\", jid, \"m\", \"PENDING\"),String.valueOf(jinfo.getMapsPending()))._().\n+            td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"),String.valueOf(jinfo.getMapsRunning()))._().\n+            td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"),String.valueOf(jinfo.getMapsCompleted()))._()._().\n           tr(_EVEN).\n-            th().\n-              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n+            th(\"Reduce\").\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n-            td(String.valueOf(jinfo.getReducesTotal())).\n-            td(String.valueOf(jinfo.getReducesPending())).\n-            td(String.valueOf(jinfo.getReducesRunning())).\n-            td(String.valueOf(jinfo.getReducesCompleted()))._()\n+            td().a(url(\"tasks\", jid, \"r\", \"ALL\"),String.valueOf(jinfo.getReducesTotal()))._().\n+            td().a(url(\"tasks\", jid, \"r\", \"PENDING\"),String.valueOf(jinfo.getReducesPending()))._().\n+            td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"),String.valueOf(jinfo.getReducesRunning()))._().\n+            td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"),String.valueOf(jinfo.getReducesCompleted()))._()._()\n           ._().\n-\n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n      _().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n      _();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n            attempt.getNodeHttpAddress()),\n            attempt.getNodeHttpAddress())._().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\")._().\n        _();\n    }\n\n    table._();\n    div._();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th(\"Map\").\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td().a(url(\"tasks\", jid, \"m\", \"ALL\"),String.valueOf(jinfo.getMapsTotal()))._().\n            td().a(url(\"tasks\", jid, \"m\", \"PENDING\"),String.valueOf(jinfo.getMapsPending()))._().\n            td().a(url(\"tasks\", jid, \"m\", \"RUNNING\"),String.valueOf(jinfo.getMapsRunning()))._().\n            td().a(url(\"tasks\", jid, \"m\", \"COMPLETED\"),String.valueOf(jinfo.getMapsCompleted()))._()._().\n          tr(_EVEN).\n            th(\"Reduce\").\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td().a(url(\"tasks\", jid, \"r\", \"ALL\"),String.valueOf(jinfo.getReducesTotal()))._().\n            td().a(url(\"tasks\", jid, \"r\", \"PENDING\"),String.valueOf(jinfo.getReducesPending()))._().\n            td().a(url(\"tasks\", jid, \"r\", \"RUNNING\"),String.valueOf(jinfo.getReducesRunning()))._().\n            td().a(url(\"tasks\", jid, \"r\", \"COMPLETED\"),String.valueOf(jinfo.getReducesCompleted()))._()._()\n          ._().\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/09/13 4:35 PM",
      "commitNameOld": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.97,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,144 +1,144 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n \n     List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n     String amString \u003d\n         amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n \n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n         _(\"Job Name:\", jinfo.getName()).\n         _(\"State:\", jinfo.getState()).\n         _(\"Uberized:\", jinfo.isUberized()).\n         _(\"Started:\", new Date(jinfo.getStartTime())).\n         _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     DIV\u003cHamlet\u003e div \u003d html.\n       _(InfoBlock.class).\n       div(_INFO_WRAP);\n \n     // MRAppMasters Table\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n     table.\n       tr().\n       th(amString).\n       _().\n       tr().\n       th(_TH, \"Attempt Number\").\n       th(_TH, \"Start Time\").\n       th(_TH, \"Node\").\n       th(_TH, \"Logs\").\n       _();\n     for (AMInfo amInfo : amInfos) {\n       AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n           jinfo.getId(), jinfo.getUserName());\n \n       table.tr().\n         td(String.valueOf(attempt.getAttemptId())).\n         td(new Date(attempt.getStartTime()).toString()).\n-        td().a(\".nodelink\", url(WebAppUtil.getSchemePrefix(),\n+        td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n             attempt.getNodeHttpAddress()),\n             attempt.getNodeHttpAddress())._().\n         td().a(\".logslink\", url(attempt.getLogsLink()), \n             \"logs\")._().\n         _();\n     }\n \n     table._();\n     div._();\n \n     html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n             th().\n               a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getMapsTotal())).\n             td(String.valueOf(jinfo.getMapsPending())).\n             td(String.valueOf(jinfo.getMapsRunning())).\n             td(String.valueOf(jinfo.getMapsCompleted()))._().\n           tr(_EVEN).\n             th().\n               a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getReducesTotal())).\n             td(String.valueOf(jinfo.getReducesPending())).\n             td(String.valueOf(jinfo.getReducesRunning())).\n             td(String.valueOf(jinfo.getReducesCompleted()))._()\n           ._().\n \n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n      _().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n      _();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(MRWebAppUtil.getYARNWebappScheme(),\n            attempt.getNodeHttpAddress()),\n            attempt.getNodeHttpAddress())._().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\")._().\n        _();\n    }\n\n    table._();\n    div._();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getMapsTotal())).\n            td(String.valueOf(jinfo.getMapsPending())).\n            td(String.valueOf(jinfo.getMapsRunning())).\n            td(String.valueOf(jinfo.getMapsCompleted()))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getReducesTotal())).\n            td(String.valueOf(jinfo.getReducesPending())).\n            td(String.valueOf(jinfo.getReducesRunning())).\n            td(String.valueOf(jinfo.getReducesCompleted()))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1203. Changed YARN web-app proxy to handle http and https URLs from AM registration and finish correctly. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5515. Fixed MR AM\u0027s webapp to depend on a new config mapreduce.ssl.enabled to enable https and disabling it by default as MR AM needs\nto set up its own certificates etc and not depend on clusters\u0027. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 4:35 PM",
      "commitName": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "09/08/12 3:52 PM",
      "commitNameOld": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 406.03,
      "commitsBetweenForRepo": 2353,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,144 +1,144 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n \n     List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n     String amString \u003d\n         amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n \n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n         _(\"Job Name:\", jinfo.getName()).\n         _(\"State:\", jinfo.getState()).\n         _(\"Uberized:\", jinfo.isUberized()).\n         _(\"Started:\", new Date(jinfo.getStartTime())).\n         _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     DIV\u003cHamlet\u003e div \u003d html.\n       _(InfoBlock.class).\n       div(_INFO_WRAP);\n \n     // MRAppMasters Table\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n     table.\n       tr().\n       th(amString).\n       _().\n       tr().\n       th(_TH, \"Attempt Number\").\n       th(_TH, \"Start Time\").\n       th(_TH, \"Node\").\n       th(_TH, \"Logs\").\n       _();\n     for (AMInfo amInfo : amInfos) {\n       AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n           jinfo.getId(), jinfo.getUserName());\n \n       table.tr().\n         td(String.valueOf(attempt.getAttemptId())).\n         td(new Date(attempt.getStartTime()).toString()).\n-        td().a(\".nodelink\", url(HttpConfig.getSchemePrefix(),\n+        td().a(\".nodelink\", url(WebAppUtil.getSchemePrefix(),\n             attempt.getNodeHttpAddress()),\n             attempt.getNodeHttpAddress())._().\n         td().a(\".logslink\", url(attempt.getLogsLink()), \n             \"logs\")._().\n         _();\n     }\n \n     table._();\n     div._();\n \n     html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n             th().\n               a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getMapsTotal())).\n             td(String.valueOf(jinfo.getMapsPending())).\n             td(String.valueOf(jinfo.getMapsRunning())).\n             td(String.valueOf(jinfo.getMapsCompleted()))._().\n           tr(_EVEN).\n             th().\n               a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getReducesTotal())).\n             td(String.valueOf(jinfo.getReducesPending())).\n             td(String.valueOf(jinfo.getReducesRunning())).\n             td(String.valueOf(jinfo.getReducesCompleted()))._()\n           ._().\n \n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n      _().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n      _();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(WebAppUtil.getSchemePrefix(),\n            attempt.getNodeHttpAddress()),\n            attempt.getNodeHttpAddress())._().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\")._().\n        _();\n    }\n\n    table._();\n    div._();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getMapsTotal())).\n            td(String.valueOf(jinfo.getMapsPending())).\n            td(String.valueOf(jinfo.getMapsRunning())).\n            td(String.valueOf(jinfo.getMapsCompleted()))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getReducesTotal())).\n            td(String.valueOf(jinfo.getReducesPending())).\n            td(String.valueOf(jinfo.getReducesRunning())).\n            td(String.valueOf(jinfo.getReducesCompleted()))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "4bca22005f48f426b9bc7cf36d435ead470a2590": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8681. add support for HTTPS to the web UIs. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/12 3:52 PM",
      "commitName": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "10/01/12 2:26 PM",
      "commitNameOld": "bc374626bebef8297c7fd03ceaa27932baf6a523",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 212.02,
      "commitsBetweenForRepo": 1399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,143 +1,144 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n \n     List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n     String amString \u003d\n         amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n \n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n         _(\"Job Name:\", jinfo.getName()).\n         _(\"State:\", jinfo.getState()).\n         _(\"Uberized:\", jinfo.isUberized()).\n         _(\"Started:\", new Date(jinfo.getStartTime())).\n         _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     DIV\u003cHamlet\u003e div \u003d html.\n       _(InfoBlock.class).\n       div(_INFO_WRAP);\n \n     // MRAppMasters Table\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n     table.\n       tr().\n       th(amString).\n       _().\n       tr().\n       th(_TH, \"Attempt Number\").\n       th(_TH, \"Start Time\").\n       th(_TH, \"Node\").\n       th(_TH, \"Logs\").\n       _();\n     for (AMInfo amInfo : amInfos) {\n       AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n           jinfo.getId(), jinfo.getUserName());\n \n       table.tr().\n         td(String.valueOf(attempt.getAttemptId())).\n         td(new Date(attempt.getStartTime()).toString()).\n-        td().a(\".nodelink\", url(\"http://\", attempt.getNodeHttpAddress()), \n+        td().a(\".nodelink\", url(HttpConfig.getSchemePrefix(),\n+            attempt.getNodeHttpAddress()),\n             attempt.getNodeHttpAddress())._().\n         td().a(\".logslink\", url(attempt.getLogsLink()), \n             \"logs\")._().\n         _();\n     }\n \n     table._();\n     div._();\n \n     html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n             th().\n               a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getMapsTotal())).\n             td(String.valueOf(jinfo.getMapsPending())).\n             td(String.valueOf(jinfo.getMapsRunning())).\n             td(String.valueOf(jinfo.getMapsCompleted()))._().\n           tr(_EVEN).\n             th().\n               a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getReducesTotal())).\n             td(String.valueOf(jinfo.getReducesPending())).\n             td(String.valueOf(jinfo.getReducesRunning())).\n             td(String.valueOf(jinfo.getReducesCompleted()))._()\n           ._().\n \n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n      _().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n      _();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(HttpConfig.getSchemePrefix(),\n            attempt.getNodeHttpAddress()),\n            attempt.getNodeHttpAddress())._().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\")._().\n        _();\n    }\n\n    table._();\n    div._();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getMapsTotal())).\n            td(String.valueOf(jinfo.getMapsPending())).\n            td(String.valueOf(jinfo.getMapsRunning())).\n            td(String.valueOf(jinfo.getMapsCompleted()))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getReducesTotal())).\n            td(String.valueOf(jinfo.getReducesPending())).\n            td(String.valueOf(jinfo.getReducesRunning())).\n            td(String.valueOf(jinfo.getReducesCompleted()))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "bc374626bebef8297c7fd03ceaa27932baf6a523": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3299. Added AMInfo table to the MR AM job pages to list all the job-attempts when AM restarts and recovers. (Jonathan Eagles via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229766 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/12 2:26 PM",
      "commitName": "bc374626bebef8297c7fd03ceaa27932baf6a523",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.97,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,108 +1,143 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n+\n+    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n+    String amString \u003d\n+        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n+\n     JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n         _(\"Job Name:\", jinfo.getName()).\n         _(\"State:\", jinfo.getState()).\n         _(\"Uberized:\", jinfo.isUberized()).\n         _(\"Started:\", new Date(jinfo.getStartTime())).\n         _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n-    html.\n+    DIV\u003cHamlet\u003e div \u003d html.\n       _(InfoBlock.class).\n-      div(_INFO_WRAP).\n+      div(_INFO_WRAP);\n \n+    // MRAppMasters Table\n+    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n+    table.\n+      tr().\n+      th(amString).\n+      _().\n+      tr().\n+      th(_TH, \"Attempt Number\").\n+      th(_TH, \"Start Time\").\n+      th(_TH, \"Node\").\n+      th(_TH, \"Logs\").\n+      _();\n+    for (AMInfo amInfo : amInfos) {\n+      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n+          jinfo.getId(), jinfo.getUserName());\n+\n+      table.tr().\n+        td(String.valueOf(attempt.getAttemptId())).\n+        td(new Date(attempt.getStartTime()).toString()).\n+        td().a(\".nodelink\", url(\"http://\", attempt.getNodeHttpAddress()), \n+            attempt.getNodeHttpAddress())._().\n+        td().a(\".logslink\", url(attempt.getLogsLink()), \n+            \"logs\")._().\n+        _();\n+    }\n+\n+    table._();\n+    div._();\n+\n+    html.div(_INFO_WRAP).        \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n             th().\n               a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getMapsTotal())).\n             td(String.valueOf(jinfo.getMapsPending())).\n             td(String.valueOf(jinfo.getMapsRunning())).\n             td(String.valueOf(jinfo.getMapsCompleted()))._().\n           tr(_EVEN).\n             th().\n               a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n             td().\n               div(_PROGRESSBAR).\n                 $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n                   $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n             td(String.valueOf(jinfo.getReducesTotal())).\n             td(String.valueOf(jinfo.getReducesPending())).\n             td(String.valueOf(jinfo.getReducesRunning())).\n             td(String.valueOf(jinfo.getReducesCompleted()))._()\n           ._().\n \n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.NEW.toString()),\n               String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.RUNNING.toString()),\n               String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.FAILED.toString()),\n               String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.KILLED.toString()),\n               String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n               TaskAttemptStateUI.SUCCESSFUL.toString()),\n               String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n\n    List\u003cAMInfo\u003e amInfos \u003d job.getAMInfos();\n    String amString \u003d\n        amInfos.size() \u003d\u003d 1 ? \"ApplicationMaster\" : \"ApplicationMasters\"; \n\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    DIV\u003cHamlet\u003e div \u003d html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP);\n\n    // MRAppMasters Table\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d div.table(\"#job\");\n    table.\n      tr().\n      th(amString).\n      _().\n      tr().\n      th(_TH, \"Attempt Number\").\n      th(_TH, \"Start Time\").\n      th(_TH, \"Node\").\n      th(_TH, \"Logs\").\n      _();\n    for (AMInfo amInfo : amInfos) {\n      AMAttemptInfo attempt \u003d new AMAttemptInfo(amInfo,\n          jinfo.getId(), jinfo.getUserName());\n\n      table.tr().\n        td(String.valueOf(attempt.getAttemptId())).\n        td(new Date(attempt.getStartTime()).toString()).\n        td().a(\".nodelink\", url(\"http://\", attempt.getNodeHttpAddress()), \n            attempt.getNodeHttpAddress())._().\n        td().a(\".logslink\", url(attempt.getLogsLink()), \n            \"logs\")._().\n        _();\n    }\n\n    table._();\n    div._();\n\n    html.div(_INFO_WRAP).        \n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getMapsTotal())).\n            td(String.valueOf(jinfo.getMapsPending())).\n            td(String.valueOf(jinfo.getMapsRunning())).\n            td(String.valueOf(jinfo.getMapsCompleted()))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getReducesTotal())).\n            td(String.valueOf(jinfo.getReducesPending())).\n            td(String.valueOf(jinfo.getReducesRunning())).\n            td(String.valueOf(jinfo.getReducesCompleted()))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 110.95,
      "commitsBetweenForRepo": 754,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,118 +1,108 @@\n   @Override protected void render(Block html) {\n     String jid \u003d $(JOB_ID);\n     if (jid.isEmpty()) {\n       html.\n         p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n       return;\n     }\n     JobId jobID \u003d MRApps.toJobID(jid);\n     Job job \u003d appContext.getJob(jobID);\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, \", jid, \" not found.\")._();\n       return;\n     }\n-    JobReport jobReport \u003d job.getReport();\n-    String mapPct \u003d percent(jobReport.getMapProgress());\n-    String reducePct \u003d percent(jobReport.getReduceProgress());\n-    int mapTasks \u003d job.getTotalMaps();\n-    int mapTasksComplete \u003d job.getCompletedMaps();\n-    int reduceTasks \u003d job.getTotalReduces();\n-    int reducesTasksComplete \u003d job.getCompletedReduces();\n-    long startTime \u003d jobReport.getStartTime();\n-    long finishTime \u003d jobReport.getFinishTime();\n-    countTasksAndAttempts(job);\n+    JobInfo jinfo \u003d new JobInfo(job, true);\n     info(\"Job Overview\").\n-        _(\"Job Name:\", job.getName()).\n-        _(\"State:\", job.getState()).\n-        _(\"Uberized:\", job.isUber()).\n-        _(\"Started:\", new Date(startTime)).\n-        _(\"Elapsed:\", StringUtils.formatTime(\n-            Times.elapsed(startTime, finishTime)));\n+        _(\"Job Name:\", jinfo.getName()).\n+        _(\"State:\", jinfo.getState()).\n+        _(\"Uberized:\", jinfo.isUberized()).\n+        _(\"Started:\", new Date(jinfo.getStartTime())).\n+        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n     html.\n       _(InfoBlock.class).\n       div(_INFO_WRAP).\n \n       // Tasks table\n         table(\"#job\").\n           tr().\n             th(_TH, \"Task Type\").\n             th(_TH, \"Progress\").\n             th(_TH, \"Total\").\n             th(_TH, \"Pending\").\n             th(_TH, \"Running\").\n             th(_TH, \"Complete\")._().\n           tr(_ODD).\n             th().\n               a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n             td().\n               div(_PROGRESSBAR).\n-                $title(join(mapPct, \u0027%\u0027)). // tooltip\n+                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n-                  $style(join(\"width:\", mapPct, \u0027%\u0027))._()._()._().\n-            td(String.valueOf(mapTasks)).\n-            td(String.valueOf(pendingMapTasks)).\n-            td(String.valueOf(runningMapTasks)).\n-            td(String.valueOf(mapTasksComplete))._().\n+                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n+            td(String.valueOf(jinfo.getMapsTotal())).\n+            td(String.valueOf(jinfo.getMapsPending())).\n+            td(String.valueOf(jinfo.getMapsRunning())).\n+            td(String.valueOf(jinfo.getMapsCompleted()))._().\n           tr(_EVEN).\n             th().\n               a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n             td().\n               div(_PROGRESSBAR).\n-                $title(join(reducePct, \u0027%\u0027)). // tooltip\n+                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                 div(_PROGRESSBAR_VALUE).\n-                  $style(join(\"width:\", reducePct, \u0027%\u0027))._()._()._().\n-            td(String.valueOf(reduceTasks)).\n-            td(String.valueOf(pendingReduceTasks)).\n-            td(String.valueOf(runningReduceTasks)).\n-            td(String.valueOf(reducesTasksComplete))._()\n+                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n+            td(String.valueOf(jinfo.getReducesTotal())).\n+            td(String.valueOf(jinfo.getReducesPending())).\n+            td(String.valueOf(jinfo.getReducesRunning())).\n+            td(String.valueOf(jinfo.getReducesCompleted()))._()\n           ._().\n \n         // Attempts table\n         table(\"#job\").\n         tr().\n           th(_TH, \"Attempt Type\").\n           th(_TH, \"New\").\n           th(_TH, \"Running\").\n           th(_TH, \"Failed\").\n           th(_TH, \"Killed\").\n           th(_TH, \"Successful\")._().\n         tr(_ODD).\n           th(\"Maps\").\n           td().a(url(\"attempts\", jid, \"m\",\n-              TaskAttemptStateUI.NEW.toString()), \n-              String.valueOf(newMapAttempts))._().\n+              TaskAttemptStateUI.NEW.toString()),\n+              String.valueOf(jinfo.getNewMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n-              TaskAttemptStateUI.RUNNING.toString()), \n-              String.valueOf(runningMapAttempts))._().\n+              TaskAttemptStateUI.RUNNING.toString()),\n+              String.valueOf(jinfo.getRunningMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n-              TaskAttemptStateUI.FAILED.toString()), \n-              String.valueOf(failedMapAttempts))._().\n+              TaskAttemptStateUI.FAILED.toString()),\n+              String.valueOf(jinfo.getFailedMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n-              TaskAttemptStateUI.KILLED.toString()), \n-              String.valueOf(killedMapAttempts))._().\n+              TaskAttemptStateUI.KILLED.toString()),\n+              String.valueOf(jinfo.getKilledMapAttempts()))._().\n           td().a(url(\"attempts\", jid, \"m\",\n-              TaskAttemptStateUI.SUCCESSFUL.toString()), \n-              String.valueOf(successfulMapAttempts))._().\n+              TaskAttemptStateUI.SUCCESSFUL.toString()),\n+              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n         _().\n         tr(_EVEN).\n           th(\"Reduces\").\n           td().a(url(\"attempts\", jid, \"r\",\n-              TaskAttemptStateUI.NEW.toString()), \n-              String.valueOf(newReduceAttempts))._().\n+              TaskAttemptStateUI.NEW.toString()),\n+              String.valueOf(jinfo.getNewReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n-              TaskAttemptStateUI.RUNNING.toString()), \n-              String.valueOf(runningReduceAttempts))._().\n+              TaskAttemptStateUI.RUNNING.toString()),\n+              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n-              TaskAttemptStateUI.FAILED.toString()), \n-              String.valueOf(failedReduceAttempts))._().\n+              TaskAttemptStateUI.FAILED.toString()),\n+              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n-              TaskAttemptStateUI.KILLED.toString()), \n-              String.valueOf(killedReduceAttempts))._().\n+              TaskAttemptStateUI.KILLED.toString()),\n+              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n           td().a(url(\"attempts\", jid, \"r\",\n-              TaskAttemptStateUI.SUCCESSFUL.toString()), \n-              String.valueOf(successfulReduceAttempts))._().\n+              TaskAttemptStateUI.SUCCESSFUL.toString()),\n+              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n          _().\n        _().\n      _();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n    JobInfo jinfo \u003d new JobInfo(job, true);\n    info(\"Job Overview\").\n        _(\"Job Name:\", jinfo.getName()).\n        _(\"State:\", jinfo.getState()).\n        _(\"Uberized:\", jinfo.isUberized()).\n        _(\"Started:\", new Date(jinfo.getStartTime())).\n        _(\"Elapsed:\", StringUtils.formatTime(jinfo.getElapsedTime()));\n    html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP).\n\n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getMapProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getMapProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getMapsTotal())).\n            td(String.valueOf(jinfo.getMapsPending())).\n            td(String.valueOf(jinfo.getMapsRunning())).\n            td(String.valueOf(jinfo.getMapsCompleted()))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(jinfo.getReduceProgressPercent(), \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", jinfo.getReduceProgressPercent(), \u0027%\u0027))._()._()._().\n            td(String.valueOf(jinfo.getReducesTotal())).\n            td(String.valueOf(jinfo.getReducesPending())).\n            td(String.valueOf(jinfo.getReducesRunning())).\n            td(String.valueOf(jinfo.getReducesCompleted()))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledMapAttempts()))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulMapAttempts()))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()),\n              String.valueOf(jinfo.getNewReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()),\n              String.valueOf(jinfo.getRunningReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()),\n              String.valueOf(jinfo.getFailedReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()),\n              String.valueOf(jinfo.getKilledReduceAttempts()))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()),\n              String.valueOf(jinfo.getSuccessfulReduceAttempts()))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n    JobReport jobReport \u003d job.getReport();\n    String mapPct \u003d percent(jobReport.getMapProgress());\n    String reducePct \u003d percent(jobReport.getReduceProgress());\n    int mapTasks \u003d job.getTotalMaps();\n    int mapTasksComplete \u003d job.getCompletedMaps();\n    int reduceTasks \u003d job.getTotalReduces();\n    int reducesTasksComplete \u003d job.getCompletedReduces();\n    long startTime \u003d jobReport.getStartTime();\n    long finishTime \u003d jobReport.getFinishTime();\n    countTasksAndAttempts(job);\n    info(\"Job Overview\").\n        _(\"Job Name:\", job.getName()).\n        _(\"State:\", job.getState()).\n        _(\"Uberized:\", job.isUber()).\n        _(\"Started:\", new Date(startTime)).\n        _(\"Elapsed:\", StringUtils.formatTime(\n            Times.elapsed(startTime, finishTime)));\n    html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP).\n\n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(mapPct, \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", mapPct, \u0027%\u0027))._()._()._().\n            td(String.valueOf(mapTasks)).\n            td(String.valueOf(pendingMapTasks)).\n            td(String.valueOf(runningMapTasks)).\n            td(String.valueOf(mapTasksComplete))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(reducePct, \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", reducePct, \u0027%\u0027))._()._()._().\n            td(String.valueOf(reduceTasks)).\n            td(String.valueOf(pendingReduceTasks)).\n            td(String.valueOf(runningReduceTasks)).\n            td(String.valueOf(reducesTasksComplete))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()), \n              String.valueOf(newMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()), \n              String.valueOf(runningMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()), \n              String.valueOf(failedMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()), \n              String.valueOf(killedMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()), \n              String.valueOf(successfulMapAttempts))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()), \n              String.valueOf(newReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()), \n              String.valueOf(runningReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()), \n              String.valueOf(failedReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()), \n              String.valueOf(killedReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()), \n              String.valueOf(successfulReduceAttempts))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,118 @@\n+  @Override protected void render(Block html) {\n+    String jid \u003d $(JOB_ID);\n+    if (jid.isEmpty()) {\n+      html.\n+        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n+      return;\n+    }\n+    JobId jobID \u003d MRApps.toJobID(jid);\n+    Job job \u003d appContext.getJob(jobID);\n+    if (job \u003d\u003d null) {\n+      html.\n+        p()._(\"Sorry, \", jid, \" not found.\")._();\n+      return;\n+    }\n+    JobReport jobReport \u003d job.getReport();\n+    String mapPct \u003d percent(jobReport.getMapProgress());\n+    String reducePct \u003d percent(jobReport.getReduceProgress());\n+    int mapTasks \u003d job.getTotalMaps();\n+    int mapTasksComplete \u003d job.getCompletedMaps();\n+    int reduceTasks \u003d job.getTotalReduces();\n+    int reducesTasksComplete \u003d job.getCompletedReduces();\n+    long startTime \u003d jobReport.getStartTime();\n+    long finishTime \u003d jobReport.getFinishTime();\n+    countTasksAndAttempts(job);\n+    info(\"Job Overview\").\n+        _(\"Job Name:\", job.getName()).\n+        _(\"State:\", job.getState()).\n+        _(\"Uberized:\", job.isUber()).\n+        _(\"Started:\", new Date(startTime)).\n+        _(\"Elapsed:\", StringUtils.formatTime(\n+            Times.elapsed(startTime, finishTime)));\n+    html.\n+      _(InfoBlock.class).\n+      div(_INFO_WRAP).\n+\n+      // Tasks table\n+        table(\"#job\").\n+          tr().\n+            th(_TH, \"Task Type\").\n+            th(_TH, \"Progress\").\n+            th(_TH, \"Total\").\n+            th(_TH, \"Pending\").\n+            th(_TH, \"Running\").\n+            th(_TH, \"Complete\")._().\n+          tr(_ODD).\n+            th().\n+              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n+            td().\n+              div(_PROGRESSBAR).\n+                $title(join(mapPct, \u0027%\u0027)). // tooltip\n+                div(_PROGRESSBAR_VALUE).\n+                  $style(join(\"width:\", mapPct, \u0027%\u0027))._()._()._().\n+            td(String.valueOf(mapTasks)).\n+            td(String.valueOf(pendingMapTasks)).\n+            td(String.valueOf(runningMapTasks)).\n+            td(String.valueOf(mapTasksComplete))._().\n+          tr(_EVEN).\n+            th().\n+              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n+            td().\n+              div(_PROGRESSBAR).\n+                $title(join(reducePct, \u0027%\u0027)). // tooltip\n+                div(_PROGRESSBAR_VALUE).\n+                  $style(join(\"width:\", reducePct, \u0027%\u0027))._()._()._().\n+            td(String.valueOf(reduceTasks)).\n+            td(String.valueOf(pendingReduceTasks)).\n+            td(String.valueOf(runningReduceTasks)).\n+            td(String.valueOf(reducesTasksComplete))._()\n+          ._().\n+\n+        // Attempts table\n+        table(\"#job\").\n+        tr().\n+          th(_TH, \"Attempt Type\").\n+          th(_TH, \"New\").\n+          th(_TH, \"Running\").\n+          th(_TH, \"Failed\").\n+          th(_TH, \"Killed\").\n+          th(_TH, \"Successful\")._().\n+        tr(_ODD).\n+          th(\"Maps\").\n+          td().a(url(\"attempts\", jid, \"m\",\n+              TaskAttemptStateUI.NEW.toString()), \n+              String.valueOf(newMapAttempts))._().\n+          td().a(url(\"attempts\", jid, \"m\",\n+              TaskAttemptStateUI.RUNNING.toString()), \n+              String.valueOf(runningMapAttempts))._().\n+          td().a(url(\"attempts\", jid, \"m\",\n+              TaskAttemptStateUI.FAILED.toString()), \n+              String.valueOf(failedMapAttempts))._().\n+          td().a(url(\"attempts\", jid, \"m\",\n+              TaskAttemptStateUI.KILLED.toString()), \n+              String.valueOf(killedMapAttempts))._().\n+          td().a(url(\"attempts\", jid, \"m\",\n+              TaskAttemptStateUI.SUCCESSFUL.toString()), \n+              String.valueOf(successfulMapAttempts))._().\n+        _().\n+        tr(_EVEN).\n+          th(\"Reduces\").\n+          td().a(url(\"attempts\", jid, \"r\",\n+              TaskAttemptStateUI.NEW.toString()), \n+              String.valueOf(newReduceAttempts))._().\n+          td().a(url(\"attempts\", jid, \"r\",\n+              TaskAttemptStateUI.RUNNING.toString()), \n+              String.valueOf(runningReduceAttempts))._().\n+          td().a(url(\"attempts\", jid, \"r\",\n+              TaskAttemptStateUI.FAILED.toString()), \n+              String.valueOf(failedReduceAttempts))._().\n+          td().a(url(\"attempts\", jid, \"r\",\n+              TaskAttemptStateUI.KILLED.toString()), \n+              String.valueOf(killedReduceAttempts))._().\n+          td().a(url(\"attempts\", jid, \"r\",\n+              TaskAttemptStateUI.SUCCESSFUL.toString()), \n+              String.valueOf(successfulReduceAttempts))._().\n+         _().\n+       _().\n+     _();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String jid \u003d $(JOB_ID);\n    if (jid.isEmpty()) {\n      html.\n        p()._(\"Sorry, can\u0027t do anything without a JobID.\")._();\n      return;\n    }\n    JobId jobID \u003d MRApps.toJobID(jid);\n    Job job \u003d appContext.getJob(jobID);\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, \", jid, \" not found.\")._();\n      return;\n    }\n    JobReport jobReport \u003d job.getReport();\n    String mapPct \u003d percent(jobReport.getMapProgress());\n    String reducePct \u003d percent(jobReport.getReduceProgress());\n    int mapTasks \u003d job.getTotalMaps();\n    int mapTasksComplete \u003d job.getCompletedMaps();\n    int reduceTasks \u003d job.getTotalReduces();\n    int reducesTasksComplete \u003d job.getCompletedReduces();\n    long startTime \u003d jobReport.getStartTime();\n    long finishTime \u003d jobReport.getFinishTime();\n    countTasksAndAttempts(job);\n    info(\"Job Overview\").\n        _(\"Job Name:\", job.getName()).\n        _(\"State:\", job.getState()).\n        _(\"Uberized:\", job.isUber()).\n        _(\"Started:\", new Date(startTime)).\n        _(\"Elapsed:\", StringUtils.formatTime(\n            Times.elapsed(startTime, finishTime)));\n    html.\n      _(InfoBlock.class).\n      div(_INFO_WRAP).\n\n      // Tasks table\n        table(\"#job\").\n          tr().\n            th(_TH, \"Task Type\").\n            th(_TH, \"Progress\").\n            th(_TH, \"Total\").\n            th(_TH, \"Pending\").\n            th(_TH, \"Running\").\n            th(_TH, \"Complete\")._().\n          tr(_ODD).\n            th().\n              a(url(\"tasks\", jid, \"m\"), \"Map\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(mapPct, \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", mapPct, \u0027%\u0027))._()._()._().\n            td(String.valueOf(mapTasks)).\n            td(String.valueOf(pendingMapTasks)).\n            td(String.valueOf(runningMapTasks)).\n            td(String.valueOf(mapTasksComplete))._().\n          tr(_EVEN).\n            th().\n              a(url(\"tasks\", jid, \"r\"), \"Reduce\")._().\n            td().\n              div(_PROGRESSBAR).\n                $title(join(reducePct, \u0027%\u0027)). // tooltip\n                div(_PROGRESSBAR_VALUE).\n                  $style(join(\"width:\", reducePct, \u0027%\u0027))._()._()._().\n            td(String.valueOf(reduceTasks)).\n            td(String.valueOf(pendingReduceTasks)).\n            td(String.valueOf(runningReduceTasks)).\n            td(String.valueOf(reducesTasksComplete))._()\n          ._().\n\n        // Attempts table\n        table(\"#job\").\n        tr().\n          th(_TH, \"Attempt Type\").\n          th(_TH, \"New\").\n          th(_TH, \"Running\").\n          th(_TH, \"Failed\").\n          th(_TH, \"Killed\").\n          th(_TH, \"Successful\")._().\n        tr(_ODD).\n          th(\"Maps\").\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.NEW.toString()), \n              String.valueOf(newMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.RUNNING.toString()), \n              String.valueOf(runningMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.FAILED.toString()), \n              String.valueOf(failedMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.KILLED.toString()), \n              String.valueOf(killedMapAttempts))._().\n          td().a(url(\"attempts\", jid, \"m\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()), \n              String.valueOf(successfulMapAttempts))._().\n        _().\n        tr(_EVEN).\n          th(\"Reduces\").\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.NEW.toString()), \n              String.valueOf(newReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.RUNNING.toString()), \n              String.valueOf(runningReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.FAILED.toString()), \n              String.valueOf(failedReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.KILLED.toString()), \n              String.valueOf(killedReduceAttempts))._().\n          td().a(url(\"attempts\", jid, \"r\",\n              TaskAttemptStateUI.SUCCESSFUL.toString()), \n              String.valueOf(successfulReduceAttempts))._().\n         _().\n       _().\n     _();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/JobBlock.java"
    }
  }
}