{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Component.java",
  "functionName": "handle",
  "functionId": "handle___event-ComponentEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
  "functionStartLine": 1129,
  "functionEndLine": 1146,
  "numCommitsSeen": 36,
  "timeTaken": 3398,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "79bf5c084d4a063f1a933cae498af23edfd46792",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "79bf5c084d4a063f1a933cae498af23edfd46792": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "24/01/19 3:43 PM",
      "commitNameOld": "a33ef4fd311784dc15401eb54c82e78528c4f961",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 41.92,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void handle(ComponentEvent event) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       ComponentState oldState \u003d getState();\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(MessageFormat.format(\"[COMPONENT {0}]: Invalid event {1} at {2}\",\n             componentSpec.getName(), event.getType(), oldState), e);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n             componentSpec.getName(), oldState, getState(), event.getType());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ComponentEvent event) {\n    writeLock.lock();\n    try {\n      ComponentState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(MessageFormat.format(\"[COMPONENT {0}]: Invalid event {1} at {2}\",\n            componentSpec.getName(), event.getType(), oldState), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n            componentSpec.getName(), oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(ComponentEvent event) {\n    try {\n      writeLock.lock();\n      ComponentState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(MessageFormat.format(\"[COMPONENT {0}]: Invalid event {1} at {2}\",\n            componentSpec.getName(), event.getType(), oldState), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n            componentSpec.getName(), oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
      }
    },
    "79bf5c084d4a063f1a933cae498af23edfd46792": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7029. Add more UTs in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void handle(ComponentEvent event) {\n     try {\n       writeLock.lock();\n       ComponentState oldState \u003d getState();\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n-        LOG.error(\"Invalid event \" + event.getType() +\n-            \" at \" + oldState + \" for component \" + componentSpec.getName(), e);\n+        LOG.error(MessageFormat.format(\"[COMPONENT {0}]: Invalid event {1} at {2}\",\n+            componentSpec.getName(), event.getType(), oldState), e);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n             componentSpec.getName(), oldState, getState(), event.getType());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ComponentEvent event) {\n    try {\n      writeLock.lock();\n      ComponentState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(MessageFormat.format(\"[COMPONENT {0}]: Invalid event {1} at {2}\",\n            componentSpec.getName(), event.getType(), oldState), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n            componentSpec.getName(), oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,18 @@\n+  public void handle(ComponentEvent event) {\n+    try {\n+      writeLock.lock();\n+      ComponentState oldState \u003d getState();\n+      try {\n+        stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitionException e) {\n+        LOG.error(\"Invalid event \" + event.getType() +\n+            \" at \" + oldState + \" for component \" + componentSpec.getName(), e);\n+      }\n+      if (oldState !\u003d getState()) {\n+        LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n+            componentSpec.getName(), oldState, getState(), event.getType());\n+      }\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ComponentEvent event) {\n    try {\n      writeLock.lock();\n      ComponentState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Invalid event \" + event.getType() +\n            \" at \" + oldState + \" for component \" + componentSpec.getName(), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[COMPONENT {}] Transitioned from {} to {} on {} event.\",\n            componentSpec.getName(), oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
    }
  }
}