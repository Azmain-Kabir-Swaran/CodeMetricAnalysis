{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SampleQuantiles.java",
  "functionName": "compress",
  "functionId": "compress",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/util/SampleQuantiles.java",
  "functionStartLine": 176,
  "functionEndLine": 198,
  "numCommitsSeen": 4,
  "timeTaken": 559,
  "changeHistory": [
    "b5b0ac64a18ccefe1626ce985adf576549172911"
  ],
  "changeHistoryShort": {
    "b5b0ac64a18ccefe1626ce985adf576549172911": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b5b0ac64a18ccefe1626ce985adf576549172911": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8541. Better high-percentile latency metrics. Contributed by Andrew Wang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 6:31 PM",
      "commitName": "b5b0ac64a18ccefe1626ce985adf576549172911",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,23 @@\n+  private void compress() {\n+    if (samples.size() \u003c 2) {\n+      return;\n+    }\n+\n+    ListIterator\u003cSampleItem\u003e it \u003d samples.listIterator();\n+    SampleItem prev \u003d null;\n+    SampleItem next \u003d it.next();\n+\n+    while (it.hasNext()) {\n+      prev \u003d next;\n+      next \u003d it.next();\n+      if (prev.g + next.g + next.delta \u003c\u003d allowableError(it.previousIndex())) {\n+        next.g +\u003d prev.g;\n+        // Remove prev. it.remove() kills the last thing returned.\n+        it.previous();\n+        it.previous();\n+        it.remove();\n+        // it.next() is now equal to next, skip it back forward again\n+        it.next();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void compress() {\n    if (samples.size() \u003c 2) {\n      return;\n    }\n\n    ListIterator\u003cSampleItem\u003e it \u003d samples.listIterator();\n    SampleItem prev \u003d null;\n    SampleItem next \u003d it.next();\n\n    while (it.hasNext()) {\n      prev \u003d next;\n      next \u003d it.next();\n      if (prev.g + next.g + next.delta \u003c\u003d allowableError(it.previousIndex())) {\n        next.g +\u003d prev.g;\n        // Remove prev. it.remove() kills the last thing returned.\n        it.previous();\n        it.previous();\n        it.remove();\n        // it.next() is now equal to next, skip it back forward again\n        it.next();\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/util/SampleQuantiles.java"
    }
  }
}