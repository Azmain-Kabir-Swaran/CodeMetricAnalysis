{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHeartbeatResponsePBImpl.java",
  "functionName": "addContainersToSignalToProto",
  "functionId": "addContainersToSignalToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
  "functionStartLine": 787,
  "functionEndLine": 817,
  "numCommitsSeen": 31,
  "timeTaken": 1738,
  "changeHistory": [
    "8f08532bde153811368e1b8336446fba4743f9d2"
  ],
  "changeHistoryShort": {
    "8f08532bde153811368e1b8336446fba4743f9d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f08532bde153811368e1b8336446fba4743f9d2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1897. CLI and core support for signal container functionality. Contributed by Ming Ma\n",
      "commitDate": "02/10/15 6:50 PM",
      "commitName": "8f08532bde153811368e1b8336446fba4743f9d2",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,31 @@\n+  private void addContainersToSignalToProto() {\n+    maybeInitBuilder();\n+    builder.clearContainersToSignal();\n+    if (containersToSignal \u003d\u003d null)\n+      return;\n+\n+    Iterable\u003cSignalContainerRequestProto\u003e iterable \u003d\n+        new Iterable\u003cSignalContainerRequestProto\u003e() {\n+          @Override\n+          public Iterator\u003cSignalContainerRequestProto\u003e iterator() {\n+            return new Iterator\u003cSignalContainerRequestProto\u003e() {\n+              Iterator\u003cSignalContainerRequest\u003e iter \u003d containersToSignal.iterator();\n+              @Override\n+              public boolean hasNext() {\n+                return iter.hasNext();\n+              }\n+\n+              @Override\n+              public SignalContainerRequestProto next() {\n+                return convertToProtoFormat(iter.next());\n+              }\n+\n+              @Override\n+              public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+            };\n+          }\n+        };\n+    builder.addAllContainersToSignal(iterable);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addContainersToSignalToProto() {\n    maybeInitBuilder();\n    builder.clearContainersToSignal();\n    if (containersToSignal \u003d\u003d null)\n      return;\n\n    Iterable\u003cSignalContainerRequestProto\u003e iterable \u003d\n        new Iterable\u003cSignalContainerRequestProto\u003e() {\n          @Override\n          public Iterator\u003cSignalContainerRequestProto\u003e iterator() {\n            return new Iterator\u003cSignalContainerRequestProto\u003e() {\n              Iterator\u003cSignalContainerRequest\u003e iter \u003d containersToSignal.iterator();\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n\n              @Override\n              public SignalContainerRequestProto next() {\n                return convertToProtoFormat(iter.next());\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n          }\n        };\n    builder.addAllContainersToSignal(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java"
    }
  }
}