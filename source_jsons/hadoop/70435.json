{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalSASKeyGeneratorImpl.java",
  "functionName": "getContainerSASUri",
  "functionId": "getContainerSASUri___accountName-String__container-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java",
  "functionStartLine": 80,
  "functionEndLine": 109,
  "numCommitsSeen": 3,
  "timeTaken": 1387,
  "changeHistory": [
    "a868f59d523e1391b719507a76c1aa9fd58278b5",
    "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
    "e92a77099b91620cee84513cc879089907468075"
  ],
  "changeHistoryShort": {
    "a868f59d523e1391b719507a76c1aa9fd58278b5": "Ybodychange",
    "2843c688bcc21c65eb3538ffb3caeaffe440eda8": "Ybodychange",
    "e92a77099b91620cee84513cc879089907468075": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a868f59d523e1391b719507a76c1aa9fd58278b5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16105. WASB in secure mode does not set connectingUsingSAS.\n\nContributed by Steve Loughran.\n",
      "commitDate": "21/02/19 6:08 AM",
      "commitName": "a868f59d523e1391b719507a76c1aa9fd58278b5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/07/17 12:13 AM",
      "commitNameOld": "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 582.29,
      "commitsBetweenForRepo": 4996,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public URI getContainerSASUri(String accountName, String container)\n       throws SASKeyGenerationException {\n \n+    LOG.debug(\"Retrieving Container SAS URI For {}@{}\", container, accountName);\n     try {\n \n       CachedSASKeyEntry cacheKey \u003d new CachedSASKeyEntry(accountName, container, \"/\");\n       URI cacheResult \u003d cache.get(cacheKey);\n       if (cacheResult !\u003d null) {\n         return cacheResult;\n       }\n \n       CloudStorageAccount account \u003d\n           getSASKeyBasedStorageAccountInstance(accountName);\n       CloudBlobClient client \u003d account.createCloudBlobClient();\n       URI sasKey \u003d client.getCredentials().transformUri(\n           client.getContainerReference(container).getUri());\n       cache.put(cacheKey, sasKey);\n       return sasKey;\n \n     } catch (StorageException stoEx) {\n       throw new SASKeyGenerationException(\"Encountered StorageException while\"\n           + \" generating SAS Key for container \" + container + \" inside \"\n               + \"storage account \" + accountName, stoEx);\n     } catch (URISyntaxException uriSyntaxEx) {\n       throw new SASKeyGenerationException(\"Encountered URISyntaxException while\"\n           + \" generating SAS Key for container \" + container + \" inside storage\"\n               + \" account \" + accountName, uriSyntaxEx);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URI getContainerSASUri(String accountName, String container)\n      throws SASKeyGenerationException {\n\n    LOG.debug(\"Retrieving Container SAS URI For {}@{}\", container, accountName);\n    try {\n\n      CachedSASKeyEntry cacheKey \u003d new CachedSASKeyEntry(accountName, container, \"/\");\n      URI cacheResult \u003d cache.get(cacheKey);\n      if (cacheResult !\u003d null) {\n        return cacheResult;\n      }\n\n      CloudStorageAccount account \u003d\n          getSASKeyBasedStorageAccountInstance(accountName);\n      CloudBlobClient client \u003d account.createCloudBlobClient();\n      URI sasKey \u003d client.getCredentials().transformUri(\n          client.getContainerReference(container).getUri());\n      cache.put(cacheKey, sasKey);\n      return sasKey;\n\n    } catch (StorageException stoEx) {\n      throw new SASKeyGenerationException(\"Encountered StorageException while\"\n          + \" generating SAS Key for container \" + container + \" inside \"\n              + \"storage account \" + accountName, stoEx);\n    } catch (URISyntaxException uriSyntaxEx) {\n      throw new SASKeyGenerationException(\"Encountered URISyntaxException while\"\n          + \" generating SAS Key for container \" + container + \" inside storage\"\n              + \" account \" + accountName, uriSyntaxEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java",
      "extendedDetails": {}
    },
    "2843c688bcc21c65eb3538ffb3caeaffe440eda8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14642. wasb: add support for caching Authorization and SASKeys. Contributed by Sivaguru Sankaridurg.\n",
      "commitDate": "19/07/17 12:13 AM",
      "commitName": "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
      "commitAuthor": "Jitendra Pandey",
      "commitDateOld": "22/12/16 8:15 PM",
      "commitNameOld": "e92a77099b91620cee84513cc879089907468075",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 208.12,
      "commitsBetweenForRepo": 1075,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,29 @@\n   public URI getContainerSASUri(String accountName, String container)\n       throws SASKeyGenerationException {\n \n     try {\n \n+      CachedSASKeyEntry cacheKey \u003d new CachedSASKeyEntry(accountName, container, \"/\");\n+      URI cacheResult \u003d cache.get(cacheKey);\n+      if (cacheResult !\u003d null) {\n+        return cacheResult;\n+      }\n+\n       CloudStorageAccount account \u003d\n           getSASKeyBasedStorageAccountInstance(accountName);\n       CloudBlobClient client \u003d account.createCloudBlobClient();\n-      return client.getCredentials().transformUri(\n+      URI sasKey \u003d client.getCredentials().transformUri(\n           client.getContainerReference(container).getUri());\n+      cache.put(cacheKey, sasKey);\n+      return sasKey;\n \n     } catch (StorageException stoEx) {\n       throw new SASKeyGenerationException(\"Encountered StorageException while\"\n           + \" generating SAS Key for container \" + container + \" inside \"\n               + \"storage account \" + accountName, stoEx);\n     } catch (URISyntaxException uriSyntaxEx) {\n       throw new SASKeyGenerationException(\"Encountered URISyntaxException while\"\n           + \" generating SAS Key for container \" + container + \" inside storage\"\n               + \" account \" + accountName, uriSyntaxEx);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URI getContainerSASUri(String accountName, String container)\n      throws SASKeyGenerationException {\n\n    try {\n\n      CachedSASKeyEntry cacheKey \u003d new CachedSASKeyEntry(accountName, container, \"/\");\n      URI cacheResult \u003d cache.get(cacheKey);\n      if (cacheResult !\u003d null) {\n        return cacheResult;\n      }\n\n      CloudStorageAccount account \u003d\n          getSASKeyBasedStorageAccountInstance(accountName);\n      CloudBlobClient client \u003d account.createCloudBlobClient();\n      URI sasKey \u003d client.getCredentials().transformUri(\n          client.getContainerReference(container).getUri());\n      cache.put(cacheKey, sasKey);\n      return sasKey;\n\n    } catch (StorageException stoEx) {\n      throw new SASKeyGenerationException(\"Encountered StorageException while\"\n          + \" generating SAS Key for container \" + container + \" inside \"\n              + \"storage account \" + accountName, stoEx);\n    } catch (URISyntaxException uriSyntaxEx) {\n      throw new SASKeyGenerationException(\"Encountered URISyntaxException while\"\n          + \" generating SAS Key for container \" + container + \" inside storage\"\n              + \" account \" + accountName, uriSyntaxEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java",
      "extendedDetails": {}
    },
    "e92a77099b91620cee84513cc879089907468075": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13863. Azure: Add a new SAS key mode for WASB. Contributed by Dushyanth\n",
      "commitDate": "22/12/16 8:15 PM",
      "commitName": "e92a77099b91620cee84513cc879089907468075",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,21 @@\n+  public URI getContainerSASUri(String accountName, String container)\n+      throws SASKeyGenerationException {\n+\n+    try {\n+\n+      CloudStorageAccount account \u003d\n+          getSASKeyBasedStorageAccountInstance(accountName);\n+      CloudBlobClient client \u003d account.createCloudBlobClient();\n+      return client.getCredentials().transformUri(\n+          client.getContainerReference(container).getUri());\n+\n+    } catch (StorageException stoEx) {\n+      throw new SASKeyGenerationException(\"Encountered StorageException while\"\n+          + \" generating SAS Key for container \" + container + \" inside \"\n+              + \"storage account \" + accountName, stoEx);\n+    } catch (URISyntaxException uriSyntaxEx) {\n+      throw new SASKeyGenerationException(\"Encountered URISyntaxException while\"\n+          + \" generating SAS Key for container \" + container + \" inside storage\"\n+              + \" account \" + accountName, uriSyntaxEx);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public URI getContainerSASUri(String accountName, String container)\n      throws SASKeyGenerationException {\n\n    try {\n\n      CloudStorageAccount account \u003d\n          getSASKeyBasedStorageAccountInstance(accountName);\n      CloudBlobClient client \u003d account.createCloudBlobClient();\n      return client.getCredentials().transformUri(\n          client.getContainerReference(container).getUri());\n\n    } catch (StorageException stoEx) {\n      throw new SASKeyGenerationException(\"Encountered StorageException while\"\n          + \" generating SAS Key for container \" + container + \" inside \"\n              + \"storage account \" + accountName, stoEx);\n    } catch (URISyntaxException uriSyntaxEx) {\n      throw new SASKeyGenerationException(\"Encountered URISyntaxException while\"\n          + \" generating SAS Key for container \" + container + \" inside storage\"\n              + \" account \" + accountName, uriSyntaxEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java"
    }
  }
}