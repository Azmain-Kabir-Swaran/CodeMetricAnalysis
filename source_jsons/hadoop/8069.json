{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EditLogFileInputStream.java",
  "functionName": "readLogVersion",
  "functionId": "readLogVersion___in-DataInputStream__verifyLayoutVersion-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
  "functionStartLine": 368,
  "functionEndLine": 386,
  "numCommitsSeen": 75,
  "timeTaken": 6987,
  "changeHistory": [
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "9dab514b22f49322738935cfd915c2b4eba50b88",
    "00067895a01c66d53715b50bbcb3605efd6425f2",
    "9a07ba8945407cd8f63169faf9e0faa4311d38c7",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "53190cfa1d43762e463bcb957929097742db08ba",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "9dab514b22f49322738935cfd915c2b4eba50b88": "Ymultichange(Yparameterchange,Ybodychange)",
    "00067895a01c66d53715b50bbcb3605efd6425f2": "Ybodychange",
    "9a07ba8945407cd8f63169faf9e0faa4311d38c7": "Ybodychange",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "53190cfa1d43762e463bcb957929097742db08ba": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/09/14 2:02 PM",
      "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 241.83,
      "commitsBetweenForRepo": 2090,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   static int readLogVersion(DataInputStream in, boolean verifyLayoutVersion)\n       throws IOException, LogHeaderCorruptException {\n     int logVersion;\n     try {\n       logVersion \u003d in.readInt();\n     } catch (EOFException eofe) {\n       throw new LogHeaderCorruptException(\n           \"Reached EOF when reading log header\");\n     }\n     if (verifyLayoutVersion \u0026\u0026\n-        (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n+        (logVersion \u003c HdfsServerConstants.NAMENODE_LAYOUT_VERSION || // future version\n          logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION)) { // unsupported\n       throw new LogHeaderCorruptException(\n           \"Unexpected version of the file system log file: \"\n           + logVersion + \". Current version \u003d \"\n-          + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n+          + HdfsServerConstants.NAMENODE_LAYOUT_VERSION + \".\");\n     }\n     return logVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static int readLogVersion(DataInputStream in, boolean verifyLayoutVersion)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (verifyLayoutVersion \u0026\u0026\n        (logVersion \u003c HdfsServerConstants.NAMENODE_LAYOUT_VERSION || // future version\n         logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION)) { // unsupported\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + HdfsServerConstants.NAMENODE_LAYOUT_VERSION + \".\");\n    }\n    return logVersion;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {}
    },
    "9dab514b22f49322738935cfd915c2b4eba50b88": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 4:06 PM",
      "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/14 4:06 PM",
          "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "30/01/14 7:21 PM",
          "commitNameOld": "00067895a01c66d53715b50bbcb3605efd6425f2",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 48.82,
          "commitsBetweenForRepo": 444,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static int readLogVersion(DataInputStream in)\n+  static int readLogVersion(DataInputStream in, boolean verifyLayoutVersion)\n       throws IOException, LogHeaderCorruptException {\n     int logVersion;\n     try {\n       logVersion \u003d in.readInt();\n     } catch (EOFException eofe) {\n       throw new LogHeaderCorruptException(\n           \"Reached EOF when reading log header\");\n     }\n-    if (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n-        logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION) { // unsupported\n+    if (verifyLayoutVersion \u0026\u0026\n+        (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n+         logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION)) { // unsupported\n       throw new LogHeaderCorruptException(\n           \"Unexpected version of the file system log file: \"\n           + logVersion + \". Current version \u003d \"\n           + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n     }\n     return logVersion;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static int readLogVersion(DataInputStream in, boolean verifyLayoutVersion)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (verifyLayoutVersion \u0026\u0026\n        (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n         logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION)) { // unsupported\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n    }\n    return logVersion;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {
            "oldValue": "[in-DataInputStream]",
            "newValue": "[in-DataInputStream, verifyLayoutVersion-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/14 4:06 PM",
          "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "30/01/14 7:21 PM",
          "commitNameOld": "00067895a01c66d53715b50bbcb3605efd6425f2",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 48.82,
          "commitsBetweenForRepo": 444,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static int readLogVersion(DataInputStream in)\n+  static int readLogVersion(DataInputStream in, boolean verifyLayoutVersion)\n       throws IOException, LogHeaderCorruptException {\n     int logVersion;\n     try {\n       logVersion \u003d in.readInt();\n     } catch (EOFException eofe) {\n       throw new LogHeaderCorruptException(\n           \"Reached EOF when reading log header\");\n     }\n-    if (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n-        logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION) { // unsupported\n+    if (verifyLayoutVersion \u0026\u0026\n+        (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n+         logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION)) { // unsupported\n       throw new LogHeaderCorruptException(\n           \"Unexpected version of the file system log file: \"\n           + logVersion + \". Current version \u003d \"\n           + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n     }\n     return logVersion;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static int readLogVersion(DataInputStream in, boolean verifyLayoutVersion)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (verifyLayoutVersion \u0026\u0026\n        (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n         logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION)) { // unsupported\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n    }\n    return logVersion;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "00067895a01c66d53715b50bbcb3605efd6425f2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5754. Split LayoutVerion into NameNodeLayoutVersion and DataNodeLayoutVersion. Contributed by Brandon Li\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1563041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 7:21 PM",
      "commitName": "00067895a01c66d53715b50bbcb3605efd6425f2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/01/14 5:32 PM",
      "commitNameOld": "a7ec44d41b0ad1fa133408a10caaae32a27ea569",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 14.08,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   static int readLogVersion(DataInputStream in)\n       throws IOException, LogHeaderCorruptException {\n     int logVersion;\n     try {\n       logVersion \u003d in.readInt();\n     } catch (EOFException eofe) {\n       throw new LogHeaderCorruptException(\n           \"Reached EOF when reading log header\");\n     }\n-    if (logVersion \u003c HdfsConstants.LAYOUT_VERSION || // future version\n+    if (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n         logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION) { // unsupported\n       throw new LogHeaderCorruptException(\n           \"Unexpected version of the file system log file: \"\n           + logVersion + \". Current version \u003d \"\n-          + HdfsConstants.LAYOUT_VERSION + \".\");\n+          + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n     }\n     return logVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c HdfsConstants.NAMENODE_LAYOUT_VERSION || // future version\n        logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION) { // unsupported\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + HdfsConstants.NAMENODE_LAYOUT_VERSION + \".\");\n    }\n    return logVersion;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {}
    },
    "9a07ba8945407cd8f63169faf9e0faa4311d38c7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2709. Appropriately handle error conditions in EditLogTailer. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228390 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/12 12:44 PM",
      "commitName": "9a07ba8945407cd8f63169faf9e0faa4311d38c7",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "05/12/11 2:10 PM",
      "commitNameOld": "f39aac60e0b0c2cd4c82607c02501dde43afe02c",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 31.94,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   static int readLogVersion(DataInputStream in)\n       throws IOException, LogHeaderCorruptException {\n     int logVersion;\n     try {\n       logVersion \u003d in.readInt();\n     } catch (EOFException eofe) {\n       throw new LogHeaderCorruptException(\n           \"Reached EOF when reading log header\");\n     }\n-    if (logVersion \u003c HdfsConstants.LAYOUT_VERSION) { // future version\n+    if (logVersion \u003c HdfsConstants.LAYOUT_VERSION || // future version\n+        logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION) { // unsupported\n       throw new LogHeaderCorruptException(\n           \"Unexpected version of the file system log file: \"\n           + logVersion + \". Current version \u003d \"\n           + HdfsConstants.LAYOUT_VERSION + \".\");\n     }\n-    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-      \"Unsupported version \" + logVersion;\n     return logVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c HdfsConstants.LAYOUT_VERSION || // future version\n        logVersion \u003e Storage.LAST_UPGRADABLE_LAYOUT_VERSION) { // unsupported\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + HdfsConstants.LAYOUT_VERSION + \".\");\n    }\n    return logVersion;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {}
    },
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1620. Rename HdfsConstants -\u003e HdfsServerConstants, FSConstants -\u003e HdfsConstants. (Harsh J Chouraria via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/11 12:30 PM",
      "commitName": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 10.8,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   static int readLogVersion(DataInputStream in)\n       throws IOException, LogHeaderCorruptException {\n     int logVersion;\n     try {\n       logVersion \u003d in.readInt();\n     } catch (EOFException eofe) {\n       throw new LogHeaderCorruptException(\n           \"Reached EOF when reading log header\");\n     }\n-    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n+    if (logVersion \u003c HdfsConstants.LAYOUT_VERSION) { // future version\n       throw new LogHeaderCorruptException(\n           \"Unexpected version of the file system log file: \"\n           + logVersion + \". Current version \u003d \"\n-          + FSConstants.LAYOUT_VERSION + \".\");\n+          + HdfsConstants.LAYOUT_VERSION + \".\");\n     }\n     assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n       \"Unsupported version \" + logVersion;\n     return logVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c HdfsConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + HdfsConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java"
      }
    },
    "53190cfa1d43762e463bcb957929097742db08ba": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-2187. Make EditLogInputStream act like an iterator over FSEditLogOps. Contributed by Ivan Kelly and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153996 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/08/11 1:22 PM",
      "commitName": "53190cfa1d43762e463bcb957929097742db08ba",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2187. Make EditLogInputStream act like an iterator over FSEditLogOps. Contributed by Ivan Kelly and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 1:22 PM",
          "commitName": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 10:01 AM",
          "commitNameOld": "924ed1366436c0f981361fcdf744099f42da0021",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,19 @@\n-    private static int readLogVersion(DataInputStream in) throws IOException {\n-      int logVersion \u003d 0;\n-      // Read log file version. Could be missing.\n-      in.mark(4);\n-      // If edits log is greater than 2G, available method will return negative\n-      // numbers, so we avoid having to call available\n-      boolean available \u003d true;\n-      try {\n-        logVersion \u003d in.readByte();\n-      } catch (EOFException e) {\n-        available \u003d false;\n-      }\n-      if (available) {\n-        in.reset();\n-        logVersion \u003d in.readInt();\n-        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n-          throw new IOException(\n-              \"Unexpected version of the file system log file: \"\n-              + logVersion + \". Current version \u003d \"\n-              + FSConstants.LAYOUT_VERSION + \".\");\n-      }\n-      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-        \"Unsupported version \" + logVersion;\n-      return logVersion;\n-    }\n\\ No newline at end of file\n+  static int readLogVersion(DataInputStream in)\n+      throws IOException, LogHeaderCorruptException {\n+    int logVersion;\n+    try {\n+      logVersion \u003d in.readInt();\n+    } catch (EOFException eofe) {\n+      throw new LogHeaderCorruptException(\n+          \"Reached EOF when reading log header\");\n+    }\n+    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n+      throw new LogHeaderCorruptException(\n+          \"Unexpected version of the file system log file: \"\n+          + logVersion + \". Current version \u003d \"\n+          + FSConstants.LAYOUT_VERSION + \".\");\n+    }\n+    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+      \"Unsupported version \" + logVersion;\n+    return logVersion;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
            "oldMethodName": "readLogVersion",
            "newMethodName": "readLogVersion"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2187. Make EditLogInputStream act like an iterator over FSEditLogOps. Contributed by Ivan Kelly and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 1:22 PM",
          "commitName": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 10:01 AM",
          "commitNameOld": "924ed1366436c0f981361fcdf744099f42da0021",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,19 @@\n-    private static int readLogVersion(DataInputStream in) throws IOException {\n-      int logVersion \u003d 0;\n-      // Read log file version. Could be missing.\n-      in.mark(4);\n-      // If edits log is greater than 2G, available method will return negative\n-      // numbers, so we avoid having to call available\n-      boolean available \u003d true;\n-      try {\n-        logVersion \u003d in.readByte();\n-      } catch (EOFException e) {\n-        available \u003d false;\n-      }\n-      if (available) {\n-        in.reset();\n-        logVersion \u003d in.readInt();\n-        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n-          throw new IOException(\n-              \"Unexpected version of the file system log file: \"\n-              + logVersion + \". Current version \u003d \"\n-              + FSConstants.LAYOUT_VERSION + \".\");\n-      }\n-      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-        \"Unsupported version \" + logVersion;\n-      return logVersion;\n-    }\n\\ No newline at end of file\n+  static int readLogVersion(DataInputStream in)\n+      throws IOException, LogHeaderCorruptException {\n+    int logVersion;\n+    try {\n+      logVersion \u003d in.readInt();\n+    } catch (EOFException eofe) {\n+      throw new LogHeaderCorruptException(\n+          \"Reached EOF when reading log header\");\n+    }\n+    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n+      throw new LogHeaderCorruptException(\n+          \"Unexpected version of the file system log file: \"\n+          + logVersion + \". Current version \u003d \"\n+          + FSConstants.LAYOUT_VERSION + \".\");\n+    }\n+    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+      \"Unsupported version \" + logVersion;\n+    return logVersion;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-2187. Make EditLogInputStream act like an iterator over FSEditLogOps. Contributed by Ivan Kelly and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 1:22 PM",
          "commitName": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 10:01 AM",
          "commitNameOld": "924ed1366436c0f981361fcdf744099f42da0021",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,19 @@\n-    private static int readLogVersion(DataInputStream in) throws IOException {\n-      int logVersion \u003d 0;\n-      // Read log file version. Could be missing.\n-      in.mark(4);\n-      // If edits log is greater than 2G, available method will return negative\n-      // numbers, so we avoid having to call available\n-      boolean available \u003d true;\n-      try {\n-        logVersion \u003d in.readByte();\n-      } catch (EOFException e) {\n-        available \u003d false;\n-      }\n-      if (available) {\n-        in.reset();\n-        logVersion \u003d in.readInt();\n-        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n-          throw new IOException(\n-              \"Unexpected version of the file system log file: \"\n-              + logVersion + \". Current version \u003d \"\n-              + FSConstants.LAYOUT_VERSION + \".\");\n-      }\n-      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-        \"Unsupported version \" + logVersion;\n-      return logVersion;\n-    }\n\\ No newline at end of file\n+  static int readLogVersion(DataInputStream in)\n+      throws IOException, LogHeaderCorruptException {\n+    int logVersion;\n+    try {\n+      logVersion \u003d in.readInt();\n+    } catch (EOFException eofe) {\n+      throw new LogHeaderCorruptException(\n+          \"Reached EOF when reading log header\");\n+    }\n+    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n+      throw new LogHeaderCorruptException(\n+          \"Unexpected version of the file system log file: \"\n+          + logVersion + \". Current version \u003d \"\n+          + FSConstants.LAYOUT_VERSION + \".\");\n+    }\n+    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+      \"Unsupported version \" + logVersion;\n+    return logVersion;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, LogHeaderCorruptException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2187. Make EditLogInputStream act like an iterator over FSEditLogOps. Contributed by Ivan Kelly and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 1:22 PM",
          "commitName": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 10:01 AM",
          "commitNameOld": "924ed1366436c0f981361fcdf744099f42da0021",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,19 @@\n-    private static int readLogVersion(DataInputStream in) throws IOException {\n-      int logVersion \u003d 0;\n-      // Read log file version. Could be missing.\n-      in.mark(4);\n-      // If edits log is greater than 2G, available method will return negative\n-      // numbers, so we avoid having to call available\n-      boolean available \u003d true;\n-      try {\n-        logVersion \u003d in.readByte();\n-      } catch (EOFException e) {\n-        available \u003d false;\n-      }\n-      if (available) {\n-        in.reset();\n-        logVersion \u003d in.readInt();\n-        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n-          throw new IOException(\n-              \"Unexpected version of the file system log file: \"\n-              + logVersion + \". Current version \u003d \"\n-              + FSConstants.LAYOUT_VERSION + \".\");\n-      }\n-      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-        \"Unsupported version \" + logVersion;\n-      return logVersion;\n-    }\n\\ No newline at end of file\n+  static int readLogVersion(DataInputStream in)\n+      throws IOException, LogHeaderCorruptException {\n+    int logVersion;\n+    try {\n+      logVersion \u003d in.readInt();\n+    } catch (EOFException eofe) {\n+      throw new LogHeaderCorruptException(\n+          \"Reached EOF when reading log header\");\n+    }\n+    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n+      throw new LogHeaderCorruptException(\n+          \"Unexpected version of the file system log file: \"\n+          + logVersion + \". Current version \u003d \"\n+          + FSConstants.LAYOUT_VERSION + \".\");\n+    }\n+    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+      \"Unsupported version \" + logVersion;\n+    return logVersion;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static int readLogVersion(DataInputStream in)\n      throws IOException, LogHeaderCorruptException {\n    int logVersion;\n    try {\n      logVersion \u003d in.readInt();\n    } catch (EOFException eofe) {\n      throw new LogHeaderCorruptException(\n          \"Reached EOF when reading log header\");\n    }\n    if (logVersion \u003c FSConstants.LAYOUT_VERSION) { // future version\n      throw new LogHeaderCorruptException(\n          \"Unexpected version of the file system log file: \"\n          + logVersion + \". Current version \u003d \"\n          + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/07/11 6:44 AM",
          "commitNameOld": "c58366acd1d09bc657594382b640d008e9b21ba7",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  int readLogVersion(DataInputStream in) throws IOException {\n-    int logVersion \u003d 0;\n-    // Read log file version. Could be missing.\n-    in.mark(4);\n-    // If edits log is greater than 2G, available method will return negative\n-    // numbers, so we avoid having to call available\n-    boolean available \u003d true;\n-    try {\n-      logVersion \u003d in.readByte();\n-    } catch (EOFException e) {\n-      available \u003d false;\n-    }\n-    if (available) {\n-      in.reset();\n-      logVersion \u003d in.readInt();\n-      if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n-        throw new IOException(\n-            \"Unexpected version of the file system log file: \"\n-            + logVersion + \". Current version \u003d \"\n-            + FSConstants.LAYOUT_VERSION + \".\");\n-    }\n-    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-      \"Unsupported version \" + logVersion;\n-    return logVersion;\n-  }\n\\ No newline at end of file\n+    private static int readLogVersion(DataInputStream in) throws IOException {\n+      int logVersion \u003d 0;\n+      // Read log file version. Could be missing.\n+      in.mark(4);\n+      // If edits log is greater than 2G, available method will return negative\n+      // numbers, so we avoid having to call available\n+      boolean available \u003d true;\n+      try {\n+        logVersion \u003d in.readByte();\n+      } catch (EOFException e) {\n+        available \u003d false;\n+      }\n+      if (available) {\n+        in.reset();\n+        logVersion \u003d in.readInt();\n+        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n+          throw new IOException(\n+              \"Unexpected version of the file system log file: \"\n+              + logVersion + \". Current version \u003d \"\n+              + FSConstants.LAYOUT_VERSION + \".\");\n+      }\n+      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+        \"Unsupported version \" + logVersion;\n+      return logVersion;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static int readLogVersion(DataInputStream in) throws IOException {\n      int logVersion \u003d 0;\n      // Read log file version. Could be missing.\n      in.mark(4);\n      // If edits log is greater than 2G, available method will return negative\n      // numbers, so we avoid having to call available\n      boolean available \u003d true;\n      try {\n        logVersion \u003d in.readByte();\n      } catch (EOFException e) {\n        available \u003d false;\n      }\n      if (available) {\n        in.reset();\n        logVersion \u003d in.readInt();\n        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n          throw new IOException(\n              \"Unexpected version of the file system log file: \"\n              + logVersion + \". Current version \u003d \"\n              + FSConstants.LAYOUT_VERSION + \".\");\n      }\n      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n        \"Unsupported version \" + logVersion;\n      return logVersion;\n    }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
            "oldMethodName": "readLogVersion",
            "newMethodName": "readLogVersion"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/07/11 6:44 AM",
          "commitNameOld": "c58366acd1d09bc657594382b640d008e9b21ba7",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  int readLogVersion(DataInputStream in) throws IOException {\n-    int logVersion \u003d 0;\n-    // Read log file version. Could be missing.\n-    in.mark(4);\n-    // If edits log is greater than 2G, available method will return negative\n-    // numbers, so we avoid having to call available\n-    boolean available \u003d true;\n-    try {\n-      logVersion \u003d in.readByte();\n-    } catch (EOFException e) {\n-      available \u003d false;\n-    }\n-    if (available) {\n-      in.reset();\n-      logVersion \u003d in.readInt();\n-      if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n-        throw new IOException(\n-            \"Unexpected version of the file system log file: \"\n-            + logVersion + \". Current version \u003d \"\n-            + FSConstants.LAYOUT_VERSION + \".\");\n-    }\n-    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n-      \"Unsupported version \" + logVersion;\n-    return logVersion;\n-  }\n\\ No newline at end of file\n+    private static int readLogVersion(DataInputStream in) throws IOException {\n+      int logVersion \u003d 0;\n+      // Read log file version. Could be missing.\n+      in.mark(4);\n+      // If edits log is greater than 2G, available method will return negative\n+      // numbers, so we avoid having to call available\n+      boolean available \u003d true;\n+      try {\n+        logVersion \u003d in.readByte();\n+      } catch (EOFException e) {\n+        available \u003d false;\n+      }\n+      if (available) {\n+        in.reset();\n+        logVersion \u003d in.readInt();\n+        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n+          throw new IOException(\n+              \"Unexpected version of the file system log file: \"\n+              + logVersion + \". Current version \u003d \"\n+              + FSConstants.LAYOUT_VERSION + \".\");\n+      }\n+      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+        \"Unsupported version \" + logVersion;\n+      return logVersion;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static int readLogVersion(DataInputStream in) throws IOException {\n      int logVersion \u003d 0;\n      // Read log file version. Could be missing.\n      in.mark(4);\n      // If edits log is greater than 2G, available method will return negative\n      // numbers, so we avoid having to call available\n      boolean available \u003d true;\n      try {\n        logVersion \u003d in.readByte();\n      } catch (EOFException e) {\n        available \u003d false;\n      }\n      if (available) {\n        in.reset();\n        logVersion \u003d in.readInt();\n        if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n          throw new IOException(\n              \"Unexpected version of the file system log file: \"\n              + logVersion + \". Current version \u003d \"\n              + FSConstants.LAYOUT_VERSION + \".\");\n      }\n      assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n        \"Unsupported version \" + logVersion;\n      return logVersion;\n    }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private, static]"
          }
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,25 @@\n+  int readLogVersion(DataInputStream in) throws IOException {\n+    int logVersion \u003d 0;\n+    // Read log file version. Could be missing.\n+    in.mark(4);\n+    // If edits log is greater than 2G, available method will return negative\n+    // numbers, so we avoid having to call available\n+    boolean available \u003d true;\n+    try {\n+      logVersion \u003d in.readByte();\n+    } catch (EOFException e) {\n+      available \u003d false;\n+    }\n+    if (available) {\n+      in.reset();\n+      logVersion \u003d in.readInt();\n+      if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n+        throw new IOException(\n+            \"Unexpected version of the file system log file: \"\n+            + logVersion + \". Current version \u003d \"\n+            + FSConstants.LAYOUT_VERSION + \".\");\n+    }\n+    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n+      \"Unsupported version \" + logVersion;\n+    return logVersion;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  int readLogVersion(DataInputStream in) throws IOException {\n    int logVersion \u003d 0;\n    // Read log file version. Could be missing.\n    in.mark(4);\n    // If edits log is greater than 2G, available method will return negative\n    // numbers, so we avoid having to call available\n    boolean available \u003d true;\n    try {\n      logVersion \u003d in.readByte();\n    } catch (EOFException e) {\n      available \u003d false;\n    }\n    if (available) {\n      in.reset();\n      logVersion \u003d in.readInt();\n      if (logVersion \u003c FSConstants.LAYOUT_VERSION) // future version\n        throw new IOException(\n            \"Unexpected version of the file system log file: \"\n            + logVersion + \". Current version \u003d \"\n            + FSConstants.LAYOUT_VERSION + \".\");\n    }\n    assert logVersion \u003c\u003d Storage.LAST_UPGRADABLE_LAYOUT_VERSION :\n      \"Unsupported version \" + logVersion;\n    return logVersion;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java"
    }
  }
}