{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSAdmin.java",
  "functionName": "getUpgradeStatus",
  "functionId": "getUpgradeStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
  "functionStartLine": 1457,
  "functionEndLine": 1499,
  "numCommitsSeen": 114,
  "timeTaken": 2251,
  "changeHistory": [
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f"
  ],
  "changeHistoryShort": {
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13589: Add dfsAdmin command to query if upgrade is finalized. Contributed by Hanisha Koneru\n",
      "commitDate": "23/05/18 10:15 AM",
      "commitName": "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f",
      "commitAuthor": "Bharat Viswanadham",
      "diff": "@@ -0,0 +1,43 @@\n+  public int getUpgradeStatus() throws IOException {\n+    DistributedFileSystem dfs \u003d getDFS();\n+\n+    Configuration dfsConf \u003d dfs.getConf();\n+    URI dfsUri \u003d dfs.getUri();\n+\n+    boolean isHaAndLogicalUri \u003d HAUtilClient.isLogicalUri(dfsConf, dfsUri);\n+    if (isHaAndLogicalUri) {\n+      // In the case of HA and logical URI, run upgrade query for all\n+      // NNs in this nameservice.\n+      String nsId \u003d dfsUri.getHost();\n+      List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n+          HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf,\n+              nsId, ClientProtocol.class);\n+      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003c\u003e();\n+      for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n+        try {\n+          boolean upgradeFinalized \u003d proxy.getProxy().upgradeStatus();\n+          if (upgradeFinalized) {\n+            System.out.println(\"Upgrade finalized for \" + proxy.getAddress());\n+          } else {\n+            System.out.println(\"Upgrade not finalized for \" +\n+                proxy.getAddress());\n+          }\n+        } catch (IOException ioe){\n+          System.err.println(\"Getting upgrade status failed for \" +\n+              proxy.getAddress());\n+          exceptions.add(ioe);\n+        }\n+      }\n+      if (!exceptions.isEmpty()){\n+        throw MultipleIOException.createIOException(exceptions);\n+      }\n+    } else {\n+      if (dfs.upgradeStatus()) {\n+        System.out.println(\"Upgrade finalized\");\n+      } else {\n+        System.out.println(\"Upgrade not finalized\");\n+      }\n+    }\n+\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int getUpgradeStatus() throws IOException {\n    DistributedFileSystem dfs \u003d getDFS();\n\n    Configuration dfsConf \u003d dfs.getConf();\n    URI dfsUri \u003d dfs.getUri();\n\n    boolean isHaAndLogicalUri \u003d HAUtilClient.isLogicalUri(dfsConf, dfsUri);\n    if (isHaAndLogicalUri) {\n      // In the case of HA and logical URI, run upgrade query for all\n      // NNs in this nameservice.\n      String nsId \u003d dfsUri.getHost();\n      List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n          HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf,\n              nsId, ClientProtocol.class);\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003c\u003e();\n      for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n        try {\n          boolean upgradeFinalized \u003d proxy.getProxy().upgradeStatus();\n          if (upgradeFinalized) {\n            System.out.println(\"Upgrade finalized for \" + proxy.getAddress());\n          } else {\n            System.out.println(\"Upgrade not finalized for \" +\n                proxy.getAddress());\n          }\n        } catch (IOException ioe){\n          System.err.println(\"Getting upgrade status failed for \" +\n              proxy.getAddress());\n          exceptions.add(ioe);\n        }\n      }\n      if (!exceptions.isEmpty()){\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    } else {\n      if (dfs.upgradeStatus()) {\n        System.out.println(\"Upgrade finalized\");\n      } else {\n        System.out.println(\"Upgrade not finalized\");\n      }\n    }\n\n    return 0;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
    }
  }
}