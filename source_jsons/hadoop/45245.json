{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 189,
  "functionEndLine": 200,
  "numCommitsSeen": 79,
  "timeTaken": 2719,
  "changeHistory": [
    "51432779588fdd741b4840601f5db637ec783d92",
    "33b5a81509ed08e88bb692682e75fb779f8e2e19",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "77e134d13fb87cd098f2e9c23212affe0a7be1be",
    "0928502029ef141759008997335ea2cd836a7154",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "be256a181985737ade3f8231b472a2438659c3b2",
    "0a61990855c23ebfa065145fa01084e84781b51c"
  ],
  "changeHistoryShort": {
    "51432779588fdd741b4840601f5db637ec783d92": "Ybodychange",
    "33b5a81509ed08e88bb692682e75fb779f8e2e19": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "77e134d13fb87cd098f2e9c23212affe0a7be1be": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "be256a181985737ade3f8231b472a2438659c3b2": "Ybodychange",
    "0a61990855c23ebfa065145fa01084e84781b51c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "51432779588fdd741b4840601f5db637ec783d92": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5124. Modify AMRMClient to set the ExecutionType in the ResourceRequest. (asuresh)\n",
      "commitDate": "12/06/16 9:42 AM",
      "commitName": "51432779588fdd741b4840601f5db637ec783d92",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 14.03,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,12 @@\n   protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     try {\n-      rmClient \u003d\n-          ClientRMProxy.createRMProxy(conf, ApplicationMasterProtocol.class);\n+      if (rmClient \u003d\u003d null) {\n+        rmClient \u003d ClientRMProxy.createRMProxy(\n+            conf, ApplicationMasterProtocol.class);\n+      }\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    try {\n      if (rmClient \u003d\u003d null) {\n        rmClient \u003d ClientRMProxy.createRMProxy(\n            conf, ApplicationMasterProtocol.class);\n      }\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "33b5a81509ed08e88bb692682e75fb779f8e2e19": {
      "type": "Ybodychange",
      "commitMessage": "YARN-513. Create common proxy client for communicating with RM (Xuan Gong \u0026 Jian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 3:47 PM",
      "commitName": "33b5a81509ed08e88bb692682e75fb779f8e2e19",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "15/07/13 5:23 PM",
      "commitNameOld": "1fe8e2d7eed74453cfe172853881fafc360a10b6",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,9 @@\n   protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n-    final YarnRPC rpc \u003d YarnRPC.create(conf);\n-    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n-        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n-        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n-        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n-\n-    UserGroupInformation currentUser;\n     try {\n-      currentUser \u003d UserGroupInformation.getCurrentUser();\n+      rmClient \u003d ClientRMProxy.createRMProxy(conf, ApplicationMasterProtocol.class);\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n-\n-    // CurrentUser should already have AMToken loaded.\n-    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cApplicationMasterProtocol\u003e() {\n-      @Override\n-      public ApplicationMasterProtocol run() {\n-        return (ApplicationMasterProtocol) rpc.getProxy(ApplicationMasterProtocol.class, rmAddress,\n-            conf);\n-      }\n-    });\n-    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    try {\n      rmClient \u003d ClientRMProxy.createRMProxy(conf, ApplicationMasterProtocol.class);\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cApplicationMasterProtocol\u003e() {\n      @Override\n      public ApplicationMasterProtocol run() {\n        return (ApplicationMasterProtocol) rpc.getProxy(ApplicationMasterProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
      }
    },
    "77e134d13fb87cd098f2e9c23212affe0a7be1be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-387. Renamed YARN protocols for consistency. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493623 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 7:27 PM",
      "commitName": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "16/06/13 3:11 PM",
      "commitNameOld": "02f87683e3febeef28de028dfedc1e12ea39abad",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n \n     // CurrentUser should already have AMToken loaded.\n-    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n+    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cApplicationMasterProtocol\u003e() {\n       @Override\n-      public AMRMProtocol run() {\n-        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n+      public ApplicationMasterProtocol run() {\n+        return (ApplicationMasterProtocol) rpc.getProxy(ApplicationMasterProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cApplicationMasterProtocol\u003e() {\n      @Override\n      public ApplicationMasterProtocol run() {\n        return (ApplicationMasterProtocol) rpc.getProxy(ApplicationMasterProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/06/13 11:46 AM",
          "commitNameOld": "2051fd5ee29e99df6fe79c70b0c7c8c0c1cc131f",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.88,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n \n     // CurrentUser should already have AMToken loaded.\n     rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n       @Override\n       public AMRMProtocol run() {\n         return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "start",
            "newValue": "serviceStart"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/06/13 11:46 AM",
          "commitNameOld": "2051fd5ee29e99df6fe79c70b0c7c8c0c1cc131f",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.88,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n \n     // CurrentUser should already have AMToken loaded.\n     rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n       @Override\n       public AMRMProtocol run() {\n         return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/06/13 11:46 AM",
          "commitNameOld": "2051fd5ee29e99df6fe79c70b0c7c8c0c1cc131f",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.88,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n \n     // CurrentUser should already have AMToken loaded.\n     rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n       @Override\n       public AMRMProtocol run() {\n         return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/06/13 11:46 AM",
          "commitNameOld": "2051fd5ee29e99df6fe79c70b0c7c8c0c1cc131f",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.88,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n \n     // CurrentUser should already have AMToken loaded.\n     rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n       @Override\n       public AMRMProtocol run() {\n         return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/06/13 5:34 PM",
      "commitNameOld": "d33534c4fb35cb82ff8d56abeeb63a949e72a031",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public synchronized void start() {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     }\n \n     // CurrentUser should already have AMToken loaded.\n     rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n       @Override\n       public AMRMProtocol run() {\n         return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "be256a181985737ade3f8231b472a2438659c3b2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-579. Stop setting the Application Token in the AppMaster env, in favour of the copy present in the container token field. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1471814 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/13 7:46 PM",
      "commitName": "be256a181985737ade3f8231b472a2438659c3b2",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "28/03/13 12:44 PM",
      "commitNameOld": "520033b1cd81c76b38fcdcfcfeed16158db4bbba",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 27.29,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,26 @@\n   public synchronized void start() {\n     final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n \n     UserGroupInformation currentUser;\n     try {\n       currentUser \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n \n-    if (UserGroupInformation.isSecurityEnabled()) {\n-      String tokenURLEncodedStr \u003d System.getenv().get(\n-          ApplicationConstants.APPLICATION_MASTER_TOKEN_ENV_NAME);\n-      Token\u003c? extends TokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n-\n-      try {\n-        token.decodeFromUrlString(tokenURLEncodedStr);\n-      } catch (IOException e) {\n-        throw new YarnException(e);\n-      }\n-\n-      SecurityUtil.setTokenService(token, rmAddress);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"AppMasterToken is \" + token);\n-      }\n-      currentUser.addToken(token);\n-    }\n-\n+    // CurrentUser should already have AMToken loaded.\n     rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n       @Override\n       public AMRMProtocol run() {\n         return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n             conf);\n       }\n     });\n     LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n\n    // CurrentUser should already have AMToken loaded.\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "0a61990855c23ebfa065145fa01084e84781b51c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-103. Add a yarn AM-RM client module. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/13 11:11 AM",
      "commitName": "0a61990855c23ebfa065145fa01084e84781b51c",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,43 @@\n+  public synchronized void start() {\n+    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n+    final YarnRPC rpc \u003d YarnRPC.create(conf);\n+    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n+        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n+        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n+        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n+\n+    UserGroupInformation currentUser;\n+    try {\n+      currentUser \u003d UserGroupInformation.getCurrentUser();\n+    } catch (IOException e) {\n+      throw new YarnException(e);\n+    }\n+\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      String tokenURLEncodedStr \u003d System.getenv().get(\n+          ApplicationConstants.APPLICATION_MASTER_TOKEN_ENV_NAME);\n+      Token\u003c? extends TokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n+\n+      try {\n+        token.decodeFromUrlString(tokenURLEncodedStr);\n+      } catch (IOException e) {\n+        throw new YarnException(e);\n+      }\n+\n+      SecurityUtil.setTokenService(token, rmAddress);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"AppMasterToken is \" + token);\n+      }\n+      currentUser.addToken(token);\n+    }\n+\n+    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n+      @Override\n+      public AMRMProtocol run() {\n+        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n+            conf);\n+      }\n+    });\n+    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n+    super.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    final YarnConfiguration conf \u003d new YarnConfiguration(getConfig());\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    final InetSocketAddress rmAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n\n    UserGroupInformation currentUser;\n    try {\n      currentUser \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n\n    if (UserGroupInformation.isSecurityEnabled()) {\n      String tokenURLEncodedStr \u003d System.getenv().get(\n          ApplicationConstants.APPLICATION_MASTER_TOKEN_ENV_NAME);\n      Token\u003c? extends TokenIdentifier\u003e token \u003d new Token\u003cTokenIdentifier\u003e();\n\n      try {\n        token.decodeFromUrlString(tokenURLEncodedStr);\n      } catch (IOException e) {\n        throw new YarnException(e);\n      }\n\n      SecurityUtil.setTokenService(token, rmAddress);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"AppMasterToken is \" + token);\n      }\n      currentUser.addToken(token);\n    }\n\n    rmClient \u003d currentUser.doAs(new PrivilegedAction\u003cAMRMProtocol\u003e() {\n      @Override\n      public AMRMProtocol run() {\n        return (AMRMProtocol) rpc.getProxy(AMRMProtocol.class, rmAddress,\n            conf);\n      }\n    });\n    LOG.debug(\"Connecting to ResourceManager at \" + rmAddress);\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java"
    }
  }
}