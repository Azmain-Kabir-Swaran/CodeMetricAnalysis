{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "setupSaslConnection",
  "functionId": "setupSaslConnection___streams-IpcStreams",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
  "functionStartLine": 615,
  "functionEndLine": 623,
  "numCommitsSeen": 259,
  "timeTaken": 5109,
  "changeHistory": [
    "d4d076876a8d0002bd3a73491d8459d11cb4896c",
    "37cb314f79f515421cfc2c3605382bf1534dc266",
    "e69614d6508c279f34a32160e1fab4aee9f49b2a",
    "65be21267587f04a2c33af65b951211cc9085b15",
    "9550b1a78bd430ad151fc481987369014a04394d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f",
    "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f",
    "a7aacdc2d66c6f80704d5ff11fc600acb61c8bf2",
    "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539",
    "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2"
  ],
  "changeHistoryShort": {
    "d4d076876a8d0002bd3a73491d8459d11cb4896c": "Ymultichange(Yparameterchange,Ybodychange)",
    "37cb314f79f515421cfc2c3605382bf1534dc266": "Yexceptionschange",
    "e69614d6508c279f34a32160e1fab4aee9f49b2a": "Ybodychange",
    "65be21267587f04a2c33af65b951211cc9085b15": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
    "9550b1a78bd430ad151fc481987369014a04394d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f": "Ybodychange",
    "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f": "Ybodychange",
    "a7aacdc2d66c6f80704d5ff11fc600acb61c8bf2": "Ybodychange",
    "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
    "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4d076876a8d0002bd3a73491d8459d11cb4896c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10940. RPC client does no bounds checking of responses. Contributed by Daryn Sharp.\n",
      "commitDate": "09/09/16 8:39 AM",
      "commitName": "d4d076876a8d0002bd3a73491d8459d11cb4896c",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10940. RPC client does no bounds checking of responses. Contributed by Daryn Sharp.\n",
          "commitDate": "09/09/16 8:39 AM",
          "commitName": "d4d076876a8d0002bd3a73491d8459d11cb4896c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "02/09/16 9:03 AM",
          "commitNameOld": "23abb09c1f979d8c18ece81e32630a35ed569399",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 6.98,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n-        final OutputStream out2) throws IOException {\n+    private synchronized AuthMethod setupSaslConnection(IpcStreams streams)\n+        throws IOException {\n       // Do not use Client.conf here! We must use ConnectionId.conf, since the\n       // Client object is cached and shared between all RPC clients, even those\n       // for separate services.\n       saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n           remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n-      return saslRpcClient.saslConnect(in2, out2);\n+      return saslRpcClient.saslConnect(streams);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized AuthMethod setupSaslConnection(IpcStreams streams)\n        throws IOException {\n      // Do not use Client.conf here! We must use ConnectionId.conf, since the\n      // Client object is cached and shared between all RPC clients, even those\n      // for separate services.\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n      return saslRpcClient.saslConnect(streams);\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[in2-InputStream(modifiers-final), out2-OutputStream(modifiers-final)]",
            "newValue": "[streams-IpcStreams]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10940. RPC client does no bounds checking of responses. Contributed by Daryn Sharp.\n",
          "commitDate": "09/09/16 8:39 AM",
          "commitName": "d4d076876a8d0002bd3a73491d8459d11cb4896c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "02/09/16 9:03 AM",
          "commitNameOld": "23abb09c1f979d8c18ece81e32630a35ed569399",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 6.98,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n-        final OutputStream out2) throws IOException {\n+    private synchronized AuthMethod setupSaslConnection(IpcStreams streams)\n+        throws IOException {\n       // Do not use Client.conf here! We must use ConnectionId.conf, since the\n       // Client object is cached and shared between all RPC clients, even those\n       // for separate services.\n       saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n           remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n-      return saslRpcClient.saslConnect(in2, out2);\n+      return saslRpcClient.saslConnect(streams);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized AuthMethod setupSaslConnection(IpcStreams streams)\n        throws IOException {\n      // Do not use Client.conf here! We must use ConnectionId.conf, since the\n      // Client object is cached and shared between all RPC clients, even those\n      // for separate services.\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n      return saslRpcClient.saslConnect(streams);\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "37cb314f79f515421cfc2c3605382bf1534dc266": {
      "type": "Yexceptionschange",
      "commitMessage": "HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/14 2:12 PM",
      "commitName": "37cb314f79f515421cfc2c3605382bf1534dc266",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "21/02/14 5:09 PM",
      "commitNameOld": "e69614d6508c279f34a32160e1fab4aee9f49b2a",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 20.84,
      "commitsBetweenForRepo": 191,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n-        final OutputStream out2) throws IOException, InterruptedException {\n+        final OutputStream out2) throws IOException {\n       // Do not use Client.conf here! We must use ConnectionId.conf, since the\n       // Client object is cached and shared between all RPC clients, even those\n       // for separate services.\n       saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n           remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n       return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n        final OutputStream out2) throws IOException {\n      // Do not use Client.conf here! We must use ConnectionId.conf, since the\n      // Client object is cached and shared between all RPC clients, even those\n      // for separate services.\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldValue": "[IOException, InterruptedException]",
        "newValue": "[IOException]"
      }
    },
    "e69614d6508c279f34a32160e1fab4aee9f49b2a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10070. RPC client doesn\u0027t use per-connection conf to determine server\u0027s expected Kerberos principal name. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570776 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/02/14 5:09 PM",
      "commitName": "e69614d6508c279f34a32160e1fab4aee9f49b2a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "14/02/14 1:25 PM",
      "commitNameOld": "943d3f641cd7256ee6c9c0fe72314aee7ce15e91",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 7.16,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,9 @@\n     private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n         final OutputStream out2) throws IOException, InterruptedException {\n+      // Do not use Client.conf here! We must use ConnectionId.conf, since the\n+      // Client object is cached and shared between all RPC clients, even those\n+      // for separate services.\n       saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n-          remoteId.getProtocol(), remoteId.getAddress(), conf);\n+          remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n       return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n        final OutputStream out2) throws IOException, InterruptedException {\n      // Do not use Client.conf here! We must use ConnectionId.conf, since the\n      // Client object is cached and shared between all RPC clients, even those\n      // for separate services.\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), remoteId.conf);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "65be21267587f04a2c33af65b951211cc9085b15": {
      "type": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/13 7:44 AM",
      "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
      "commitAuthor": "Daryn Sharp",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/13 7:44 AM",
          "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "22/07/13 12:22 AM",
          "commitNameOld": "3eb61be352589491117ac2781bb18f55988a8084",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 7.31,
          "commitsBetweenForRepo": 47,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-    private synchronized boolean setupSaslConnection(final InputStream in2, \n-        final OutputStream out2) \n-        throws IOException {\n-      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal,\n-          fallbackAllowed);\n+    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n+        final OutputStream out2) throws IOException, InterruptedException {\n+      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n+          remoteId.getProtocol(), remoteId.getAddress(), conf);\n       return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n        final OutputStream out2) throws IOException, InterruptedException {\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), conf);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "AuthMethod"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/13 7:44 AM",
          "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "22/07/13 12:22 AM",
          "commitNameOld": "3eb61be352589491117ac2781bb18f55988a8084",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 7.31,
          "commitsBetweenForRepo": 47,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-    private synchronized boolean setupSaslConnection(final InputStream in2, \n-        final OutputStream out2) \n-        throws IOException {\n-      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal,\n-          fallbackAllowed);\n+    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n+        final OutputStream out2) throws IOException, InterruptedException {\n+      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n+          remoteId.getProtocol(), remoteId.getAddress(), conf);\n       return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n        final OutputStream out2) throws IOException, InterruptedException {\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), conf);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, InterruptedException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/13 7:44 AM",
          "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "22/07/13 12:22 AM",
          "commitNameOld": "3eb61be352589491117ac2781bb18f55988a8084",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 7.31,
          "commitsBetweenForRepo": 47,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-    private synchronized boolean setupSaslConnection(final InputStream in2, \n-        final OutputStream out2) \n-        throws IOException {\n-      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal,\n-          fallbackAllowed);\n+    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n+        final OutputStream out2) throws IOException, InterruptedException {\n+      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n+          remoteId.getProtocol(), remoteId.getAddress(), conf);\n       return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized AuthMethod setupSaslConnection(final InputStream in2, \n        final OutputStream out2) throws IOException, InterruptedException {\n      saslRpcClient \u003d new SaslRpcClient(remoteId.getTicket(),\n          remoteId.getProtocol(), remoteId.getAddress(), conf);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "9550b1a78bd430ad151fc481987369014a04394d": {
      "type": "Ybodychange",
      "commitMessage": "Clean up an IPC error message. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/13 10:31 AM",
      "commitName": "9550b1a78bd430ad151fc481987369014a04394d",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "10/06/13 8:30 PM",
      "commitNameOld": "a841be808a780db0653b17bb702037f422c5b1ec",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 8.58,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n     private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n         throws IOException {\n-      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal);\n+      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal,\n+          fallbackAllowed);\n       return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal,\n          fallbackAllowed);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "common/src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6706. Improves the sasl failure handling due to expired tickets, and other server detected failures. Contributed by Jitendra Pandey and Devaraj Das.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@981714 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/10 5:51 PM",
      "commitName": "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "29/07/10 10:29 AM",
      "commitNameOld": "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f",
      "commitAuthorOld": "Devaraj Das",
      "daysBetweenCommits": 4.31,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,6 @@\n     private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n         throws IOException {\n-      try {\n-        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n-            serverPrincipal);\n-        return saslRpcClient.saslConnect(in2, out2);\n-      } catch (javax.security.sasl.SaslException je) {\n-        UserGroupInformation loginUser \u003d UserGroupInformation.getLoginUser();\n-        UserGroupInformation currentUser \u003d \n-          UserGroupInformation.getCurrentUser();\n-        UserGroupInformation realUser \u003d currentUser.getRealUser();\n-        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n-          //try setting up the connection again\n-          // relogin only in case it is the login user (e.g. JT)\n-          // or superuser (like oozie).\n-          ((currentUser !\u003d null \u0026\u0026 currentUser.equals(loginUser)) ||\n-           (realUser !\u003d null \u0026\u0026 realUser.equals(loginUser)))) {\n-          try {\n-            //try re-login\n-            if (UserGroupInformation.isLoginKeytabBased()) {\n-              loginUser.reloginFromKeytab();\n-            } else {\n-              loginUser.reloginFromTicketCache();\n-            }\n-            disposeSasl();\n-            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n-                serverPrincipal);\n-            return saslRpcClient.saslConnect(in2, out2);\n-          } catch (javax.security.sasl.SaslException jee) {\n-            LOG.warn(\"Couldn\u0027t setup connection for \" + \n-                loginUser.getUserName() +\n-                \" to \" + serverPrincipal + \" even after relogin.\");\n-            throw jee;\n-          } catch (IOException ie) {\n-            ie.initCause(je);\n-            throw ie;\n-          }\n-        } \n-        throw je;\n-      }\n+      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal);\n+      return saslRpcClient.saslConnect(in2, out2);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      saslRpcClient \u003d new SaslRpcClient(authMethod, token, serverPrincipal);\n      return saslRpcClient.saslConnect(in2, out2);\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6656. Adds a thread in the UserGroupInformation to renew TGTs periodically. Contributed by Owen O\u0027Malley and Devaraj Das.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@980518 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/10 10:29 AM",
      "commitName": "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "19/07/10 5:46 PM",
      "commitNameOld": "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea",
      "commitAuthorOld": "Devaraj Das",
      "daysBetweenCommits": 9.7,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,42 @@\n     private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n         throws IOException {\n       try {\n         saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n             serverPrincipal);\n         return saslRpcClient.saslConnect(in2, out2);\n       } catch (javax.security.sasl.SaslException je) {\n         UserGroupInformation loginUser \u003d UserGroupInformation.getLoginUser();\n-        UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n+        UserGroupInformation currentUser \u003d \n+          UserGroupInformation.getCurrentUser();\n         UserGroupInformation realUser \u003d currentUser.getRealUser();\n         if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n           //try setting up the connection again\n-          UserGroupInformation.isLoginKeytabBased() \u0026\u0026\n           // relogin only in case it is the login user (e.g. JT)\n           // or superuser (like oozie).\n           ((currentUser !\u003d null \u0026\u0026 currentUser.equals(loginUser)) ||\n            (realUser !\u003d null \u0026\u0026 realUser.equals(loginUser)))) {\n           try {\n             //try re-login\n-            loginUser.reloginFromKeytab();\n+            if (UserGroupInformation.isLoginKeytabBased()) {\n+              loginUser.reloginFromKeytab();\n+            } else {\n+              loginUser.reloginFromTicketCache();\n+            }\n             disposeSasl();\n             saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                 serverPrincipal);\n             return saslRpcClient.saslConnect(in2, out2);\n           } catch (javax.security.sasl.SaslException jee) {\n             LOG.warn(\"Couldn\u0027t setup connection for \" + \n                 loginUser.getUserName() +\n                 \" to \" + serverPrincipal + \" even after relogin.\");\n             throw jee;\n           } catch (IOException ie) {\n             ie.initCause(je);\n             throw ie;\n           }\n         } \n         throw je;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      try {\n        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n            serverPrincipal);\n        return saslRpcClient.saslConnect(in2, out2);\n      } catch (javax.security.sasl.SaslException je) {\n        UserGroupInformation loginUser \u003d UserGroupInformation.getLoginUser();\n        UserGroupInformation currentUser \u003d \n          UserGroupInformation.getCurrentUser();\n        UserGroupInformation realUser \u003d currentUser.getRealUser();\n        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n          //try setting up the connection again\n          // relogin only in case it is the login user (e.g. JT)\n          // or superuser (like oozie).\n          ((currentUser !\u003d null \u0026\u0026 currentUser.equals(loginUser)) ||\n           (realUser !\u003d null \u0026\u0026 realUser.equals(loginUser)))) {\n          try {\n            //try re-login\n            if (UserGroupInformation.isLoginKeytabBased()) {\n              loginUser.reloginFromKeytab();\n            } else {\n              loginUser.reloginFromTicketCache();\n            }\n            disposeSasl();\n            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                serverPrincipal);\n            return saslRpcClient.saslConnect(in2, out2);\n          } catch (javax.security.sasl.SaslException jee) {\n            LOG.warn(\"Couldn\u0027t setup connection for \" + \n                loginUser.getUserName() +\n                \" to \" + serverPrincipal + \" even after relogin.\");\n            throw jee;\n          } catch (IOException ie) {\n            ie.initCause(je);\n            throw ie;\n          }\n        } \n        throw je;\n      }\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "a7aacdc2d66c6f80704d5ff11fc600acb61c8bf2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP6638. try to relogin in a case of failed RPC connection (expired tgt) only in case the subject is loginUser or proxyUgi.realUser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@948523 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/05/10 11:29 AM",
      "commitName": "a7aacdc2d66c6f80704d5ff11fc600acb61c8bf2",
      "commitAuthor": "Boris Shkolnik",
      "commitDateOld": "24/05/10 11:24 AM",
      "commitNameOld": "2786e80436de5e27d4edc648bc882b77c922091a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,38 @@\n     private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n         throws IOException {\n       try {\n         saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n             serverPrincipal);\n         return saslRpcClient.saslConnect(in2, out2);\n       } catch (javax.security.sasl.SaslException je) {\n+        UserGroupInformation loginUser \u003d UserGroupInformation.getLoginUser();\n+        UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n+        UserGroupInformation realUser \u003d currentUser.getRealUser();\n         if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n-            UserGroupInformation.isLoginKeytabBased()) {\n-          //try re-login\n-          UserGroupInformation.getCurrentUser().reloginFromKeytab();\n           //try setting up the connection again\n+          UserGroupInformation.isLoginKeytabBased() \u0026\u0026\n+          // relogin only in case it is the login user (e.g. JT)\n+          // or superuser (like oozie).\n+          ((currentUser !\u003d null \u0026\u0026 currentUser.equals(loginUser)) ||\n+           (realUser !\u003d null \u0026\u0026 realUser.equals(loginUser)))) {\n           try {\n+            //try re-login\n+            loginUser.reloginFromKeytab();\n             disposeSasl();\n             saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                 serverPrincipal);\n             return saslRpcClient.saslConnect(in2, out2);\n           } catch (javax.security.sasl.SaslException jee) {\n-            UserGroupInformation.\n-            setLastUnsuccessfulAuthenticationAttemptTime\n-            (System.currentTimeMillis());\n             LOG.warn(\"Couldn\u0027t setup connection for \" + \n-                UserGroupInformation.getCurrentUser().getUserName() +\n+                loginUser.getUserName() +\n                 \" to \" + serverPrincipal + \" even after relogin.\");\n             throw jee;\n+          } catch (IOException ie) {\n+            ie.initCause(je);\n+            throw ie;\n           }\n-        } else throw je;\n+        } \n+        throw je;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      try {\n        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n            serverPrincipal);\n        return saslRpcClient.saslConnect(in2, out2);\n      } catch (javax.security.sasl.SaslException je) {\n        UserGroupInformation loginUser \u003d UserGroupInformation.getLoginUser();\n        UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n        UserGroupInformation realUser \u003d currentUser.getRealUser();\n        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n          //try setting up the connection again\n          UserGroupInformation.isLoginKeytabBased() \u0026\u0026\n          // relogin only in case it is the login user (e.g. JT)\n          // or superuser (like oozie).\n          ((currentUser !\u003d null \u0026\u0026 currentUser.equals(loginUser)) ||\n           (realUser !\u003d null \u0026\u0026 realUser.equals(loginUser)))) {\n          try {\n            //try re-login\n            loginUser.reloginFromKeytab();\n            disposeSasl();\n            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                serverPrincipal);\n            return saslRpcClient.saslConnect(in2, out2);\n          } catch (javax.security.sasl.SaslException jee) {\n            LOG.warn(\"Couldn\u0027t setup connection for \" + \n                loginUser.getUserName() +\n                \" to \" + serverPrincipal + \" even after relogin.\");\n            throw jee;\n          } catch (IOException ie) {\n            ie.initCause(je);\n            throw ie;\n          }\n        } \n        throw je;\n      }\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539": {
      "type": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-6543. Allows secure clients to talk to unsecure clusters. Contributed by Kan Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@915097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/10 2:28 PM",
      "commitName": "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539",
      "commitAuthor": "Devaraj Das",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-6543. Allows secure clients to talk to unsecure clusters. Contributed by Kan Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@915097 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/10 2:28 PM",
          "commitName": "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "14/02/10 11:28 PM",
          "commitNameOld": "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2",
          "commitAuthorOld": "Devaraj Das",
          "daysBetweenCommits": 7.63,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-    private synchronized void setupSaslConnection(final InputStream in2, \n+    private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n-    throws javax.security.sasl.SaslException,IOException,InterruptedException {\n+        throws IOException {\n       try {\n         saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n             serverPrincipal);\n-        saslRpcClient.saslConnect(in2, out2);\n+        return saslRpcClient.saslConnect(in2, out2);\n       } catch (javax.security.sasl.SaslException je) {\n         if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n             UserGroupInformation.isLoginKeytabBased()) {\n           //try re-login\n           UserGroupInformation.getCurrentUser().reloginFromKeytab();\n           //try setting up the connection again\n           try {\n+            disposeSasl();\n             saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                 serverPrincipal);\n-            saslRpcClient.saslConnect(in2, out2);\n+            return saslRpcClient.saslConnect(in2, out2);\n           } catch (javax.security.sasl.SaslException jee) {\n             UserGroupInformation.\n             setLastUnsuccessfulAuthenticationAttemptTime\n             (System.currentTimeMillis());\n             LOG.warn(\"Couldn\u0027t setup connection for \" + \n                 UserGroupInformation.getCurrentUser().getUserName() +\n                 \" to \" + serverPrincipal + \" even after relogin.\");\n             throw jee;\n           }\n         } else throw je;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      try {\n        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n            serverPrincipal);\n        return saslRpcClient.saslConnect(in2, out2);\n      } catch (javax.security.sasl.SaslException je) {\n        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n            UserGroupInformation.isLoginKeytabBased()) {\n          //try re-login\n          UserGroupInformation.getCurrentUser().reloginFromKeytab();\n          //try setting up the connection again\n          try {\n            disposeSasl();\n            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                serverPrincipal);\n            return saslRpcClient.saslConnect(in2, out2);\n          } catch (javax.security.sasl.SaslException jee) {\n            UserGroupInformation.\n            setLastUnsuccessfulAuthenticationAttemptTime\n            (System.currentTimeMillis());\n            LOG.warn(\"Couldn\u0027t setup connection for \" + \n                UserGroupInformation.getCurrentUser().getUserName() +\n                \" to \" + serverPrincipal + \" even after relogin.\");\n            throw jee;\n          }\n        } else throw je;\n      }\n    }",
          "path": "src/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-6543. Allows secure clients to talk to unsecure clusters. Contributed by Kan Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@915097 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/10 2:28 PM",
          "commitName": "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "14/02/10 11:28 PM",
          "commitNameOld": "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2",
          "commitAuthorOld": "Devaraj Das",
          "daysBetweenCommits": 7.63,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-    private synchronized void setupSaslConnection(final InputStream in2, \n+    private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n-    throws javax.security.sasl.SaslException,IOException,InterruptedException {\n+        throws IOException {\n       try {\n         saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n             serverPrincipal);\n-        saslRpcClient.saslConnect(in2, out2);\n+        return saslRpcClient.saslConnect(in2, out2);\n       } catch (javax.security.sasl.SaslException je) {\n         if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n             UserGroupInformation.isLoginKeytabBased()) {\n           //try re-login\n           UserGroupInformation.getCurrentUser().reloginFromKeytab();\n           //try setting up the connection again\n           try {\n+            disposeSasl();\n             saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                 serverPrincipal);\n-            saslRpcClient.saslConnect(in2, out2);\n+            return saslRpcClient.saslConnect(in2, out2);\n           } catch (javax.security.sasl.SaslException jee) {\n             UserGroupInformation.\n             setLastUnsuccessfulAuthenticationAttemptTime\n             (System.currentTimeMillis());\n             LOG.warn(\"Couldn\u0027t setup connection for \" + \n                 UserGroupInformation.getCurrentUser().getUserName() +\n                 \" to \" + serverPrincipal + \" even after relogin.\");\n             throw jee;\n           }\n         } else throw je;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      try {\n        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n            serverPrincipal);\n        return saslRpcClient.saslConnect(in2, out2);\n      } catch (javax.security.sasl.SaslException je) {\n        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n            UserGroupInformation.isLoginKeytabBased()) {\n          //try re-login\n          UserGroupInformation.getCurrentUser().reloginFromKeytab();\n          //try setting up the connection again\n          try {\n            disposeSasl();\n            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                serverPrincipal);\n            return saslRpcClient.saslConnect(in2, out2);\n          } catch (javax.security.sasl.SaslException jee) {\n            UserGroupInformation.\n            setLastUnsuccessfulAuthenticationAttemptTime\n            (System.currentTimeMillis());\n            LOG.warn(\"Couldn\u0027t setup connection for \" + \n                UserGroupInformation.getCurrentUser().getUserName() +\n                \" to \" + serverPrincipal + \" even after relogin.\");\n            throw jee;\n          }\n        } else throw je;\n      }\n    }",
          "path": "src/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[javax.security.sasl.SaslException, IOException, InterruptedException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6543. Allows secure clients to talk to unsecure clusters. Contributed by Kan Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@915097 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/10 2:28 PM",
          "commitName": "c5622e5d4df0ec83ffedb46f1d4cfdeed9e43539",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "14/02/10 11:28 PM",
          "commitNameOld": "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2",
          "commitAuthorOld": "Devaraj Das",
          "daysBetweenCommits": 7.63,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-    private synchronized void setupSaslConnection(final InputStream in2, \n+    private synchronized boolean setupSaslConnection(final InputStream in2, \n         final OutputStream out2) \n-    throws javax.security.sasl.SaslException,IOException,InterruptedException {\n+        throws IOException {\n       try {\n         saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n             serverPrincipal);\n-        saslRpcClient.saslConnect(in2, out2);\n+        return saslRpcClient.saslConnect(in2, out2);\n       } catch (javax.security.sasl.SaslException je) {\n         if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n             UserGroupInformation.isLoginKeytabBased()) {\n           //try re-login\n           UserGroupInformation.getCurrentUser().reloginFromKeytab();\n           //try setting up the connection again\n           try {\n+            disposeSasl();\n             saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                 serverPrincipal);\n-            saslRpcClient.saslConnect(in2, out2);\n+            return saslRpcClient.saslConnect(in2, out2);\n           } catch (javax.security.sasl.SaslException jee) {\n             UserGroupInformation.\n             setLastUnsuccessfulAuthenticationAttemptTime\n             (System.currentTimeMillis());\n             LOG.warn(\"Couldn\u0027t setup connection for \" + \n                 UserGroupInformation.getCurrentUser().getUserName() +\n                 \" to \" + serverPrincipal + \" even after relogin.\");\n             throw jee;\n           }\n         } else throw je;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private synchronized boolean setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n        throws IOException {\n      try {\n        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n            serverPrincipal);\n        return saslRpcClient.saslConnect(in2, out2);\n      } catch (javax.security.sasl.SaslException je) {\n        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n            UserGroupInformation.isLoginKeytabBased()) {\n          //try re-login\n          UserGroupInformation.getCurrentUser().reloginFromKeytab();\n          //try setting up the connection again\n          try {\n            disposeSasl();\n            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                serverPrincipal);\n            return saslRpcClient.saslConnect(in2, out2);\n          } catch (javax.security.sasl.SaslException jee) {\n            UserGroupInformation.\n            setLastUnsuccessfulAuthenticationAttemptTime\n            (System.currentTimeMillis());\n            LOG.warn(\"Couldn\u0027t setup connection for \" + \n                UserGroupInformation.getCurrentUser().getUserName() +\n                \" to \" + serverPrincipal + \" even after relogin.\");\n            throw jee;\n          }\n        } else throw je;\n      }\n    }",
          "path": "src/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6559. Makes the RPC client automatically re-login when the SASL connection setup fails. This is applicable only to keytab based logins. Contributed by Devaraj Das.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@910169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/10 11:28 PM",
      "commitName": "8b4b190cbd4678b4b6a5d85b32ce831bd3b99da2",
      "commitAuthor": "Devaraj Das",
      "diff": "@@ -0,0 +1,29 @@\n+    private synchronized void setupSaslConnection(final InputStream in2, \n+        final OutputStream out2) \n+    throws javax.security.sasl.SaslException,IOException,InterruptedException {\n+      try {\n+        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n+            serverPrincipal);\n+        saslRpcClient.saslConnect(in2, out2);\n+      } catch (javax.security.sasl.SaslException je) {\n+        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n+            UserGroupInformation.isLoginKeytabBased()) {\n+          //try re-login\n+          UserGroupInformation.getCurrentUser().reloginFromKeytab();\n+          //try setting up the connection again\n+          try {\n+            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n+                serverPrincipal);\n+            saslRpcClient.saslConnect(in2, out2);\n+          } catch (javax.security.sasl.SaslException jee) {\n+            UserGroupInformation.\n+            setLastUnsuccessfulAuthenticationAttemptTime\n+            (System.currentTimeMillis());\n+            LOG.warn(\"Couldn\u0027t setup connection for \" + \n+                UserGroupInformation.getCurrentUser().getUserName() +\n+                \" to \" + serverPrincipal + \" even after relogin.\");\n+            throw jee;\n+          }\n+        } else throw je;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized void setupSaslConnection(final InputStream in2, \n        final OutputStream out2) \n    throws javax.security.sasl.SaslException,IOException,InterruptedException {\n      try {\n        saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n            serverPrincipal);\n        saslRpcClient.saslConnect(in2, out2);\n      } catch (javax.security.sasl.SaslException je) {\n        if (authMethod \u003d\u003d AuthMethod.KERBEROS \u0026\u0026 \n            UserGroupInformation.isLoginKeytabBased()) {\n          //try re-login\n          UserGroupInformation.getCurrentUser().reloginFromKeytab();\n          //try setting up the connection again\n          try {\n            saslRpcClient \u003d new SaslRpcClient(authMethod, token,\n                serverPrincipal);\n            saslRpcClient.saslConnect(in2, out2);\n          } catch (javax.security.sasl.SaslException jee) {\n            UserGroupInformation.\n            setLastUnsuccessfulAuthenticationAttemptTime\n            (System.currentTimeMillis());\n            LOG.warn(\"Couldn\u0027t setup connection for \" + \n                UserGroupInformation.getCurrentUser().getUserName() +\n                \" to \" + serverPrincipal + \" even after relogin.\");\n            throw jee;\n          }\n        } else throw je;\n      }\n    }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java"
    }
  }
}