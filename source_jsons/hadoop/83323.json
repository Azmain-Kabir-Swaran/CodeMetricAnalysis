{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractService.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/AbstractService.java",
  "functionStartLine": 185,
  "functionEndLine": 207,
  "numCommitsSeen": 15,
  "timeTaken": 7610,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "b9efe6bd4a1277b4067ecde715a7713a85968886",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "b9efe6bd4a1277b4067ecde715a7713a85968886": "Yfilerename",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Ymodifierchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   public void start() {\n     if (isInState(STATE.STARTED)) {\n       return;\n     }\n     //enter the started state\n     synchronized (stateChangeLock) {\n       if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n         try {\n           startTime \u003d System.currentTimeMillis();\n           serviceStart();\n           if (isInState(STATE.STARTED)) {\n             //if the service started (and isn\u0027t now in a later state), notify\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"Service \" + getName() + \" is started\");\n-            }\n+            LOG.debug(\"Service {} is started\", getName());\n             notifyListeners();\n           }\n         } catch (Exception e) {\n           noteFailure(e);\n           ServiceOperations.stopQuietly(LOG, this);\n           throw ServiceStateException.convert(e);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (isInState(STATE.STARTED)) {\n      return;\n    }\n    //enter the started state\n    synchronized (stateChangeLock) {\n      if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n        try {\n          startTime \u003d System.currentTimeMillis();\n          serviceStart();\n          if (isInState(STATE.STARTED)) {\n            //if the service started (and isn\u0027t now in a later state), notify\n            LOG.debug(\"Service {} is started\", getName());\n            notifyListeners();\n          }\n        } catch (Exception e) {\n          noteFailure(e);\n          ServiceOperations.stopQuietly(LOG, this);\n          throw ServiceStateException.convert(e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/AbstractService.java",
      "extendedDetails": {}
    },
    "b9efe6bd4a1277b4067ecde715a7713a85968886": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-9649. Promoted YARN service life-cycle libraries into Hadoop Common for usage across all Hadoop projects. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493650 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 11:39 PM",
      "commitName": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 9:49 PM",
      "commitNameOld": "d4a811edb25e2d1569ee6b8972a887a0180dfa2e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    if (isInState(STATE.STARTED)) {\n      return;\n    }\n    //enter the started state\n    synchronized (stateChangeLock) {\n      if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n        try {\n          startTime \u003d System.currentTimeMillis();\n          serviceStart();\n          if (isInState(STATE.STARTED)) {\n            //if the service started (and isn\u0027t now in a later state), notify\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Service \" + getName() + \" is started\");\n            }\n            notifyListeners();\n          }\n        } catch (Exception e) {\n          noteFailure(e);\n          ServiceOperations.stopQuietly(LOG, this);\n          throw ServiceStateException.convert(e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/AbstractService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/AbstractService.java"
      }
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 309.44,
          "commitsBetweenForRepo": 1788,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,25 @@\n-  public synchronized void start() {\n-    startTime \u003d System.currentTimeMillis();\n-    ensureCurrentState(STATE.INITED);\n-    changeState(STATE.STARTED);\n-    LOG.info(\"Service:\" + getName() + \" is started.\");\n+  public void start() {\n+    if (isInState(STATE.STARTED)) {\n+      return;\n+    }\n+    //enter the started state\n+    synchronized (stateChangeLock) {\n+      if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n+        try {\n+          startTime \u003d System.currentTimeMillis();\n+          serviceStart();\n+          if (isInState(STATE.STARTED)) {\n+            //if the service started (and isn\u0027t now in a later state), notify\n+            if (LOG.isDebugEnabled()) {\n+              LOG.debug(\"Service \" + getName() + \" is started\");\n+            }\n+            notifyListeners();\n+          }\n+        } catch (Exception e) {\n+          noteFailure(e);\n+          ServiceOperations.stopQuietly(LOG, this);\n+          throw ServiceStateException.convert(e);\n+        }\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void start() {\n    if (isInState(STATE.STARTED)) {\n      return;\n    }\n    //enter the started state\n    synchronized (stateChangeLock) {\n      if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n        try {\n          startTime \u003d System.currentTimeMillis();\n          serviceStart();\n          if (isInState(STATE.STARTED)) {\n            //if the service started (and isn\u0027t now in a later state), notify\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Service \" + getName() + \" is started\");\n            }\n            notifyListeners();\n          }\n        } catch (Exception e) {\n          noteFailure(e);\n          ServiceOperations.stopQuietly(LOG, this);\n          throw ServiceStateException.convert(e);\n        }\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 309.44,
          "commitsBetweenForRepo": 1788,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,25 @@\n-  public synchronized void start() {\n-    startTime \u003d System.currentTimeMillis();\n-    ensureCurrentState(STATE.INITED);\n-    changeState(STATE.STARTED);\n-    LOG.info(\"Service:\" + getName() + \" is started.\");\n+  public void start() {\n+    if (isInState(STATE.STARTED)) {\n+      return;\n+    }\n+    //enter the started state\n+    synchronized (stateChangeLock) {\n+      if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n+        try {\n+          startTime \u003d System.currentTimeMillis();\n+          serviceStart();\n+          if (isInState(STATE.STARTED)) {\n+            //if the service started (and isn\u0027t now in a later state), notify\n+            if (LOG.isDebugEnabled()) {\n+              LOG.debug(\"Service \" + getName() + \" is started\");\n+            }\n+            notifyListeners();\n+          }\n+        } catch (Exception e) {\n+          noteFailure(e);\n+          ServiceOperations.stopQuietly(LOG, this);\n+          throw ServiceStateException.convert(e);\n+        }\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void start() {\n    if (isInState(STATE.STARTED)) {\n      return;\n    }\n    //enter the started state\n    synchronized (stateChangeLock) {\n      if (stateModel.enterState(STATE.STARTED) !\u003d STATE.STARTED) {\n        try {\n          startTime \u003d System.currentTimeMillis();\n          serviceStart();\n          if (isInState(STATE.STARTED)) {\n            //if the service started (and isn\u0027t now in a later state), notify\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Service \" + getName() + \" is started\");\n            }\n            notifyListeners();\n          }\n        } catch (Exception e) {\n          noteFailure(e);\n          ServiceOperations.stopQuietly(LOG, this);\n          throw ServiceStateException.convert(e);\n        }\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void start() {\n    startTime \u003d System.currentTimeMillis();\n    ensureCurrentState(STATE.INITED);\n    changeState(STATE.STARTED);\n    LOG.info(\"Service:\" + getName() + \" is started.\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void start() {\n    startTime \u003d System.currentTimeMillis();\n    ensureCurrentState(STATE.INITED);\n    changeState(STATE.STARTED);\n    LOG.info(\"Service:\" + getName() + \" is started.\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,6 @@\n+  public synchronized void start() {\n+    startTime \u003d System.currentTimeMillis();\n+    ensureCurrentState(STATE.INITED);\n+    changeState(STATE.STARTED);\n+    LOG.info(\"Service:\" + getName() + \" is started.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    startTime \u003d System.currentTimeMillis();\n    ensureCurrentState(STATE.INITED);\n    changeState(STATE.STARTED);\n    LOG.info(\"Service:\" + getName() + \" is started.\");\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/service/AbstractService.java"
    }
  }
}