{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServiceClient.java",
  "functionName": "getApiClient",
  "functionId": "getApiClient___requestPath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
  "functionStartLine": 245,
  "functionEndLine": 262,
  "numCommitsSeen": 35,
  "timeTaken": 6245,
  "changeHistory": [
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
    "ab574ffd72c8df4b7c5de3b37eacf6d033bc8578",
    "257640192890890b25c7f6a98191ec627133617c",
    "04b228e43b728d574d7ad97330aa4218cb7f8bf8",
    "27ffec7ba77ba3d0b88b97b34aca5356e2e258f4",
    "8990eaf5925afa533fbd9c3641859a146dc5a22c",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "b6e50fad53f26e2b718a85ec0678e3161decc691",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d"
  ],
  "changeHistoryShort": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Ymodifierchange",
    "ab574ffd72c8df4b7c5de3b37eacf6d033bc8578": "Ymodifierchange",
    "257640192890890b25c7f6a98191ec627133617c": "Ymodifierchange",
    "04b228e43b728d574d7ad97330aa4218cb7f8bf8": "Ybodychange",
    "27ffec7ba77ba3d0b88b97b34aca5356e2e258f4": "Ybodychange",
    "8990eaf5925afa533fbd9c3641859a146dc5a22c": "Ybodychange",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ymultichange(Yparameterchange,Ybodychange)",
    "b6e50fad53f26e2b718a85ec0678e3161decc691": "Ybodychange",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "18/03/19 10:16 AM",
      "commitNameOld": "19b22c4385a8cf0f89a2ad939380cfd3f033ffdc",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 11.15,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private Builder getApiClient(String requestPath)\n+  public Builder getApiClient(String requestPath)\n       throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (UserGroupInformation.isSecurityEnabled()) {\n       try {\n         URI url \u003d new URI(requestPath);\n         String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n         builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (UserGroupInformation.isSecurityEnabled()) {\n      try {\n        URI url \u003d new URI(requestPath);\n        String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "ab574ffd72c8df4b7c5de3b37eacf6d033bc8578": {
      "type": "Ymodifierchange",
      "commitMessage": "Revert \"YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\"\n\nThis reverts commit 257640192890890b25c7f6a98191ec627133617c.\n",
      "commitDate": "12/03/19 11:50 AM",
      "commitName": "ab574ffd72c8df4b7c5de3b37eacf6d033bc8578",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "05/03/19 6:14 AM",
      "commitNameOld": "257640192890890b25c7f6a98191ec627133617c",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 7.19,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  public Builder getApiClient(String requestPath)\n+  private Builder getApiClient(String requestPath)\n       throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (UserGroupInformation.isSecurityEnabled()) {\n       try {\n         URI url \u003d new URI(requestPath);\n         String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n         builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (UserGroupInformation.isSecurityEnabled()) {\n      try {\n        URI url \u003d new URI(requestPath);\n        String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[private]"
      }
    },
    "257640192890890b25c7f6a98191ec627133617c": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "05/03/19 6:14 AM",
      "commitName": "257640192890890b25c7f6a98191ec627133617c",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "27/02/19 3:47 PM",
      "commitNameOld": "04b228e43b728d574d7ad97330aa4218cb7f8bf8",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 5.6,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private Builder getApiClient(String requestPath)\n+  public Builder getApiClient(String requestPath)\n       throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (UserGroupInformation.isSecurityEnabled()) {\n       try {\n         URI url \u003d new URI(requestPath);\n         String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n         builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (UserGroupInformation.isSecurityEnabled()) {\n      try {\n        URI url \u003d new URI(requestPath);\n        String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "04b228e43b728d574d7ad97330aa4218cb7f8bf8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9334.  Allow YARN Service client to send SPNEGO challenge header when authentication type is not simple.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "27/02/19 3:47 PM",
      "commitName": "04b228e43b728d574d7ad97330aa4218cb7f8bf8",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "25/02/19 11:45 AM",
      "commitNameOld": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 2.17,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   private Builder getApiClient(String requestPath)\n       throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n-    Configuration conf \u003d getConfig();\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(requestPath).type(MediaType.APPLICATION_JSON);\n-    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n+    if (UserGroupInformation.isSecurityEnabled()) {\n       try {\n         URI url \u003d new URI(requestPath);\n         String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n         builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (UserGroupInformation.isSecurityEnabled()) {\n      try {\n        URI url \u003d new URI(requestPath);\n        String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "27ffec7ba77ba3d0b88b97b34aca5356e2e258f4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8778. Add command line interface to invoke interactive docker shell. Contributed by Eric Yang\n",
      "commitDate": "19/11/18 5:59 PM",
      "commitName": "27ffec7ba77ba3d0b88b97b34aca5356e2e258f4",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "12/11/18 4:53 PM",
      "commitNameOld": "4c465f5535054dad2ef0b18128fb115129f6939e",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 7.05,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private Builder getApiClient(String requestPath)\n       throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     Configuration conf \u003d getConfig();\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n       try {\n         URI url \u003d new URI(requestPath);\n-        String challenge \u003d generateToken(url.getHost());\n+        String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n         builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n      try {\n        URI url \u003d new URI(requestPath);\n        String challenge \u003d YarnClientUtils.generateToken(url.getHost());\n        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "8990eaf5925afa533fbd9c3641859a146dc5a22c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8474. Fixed ApiServiceClient kerberos negotiation.\n           Contributed by Billie Rinaldi\n",
      "commitDate": "16/08/18 9:46 AM",
      "commitName": "8990eaf5925afa533fbd9c3641859a146dc5a22c",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/07/18 2:41 PM",
      "commitNameOld": "121865c3f96166e2190ed54b433ebcf8d053b91c",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 30.8,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   private Builder getApiClient(String requestPath)\n       throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     Configuration conf \u003d getConfig();\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n-      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n-      builder.header(\"WWW-Authenticate\", token);\n+      try {\n+        URI url \u003d new URI(requestPath);\n+        String challenge \u003d generateToken(url.getHost());\n+        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n+      } catch (Exception e) {\n+        throw new IOException(e);\n+      }\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n      try {\n        URI url \u003d new URI(requestPath);\n        String challenge \u003d generateToken(url.getHost());\n        builder.header(HttpHeaders.AUTHORIZATION, \"Negotiate \" + challenge);\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n      builder.header(\"WWW-Authenticate\", token);\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
      }
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
          "commitDate": "26/04/18 1:54 PM",
          "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "26/03/18 3:46 PM",
          "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 30.92,
          "commitsBetweenForRepo": 699,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private Builder getApiClient(String appName) throws IOException {\n+  private Builder getApiClient(String requestPath)\n+      throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     Configuration conf \u003d getConfig();\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n-        .resource(getApiUrl(appName)).type(MediaType.APPLICATION_JSON);\n+        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n       AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n       builder.header(\"WWW-Authenticate\", token);\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n      builder.header(\"WWW-Authenticate\", token);\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appName-String]",
            "newValue": "[requestPath-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
          "commitDate": "26/04/18 1:54 PM",
          "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "26/03/18 3:46 PM",
          "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 30.92,
          "commitsBetweenForRepo": 699,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private Builder getApiClient(String appName) throws IOException {\n+  private Builder getApiClient(String requestPath)\n+      throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     Configuration conf \u003d getConfig();\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n-        .resource(getApiUrl(appName)).type(MediaType.APPLICATION_JSON);\n+        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n     if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n       AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n       builder.header(\"WWW-Authenticate\", token);\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Builder getApiClient(String requestPath)\n      throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(requestPath).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n      builder.header(\"WWW-Authenticate\", token);\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "b6e50fad53f26e2b718a85ec0678e3161decc691": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7831. YARN Service CLI should use hadoop.http.authentication.type to determine authentication method. Contributed by Eric Yang\n",
      "commitDate": "02/02/18 2:38 PM",
      "commitName": "b6e50fad53f26e2b718a85ec0678e3161decc691",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/02/18 11:10 AM",
      "commitNameOld": "f9a4d4cf237d64ccb52ab1792372c89e9d36f41d",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private Builder getApiClient(String appName) throws IOException {\n     Client client \u003d Client.create(getClientConfig());\n     Configuration conf \u003d getConfig();\n     client.setChunkedEncodingSize(null);\n     Builder builder \u003d client\n         .resource(getApiUrl(appName)).type(MediaType.APPLICATION_JSON);\n-    if (conf.get(\"hadoop.security.authentication\").equals(\"kerberos\")) {\n+    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n       AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n       builder.header(\"WWW-Authenticate\", token);\n     }\n     return builder\n         .accept(\"application/json;charset\u003dutf-8\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Builder getApiClient(String appName) throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(getApiUrl(appName)).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.http.authentication.type\").equals(\"kerberos\")) {\n      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n      builder.header(\"WWW-Authenticate\", token);\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
      "commitDate": "23/01/18 5:54 PM",
      "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,13 @@\n+  private Builder getApiClient(String appName) throws IOException {\n+    Client client \u003d Client.create(getClientConfig());\n+    Configuration conf \u003d getConfig();\n+    client.setChunkedEncodingSize(null);\n+    Builder builder \u003d client\n+        .resource(getApiUrl(appName)).type(MediaType.APPLICATION_JSON);\n+    if (conf.get(\"hadoop.security.authentication\").equals(\"kerberos\")) {\n+      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n+      builder.header(\"WWW-Authenticate\", token);\n+    }\n+    return builder\n+        .accept(\"application/json;charset\u003dutf-8\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Builder getApiClient(String appName) throws IOException {\n    Client client \u003d Client.create(getClientConfig());\n    Configuration conf \u003d getConfig();\n    client.setChunkedEncodingSize(null);\n    Builder builder \u003d client\n        .resource(getApiUrl(appName)).type(MediaType.APPLICATION_JSON);\n    if (conf.get(\"hadoop.security.authentication\").equals(\"kerberos\")) {\n      AuthenticatedURL.Token token \u003d new AuthenticatedURL.Token();\n      builder.header(\"WWW-Authenticate\", token);\n    }\n    return builder\n        .accept(\"application/json;charset\u003dutf-8\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
    }
  }
}