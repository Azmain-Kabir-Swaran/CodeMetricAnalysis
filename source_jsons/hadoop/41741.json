{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "createSchedContainerChangeRequest",
  "functionId": "createSchedContainerChangeRequest___request-UpdateContainerRequest__increase-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 963,
  "functionEndLine": 979,
  "numCommitsSeen": 210,
  "timeTaken": 5022,
  "changeHistory": [
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "7f46636495e23693d588b0915f464fa7afd9102e",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434"
  ],
  "changeHistoryShort": {
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Yparameterchange",
    "7f46636495e23693d588b0915f464fa7afd9102e": "Ymultichange(Yrename,Ybodychange)",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/08/16 10:27 AM",
      "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 25.23,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private SchedContainerChangeRequest createSchedContainerChangeRequest(\n-      ContainerResourceChangeRequest request, boolean increase)\n+      UpdateContainerRequest request, boolean increase)\n       throws YarnException {\n     ContainerId containerId \u003d request.getContainerId();\n     RMContainer rmContainer \u003d getRMContainer(containerId);\n     if (null \u003d\u003d rmContainer) {\n       String msg \u003d\n           \"Failed to get rmContainer for \"\n               + (increase ? \"increase\" : \"decrease\")\n               + \" request, with container-id\u003d\" + containerId;\n       throw new InvalidResourceRequestException(msg);\n     }\n     SchedulerNode schedulerNode \u003d\n         getSchedulerNode(rmContainer.getAllocatedNode());\n     return new SchedContainerChangeRequest(\n         this.rmContext, schedulerNode, rmContainer, request.getCapability());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private SchedContainerChangeRequest createSchedContainerChangeRequest(\n      UpdateContainerRequest request, boolean increase)\n      throws YarnException {\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    if (null \u003d\u003d rmContainer) {\n      String msg \u003d\n          \"Failed to get rmContainer for \"\n              + (increase ? \"increase\" : \"decrease\")\n              + \" request, with container-id\u003d\" + containerId;\n      throw new InvalidResourceRequestException(msg);\n    }\n    SchedulerNode schedulerNode \u003d\n        getSchedulerNode(rmContainer.getAllocatedNode());\n    return new SchedContainerChangeRequest(\n        this.rmContext, schedulerNode, rmContainer, request.getCapability());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {
        "oldValue": "[request-ContainerResourceChangeRequest, increase-boolean]",
        "newValue": "[request-UpdateContainerRequest, increase-boolean]"
      }
    },
    "7f46636495e23693d588b0915f464fa7afd9102e": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
      "commitDate": "28/01/16 2:51 PM",
      "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
          "commitDate": "28/01/16 2:51 PM",
          "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
          "commitAuthor": "Jian He",
          "commitDateOld": "18/01/16 5:30 PM",
          "commitNameOld": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 9.89,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-      checkAndNormalizeContainerChangeRequest(\n-          ContainerResourceChangeRequest request, boolean increase)\n-          throws YarnException {\n-    // We have done a check in ApplicationMasterService, but RMContainer status\n-    // / Node resource could change since AMS won\u0027t acquire lock of scheduler.\n-    RMServerUtils.checkAndNormalizeContainerChangeRequest(rmContext, request,\n-        increase);\n+  private SchedContainerChangeRequest createSchedContainerChangeRequest(\n+      ContainerResourceChangeRequest request, boolean increase)\n+      throws YarnException {\n     ContainerId containerId \u003d request.getContainerId();\n     RMContainer rmContainer \u003d getRMContainer(containerId);\n+    if (null \u003d\u003d rmContainer) {\n+      String msg \u003d\n+          \"Failed to get rmContainer for \"\n+              + (increase ? \"increase\" : \"decrease\")\n+              + \" request, with container-id\u003d\" + containerId;\n+      throw new InvalidResourceRequestException(msg);\n+    }\n     SchedulerNode schedulerNode \u003d\n         getSchedulerNode(rmContainer.getAllocatedNode());\n-    \n-    return new SchedContainerChangeRequest(schedulerNode, rmContainer,\n-        request.getCapability());\n+    return new SchedContainerChangeRequest(\n+        this.rmContext, schedulerNode, rmContainer, request.getCapability());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private SchedContainerChangeRequest createSchedContainerChangeRequest(\n      ContainerResourceChangeRequest request, boolean increase)\n      throws YarnException {\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    if (null \u003d\u003d rmContainer) {\n      String msg \u003d\n          \"Failed to get rmContainer for \"\n              + (increase ? \"increase\" : \"decrease\")\n              + \" request, with container-id\u003d\" + containerId;\n      throw new InvalidResourceRequestException(msg);\n    }\n    SchedulerNode schedulerNode \u003d\n        getSchedulerNode(rmContainer.getAllocatedNode());\n    return new SchedContainerChangeRequest(\n        this.rmContext, schedulerNode, rmContainer, request.getCapability());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "checkAndNormalizeContainerChangeRequest",
            "newValue": "createSchedContainerChangeRequest"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
          "commitDate": "28/01/16 2:51 PM",
          "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
          "commitAuthor": "Jian He",
          "commitDateOld": "18/01/16 5:30 PM",
          "commitNameOld": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 9.89,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-      checkAndNormalizeContainerChangeRequest(\n-          ContainerResourceChangeRequest request, boolean increase)\n-          throws YarnException {\n-    // We have done a check in ApplicationMasterService, but RMContainer status\n-    // / Node resource could change since AMS won\u0027t acquire lock of scheduler.\n-    RMServerUtils.checkAndNormalizeContainerChangeRequest(rmContext, request,\n-        increase);\n+  private SchedContainerChangeRequest createSchedContainerChangeRequest(\n+      ContainerResourceChangeRequest request, boolean increase)\n+      throws YarnException {\n     ContainerId containerId \u003d request.getContainerId();\n     RMContainer rmContainer \u003d getRMContainer(containerId);\n+    if (null \u003d\u003d rmContainer) {\n+      String msg \u003d\n+          \"Failed to get rmContainer for \"\n+              + (increase ? \"increase\" : \"decrease\")\n+              + \" request, with container-id\u003d\" + containerId;\n+      throw new InvalidResourceRequestException(msg);\n+    }\n     SchedulerNode schedulerNode \u003d\n         getSchedulerNode(rmContainer.getAllocatedNode());\n-    \n-    return new SchedContainerChangeRequest(schedulerNode, rmContainer,\n-        request.getCapability());\n+    return new SchedContainerChangeRequest(\n+        this.rmContext, schedulerNode, rmContainer, request.getCapability());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private SchedContainerChangeRequest createSchedContainerChangeRequest(\n      ContainerResourceChangeRequest request, boolean increase)\n      throws YarnException {\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    if (null \u003d\u003d rmContainer) {\n      String msg \u003d\n          \"Failed to get rmContainer for \"\n              + (increase ? \"increase\" : \"decrease\")\n              + \" request, with container-id\u003d\" + containerId;\n      throw new InvalidResourceRequestException(msg);\n    }\n    SchedulerNode schedulerNode \u003d\n        getSchedulerNode(rmContainer.getAllocatedNode());\n    return new SchedContainerChangeRequest(\n        this.rmContext, schedulerNode, rmContainer, request.getCapability());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+      checkAndNormalizeContainerChangeRequest(\n+          ContainerResourceChangeRequest request, boolean increase)\n+          throws YarnException {\n+    // We have done a check in ApplicationMasterService, but RMContainer status\n+    // / Node resource could change since AMS won\u0027t acquire lock of scheduler.\n+    RMServerUtils.checkAndNormalizeContainerChangeRequest(rmContext, request,\n+        increase);\n+    ContainerId containerId \u003d request.getContainerId();\n+    RMContainer rmContainer \u003d getRMContainer(containerId);\n+    SchedulerNode schedulerNode \u003d\n+        getSchedulerNode(rmContainer.getAllocatedNode());\n+    \n+    return new SchedContainerChangeRequest(schedulerNode, rmContainer,\n+        request.getCapability());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      checkAndNormalizeContainerChangeRequest(\n          ContainerResourceChangeRequest request, boolean increase)\n          throws YarnException {\n    // We have done a check in ApplicationMasterService, but RMContainer status\n    // / Node resource could change since AMS won\u0027t acquire lock of scheduler.\n    RMServerUtils.checkAndNormalizeContainerChangeRequest(rmContext, request,\n        increase);\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    SchedulerNode schedulerNode \u003d\n        getSchedulerNode(rmContainer.getAllocatedNode());\n    \n    return new SchedContainerChangeRequest(schedulerNode, rmContainer,\n        request.getCapability());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}