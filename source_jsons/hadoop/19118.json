{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskLog.java",
  "functionName": "buildCommandLine",
  "functionId": "buildCommandLine___setup-List__String____cmd-List__String____stdoutFilename-File__stderrFilename-File__tailLength-long__useSetsid-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/TaskLog.java",
  "functionStartLine": 524,
  "functionEndLine": 576,
  "numCommitsSeen": 18,
  "timeTaken": 4525,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static String buildCommandLine(List\u003cString\u003e setup, List\u003cString\u003e cmd, \n                                      File stdoutFilename,\n                                      File stderrFilename,\n                                      long tailLength, \n                                      boolean useSetsid)\n                                throws IOException {\n    \n    String stdout \u003d FileUtil.makeShellPath(stdoutFilename);\n    String stderr \u003d FileUtil.makeShellPath(stderrFilename);    \n    StringBuffer mergedCmd \u003d new StringBuffer();\n    \n    // Export the pid of taskJvm to env variable JVM_PID.\n    // Currently pid is not used on Windows\n    if (!Shell.WINDOWS) {\n      mergedCmd.append(\" export JVM_PID\u003d`echo $$` ; \");\n    }\n\n    if (setup !\u003d null \u0026\u0026 setup.size() \u003e 0) {\n      mergedCmd.append(addCommand(setup, false));\n      mergedCmd.append(\";\");\n    }\n    if (tailLength \u003e 0) {\n      mergedCmd.append(\"(\");\n    } else if(ProcessTree.isSetsidAvailable \u0026\u0026 useSetsid \u0026\u0026\n        !Shell.WINDOWS) {\n      mergedCmd.append(\"exec setsid \");\n    } else {\n      mergedCmd.append(\"exec \");\n    }\n    mergedCmd.append(addCommand(cmd, true));\n    mergedCmd.append(\" \u003c /dev/null \");\n    if (tailLength \u003e 0) {\n      mergedCmd.append(\" | \");\n      mergedCmd.append(tailCommand);\n      mergedCmd.append(\" -c \");\n      mergedCmd.append(tailLength);\n      mergedCmd.append(\" \u003e\u003e \");\n      mergedCmd.append(stdout);\n      mergedCmd.append(\" ; exit $PIPESTATUS ) 2\u003e\u00261 | \");\n      mergedCmd.append(tailCommand);\n      mergedCmd.append(\" -c \");\n      mergedCmd.append(tailLength);\n      mergedCmd.append(\" \u003e\u003e \");\n      mergedCmd.append(stderr);\n      mergedCmd.append(\" ; exit $PIPESTATUS\");\n    } else {\n      mergedCmd.append(\" 1\u003e\u003e \");\n      mergedCmd.append(stdout);\n      mergedCmd.append(\" 2\u003e\u003e \");\n      mergedCmd.append(stderr);\n    }\n    return mergedCmd.toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/TaskLog.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/TaskLog.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/TaskLog.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static String buildCommandLine(List\u003cString\u003e setup, List\u003cString\u003e cmd, \n                                      File stdoutFilename,\n                                      File stderrFilename,\n                                      long tailLength, \n                                      boolean useSetsid)\n                                throws IOException {\n    \n    String stdout \u003d FileUtil.makeShellPath(stdoutFilename);\n    String stderr \u003d FileUtil.makeShellPath(stderrFilename);    \n    StringBuffer mergedCmd \u003d new StringBuffer();\n    \n    // Export the pid of taskJvm to env variable JVM_PID.\n    // Currently pid is not used on Windows\n    if (!Shell.WINDOWS) {\n      mergedCmd.append(\" export JVM_PID\u003d`echo $$` ; \");\n    }\n\n    if (setup !\u003d null \u0026\u0026 setup.size() \u003e 0) {\n      mergedCmd.append(addCommand(setup, false));\n      mergedCmd.append(\";\");\n    }\n    if (tailLength \u003e 0) {\n      mergedCmd.append(\"(\");\n    } else if(ProcessTree.isSetsidAvailable \u0026\u0026 useSetsid \u0026\u0026\n        !Shell.WINDOWS) {\n      mergedCmd.append(\"exec setsid \");\n    } else {\n      mergedCmd.append(\"exec \");\n    }\n    mergedCmd.append(addCommand(cmd, true));\n    mergedCmd.append(\" \u003c /dev/null \");\n    if (tailLength \u003e 0) {\n      mergedCmd.append(\" | \");\n      mergedCmd.append(tailCommand);\n      mergedCmd.append(\" -c \");\n      mergedCmd.append(tailLength);\n      mergedCmd.append(\" \u003e\u003e \");\n      mergedCmd.append(stdout);\n      mergedCmd.append(\" ; exit $PIPESTATUS ) 2\u003e\u00261 | \");\n      mergedCmd.append(tailCommand);\n      mergedCmd.append(\" -c \");\n      mergedCmd.append(tailLength);\n      mergedCmd.append(\" \u003e\u003e \");\n      mergedCmd.append(stderr);\n      mergedCmd.append(\" ; exit $PIPESTATUS\");\n    } else {\n      mergedCmd.append(\" 1\u003e\u003e \");\n      mergedCmd.append(stdout);\n      mergedCmd.append(\" 2\u003e\u003e \");\n      mergedCmd.append(stderr);\n    }\n    return mergedCmd.toString();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/TaskLog.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/TaskLog.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/TaskLog.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,53 @@\n+  static String buildCommandLine(List\u003cString\u003e setup, List\u003cString\u003e cmd, \n+                                      File stdoutFilename,\n+                                      File stderrFilename,\n+                                      long tailLength, \n+                                      boolean useSetsid)\n+                                throws IOException {\n+    \n+    String stdout \u003d FileUtil.makeShellPath(stdoutFilename);\n+    String stderr \u003d FileUtil.makeShellPath(stderrFilename);    \n+    StringBuffer mergedCmd \u003d new StringBuffer();\n+    \n+    // Export the pid of taskJvm to env variable JVM_PID.\n+    // Currently pid is not used on Windows\n+    if (!Shell.WINDOWS) {\n+      mergedCmd.append(\" export JVM_PID\u003d`echo $$` ; \");\n+    }\n+\n+    if (setup !\u003d null \u0026\u0026 setup.size() \u003e 0) {\n+      mergedCmd.append(addCommand(setup, false));\n+      mergedCmd.append(\";\");\n+    }\n+    if (tailLength \u003e 0) {\n+      mergedCmd.append(\"(\");\n+    } else if(ProcessTree.isSetsidAvailable \u0026\u0026 useSetsid \u0026\u0026\n+        !Shell.WINDOWS) {\n+      mergedCmd.append(\"exec setsid \");\n+    } else {\n+      mergedCmd.append(\"exec \");\n+    }\n+    mergedCmd.append(addCommand(cmd, true));\n+    mergedCmd.append(\" \u003c /dev/null \");\n+    if (tailLength \u003e 0) {\n+      mergedCmd.append(\" | \");\n+      mergedCmd.append(tailCommand);\n+      mergedCmd.append(\" -c \");\n+      mergedCmd.append(tailLength);\n+      mergedCmd.append(\" \u003e\u003e \");\n+      mergedCmd.append(stdout);\n+      mergedCmd.append(\" ; exit $PIPESTATUS ) 2\u003e\u00261 | \");\n+      mergedCmd.append(tailCommand);\n+      mergedCmd.append(\" -c \");\n+      mergedCmd.append(tailLength);\n+      mergedCmd.append(\" \u003e\u003e \");\n+      mergedCmd.append(stderr);\n+      mergedCmd.append(\" ; exit $PIPESTATUS\");\n+    } else {\n+      mergedCmd.append(\" 1\u003e\u003e \");\n+      mergedCmd.append(stdout);\n+      mergedCmd.append(\" 2\u003e\u003e \");\n+      mergedCmd.append(stderr);\n+    }\n+    return mergedCmd.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static String buildCommandLine(List\u003cString\u003e setup, List\u003cString\u003e cmd, \n                                      File stdoutFilename,\n                                      File stderrFilename,\n                                      long tailLength, \n                                      boolean useSetsid)\n                                throws IOException {\n    \n    String stdout \u003d FileUtil.makeShellPath(stdoutFilename);\n    String stderr \u003d FileUtil.makeShellPath(stderrFilename);    \n    StringBuffer mergedCmd \u003d new StringBuffer();\n    \n    // Export the pid of taskJvm to env variable JVM_PID.\n    // Currently pid is not used on Windows\n    if (!Shell.WINDOWS) {\n      mergedCmd.append(\" export JVM_PID\u003d`echo $$` ; \");\n    }\n\n    if (setup !\u003d null \u0026\u0026 setup.size() \u003e 0) {\n      mergedCmd.append(addCommand(setup, false));\n      mergedCmd.append(\";\");\n    }\n    if (tailLength \u003e 0) {\n      mergedCmd.append(\"(\");\n    } else if(ProcessTree.isSetsidAvailable \u0026\u0026 useSetsid \u0026\u0026\n        !Shell.WINDOWS) {\n      mergedCmd.append(\"exec setsid \");\n    } else {\n      mergedCmd.append(\"exec \");\n    }\n    mergedCmd.append(addCommand(cmd, true));\n    mergedCmd.append(\" \u003c /dev/null \");\n    if (tailLength \u003e 0) {\n      mergedCmd.append(\" | \");\n      mergedCmd.append(tailCommand);\n      mergedCmd.append(\" -c \");\n      mergedCmd.append(tailLength);\n      mergedCmd.append(\" \u003e\u003e \");\n      mergedCmd.append(stdout);\n      mergedCmd.append(\" ; exit $PIPESTATUS ) 2\u003e\u00261 | \");\n      mergedCmd.append(tailCommand);\n      mergedCmd.append(\" -c \");\n      mergedCmd.append(tailLength);\n      mergedCmd.append(\" \u003e\u003e \");\n      mergedCmd.append(stderr);\n      mergedCmd.append(\" ; exit $PIPESTATUS\");\n    } else {\n      mergedCmd.append(\" 1\u003e\u003e \");\n      mergedCmd.append(stdout);\n      mergedCmd.append(\" 2\u003e\u003e \");\n      mergedCmd.append(stderr);\n    }\n    return mergedCmd.toString();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/TaskLog.java"
    }
  }
}