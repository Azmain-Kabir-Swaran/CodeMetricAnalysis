{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHealthScriptRunner.java",
  "functionName": "shouldRun",
  "functionId": "shouldRun___script-String__healthScript-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
  "functionStartLine": 258,
  "functionEndLine": 276,
  "numCommitsSeen": 17,
  "timeTaken": 10236,
  "changeHistory": [
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
    "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
    "27d4592771ddbeb793bf148c0efb951e640b7b19",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "d4ac6822e1c5dfac504ced48f10ab57a55b49e93": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "27d4592771ddbeb793bf148c0efb951e640b7b19": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Yfilerename",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
      "commitDate": "15/12/19 8:28 AM",
      "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,19 @@\n-  public static boolean shouldRun(String healthScript) {\n+  static boolean shouldRun(String script, String healthScript) {\n     if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n+      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n+          script);\n       return false;\n     }\n     File f \u003d new File(healthScript);\n-    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n+    if (!f.exists()) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    if (!FileUtil.canExecute(f)) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean shouldRun(String script, String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n          script);\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    if (!f.exists()) {\n      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n          healthScript, script);\n      return false;\n    }\n    if (!FileUtil.canExecute(f)) {\n      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n          healthScript, script);\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
            "oldMethodName": "shouldRun",
            "newMethodName": "shouldRun"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,19 @@\n-  public static boolean shouldRun(String healthScript) {\n+  static boolean shouldRun(String script, String healthScript) {\n     if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n+      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n+          script);\n       return false;\n     }\n     File f \u003d new File(healthScript);\n-    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n+    if (!f.exists()) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    if (!FileUtil.canExecute(f)) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean shouldRun(String script, String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n          script);\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    if (!f.exists()) {\n      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n          healthScript, script);\n      return false;\n    }\n    if (!FileUtil.canExecute(f)) {\n      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n          healthScript, script);\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,19 @@\n-  public static boolean shouldRun(String healthScript) {\n+  static boolean shouldRun(String script, String healthScript) {\n     if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n+      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n+          script);\n       return false;\n     }\n     File f \u003d new File(healthScript);\n-    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n+    if (!f.exists()) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    if (!FileUtil.canExecute(f)) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean shouldRun(String script, String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n          script);\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    if (!f.exists()) {\n      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n          healthScript, script);\n      return false;\n    }\n    if (!FileUtil.canExecute(f)) {\n      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n          healthScript, script);\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,19 @@\n-  public static boolean shouldRun(String healthScript) {\n+  static boolean shouldRun(String script, String healthScript) {\n     if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n+      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n+          script);\n       return false;\n     }\n     File f \u003d new File(healthScript);\n-    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n+    if (!f.exists()) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    if (!FileUtil.canExecute(f)) {\n+      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n+          healthScript, script);\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean shouldRun(String script, String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      LOG.info(\"Missing location for the node health check script \\\"{}\\\".\",\n          script);\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    if (!f.exists()) {\n      LOG.warn(\"File {} for script \\\"{}\\\" does not exist.\",\n          healthScript, script);\n      return false;\n    }\n    if (!FileUtil.canExecute(f)) {\n      LOG.warn(\"File {} for script \\\"{}\\\" can not be executed.\",\n          healthScript, script);\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
          "extendedDetails": {
            "oldValue": "[healthScript-String]",
            "newValue": "[script-String, healthScript-String]"
          }
        }
      ]
    },
    "d4ac6822e1c5dfac504ced48f10ab57a55b49e93": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-2980. Move health check script related functionality to hadoop-common (Varun Saxena via aw)\n",
      "commitDate": "24/02/15 11:25 AM",
      "commitName": "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
      "commitAuthor": "Allen Wittenauer",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-2980. Move health check script related functionality to hadoop-common (Varun Saxena via aw)\n",
          "commitDate": "24/02/15 11:25 AM",
          "commitName": "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "24/02/15 10:31 AM",
          "commitNameOld": "73bcfa99af61e5202f030510db8954c17cba43cc",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,7 @@\n-  public static boolean shouldRun(Configuration conf) {\n-    String nodeHealthScript \u003d \n-      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n-    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n+  public static boolean shouldRun(String healthScript) {\n+    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n       return false;\n     }\n-    File f \u003d new File(nodeHealthScript);\n+    File f \u003d new File(healthScript);\n     return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean shouldRun(String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2980. Move health check script related functionality to hadoop-common (Varun Saxena via aw)\n",
          "commitDate": "24/02/15 11:25 AM",
          "commitName": "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "24/02/15 10:31 AM",
          "commitNameOld": "73bcfa99af61e5202f030510db8954c17cba43cc",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,7 @@\n-  public static boolean shouldRun(Configuration conf) {\n-    String nodeHealthScript \u003d \n-      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n-    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n+  public static boolean shouldRun(String healthScript) {\n+    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n       return false;\n     }\n-    File f \u003d new File(nodeHealthScript);\n+    File f \u003d new File(healthScript);\n     return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean shouldRun(String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2980. Move health check script related functionality to hadoop-common (Varun Saxena via aw)\n",
          "commitDate": "24/02/15 11:25 AM",
          "commitName": "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "24/02/15 10:31 AM",
          "commitNameOld": "73bcfa99af61e5202f030510db8954c17cba43cc",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,7 @@\n-  public static boolean shouldRun(Configuration conf) {\n-    String nodeHealthScript \u003d \n-      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n-    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n+  public static boolean shouldRun(String healthScript) {\n+    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n       return false;\n     }\n-    File f \u003d new File(nodeHealthScript);\n+    File f \u003d new File(healthScript);\n     return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean shouldRun(String healthScript) {\n    if (healthScript \u003d\u003d null || healthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(healthScript);\n    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[healthScript-String]"
          }
        }
      ]
    },
    "27d4592771ddbeb793bf148c0efb951e640b7b19": {
      "type": "Ybodychange",
      "commitMessage": "YARN-506. Move to common utils FileUtil#setReadable/Writable/Executable and FileUtil#canRead/Write/Execute. Contributed by Ivan Mitic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1477408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/13 4:09 PM",
      "commitName": "27d4592771ddbeb793bf148c0efb951e640b7b19",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 264.74,
      "commitsBetweenForRepo": 1399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static boolean shouldRun(Configuration conf) {\n     String nodeHealthScript \u003d \n       conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n     if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n       return false;\n     }\n     File f \u003d new File(nodeHealthScript);\n-    return f.exists() \u0026\u0026 f.canExecute();\n+    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean shouldRun(Configuration conf) {\n    String nodeHealthScript \u003d \n      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(nodeHealthScript);\n    return f.exists() \u0026\u0026 FileUtil.canExecute(f);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean shouldRun(Configuration conf) {\n    String nodeHealthScript \u003d \n      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(nodeHealthScript);\n    return f.exists() \u0026\u0026 f.canExecute();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "28/11/11 9:07 PM",
      "commitNameOld": "be9c46a4475f18ef33796ee63d73821c07c49fb5",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean shouldRun(Configuration conf) {\n    String nodeHealthScript \u003d \n      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(nodeHealthScript);\n    return f.exists() \u0026\u0026 f.canExecute();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java"
      }
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static boolean shouldRun(Configuration conf) {\n     String nodeHealthScript \u003d \n-      conf.get(HEALTH_CHECK_SCRIPT_PROPERTY);\n+      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n     if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n       return false;\n     }\n     File f \u003d new File(nodeHealthScript);\n     return f.exists() \u0026\u0026 f.canExecute();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean shouldRun(Configuration conf) {\n    String nodeHealthScript \u003d \n      conf.get(YarnConfiguration.NM_HEALTH_CHECK_SCRIPT_PATH);\n    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(nodeHealthScript);\n    return f.exists() \u0026\u0026 f.canExecute();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean shouldRun(Configuration conf) {\n    String nodeHealthScript \u003d \n      conf.get(HEALTH_CHECK_SCRIPT_PROPERTY);\n    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(nodeHealthScript);\n    return f.exists() \u0026\u0026 f.canExecute();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+  public static boolean shouldRun(Configuration conf) {\n+    String nodeHealthScript \u003d \n+      conf.get(HEALTH_CHECK_SCRIPT_PROPERTY);\n+    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n+      return false;\n+    }\n+    File f \u003d new File(nodeHealthScript);\n+    return f.exists() \u0026\u0026 f.canExecute();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean shouldRun(Configuration conf) {\n    String nodeHealthScript \u003d \n      conf.get(HEALTH_CHECK_SCRIPT_PROPERTY);\n    if (nodeHealthScript \u003d\u003d null || nodeHealthScript.trim().isEmpty()) {\n      return false;\n    }\n    File f \u003d new File(nodeHealthScript);\n    return f.exists() \u0026\u0026 f.canExecute();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java"
    }
  }
}