{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalConfigurationProvider.java",
  "functionName": "getConfigurationInputStream",
  "functionId": "getConfigurationInputStream___bootstrapConf-Configuration__name-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/LocalConfigurationProvider.java",
  "functionStartLine": 37,
  "functionEndLine": 47,
  "numCommitsSeen": 4,
  "timeTaken": 1364,
  "changeHistory": [
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a"
  ],
  "changeHistoryShort": {
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": "Ybodychange",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "19/02/14 9:52 AM",
      "commitNameOld": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1300.93,
      "commitsBetweenForRepo": 9539,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public InputStream getConfigurationInputStream(Configuration bootstrapConf,\n       String name) throws IOException, YarnException {\n     if (name \u003d\u003d null || name.isEmpty()) {\n       throw new YarnException(\n           \"Illegal argument! The parameter should not be null or empty\");\n-    } else if (YarnConfiguration.RM_CONFIGURATION_FILES.contains(name)) {\n+    } else if (YarnConfiguration.RM_CONFIGURATION_FILES.contains(name) ||\n+        YarnConfiguration.NM_CONFIGURATION_FILES.contains(name)) {\n       return bootstrapConf.getConfResourceAsInputStream(name);\n     }\n     return new FileInputStream(name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream getConfigurationInputStream(Configuration bootstrapConf,\n      String name) throws IOException, YarnException {\n    if (name \u003d\u003d null || name.isEmpty()) {\n      throw new YarnException(\n          \"Illegal argument! The parameter should not be null or empty\");\n    } else if (YarnConfiguration.RM_CONFIGURATION_FILES.contains(name) ||\n        YarnConfiguration.NM_CONFIGURATION_FILES.contains(name)) {\n      return bootstrapConf.getConfResourceAsInputStream(name);\n    }\n    return new FileInputStream(name);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/LocalConfigurationProvider.java",
      "extendedDetails": {}
    },
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 9:52 AM",
      "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,10 @@\n+  public InputStream getConfigurationInputStream(Configuration bootstrapConf,\n+      String name) throws IOException, YarnException {\n+    if (name \u003d\u003d null || name.isEmpty()) {\n+      throw new YarnException(\n+          \"Illegal argument! The parameter should not be null or empty\");\n+    } else if (YarnConfiguration.RM_CONFIGURATION_FILES.contains(name)) {\n+      return bootstrapConf.getConfResourceAsInputStream(name);\n+    }\n+    return new FileInputStream(name);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream getConfigurationInputStream(Configuration bootstrapConf,\n      String name) throws IOException, YarnException {\n    if (name \u003d\u003d null || name.isEmpty()) {\n      throw new YarnException(\n          \"Illegal argument! The parameter should not be null or empty\");\n    } else if (YarnConfiguration.RM_CONFIGURATION_FILES.contains(name)) {\n      return bootstrapConf.getConfResourceAsInputStream(name);\n    }\n    return new FileInputStream(name);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/LocalConfigurationProvider.java"
    }
  }
}