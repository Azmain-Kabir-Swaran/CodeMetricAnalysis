{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BaseNMTokenSecretManager.java",
  "functionName": "newInstance",
  "functionId": "newInstance___password-byte[]__identifier-NMTokenIdentifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/BaseNMTokenSecretManager.java",
  "functionStartLine": 133,
  "functionEndLine": 144,
  "numCommitsSeen": 8,
  "timeTaken": 2722,
  "changeHistory": [
    "243bcd367ff3130d74676280233041f88aca62a5",
    "769a0bd8314cd7317c083a9b74abf47242acb58c",
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb"
  ],
  "changeHistoryShort": {
    "243bcd367ff3130d74676280233041f88aca62a5": "Ymultichange(Ymovefromfile,Yrename)",
    "769a0bd8314cd7317c083a9b74abf47242acb58c": "Ymovefromfile",
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Ymultichange(Ymovefromfile,Yrename)",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/06/13 4:19 PM",
          "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "18/06/13 4:02 PM",
          "commitNameOld": "44b9959edaa75b8d5d952eca577570231aadb44a",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-  public static Token newNMToken(byte[] password,\n+  public static Token newInstance(byte[] password,\n       NMTokenIdentifier identifier) {\n     NodeId nodeId \u003d identifier.getNodeId();\n     // RPC layer client expects ip:port as service for tokens\n     InetSocketAddress addr \u003d\n         NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n     Token nmToken \u003d\n         Token.newInstance(identifier.getBytes(),\n           NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n             .buildTokenService(addr).toString());\n     return nmToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Token newInstance(byte[] password,\n      NMTokenIdentifier identifier) {\n    NodeId nodeId \u003d identifier.getNodeId();\n    // RPC layer client expects ip:port as service for tokens\n    InetSocketAddress addr \u003d\n        NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n    Token nmToken \u003d\n        Token.newInstance(identifier.getBytes(),\n          NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n            .buildTokenService(addr).toString());\n    return nmToken;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/BaseNMTokenSecretManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/NMTokenSecretManagerInRM.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/BaseNMTokenSecretManager.java",
            "oldMethodName": "newNMToken",
            "newMethodName": "newInstance"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/06/13 4:19 PM",
          "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "18/06/13 4:02 PM",
          "commitNameOld": "44b9959edaa75b8d5d952eca577570231aadb44a",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-  public static Token newNMToken(byte[] password,\n+  public static Token newInstance(byte[] password,\n       NMTokenIdentifier identifier) {\n     NodeId nodeId \u003d identifier.getNodeId();\n     // RPC layer client expects ip:port as service for tokens\n     InetSocketAddress addr \u003d\n         NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n     Token nmToken \u003d\n         Token.newInstance(identifier.getBytes(),\n           NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n             .buildTokenService(addr).toString());\n     return nmToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Token newInstance(byte[] password,\n      NMTokenIdentifier identifier) {\n    NodeId nodeId \u003d identifier.getNodeId();\n    // RPC layer client expects ip:port as service for tokens\n    InetSocketAddress addr \u003d\n        NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n    Token nmToken \u003d\n        Token.newInstance(identifier.getBytes(),\n          NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n            .buildTokenService(addr).toString());\n    return nmToken;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/BaseNMTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "newNMToken",
            "newValue": "newInstance"
          }
        }
      ]
    },
    "769a0bd8314cd7317c083a9b74abf47242acb58c": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-693. Modified RM to send NMTokens on allocate call so that AMs can then use them for authentication with NMs. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:11 PM",
      "commitName": "769a0bd8314cd7317c083a9b74abf47242acb58c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/06/13 8:07 PM",
      "commitNameOld": "1a389305b27ac1efec4d7923b87de3e703bf70e1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   public static Token newNMToken(byte[] password,\n       NMTokenIdentifier identifier) {\n     NodeId nodeId \u003d identifier.getNodeId();\n     // RPC layer client expects ip:port as service for tokens\n     InetSocketAddress addr \u003d\n         NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n     Token nmToken \u003d\n         Token.newInstance(identifier.getBytes(),\n           NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n             .buildTokenService(addr).toString());\n     return nmToken;\n-\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Token newNMToken(byte[] password,\n      NMTokenIdentifier identifier) {\n    NodeId nodeId \u003d identifier.getNodeId();\n    // RPC layer client expects ip:port as service for tokens\n    InetSocketAddress addr \u003d\n        NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n    Token nmToken \u003d\n        Token.newInstance(identifier.getBytes(),\n          NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n            .buildTokenService(addr).toString());\n    return nmToken;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/NMTokenSecretManagerInRM.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/BaseNMTokenSecretManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/NMTokenSecretManagerInRM.java",
        "oldMethodName": "newNMToken",
        "newMethodName": "newNMToken"
      }
    },
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-692. Creating NMToken master key on RM and sharing it with NM as a part of RM-NM heartbeat. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492907 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 5:06 PM",
      "commitName": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  public static Token newNMToken(byte[] password,\n+      NMTokenIdentifier identifier) {\n+    NodeId nodeId \u003d identifier.getNodeId();\n+    // RPC layer client expects ip:port as service for tokens\n+    InetSocketAddress addr \u003d\n+        NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n+    Token nmToken \u003d\n+        Token.newInstance(identifier.getBytes(),\n+          NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n+            .buildTokenService(addr).toString());\n+    return nmToken;\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Token newNMToken(byte[] password,\n      NMTokenIdentifier identifier) {\n    NodeId nodeId \u003d identifier.getNodeId();\n    // RPC layer client expects ip:port as service for tokens\n    InetSocketAddress addr \u003d\n        NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());\n    Token nmToken \u003d\n        Token.newInstance(identifier.getBytes(),\n          NMTokenIdentifier.KIND.toString(), password, SecurityUtil\n            .buildTokenService(addr).toString());\n    return nmToken;\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/BaseNMTokenSecretManager.java"
    }
  }
}