{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "getAccountKeyFromConfiguration",
  "functionId": "getAccountKeyFromConfiguration___accountName-String__conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 967,
  "functionEndLine": 996,
  "numCommitsSeen": 53,
  "timeTaken": 2449,
  "changeHistory": [
    "ad55083f75cb920fde58302d7bc8857086c1978c",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "ad55083f75cb920fde58302d7bc8857086c1978c": "Ymodifierchange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ad55083f75cb920fde58302d7bc8857086c1978c": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-11441. Hadoop-azure: Change few methods scope to public. Contributed by Shashank Khandelwal.\n",
      "commitDate": "29/01/15 1:07 PM",
      "commitName": "ad55083f75cb920fde58302d7bc8857086c1978c",
      "commitAuthor": "cnauroth",
      "commitDateOld": "08/10/14 2:20 PM",
      "commitNameOld": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 112.99,
      "commitsBetweenForRepo": 825,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n-  static String getAccountKeyFromConfiguration(String accountName,\n+  public static String getAccountKeyFromConfiguration(String accountName,\n       Configuration conf) throws KeyProviderException {\n     String key \u003d null;\n     String keyProviderClass \u003d conf.get(KEY_ACCOUNT_KEYPROVIDER_PREFIX\n         + accountName);\n     KeyProvider keyProvider \u003d null;\n \n     if (keyProviderClass \u003d\u003d null) {\n       // No key provider was provided so use the provided key as is.\n       keyProvider \u003d new SimpleKeyProvider();\n     } else {\n       // create an instance of the key provider class and verify it\n       // implements KeyProvider\n       Object keyProviderObject \u003d null;\n       try {\n         Class\u003c?\u003e clazz \u003d conf.getClassByName(keyProviderClass);\n         keyProviderObject \u003d clazz.newInstance();\n       } catch (Exception e) {\n         throw new KeyProviderException(\"Unable to load key provider class.\", e);\n       }\n       if (!(keyProviderObject instanceof KeyProvider)) {\n         throw new KeyProviderException(keyProviderClass\n             + \" specified in config is not a valid KeyProvider class.\");\n       }\n       keyProvider \u003d (KeyProvider) keyProviderObject;\n     }\n     key \u003d keyProvider.getStorageAccountKey(accountName, conf);\n \n     return key;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getAccountKeyFromConfiguration(String accountName,\n      Configuration conf) throws KeyProviderException {\n    String key \u003d null;\n    String keyProviderClass \u003d conf.get(KEY_ACCOUNT_KEYPROVIDER_PREFIX\n        + accountName);\n    KeyProvider keyProvider \u003d null;\n\n    if (keyProviderClass \u003d\u003d null) {\n      // No key provider was provided so use the provided key as is.\n      keyProvider \u003d new SimpleKeyProvider();\n    } else {\n      // create an instance of the key provider class and verify it\n      // implements KeyProvider\n      Object keyProviderObject \u003d null;\n      try {\n        Class\u003c?\u003e clazz \u003d conf.getClassByName(keyProviderClass);\n        keyProviderObject \u003d clazz.newInstance();\n      } catch (Exception e) {\n        throw new KeyProviderException(\"Unable to load key provider class.\", e);\n      }\n      if (!(keyProviderObject instanceof KeyProvider)) {\n        throw new KeyProviderException(keyProviderClass\n            + \" specified in config is not a valid KeyProvider class.\");\n      }\n      keyProvider \u003d (KeyProvider) keyProviderObject;\n    }\n    key \u003d keyProvider.getStorageAccountKey(accountName, conf);\n\n    return key;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,30 @@\n+  static String getAccountKeyFromConfiguration(String accountName,\n+      Configuration conf) throws KeyProviderException {\n+    String key \u003d null;\n+    String keyProviderClass \u003d conf.get(KEY_ACCOUNT_KEYPROVIDER_PREFIX\n+        + accountName);\n+    KeyProvider keyProvider \u003d null;\n+\n+    if (keyProviderClass \u003d\u003d null) {\n+      // No key provider was provided so use the provided key as is.\n+      keyProvider \u003d new SimpleKeyProvider();\n+    } else {\n+      // create an instance of the key provider class and verify it\n+      // implements KeyProvider\n+      Object keyProviderObject \u003d null;\n+      try {\n+        Class\u003c?\u003e clazz \u003d conf.getClassByName(keyProviderClass);\n+        keyProviderObject \u003d clazz.newInstance();\n+      } catch (Exception e) {\n+        throw new KeyProviderException(\"Unable to load key provider class.\", e);\n+      }\n+      if (!(keyProviderObject instanceof KeyProvider)) {\n+        throw new KeyProviderException(keyProviderClass\n+            + \" specified in config is not a valid KeyProvider class.\");\n+      }\n+      keyProvider \u003d (KeyProvider) keyProviderObject;\n+    }\n+    key \u003d keyProvider.getStorageAccountKey(accountName, conf);\n+\n+    return key;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static String getAccountKeyFromConfiguration(String accountName,\n      Configuration conf) throws KeyProviderException {\n    String key \u003d null;\n    String keyProviderClass \u003d conf.get(KEY_ACCOUNT_KEYPROVIDER_PREFIX\n        + accountName);\n    KeyProvider keyProvider \u003d null;\n\n    if (keyProviderClass \u003d\u003d null) {\n      // No key provider was provided so use the provided key as is.\n      keyProvider \u003d new SimpleKeyProvider();\n    } else {\n      // create an instance of the key provider class and verify it\n      // implements KeyProvider\n      Object keyProviderObject \u003d null;\n      try {\n        Class\u003c?\u003e clazz \u003d conf.getClassByName(keyProviderClass);\n        keyProviderObject \u003d clazz.newInstance();\n      } catch (Exception e) {\n        throw new KeyProviderException(\"Unable to load key provider class.\", e);\n      }\n      if (!(keyProviderObject instanceof KeyProvider)) {\n        throw new KeyProviderException(keyProviderClass\n            + \" specified in config is not a valid KeyProvider class.\");\n      }\n      keyProvider \u003d (KeyProvider) keyProviderObject;\n    }\n    key \u003d keyProvider.getStorageAccountKey(accountName, conf);\n\n    return key;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}