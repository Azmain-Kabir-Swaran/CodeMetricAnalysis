{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "mapAttributesToNodes",
  "functionId": "mapAttributesToNodes___request-NodesToAttributesMappingRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 981,
  "functionEndLine": 1023,
  "numCommitsSeen": 78,
  "timeTaken": 3708,
  "changeHistory": [
    "c741109522d2913b87638957c64b94dee6b51029",
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
    "901e85238da08129374d44af80716b07f0b912e6",
    "1f42ce907a4987ea095ae0c237b89274c689ed99"
  ],
  "changeHistoryShort": {
    "c741109522d2913b87638957c64b94dee6b51029": "Ybodychange",
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Ybodychange",
    "901e85238da08129374d44af80716b07f0b912e6": "Ybodychange",
    "1f42ce907a4987ea095ae0c237b89274c689ed99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c741109522d2913b87638957c64b94dee6b51029": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8987. Usability improvements node-attributes CLI. Contributed by  Bibin A Chundatt.\n",
      "commitDate": "12/11/18 2:18 AM",
      "commitName": "c741109522d2913b87638957c64b94dee6b51029",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 60.99,
      "commitsBetweenForRepo": 587,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,43 @@\n   public NodesToAttributesMappingResponse mapAttributesToNodes(\n       NodesToAttributesMappingRequest request)\n       throws YarnException, IOException {\n \n     final String operation \u003d \"mapAttributesToNodes\";\n     final String msg \u003d \"Map Attributes to Nodes\";\n     UserGroupInformation user \u003d checkAcls(operation);\n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n \n     List\u003cNodeToAttributes\u003e nodesToAttributes \u003d request.getNodesToAttributes();\n     boolean failOnUnknownNodes \u003d request.getFailOnUnknownNodes();\n \n     NodeAttributesManager nodeAttributesManager \u003d\n         rm.getRMContext().getNodeAttributesManager();\n     try {\n       Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n           validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n       switch (request.getOperation()) {\n       case ADD:\n         nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);\n         break;\n       case REMOVE:\n+        validateAttributesExists(nodesToAttributes);\n         nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);\n         break;\n       case REPLACE:\n         nodeAttributesManager.replaceNodeAttributes(\n             NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);\n         break;\n       default:\n         throw new IOException(\"Invalid operation \" + request.getOperation()\n             + \" specified in the mapAttributesToNodes request \");\n \n       }\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n     RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n         \"AdminService\");\n     return recordFactory\n         .newRecordInstance(NodesToAttributesMappingResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodesToAttributesMappingResponse mapAttributesToNodes(\n      NodesToAttributesMappingRequest request)\n      throws YarnException, IOException {\n\n    final String operation \u003d \"mapAttributesToNodes\";\n    final String msg \u003d \"Map Attributes to Nodes\";\n    UserGroupInformation user \u003d checkAcls(operation);\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n\n    List\u003cNodeToAttributes\u003e nodesToAttributes \u003d request.getNodesToAttributes();\n    boolean failOnUnknownNodes \u003d request.getFailOnUnknownNodes();\n\n    NodeAttributesManager nodeAttributesManager \u003d\n        rm.getRMContext().getNodeAttributesManager();\n    try {\n      Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n          validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n      switch (request.getOperation()) {\n      case ADD:\n        nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);\n        break;\n      case REMOVE:\n        validateAttributesExists(nodesToAttributes);\n        nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);\n        break;\n      case REPLACE:\n        nodeAttributesManager.replaceNodeAttributes(\n            NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);\n        break;\n      default:\n        throw new IOException(\"Invalid operation \" + request.getOperation()\n            + \" specified in the mapAttributesToNodes request \");\n\n      }\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n        \"AdminService\");\n    return recordFactory\n        .newRecordInstance(NodesToAttributesMappingResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,42 @@\n   public NodesToAttributesMappingResponse mapAttributesToNodes(\n       NodesToAttributesMappingRequest request)\n       throws YarnException, IOException {\n \n     final String operation \u003d \"mapAttributesToNodes\";\n     final String msg \u003d \"Map Attributes to Nodes\";\n     UserGroupInformation user \u003d checkAcls(operation);\n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n \n     List\u003cNodeToAttributes\u003e nodesToAttributes \u003d request.getNodesToAttributes();\n     boolean failOnUnknownNodes \u003d request.getFailOnUnknownNodes();\n \n-    Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n-        validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n-\n     NodeAttributesManager nodeAttributesManager \u003d\n         rm.getRMContext().getNodeAttributesManager();\n     try {\n+      Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n+          validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n       switch (request.getOperation()) {\n       case ADD:\n         nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);\n         break;\n       case REMOVE:\n         nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);\n         break;\n       case REPLACE:\n         nodeAttributesManager.replaceNodeAttributes(\n             NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);\n         break;\n       default:\n         throw new IOException(\"Invalid operation \" + request.getOperation()\n             + \" specified in the mapAttributesToNodes request \");\n \n       }\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n     RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n         \"AdminService\");\n     return recordFactory\n         .newRecordInstance(NodesToAttributesMappingResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodesToAttributesMappingResponse mapAttributesToNodes(\n      NodesToAttributesMappingRequest request)\n      throws YarnException, IOException {\n\n    final String operation \u003d \"mapAttributesToNodes\";\n    final String msg \u003d \"Map Attributes to Nodes\";\n    UserGroupInformation user \u003d checkAcls(operation);\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n\n    List\u003cNodeToAttributes\u003e nodesToAttributes \u003d request.getNodesToAttributes();\n    boolean failOnUnknownNodes \u003d request.getFailOnUnknownNodes();\n\n    NodeAttributesManager nodeAttributesManager \u003d\n        rm.getRMContext().getNodeAttributesManager();\n    try {\n      Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n          validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n      switch (request.getOperation()) {\n      case ADD:\n        nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);\n        break;\n      case REMOVE:\n        nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);\n        break;\n      case REPLACE:\n        nodeAttributesManager.replaceNodeAttributes(\n            NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);\n        break;\n      default:\n        throw new IOException(\"Invalid operation \" + request.getOperation()\n            + \" specified in the mapAttributesToNodes request \");\n\n      }\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n        \"AdminService\");\n    return recordFactory\n        .newRecordInstance(NodesToAttributesMappingResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "901e85238da08129374d44af80716b07f0b912e6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8033. CLI Integration with NodeAttributesManagerImpl. Contributed by Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "901e85238da08129374d44af80716b07f0b912e6",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "12/09/18 3:30 AM",
      "commitNameOld": "1f42ce907a4987ea095ae0c237b89274c689ed99",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,43 @@\n   public NodesToAttributesMappingResponse mapAttributesToNodes(\n       NodesToAttributesMappingRequest request)\n       throws YarnException, IOException {\n+\n+    final String operation \u003d \"mapAttributesToNodes\";\n+    final String msg \u003d \"Map Attributes to Nodes\";\n+    UserGroupInformation user \u003d checkAcls(operation);\n+    checkRMStatus(user.getShortUserName(), operation, msg);\n+\n+\n+    List\u003cNodeToAttributes\u003e nodesToAttributes \u003d request.getNodesToAttributes();\n+    boolean failOnUnknownNodes \u003d request.getFailOnUnknownNodes();\n+\n+    Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n+        validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n+\n+    NodeAttributesManager nodeAttributesManager \u003d\n+        rm.getRMContext().getNodeAttributesManager();\n+    try {\n+      switch (request.getOperation()) {\n+      case ADD:\n+        nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);\n+        break;\n+      case REMOVE:\n+        nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);\n+        break;\n+      case REPLACE:\n+        nodeAttributesManager.replaceNodeAttributes(\n+            NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);\n+        break;\n+      default:\n+        throw new IOException(\"Invalid operation \" + request.getOperation()\n+            + \" specified in the mapAttributesToNodes request \");\n+\n+      }\n+    } catch (IOException ioe) {\n+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n+    }\n+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n+        \"AdminService\");\n     return recordFactory\n         .newRecordInstance(NodesToAttributesMappingResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodesToAttributesMappingResponse mapAttributesToNodes(\n      NodesToAttributesMappingRequest request)\n      throws YarnException, IOException {\n\n    final String operation \u003d \"mapAttributesToNodes\";\n    final String msg \u003d \"Map Attributes to Nodes\";\n    UserGroupInformation user \u003d checkAcls(operation);\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n\n    List\u003cNodeToAttributes\u003e nodesToAttributes \u003d request.getNodesToAttributes();\n    boolean failOnUnknownNodes \u003d request.getFailOnUnknownNodes();\n\n    Map\u003cString, Set\u003cNodeAttribute\u003e\u003e nodeAttributeMapping \u003d\n        validateAndFetch(nodesToAttributes, failOnUnknownNodes);\n\n    NodeAttributesManager nodeAttributesManager \u003d\n        rm.getRMContext().getNodeAttributesManager();\n    try {\n      switch (request.getOperation()) {\n      case ADD:\n        nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);\n        break;\n      case REMOVE:\n        nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);\n        break;\n      case REPLACE:\n        nodeAttributesManager.replaceNodeAttributes(\n            NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);\n        break;\n      default:\n        throw new IOException(\"Invalid operation \" + request.getOperation()\n            + \" specified in the mapAttributesToNodes request \");\n\n      }\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n        \"AdminService\");\n    return recordFactory\n        .newRecordInstance(NodesToAttributesMappingResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "1f42ce907a4987ea095ae0c237b89274c689ed99": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6855. [YARN-3409] CLI Proto Modifications to support Node Attributes. Contributed by Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:30 AM",
      "commitName": "1f42ce907a4987ea095ae0c237b89274c689ed99",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,6 @@\n+  public NodesToAttributesMappingResponse mapAttributesToNodes(\n+      NodesToAttributesMappingRequest request)\n+      throws YarnException, IOException {\n+    return recordFactory\n+        .newRecordInstance(NodesToAttributesMappingResponse.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public NodesToAttributesMappingResponse mapAttributesToNodes(\n      NodesToAttributesMappingRequest request)\n      throws YarnException, IOException {\n    return recordFactory\n        .newRecordInstance(NodesToAttributesMappingResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}