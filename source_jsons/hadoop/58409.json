{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EventDispatcher.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
  "functionStartLine": 58,
  "functionEndLine": 89,
  "numCommitsSeen": 3,
  "timeTaken": 1776,
  "changeHistory": [
    "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
    "341888a0aa23f24458b4e6e34868794b9735c06a"
  ],
  "changeHistoryShort": {
    "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509": "Ybodychange",
    "341888a0aa23f24458b4e6e34868794b9735c06a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7477. Moving logging APIs over to slf4j in hadoop-yarn-common. Contributed by Prabhu Joseph.\n",
      "commitDate": "03/03/19 11:59 PM",
      "commitName": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/04/17 11:44 AM",
      "commitNameOld": "dd43b895c2e50fa97cb7327be77509b87dad1823",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 683.55,
      "commitsBetweenForRepo": 5547,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void run() {\n \n       T event;\n \n       while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n         try {\n           event \u003d eventQueue.take();\n         } catch (InterruptedException e) {\n           LOG.error(\"Returning, interrupted : \" + e);\n           return; // TODO: Kill RM.\n         }\n \n         try {\n           handler.handle(event);\n         } catch (Throwable t) {\n           // An error occurred, but we are shutting down anyway.\n           // If it was an InterruptedException, the very act of\n           // shutdown could have caused it and is probably harmless.\n           if (stopped) {\n             LOG.warn(\"Exception during shutdown: \", t);\n             break;\n           }\n-          LOG.fatal(\"Error in handling event type \" + event.getType()\n+          LOG.error(FATAL, \"Error in handling event type \" + event.getType()\n               + \" to the Event Dispatcher\", t);\n           if (shouldExitOnError\n               \u0026\u0026 !ShutdownHookManager.get().isShutdownInProgress()) {\n             LOG.info(\"Exiting, bbye..\");\n             System.exit(-1);\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n\n      T event;\n\n      while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n        try {\n          event \u003d eventQueue.take();\n        } catch (InterruptedException e) {\n          LOG.error(\"Returning, interrupted : \" + e);\n          return; // TODO: Kill RM.\n        }\n\n        try {\n          handler.handle(event);\n        } catch (Throwable t) {\n          // An error occurred, but we are shutting down anyway.\n          // If it was an InterruptedException, the very act of\n          // shutdown could have caused it and is probably harmless.\n          if (stopped) {\n            LOG.warn(\"Exception during shutdown: \", t);\n            break;\n          }\n          LOG.error(FATAL, \"Error in handling event type \" + event.getType()\n              + \" to the Event Dispatcher\", t);\n          if (shouldExitOnError\n              \u0026\u0026 !ShutdownHookManager.get().isShutdownInProgress()) {\n            LOG.info(\"Exiting, bbye..\");\n            System.exit(-1);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java",
      "extendedDetails": {}
    },
    "341888a0aa23f24458b4e6e34868794b9735c06a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
      "commitDate": "26/04/16 8:12 PM",
      "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,32 @@\n+    public void run() {\n+\n+      T event;\n+\n+      while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n+        try {\n+          event \u003d eventQueue.take();\n+        } catch (InterruptedException e) {\n+          LOG.error(\"Returning, interrupted : \" + e);\n+          return; // TODO: Kill RM.\n+        }\n+\n+        try {\n+          handler.handle(event);\n+        } catch (Throwable t) {\n+          // An error occurred, but we are shutting down anyway.\n+          // If it was an InterruptedException, the very act of\n+          // shutdown could have caused it and is probably harmless.\n+          if (stopped) {\n+            LOG.warn(\"Exception during shutdown: \", t);\n+            break;\n+          }\n+          LOG.fatal(\"Error in handling event type \" + event.getType()\n+              + \" to the Event Dispatcher\", t);\n+          if (shouldExitOnError\n+              \u0026\u0026 !ShutdownHookManager.get().isShutdownInProgress()) {\n+            LOG.info(\"Exiting, bbye..\");\n+            System.exit(-1);\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n\n      T event;\n\n      while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n        try {\n          event \u003d eventQueue.take();\n        } catch (InterruptedException e) {\n          LOG.error(\"Returning, interrupted : \" + e);\n          return; // TODO: Kill RM.\n        }\n\n        try {\n          handler.handle(event);\n        } catch (Throwable t) {\n          // An error occurred, but we are shutting down anyway.\n          // If it was an InterruptedException, the very act of\n          // shutdown could have caused it and is probably harmless.\n          if (stopped) {\n            LOG.warn(\"Exception during shutdown: \", t);\n            break;\n          }\n          LOG.fatal(\"Error in handling event type \" + event.getType()\n              + \" to the Event Dispatcher\", t);\n          if (shouldExitOnError\n              \u0026\u0026 !ShutdownHookManager.get().isShutdownInProgress()) {\n            LOG.info(\"Exiting, bbye..\");\n            System.exit(-1);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/EventDispatcher.java"
    }
  }
}