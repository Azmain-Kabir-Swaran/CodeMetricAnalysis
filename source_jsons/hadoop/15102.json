{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "processSymlinkXml",
  "functionId": "processSymlinkXml___node-Node__inodeBld-INodeSection.INode.Builder",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 827,
  "functionEndLine": 850,
  "numCommitsSeen": 15,
  "timeTaken": 1599,
  "changeHistory": [
    "680716f31e120f4d3ee70b095e4db46c05b891d9",
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9951. Use string constants for XML tags in OfflineImageReconstructor (Lin Yiqun via cmccabe)\n",
      "commitDate": "21/03/16 11:40 AM",
      "commitName": "680716f31e120f4d3ee70b095e4db46c05b891d9",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/03/16 1:41 PM",
      "commitNameOld": "bd49354c6d6387620b0de2219eab1714ec2d64f8",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 10.87,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void processSymlinkXml(Node node,\n                                  INodeSection.INode.Builder inodeBld) throws IOException {\n     inodeBld.setType(INodeSection.INode.Type.SYMLINK);\n     INodeSection.INodeSymlink.Builder bld \u003d\n         INodeSection.INodeSymlink.newBuilder();\n-    String perm \u003d node.removeChildStr(\"permission\");\n+    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n     if (perm !\u003d null) {\n       bld.setPermission(permissionXmlToU64(perm));\n     }\n-    String target \u003d node.removeChildStr(\"target\");\n+    String target \u003d node.removeChildStr(INODE_SECTION_TARGET);\n     if (target !\u003d null) {\n       bld.setTarget(ByteString.copyFrom(target, \"UTF8\"));\n     }\n-    Long lval \u003d node.removeChildLong(\"mtime\");\n+    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n     if (lval !\u003d null) {\n       bld.setModificationTime(lval);\n     }\n-    lval \u003d node.removeChildLong(\"atime\");\n+    lval \u003d node.removeChildLong(INODE_SECTION_ATIME);\n     if (lval !\u003d null) {\n       bld.setAccessTime(lval);\n     }\n     inodeBld.setSymlink(bld);\n     // Will check remaining keys and serialize in processINodeXml\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processSymlinkXml(Node node,\n                                 INodeSection.INode.Builder inodeBld) throws IOException {\n    inodeBld.setType(INodeSection.INode.Type.SYMLINK);\n    INodeSection.INodeSymlink.Builder bld \u003d\n        INodeSection.INodeSymlink.newBuilder();\n    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n    if (perm !\u003d null) {\n      bld.setPermission(permissionXmlToU64(perm));\n    }\n    String target \u003d node.removeChildStr(INODE_SECTION_TARGET);\n    if (target !\u003d null) {\n      bld.setTarget(ByteString.copyFrom(target, \"UTF8\"));\n    }\n    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n    if (lval !\u003d null) {\n      bld.setModificationTime(lval);\n    }\n    lval \u003d node.removeChildLong(INODE_SECTION_ATIME);\n    if (lval !\u003d null) {\n      bld.setAccessTime(lval);\n    }\n    inodeBld.setSymlink(bld);\n    // Will check remaining keys and serialize in processINodeXml\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,24 @@\n+  private void processSymlinkXml(Node node,\n+                                 INodeSection.INode.Builder inodeBld) throws IOException {\n+    inodeBld.setType(INodeSection.INode.Type.SYMLINK);\n+    INodeSection.INodeSymlink.Builder bld \u003d\n+        INodeSection.INodeSymlink.newBuilder();\n+    String perm \u003d node.removeChildStr(\"permission\");\n+    if (perm !\u003d null) {\n+      bld.setPermission(permissionXmlToU64(perm));\n+    }\n+    String target \u003d node.removeChildStr(\"target\");\n+    if (target !\u003d null) {\n+      bld.setTarget(ByteString.copyFrom(target, \"UTF8\"));\n+    }\n+    Long lval \u003d node.removeChildLong(\"mtime\");\n+    if (lval !\u003d null) {\n+      bld.setModificationTime(lval);\n+    }\n+    lval \u003d node.removeChildLong(\"atime\");\n+    if (lval !\u003d null) {\n+      bld.setAccessTime(lval);\n+    }\n+    inodeBld.setSymlink(bld);\n+    // Will check remaining keys and serialize in processINodeXml\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processSymlinkXml(Node node,\n                                 INodeSection.INode.Builder inodeBld) throws IOException {\n    inodeBld.setType(INodeSection.INode.Type.SYMLINK);\n    INodeSection.INodeSymlink.Builder bld \u003d\n        INodeSection.INodeSymlink.newBuilder();\n    String perm \u003d node.removeChildStr(\"permission\");\n    if (perm !\u003d null) {\n      bld.setPermission(permissionXmlToU64(perm));\n    }\n    String target \u003d node.removeChildStr(\"target\");\n    if (target !\u003d null) {\n      bld.setTarget(ByteString.copyFrom(target, \"UTF8\"));\n    }\n    Long lval \u003d node.removeChildLong(\"mtime\");\n    if (lval !\u003d null) {\n      bld.setModificationTime(lval);\n    }\n    lval \u003d node.removeChildLong(\"atime\");\n    if (lval !\u003d null) {\n      bld.setAccessTime(lval);\n    }\n    inodeBld.setSymlink(bld);\n    // Will check remaining keys and serialize in processINodeXml\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}