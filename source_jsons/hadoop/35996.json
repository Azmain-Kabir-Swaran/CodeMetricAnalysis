{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "checkAcls",
  "functionId": "checkAcls___method-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 232,
  "functionEndLine": 238,
  "numCommitsSeen": 90,
  "timeTaken": 8997,
  "changeHistory": [
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "03510d00f48137fe4273c3e694e87fc0e660a706",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cdfabf5ae289836968b3d296668593b9500b6f26",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ybodychange",
    "03510d00f48137fe4273c3e694e87fc0e660a706": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cdfabf5ae289836968b3d296668593b9500b6f26": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/10/13 2:03 PM",
      "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 34.05,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   private UserGroupInformation checkAcls(String method) throws YarnException {\n     try {\n-      return RMServerUtils.verifyAccess(adminAcl, method, LOG);\n+      return checkAccess(method);\n     } catch (IOException ioe) {\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation checkAcls(String method) throws YarnException {\n    try {\n      return checkAccess(method);\n    } catch (IOException ioe) {\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "03510d00f48137fe4273c3e694e87fc0e660a706": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1068. Add admin support for HA operations (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/13 2:03 PM",
      "commitName": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "25/06/13 10:57 PM",
      "commitNameOld": "f3a893b696cdcff89ea4640c9dd21cbde094104d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 125.63,
      "commitsBetweenForRepo": 770,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,7 @@\n   private UserGroupInformation checkAcls(String method) throws YarnException {\n-    UserGroupInformation user;\n     try {\n-      user \u003d UserGroupInformation.getCurrentUser();\n+      return RMServerUtils.verifyAccess(adminAcl, method, LOG);\n     } catch (IOException ioe) {\n-      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n-\n-      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n-          adminAcl.toString(), \"AdminService\",\n-          \"Couldn\u0027t get current user\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n-\n-    if (!adminAcl.isUserAllowed(user)) {\n-      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n-      \" to call \u0027\" + method + \"\u0027\");\n-\n-      RMAuditLogger.logFailure(user.getShortUserName(), method,\n-          adminAcl.toString(), \"AdminService\",\n-          AuditConstants.UNAUTHORIZED_USER);\n-\n-      throw RPCUtil.getRemoteException(\n-          new AccessControlException(\"User \" + user.getShortUserName() + \n-              \" doesn\u0027t have permission\" +\n-              \" to call \u0027\" + method + \"\u0027\")\n-          );\n-    }\n-    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n-        user.getShortUserName());\n-      \n-    return user;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation checkAcls(String method) throws YarnException {\n    try {\n      return RMServerUtils.verifyAccess(adminAcl, method, LOG);\n    } catch (IOException ioe) {\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/10/12 2:21 PM",
      "commitNameOld": "494e21052156a7c5abedbbee824578837ad8cc11",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 238.28,
      "commitsBetweenForRepo": 1343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n-  private UserGroupInformation checkAcls(String method) throws YarnRemoteException {\n+  private UserGroupInformation checkAcls(String method) throws YarnException {\n     UserGroupInformation user;\n     try {\n       user \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException ioe) {\n       LOG.warn(\"Couldn\u0027t get current user\", ioe);\n \n       RMAuditLogger.logFailure(\"UNKNOWN\", method,\n           adminAcl.toString(), \"AdminService\",\n           \"Couldn\u0027t get current user\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n \n     if (!adminAcl.isUserAllowed(user)) {\n       LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n       \" to call \u0027\" + method + \"\u0027\");\n \n       RMAuditLogger.logFailure(user.getShortUserName(), method,\n           adminAcl.toString(), \"AdminService\",\n           AuditConstants.UNAUTHORIZED_USER);\n \n       throw RPCUtil.getRemoteException(\n           new AccessControlException(\"User \" + user.getShortUserName() + \n               \" doesn\u0027t have permission\" +\n               \" to call \u0027\" + method + \"\u0027\")\n           );\n     }\n     LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n         user.getShortUserName());\n       \n     return user;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation checkAcls(String method) throws YarnException {\n    UserGroupInformation user;\n    try {\n      user \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n\n      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n          adminAcl.toString(), \"AdminService\",\n          \"Couldn\u0027t get current user\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    if (!adminAcl.isUserAllowed(user)) {\n      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n      \" to call \u0027\" + method + \"\u0027\");\n\n      RMAuditLogger.logFailure(user.getShortUserName(), method,\n          adminAcl.toString(), \"AdminService\",\n          AuditConstants.UNAUTHORIZED_USER);\n\n      throw RPCUtil.getRemoteException(\n          new AccessControlException(\"User \" + user.getShortUserName() + \n              \" doesn\u0027t have permission\" +\n              \" to call \u0027\" + method + \"\u0027\")\n          );\n    }\n    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n        user.getShortUserName());\n      \n    return user;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnException]"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private UserGroupInformation checkAcls(String method) throws YarnRemoteException {\n    UserGroupInformation user;\n    try {\n      user \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n\n      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n          adminAcl.toString(), \"AdminService\",\n          \"Couldn\u0027t get current user\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    if (!adminAcl.isUserAllowed(user)) {\n      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n      \" to call \u0027\" + method + \"\u0027\");\n\n      RMAuditLogger.logFailure(user.getShortUserName(), method,\n          adminAcl.toString(), \"AdminService\",\n          AuditConstants.UNAUTHORIZED_USER);\n\n      throw RPCUtil.getRemoteException(\n          new AccessControlException(\"User \" + user.getShortUserName() + \n              \" doesn\u0027t have permission\" +\n              \" to call \u0027\" + method + \"\u0027\")\n          );\n    }\n    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n        user.getShortUserName());\n      \n    return user;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "cdfabf5ae289836968b3d296668593b9500b6f26": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-2655. Add audit logs to ResourceManager and NodeManager. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165949 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/11 6:24 PM",
      "commitName": "cdfabf5ae289836968b3d296668593b9500b6f26",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-2655. Add audit logs to ResourceManager and NodeManager. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165949 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/09/11 6:24 PM",
          "commitName": "cdfabf5ae289836968b3d296668593b9500b6f26",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 13.05,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,32 @@\n-  private void checkAcls(String method) throws YarnRemoteException {\n+  private UserGroupInformation checkAcls(String method) throws YarnRemoteException {\n+    UserGroupInformation user;\n     try {\n-      UserGroupInformation user \u003d UserGroupInformation.getCurrentUser();\n-      if (!adminAcl.isUserAllowed(user)) {\n-        LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n-        \" to call \u0027\" + method + \"\u0027\");\n-\n-        throw RPCUtil.getRemoteException(\n-            new AccessControlException(\"User \" + user.getShortUserName() + \n-                \" doesn\u0027t have permission\" +\n-                \" to call \u0027\" + method + \"\u0027\")\n-            );\n-      }\n-      \n-      LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n-          user.getShortUserName());\n-      \n+      user \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException ioe) {\n       LOG.warn(\"Couldn\u0027t get current user\", ioe);\n+\n+      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n+          adminAcl.toString(), \"AdminService\",\n+          \"Couldn\u0027t get current user\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n+\n+    if (!adminAcl.isUserAllowed(user)) {\n+      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n+      \" to call \u0027\" + method + \"\u0027\");\n+\n+      RMAuditLogger.logFailure(user.getShortUserName(), method,\n+          adminAcl.toString(), \"AdminService\",\n+          AuditConstants.UNAUTHORIZED_USER);\n+\n+      throw RPCUtil.getRemoteException(\n+          new AccessControlException(\"User \" + user.getShortUserName() + \n+              \" doesn\u0027t have permission\" +\n+              \" to call \u0027\" + method + \"\u0027\")\n+          );\n+    }\n+    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n+        user.getShortUserName());\n+      \n+    return user;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private UserGroupInformation checkAcls(String method) throws YarnRemoteException {\n    UserGroupInformation user;\n    try {\n      user \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n\n      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n          adminAcl.toString(), \"AdminService\",\n          \"Couldn\u0027t get current user\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    if (!adminAcl.isUserAllowed(user)) {\n      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n      \" to call \u0027\" + method + \"\u0027\");\n\n      RMAuditLogger.logFailure(user.getShortUserName(), method,\n          adminAcl.toString(), \"AdminService\",\n          AuditConstants.UNAUTHORIZED_USER);\n\n      throw RPCUtil.getRemoteException(\n          new AccessControlException(\"User \" + user.getShortUserName() + \n              \" doesn\u0027t have permission\" +\n              \" to call \u0027\" + method + \"\u0027\")\n          );\n    }\n    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n        user.getShortUserName());\n      \n    return user;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "UserGroupInformation"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2655. Add audit logs to ResourceManager and NodeManager. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165949 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/09/11 6:24 PM",
          "commitName": "cdfabf5ae289836968b3d296668593b9500b6f26",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 13.05,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,32 @@\n-  private void checkAcls(String method) throws YarnRemoteException {\n+  private UserGroupInformation checkAcls(String method) throws YarnRemoteException {\n+    UserGroupInformation user;\n     try {\n-      UserGroupInformation user \u003d UserGroupInformation.getCurrentUser();\n-      if (!adminAcl.isUserAllowed(user)) {\n-        LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n-        \" to call \u0027\" + method + \"\u0027\");\n-\n-        throw RPCUtil.getRemoteException(\n-            new AccessControlException(\"User \" + user.getShortUserName() + \n-                \" doesn\u0027t have permission\" +\n-                \" to call \u0027\" + method + \"\u0027\")\n-            );\n-      }\n-      \n-      LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n-          user.getShortUserName());\n-      \n+      user \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException ioe) {\n       LOG.warn(\"Couldn\u0027t get current user\", ioe);\n+\n+      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n+          adminAcl.toString(), \"AdminService\",\n+          \"Couldn\u0027t get current user\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n+\n+    if (!adminAcl.isUserAllowed(user)) {\n+      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n+      \" to call \u0027\" + method + \"\u0027\");\n+\n+      RMAuditLogger.logFailure(user.getShortUserName(), method,\n+          adminAcl.toString(), \"AdminService\",\n+          AuditConstants.UNAUTHORIZED_USER);\n+\n+      throw RPCUtil.getRemoteException(\n+          new AccessControlException(\"User \" + user.getShortUserName() + \n+              \" doesn\u0027t have permission\" +\n+              \" to call \u0027\" + method + \"\u0027\")\n+          );\n+    }\n+    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n+        user.getShortUserName());\n+      \n+    return user;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private UserGroupInformation checkAcls(String method) throws YarnRemoteException {\n    UserGroupInformation user;\n    try {\n      user \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n\n      RMAuditLogger.logFailure(\"UNKNOWN\", method,\n          adminAcl.toString(), \"AdminService\",\n          \"Couldn\u0027t get current user\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    if (!adminAcl.isUserAllowed(user)) {\n      LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n      \" to call \u0027\" + method + \"\u0027\");\n\n      RMAuditLogger.logFailure(user.getShortUserName(), method,\n          adminAcl.toString(), \"AdminService\",\n          AuditConstants.UNAUTHORIZED_USER);\n\n      throw RPCUtil.getRemoteException(\n          new AccessControlException(\"User \" + user.getShortUserName() + \n              \" doesn\u0027t have permission\" +\n              \" to call \u0027\" + method + \"\u0027\")\n          );\n    }\n    LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n        user.getShortUserName());\n      \n    return user;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void checkAcls(String method) throws YarnRemoteException {\n    try {\n      UserGroupInformation user \u003d UserGroupInformation.getCurrentUser();\n      if (!adminAcl.isUserAllowed(user)) {\n        LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n        \" to call \u0027\" + method + \"\u0027\");\n\n        throw RPCUtil.getRemoteException(\n            new AccessControlException(\"User \" + user.getShortUserName() + \n                \" doesn\u0027t have permission\" +\n                \" to call \u0027\" + method + \"\u0027\")\n            );\n      }\n      \n      LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n          user.getShortUserName());\n      \n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  private void checkAcls(String method) throws YarnRemoteException {\n+    try {\n+      UserGroupInformation user \u003d UserGroupInformation.getCurrentUser();\n+      if (!adminAcl.isUserAllowed(user)) {\n+        LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n+        \" to call \u0027\" + method + \"\u0027\");\n+\n+        throw RPCUtil.getRemoteException(\n+            new AccessControlException(\"User \" + user.getShortUserName() + \n+                \" doesn\u0027t have permission\" +\n+                \" to call \u0027\" + method + \"\u0027\")\n+            );\n+      }\n+      \n+      LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n+          user.getShortUserName());\n+      \n+    } catch (IOException ioe) {\n+      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n+      throw RPCUtil.getRemoteException(ioe);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkAcls(String method) throws YarnRemoteException {\n    try {\n      UserGroupInformation user \u003d UserGroupInformation.getCurrentUser();\n      if (!adminAcl.isUserAllowed(user)) {\n        LOG.warn(\"User \" + user.getShortUserName() + \" doesn\u0027t have permission\" +\n        \" to call \u0027\" + method + \"\u0027\");\n\n        throw RPCUtil.getRemoteException(\n            new AccessControlException(\"User \" + user.getShortUserName() + \n                \" doesn\u0027t have permission\" +\n                \" to call \u0027\" + method + \"\u0027\")\n            );\n      }\n      \n      LOG.info(\"RM Admin: \" + method + \" invoked by user \" + \n          user.getShortUserName());\n      \n    } catch (IOException ioe) {\n      LOG.warn(\"Couldn\u0027t get current user\", ioe);\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}