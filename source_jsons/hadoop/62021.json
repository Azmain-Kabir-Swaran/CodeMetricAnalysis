{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAUtil.java",
  "functionName": "verifyAndSetConfValue",
  "functionId": "verifyAndSetConfValue___prefix-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
  "functionStartLine": 188,
  "functionEndLine": 210,
  "numCommitsSeen": 19,
  "timeTaken": 851,
  "changeHistory": [
    "116b459d2299f933ae028fbcb6d71d338d4d3e94"
  ],
  "changeHistoryShort": {
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1305. RMHAProtocolService#serviceInit should handle HAUtil\u0027s IllegalArgumentException (Tsuyoshi Ozawa via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/10/13 6:10 PM",
      "commitName": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,23 @@\n+  private static void verifyAndSetConfValue(String prefix, Configuration conf) {\n+    String confKey \u003d null;\n+    String confValue \u003d null;\n+    try {\n+      confKey \u003d getConfKeyForRMInstance(prefix, conf);\n+      confValue \u003d getConfValueForRMInstance(prefix, conf);\n+      conf.set(prefix, confValue);\n+    } catch (YarnRuntimeException yre) {\n+      // Error at getRMHAId()\n+      throw yre;\n+    } catch (IllegalArgumentException iae) {\n+      String errmsg;\n+      if (confKey \u003d\u003d null) {\n+        // Error at addSuffix\n+        errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n+          getRMHAId(conf));\n+      } else {\n+        // Error at Configuration#set.\n+        errmsg \u003d getNeedToSetValueMessage(confKey);\n+      }\n+      throwBadConfigurationException(errmsg);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetConfValue(String prefix, Configuration conf) {\n    String confKey \u003d null;\n    String confValue \u003d null;\n    try {\n      confKey \u003d getConfKeyForRMInstance(prefix, conf);\n      confValue \u003d getConfValueForRMInstance(prefix, conf);\n      conf.set(prefix, confValue);\n    } catch (YarnRuntimeException yre) {\n      // Error at getRMHAId()\n      throw yre;\n    } catch (IllegalArgumentException iae) {\n      String errmsg;\n      if (confKey \u003d\u003d null) {\n        // Error at addSuffix\n        errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID,\n          getRMHAId(conf));\n      } else {\n        // Error at Configuration#set.\n        errmsg \u003d getNeedToSetValueMessage(confKey);\n      }\n      throwBadConfigurationException(errmsg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java"
    }
  }
}