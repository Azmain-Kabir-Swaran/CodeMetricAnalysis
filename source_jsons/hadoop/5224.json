{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirWriteFileOp.java",
  "functionName": "getClientNode",
  "functionId": "getClientNode___bm-BlockManager__clientMachine-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
  "functionStartLine": 303,
  "functionEndLine": 316,
  "numCommitsSeen": 614,
  "timeTaken": 11047,
  "changeHistory": [
    "e5afac5896a1a88e152746598527d91f73cbb724",
    "ed841dd9a96e54cb84d9cae5507e47ff1c8cdf6e"
  ],
  "changeHistoryShort": {
    "e5afac5896a1a88e152746598527d91f73cbb724": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "ed841dd9a96e54cb84d9cae5507e47ff1c8cdf6e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5afac5896a1a88e152746598527d91f73cbb724": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
      "commitDate": "15/05/15 7:09 PM",
      "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private Node getClientNode(String clientMachine) {\n-    List\u003cString\u003e hosts \u003d new ArrayList\u003cString\u003e(1);\n+  static Node getClientNode(BlockManager bm, String clientMachine) {\n+    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n     hosts.add(clientMachine);\n-    List\u003cString\u003e rName \u003d getBlockManager().getDatanodeManager()\n+    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n         .resolveNetworkLocation(hosts);\n     Node clientNode \u003d null;\n     if (rName !\u003d null) {\n       // Able to resolve clientMachine mapping.\n       // Create a temp node to findout the rack local nodes\n       clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n           + clientMachine);\n     }\n     return clientNode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Node getClientNode(BlockManager bm, String clientMachine) {\n    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n    hosts.add(clientMachine);\n    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n        .resolveNetworkLocation(hosts);\n    Node clientNode \u003d null;\n    if (rName !\u003d null) {\n      // Able to resolve clientMachine mapping.\n      // Create a temp node to findout the rack local nodes\n      clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n          + clientMachine);\n    }\n    return clientNode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
            "oldMethodName": "getClientNode",
            "newMethodName": "getClientNode"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private Node getClientNode(String clientMachine) {\n-    List\u003cString\u003e hosts \u003d new ArrayList\u003cString\u003e(1);\n+  static Node getClientNode(BlockManager bm, String clientMachine) {\n+    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n     hosts.add(clientMachine);\n-    List\u003cString\u003e rName \u003d getBlockManager().getDatanodeManager()\n+    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n         .resolveNetworkLocation(hosts);\n     Node clientNode \u003d null;\n     if (rName !\u003d null) {\n       // Able to resolve clientMachine mapping.\n       // Create a temp node to findout the rack local nodes\n       clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n           + clientMachine);\n     }\n     return clientNode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Node getClientNode(BlockManager bm, String clientMachine) {\n    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n    hosts.add(clientMachine);\n    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n        .resolveNetworkLocation(hosts);\n    Node clientNode \u003d null;\n    if (rName !\u003d null) {\n      // Able to resolve clientMachine mapping.\n      // Create a temp node to findout the rack local nodes\n      clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n          + clientMachine);\n    }\n    return clientNode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private Node getClientNode(String clientMachine) {\n-    List\u003cString\u003e hosts \u003d new ArrayList\u003cString\u003e(1);\n+  static Node getClientNode(BlockManager bm, String clientMachine) {\n+    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n     hosts.add(clientMachine);\n-    List\u003cString\u003e rName \u003d getBlockManager().getDatanodeManager()\n+    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n         .resolveNetworkLocation(hosts);\n     Node clientNode \u003d null;\n     if (rName !\u003d null) {\n       // Able to resolve clientMachine mapping.\n       // Create a temp node to findout the rack local nodes\n       clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n           + clientMachine);\n     }\n     return clientNode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Node getClientNode(BlockManager bm, String clientMachine) {\n    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n    hosts.add(clientMachine);\n    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n        .resolveNetworkLocation(hosts);\n    Node clientNode \u003d null;\n    if (rName !\u003d null) {\n      // Able to resolve clientMachine mapping.\n      // Create a temp node to findout the rack local nodes\n      clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n          + clientMachine);\n    }\n    return clientNode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
          "commitDate": "15/05/15 7:09 PM",
          "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/05/15 4:14 PM",
          "commitNameOld": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private Node getClientNode(String clientMachine) {\n-    List\u003cString\u003e hosts \u003d new ArrayList\u003cString\u003e(1);\n+  static Node getClientNode(BlockManager bm, String clientMachine) {\n+    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n     hosts.add(clientMachine);\n-    List\u003cString\u003e rName \u003d getBlockManager().getDatanodeManager()\n+    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n         .resolveNetworkLocation(hosts);\n     Node clientNode \u003d null;\n     if (rName !\u003d null) {\n       // Able to resolve clientMachine mapping.\n       // Create a temp node to findout the rack local nodes\n       clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n           + clientMachine);\n     }\n     return clientNode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Node getClientNode(BlockManager bm, String clientMachine) {\n    List\u003cString\u003e hosts \u003d new ArrayList\u003c\u003e(1);\n    hosts.add(clientMachine);\n    List\u003cString\u003e rName \u003d bm.getDatanodeManager()\n        .resolveNetworkLocation(hosts);\n    Node clientNode \u003d null;\n    if (rName !\u003d null) {\n      // Able to resolve clientMachine mapping.\n      // Create a temp node to findout the rack local nodes\n      clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n          + clientMachine);\n    }\n    return clientNode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirWriteFileOp.java",
          "extendedDetails": {
            "oldValue": "[clientMachine-String]",
            "newValue": "[bm-BlockManager, clientMachine-String]"
          }
        }
      ]
    },
    "ed841dd9a96e54cb84d9cae5507e47ff1c8cdf6e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6995. Block should be placed in the client\u0027s \u0027rack-local\u0027 node if \u0027client-local\u0027 node is not available (vinayakumarb)\n",
      "commitDate": "06/10/14 2:01 AM",
      "commitName": "ed841dd9a96e54cb84d9cae5507e47ff1c8cdf6e",
      "commitAuthor": "Vinayakumar B",
      "diff": "@@ -0,0 +1,14 @@\n+  private Node getClientNode(String clientMachine) {\n+    List\u003cString\u003e hosts \u003d new ArrayList\u003cString\u003e(1);\n+    hosts.add(clientMachine);\n+    List\u003cString\u003e rName \u003d getBlockManager().getDatanodeManager()\n+        .resolveNetworkLocation(hosts);\n+    Node clientNode \u003d null;\n+    if (rName !\u003d null) {\n+      // Able to resolve clientMachine mapping.\n+      // Create a temp node to findout the rack local nodes\n+      clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n+          + clientMachine);\n+    }\n+    return clientNode;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Node getClientNode(String clientMachine) {\n    List\u003cString\u003e hosts \u003d new ArrayList\u003cString\u003e(1);\n    hosts.add(clientMachine);\n    List\u003cString\u003e rName \u003d getBlockManager().getDatanodeManager()\n        .resolveNetworkLocation(hosts);\n    Node clientNode \u003d null;\n    if (rName !\u003d null) {\n      // Able to resolve clientMachine mapping.\n      // Create a temp node to findout the rack local nodes\n      clientNode \u003d new NodeBase(rName.get(0) + NodeBase.PATH_SEPARATOR_STR\n          + clientMachine);\n    }\n    return clientNode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}