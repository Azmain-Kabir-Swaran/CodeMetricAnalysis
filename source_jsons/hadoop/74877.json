{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenAuthenticationFilter.java",
  "functionName": "setAuthHandlerClass",
  "functionId": "setAuthHandlerClass___props-Properties",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java",
  "functionStartLine": 129,
  "functionEndLine": 146,
  "numCommitsSeen": 15,
  "timeTaken": 1051,
  "changeHistory": [
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
    "49f5d20efe7af7cd7c45d93edad33997a695a746"
  ],
  "changeHistoryShort": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": "Ybodychange",
    "49f5d20efe7af7cd7c45d93edad33997a695a746": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12082 Support multiple authentication schemes via AuthenticationFilter\n",
      "commitDate": "18/10/16 6:32 PM",
      "commitName": "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
      "commitAuthor": "Benoy Antony",
      "commitDateOld": "22/08/16 6:09 PM",
      "commitNameOld": "4070caad70db49b50554088d29ac2fbc7ba62a0a",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 57.02,
      "commitsBetweenForRepo": 374,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   protected void setAuthHandlerClass(Properties props)\n       throws ServletException {\n     String authType \u003d props.getProperty(AUTH_TYPE);\n     if (authType \u003d\u003d null) {\n       throw new ServletException(\"Config property \"\n           + AUTH_TYPE + \" doesn\u0027t exist\");\n     }\n     if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           PseudoDelegationTokenAuthenticationHandler.class.getName());\n     } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           KerberosDelegationTokenAuthenticationHandler.class.getName());\n+    } else if (authType.equals(MultiSchemeAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          MultiSchemeDelegationTokenAuthenticationHandler.class.getName());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setAuthHandlerClass(Properties props)\n      throws ServletException {\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType \u003d\u003d null) {\n      throw new ServletException(\"Config property \"\n          + AUTH_TYPE + \" doesn\u0027t exist\");\n    }\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(MultiSchemeAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          MultiSchemeDelegationTokenAuthenticationHandler.class.getName());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "49f5d20efe7af7cd7c45d93edad33997a695a746": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12103. Small refactoring of DelegationTokenAuthenticationFilter to allow code sharing. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/06/15 2:06 PM",
      "commitName": "49f5d20efe7af7cd7c45d93edad33997a695a746",
      "commitAuthor": "Yongjun Zhang",
      "diff": "@@ -0,0 +1,15 @@\n+  protected void setAuthHandlerClass(Properties props)\n+      throws ServletException {\n+    String authType \u003d props.getProperty(AUTH_TYPE);\n+    if (authType \u003d\u003d null) {\n+      throw new ServletException(\"Config property \"\n+          + AUTH_TYPE + \" doesn\u0027t exist\");\n+    }\n+    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          PseudoDelegationTokenAuthenticationHandler.class.getName());\n+    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          KerberosDelegationTokenAuthenticationHandler.class.getName());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setAuthHandlerClass(Properties props)\n      throws ServletException {\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType \u003d\u003d null) {\n      throw new ServletException(\"Config property \"\n          + AUTH_TYPE + \" doesn\u0027t exist\");\n    }\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java"
    }
  }
}