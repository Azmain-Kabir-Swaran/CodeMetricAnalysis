{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMTokenSecretManager.java",
  "functionName": "addPersistedPassword",
  "functionId": "addPersistedPassword___token-Token__AMRMTokenIdentifier__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java",
  "functionStartLine": 223,
  "functionEndLine": 233,
  "numCommitsSeen": 9,
  "timeTaken": 1618,
  "changeHistory": [
    "f1b831ccfbec37712522bef7a44f51bff0369003",
    "f4951e07087c99ab6d57ff5efdd962432ac641ab"
  ],
  "changeHistoryShort": {
    "f1b831ccfbec37712522bef7a44f51bff0369003": "Ymultichange(Ymodifierchange,Ybodychange)",
    "f4951e07087c99ab6d57ff5efdd962432ac641ab": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f1b831ccfbec37712522bef7a44f51bff0369003": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-2208. AMRMTokenManager need to have a way to roll over AMRMToken. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611820 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 2:46 PM",
      "commitName": "f1b831ccfbec37712522bef7a44f51bff0369003",
      "commitAuthor": "Xuan Gong",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2208. AMRMTokenManager need to have a way to roll over AMRMToken. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611820 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/07/14 2:46 PM",
          "commitName": "f1b831ccfbec37712522bef7a44f51bff0369003",
          "commitAuthor": "Xuan Gong",
          "commitDateOld": "13/09/13 4:51 PM",
          "commitNameOld": "f4951e07087c99ab6d57ff5efdd962432ac641ab",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 307.91,
          "commitsBetweenForRepo": 2082,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,11 @@\n-      addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token) throws IOException {\n-    AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n-    if (LOG.isDebugEnabled()) {\n+  public void addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token)\n+      throws IOException {\n+    this.writeLock.lock();\n+    try {\n+      AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n       LOG.debug(\"Adding password for \" + identifier.getApplicationAttemptId());\n+      appAttemptSet.add(identifier.getApplicationAttemptId());\n+    } finally {\n+      this.writeLock.unlock();\n     }\n-    this.passwords.put(identifier.getApplicationAttemptId(),\n-      token.getPassword());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token)\n      throws IOException {\n    this.writeLock.lock();\n    try {\n      AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n      LOG.debug(\"Adding password for \" + identifier.getApplicationAttemptId());\n      appAttemptSet.add(identifier.getApplicationAttemptId());\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2208. AMRMTokenManager need to have a way to roll over AMRMToken. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611820 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/07/14 2:46 PM",
          "commitName": "f1b831ccfbec37712522bef7a44f51bff0369003",
          "commitAuthor": "Xuan Gong",
          "commitDateOld": "13/09/13 4:51 PM",
          "commitNameOld": "f4951e07087c99ab6d57ff5efdd962432ac641ab",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 307.91,
          "commitsBetweenForRepo": 2082,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,11 @@\n-      addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token) throws IOException {\n-    AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n-    if (LOG.isDebugEnabled()) {\n+  public void addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token)\n+      throws IOException {\n+    this.writeLock.lock();\n+    try {\n+      AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n       LOG.debug(\"Adding password for \" + identifier.getApplicationAttemptId());\n+      appAttemptSet.add(identifier.getApplicationAttemptId());\n+    } finally {\n+      this.writeLock.unlock();\n     }\n-    this.passwords.put(identifier.getApplicationAttemptId(),\n-      token.getPassword());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token)\n      throws IOException {\n    this.writeLock.lock();\n    try {\n      AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n      LOG.debug(\"Adding password for \" + identifier.getApplicationAttemptId());\n      appAttemptSet.add(identifier.getApplicationAttemptId());\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "f4951e07087c99ab6d57ff5efdd962432ac641ab": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1116. Populate AMRMTokens back to AMRMTokenSecretManager after RM restarts (Jian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1523146 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/09/13 4:51 PM",
      "commitName": "f4951e07087c99ab6d57ff5efdd962432ac641ab",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,8 @@\n+      addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token) throws IOException {\n+    AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Adding password for \" + identifier.getApplicationAttemptId());\n+    }\n+    this.passwords.put(identifier.getApplicationAttemptId(),\n+      token.getPassword());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      addPersistedPassword(Token\u003cAMRMTokenIdentifier\u003e token) throws IOException {\n    AMRMTokenIdentifier identifier \u003d token.decodeIdentifier();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Adding password for \" + identifier.getApplicationAttemptId());\n    }\n    this.passwords.put(identifier.getApplicationAttemptId(),\n      token.getPassword());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java"
    }
  }
}