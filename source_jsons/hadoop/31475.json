{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineSchemaCreator.java",
  "functionName": "parseArgs",
  "functionId": "parseArgs___args-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineSchemaCreator.java",
  "functionStartLine": 162,
  "functionEndLine": 236,
  "numCommitsSeen": 2,
  "timeTaken": 475,
  "changeHistory": [
    "713ded6b15dc0b5e4205a7812a62225377e0b32b"
  ],
  "changeHistoryShort": {
    "713ded6b15dc0b5e4205a7812a62225377e0b32b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "713ded6b15dc0b5e4205a7812a62225377e0b32b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9150 Making TimelineSchemaCreator support different backends for Timeline Schema Creation in ATSv2. Contributed by Sushil Ks\n",
      "commitDate": "15/01/19 9:28 PM",
      "commitName": "713ded6b15dc0b5e4205a7812a62225377e0b32b",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,75 @@\n+  private static CommandLine parseArgs(String[] args) throws ParseException {\n+    Options options \u003d new Options();\n+\n+    // Input\n+    Option o \u003d new Option(HELP_SHORT, \"help\", false, \"print help information\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(CREATE_TABLES_SHORT, \"create\", false,\n+        \"a mandatory option to create hbase tables\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(ENTITY_TABLE_NAME_SHORT, \"entityTableName\", true,\n+        \"entity table name\");\n+    o.setArgName(\"entityTableName\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(ENTITY_METRICS_TTL_OPTION_SHORT, \"entityMetricsTTL\", true,\n+        \"TTL for metrics column family\");\n+    o.setArgName(\"entityMetricsTTL\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(APP_TO_FLOW_TABLE_NAME_SHORT, \"appToflowTableName\", true,\n+        \"app to flow table name\");\n+    o.setArgName(\"appToflowTableName\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(APP_TABLE_NAME_SHORT, \"applicationTableName\", true,\n+        \"application table name\");\n+    o.setArgName(\"applicationTableName\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(APP_METRICS_TTL_OPTION_SHORT, \"applicationMetricsTTL\", true,\n+        \"TTL for metrics column family\");\n+    o.setArgName(\"applicationMetricsTTL\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(SUB_APP_TABLE_NAME_SHORT, \"subApplicationTableName\", true,\n+        \"subApplication table name\");\n+    o.setArgName(\"subApplicationTableName\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    o \u003d new Option(SUB_APP_METRICS_TTL_OPTION_SHORT, \"subApplicationMetricsTTL\",\n+        true, \"TTL for metrics column family\");\n+    o.setArgName(\"subApplicationMetricsTTL\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    // Options without an argument\n+    // No need to set arg name since we do not need an argument here\n+    o \u003d new Option(SKIP_EXISTING_TABLE_OPTION_SHORT, \"skipExistingTable\",\n+        false, \"skip existing Hbase tables and continue to create new tables\");\n+    o.setRequired(false);\n+    options.addOption(o);\n+\n+    CommandLineParser parser \u003d new PosixParser();\n+    CommandLine commandLine \u003d null;\n+    try {\n+      commandLine \u003d parser.parse(options, args);\n+    } catch (Exception e) {\n+      LOG.error(\"ERROR: \" + e.getMessage() + \"\\n\");\n+      HelpFormatter formatter \u003d new HelpFormatter();\n+      formatter.printHelp(NAME + \" \", options, true);\n+      System.exit(-1);\n+    }\n+\n+    return commandLine;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static CommandLine parseArgs(String[] args) throws ParseException {\n    Options options \u003d new Options();\n\n    // Input\n    Option o \u003d new Option(HELP_SHORT, \"help\", false, \"print help information\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(CREATE_TABLES_SHORT, \"create\", false,\n        \"a mandatory option to create hbase tables\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(ENTITY_TABLE_NAME_SHORT, \"entityTableName\", true,\n        \"entity table name\");\n    o.setArgName(\"entityTableName\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(ENTITY_METRICS_TTL_OPTION_SHORT, \"entityMetricsTTL\", true,\n        \"TTL for metrics column family\");\n    o.setArgName(\"entityMetricsTTL\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(APP_TO_FLOW_TABLE_NAME_SHORT, \"appToflowTableName\", true,\n        \"app to flow table name\");\n    o.setArgName(\"appToflowTableName\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(APP_TABLE_NAME_SHORT, \"applicationTableName\", true,\n        \"application table name\");\n    o.setArgName(\"applicationTableName\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(APP_METRICS_TTL_OPTION_SHORT, \"applicationMetricsTTL\", true,\n        \"TTL for metrics column family\");\n    o.setArgName(\"applicationMetricsTTL\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(SUB_APP_TABLE_NAME_SHORT, \"subApplicationTableName\", true,\n        \"subApplication table name\");\n    o.setArgName(\"subApplicationTableName\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    o \u003d new Option(SUB_APP_METRICS_TTL_OPTION_SHORT, \"subApplicationMetricsTTL\",\n        true, \"TTL for metrics column family\");\n    o.setArgName(\"subApplicationMetricsTTL\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    // Options without an argument\n    // No need to set arg name since we do not need an argument here\n    o \u003d new Option(SKIP_EXISTING_TABLE_OPTION_SHORT, \"skipExistingTable\",\n        false, \"skip existing Hbase tables and continue to create new tables\");\n    o.setRequired(false);\n    options.addOption(o);\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine commandLine \u003d null;\n    try {\n      commandLine \u003d parser.parse(options, args);\n    } catch (Exception e) {\n      LOG.error(\"ERROR: \" + e.getMessage() + \"\\n\");\n      HelpFormatter formatter \u003d new HelpFormatter();\n      formatter.printHelp(NAME + \" \", options, true);\n      System.exit(-1);\n    }\n\n    return commandLine;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineSchemaCreator.java"
    }
  }
}