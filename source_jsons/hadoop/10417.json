{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileIoProvider.java",
  "functionName": "flush",
  "functionId": "flush___volume-FsVolumeSpi(annotations-@Nullable)__f-Flushable",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
  "functionStartLine": 128,
  "functionEndLine": 139,
  "numCommitsSeen": 18,
  "timeTaken": 4523,
  "changeHistory": [
    "4046794a5365f80f9fa002e3889e41c6d29e13a8",
    "603f3ef1386048111940b66f3a0750ab84d0588f",
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf"
  ],
  "changeHistoryShort": {
    "4046794a5365f80f9fa002e3889e41c6d29e13a8": "Ybodychange",
    "603f3ef1386048111940b66f3a0750ab84d0588f": "Ybodychange",
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4046794a5365f80f9fa002e3889e41c6d29e13a8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11299. Support multiple Datanode File IO hooks. Contributed by Hanisha Koneru.\n",
      "commitDate": "10/01/17 10:43 AM",
      "commitName": "4046794a5365f80f9fa002e3889e41c6d29e13a8",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "28/12/16 10:08 PM",
      "commitNameOld": "603f3ef1386048111940b66f3a0750ab84d0588f",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 12.52,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public void flush(\n       @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n-    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n+    final long begin \u003d profilingEventHook.beforeFileIo(volume, FLUSH, 0);\n     try {\n+      faultInjectorEventHook.beforeFileIo(volume, FLUSH, 0);\n       f.flush();\n-      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n+      profilingEventHook.afterFileIo(volume, FLUSH, begin, 0);\n     } catch (Exception e) {\n-      eventHooks.onFailure(datanode, volume, FLUSH, e, begin);\n+      onFailure(volume, begin);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void flush(\n      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n    final long begin \u003d profilingEventHook.beforeFileIo(volume, FLUSH, 0);\n    try {\n      faultInjectorEventHook.beforeFileIo(volume, FLUSH, 0);\n      f.flush();\n      profilingEventHook.afterFileIo(volume, FLUSH, begin, 0);\n    } catch (Exception e) {\n      onFailure(volume, begin);\n      throw e;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
      "extendedDetails": {}
    },
    "603f3ef1386048111940b66f3a0750ab84d0588f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11274. Datanode should only check the failed volume upon IO errors. Contributed by Xiaoyu Yao.\n",
      "commitDate": "28/12/16 10:08 PM",
      "commitName": "603f3ef1386048111940b66f3a0750ab84d0588f",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "14/12/16 11:18 AM",
      "commitNameOld": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 14.45,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public void flush(\n       @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n     final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n     try {\n       f.flush();\n       eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n     } catch (Exception e) {\n-      eventHooks.onFailure(volume, FLUSH, e, begin);\n+      eventHooks.onFailure(datanode, volume, FLUSH, e, begin);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void flush(\n      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n    try {\n      f.flush();\n      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n    } catch (Exception e) {\n      eventHooks.onFailure(datanode, volume, FLUSH, e, begin);\n      throw e;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
      "extendedDetails": {}
    },
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
      "commitDate": "14/12/16 11:18 AM",
      "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "14/12/16 1:50 AM",
          "commitNameOld": "72bff192cd37ff97442e0f8dd477fbc2e58fc12d",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private void flush(OutputStream dos) throws IOException {\n-    long begin \u003d Time.monotonicNow();\n-    dos.flush();\n-    long duration \u003d Time.monotonicNow() - begin;\n-    LOG.trace(\"ReplicaOutputStreams#flush takes {} ms.\", duration);\n-    if (duration \u003e slowLogThresholdMs) {\n-      LOG.warn(\"Slow flush took {} ms (threshold\u003d{} ms)\", duration,\n-          slowLogThresholdMs);\n+  public void flush(\n+      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n+    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n+    try {\n+      f.flush();\n+      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n+    } catch (Exception e) {\n+      eventHooks.onFailure(volume, FLUSH, e, begin);\n+      throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void flush(\n      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n    try {\n      f.flush();\n      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n    } catch (Exception e) {\n      eventHooks.onFailure(volume, FLUSH, e, begin);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/ReplicaOutputStreams.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
            "oldMethodName": "flush",
            "newMethodName": "flush"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "14/12/16 1:50 AM",
          "commitNameOld": "72bff192cd37ff97442e0f8dd477fbc2e58fc12d",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private void flush(OutputStream dos) throws IOException {\n-    long begin \u003d Time.monotonicNow();\n-    dos.flush();\n-    long duration \u003d Time.monotonicNow() - begin;\n-    LOG.trace(\"ReplicaOutputStreams#flush takes {} ms.\", duration);\n-    if (duration \u003e slowLogThresholdMs) {\n-      LOG.warn(\"Slow flush took {} ms (threshold\u003d{} ms)\", duration,\n-          slowLogThresholdMs);\n+  public void flush(\n+      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n+    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n+    try {\n+      f.flush();\n+      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n+    } catch (Exception e) {\n+      eventHooks.onFailure(volume, FLUSH, e, begin);\n+      throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void flush(\n      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n    try {\n      f.flush();\n      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n    } catch (Exception e) {\n      eventHooks.onFailure(volume, FLUSH, e, begin);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "14/12/16 1:50 AM",
          "commitNameOld": "72bff192cd37ff97442e0f8dd477fbc2e58fc12d",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private void flush(OutputStream dos) throws IOException {\n-    long begin \u003d Time.monotonicNow();\n-    dos.flush();\n-    long duration \u003d Time.monotonicNow() - begin;\n-    LOG.trace(\"ReplicaOutputStreams#flush takes {} ms.\", duration);\n-    if (duration \u003e slowLogThresholdMs) {\n-      LOG.warn(\"Slow flush took {} ms (threshold\u003d{} ms)\", duration,\n-          slowLogThresholdMs);\n+  public void flush(\n+      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n+    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n+    try {\n+      f.flush();\n+      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n+    } catch (Exception e) {\n+      eventHooks.onFailure(volume, FLUSH, e, begin);\n+      throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void flush(\n      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n    try {\n      f.flush();\n      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n    } catch (Exception e) {\n      eventHooks.onFailure(volume, FLUSH, e, begin);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "14/12/16 1:50 AM",
          "commitNameOld": "72bff192cd37ff97442e0f8dd477fbc2e58fc12d",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private void flush(OutputStream dos) throws IOException {\n-    long begin \u003d Time.monotonicNow();\n-    dos.flush();\n-    long duration \u003d Time.monotonicNow() - begin;\n-    LOG.trace(\"ReplicaOutputStreams#flush takes {} ms.\", duration);\n-    if (duration \u003e slowLogThresholdMs) {\n-      LOG.warn(\"Slow flush took {} ms (threshold\u003d{} ms)\", duration,\n-          slowLogThresholdMs);\n+  public void flush(\n+      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n+    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n+    try {\n+      f.flush();\n+      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n+    } catch (Exception e) {\n+      eventHooks.onFailure(volume, FLUSH, e, begin);\n+      throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void flush(\n      @Nullable FsVolumeSpi volume, Flushable f) throws IOException {\n    final long begin \u003d eventHooks.beforeFileIo(volume, FLUSH, 0);\n    try {\n      f.flush();\n      eventHooks.afterFileIo(volume, FLUSH, begin, 0);\n    } catch (Exception e) {\n      eventHooks.onFailure(volume, FLUSH, e, begin);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {
            "oldValue": "[dos-OutputStream]",
            "newValue": "[volume-FsVolumeSpi(annotations-@Nullable), f-Flushable]"
          }
        }
      ]
    },
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/12/16 11:05 AM",
      "commitName": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,10 @@\n+  private void flush(OutputStream dos) throws IOException {\n+    long begin \u003d Time.monotonicNow();\n+    dos.flush();\n+    long duration \u003d Time.monotonicNow() - begin;\n+    LOG.trace(\"ReplicaOutputStreams#flush takes {} ms.\", duration);\n+    if (duration \u003e slowLogThresholdMs) {\n+      LOG.warn(\"Slow flush took {} ms (threshold\u003d{} ms)\", duration,\n+          slowLogThresholdMs);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void flush(OutputStream dos) throws IOException {\n    long begin \u003d Time.monotonicNow();\n    dos.flush();\n    long duration \u003d Time.monotonicNow() - begin;\n    LOG.trace(\"ReplicaOutputStreams#flush takes {} ms.\", duration);\n    if (duration \u003e slowLogThresholdMs) {\n      LOG.warn(\"Slow flush took {} ms (threshold\u003d{} ms)\", duration,\n          slowLogThresholdMs);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/ReplicaOutputStreams.java"
    }
  }
}