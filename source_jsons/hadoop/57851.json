{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebAppUtils.java",
  "functionName": "getResolvedRemoteRMWebAppURLWithoutScheme",
  "functionId": "getResolvedRemoteRMWebAppURLWithoutScheme___conf-Configuration__httpPolicy-Policy",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
  "functionStartLine": 262,
  "functionEndLine": 271,
  "numCommitsSeen": 29,
  "timeTaken": 1608,
  "changeHistory": [
    "ade7c2bc9ccf09d843ccb3dfa56c1453a9e87318",
    "20b49224eb90c796f042ac4251508f3979fd4787"
  ],
  "changeHistoryShort": {
    "ade7c2bc9ccf09d843ccb3dfa56c1453a9e87318": "Ybodychange",
    "20b49224eb90c796f042ac4251508f3979fd4787": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ade7c2bc9ccf09d843ccb3dfa56c1453a9e87318": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4232. TopCLI console support for HA mode. Contributed by Bibin A Chundatt\n",
      "commitDate": "16/09/16 9:22 PM",
      "commitName": "ade7c2bc9ccf09d843ccb3dfa56c1453a9e87318",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "e27642abf4deb12c6e8c47ffc891b41300494307",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 68.53,
      "commitsBetweenForRepo": 529,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,10 @@\n   public static String getResolvedRemoteRMWebAppURLWithoutScheme(Configuration conf,\n       Policy httpPolicy) {\n-    InetSocketAddress address \u003d null;\n     String rmId \u003d null;\n     if (HAUtil.isHAEnabled(conf)) {\n       // If HA enabled, pick one of the RM-IDs and rely on redirect to go to\n       // the Active RM\n       rmId \u003d (String) HAUtil.getRMHAIds(conf).toArray()[0];\n     }\n-\n-    if (httpPolicy \u003d\u003d Policy.HTTPS_ONLY) {\n-      address \u003d\n-          conf.getSocketAddr(\n-              rmId \u003d\u003d null\n-                  ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n-                  : HAUtil.addSuffix(\n-                  YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, rmId),\n-              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS,\n-              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT);\n-    } else {\n-      address \u003d\n-          conf.getSocketAddr(\n-              rmId \u003d\u003d null\n-                  ? YarnConfiguration.RM_WEBAPP_ADDRESS\n-                  : HAUtil.addSuffix(\n-                  YarnConfiguration.RM_WEBAPP_ADDRESS, rmId),\n-              YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS,\n-              YarnConfiguration.DEFAULT_RM_WEBAPP_PORT);\n-    }\n-    return getResolvedAddress(address);\n+    return getResolvedRemoteRMWebAppURLWithoutScheme(conf, httpPolicy, rmId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getResolvedRemoteRMWebAppURLWithoutScheme(Configuration conf,\n      Policy httpPolicy) {\n    String rmId \u003d null;\n    if (HAUtil.isHAEnabled(conf)) {\n      // If HA enabled, pick one of the RM-IDs and rely on redirect to go to\n      // the Active RM\n      rmId \u003d (String) HAUtil.getRMHAIds(conf).toArray()[0];\n    }\n    return getResolvedRemoteRMWebAppURLWithoutScheme(conf, httpPolicy, rmId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
      "extendedDetails": {}
    },
    "20b49224eb90c796f042ac4251508f3979fd4787": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3351. AppMaster tracking URL is broken in HA. (Anubhav Dhoot via kasha)\n",
      "commitDate": "18/03/15 4:30 PM",
      "commitName": "20b49224eb90c796f042ac4251508f3979fd4787",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,31 @@\n+  public static String getResolvedRemoteRMWebAppURLWithoutScheme(Configuration conf,\n+      Policy httpPolicy) {\n+    InetSocketAddress address \u003d null;\n+    String rmId \u003d null;\n+    if (HAUtil.isHAEnabled(conf)) {\n+      // If HA enabled, pick one of the RM-IDs and rely on redirect to go to\n+      // the Active RM\n+      rmId \u003d (String) HAUtil.getRMHAIds(conf).toArray()[0];\n+    }\n+\n+    if (httpPolicy \u003d\u003d Policy.HTTPS_ONLY) {\n+      address \u003d\n+          conf.getSocketAddr(\n+              rmId \u003d\u003d null\n+                  ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n+                  : HAUtil.addSuffix(\n+                  YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, rmId),\n+              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS,\n+              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT);\n+    } else {\n+      address \u003d\n+          conf.getSocketAddr(\n+              rmId \u003d\u003d null\n+                  ? YarnConfiguration.RM_WEBAPP_ADDRESS\n+                  : HAUtil.addSuffix(\n+                  YarnConfiguration.RM_WEBAPP_ADDRESS, rmId),\n+              YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS,\n+              YarnConfiguration.DEFAULT_RM_WEBAPP_PORT);\n+    }\n+    return getResolvedAddress(address);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getResolvedRemoteRMWebAppURLWithoutScheme(Configuration conf,\n      Policy httpPolicy) {\n    InetSocketAddress address \u003d null;\n    String rmId \u003d null;\n    if (HAUtil.isHAEnabled(conf)) {\n      // If HA enabled, pick one of the RM-IDs and rely on redirect to go to\n      // the Active RM\n      rmId \u003d (String) HAUtil.getRMHAIds(conf).toArray()[0];\n    }\n\n    if (httpPolicy \u003d\u003d Policy.HTTPS_ONLY) {\n      address \u003d\n          conf.getSocketAddr(\n              rmId \u003d\u003d null\n                  ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n                  : HAUtil.addSuffix(\n                  YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, rmId),\n              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS,\n              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT);\n    } else {\n      address \u003d\n          conf.getSocketAddr(\n              rmId \u003d\u003d null\n                  ? YarnConfiguration.RM_WEBAPP_ADDRESS\n                  : HAUtil.addSuffix(\n                  YarnConfiguration.RM_WEBAPP_ADDRESS, rmId),\n              YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS,\n              YarnConfiguration.DEFAULT_RM_WEBAPP_PORT);\n    }\n    return getResolvedAddress(address);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java"
    }
  }
}