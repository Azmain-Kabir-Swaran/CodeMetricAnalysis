{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActivitiesManager.java",
  "functionName": "startNodeUpdateRecording",
  "functionId": "startNodeUpdateRecording___nodeID-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
  "functionStartLine": 350,
  "functionEndLine": 362,
  "numCommitsSeen": 16,
  "timeTaken": 2337,
  "changeHistory": [
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188"
  ],
  "changeHistoryShort": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ybodychange",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": "Ybodychange",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/04/19 9:12 AM",
      "commitNameOld": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 20.82,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   void startNodeUpdateRecording(NodeId nodeID) {\n     if (recordNextAvailableNode) {\n       recordNextNodeUpdateActivities(nodeID.toString());\n     }\n     // Removing from activeRecordedNodes immediately is to ensure that\n     // activities will be recorded just once in multiple threads.\n     if (activeRecordedNodes.remove(nodeID)) {\n       List\u003cNodeAllocation\u003e nodeAllocation \u003d new ArrayList\u003c\u003e();\n       recordingNodesAllocation.get().put(nodeID, nodeAllocation);\n+      // enable diagnostic collector\n+      diagnosticCollectorManager.get().enable();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void startNodeUpdateRecording(NodeId nodeID) {\n    if (recordNextAvailableNode) {\n      recordNextNodeUpdateActivities(nodeID.toString());\n    }\n    // Removing from activeRecordedNodes immediately is to ensure that\n    // activities will be recorded just once in multiple threads.\n    if (activeRecordedNodes.remove(nodeID)) {\n      List\u003cNodeAllocation\u003e nodeAllocation \u003d new ArrayList\u003c\u003e();\n      recordingNodesAllocation.get().put(nodeID, nodeAllocation);\n      // enable diagnostic collector\n      diagnosticCollectorManager.get().enable();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
      "extendedDetails": {}
    },
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9313. Support asynchronized scheduling mode and multi-node lookup mechanism for scheduler activities. Contributed by Tao Yang.\n",
      "commitDate": "07/04/19 10:40 PM",
      "commitName": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 34.02,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   void startNodeUpdateRecording(NodeId nodeID) {\n     if (recordNextAvailableNode) {\n       recordNextNodeUpdateActivities(nodeID.toString());\n     }\n-    if (activeRecordedNodes.contains(nodeID)) {\n+    // Removing from activeRecordedNodes immediately is to ensure that\n+    // activities will be recorded just once in multiple threads.\n+    if (activeRecordedNodes.remove(nodeID)) {\n       List\u003cNodeAllocation\u003e nodeAllocation \u003d new ArrayList\u003c\u003e();\n-      recordingNodesAllocation.put(nodeID, nodeAllocation);\n+      recordingNodesAllocation.get().put(nodeID, nodeAllocation);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void startNodeUpdateRecording(NodeId nodeID) {\n    if (recordNextAvailableNode) {\n      recordNextNodeUpdateActivities(nodeID.toString());\n    }\n    // Removing from activeRecordedNodes immediately is to ensure that\n    // activities will be recorded just once in multiple threads.\n    if (activeRecordedNodes.remove(nodeID)) {\n      List\u003cNodeAllocation\u003e nodeAllocation \u003d new ArrayList\u003c\u003e();\n      recordingNodesAllocation.get().put(nodeID, nodeAllocation);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
      "extendedDetails": {}
    },
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)\n",
      "commitDate": "05/08/16 10:27 AM",
      "commitName": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,9 @@\n+  void startNodeUpdateRecording(NodeId nodeID) {\n+    if (recordNextAvailableNode) {\n+      recordNextNodeUpdateActivities(nodeID.toString());\n+    }\n+    if (activeRecordedNodes.contains(nodeID)) {\n+      List\u003cNodeAllocation\u003e nodeAllocation \u003d new ArrayList\u003c\u003e();\n+      recordingNodesAllocation.put(nodeID, nodeAllocation);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void startNodeUpdateRecording(NodeId nodeID) {\n    if (recordNextAvailableNode) {\n      recordNextNodeUpdateActivities(nodeID.toString());\n    }\n    if (activeRecordedNodes.contains(nodeID)) {\n      List\u003cNodeAllocation\u003e nodeAllocation \u003d new ArrayList\u003c\u003e();\n      recordingNodesAllocation.put(nodeID, nodeAllocation);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java"
    }
  }
}