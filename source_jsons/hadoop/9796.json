{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TextFileRegionAliasMap.java",
  "functionName": "resolve",
  "functionId": "resolve___ident-Block",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/TextFileRegionAliasMap.java",
  "functionStartLine": 298,
  "functionEndLine": 316,
  "numCommitsSeen": 9,
  "timeTaken": 2744,
  "changeHistory": [
    "352f994b6484524cdcfcda021046c59905b62f31",
    "98f5ed5aa377ddd3f35b763b20c499d2ccac2ed5",
    "b668eb91556b8c85c2b4925808ccb1f769031c20"
  ],
  "changeHistoryShort": {
    "352f994b6484524cdcfcda021046c59905b62f31": "Ymultichange(Yreturntypechange,Ybodychange)",
    "98f5ed5aa377ddd3f35b763b20c499d2ccac2ed5": "Yfilerename",
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Yintroduced"
  },
  "changeHistoryDetails": {
    "352f994b6484524cdcfcda021046c59905b62f31": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-12665. [AliasMap] Create a version of the AliasMap that runs in memory in the Namenode (leveldb). Contributed by Ewan Higgs.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "352f994b6484524cdcfcda021046c59905b62f31",
      "commitAuthor": "Virajith Jalaparti",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-12665. [AliasMap] Create a version of the AliasMap that runs in memory in the Namenode (leveldb). Contributed by Ewan Higgs.\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "352f994b6484524cdcfcda021046c59905b62f31",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "15/12/17 5:51 PM",
          "commitNameOld": "cc933cba77c147153e463415fc192cee2d53a1ef",
          "commitAuthorOld": "Virajith Jalaparti",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public FileRegion resolve(Block ident) throws IOException {\n+    public Optional\u003cFileRegion\u003e resolve(Block ident) throws IOException {\n       // consider layering index w/ composable format\n       Iterator\u003cFileRegion\u003e i \u003d iterator();\n       try {\n         while (i.hasNext()) {\n           FileRegion f \u003d i.next();\n           if (f.getBlock().equals(ident)) {\n-            return f;\n+            return Optional.of(f);\n           }\n         }\n       } finally {\n         BufferedReader r \u003d iterators.remove(i);\n         if (r !\u003d null) {\n           // null on last element\n           r.close();\n         }\n       }\n-      return null;\n+      return Optional.empty();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Optional\u003cFileRegion\u003e resolve(Block ident) throws IOException {\n      // consider layering index w/ composable format\n      Iterator\u003cFileRegion\u003e i \u003d iterator();\n      try {\n        while (i.hasNext()) {\n          FileRegion f \u003d i.next();\n          if (f.getBlock().equals(ident)) {\n            return Optional.of(f);\n          }\n        }\n      } finally {\n        BufferedReader r \u003d iterators.remove(i);\n        if (r !\u003d null) {\n          // null on last element\n          r.close();\n        }\n      }\n      return Optional.empty();\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/TextFileRegionAliasMap.java",
          "extendedDetails": {
            "oldValue": "FileRegion",
            "newValue": "Optional\u003cFileRegion\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12665. [AliasMap] Create a version of the AliasMap that runs in memory in the Namenode (leveldb). Contributed by Ewan Higgs.\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "352f994b6484524cdcfcda021046c59905b62f31",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "15/12/17 5:51 PM",
          "commitNameOld": "cc933cba77c147153e463415fc192cee2d53a1ef",
          "commitAuthorOld": "Virajith Jalaparti",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public FileRegion resolve(Block ident) throws IOException {\n+    public Optional\u003cFileRegion\u003e resolve(Block ident) throws IOException {\n       // consider layering index w/ composable format\n       Iterator\u003cFileRegion\u003e i \u003d iterator();\n       try {\n         while (i.hasNext()) {\n           FileRegion f \u003d i.next();\n           if (f.getBlock().equals(ident)) {\n-            return f;\n+            return Optional.of(f);\n           }\n         }\n       } finally {\n         BufferedReader r \u003d iterators.remove(i);\n         if (r !\u003d null) {\n           // null on last element\n           r.close();\n         }\n       }\n-      return null;\n+      return Optional.empty();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Optional\u003cFileRegion\u003e resolve(Block ident) throws IOException {\n      // consider layering index w/ composable format\n      Iterator\u003cFileRegion\u003e i \u003d iterator();\n      try {\n        while (i.hasNext()) {\n          FileRegion f \u003d i.next();\n          if (f.getBlock().equals(ident)) {\n            return Optional.of(f);\n          }\n        }\n      } finally {\n        BufferedReader r \u003d iterators.remove(i);\n        if (r !\u003d null) {\n          // null on last element\n          r.close();\n        }\n      }\n      return Optional.empty();\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/TextFileRegionAliasMap.java",
          "extendedDetails": {}
        }
      ]
    },
    "98f5ed5aa377ddd3f35b763b20c499d2ccac2ed5": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-11902. [READ] Merge BlockFormatProvider and FileRegionProvider.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "98f5ed5aa377ddd3f35b763b20c499d2ccac2ed5",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "d6a9a8997339939b59ce36246225f7cc45b21da5",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public FileRegion resolve(Block ident) throws IOException {\n      // consider layering index w/ composable format\n      Iterator\u003cFileRegion\u003e i \u003d iterator();\n      try {\n        while (i.hasNext()) {\n          FileRegion f \u003d i.next();\n          if (f.getBlock().equals(ident)) {\n            return f;\n          }\n        }\n      } finally {\n        BufferedReader r \u003d iterators.remove(i);\n        if (r !\u003d null) {\n          // null on last element\n          r.close();\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/TextFileRegionAliasMap.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/TextFileRegionFormat.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/TextFileRegionAliasMap.java"
      }
    },
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,19 @@\n+    public FileRegion resolve(Block ident) throws IOException {\n+      // consider layering index w/ composable format\n+      Iterator\u003cFileRegion\u003e i \u003d iterator();\n+      try {\n+        while (i.hasNext()) {\n+          FileRegion f \u003d i.next();\n+          if (f.getBlock().equals(ident)) {\n+            return f;\n+          }\n+        }\n+      } finally {\n+        BufferedReader r \u003d iterators.remove(i);\n+        if (r !\u003d null) {\n+          // null on last element\n+          r.close();\n+        }\n+      }\n+      return null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public FileRegion resolve(Block ident) throws IOException {\n      // consider layering index w/ composable format\n      Iterator\u003cFileRegion\u003e i \u003d iterator();\n      try {\n        while (i.hasNext()) {\n          FileRegion f \u003d i.next();\n          if (f.getBlock().equals(ident)) {\n            return f;\n          }\n        }\n      } finally {\n        BufferedReader r \u003d iterators.remove(i);\n        if (r !\u003d null) {\n          // null on last element\n          r.close();\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/TextFileRegionFormat.java"
    }
  }
}