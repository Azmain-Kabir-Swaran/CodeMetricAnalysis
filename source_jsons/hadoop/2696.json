{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientDatanodeProtocolTranslatorPB.java",
  "functionName": "getBlockLocalPathInfo",
  "functionId": "getBlockLocalPathInfo___block-ExtendedBlock__token-Token__BlockTokenIdentifier__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java",
  "functionStartLine": 228,
  "functionEndLine": 242,
  "numCommitsSeen": 40,
  "timeTaken": 1890,
  "changeHistory": [
    "e2c9b288b223b9fd82dc12018936e13128413492",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
    "c17bb83644b39f551796b8ab6a43023f70b1b89a"
  ],
  "changeHistoryShort": {
    "e2c9b288b223b9fd82dc12018936e13128413492": "Ymultichange(Yfilerename,Ybodychange)",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": "Ybodychange",
    "c17bb83644b39f551796b8ab6a43023f70b1b89a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2c9b288b223b9fd82dc12018936e13128413492": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "28/08/15 2:38 PM",
      "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "28/08/15 2:38 PM",
          "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "28/08/15 2:21 PM",
          "commitNameOld": "b94b56806d3d6e04984e229b479f7ac15b62bbfa",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n       Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n     GetBlockLocalPathInfoRequestProto req \u003d\n         GetBlockLocalPathInfoRequestProto.newBuilder()\n         .setBlock(PBHelperClient.convert(block))\n         .setToken(PBHelperClient.convert(token)).build();\n     GetBlockLocalPathInfoResponseProto resp;\n     try {\n       resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n-    return new BlockLocalPathInfo(PBHelper.convert(resp.getBlock()),\n+    return new BlockLocalPathInfo(PBHelperClient.convert(resp.getBlock()),\n         resp.getLocalPath(), resp.getLocalMetaPath());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n      Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n    GetBlockLocalPathInfoRequestProto req \u003d\n        GetBlockLocalPathInfoRequestProto.newBuilder()\n        .setBlock(PBHelperClient.convert(block))\n        .setToken(PBHelperClient.convert(token)).build();\n    GetBlockLocalPathInfoResponseProto resp;\n    try {\n      resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    return new BlockLocalPathInfo(PBHelperClient.convert(resp.getBlock()),\n        resp.getLocalPath(), resp.getLocalMetaPath());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "28/08/15 2:38 PM",
          "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "28/08/15 2:21 PM",
          "commitNameOld": "b94b56806d3d6e04984e229b479f7ac15b62bbfa",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n       Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n     GetBlockLocalPathInfoRequestProto req \u003d\n         GetBlockLocalPathInfoRequestProto.newBuilder()\n         .setBlock(PBHelperClient.convert(block))\n         .setToken(PBHelperClient.convert(token)).build();\n     GetBlockLocalPathInfoResponseProto resp;\n     try {\n       resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n-    return new BlockLocalPathInfo(PBHelper.convert(resp.getBlock()),\n+    return new BlockLocalPathInfo(PBHelperClient.convert(resp.getBlock()),\n         resp.getLocalPath(), resp.getLocalMetaPath());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n      Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n    GetBlockLocalPathInfoRequestProto req \u003d\n        GetBlockLocalPathInfoRequestProto.newBuilder()\n        .setBlock(PBHelperClient.convert(block))\n        .setToken(PBHelperClient.convert(token)).build();\n    GetBlockLocalPathInfoResponseProto resp;\n    try {\n      resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    return new BlockLocalPathInfo(PBHelperClient.convert(resp.getBlock()),\n        resp.getLocalPath(), resp.getLocalMetaPath());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "22/08/15 1:31 PM",
      "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "17/08/15 5:40 PM",
      "commitNameOld": "eee4d716b48074825e1afcd9c74038a393ddeb69",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 4.83,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n       Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n     GetBlockLocalPathInfoRequestProto req \u003d\n         GetBlockLocalPathInfoRequestProto.newBuilder()\n-        .setBlock(PBHelper.convert(block))\n-        .setToken(PBHelper.convert(token)).build();\n+        .setBlock(PBHelperClient.convert(block))\n+        .setToken(PBHelperClient.convert(token)).build();\n     GetBlockLocalPathInfoResponseProto resp;\n     try {\n       resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n     return new BlockLocalPathInfo(PBHelper.convert(resp.getBlock()),\n         resp.getLocalPath(), resp.getLocalMetaPath());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n      Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n    GetBlockLocalPathInfoRequestProto req \u003d\n        GetBlockLocalPathInfoRequestProto.newBuilder()\n        .setBlock(PBHelperClient.convert(block))\n        .setToken(PBHelperClient.convert(token)).build();\n    GetBlockLocalPathInfoResponseProto resp;\n    try {\n      resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    return new BlockLocalPathInfo(PBHelper.convert(resp.getBlock()),\n        resp.getLocalPath(), resp.getLocalMetaPath());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "c17bb83644b39f551796b8ab6a43023f70b1b89a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2636. Implement protobuf service for ClientDatanodeProtocol. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/11 5:05 PM",
      "commitName": "c17bb83644b39f551796b8ab6a43023f70b1b89a",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,15 @@\n+  public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n+      Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n+    GetBlockLocalPathInfoRequestProto req \u003d\n+        GetBlockLocalPathInfoRequestProto.newBuilder()\n+        .setBlock(PBHelper.convert(block))\n+        .setToken(PBHelper.convert(token)).build();\n+    GetBlockLocalPathInfoResponseProto resp;\n+    try {\n+      resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n+    }\n+    return new BlockLocalPathInfo(PBHelper.convert(resp.getBlock()),\n+        resp.getLocalPath(), resp.getLocalMetaPath());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock block,\n      Token\u003cBlockTokenIdentifier\u003e token) throws IOException {\n    GetBlockLocalPathInfoRequestProto req \u003d\n        GetBlockLocalPathInfoRequestProto.newBuilder()\n        .setBlock(PBHelper.convert(block))\n        .setToken(PBHelper.convert(token)).build();\n    GetBlockLocalPathInfoResponseProto resp;\n    try {\n      resp \u003d rpcProxy.getBlockLocalPathInfo(NULL_CONTROLLER, req);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    return new BlockLocalPathInfo(PBHelper.convert(resp.getBlock()),\n        resp.getLocalPath(), resp.getLocalMetaPath());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java"
    }
  }
}