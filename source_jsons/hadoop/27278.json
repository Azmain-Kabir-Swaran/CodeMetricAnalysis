{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderWebServices.java",
  "functionName": "handleException",
  "functionId": "handleException___e-Exception__url-String__startTime-long__invalidNumMsg-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
  "functionStartLine": 178,
  "functionEndLine": 203,
  "numCommitsSeen": 39,
  "timeTaken": 3080,
  "changeHistory": [
    "469b29c0817b7bf1902c9195c4f8d031a909e1c9",
    "089caf49fe968cf4cd3fd4f9637da89ee143991a",
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
    "e3e857866d9fdefb7e353b21ae24eab4401e60b3",
    "da2b7bd08e27673945cccc391b1ad17e8f22abf1",
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0"
  ],
  "changeHistoryShort": {
    "469b29c0817b7bf1902c9195c4f8d031a909e1c9": "Ybodychange",
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": "Ybodychange",
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7": "Ybodychange",
    "e3e857866d9fdefb7e353b21ae24eab4401e60b3": "Ybodychange",
    "da2b7bd08e27673945cccc391b1ad17e8f22abf1": "Ymultichange(Yparameterchange,Ybodychange)",
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "469b29c0817b7bf1902c9195c4f8d031a909e1c9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8455. Add basic ACL check for all ATS v2 REST APIs. Contributed by Rohith Sharma K S.\n",
      "commitDate": "29/06/18 10:02 AM",
      "commitName": "469b29c0817b7bf1902c9195c4f8d031a909e1c9",
      "commitAuthor": "Sunil G",
      "commitDateOld": "01/06/18 8:59 PM",
      "commitNameOld": "8261f9e5710038ccbc475dbfcea3b9ae79b6f482",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 27.54,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   private static void handleException(Exception e, String url, long startTime,\n       String invalidNumMsg) throws BadRequestException,\n       WebApplicationException {\n     long endTime \u003d Time.monotonicNow();\n     LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n         (endTime - startTime) + \" ms.)\");\n     if (e instanceof NumberFormatException) {\n       throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n     } else if (e instanceof IllegalArgumentException) {\n       throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n           \"Requested Invalid Field.\" : e.getMessage());\n     } else if (e instanceof NotFoundException) {\n       throw (NotFoundException)e;\n     } else if (e instanceof TimelineParseException) {\n       throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n           \"Filter Parsing failed.\" : e.getMessage());\n     } else if (e instanceof BadRequestException) {\n       throw (BadRequestException)e;\n+    } else if (e instanceof ForbiddenException) {\n+      throw (ForbiddenException) e;\n     } else {\n       LOG.error(\"Error while processing REST request\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void handleException(Exception e, String url, long startTime,\n      String invalidNumMsg) throws BadRequestException,\n      WebApplicationException {\n    long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n        (endTime - startTime) + \" ms.)\");\n    if (e instanceof NumberFormatException) {\n      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n    } else if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n          \"Requested Invalid Field.\" : e.getMessage());\n    } else if (e instanceof NotFoundException) {\n      throw (NotFoundException)e;\n    } else if (e instanceof TimelineParseException) {\n      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n          \"Filter Parsing failed.\" : e.getMessage());\n    } else if (e instanceof BadRequestException) {\n      throw (BadRequestException)e;\n    } else if (e instanceof ForbiddenException) {\n      throw (ForbiddenException) e;\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
      "extendedDetails": {}
    },
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   private static void handleException(Exception e, String url, long startTime,\n       String invalidNumMsg) throws BadRequestException,\n       WebApplicationException {\n     long endTime \u003d Time.monotonicNow();\n     LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n         (endTime - startTime) + \" ms.)\");\n     if (e instanceof NumberFormatException) {\n       throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n     } else if (e instanceof IllegalArgumentException) {\n       throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n           \"Requested Invalid Field.\" : e.getMessage());\n     } else if (e instanceof NotFoundException) {\n       throw (NotFoundException)e;\n+    } else if (e instanceof TimelineParseException) {\n+      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n+          \"Filter Parsing failed.\" : e.getMessage());\n     } else if (e instanceof BadRequestException) {\n       throw (BadRequestException)e;\n     } else {\n       LOG.error(\"Error while processing REST request\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void handleException(Exception e, String url, long startTime,\n      String invalidNumMsg) throws BadRequestException,\n      WebApplicationException {\n    long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n        (endTime - startTime) + \" ms.)\");\n    if (e instanceof NumberFormatException) {\n      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n    } else if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n          \"Requested Invalid Field.\" : e.getMessage());\n    } else if (e instanceof NotFoundException) {\n      throw (NotFoundException)e;\n    } else if (e instanceof TimelineParseException) {\n      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n          \"Filter Parsing failed.\" : e.getMessage());\n    } else if (e instanceof BadRequestException) {\n      throw (BadRequestException)e;\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
      "extendedDetails": {}
    },
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4224. Support fetching entities by UID and change the REST\ninterface to conform to current REST APIs\u0027 in YARN. (Varun Saxena via\ngtcarrera9)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,21 @@\n   private static void handleException(Exception e, String url, long startTime,\n       String invalidNumMsg) throws BadRequestException,\n       WebApplicationException {\n     long endTime \u003d Time.monotonicNow();\n     LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n         (endTime - startTime) + \" ms.)\");\n     if (e instanceof NumberFormatException) {\n       throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n     } else if (e instanceof IllegalArgumentException) {\n       throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n           \"Requested Invalid Field.\" : e.getMessage());\n+    } else if (e instanceof NotFoundException) {\n+      throw (NotFoundException)e;\n+    } else if (e instanceof BadRequestException) {\n+      throw (BadRequestException)e;\n     } else {\n       LOG.error(\"Error while processing REST request\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void handleException(Exception e, String url, long startTime,\n      String invalidNumMsg) throws BadRequestException,\n      WebApplicationException {\n    long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n        (endTime - startTime) + \" ms.)\");\n    if (e instanceof NumberFormatException) {\n      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n    } else if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n          \"Requested Invalid Field.\" : e.getMessage());\n    } else if (e instanceof NotFoundException) {\n      throw (NotFoundException)e;\n    } else if (e instanceof BadRequestException) {\n      throw (BadRequestException)e;\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
      "extendedDetails": {}
    },
    "e3e857866d9fdefb7e353b21ae24eab4401e60b3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4179. [reader implementation] support flow activity queries based on time (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "e3e857866d9fdefb7e353b21ae24eab4401e60b3",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d014f2ffd24c1aaebda7503ce0e5a81334a5f266",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   private static void handleException(Exception e, String url, long startTime,\n       String invalidNumMsg) throws BadRequestException,\n       WebApplicationException {\n     long endTime \u003d Time.monotonicNow();\n     LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n         (endTime - startTime) + \" ms.)\");\n     if (e instanceof NumberFormatException) {\n       throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n     } else if (e instanceof IllegalArgumentException) {\n-      throw new BadRequestException(\"Requested Invalid Field.\");\n+      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n+          \"Requested Invalid Field.\" : e.getMessage());\n     } else {\n       LOG.error(\"Error while processing REST request\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void handleException(Exception e, String url, long startTime,\n      String invalidNumMsg) throws BadRequestException,\n      WebApplicationException {\n    long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n        (endTime - startTime) + \" ms.)\");\n    if (e instanceof NumberFormatException) {\n      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n    } else if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(e.getMessage() \u003d\u003d null ?\n          \"Requested Invalid Field.\" : e.getMessage());\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
      "extendedDetails": {}
    },
    "da2b7bd08e27673945cccc391b1ad17e8f22abf1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4203. Add request/response logging \u0026 timing for each REST endpoint call (Varun Saxena via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "da2b7bd08e27673945cccc391b1ad17e8f22abf1",
      "commitAuthor": "Vrushali Channapattan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4203. Add request/response logging \u0026 timing for each REST endpoint call (Varun Saxena via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "da2b7bd08e27673945cccc391b1ad17e8f22abf1",
          "commitAuthor": "Vrushali Channapattan",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n-  private static void handleException(Exception e) throws BadRequestException,\n+  private static void handleException(Exception e, String url, long startTime,\n+      String invalidNumMsg) throws BadRequestException,\n       WebApplicationException {\n-    if (e instanceof IllegalArgumentException) {\n+    long endTime \u003d Time.monotonicNow();\n+    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n+        (endTime - startTime) + \" ms.)\");\n+    if (e instanceof NumberFormatException) {\n+      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n+    } else if (e instanceof IllegalArgumentException) {\n       throw new BadRequestException(\"Requested Invalid Field.\");\n     } else {\n       LOG.error(\"Error while processing REST request\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void handleException(Exception e, String url, long startTime,\n      String invalidNumMsg) throws BadRequestException,\n      WebApplicationException {\n    long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n        (endTime - startTime) + \" ms.)\");\n    if (e instanceof NumberFormatException) {\n      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n    } else if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(\"Requested Invalid Field.\");\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[e-Exception]",
            "newValue": "[e-Exception, url-String, startTime-long, invalidNumMsg-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4203. Add request/response logging \u0026 timing for each REST endpoint call (Varun Saxena via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "da2b7bd08e27673945cccc391b1ad17e8f22abf1",
          "commitAuthor": "Vrushali Channapattan",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n-  private static void handleException(Exception e) throws BadRequestException,\n+  private static void handleException(Exception e, String url, long startTime,\n+      String invalidNumMsg) throws BadRequestException,\n       WebApplicationException {\n-    if (e instanceof IllegalArgumentException) {\n+    long endTime \u003d Time.monotonicNow();\n+    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n+        (endTime - startTime) + \" ms.)\");\n+    if (e instanceof NumberFormatException) {\n+      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n+    } else if (e instanceof IllegalArgumentException) {\n       throw new BadRequestException(\"Requested Invalid Field.\");\n     } else {\n       LOG.error(\"Error while processing REST request\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void handleException(Exception e, String url, long startTime,\n      String invalidNumMsg) throws BadRequestException,\n      WebApplicationException {\n    long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Processed URL \" + url + \" but encountered exception (Took \" +\n        (endTime - startTime) + \" ms.)\");\n    if (e instanceof NumberFormatException) {\n      throw new BadRequestException(invalidNumMsg + \" is not a numeric value.\");\n    } else if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(\"Requested Invalid Field.\");\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4075 [reader REST API] implement support for querying for flows and flow runs (Varun Saxena via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
      "commitAuthor": "Vrushali Channapattan",
      "diff": "@@ -0,0 +1,10 @@\n+  private static void handleException(Exception e) throws BadRequestException,\n+      WebApplicationException {\n+    if (e instanceof IllegalArgumentException) {\n+      throw new BadRequestException(\"Requested Invalid Field.\");\n+    } else {\n+      LOG.error(\"Error while processing REST request\", e);\n+      throw new WebApplicationException(e,\n+          Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void handleException(Exception e) throws BadRequestException,\n      WebApplicationException {\n    if (e instanceof IllegalArgumentException) {\n      throw new BadRequestException(\"Requested Invalid Field.\");\n    } else {\n      LOG.error(\"Error while processing REST request\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java"
    }
  }
}