{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeManager.java",
  "functionName": "recoverTokens",
  "functionId": "recoverTokens___nmTokenSecretManager-NMTokenSecretManagerInNM__containerTokenSecretManager-NMContainerTokenSecretManager",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
  "functionStartLine": 341,
  "functionEndLine": 348,
  "numCommitsSeen": 111,
  "timeTaken": 2409,
  "changeHistory": [
    "2050e0dad661bade3e140d7a5692cfe1999badc3",
    "403ec8ea80d59f209823a7370dc8185fa2c1c368"
  ],
  "changeHistoryShort": {
    "2050e0dad661bade3e140d7a5692cfe1999badc3": "Ybodychange",
    "403ec8ea80d59f209823a7370dc8185fa2c1c368": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2050e0dad661bade3e140d7a5692cfe1999badc3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1342. Recover container tokens upon nodemanager restart. Contributed by Jason Lowe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 10:02 PM",
      "commitName": "2050e0dad661bade3e140d7a5692cfe1999badc3",
      "commitAuthor": "Devarajulu K",
      "commitDateOld": "17/07/14 4:33 PM",
      "commitNameOld": "403ec8ea80d59f209823a7370dc8185fa2c1c368",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 6.23,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   private void recoverTokens(NMTokenSecretManagerInNM nmTokenSecretManager,\n       NMContainerTokenSecretManager containerTokenSecretManager)\n           throws IOException {\n     if (nmStore.canRecover()) {\n-      nmTokenSecretManager.recover(nmStore.loadNMTokenState());\n-      // TODO: recover containerTokenSecretManager\n+      nmTokenSecretManager.recover();\n+      containerTokenSecretManager.recover();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void recoverTokens(NMTokenSecretManagerInNM nmTokenSecretManager,\n      NMContainerTokenSecretManager containerTokenSecretManager)\n          throws IOException {\n    if (nmStore.canRecover()) {\n      nmTokenSecretManager.recover();\n      containerTokenSecretManager.recover();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
      "extendedDetails": {}
    },
    "403ec8ea80d59f209823a7370dc8185fa2c1c368": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1341. Recover NMTokens upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611512 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 4:33 PM",
      "commitName": "403ec8ea80d59f209823a7370dc8185fa2c1c368",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,8 @@\n+  private void recoverTokens(NMTokenSecretManagerInNM nmTokenSecretManager,\n+      NMContainerTokenSecretManager containerTokenSecretManager)\n+          throws IOException {\n+    if (nmStore.canRecover()) {\n+      nmTokenSecretManager.recover(nmStore.loadNMTokenState());\n+      // TODO: recover containerTokenSecretManager\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void recoverTokens(NMTokenSecretManagerInNM nmTokenSecretManager,\n      NMContainerTokenSecretManager containerTokenSecretManager)\n          throws IOException {\n    if (nmStore.canRecover()) {\n      nmTokenSecretManager.recover(nmStore.loadNMTokenState());\n      // TODO: recover containerTokenSecretManager\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java"
    }
  }
}