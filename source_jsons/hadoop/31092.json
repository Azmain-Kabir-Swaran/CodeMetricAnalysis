{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptorREST.java",
  "functionName": "call",
  "functionId": "call",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
  "functionStartLine": 969,
  "functionEndLine": 981,
  "numCommitsSeen": 20,
  "timeTaken": 2222,
  "changeHistory": [
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
    "cc8893edc0b7960e958723c81062986c12f06ade"
  ],
  "changeHistoryShort": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ybodychange",
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cc8893edc0b7960e958723c81062986c12f06ade": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n         public ClusterMetricsInfo call() {\n           DefaultRequestInterceptorREST interceptor \u003d\n-              getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n-                  info.getClientRMServiceAddress());\n+              getOrCreateInterceptorForSubCluster(\n+                  info.getSubClusterId(), info.getRMWebServiceAddress());\n           try {\n             ClusterMetricsInfo metrics \u003d interceptor.getClusterMetricsInfo();\n             return metrics;\n           } catch (Exception e) {\n-            LOG.error(\"Subcluster \" + info.getSubClusterId()\n-                + \" failed to return Cluster Metrics.\");\n+            LOG.error(\"Subcluster {} failed to return Cluster Metrics.\",\n+                info.getSubClusterId());\n             return null;\n           }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public ClusterMetricsInfo call() {\n          DefaultRequestInterceptorREST interceptor \u003d\n              getOrCreateInterceptorForSubCluster(\n                  info.getSubClusterId(), info.getRMWebServiceAddress());\n          try {\n            ClusterMetricsInfo metrics \u003d interceptor.getClusterMetricsInfo();\n            return metrics;\n          } catch (Exception e) {\n            LOG.error(\"Subcluster {} failed to return Cluster Metrics.\",\n                info.getSubClusterId());\n            return null;\n          }\n        }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7095. Federation: routing getNode/getNodes/getMetrics REST invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n",
      "commitDate": "31/08/17 3:05 PM",
      "commitName": "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7095. Federation: routing getNode/getNodes/getMetrics REST invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "31/08/17 3:05 PM",
          "commitName": "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "29/08/17 2:53 PM",
          "commitNameOld": "cc8893edc0b7960e958723c81062986c12f06ade",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 2.01,
          "commitsBetweenForRepo": 76,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-        public AppsInfo call() {\n+        public ClusterMetricsInfo call() {\n           DefaultRequestInterceptorREST interceptor \u003d\n               getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n                   info.getClientRMServiceAddress());\n-          AppsInfo rmApps \u003d interceptor.getApps(hsr, stateQuery, statesQuery,\n-              finalStatusQuery, userQuery, queueQuery, count, startedBegin,\n-              startedEnd, finishBegin, finishEnd, applicationTypes,\n-              applicationTags, unselectedFields);\n-\n-          if (rmApps \u003d\u003d null) {\n-            routerMetrics.incrMultipleAppsFailedRetrieved();\n+          try {\n+            ClusterMetricsInfo metrics \u003d interceptor.getClusterMetricsInfo();\n+            return metrics;\n+          } catch (Exception e) {\n             LOG.error(\"Subcluster \" + info.getSubClusterId()\n-                + \" failed to return appReport.\");\n+                + \" failed to return Cluster Metrics.\");\n             return null;\n           }\n-          return rmApps;\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public ClusterMetricsInfo call() {\n          DefaultRequestInterceptorREST interceptor \u003d\n              getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n                  info.getClientRMServiceAddress());\n          try {\n            ClusterMetricsInfo metrics \u003d interceptor.getClusterMetricsInfo();\n            return metrics;\n          } catch (Exception e) {\n            LOG.error(\"Subcluster \" + info.getSubClusterId()\n                + \" failed to return Cluster Metrics.\");\n            return null;\n          }\n        }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
          "extendedDetails": {
            "oldValue": "AppsInfo",
            "newValue": "ClusterMetricsInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7095. Federation: routing getNode/getNodes/getMetrics REST invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n",
          "commitDate": "31/08/17 3:05 PM",
          "commitName": "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "29/08/17 2:53 PM",
          "commitNameOld": "cc8893edc0b7960e958723c81062986c12f06ade",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 2.01,
          "commitsBetweenForRepo": 76,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-        public AppsInfo call() {\n+        public ClusterMetricsInfo call() {\n           DefaultRequestInterceptorREST interceptor \u003d\n               getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n                   info.getClientRMServiceAddress());\n-          AppsInfo rmApps \u003d interceptor.getApps(hsr, stateQuery, statesQuery,\n-              finalStatusQuery, userQuery, queueQuery, count, startedBegin,\n-              startedEnd, finishBegin, finishEnd, applicationTypes,\n-              applicationTags, unselectedFields);\n-\n-          if (rmApps \u003d\u003d null) {\n-            routerMetrics.incrMultipleAppsFailedRetrieved();\n+          try {\n+            ClusterMetricsInfo metrics \u003d interceptor.getClusterMetricsInfo();\n+            return metrics;\n+          } catch (Exception e) {\n             LOG.error(\"Subcluster \" + info.getSubClusterId()\n-                + \" failed to return appReport.\");\n+                + \" failed to return Cluster Metrics.\");\n             return null;\n           }\n-          return rmApps;\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public ClusterMetricsInfo call() {\n          DefaultRequestInterceptorREST interceptor \u003d\n              getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n                  info.getClientRMServiceAddress());\n          try {\n            ClusterMetricsInfo metrics \u003d interceptor.getClusterMetricsInfo();\n            return metrics;\n          } catch (Exception e) {\n            LOG.error(\"Subcluster \" + info.getSubClusterId()\n                + \" failed to return Cluster Metrics.\");\n            return null;\n          }\n        }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
          "extendedDetails": {}
        }
      ]
    },
    "cc8893edc0b7960e958723c81062986c12f06ade": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7010. Federation: routing REST invocations transparently to multiple RMs (part 2 - getApps). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "29/08/17 2:53 PM",
      "commitName": "cc8893edc0b7960e958723c81062986c12f06ade",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,17 @@\n+        public AppsInfo call() {\n+          DefaultRequestInterceptorREST interceptor \u003d\n+              getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n+                  info.getClientRMServiceAddress());\n+          AppsInfo rmApps \u003d interceptor.getApps(hsr, stateQuery, statesQuery,\n+              finalStatusQuery, userQuery, queueQuery, count, startedBegin,\n+              startedEnd, finishBegin, finishEnd, applicationTypes,\n+              applicationTags, unselectedFields);\n+\n+          if (rmApps \u003d\u003d null) {\n+            routerMetrics.incrMultipleAppsFailedRetrieved();\n+            LOG.error(\"Subcluster \" + info.getSubClusterId()\n+                + \" failed to return appReport.\");\n+            return null;\n+          }\n+          return rmApps;\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public AppsInfo call() {\n          DefaultRequestInterceptorREST interceptor \u003d\n              getOrCreateInterceptorForSubCluster(info.getSubClusterId(),\n                  info.getClientRMServiceAddress());\n          AppsInfo rmApps \u003d interceptor.getApps(hsr, stateQuery, statesQuery,\n              finalStatusQuery, userQuery, queueQuery, count, startedBegin,\n              startedEnd, finishBegin, finishEnd, applicationTypes,\n              applicationTags, unselectedFields);\n\n          if (rmApps \u003d\u003d null) {\n            routerMetrics.incrMultipleAppsFailedRetrieved();\n            LOG.error(\"Subcluster \" + info.getSubClusterId()\n                + \" failed to return appReport.\");\n            return null;\n          }\n          return rmApps;\n        }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java"
    }
  }
}