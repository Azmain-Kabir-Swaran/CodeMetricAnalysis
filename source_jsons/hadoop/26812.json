{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TestMojo.java",
  "functionName": "shouldRunTest",
  "functionId": "shouldRunTest",
  "sourceFilePath": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/TestMojo.java",
  "functionStartLine": 212,
  "functionEndLine": 285,
  "numCommitsSeen": 4,
  "timeTaken": 716,
  "changeHistory": [
    "b2c155f810888480d058512a326a5083e1bb4eaa",
    "b1ed28fa77cb2fab80c54f9dfeb5d8b7139eca34"
  ],
  "changeHistoryShort": {
    "b2c155f810888480d058512a326a5083e1bb4eaa": "Ybodychange",
    "b1ed28fa77cb2fab80c54f9dfeb5d8b7139eca34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2c155f810888480d058512a326a5083e1bb4eaa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12712. Fix some cmake plugin and native build warnings (cmccabe)\n",
      "commitDate": "15/01/16 12:29 PM",
      "commitName": "b2c155f810888480d058512a326a5083e1bb4eaa",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "14/01/16 11:02 AM",
      "commitNameOld": "b1ed28fa77cb2fab80c54f9dfeb5d8b7139eca34",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,73 +1,74 @@\n   private boolean shouldRunTest() throws MojoExecutionException {\n     // Were we told to skip all tests?\n     String skipTests \u003d session.\n-        getExecutionProperties().getProperty(\"skipTests\");\n+        getSystemProperties().getProperty(\"skipTests\");\n     if (isTruthy(skipTests)) {\n       getLog().info(\"skipTests is in effect for test \" + testName);\n       return false;\n     }\n     // Does the binary exist?  If not, we shouldn\u0027t try to run it.\n     if (!binary.exists()) {\n       if (skipIfMissing) {\n         getLog().info(\"Skipping missing test \" + testName);\n         return false;\n       } else {\n         throw new MojoExecutionException(\"Test \" + binary +\n             \" was not built!  (File does not exist.)\");\n       }\n     }\n     // If there is an explicit list of tests to run, it should include this\n     // test.\n     String testProp \u003d session.\n-        getExecutionProperties().getProperty(\"test\");\n+        getSystemProperties().getProperty(\"test\");\n     if (testProp !\u003d null) {\n       String testPropArr[] \u003d testProp.split(\",\");\n       boolean found \u003d false;\n       for (String test : testPropArr) {\n         if (test.equals(ALL_NATIVE)) {\n           found \u003d true;\n           break;\n         }\n         if (test.equals(testName)) {\n           found \u003d true;\n           break;\n         }\n       }\n       if (!found) {\n         getLog().debug(\"did not find test \u0027\" + testName + \"\u0027 in \"\n              + \"list \" + testProp);\n         return false;\n       }\n     }\n     // Are all the preconditions satistfied?\n     if (preconditions !\u003d null) {\n       int idx \u003d 1;\n       for (Map.Entry\u003cString, String\u003e entry : preconditions.entrySet()) {\n         String key \u003d entry.getKey();\n         String val \u003d entry.getValue();\n         if (key \u003d\u003d null) {\n           throw new MojoExecutionException(\"NULL is not a valid \" +\n-          \t\t\"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n-        } if (key.equals(\"and\")) {\n+               \"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n+        }\n+        if (key.equals(\"and\")) {\n           if (!isTruthy(val)) {\n             getLog().info(\"Skipping test \" + testName +\n                 \" because precondition number \" + idx + \" was not met.\");\n             return false;\n           }\n         } else if (key.equals(\"andNot\")) {\n           if (isTruthy(val)) {\n             getLog().info(\"Skipping test \" + testName +\n                 \" because negative precondition number \" + idx +\n                 \" was met.\");\n             return false;\n           }\n         } else {\n           throw new MojoExecutionException(key + \" is not a valid \" +\n-          \t\t\"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n+              \"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n         }\n         idx++;\n       }\n     }\n     // OK, we should run this.\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldRunTest() throws MojoExecutionException {\n    // Were we told to skip all tests?\n    String skipTests \u003d session.\n        getSystemProperties().getProperty(\"skipTests\");\n    if (isTruthy(skipTests)) {\n      getLog().info(\"skipTests is in effect for test \" + testName);\n      return false;\n    }\n    // Does the binary exist?  If not, we shouldn\u0027t try to run it.\n    if (!binary.exists()) {\n      if (skipIfMissing) {\n        getLog().info(\"Skipping missing test \" + testName);\n        return false;\n      } else {\n        throw new MojoExecutionException(\"Test \" + binary +\n            \" was not built!  (File does not exist.)\");\n      }\n    }\n    // If there is an explicit list of tests to run, it should include this\n    // test.\n    String testProp \u003d session.\n        getSystemProperties().getProperty(\"test\");\n    if (testProp !\u003d null) {\n      String testPropArr[] \u003d testProp.split(\",\");\n      boolean found \u003d false;\n      for (String test : testPropArr) {\n        if (test.equals(ALL_NATIVE)) {\n          found \u003d true;\n          break;\n        }\n        if (test.equals(testName)) {\n          found \u003d true;\n          break;\n        }\n      }\n      if (!found) {\n        getLog().debug(\"did not find test \u0027\" + testName + \"\u0027 in \"\n             + \"list \" + testProp);\n        return false;\n      }\n    }\n    // Are all the preconditions satistfied?\n    if (preconditions !\u003d null) {\n      int idx \u003d 1;\n      for (Map.Entry\u003cString, String\u003e entry : preconditions.entrySet()) {\n        String key \u003d entry.getKey();\n        String val \u003d entry.getValue();\n        if (key \u003d\u003d null) {\n          throw new MojoExecutionException(\"NULL is not a valid \" +\n               \"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n        }\n        if (key.equals(\"and\")) {\n          if (!isTruthy(val)) {\n            getLog().info(\"Skipping test \" + testName +\n                \" because precondition number \" + idx + \" was not met.\");\n            return false;\n          }\n        } else if (key.equals(\"andNot\")) {\n          if (isTruthy(val)) {\n            getLog().info(\"Skipping test \" + testName +\n                \" because negative precondition number \" + idx +\n                \" was met.\");\n            return false;\n          }\n        } else {\n          throw new MojoExecutionException(key + \" is not a valid \" +\n              \"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n        }\n        idx++;\n      }\n    }\n    // OK, we should run this.\n    return true;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/TestMojo.java",
      "extendedDetails": {}
    },
    "b1ed28fa77cb2fab80c54f9dfeb5d8b7139eca34": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8887. Use a Maven plugin to build the native code using CMake (cmccabe)\n",
      "commitDate": "14/01/16 11:02 AM",
      "commitName": "b1ed28fa77cb2fab80c54f9dfeb5d8b7139eca34",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,73 @@\n+  private boolean shouldRunTest() throws MojoExecutionException {\n+    // Were we told to skip all tests?\n+    String skipTests \u003d session.\n+        getExecutionProperties().getProperty(\"skipTests\");\n+    if (isTruthy(skipTests)) {\n+      getLog().info(\"skipTests is in effect for test \" + testName);\n+      return false;\n+    }\n+    // Does the binary exist?  If not, we shouldn\u0027t try to run it.\n+    if (!binary.exists()) {\n+      if (skipIfMissing) {\n+        getLog().info(\"Skipping missing test \" + testName);\n+        return false;\n+      } else {\n+        throw new MojoExecutionException(\"Test \" + binary +\n+            \" was not built!  (File does not exist.)\");\n+      }\n+    }\n+    // If there is an explicit list of tests to run, it should include this\n+    // test.\n+    String testProp \u003d session.\n+        getExecutionProperties().getProperty(\"test\");\n+    if (testProp !\u003d null) {\n+      String testPropArr[] \u003d testProp.split(\",\");\n+      boolean found \u003d false;\n+      for (String test : testPropArr) {\n+        if (test.equals(ALL_NATIVE)) {\n+          found \u003d true;\n+          break;\n+        }\n+        if (test.equals(testName)) {\n+          found \u003d true;\n+          break;\n+        }\n+      }\n+      if (!found) {\n+        getLog().debug(\"did not find test \u0027\" + testName + \"\u0027 in \"\n+             + \"list \" + testProp);\n+        return false;\n+      }\n+    }\n+    // Are all the preconditions satistfied?\n+    if (preconditions !\u003d null) {\n+      int idx \u003d 1;\n+      for (Map.Entry\u003cString, String\u003e entry : preconditions.entrySet()) {\n+        String key \u003d entry.getKey();\n+        String val \u003d entry.getValue();\n+        if (key \u003d\u003d null) {\n+          throw new MojoExecutionException(\"NULL is not a valid \" +\n+          \t\t\"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n+        } if (key.equals(\"and\")) {\n+          if (!isTruthy(val)) {\n+            getLog().info(\"Skipping test \" + testName +\n+                \" because precondition number \" + idx + \" was not met.\");\n+            return false;\n+          }\n+        } else if (key.equals(\"andNot\")) {\n+          if (isTruthy(val)) {\n+            getLog().info(\"Skipping test \" + testName +\n+                \" because negative precondition number \" + idx +\n+                \" was met.\");\n+            return false;\n+          }\n+        } else {\n+          throw new MojoExecutionException(key + \" is not a valid \" +\n+          \t\t\"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n+        }\n+        idx++;\n+      }\n+    }\n+    // OK, we should run this.\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldRunTest() throws MojoExecutionException {\n    // Were we told to skip all tests?\n    String skipTests \u003d session.\n        getExecutionProperties().getProperty(\"skipTests\");\n    if (isTruthy(skipTests)) {\n      getLog().info(\"skipTests is in effect for test \" + testName);\n      return false;\n    }\n    // Does the binary exist?  If not, we shouldn\u0027t try to run it.\n    if (!binary.exists()) {\n      if (skipIfMissing) {\n        getLog().info(\"Skipping missing test \" + testName);\n        return false;\n      } else {\n        throw new MojoExecutionException(\"Test \" + binary +\n            \" was not built!  (File does not exist.)\");\n      }\n    }\n    // If there is an explicit list of tests to run, it should include this\n    // test.\n    String testProp \u003d session.\n        getExecutionProperties().getProperty(\"test\");\n    if (testProp !\u003d null) {\n      String testPropArr[] \u003d testProp.split(\",\");\n      boolean found \u003d false;\n      for (String test : testPropArr) {\n        if (test.equals(ALL_NATIVE)) {\n          found \u003d true;\n          break;\n        }\n        if (test.equals(testName)) {\n          found \u003d true;\n          break;\n        }\n      }\n      if (!found) {\n        getLog().debug(\"did not find test \u0027\" + testName + \"\u0027 in \"\n             + \"list \" + testProp);\n        return false;\n      }\n    }\n    // Are all the preconditions satistfied?\n    if (preconditions !\u003d null) {\n      int idx \u003d 1;\n      for (Map.Entry\u003cString, String\u003e entry : preconditions.entrySet()) {\n        String key \u003d entry.getKey();\n        String val \u003d entry.getValue();\n        if (key \u003d\u003d null) {\n          throw new MojoExecutionException(\"NULL is not a valid \" +\n          \t\t\"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n        } if (key.equals(\"and\")) {\n          if (!isTruthy(val)) {\n            getLog().info(\"Skipping test \" + testName +\n                \" because precondition number \" + idx + \" was not met.\");\n            return false;\n          }\n        } else if (key.equals(\"andNot\")) {\n          if (isTruthy(val)) {\n            getLog().info(\"Skipping test \" + testName +\n                \" because negative precondition number \" + idx +\n                \" was met.\");\n            return false;\n          }\n        } else {\n          throw new MojoExecutionException(key + \" is not a valid \" +\n          \t\t\"precondition type.  \" + VALID_PRECONDITION_TYPES_STR);\n        }\n        idx++;\n      }\n    }\n    // OK, we should run this.\n    return true;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/cmakebuilder/TestMojo.java"
    }
  }
}