{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskValidatorFactory.java",
  "functionName": "getInstance",
  "functionId": "getInstance___clazz-Class__? extends DiskValidator__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskValidatorFactory.java",
  "functionStartLine": 45,
  "functionEndLine": 61,
  "numCommitsSeen": 2,
  "timeTaken": 450,
  "changeHistory": [
    "442162048a1509aece5dc92e70e874674f648d58"
  ],
  "changeHistoryShort": {
    "442162048a1509aece5dc92e70e874674f648d58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "442162048a1509aece5dc92e70e874674f648d58": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13254. Create framework for configurable disk checkers (yufeigu via rkanter)\n",
      "commitDate": "15/07/16 1:41 PM",
      "commitName": "442162048a1509aece5dc92e70e874674f648d58",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,17 @@\n+      getInstance(Class\u003c? extends DiskValidator\u003e clazz) {\n+    DiskValidator diskValidator;\n+    if (INSTANCES.containsKey(clazz)) {\n+      diskValidator \u003d INSTANCES.get(clazz);\n+    } else {\n+      diskValidator \u003d ReflectionUtils.newInstance(clazz, null);\n+      // check the return of putIfAbsent() to see if any other thread have put\n+      // the instance with the same key into INSTANCES\n+      DiskValidator diskValidatorRet \u003d\n+          INSTANCES.putIfAbsent(clazz, diskValidator);\n+      if (diskValidatorRet !\u003d null) {\n+        diskValidator \u003d diskValidatorRet;\n+      }\n+    }\n+\n+    return diskValidator;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      getInstance(Class\u003c? extends DiskValidator\u003e clazz) {\n    DiskValidator diskValidator;\n    if (INSTANCES.containsKey(clazz)) {\n      diskValidator \u003d INSTANCES.get(clazz);\n    } else {\n      diskValidator \u003d ReflectionUtils.newInstance(clazz, null);\n      // check the return of putIfAbsent() to see if any other thread have put\n      // the instance with the same key into INSTANCES\n      DiskValidator diskValidatorRet \u003d\n          INSTANCES.putIfAbsent(clazz, diskValidator);\n      if (diskValidatorRet !\u003d null) {\n        diskValidator \u003d diskValidatorRet;\n      }\n    }\n\n    return diskValidator;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskValidatorFactory.java"
    }
  }
}