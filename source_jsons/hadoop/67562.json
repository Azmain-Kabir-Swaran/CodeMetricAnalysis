{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BaseLogParser.java",
  "functionName": "parseStream",
  "functionId": "parseStream___logs-InputStream(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/translator/impl/BaseLogParser.java",
  "functionStartLine": 94,
  "functionEndLine": 119,
  "numCommitsSeen": 3,
  "timeTaken": 771,
  "changeHistory": [
    "53c0fb7efebfac4a79f5cce2dd42cf00411d51e7",
    "625039ef20e6011ab360131d70582a6e4bf2ec1d"
  ],
  "changeHistoryShort": {
    "53c0fb7efebfac4a79f5cce2dd42cf00411d51e7": "Ybodychange",
    "625039ef20e6011ab360131d70582a6e4bf2ec1d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "53c0fb7efebfac4a79f5cce2dd42cf00411d51e7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15013. Fix ResourceEstimator findbugs issues. (asuresh)\n",
      "commitDate": "02/11/17 5:15 PM",
      "commitName": "53c0fb7efebfac4a79f5cce2dd42cf00411d51e7",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "25/10/17 3:51 PM",
      "commitNameOld": "625039ef20e6011ab360131d70582a6e4bf2ec1d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   @Override public final void parseStream(final InputStream logs)\n       throws SkylineStoreException, IOException {\n     if (!INPUT_VALIDATOR.validate(logs)) {\n       LOGGER.error(\"Input validation fails, please specify with\"\n           + \" valid input parameters.\");\n       return;\n     }\n     final Map\u003cRecurrenceId, List\u003cResourceSkyline\u003e\u003e skylineRecords \u003d\n         new HashMap\u003c\u003e();\n     final Map\u003cString, JobMetaData\u003e jobMetas \u003d\n         new HashMap\u003cString, JobMetaData\u003e();\n-    final BufferedReader bf \u003d new BufferedReader(new InputStreamReader(logs));\n+    final BufferedReader bf \u003d new BufferedReader(\n+        new InputStreamReader(logs, StandardCharsets.UTF_8));\n     String line \u003d null;\n     while ((line \u003d bf.readLine()) !\u003d null) {\n       try {\n         parseLine(line, jobMetas, skylineRecords);\n       } catch (DataFieldNotFoundException e) {\n         LOGGER.debug(\"Data field not found\", e);\n       } catch (ParseException e) {\n         LOGGER.debug(\"Date conversion error\", e);\n       }\n     }\n \n     addToSkylineStore(skylineRecords);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override public final void parseStream(final InputStream logs)\n      throws SkylineStoreException, IOException {\n    if (!INPUT_VALIDATOR.validate(logs)) {\n      LOGGER.error(\"Input validation fails, please specify with\"\n          + \" valid input parameters.\");\n      return;\n    }\n    final Map\u003cRecurrenceId, List\u003cResourceSkyline\u003e\u003e skylineRecords \u003d\n        new HashMap\u003c\u003e();\n    final Map\u003cString, JobMetaData\u003e jobMetas \u003d\n        new HashMap\u003cString, JobMetaData\u003e();\n    final BufferedReader bf \u003d new BufferedReader(\n        new InputStreamReader(logs, StandardCharsets.UTF_8));\n    String line \u003d null;\n    while ((line \u003d bf.readLine()) !\u003d null) {\n      try {\n        parseLine(line, jobMetas, skylineRecords);\n      } catch (DataFieldNotFoundException e) {\n        LOGGER.debug(\"Data field not found\", e);\n      } catch (ParseException e) {\n        LOGGER.debug(\"Date conversion error\", e);\n      }\n    }\n\n    addToSkylineStore(skylineRecords);\n  }",
      "path": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/translator/impl/BaseLogParser.java",
      "extendedDetails": {}
    },
    "625039ef20e6011ab360131d70582a6e4bf2ec1d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14840. Tool to estimate resource requirements of an application pipeline based on prior executions. (Rui Li via Subru).\n",
      "commitDate": "25/10/17 3:51 PM",
      "commitName": "625039ef20e6011ab360131d70582a6e4bf2ec1d",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,25 @@\n+  @Override public final void parseStream(final InputStream logs)\n+      throws SkylineStoreException, IOException {\n+    if (!INPUT_VALIDATOR.validate(logs)) {\n+      LOGGER.error(\"Input validation fails, please specify with\"\n+          + \" valid input parameters.\");\n+      return;\n+    }\n+    final Map\u003cRecurrenceId, List\u003cResourceSkyline\u003e\u003e skylineRecords \u003d\n+        new HashMap\u003c\u003e();\n+    final Map\u003cString, JobMetaData\u003e jobMetas \u003d\n+        new HashMap\u003cString, JobMetaData\u003e();\n+    final BufferedReader bf \u003d new BufferedReader(new InputStreamReader(logs));\n+    String line \u003d null;\n+    while ((line \u003d bf.readLine()) !\u003d null) {\n+      try {\n+        parseLine(line, jobMetas, skylineRecords);\n+      } catch (DataFieldNotFoundException e) {\n+        LOGGER.debug(\"Data field not found\", e);\n+      } catch (ParseException e) {\n+        LOGGER.debug(\"Date conversion error\", e);\n+      }\n+    }\n+\n+    addToSkylineStore(skylineRecords);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override public final void parseStream(final InputStream logs)\n      throws SkylineStoreException, IOException {\n    if (!INPUT_VALIDATOR.validate(logs)) {\n      LOGGER.error(\"Input validation fails, please specify with\"\n          + \" valid input parameters.\");\n      return;\n    }\n    final Map\u003cRecurrenceId, List\u003cResourceSkyline\u003e\u003e skylineRecords \u003d\n        new HashMap\u003c\u003e();\n    final Map\u003cString, JobMetaData\u003e jobMetas \u003d\n        new HashMap\u003cString, JobMetaData\u003e();\n    final BufferedReader bf \u003d new BufferedReader(new InputStreamReader(logs));\n    String line \u003d null;\n    while ((line \u003d bf.readLine()) !\u003d null) {\n      try {\n        parseLine(line, jobMetas, skylineRecords);\n      } catch (DataFieldNotFoundException e) {\n        LOGGER.debug(\"Data field not found\", e);\n      } catch (ParseException e) {\n        LOGGER.debug(\"Date conversion error\", e);\n      }\n    }\n\n    addToSkylineStore(skylineRecords);\n  }",
      "path": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/translator/impl/BaseLogParser.java"
    }
  }
}