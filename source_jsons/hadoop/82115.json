{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IdentityHashStore.java",
  "functionName": "putInternal",
  "functionId": "putInternal___k-Object__v-Object",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/IdentityHashStore.java",
  "functionStartLine": 94,
  "functionEndLine": 108,
  "numCommitsSeen": 2,
  "timeTaken": 1136,
  "changeHistory": [
    "a3dacc07e2c08bb4ecfce7b5e6d5602273989e9c",
    "eccdb9aa8bcdee750583d16a1253f1c5faabd036"
  ],
  "changeHistoryShort": {
    "a3dacc07e2c08bb4ecfce7b5e6d5602273989e9c": "Ybodychange",
    "eccdb9aa8bcdee750583d16a1253f1c5faabd036": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3dacc07e2c08bb4ecfce7b5e6d5602273989e9c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11221. IdentityHashStore assumes System.identityHashCode() is non-negative. Contributed by Jinghui Wang\n",
      "commitDate": "30/10/14 10:58 AM",
      "commitName": "a3dacc07e2c08bb4ecfce7b5e6d5602273989e9c",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "27/09/13 3:51 PM",
      "commitNameOld": "eccdb9aa8bcdee750583d16a1253f1c5faabd036",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 397.8,
      "commitsBetweenForRepo": 3035,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private void putInternal(Object k, Object v) {\n-    int hash \u003d System.identityHashCode(k);\n-    final int numEntries \u003d buffer.length / 2;\n-    int index \u003d hash % numEntries;\n+    final int hash \u003d System.identityHashCode(k);\n+    final int numEntries \u003d buffer.length \u003e\u003e  1;\n+    //computing modulo with the assumption buffer.length is power of 2\n+    int index \u003d hash \u0026 (numEntries-1);\n     while (true) {\n       if (buffer[2 * index] \u003d\u003d null) {\n         buffer[2 * index] \u003d k;\n         buffer[1 + (2 * index)] \u003d v;\n         numInserted++;\n         return;\n       }\n       index \u003d (index + 1) % numEntries;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void putInternal(Object k, Object v) {\n    final int hash \u003d System.identityHashCode(k);\n    final int numEntries \u003d buffer.length \u003e\u003e  1;\n    //computing modulo with the assumption buffer.length is power of 2\n    int index \u003d hash \u0026 (numEntries-1);\n    while (true) {\n      if (buffer[2 * index] \u003d\u003d null) {\n        buffer[2 * index] \u003d k;\n        buffer[1 + (2 * index)] \u003d v;\n        numInserted++;\n        return;\n      }\n      index \u003d (index + 1) % numEntries;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/IdentityHashStore.java",
      "extendedDetails": {}
    },
    "eccdb9aa8bcdee750583d16a1253f1c5faabd036": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5260. Merge zero-copy memory-mapped HDFS client reads to trunk and branch-2. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527113 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 3:51 PM",
      "commitName": "eccdb9aa8bcdee750583d16a1253f1c5faabd036",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,14 @@\n+  private void putInternal(Object k, Object v) {\n+    int hash \u003d System.identityHashCode(k);\n+    final int numEntries \u003d buffer.length / 2;\n+    int index \u003d hash % numEntries;\n+    while (true) {\n+      if (buffer[2 * index] \u003d\u003d null) {\n+        buffer[2 * index] \u003d k;\n+        buffer[1 + (2 * index)] \u003d v;\n+        numInserted++;\n+        return;\n+      }\n+      index \u003d (index + 1) % numEntries;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void putInternal(Object k, Object v) {\n    int hash \u003d System.identityHashCode(k);\n    final int numEntries \u003d buffer.length / 2;\n    int index \u003d hash % numEntries;\n    while (true) {\n      if (buffer[2 * index] \u003d\u003d null) {\n        buffer[2 * index] \u003d k;\n        buffer[1 + (2 * index)] \u003d v;\n        numInserted++;\n        return;\n      }\n      index \u003d (index + 1) % numEntries;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/IdentityHashStore.java"
    }
  }
}