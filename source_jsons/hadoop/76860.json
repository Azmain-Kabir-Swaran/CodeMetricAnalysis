{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RSLegacyRawDecoder.java",
  "functionName": "adjustOrder",
  "functionId": "adjustOrder___inputs-T[]__inputs2-T[]__erasedIndexes-int[]__erasedIndexes2-int[]__outputs-T[]__outputs2-T[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSLegacyRawDecoder.java",
  "functionStartLine": 222,
  "functionEndLine": 253,
  "numCommitsSeen": 13,
  "timeTaken": 1854,
  "changeHistory": [
    "a22fe02fba66280a8e994282e9ead23d9e20669a",
    "efdc0070d880c7e1b778e0029a1b827ca962ce70",
    "c201cf951d5adefefe7c68e882a0c07962248577"
  ],
  "changeHistoryShort": {
    "a22fe02fba66280a8e994282e9ead23d9e20669a": "Yfilerename",
    "efdc0070d880c7e1b778e0029a1b827ca962ce70": "Yfilerename",
    "c201cf951d5adefefe7c68e882a0c07962248577": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a22fe02fba66280a8e994282e9ead23d9e20669a": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-14261. Some refactoring work for erasure coding raw coder. Contributed by Lin Zeng.\n",
      "commitDate": "21/04/17 11:35 AM",
      "commitName": "a22fe02fba66280a8e994282e9ead23d9e20669a",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "20/04/17 10:33 PM",
      "commitNameOld": "b0803388fc5ec03b774aa003f52232deb8db6f69",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private \u003cT\u003e void adjustOrder(T[] inputs, T[] inputs2,\n                               int[] erasedIndexes, int[] erasedIndexes2,\n                               T[] outputs, T[] outputs2) {\n    // Example:\n    // d0 d1 d2 d3 d4 d5 : p0 p1 p2 \u003d\u003e p0 p1 p2 : d0 d1 d2 d3 d4 d5\n    System.arraycopy(inputs, getNumDataUnits(), inputs2,\n        0, getNumParityUnits());\n    System.arraycopy(inputs, 0, inputs2,\n        getNumParityUnits(), getNumDataUnits());\n\n    int numErasedDataUnits \u003d 0, numErasedParityUnits \u003d 0;\n    int idx \u003d 0;\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      if (erasedIndexes[i] \u003e\u003d getNumDataUnits()) {\n        erasedIndexes2[idx++] \u003d erasedIndexes[i] - getNumDataUnits();\n        numErasedParityUnits++;\n      }\n    }\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      if (erasedIndexes[i] \u003c getNumDataUnits()) {\n        erasedIndexes2[idx++] \u003d erasedIndexes[i] + getNumParityUnits();\n        numErasedDataUnits++;\n      }\n    }\n\n    // Copy for data units\n    System.arraycopy(outputs, numErasedDataUnits, outputs2,\n        0, numErasedParityUnits);\n    // Copy for parity units\n    System.arraycopy(outputs, 0, outputs2,\n        numErasedParityUnits, numErasedDataUnits);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSLegacyRawDecoder.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoderLegacy.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSLegacyRawDecoder.java"
      }
    },
    "efdc0070d880c7e1b778e0029a1b827ca962ce70": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-12808. Rename the RS coder from HDFS-RAID as legacy. Contributed by Rui Li.\n\nChange-Id: Icb64eb60833fe0139aadb6da9aa666f664defc0e\n",
      "commitDate": "24/02/16 2:29 PM",
      "commitName": "efdc0070d880c7e1b778e0029a1b827ca962ce70",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "24/02/16 1:55 PM",
      "commitNameOld": "d6b181c6faa56e43c9f05d2cc860a0aeb940fd90",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private \u003cT\u003e void adjustOrder(T[] inputs, T[] inputs2,\n                               int[] erasedIndexes, int[] erasedIndexes2,\n                               T[] outputs, T[] outputs2) {\n    // Example:\n    // d0 d1 d2 d3 d4 d5 : p0 p1 p2 \u003d\u003e p0 p1 p2 : d0 d1 d2 d3 d4 d5\n    System.arraycopy(inputs, getNumDataUnits(), inputs2,\n        0, getNumParityUnits());\n    System.arraycopy(inputs, 0, inputs2,\n        getNumParityUnits(), getNumDataUnits());\n\n    int numErasedDataUnits \u003d 0, numErasedParityUnits \u003d 0;\n    int idx \u003d 0;\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      if (erasedIndexes[i] \u003e\u003d getNumDataUnits()) {\n        erasedIndexes2[idx++] \u003d erasedIndexes[i] - getNumDataUnits();\n        numErasedParityUnits++;\n      }\n    }\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      if (erasedIndexes[i] \u003c getNumDataUnits()) {\n        erasedIndexes2[idx++] \u003d erasedIndexes[i] + getNumParityUnits();\n        numErasedDataUnits++;\n      }\n    }\n\n    // Copy for data units\n    System.arraycopy(outputs, numErasedDataUnits, outputs2,\n        0, numErasedParityUnits);\n    // Copy for parity units\n    System.arraycopy(outputs, 0, outputs2,\n        numErasedParityUnits, numErasedDataUnits);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoderLegacy.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoderLegacy.java"
      }
    },
    "c201cf951d5adefefe7c68e882a0c07962248577": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12040. Adjust inputs order for the decode API in raw erasure coder. (Kai Zheng via yliu)\n",
      "commitDate": "28/10/15 1:18 AM",
      "commitName": "c201cf951d5adefefe7c68e882a0c07962248577",
      "commitAuthor": "yliu",
      "diff": "@@ -0,0 +1,32 @@\n+  private \u003cT\u003e void adjustOrder(T[] inputs, T[] inputs2,\n+                               int[] erasedIndexes, int[] erasedIndexes2,\n+                               T[] outputs, T[] outputs2) {\n+    // Example:\n+    // d0 d1 d2 d3 d4 d5 : p0 p1 p2 \u003d\u003e p0 p1 p2 : d0 d1 d2 d3 d4 d5\n+    System.arraycopy(inputs, getNumDataUnits(), inputs2,\n+        0, getNumParityUnits());\n+    System.arraycopy(inputs, 0, inputs2,\n+        getNumParityUnits(), getNumDataUnits());\n+\n+    int numErasedDataUnits \u003d 0, numErasedParityUnits \u003d 0;\n+    int idx \u003d 0;\n+    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n+      if (erasedIndexes[i] \u003e\u003d getNumDataUnits()) {\n+        erasedIndexes2[idx++] \u003d erasedIndexes[i] - getNumDataUnits();\n+        numErasedParityUnits++;\n+      }\n+    }\n+    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n+      if (erasedIndexes[i] \u003c getNumDataUnits()) {\n+        erasedIndexes2[idx++] \u003d erasedIndexes[i] + getNumParityUnits();\n+        numErasedDataUnits++;\n+      }\n+    }\n+\n+    // Copy for data units\n+    System.arraycopy(outputs, numErasedDataUnits, outputs2,\n+        0, numErasedParityUnits);\n+    // Copy for parity units\n+    System.arraycopy(outputs, 0, outputs2,\n+        numErasedParityUnits, numErasedDataUnits);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private \u003cT\u003e void adjustOrder(T[] inputs, T[] inputs2,\n                               int[] erasedIndexes, int[] erasedIndexes2,\n                               T[] outputs, T[] outputs2) {\n    // Example:\n    // d0 d1 d2 d3 d4 d5 : p0 p1 p2 \u003d\u003e p0 p1 p2 : d0 d1 d2 d3 d4 d5\n    System.arraycopy(inputs, getNumDataUnits(), inputs2,\n        0, getNumParityUnits());\n    System.arraycopy(inputs, 0, inputs2,\n        getNumParityUnits(), getNumDataUnits());\n\n    int numErasedDataUnits \u003d 0, numErasedParityUnits \u003d 0;\n    int idx \u003d 0;\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      if (erasedIndexes[i] \u003e\u003d getNumDataUnits()) {\n        erasedIndexes2[idx++] \u003d erasedIndexes[i] - getNumDataUnits();\n        numErasedParityUnits++;\n      }\n    }\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      if (erasedIndexes[i] \u003c getNumDataUnits()) {\n        erasedIndexes2[idx++] \u003d erasedIndexes[i] + getNumParityUnits();\n        numErasedDataUnits++;\n      }\n    }\n\n    // Copy for data units\n    System.arraycopy(outputs, numErasedDataUnits, outputs2,\n        0, numErasedParityUnits);\n    // Copy for parity units\n    System.arraycopy(outputs, 0, outputs2,\n        numErasedParityUnits, numErasedDataUnits);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java"
    }
  }
}