{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKDelegationTokenSecretManager.java",
  "functionName": "getKeyFromZK",
  "functionId": "getKeyFromZK___keyId-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
  "functionStartLine": 635,
  "functionEndLine": 654,
  "numCommitsSeen": 16,
  "timeTaken": 856,
  "changeHistory": [
    "db890eef3208cc557476fa510f7a253ba22bc68a"
  ],
  "changeHistoryShort": {
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,20 @@\n+  private DelegationKey getKeyFromZK(int keyId) throws IOException {\n+    String nodePath \u003d\n+        getNodePath(ZK_DTSM_MASTER_KEY_ROOT, DELEGATION_KEY_PREFIX + keyId);\n+    try {\n+      byte[] data \u003d zkClient.getData().forPath(nodePath);\n+      if ((data \u003d\u003d null) || (data.length \u003d\u003d 0)) {\n+        return null;\n+      }\n+      ByteArrayInputStream bin \u003d new ByteArrayInputStream(data);\n+      DataInputStream din \u003d new DataInputStream(bin);\n+      DelegationKey key \u003d new DelegationKey();\n+      key.readFields(din);\n+      return key;\n+    } catch (KeeperException.NoNodeException e) {\n+      LOG.error(\"No node in path [\" + nodePath + \"]\");\n+    } catch (Exception ex) {\n+      throw new IOException(ex);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private DelegationKey getKeyFromZK(int keyId) throws IOException {\n    String nodePath \u003d\n        getNodePath(ZK_DTSM_MASTER_KEY_ROOT, DELEGATION_KEY_PREFIX + keyId);\n    try {\n      byte[] data \u003d zkClient.getData().forPath(nodePath);\n      if ((data \u003d\u003d null) || (data.length \u003d\u003d 0)) {\n        return null;\n      }\n      ByteArrayInputStream bin \u003d new ByteArrayInputStream(data);\n      DataInputStream din \u003d new DataInputStream(bin);\n      DelegationKey key \u003d new DelegationKey();\n      key.readFields(din);\n      return key;\n    } catch (KeeperException.NoNodeException e) {\n      LOG.error(\"No node in path [\" + nodePath + \"]\");\n    } catch (Exception ex) {\n      throw new IOException(ex);\n    }\n    return null;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java"
    }
  }
}