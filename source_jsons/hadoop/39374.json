{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GuaranteedOrZeroCapacityOverTimePolicy.java",
  "functionName": "initializeLeafQueueTemplate",
  "functionId": "initializeLeafQueueTemplate___parentQueue-ManagedParentQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
  "functionStartLine": 320,
  "functionEndLine": 343,
  "numCommitsSeen": 7,
  "timeTaken": 2973,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": "Ymultichange(Yexceptionschange,Ybodychange)",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "18/03/19 10:57 AM",
      "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 372.72,
      "commitsBetweenForRepo": 2179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue)\n       throws IOException {\n     leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n \n     leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n \n     Set\u003cString\u003e parentQueueLabels \u003d parentQueue.getNodeLabelsForQueue();\n     for (String nodeLabel : leafQueueTemplateCapacities\n         .getExistingNodeLabels()) {\n \n       if (!parentQueueLabels.contains(nodeLabel)) {\n         LOG.error(\"Invalid node label \" + nodeLabel\n             + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n-            .getQueueName());\n+            .getQueuePath());\n         throw new IOException(\"Invalid node label \" + nodeLabel\n             + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n-            .getQueueName());\n+            .getQueuePath());\n       }\n     }\n \n     leafQueueTemplateNodeLabels \u003d\n         leafQueueTemplateCapacities.getExistingNodeLabels();\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue)\n      throws IOException {\n    leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n\n    leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n\n    Set\u003cString\u003e parentQueueLabels \u003d parentQueue.getNodeLabelsForQueue();\n    for (String nodeLabel : leafQueueTemplateCapacities\n        .getExistingNodeLabels()) {\n\n      if (!parentQueueLabels.contains(nodeLabel)) {\n        LOG.error(\"Invalid node label \" + nodeLabel\n            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n            .getQueuePath());\n        throw new IOException(\"Invalid node label \" + nodeLabel\n            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n            .getQueuePath());\n      }\n    }\n\n    leafQueueTemplateNodeLabels \u003d\n        leafQueueTemplateCapacities.getExistingNodeLabels();\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
      "extendedDetails": {}
    },
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
      "commitDate": "09/04/18 8:47 AM",
      "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
          "commitDate": "09/04/18 8:47 AM",
          "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
          "commitAuthor": "Sunil G",
          "commitDateOld": "08/12/17 3:10 PM",
          "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 121.69,
          "commitsBetweenForRepo": 859,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,24 @@\n-  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue) {\n+  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue)\n+      throws IOException {\n     leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n \n     leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n \n-    ZERO_CAPACITY_ENTITLEMENT \u003d buildTemplate(0.0f,\n-        leafQueueTemplateCapacities.getMaximumCapacity());\n+    Set\u003cString\u003e parentQueueLabels \u003d parentQueue.getNodeLabelsForQueue();\n+    for (String nodeLabel : leafQueueTemplateCapacities\n+        .getExistingNodeLabels()) {\n+\n+      if (!parentQueueLabels.contains(nodeLabel)) {\n+        LOG.error(\"Invalid node label \" + nodeLabel\n+            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n+            .getQueueName());\n+        throw new IOException(\"Invalid node label \" + nodeLabel\n+            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n+            .getQueueName());\n+      }\n+    }\n+\n+    leafQueueTemplateNodeLabels \u003d\n+        leafQueueTemplateCapacities.getExistingNodeLabels();\n+\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue)\n      throws IOException {\n    leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n\n    leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n\n    Set\u003cString\u003e parentQueueLabels \u003d parentQueue.getNodeLabelsForQueue();\n    for (String nodeLabel : leafQueueTemplateCapacities\n        .getExistingNodeLabels()) {\n\n      if (!parentQueueLabels.contains(nodeLabel)) {\n        LOG.error(\"Invalid node label \" + nodeLabel\n            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n            .getQueueName());\n        throw new IOException(\"Invalid node label \" + nodeLabel\n            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n            .getQueueName());\n      }\n    }\n\n    leafQueueTemplateNodeLabels \u003d\n        leafQueueTemplateCapacities.getExistingNodeLabels();\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
          "commitDate": "09/04/18 8:47 AM",
          "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
          "commitAuthor": "Sunil G",
          "commitDateOld": "08/12/17 3:10 PM",
          "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 121.69,
          "commitsBetweenForRepo": 859,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,24 @@\n-  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue) {\n+  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue)\n+      throws IOException {\n     leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n \n     leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n \n-    ZERO_CAPACITY_ENTITLEMENT \u003d buildTemplate(0.0f,\n-        leafQueueTemplateCapacities.getMaximumCapacity());\n+    Set\u003cString\u003e parentQueueLabels \u003d parentQueue.getNodeLabelsForQueue();\n+    for (String nodeLabel : leafQueueTemplateCapacities\n+        .getExistingNodeLabels()) {\n+\n+      if (!parentQueueLabels.contains(nodeLabel)) {\n+        LOG.error(\"Invalid node label \" + nodeLabel\n+            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n+            .getQueueName());\n+        throw new IOException(\"Invalid node label \" + nodeLabel\n+            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n+            .getQueueName());\n+      }\n+    }\n+\n+    leafQueueTemplateNodeLabels \u003d\n+        leafQueueTemplateCapacities.getExistingNodeLabels();\n+\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue)\n      throws IOException {\n    leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n\n    leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n\n    Set\u003cString\u003e parentQueueLabels \u003d parentQueue.getNodeLabelsForQueue();\n    for (String nodeLabel : leafQueueTemplateCapacities\n        .getExistingNodeLabels()) {\n\n      if (!parentQueueLabels.contains(nodeLabel)) {\n        LOG.error(\"Invalid node label \" + nodeLabel\n            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n            .getQueueName());\n        throw new IOException(\"Invalid node label \" + nodeLabel\n            + \" on configured leaf template on parent\" + \" queue \" + parentQueue\n            .getQueueName());\n      }\n    }\n\n    leafQueueTemplateNodeLabels \u003d\n        leafQueueTemplateCapacities.getExistingNodeLabels();\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,8 @@\n+  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue) {\n+    leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n+\n+    leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n+\n+    ZERO_CAPACITY_ENTITLEMENT \u003d buildTemplate(0.0f,\n+        leafQueueTemplateCapacities.getMaximumCapacity());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeLeafQueueTemplate(ManagedParentQueue parentQueue) {\n    leafQueueTemplate \u003d parentQueue.getLeafQueueTemplate();\n\n    leafQueueTemplateCapacities \u003d leafQueueTemplate.getQueueCapacities();\n\n    ZERO_CAPACITY_ENTITLEMENT \u003d buildTemplate(0.0f,\n        leafQueueTemplateCapacities.getMaximumCapacity());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java"
    }
  }
}