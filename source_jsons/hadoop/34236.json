{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalizedResource.java",
  "functionName": "handle",
  "functionId": "handle___event-ResourceEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
  "functionStartLine": 189,
  "functionEndLine": 209,
  "numCommitsSeen": 22,
  "timeTaken": 10337,
  "changeHistory": [
    "9cf7401794def0d420876db5db20fcd76c52193f",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "54a81211ea8a03b7f6ec49b1a26960693ae9f273",
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4",
    "310aa4686eb697f0700a71d33106514c404dab1b",
    "0d9194df00fd68bfb7a8ba504b0cddd7d7c69b8a",
    "19295b36d90e26616accee73b1f7743aab5df692",
    "3e0203a3a428460c1eb9f0f265fb520737b64d55",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "68615600985dfadf067a4967a5e08c1421e7a1c8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "9cf7401794def0d420876db5db20fcd76c52193f": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "54a81211ea8a03b7f6ec49b1a26960693ae9f273": "Ybodychange",
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4": "Ybodychange",
    "310aa4686eb697f0700a71d33106514c404dab1b": "Ybodychange",
    "0d9194df00fd68bfb7a8ba504b0cddd7d7c69b8a": "Ybodychange",
    "19295b36d90e26616accee73b1f7743aab5df692": "Ybodychange",
    "3e0203a3a428460c1eb9f0f265fb520737b64d55": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "68615600985dfadf067a4967a5e08c1421e7a1c8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9cf7401794def0d420876db5db20fcd76c52193f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Improved log level practices for InvalidStateTransitionException.\n            Contributed by Anuhan Torgonshar\n\n(cherry picked from commit fe2370e039e1ee980d74769ae85d67434e0993cf)\n",
      "commitDate": "16/04/19 4:53 PM",
      "commitName": "9cf7401794def0d420876db5db20fcd76c52193f",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 32.02,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public void handle(ResourceEvent event) {\n     this.writeLock.lock();\n     try {\n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       LOG.debug(\"Processing {} of type {}\", resourcePath, event.getType());\n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n-        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n+        LOG.error(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         LOG.debug(\"Resource {}{} size : {} transitioned from {} to {}\",\n             resourcePath, (localPath !\u003d null ? \"(-\u003e\" + localPath + \")\": \"\"),\n             getSize(), oldState, newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    this.writeLock.lock();\n    try {\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing {} of type {}\", resourcePath, event.getType());\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        LOG.debug(\"Resource {}{} size : {} transitioned from {} to {}\",\n            resourcePath, (localPath !\u003d null ? \"(-\u003e\" + localPath + \")\": \"\"),\n            getSize(), oldState, newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,21 @@\n   public void handle(ResourceEvent event) {\n     this.writeLock.lock();\n     try {\n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n-      }\n+      LOG.debug(\"Processing {} of type {}\", resourcePath, event.getType());\n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n-              \"(-\u003e\" + localPath + \")\": \"\") + \" size : \" + getSize()\n-              + \" transitioned from \" + oldState + \" to \" + newState);\n-        }\n+        LOG.debug(\"Resource {}{} size : {} transitioned from {} to {}\",\n+            resourcePath, (localPath !\u003d null ? \"(-\u003e\" + localPath + \")\": \"\"),\n+            getSize(), oldState, newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    this.writeLock.lock();\n    try {\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing {} of type {}\", resourcePath, event.getType());\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        LOG.debug(\"Resource {}{} size : {} transitioned from {} to {}\",\n            resourcePath, (localPath !\u003d null ? \"(-\u003e\" + localPath + \")\": \"\"),\n            getSize(), oldState, newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "02/04/18 8:38 AM",
      "commitNameOld": "54a81211ea8a03b7f6ec49b1a26960693ae9f273",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 339.26,
      "commitsBetweenForRepo": 3132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   public void handle(ResourceEvent event) {\n+    this.writeLock.lock();\n     try {\n-      this.writeLock.lock();\n-\n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n       }\n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n               \"(-\u003e\" + localPath + \")\": \"\") + \" size : \" + getSize()\n               + \" transitioned from \" + oldState + \" to \" + newState);\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    this.writeLock.lock();\n    try {\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n      }\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n              \"(-\u003e\" + localPath + \")\": \"\") + \" size : \" + getSize()\n              + \" transitioned from \" + oldState + \" to \" + newState);\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "54a81211ea8a03b7f6ec49b1a26960693ae9f273": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8082. Include LocalizedResource size information in the NM download log for localization. Contributed by Kuhu Shukla\n",
      "commitDate": "02/04/18 8:38 AM",
      "commitName": "54a81211ea8a03b7f6ec49b1a26960693ae9f273",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "22/08/17 1:14 AM",
      "commitNameOld": "d5ff57a08fac983f8b5d201064ce07945f0f216e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 223.31,
      "commitsBetweenForRepo": 1759,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n       }\n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n-              \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n-              + \" to \" + newState);\n+              \"(-\u003e\" + localPath + \")\": \"\") + \" size : \" + getSize()\n+              + \" transitioned from \" + oldState + \" to \" + newState);\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n      }\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n              \"(-\u003e\" + localPath + \")\": \"\") + \" size : \" + getSize()\n              + \" transitioned from \" + oldState + \" to \" + newState);\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5257. Fix unreleased resources and null dereferences (yufeigu via rkanter)\n",
      "commitDate": "27/12/16 2:14 PM",
      "commitName": "9262797e86453fc04b7ca3710b73b21fcdf9e6b4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "01/11/16 2:21 AM",
      "commitNameOld": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 56.54,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n       }\n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n-      if (oldState !\u003d newState) {\n+      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n               \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n               + \" to \" + newState);\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n      }\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n              \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n              + \" to \" + newState);\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "310aa4686eb697f0700a71d33106514c404dab1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5805. Add isDebugEnabled check for debug logs in nodemanager (Bibin A Chundatt via Varun Saxena)\n",
      "commitDate": "01/11/16 2:21 AM",
      "commitName": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "13/04/16 5:45 PM",
      "commitNameOld": "0d9194df00fd68bfb7a8ba504b0cddd7d7c69b8a",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 201.36,
      "commitsBetweenForRepo": 1504,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n-      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n-\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n+      }\n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (oldState !\u003d newState) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n               \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n               + \" to \" + newState);\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n      }\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n              \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n              + \" to \" + newState);\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "0d9194df00fd68bfb7a8ba504b0cddd7d7c69b8a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4541. Change log message in LocalizedResource#handle() to DEBUG (rchiang via rkanter)\n",
      "commitDate": "13/04/16 5:45 PM",
      "commitName": "0d9194df00fd68bfb7a8ba504b0cddd7d7c69b8a",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "13/07/15 1:52 AM",
      "commitNameOld": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 275.66,
      "commitsBetweenForRepo": 1819,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n \n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (oldState !\u003d newState) {\n-        LOG.info(\"Resource \" + resourcePath + (localPath !\u003d null ? \n-          \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n-            + \" to \" + newState);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n+              \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n+              + \" to \" + newState);\n+        }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Resource \" + resourcePath + (localPath !\u003d null ?\n              \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n              + \" to \" + newState);\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "30/05/14 8:37 AM",
      "commitNameOld": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 408.72,
      "commitsBetweenForRepo": 3451,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n \n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n-      } catch (InvalidStateTransitonException e) {\n+      } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Resource \" + resourcePath + (localPath !\u003d null ? \n           \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Resource \" + resourcePath + (localPath !\u003d null ? \n          \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "3e0203a3a428460c1eb9f0f265fb520737b64d55": {
      "type": "Ybodychange",
      "commitMessage": "YARN-985. Nodemanager should log where a resource was localized (Ravi Prakash via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1511100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/08/13 12:51 PM",
      "commitName": "3e0203a3a428460c1eb9f0f265fb520737b64d55",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "16/07/13 4:44 PM",
      "commitNameOld": "6d12709b1924ab0bea94957573ca76ecf651c929",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.84,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n       LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n \n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (oldState !\u003d newState) {\n-        LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n-            + oldState\n+        LOG.info(\"Resource \" + resourcePath + (localPath !\u003d null ? \n+          \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Resource \" + resourcePath + (localPath !\u003d null ? \n          \"(-\u003e\" + localPath + \")\": \"\") + \" transitioned from \" + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java"
      }
    },
    "68615600985dfadf067a4967a5e08c1421e7a1c8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3692. yarn-resourcemanager out and log files can get big. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 2:23 PM",
      "commitName": "68615600985dfadf067a4967a5e08c1421e7a1c8",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "24/10/11 5:36 PM",
      "commitNameOld": "6217e54718fc0ba8845ef8cc5a558fe67d98c18e",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 86.91,
      "commitsBetweenForRepo": 489,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void handle(ResourceEvent event) {\n     try {\n       this.writeLock.lock();\n \n       Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n-      LOG.info(\"Processing \" + resourcePath + \" of type \" + event.getType());\n+      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n \n       ResourceState oldState \u003d this.stateMachine.getCurrentState();\n       ResourceState newState \u003d null;\n       try {\n         newState \u003d this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.debug(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.info(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  public void handle(ResourceEvent event) {\n+    try {\n+      this.writeLock.lock();\n+\n+      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n+      LOG.info(\"Processing \" + resourcePath + \" of type \" + event.getType());\n+\n+      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n+      ResourceState newState \u003d null;\n+      try {\n+        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitonException e) {\n+        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n+      }\n+      if (oldState !\u003d newState) {\n+        LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n+            + oldState\n+            + \" to \" + newState);\n+      }\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ResourceEvent event) {\n    try {\n      this.writeLock.lock();\n\n      Path resourcePath \u003d event.getLocalResourceRequest().getPath();\n      LOG.info(\"Processing \" + resourcePath + \" of type \" + event.getType());\n\n      ResourceState oldState \u003d this.stateMachine.getCurrentState();\n      ResourceState newState \u003d null;\n      try {\n        newState \u003d this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Resource \" + resourcePath + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java"
    }
  }
}