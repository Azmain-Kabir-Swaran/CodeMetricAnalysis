{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineStorageMonitor.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineStorageMonitor.java",
  "functionStartLine": 86,
  "functionEndLine": 99,
  "numCommitsSeen": 7,
  "timeTaken": 4051,
  "changeHistory": [
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
    "0d24684eee77dce7fd328d5e9479345e30b699ee",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "ba683204498c97654be4727ab9e128c433a45498"
  ],
  "changeHistoryShort": {
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58": "Ymultichange(Ymovefromfile,Ybodychange)",
    "0d24684eee77dce7fd328d5e9479345e30b699ee": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "ba683204498c97654be4727ab9e128c433a45498": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-8499 ATSv2 Generalize TimelineStorageMonitor.\n           Contributed by Prabhu Joseph\n",
      "commitDate": "14/06/19 3:59 PM",
      "commitName": "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-8499 ATSv2 Generalize TimelineStorageMonitor.\n           Contributed by Prabhu Joseph\n",
          "commitDate": "14/06/19 3:59 PM",
          "commitName": "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "14/06/19 2:36 PM",
          "commitNameOld": "c7554ffd5c5ea45aac434c44d543ac4d966eca43",
          "commitAuthorOld": "dineshchitlangia",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,14 @@\n     public void run() {\n       try {\n-        LOG.debug(\"Running HBase liveness monitor\");\n-        TimelineEntityReader reader \u003d\n-            TimelineEntityReaderFactory.createMultipleEntitiesReader(\n-                monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n-        reader.readEntities(monitorHBaseConf, monitorConn);\n-\n-        // on success, reset hbase down flag\n-        if (hbaseDown.getAndSet(false)) {\n-          LOG.debug(\"HBase request succeeded, assuming HBase up\");\n+        LOG.debug(\"Running Timeline Storage monitor\");\n+        healthCheck();\n+        if (storageDown.getAndSet(false)) {\n+          LOG.debug(\"{} health check succeeded, \" +\n+              \"assuming storage is up\", storage);\n         }\n       } catch (Exception e) {\n-        LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n-            \"assuming HBase down\", e);\n-        hbaseDown.getAndSet(true);\n+        LOG.warn(String.format(\"Got failure attempting to read from %s, \" +\n+            \"assuming Storage is down\", storage), e);\n+        storageDown.getAndSet(true);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      try {\n        LOG.debug(\"Running Timeline Storage monitor\");\n        healthCheck();\n        if (storageDown.getAndSet(false)) {\n          LOG.debug(\"{} health check succeeded, \" +\n              \"assuming storage is up\", storage);\n        }\n      } catch (Exception e) {\n        LOG.warn(String.format(\"Got failure attempting to read from %s, \" +\n            \"assuming Storage is down\", storage), e);\n        storageDown.getAndSet(true);\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineStorageMonitor.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineStorageMonitor.java",
            "oldMethodName": "run",
            "newMethodName": "run"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8499 ATSv2 Generalize TimelineStorageMonitor.\n           Contributed by Prabhu Joseph\n",
          "commitDate": "14/06/19 3:59 PM",
          "commitName": "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "14/06/19 2:36 PM",
          "commitNameOld": "c7554ffd5c5ea45aac434c44d543ac4d966eca43",
          "commitAuthorOld": "dineshchitlangia",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,14 @@\n     public void run() {\n       try {\n-        LOG.debug(\"Running HBase liveness monitor\");\n-        TimelineEntityReader reader \u003d\n-            TimelineEntityReaderFactory.createMultipleEntitiesReader(\n-                monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n-        reader.readEntities(monitorHBaseConf, monitorConn);\n-\n-        // on success, reset hbase down flag\n-        if (hbaseDown.getAndSet(false)) {\n-          LOG.debug(\"HBase request succeeded, assuming HBase up\");\n+        LOG.debug(\"Running Timeline Storage monitor\");\n+        healthCheck();\n+        if (storageDown.getAndSet(false)) {\n+          LOG.debug(\"{} health check succeeded, \" +\n+              \"assuming storage is up\", storage);\n         }\n       } catch (Exception e) {\n-        LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n-            \"assuming HBase down\", e);\n-        hbaseDown.getAndSet(true);\n+        LOG.warn(String.format(\"Got failure attempting to read from %s, \" +\n+            \"assuming Storage is down\", storage), e);\n+        storageDown.getAndSet(true);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      try {\n        LOG.debug(\"Running Timeline Storage monitor\");\n        healthCheck();\n        if (storageDown.getAndSet(false)) {\n          LOG.debug(\"{} health check succeeded, \" +\n              \"assuming storage is up\", storage);\n        }\n      } catch (Exception e) {\n        LOG.warn(String.format(\"Got failure attempting to read from %s, \" +\n            \"assuming Storage is down\", storage), e);\n        storageDown.getAndSet(true);\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineStorageMonitor.java",
          "extendedDetails": {}
        }
      ]
    },
    "0d24684eee77dce7fd328d5e9479345e30b699ee": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9357. Modify HBase Liveness monitor log to debug. Contributed by Prabhu Joseph.\n",
      "commitDate": "20/03/19 8:52 AM",
      "commitName": "0d24684eee77dce7fd328d5e9479345e30b699ee",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 4.69,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void run() {\n       try {\n-        LOG.info(\"Running HBase liveness monitor\");\n+        LOG.debug(\"Running HBase liveness monitor\");\n         TimelineEntityReader reader \u003d\n             TimelineEntityReaderFactory.createMultipleEntitiesReader(\n                 monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n         reader.readEntities(monitorHBaseConf, monitorConn);\n \n         // on success, reset hbase down flag\n         if (hbaseDown.getAndSet(false)) {\n           LOG.debug(\"HBase request succeeded, assuming HBase up\");\n         }\n       } catch (Exception e) {\n         LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n             \"assuming HBase down\", e);\n         hbaseDown.getAndSet(true);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        LOG.debug(\"Running HBase liveness monitor\");\n        TimelineEntityReader reader \u003d\n            TimelineEntityReaderFactory.createMultipleEntitiesReader(\n                monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n        reader.readEntities(monitorHBaseConf, monitorConn);\n\n        // on success, reset hbase down flag\n        if (hbaseDown.getAndSet(false)) {\n          LOG.debug(\"HBase request succeeded, assuming HBase up\");\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n            \"assuming HBase down\", e);\n        hbaseDown.getAndSet(true);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/07/18 3:19 PM",
      "commitNameOld": "ba683204498c97654be4727ab9e128c433a45498",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 252.04,
      "commitsBetweenForRepo": 2011,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n     public void run() {\n       try {\n         LOG.info(\"Running HBase liveness monitor\");\n         TimelineEntityReader reader \u003d\n             TimelineEntityReaderFactory.createMultipleEntitiesReader(\n                 monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n         reader.readEntities(monitorHBaseConf, monitorConn);\n \n         // on success, reset hbase down flag\n         if (hbaseDown.getAndSet(false)) {\n-          if(LOG.isDebugEnabled()) {\n-            LOG.debug(\"HBase request succeeded, assuming HBase up\");\n-          }\n+          LOG.debug(\"HBase request succeeded, assuming HBase up\");\n         }\n       } catch (Exception e) {\n         LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n             \"assuming HBase down\", e);\n         hbaseDown.getAndSet(true);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        LOG.info(\"Running HBase liveness monitor\");\n        TimelineEntityReader reader \u003d\n            TimelineEntityReaderFactory.createMultipleEntitiesReader(\n                monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n        reader.readEntities(monitorHBaseConf, monitorConn);\n\n        // on success, reset hbase down flag\n        if (hbaseDown.getAndSet(false)) {\n          LOG.debug(\"HBase request succeeded, assuming HBase up\");\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n            \"assuming HBase down\", e);\n        hbaseDown.getAndSet(true);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "ba683204498c97654be4727ab9e128c433a45498": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8302. ATS v2 should handle HBase connection issue properly. Contributed by Billie Rinaldi.\n",
      "commitDate": "06/07/18 3:19 PM",
      "commitName": "ba683204498c97654be4727ab9e128c433a45498",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,20 @@\n+    public void run() {\n+      try {\n+        LOG.info(\"Running HBase liveness monitor\");\n+        TimelineEntityReader reader \u003d\n+            TimelineEntityReaderFactory.createMultipleEntitiesReader(\n+                monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n+        reader.readEntities(monitorHBaseConf, monitorConn);\n+\n+        // on success, reset hbase down flag\n+        if (hbaseDown.getAndSet(false)) {\n+          if(LOG.isDebugEnabled()) {\n+            LOG.debug(\"HBase request succeeded, assuming HBase up\");\n+          }\n+        }\n+      } catch (Exception e) {\n+        LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n+            \"assuming HBase down\", e);\n+        hbaseDown.getAndSet(true);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        LOG.info(\"Running HBase liveness monitor\");\n        TimelineEntityReader reader \u003d\n            TimelineEntityReaderFactory.createMultipleEntitiesReader(\n                monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n        reader.readEntities(monitorHBaseConf, monitorConn);\n\n        // on success, reset hbase down flag\n        if (hbaseDown.getAndSet(false)) {\n          if(LOG.isDebugEnabled()) {\n            LOG.debug(\"HBase request succeeded, assuming HBase up\");\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Got failure attempting to read from timeline storage, \" +\n            \"assuming HBase down\", e);\n        hbaseDown.getAndSet(true);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java"
    }
  }
}