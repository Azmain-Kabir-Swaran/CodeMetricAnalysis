{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ViewFileSystemOverloadScheme.java",
  "functionName": "createFileSystem",
  "functionId": "createFileSystem___uri-URI__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystemOverloadScheme.java",
  "functionStartLine": 193,
  "functionEndLine": 207,
  "numCommitsSeen": 2,
  "timeTaken": 763,
  "changeHistory": [
    "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe"
  ],
  "changeHistoryShort": {
    "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15305. Extend ViewFS and provide ViewFileSystemOverloadScheme implementation with scheme configurable. Contributed by Uma Maheswara Rao G.\n\n",
      "commitDate": "04/05/20 5:55 PM",
      "commitName": "9c8236d04dfc3d4cefe7a00b63625f60ee232cfe",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,15 @@\n+      private FileSystem createFileSystem(URI uri, Configuration conf)\n+          throws IOException {\n+        final String fsImplConf \u003d String.format(\n+            FsConstants.FS_VIEWFS_OVERLOAD_SCHEME_TARGET_FS_IMPL_PATTERN,\n+            uri.getScheme());\n+        Class\u003c?\u003e clazz \u003d conf.getClass(fsImplConf, null);\n+        if (clazz \u003d\u003d null) {\n+          throw new UnsupportedFileSystemException(\n+              String.format(\"%s\u003dnull: %s: %s\", fsImplConf,\n+                  \"No overload scheme fs configured\", uri.getScheme()));\n+        }\n+        FileSystem fs \u003d (FileSystem) newInstance(clazz, uri, conf);\n+        fs.initialize(uri, conf);\n+        return fs;\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      private FileSystem createFileSystem(URI uri, Configuration conf)\n          throws IOException {\n        final String fsImplConf \u003d String.format(\n            FsConstants.FS_VIEWFS_OVERLOAD_SCHEME_TARGET_FS_IMPL_PATTERN,\n            uri.getScheme());\n        Class\u003c?\u003e clazz \u003d conf.getClass(fsImplConf, null);\n        if (clazz \u003d\u003d null) {\n          throw new UnsupportedFileSystemException(\n              String.format(\"%s\u003dnull: %s: %s\", fsImplConf,\n                  \"No overload scheme fs configured\", uri.getScheme()));\n        }\n        FileSystem fs \u003d (FileSystem) newInstance(clazz, uri, conf);\n        fs.initialize(uri, conf);\n        return fs;\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystemOverloadScheme.java"
    }
  }
}