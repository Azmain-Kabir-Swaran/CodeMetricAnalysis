{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "loadResourceTrackerState",
  "functionId": "loadResourceTrackerState___keyPrefix-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 855,
  "functionEndLine": 866,
  "numCommitsSeen": 83,
  "timeTaken": 3347,
  "changeHistory": [
    "250b50018e8c94d8ca83ff981b01f26bb68c0842",
    "66598697a6e777615334ebde5ba7738135da83ae"
  ],
  "changeHistoryShort": {
    "250b50018e8c94d8ca83ff981b01f26bb68c0842": "Ymultichange(Yparameterchange,Ybodychange)",
    "66598697a6e777615334ebde5ba7738135da83ae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "250b50018e8c94d8ca83ff981b01f26bb68c0842": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
      "commitDate": "13/09/18 11:28 AM",
      "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
          "commitDate": "13/09/18 11:28 AM",
          "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "20/08/18 8:14 AM",
          "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,12 @@\n-  private LocalResourceTrackerState loadResourceTrackerState(\n-      LeveldbIterator iter, String keyPrefix) throws IOException {\n+  private LocalResourceTrackerState loadResourceTrackerState(String keyPrefix)\n+      throws IOException {\n     final String completedPrefix \u003d keyPrefix + LOCALIZATION_COMPLETED_SUFFIX;\n     final String startedPrefix \u003d keyPrefix + LOCALIZATION_STARTED_SUFFIX;\n-    LocalResourceTrackerState state \u003d new LocalResourceTrackerState();\n-    while (iter.hasNext()) {\n-      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.peekNext();\n-      String key \u003d asString(entry.getKey());\n-      if (!key.startsWith(keyPrefix)) {\n-        break;\n-      }\n \n-      if (key.startsWith(completedPrefix)) {\n-        state.localizedResources \u003d loadCompletedResources(iter,\n-            completedPrefix);\n-      } else if (key.startsWith(startedPrefix)) {\n-        state.inProgressResources \u003d loadStartedResources(iter, startedPrefix);\n-      } else {\n-        throw new IOException(\"Unexpected key in resource tracker state: \"\n-            + key);\n-      }\n-    }\n+    RecoveryIterator\u003cLocalizedResourceProto\u003e crIt \u003d\n+        new CompletedResourcesIterator(completedPrefix);\n+    RecoveryIterator\u003cEntry\u003cLocalResourceProto, Path\u003e\u003e srIt \u003d\n+        new StartedResourcesIterator(startedPrefix);\n \n-    return state;\n+    return new LocalResourceTrackerState(crIt, srIt);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocalResourceTrackerState loadResourceTrackerState(String keyPrefix)\n      throws IOException {\n    final String completedPrefix \u003d keyPrefix + LOCALIZATION_COMPLETED_SUFFIX;\n    final String startedPrefix \u003d keyPrefix + LOCALIZATION_STARTED_SUFFIX;\n\n    RecoveryIterator\u003cLocalizedResourceProto\u003e crIt \u003d\n        new CompletedResourcesIterator(completedPrefix);\n    RecoveryIterator\u003cEntry\u003cLocalResourceProto, Path\u003e\u003e srIt \u003d\n        new StartedResourcesIterator(startedPrefix);\n\n    return new LocalResourceTrackerState(crIt, srIt);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "[iter-LeveldbIterator, keyPrefix-String]",
            "newValue": "[keyPrefix-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
          "commitDate": "13/09/18 11:28 AM",
          "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "20/08/18 8:14 AM",
          "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,12 @@\n-  private LocalResourceTrackerState loadResourceTrackerState(\n-      LeveldbIterator iter, String keyPrefix) throws IOException {\n+  private LocalResourceTrackerState loadResourceTrackerState(String keyPrefix)\n+      throws IOException {\n     final String completedPrefix \u003d keyPrefix + LOCALIZATION_COMPLETED_SUFFIX;\n     final String startedPrefix \u003d keyPrefix + LOCALIZATION_STARTED_SUFFIX;\n-    LocalResourceTrackerState state \u003d new LocalResourceTrackerState();\n-    while (iter.hasNext()) {\n-      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.peekNext();\n-      String key \u003d asString(entry.getKey());\n-      if (!key.startsWith(keyPrefix)) {\n-        break;\n-      }\n \n-      if (key.startsWith(completedPrefix)) {\n-        state.localizedResources \u003d loadCompletedResources(iter,\n-            completedPrefix);\n-      } else if (key.startsWith(startedPrefix)) {\n-        state.inProgressResources \u003d loadStartedResources(iter, startedPrefix);\n-      } else {\n-        throw new IOException(\"Unexpected key in resource tracker state: \"\n-            + key);\n-      }\n-    }\n+    RecoveryIterator\u003cLocalizedResourceProto\u003e crIt \u003d\n+        new CompletedResourcesIterator(completedPrefix);\n+    RecoveryIterator\u003cEntry\u003cLocalResourceProto, Path\u003e\u003e srIt \u003d\n+        new StartedResourcesIterator(startedPrefix);\n \n-    return state;\n+    return new LocalResourceTrackerState(crIt, srIt);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocalResourceTrackerState loadResourceTrackerState(String keyPrefix)\n      throws IOException {\n    final String completedPrefix \u003d keyPrefix + LOCALIZATION_COMPLETED_SUFFIX;\n    final String startedPrefix \u003d keyPrefix + LOCALIZATION_STARTED_SUFFIX;\n\n    RecoveryIterator\u003cLocalizedResourceProto\u003e crIt \u003d\n        new CompletedResourcesIterator(completedPrefix);\n    RecoveryIterator\u003cEntry\u003cLocalResourceProto, Path\u003e\u003e srIt \u003d\n        new StartedResourcesIterator(startedPrefix);\n\n    return new LocalResourceTrackerState(crIt, srIt);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,25 @@\n+  private LocalResourceTrackerState loadResourceTrackerState(\n+      LeveldbIterator iter, String keyPrefix) throws IOException {\n+    final String completedPrefix \u003d keyPrefix + LOCALIZATION_COMPLETED_SUFFIX;\n+    final String startedPrefix \u003d keyPrefix + LOCALIZATION_STARTED_SUFFIX;\n+    LocalResourceTrackerState state \u003d new LocalResourceTrackerState();\n+    while (iter.hasNext()) {\n+      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n+      String key \u003d asString(entry.getKey());\n+      if (!key.startsWith(keyPrefix)) {\n+        break;\n+      }\n+\n+      if (key.startsWith(completedPrefix)) {\n+        state.localizedResources \u003d loadCompletedResources(iter,\n+            completedPrefix);\n+      } else if (key.startsWith(startedPrefix)) {\n+        state.inProgressResources \u003d loadStartedResources(iter, startedPrefix);\n+      } else {\n+        throw new IOException(\"Unexpected key in resource tracker state: \"\n+            + key);\n+      }\n+    }\n+\n+    return state;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private LocalResourceTrackerState loadResourceTrackerState(\n      LeveldbIterator iter, String keyPrefix) throws IOException {\n    final String completedPrefix \u003d keyPrefix + LOCALIZATION_COMPLETED_SUFFIX;\n    final String startedPrefix \u003d keyPrefix + LOCALIZATION_STARTED_SUFFIX;\n    LocalResourceTrackerState state \u003d new LocalResourceTrackerState();\n    while (iter.hasNext()) {\n      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n      String key \u003d asString(entry.getKey());\n      if (!key.startsWith(keyPrefix)) {\n        break;\n      }\n\n      if (key.startsWith(completedPrefix)) {\n        state.localizedResources \u003d loadCompletedResources(iter,\n            completedPrefix);\n      } else if (key.startsWith(startedPrefix)) {\n        state.inProgressResources \u003d loadStartedResources(iter, startedPrefix);\n      } else {\n        throw new IOException(\"Unexpected key in resource tracker state: \"\n            + key);\n      }\n    }\n\n    return state;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}