{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuditReplayMapper.java",
  "functionName": "getConfigDescriptions",
  "functionId": "getConfigDescriptions",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java",
  "functionStartLine": 184,
  "functionEndLine": 199,
  "numCommitsSeen": 3,
  "timeTaken": 877,
  "changeHistory": [
    "477505ccfc480f2605a7b65de95ea6f6ff5ce090",
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "477505ccfc480f2605a7b65de95ea6f6ff5ce090": "Ybodychange",
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "477505ccfc480f2605a7b65de95ea6f6ff5ce090": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14824. [Dynamometer] Dynamometer in org.apache.hadoop.tools does not output the benchmark results. (#1685)\n\n\r\n",
      "commitDate": "01/11/19 9:32 AM",
      "commitName": "477505ccfc480f2605a7b65de95ea6f6ff5ce090",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "08/07/19 5:44 PM",
      "commitNameOld": "738c09349eb6178065797fc9cd624bf5e2285069",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 115.66,
      "commitsBetweenForRepo": 909,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public List\u003cString\u003e getConfigDescriptions() {\n     return Lists.newArrayList(\n         INPUT_PATH_KEY\n             + \" (required): Path to directory containing input files.\",\n+        OUTPUT_PATH_KEY + \" (required): Path to destination for output files.\",\n         NUM_THREADS_KEY + \" (default \" + NUM_THREADS_DEFAULT\n             + \"): Number of threads to use per mapper for replay.\",\n         CREATE_BLOCKS_KEY + \" (default \" + CREATE_BLOCKS_DEFAULT\n             + \"): Whether or not to create 1-byte blocks when \"\n             + \"performing `create` commands.\",\n         RATE_FACTOR_KEY + \" (default \" + RATE_FACTOR_DEFAULT\n             + \"): Multiplicative speed at which to replay the audit \"\n             + \"log; e.g. a value of 2.0 would make the replay occur at \"\n             + \"twice the original speed. This can be useful \"\n             + \"to induce heavier loads.\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e getConfigDescriptions() {\n    return Lists.newArrayList(\n        INPUT_PATH_KEY\n            + \" (required): Path to directory containing input files.\",\n        OUTPUT_PATH_KEY + \" (required): Path to destination for output files.\",\n        NUM_THREADS_KEY + \" (default \" + NUM_THREADS_DEFAULT\n            + \"): Number of threads to use per mapper for replay.\",\n        CREATE_BLOCKS_KEY + \" (default \" + CREATE_BLOCKS_DEFAULT\n            + \"): Whether or not to create 1-byte blocks when \"\n            + \"performing `create` commands.\",\n        RATE_FACTOR_KEY + \" (default \" + RATE_FACTOR_DEFAULT\n            + \"): Multiplicative speed at which to replay the audit \"\n            + \"log; e.g. a value of 2.0 would make the replay occur at \"\n            + \"twice the original speed. This can be useful \"\n            + \"to induce heavier loads.\");\n  }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java",
      "extendedDetails": {}
    },
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,15 @@\n+  public List\u003cString\u003e getConfigDescriptions() {\n+    return Lists.newArrayList(\n+        INPUT_PATH_KEY\n+            + \" (required): Path to directory containing input files.\",\n+        NUM_THREADS_KEY + \" (default \" + NUM_THREADS_DEFAULT\n+            + \"): Number of threads to use per mapper for replay.\",\n+        CREATE_BLOCKS_KEY + \" (default \" + CREATE_BLOCKS_DEFAULT\n+            + \"): Whether or not to create 1-byte blocks when \"\n+            + \"performing `create` commands.\",\n+        RATE_FACTOR_KEY + \" (default \" + RATE_FACTOR_DEFAULT\n+            + \"): Multiplicative speed at which to replay the audit \"\n+            + \"log; e.g. a value of 2.0 would make the replay occur at \"\n+            + \"twice the original speed. This can be useful \"\n+            + \"to induce heavier loads.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e getConfigDescriptions() {\n    return Lists.newArrayList(\n        INPUT_PATH_KEY\n            + \" (required): Path to directory containing input files.\",\n        NUM_THREADS_KEY + \" (default \" + NUM_THREADS_DEFAULT\n            + \"): Number of threads to use per mapper for replay.\",\n        CREATE_BLOCKS_KEY + \" (default \" + CREATE_BLOCKS_DEFAULT\n            + \"): Whether or not to create 1-byte blocks when \"\n            + \"performing `create` commands.\",\n        RATE_FACTOR_KEY + \" (default \" + RATE_FACTOR_DEFAULT\n            + \"): Multiplicative speed at which to replay the audit \"\n            + \"log; e.g. a value of 2.0 would make the replay occur at \"\n            + \"twice the original speed. This can be useful \"\n            + \"to induce heavier loads.\");\n  }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-workload/src/main/java/org/apache/hadoop/tools/dynamometer/workloadgenerator/audit/AuditReplayMapper.java"
    }
  }
}