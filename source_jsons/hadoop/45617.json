{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AggregatedLogFormat.java",
  "functionName": "getPendingLogFilesToUploadForThisContainer",
  "functionId": "getPendingLogFilesToUploadForThisContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
  "functionStartLine": 212,
  "functionEndLine": 229,
  "numCommitsSeen": 47,
  "timeTaken": 2511,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "e07519b8dbb96d73c48e910a4de12563c5c2f8aa",
    "34cdcaad71cad76c0874a4e5266b4074009d2ffc"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "e07519b8dbb96d73c48e910a4de12563c5c2f8aa": "Ymodifierchange",
    "34cdcaad71cad76c0874a4e5266b4074009d2ffc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "01/06/16 1:44 PM",
      "commitNameOld": "0bc05e40fa7e183efe8463ada459c621da3ce3bf",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 13.06,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,18 @@\n     public Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n       Set\u003cFile\u003e pendingUploadFiles \u003d new HashSet\u003cFile\u003e();\n       for (String rootLogDir : this.rootLogDirs) {\n-        File appLogDir \u003d\n-            new File(rootLogDir, \n-                ConverterUtils.toString(\n-                    this.containerId.getApplicationAttemptId().\n-                        getApplicationId())\n-                );\n+        File appLogDir \u003d new File(rootLogDir,\n+            this.containerId.getApplicationAttemptId().\n+                getApplicationId().toString());\n         File containerLogDir \u003d\n-            new File(appLogDir, ConverterUtils.toString(this.containerId));\n+            new File(appLogDir, this.containerId.toString());\n \n         if (!containerLogDir.isDirectory()) {\n           continue; // ContainerDir may have been deleted by the user.\n         }\n \n         pendingUploadFiles\n           .addAll(getPendingLogFilesToUpload(containerLogDir));\n       }\n       return pendingUploadFiles;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n      Set\u003cFile\u003e pendingUploadFiles \u003d new HashSet\u003cFile\u003e();\n      for (String rootLogDir : this.rootLogDirs) {\n        File appLogDir \u003d new File(rootLogDir,\n            this.containerId.getApplicationAttemptId().\n                getApplicationId().toString());\n        File containerLogDir \u003d\n            new File(appLogDir, this.containerId.toString());\n\n        if (!containerLogDir.isDirectory()) {\n          continue; // ContainerDir may have been deleted by the user.\n        }\n\n        pendingUploadFiles\n          .addAll(getPendingLogFilesToUpload(containerLogDir));\n      }\n      return pendingUploadFiles;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {}
    },
    "e07519b8dbb96d73c48e910a4de12563c5c2f8aa": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4766. NM should not aggregate logs older than the retention policy (haibochen via rkanter)\n",
      "commitDate": "25/05/16 10:25 AM",
      "commitName": "e07519b8dbb96d73c48e910a4de12563c5c2f8aa",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "04/05/16 2:16 PM",
      "commitNameOld": "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.84,
      "commitsBetweenForRepo": 150,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-    private Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n+    public Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n       Set\u003cFile\u003e pendingUploadFiles \u003d new HashSet\u003cFile\u003e();\n       for (String rootLogDir : this.rootLogDirs) {\n         File appLogDir \u003d\n             new File(rootLogDir, \n                 ConverterUtils.toString(\n                     this.containerId.getApplicationAttemptId().\n                         getApplicationId())\n                 );\n         File containerLogDir \u003d\n             new File(appLogDir, ConverterUtils.toString(this.containerId));\n \n         if (!containerLogDir.isDirectory()) {\n           continue; // ContainerDir may have been deleted by the user.\n         }\n \n         pendingUploadFiles\n           .addAll(getPendingLogFilesToUpload(containerLogDir));\n       }\n       return pendingUploadFiles;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n      Set\u003cFile\u003e pendingUploadFiles \u003d new HashSet\u003cFile\u003e();\n      for (String rootLogDir : this.rootLogDirs) {\n        File appLogDir \u003d\n            new File(rootLogDir, \n                ConverterUtils.toString(\n                    this.containerId.getApplicationAttemptId().\n                        getApplicationId())\n                );\n        File containerLogDir \u003d\n            new File(appLogDir, ConverterUtils.toString(this.containerId));\n\n        if (!containerLogDir.isDirectory()) {\n          continue; // ContainerDir may have been deleted by the user.\n        }\n\n        pendingUploadFiles\n          .addAll(getPendingLogFilesToUpload(containerLogDir));\n      }\n      return pendingUploadFiles;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "34cdcaad71cad76c0874a4e5266b4074009d2ffc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2468. Enhanced NodeManager to support log handling APIs (YARN-2569) for use by long running services. Contributed by Xuan Gong.\n",
      "commitDate": "03/10/14 12:15 PM",
      "commitName": "34cdcaad71cad76c0874a4e5266b4074009d2ffc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+    private Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n+      Set\u003cFile\u003e pendingUploadFiles \u003d new HashSet\u003cFile\u003e();\n+      for (String rootLogDir : this.rootLogDirs) {\n+        File appLogDir \u003d\n+            new File(rootLogDir, \n+                ConverterUtils.toString(\n+                    this.containerId.getApplicationAttemptId().\n+                        getApplicationId())\n+                );\n+        File containerLogDir \u003d\n+            new File(appLogDir, ConverterUtils.toString(this.containerId));\n+\n+        if (!containerLogDir.isDirectory()) {\n+          continue; // ContainerDir may have been deleted by the user.\n+        }\n+\n+        pendingUploadFiles\n+          .addAll(getPendingLogFilesToUpload(containerLogDir));\n+      }\n+      return pendingUploadFiles;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cFile\u003e getPendingLogFilesToUploadForThisContainer() {\n      Set\u003cFile\u003e pendingUploadFiles \u003d new HashSet\u003cFile\u003e();\n      for (String rootLogDir : this.rootLogDirs) {\n        File appLogDir \u003d\n            new File(rootLogDir, \n                ConverterUtils.toString(\n                    this.containerId.getApplicationAttemptId().\n                        getApplicationId())\n                );\n        File containerLogDir \u003d\n            new File(appLogDir, ConverterUtils.toString(this.containerId));\n\n        if (!containerLogDir.isDirectory()) {\n          continue; // ContainerDir may have been deleted by the user.\n        }\n\n        pendingUploadFiles\n          .addAll(getPendingLogFilesToUpload(containerLogDir));\n      }\n      return pendingUploadFiles;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java"
    }
  }
}