{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsVolumeList.java",
  "functionName": "getAllVolumesMap",
  "functionId": "getAllVolumesMap___bpid-String(modifiers-final)__volumeMap-ReplicaMap(modifiers-final)__ramDiskReplicaMap-RamDiskReplicaTracker(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
  "functionStartLine": 187,
  "functionEndLine": 230,
  "numCommitsSeen": 57,
  "timeTaken": 4785,
  "changeHistory": [
    "b0799148cf6e92be540f5665bb571418b916d789",
    "34b14061b38dccab25058dff1b8743d8a3f82734",
    "5689355783de005ebc604f4403dc5129a286bfca",
    "b09a03cd7d26cf96ec26a81ba11f00778241eb3e",
    "533a2be5ac7c7f0473fdd24d6201582d08964e21",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c",
    "3b173d95171d01ab55042b1162569d1cf14a8d43",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142"
  ],
  "changeHistoryShort": {
    "b0799148cf6e92be540f5665bb571418b916d789": "Ybodychange",
    "34b14061b38dccab25058dff1b8743d8a3f82734": "Ybodychange",
    "5689355783de005ebc604f4403dc5129a286bfca": "Ybodychange",
    "b09a03cd7d26cf96ec26a81ba11f00778241eb3e": "Ybodychange",
    "533a2be5ac7c7f0473fdd24d6201582d08964e21": "Ybodychange",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": "Ybodychange",
    "3b173d95171d01ab55042b1162569d1cf14a8d43": "Ybodychange",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "b0799148cf6e92be540f5665bb571418b916d789": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14459. ClosedChannelException silently ignored in FsVolumeList.addBlockPool(). Contributed by Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "08/08/19 1:36 PM",
      "commitName": "b0799148cf6e92be540f5665bb571418b916d789",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "12/03/19 10:17 AM",
      "commitNameOld": "34b14061b38dccab25058dff1b8743d8a3f82734",
      "commitAuthorOld": "Stephen O\u0027Donnell",
      "daysBetweenCommits": 149.14,
      "commitsBetweenForRepo": 1073,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,44 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final Map\u003cFsVolumeSpi, IOException\u003e unhealthyDataDirs \u003d\n         new ConcurrentHashMap\u003cFsVolumeSpi, IOException\u003e();\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try (FsVolumeReference ref \u003d v.obtainReference()) {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n-          } catch (ClosedChannelException e) {\n-            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n-                \"adding replicas, ignored.\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             unhealthyDataDirs.put(v, ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG\n         .info(\"Total time to add all replicas to map for block pool \" + bpid\n             + \": \" + totalTimeTaken + \"ms\");\n     if (!unhealthyDataDirs.isEmpty()) {\n       throw new AddBlockPoolException(unhealthyDataDirs);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final Map\u003cFsVolumeSpi, IOException\u003e unhealthyDataDirs \u003d\n        new ConcurrentHashMap\u003cFsVolumeSpi, IOException\u003e();\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try (FsVolumeReference ref \u003d v.obtainReference()) {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            unhealthyDataDirs.put(v, ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG\n        .info(\"Total time to add all replicas to map for block pool \" + bpid\n            + \": \" + totalTimeTaken + \"ms\");\n    if (!unhealthyDataDirs.isEmpty()) {\n      throw new AddBlockPoolException(unhealthyDataDirs);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "34b14061b38dccab25058dff1b8743d8a3f82734": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14333. Datanode fails to start if any disk has errors during Namenode registration. Contributed by Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "12/03/19 10:17 AM",
      "commitName": "34b14061b38dccab25058dff1b8743d8a3f82734",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "01/10/18 6:43 PM",
      "commitNameOld": "5689355783de005ebc604f4403dc5129a286bfca",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 161.65,
      "commitsBetweenForRepo": 1256,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n-    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n-        new ArrayList\u003cIOException\u003e());\n+    final Map\u003cFsVolumeSpi, IOException\u003e unhealthyDataDirs \u003d\n+        new ConcurrentHashMap\u003cFsVolumeSpi, IOException\u003e();\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try (FsVolumeReference ref \u003d v.obtainReference()) {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (ClosedChannelException e) {\n             FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                 \"adding replicas, ignored.\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n-            exceptions.add(ioe);\n+            unhealthyDataDirs.put(v, ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n-    if (!exceptions.isEmpty()) {\n-      throw exceptions.get(0);\n-    }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG\n         .info(\"Total time to add all replicas to map for block pool \" + bpid\n             + \": \" + totalTimeTaken + \"ms\");\n+    if (!unhealthyDataDirs.isEmpty()) {\n+      throw new AddBlockPoolException(unhealthyDataDirs);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final Map\u003cFsVolumeSpi, IOException\u003e unhealthyDataDirs \u003d\n        new ConcurrentHashMap\u003cFsVolumeSpi, IOException\u003e();\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try (FsVolumeReference ref \u003d v.obtainReference()) {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (ClosedChannelException e) {\n            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                \"adding replicas, ignored.\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            unhealthyDataDirs.put(v, ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG\n        .info(\"Total time to add all replicas to map for block pool \" + bpid\n            + \": \" + totalTimeTaken + \"ms\");\n    if (!unhealthyDataDirs.isEmpty()) {\n      throw new AddBlockPoolException(unhealthyDataDirs);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "5689355783de005ebc604f4403dc5129a286bfca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13768. Adding replicas to volume map makes DataNode start slowly. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "01/10/18 6:43 PM",
      "commitName": "5689355783de005ebc604f4403dc5129a286bfca",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "18/04/18 8:23 AM",
      "commitNameOld": "bf7694d020ea787c542abc504b55ad1bd1137010",
      "commitAuthorOld": "Bharat Viswanadham",
      "daysBetweenCommits": 166.43,
      "commitsBetweenForRepo": 1792,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,47 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try (FsVolumeReference ref \u003d v.obtainReference()) {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (ClosedChannelException e) {\n             FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                 \"adding replicas, ignored.\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n-    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n-        + totalTimeTaken + \"ms\");\n+    FsDatasetImpl.LOG\n+        .info(\"Total time to add all replicas to map for block pool \" + bpid\n+            + \": \" + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try (FsVolumeReference ref \u003d v.obtainReference()) {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (ClosedChannelException e) {\n            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                \"adding replicas, ignored.\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG\n        .info(\"Total time to add all replicas to map for block pool \" + bpid\n            + \": \" + totalTimeTaken + \"ms\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "b09a03cd7d26cf96ec26a81ba11f00778241eb3e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10862. Typos in 4 log messages. Contributed by Mehran Hassani.\n",
      "commitDate": "16/09/16 12:08 AM",
      "commitName": "b09a03cd7d26cf96ec26a81ba11f00778241eb3e",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "13/09/16 12:54 PM",
      "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 2.47,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try (FsVolumeReference ref \u003d v.obtainReference()) {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (ClosedChannelException e) {\n             FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n-                \"addng replicas, ignored.\");\n+                \"adding replicas, ignored.\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n         + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try (FsVolumeReference ref \u003d v.obtainReference()) {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (ClosedChannelException e) {\n            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                \"adding replicas, ignored.\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n        + totalTimeTaken + \"ms\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "533a2be5ac7c7f0473fdd24d6201582d08964e21": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9264. Minor cleanup of operations on FsVolumeList#volumes.  (Walter Su via lei)\n",
      "commitDate": "23/10/15 1:52 PM",
      "commitName": "533a2be5ac7c7f0473fdd24d6201582d08964e21",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "05/05/15 11:08 AM",
      "commitNameOld": "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 171.11,
      "commitsBetweenForRepo": 1435,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n-    for (final FsVolumeImpl v : volumes.get()) {\n+    for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try (FsVolumeReference ref \u003d v.obtainReference()) {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (ClosedChannelException e) {\n             FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                 \"addng replicas, ignored.\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n         + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try (FsVolumeReference ref \u003d v.obtainReference()) {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (ClosedChannelException e) {\n            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                \"addng replicas, ignored.\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n        + totalTimeTaken + \"ms\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
      "commitDate": "20/01/15 7:05 PM",
      "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "19/12/14 11:13 AM",
      "commitNameOld": "a4876c130f1627e59ef055e586640d1933fc49af",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 32.33,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,46 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes.get()) {\n       Thread t \u003d new Thread() {\n         public void run() {\n-          try {\n+          try (FsVolumeReference ref \u003d v.obtainReference()) {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n+          } catch (ClosedChannelException e) {\n+            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n+                \"addng replicas, ignored.\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n         + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes.get()) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try (FsVolumeReference ref \u003d v.obtainReference()) {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (ClosedChannelException e) {\n            FsDatasetImpl.LOG.info(\"The volume \" + v + \" is closed while \" +\n                \"addng replicas, ignored.\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n        + totalTimeTaken + \"ms\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "3b173d95171d01ab55042b1162569d1cf14a8d43": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7531. Improve the concurrent access on FsVolumeList (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "17/12/14 4:41 PM",
      "commitName": "3b173d95171d01ab55042b1162569d1cf14a8d43",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "09/12/14 10:56 AM",
      "commitNameOld": "d8352b9b2b99aa46679c5880a724ba3f0ceb41ff",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 8.24,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n                         final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n-    for (final FsVolumeImpl v : volumes) {\n+    for (final FsVolumeImpl v : volumes.get()) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n             v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n         + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes.get()) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n        + totalTimeTaken + \"ms\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)\n",
      "commitDate": "20/09/14 1:25 PM",
      "commitName": "b2d5ed36bcb80e2581191dcdc3976e825c959142",
      "commitAuthor": "arp",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)\n",
          "commitDate": "20/09/14 1:25 PM",
          "commitName": "b2d5ed36bcb80e2581191dcdc3976e825c959142",
          "commitAuthor": "arp",
          "commitDateOld": "29/08/14 1:37 PM",
          "commitNameOld": "f65183eba3495c200fd25ac946552d1bbd5ed5fb",
          "commitAuthorOld": "",
          "daysBetweenCommits": 21.99,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,43 +1,43 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n-                        final LazyWriteReplicaTracker lazyWriteReplicaMap)\n+                        final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n-            v.getVolumeMap(bpid, volumeMap, lazyWriteReplicaMap);\n+            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n         + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n        + totalTimeTaken + \"ms\");\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {
            "oldValue": "[bpid-String(modifiers-final), volumeMap-ReplicaMap(modifiers-final), lazyWriteReplicaMap-LazyWriteReplicaTracker(modifiers-final)]",
            "newValue": "[bpid-String(modifiers-final), volumeMap-ReplicaMap(modifiers-final), ramDiskReplicaMap-RamDiskReplicaTracker(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)\n",
          "commitDate": "20/09/14 1:25 PM",
          "commitName": "b2d5ed36bcb80e2581191dcdc3976e825c959142",
          "commitAuthor": "arp",
          "commitDateOld": "29/08/14 1:37 PM",
          "commitNameOld": "f65183eba3495c200fd25ac946552d1bbd5ed5fb",
          "commitAuthorOld": "",
          "daysBetweenCommits": 21.99,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,43 +1,43 @@\n   void getAllVolumesMap(final String bpid,\n                         final ReplicaMap volumeMap,\n-                        final LazyWriteReplicaTracker lazyWriteReplicaMap)\n+                        final RamDiskReplicaTracker ramDiskReplicaMap)\n       throws IOException {\n     long totalStartTime \u003d Time.monotonicNow();\n     final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n         new ArrayList\u003cIOException\u003e());\n     List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n     for (final FsVolumeImpl v : volumes) {\n       Thread t \u003d new Thread() {\n         public void run() {\n           try {\n             FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                 bpid + \" on volume \" + v + \"...\");\n             long startTime \u003d Time.monotonicNow();\n-            v.getVolumeMap(bpid, volumeMap, lazyWriteReplicaMap);\n+            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n             long timeTaken \u003d Time.monotonicNow() - startTime;\n             FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                 + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n           } catch (IOException ioe) {\n             FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                 \"from \" + v + \". Will throw later.\", ioe);\n             exceptions.add(ioe);\n           }\n         }\n       };\n       replicaAddingThreads.add(t);\n       t.start();\n     }\n     for (Thread t : replicaAddingThreads) {\n       try {\n         t.join();\n       } catch (InterruptedException ie) {\n         throw new IOException(ie);\n       }\n     }\n     if (!exceptions.isEmpty()) {\n       throw exceptions.get(0);\n     }\n     long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n     FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n         + totalTimeTaken + \"ms\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void getAllVolumesMap(final String bpid,\n                        final ReplicaMap volumeMap,\n                        final RamDiskReplicaTracker ramDiskReplicaMap)\n      throws IOException {\n    long totalStartTime \u003d Time.monotonicNow();\n    final List\u003cIOException\u003e exceptions \u003d Collections.synchronizedList(\n        new ArrayList\u003cIOException\u003e());\n    List\u003cThread\u003e replicaAddingThreads \u003d new ArrayList\u003cThread\u003e();\n    for (final FsVolumeImpl v : volumes) {\n      Thread t \u003d new Thread() {\n        public void run() {\n          try {\n            FsDatasetImpl.LOG.info(\"Adding replicas to map for block pool \" +\n                bpid + \" on volume \" + v + \"...\");\n            long startTime \u003d Time.monotonicNow();\n            v.getVolumeMap(bpid, volumeMap, ramDiskReplicaMap);\n            long timeTaken \u003d Time.monotonicNow() - startTime;\n            FsDatasetImpl.LOG.info(\"Time to add replicas to map for block pool\"\n                + \" \" + bpid + \" on volume \" + v + \": \" + timeTaken + \"ms\");\n          } catch (IOException ioe) {\n            FsDatasetImpl.LOG.info(\"Caught exception while adding replicas \" +\n                \"from \" + v + \". Will throw later.\", ioe);\n            exceptions.add(ioe);\n          }\n        }\n      };\n      replicaAddingThreads.add(t);\n      t.start();\n    }\n    for (Thread t : replicaAddingThreads) {\n      try {\n        t.join();\n      } catch (InterruptedException ie) {\n        throw new IOException(ie);\n      }\n    }\n    if (!exceptions.isEmpty()) {\n      throw exceptions.get(0);\n    }\n    long totalTimeTaken \u003d Time.monotonicNow() - totalStartTime;\n    FsDatasetImpl.LOG.info(\"Total time to add all replicas to map: \"\n        + totalTimeTaken + \"ms\");\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}