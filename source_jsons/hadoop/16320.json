{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "rename",
  "functionId": "rename___src-String(modifiers-final)__dst-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 590,
  "functionEndLine": 613,
  "numCommitsSeen": 40,
  "timeTaken": 2127,
  "changeHistory": [
    "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8",
    "6425ed27ea638da75f656204d6df4adad1d91fe1"
  ],
  "changeHistoryShort": {
    "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8": "Ybodychange",
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14343. RBF: Fix renaming folders spread across multiple subclusters. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "e2a3c4494ba27a7b82117dac275b9d115aee7f95",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   public boolean rename(final String src, final String dst)\n       throws IOException {\n     rpcServer.checkOperation(NameNode.OperationCategory.WRITE);\n \n     final List\u003cRemoteLocation\u003e srcLocations \u003d\n         rpcServer.getLocationsForPath(src, true, false);\n     // srcLocations may be trimmed by getRenameDestinations()\n     final List\u003cRemoteLocation\u003e locs \u003d new LinkedList\u003c\u003e(srcLocations);\n     RemoteParam dstParam \u003d getRenameDestinations(locs, dst);\n     if (locs.isEmpty()) {\n       throw new IOException(\n           \"Rename of \" + src + \" to \" + dst + \" is not allowed,\" +\n               \" no eligible destination in the same namespace was found.\");\n     }\n     RemoteMethod method \u003d new RemoteMethod(\"rename\",\n         new Class\u003c?\u003e[] {String.class, String.class},\n         new RemoteParam(), dstParam);\n-    return rpcClient.invokeSequential(locs, method, Boolean.class,\n-        Boolean.TRUE);\n+    if (isMultiDestDirectory(src)) {\n+      return rpcClient.invokeAll(locs, method);\n+    } else {\n+      return rpcClient.invokeSequential(locs, method, Boolean.class,\n+          Boolean.TRUE);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final String src, final String dst)\n      throws IOException {\n    rpcServer.checkOperation(NameNode.OperationCategory.WRITE);\n\n    final List\u003cRemoteLocation\u003e srcLocations \u003d\n        rpcServer.getLocationsForPath(src, true, false);\n    // srcLocations may be trimmed by getRenameDestinations()\n    final List\u003cRemoteLocation\u003e locs \u003d new LinkedList\u003c\u003e(srcLocations);\n    RemoteParam dstParam \u003d getRenameDestinations(locs, dst);\n    if (locs.isEmpty()) {\n      throw new IOException(\n          \"Rename of \" + src + \" to \" + dst + \" is not allowed,\" +\n              \" no eligible destination in the same namespace was found.\");\n    }\n    RemoteMethod method \u003d new RemoteMethod(\"rename\",\n        new Class\u003c?\u003e[] {String.class, String.class},\n        new RemoteParam(), dstParam);\n    if (isMultiDestDirectory(src)) {\n      return rpcClient.invokeAll(locs, method);\n    } else {\n      return rpcClient.invokeSequential(locs, method, Boolean.class,\n          Boolean.TRUE);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "diff": "@@ -0,0 +1,20 @@\n+  public boolean rename(final String src, final String dst)\n+      throws IOException {\n+    rpcServer.checkOperation(NameNode.OperationCategory.WRITE);\n+\n+    final List\u003cRemoteLocation\u003e srcLocations \u003d\n+        rpcServer.getLocationsForPath(src, true, false);\n+    // srcLocations may be trimmed by getRenameDestinations()\n+    final List\u003cRemoteLocation\u003e locs \u003d new LinkedList\u003c\u003e(srcLocations);\n+    RemoteParam dstParam \u003d getRenameDestinations(locs, dst);\n+    if (locs.isEmpty()) {\n+      throw new IOException(\n+          \"Rename of \" + src + \" to \" + dst + \" is not allowed,\" +\n+              \" no eligible destination in the same namespace was found.\");\n+    }\n+    RemoteMethod method \u003d new RemoteMethod(\"rename\",\n+        new Class\u003c?\u003e[] {String.class, String.class},\n+        new RemoteParam(), dstParam);\n+    return rpcClient.invokeSequential(locs, method, Boolean.class,\n+        Boolean.TRUE);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(final String src, final String dst)\n      throws IOException {\n    rpcServer.checkOperation(NameNode.OperationCategory.WRITE);\n\n    final List\u003cRemoteLocation\u003e srcLocations \u003d\n        rpcServer.getLocationsForPath(src, true, false);\n    // srcLocations may be trimmed by getRenameDestinations()\n    final List\u003cRemoteLocation\u003e locs \u003d new LinkedList\u003c\u003e(srcLocations);\n    RemoteParam dstParam \u003d getRenameDestinations(locs, dst);\n    if (locs.isEmpty()) {\n      throw new IOException(\n          \"Rename of \" + src + \" to \" + dst + \" is not allowed,\" +\n              \" no eligible destination in the same namespace was found.\");\n    }\n    RemoteMethod method \u003d new RemoteMethod(\"rename\",\n        new Class\u003c?\u003e[] {String.class, String.class},\n        new RemoteParam(), dstParam);\n    return rpcClient.invokeSequential(locs, method, Boolean.class,\n        Boolean.TRUE);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java"
    }
  }
}