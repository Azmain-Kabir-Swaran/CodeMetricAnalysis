{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupMappingPlacementRule.java",
  "functionName": "getPlacementContext",
  "functionId": "getPlacementContext___mapping-QueueMapping__leafQueueName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
  "functionStartLine": 261,
  "functionEndLine": 276,
  "numCommitsSeen": 24,
  "timeTaken": 4653,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ymultichange(Yexceptionschange,Ybodychange)",
    "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095": "Ybodychange",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "23/03/20 5:31 AM",
          "commitNameOld": "d312991ead37a5f840577a39420a18f0621b09dc",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,16 @@\n   private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n-      String leafQueueName) {\n+      String leafQueueName) throws IOException {\n+\n+    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n+    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n+      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n+          leafQueueName);\n+    }\n+\n     if (!StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n      String leafQueueName) throws IOException {\n\n    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n          leafQueueName);\n    }\n\n    if (!StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "23/03/20 5:31 AM",
          "commitNameOld": "d312991ead37a5f840577a39420a18f0621b09dc",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,16 @@\n   private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n-      String leafQueueName) {\n+      String leafQueueName) throws IOException {\n+\n+    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n+    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n+      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n+          leafQueueName);\n+    }\n+\n     if (!StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n      String leafQueueName) throws IOException {\n\n    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n          leafQueueName);\n    }\n\n    if (!StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
          "extendedDetails": {}
        }
      ]
    },
    "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9970. Refactor TestUserGroupMappingPlacementRule#verifyQueueMapping. Contributed by Manikandan R\n",
      "commitDate": "15/01/20 12:55 AM",
      "commitName": "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "13/01/20 8:23 AM",
      "commitNameOld": "621c5eac38697755cf29aa8618869c09092b6a80",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n       String leafQueueName) {\n-    if (!StringUtils.isEmpty(mapping.parentQueue)) {\n+    if (!StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n      String leafQueueName) {\n    if (!StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,9 @@\n+  private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n+      String leafQueueName) {\n+    if (!StringUtils.isEmpty(mapping.parentQueue)) {\n+      return new ApplicationPlacementContext(leafQueueName,\n+          mapping.getParentQueue());\n+    } else{\n+      return new ApplicationPlacementContext(leafQueueName);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ApplicationPlacementContext getPlacementContext(QueueMapping mapping,\n      String leafQueueName) {\n    if (!StringUtils.isEmpty(mapping.parentQueue)) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java"
    }
  }
}