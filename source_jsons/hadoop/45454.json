{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineClientImpl.java",
  "functionName": "putEntities",
  "functionId": "putEntities___entities-TimelineEntity",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
  "functionStartLine": 176,
  "functionEndLine": 179,
  "numCommitsSeen": 59,
  "timeTaken": 3339,
  "changeHistory": [
    "882f2f04644a13cadb93070d5545f7a4f8691fde",
    "01a641bc447c464b2830d58addd482f47dbd92ae",
    "c298a9a845f89317eb9efad332e6657c56736a4d",
    "d78b452a4f413c6931a494c33df0666ce9b44973",
    "b47f65214c7a7b6ca8c77369ebc90dba67f9d885",
    "09f383254c8459071533f2118debd6d3b8538a13",
    "f4eb6ddec9b96959f4c8264523722933429a2f2e",
    "84425fb435cb603fd8adcc2f76631c0244175310",
    "e74e117ad3e0b6c0572913f602a28934f87bba70"
  ],
  "changeHistoryShort": {
    "882f2f04644a13cadb93070d5545f7a4f8691fde": "Ybodychange",
    "01a641bc447c464b2830d58addd482f47dbd92ae": "Ybodychange",
    "c298a9a845f89317eb9efad332e6657c56736a4d": "Ybodychange",
    "d78b452a4f413c6931a494c33df0666ce9b44973": "Ybodychange",
    "b47f65214c7a7b6ca8c77369ebc90dba67f9d885": "Yfilerename",
    "09f383254c8459071533f2118debd6d3b8538a13": "Ybodychange",
    "f4eb6ddec9b96959f4c8264523722933429a2f2e": "Ybodychange",
    "84425fb435cb603fd8adcc2f76631c0244175310": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "e74e117ad3e0b6c0572913f602a28934f87bba70": "Yintroduced"
  },
  "changeHistoryDetails": {
    "882f2f04644a13cadb93070d5545f7a4f8691fde": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4234. New put APIs in TimelineClient for ats v1.5. Contributed by Xuan Gong.\n",
      "commitDate": "23/12/15 5:26 AM",
      "commitName": "882f2f04644a13cadb93070d5545f7a4f8691fde",
      "commitAuthor": "Junping Du",
      "commitDateOld": "07/12/15 1:46 AM",
      "commitNameOld": "01a641bc447c464b2830d58addd482f47dbd92ae",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 16.15,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,4 @@\n   public TimelinePutResponse putEntities(\n       TimelineEntity... entities) throws IOException, YarnException {\n-    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n-    for (TimelineEntity entity : entities) {\n-      if (entity.getEntityId() \u003d\u003d null || entity.getEntityType() \u003d\u003d null) {\n-        throw new YarnException(\"Incomplete entity without entity id/type\");\n-      }\n-      entitiesContainer.addEntity(entity);\n-    }\n-    ClientResponse resp \u003d doPosting(entitiesContainer, null);\n-    return resp.getEntity(TimelinePutResponse.class);\n+    return timelineWriter.putEntities(entities);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    return timelineWriter.putEntities(entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "01a641bc447c464b2830d58addd482f47dbd92ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3456. Improve handling of incomplete TimelineEntities. (Varun Saxena via rohithsharmaks)\n",
      "commitDate": "07/12/15 1:46 AM",
      "commitName": "01a641bc447c464b2830d58addd482f47dbd92ae",
      "commitAuthor": "rohithsharmaks",
      "commitDateOld": "31/05/15 4:31 PM",
      "commitNameOld": "5cc3fced957a8471733e0e9490878bd68429fe24",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 189.43,
      "commitsBetweenForRepo": 1328,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,12 @@\n   public TimelinePutResponse putEntities(\n       TimelineEntity... entities) throws IOException, YarnException {\n     TimelineEntities entitiesContainer \u003d new TimelineEntities();\n-    entitiesContainer.addEntities(Arrays.asList(entities));\n+    for (TimelineEntity entity : entities) {\n+      if (entity.getEntityId() \u003d\u003d null || entity.getEntityType() \u003d\u003d null) {\n+        throw new YarnException(\"Incomplete entity without entity id/type\");\n+      }\n+      entitiesContainer.addEntity(entity);\n+    }\n     ClientResponse resp \u003d doPosting(entitiesContainer, null);\n     return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    for (TimelineEntity entity : entities) {\n      if (entity.getEntityId() \u003d\u003d null || entity.getEntityType() \u003d\u003d null) {\n        throw new YarnException(\"Incomplete entity without entity id/type\");\n      }\n      entitiesContainer.addEntity(entity);\n    }\n    ClientResponse resp \u003d doPosting(entitiesContainer, null);\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "c298a9a845f89317eb9efad332e6657c56736a4d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2375. Allow enabling/disabling timeline server per framework. (Mit Desai via jeagles)\n",
      "commitDate": "20/11/14 9:34 PM",
      "commitName": "c298a9a845f89317eb9efad332e6657c56736a4d",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "31/10/14 1:16 PM",
      "commitNameOld": "1b4be918664b09272b120bc42de3e5fc02d79047",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 20.39,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,7 @@\n   public TimelinePutResponse putEntities(\n       TimelineEntity... entities) throws IOException, YarnException {\n-    if (!isEnabled) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Nothing will be put because timeline service is not enabled\");\n-      }\n-      return new TimelinePutResponse();\n-    }\n     TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n     ClientResponse resp \u003d doPosting(entitiesContainer, null);\n     return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPosting(entitiesContainer, null);\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "d78b452a4f413c6931a494c33df0666ce9b44973": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
      "commitDate": "24/09/14 11:27 AM",
      "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "20/08/14 10:05 AM",
      "commitNameOld": "e4539e88e388b7ff01a6acd0b1596a5a276d4478",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 35.06,
      "commitsBetweenForRepo": 330,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,13 @@\n   public TimelinePutResponse putEntities(\n       TimelineEntity... entities) throws IOException, YarnException {\n     if (!isEnabled) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Nothing will be put because timeline service is not enabled\");\n       }\n       return new TimelinePutResponse();\n     }\n     TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n-    ClientResponse resp;\n-    try {\n-      resp \u003d doPostingEntities(entitiesContainer);\n-    } catch (RuntimeException re) {\n-      // runtime exception is expected if the client cannot connect the server\n-      String msg \u003d\n-          \"Failed to get the response from the timeline server.\";\n-      LOG.error(msg, re);\n-      throw re;\n-    }\n-    if (resp \u003d\u003d null ||\n-        resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n-      String msg \u003d\n-          \"Failed to get the response from the timeline server.\";\n-      LOG.error(msg);\n-      if (LOG.isDebugEnabled() \u0026\u0026 resp !\u003d null) {\n-        String output \u003d resp.getEntity(String.class);\n-        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n-            + \" Server response : \\n\" + output);\n-      }\n-      throw new YarnException(msg);\n-    }\n+    ClientResponse resp \u003d doPosting(entitiesContainer, null);\n     return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    if (!isEnabled) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Nothing will be put because timeline service is not enabled\");\n      }\n      return new TimelinePutResponse();\n    }\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPosting(entitiesContainer, null);\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "b47f65214c7a7b6ca8c77369ebc90dba67f9d885": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2298. Move TimelineClient to yarn-common project (Contributed by Zhijie Shen)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/14 10:48 PM",
      "commitName": "b47f65214c7a7b6ca8c77369ebc90dba67f9d885",
      "commitAuthor": "Junping Du",
      "commitDateOld": "05/08/14 5:50 PM",
      "commitNameOld": "812ac91add512c518394178c5162720d61957e1f",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    if (!isEnabled) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Nothing will be put because timeline service is not enabled\");\n      }\n      return new TimelinePutResponse();\n    }\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp;\n    try {\n      resp \u003d doPostingEntities(entitiesContainer);\n    } catch (RuntimeException re) {\n      // runtime exception is expected if the client cannot connect the server\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg, re);\n      throw re;\n    }\n    if (resp \u003d\u003d null ||\n        resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled() \u0026\u0026 resp !\u003d null) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
      }
    },
    "09f383254c8459071533f2118debd6d3b8538a13": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1850. Introduced the ability to optionally disable sending out timeline-events in the TimelineClient. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581189 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 7:22 PM",
      "commitName": "09f383254c8459071533f2118debd6d3b8538a13",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/03/14 7:52 PM",
      "commitNameOld": "f4eb6ddec9b96959f4c8264523722933429a2f2e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 17.94,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,34 @@\n   public TimelinePutResponse putEntities(\n       TimelineEntity... entities) throws IOException, YarnException {\n+    if (!isEnabled) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Nothing will be put because timeline service is not enabled\");\n+      }\n+      return new TimelinePutResponse();\n+    }\n     TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n     ClientResponse resp;\n     try {\n       resp \u003d doPostingEntities(entitiesContainer);\n     } catch (RuntimeException re) {\n       // runtime exception is expected if the client cannot connect the server\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg, re);\n       throw re;\n     }\n     if (resp \u003d\u003d null ||\n         resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg);\n       if (LOG.isDebugEnabled() \u0026\u0026 resp !\u003d null) {\n         String output \u003d resp.getEntity(String.class);\n         LOG.debug(\"HTTP error code: \" + resp.getStatus()\n             + \" Server response : \\n\" + output);\n       }\n       throw new YarnException(msg);\n     }\n     return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    if (!isEnabled) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Nothing will be put because timeline service is not enabled\");\n      }\n      return new TimelinePutResponse();\n    }\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp;\n    try {\n      resp \u003d doPostingEntities(entitiesContainer);\n    } catch (RuntimeException re) {\n      // runtime exception is expected if the client cannot connect the server\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg, re);\n      throw re;\n    }\n    if (resp \u003d\u003d null ||\n        resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled() \u0026\u0026 resp !\u003d null) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "f4eb6ddec9b96959f4c8264523722933429a2f2e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1780. Improved logging in the Timeline client and server. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/14 7:52 PM",
      "commitName": "f4eb6ddec9b96959f4c8264523722933429a2f2e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/02/14 6:04 PM",
      "commitNameOld": "e167e585e9dd5c86ae763c257d62fdcc83260200",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 12.07,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,28 @@\n   public TimelinePutResponse putEntities(\n       TimelineEntity... entities) throws IOException, YarnException {\n     TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n-    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n-    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n+    ClientResponse resp;\n+    try {\n+      resp \u003d doPostingEntities(entitiesContainer);\n+    } catch (RuntimeException re) {\n+      // runtime exception is expected if the client cannot connect the server\n+      String msg \u003d\n+          \"Failed to get the response from the timeline server.\";\n+      LOG.error(msg, re);\n+      throw re;\n+    }\n+    if (resp \u003d\u003d null ||\n+        resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg);\n-      if (LOG.isDebugEnabled()) {\n+      if (LOG.isDebugEnabled() \u0026\u0026 resp !\u003d null) {\n         String output \u003d resp.getEntity(String.class);\n         LOG.debug(\"HTTP error code: \" + resp.getStatus()\n             + \" Server response : \\n\" + output);\n       }\n       throw new YarnException(msg);\n     }\n     return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp;\n    try {\n      resp \u003d doPostingEntities(entitiesContainer);\n    } catch (RuntimeException re) {\n      // runtime exception is expected if the client cannot connect the server\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg, re);\n      throw re;\n    }\n    if (resp \u003d\u003d null ||\n        resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled() \u0026\u0026 resp !\u003d null) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "84425fb435cb603fd8adcc2f76631c0244175310": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 12:55 PM",
      "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "14/02/14 12:01 PM",
          "commitNameOld": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ATSPutErrors postEntities(\n-      ATSEntity... entities) throws IOException, YarnException {\n-    ATSEntities entitiesContainer \u003d new ATSEntities();\n+  public TimelinePutResponse putEntities(\n+      TimelineEntity... entities) throws IOException, YarnException {\n+    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n     ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n     if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg);\n       if (LOG.isDebugEnabled()) {\n         String output \u003d resp.getEntity(String.class);\n         LOG.debug(\"HTTP error code: \" + resp.getStatus()\n             + \" Server response : \\n\" + output);\n       }\n       throw new YarnException(msg);\n     }\n-    return resp.getEntity(ATSPutErrors.class);\n+    return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled()) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {
            "oldValue": "postEntities",
            "newValue": "putEntities"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "14/02/14 12:01 PM",
          "commitNameOld": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ATSPutErrors postEntities(\n-      ATSEntity... entities) throws IOException, YarnException {\n-    ATSEntities entitiesContainer \u003d new ATSEntities();\n+  public TimelinePutResponse putEntities(\n+      TimelineEntity... entities) throws IOException, YarnException {\n+    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n     ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n     if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg);\n       if (LOG.isDebugEnabled()) {\n         String output \u003d resp.getEntity(String.class);\n         LOG.debug(\"HTTP error code: \" + resp.getStatus()\n             + \" Server response : \\n\" + output);\n       }\n       throw new YarnException(msg);\n     }\n-    return resp.getEntity(ATSPutErrors.class);\n+    return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled()) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {
            "oldValue": "[entities-ATSEntity]",
            "newValue": "[entities-TimelineEntity]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "14/02/14 12:01 PM",
          "commitNameOld": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ATSPutErrors postEntities(\n-      ATSEntity... entities) throws IOException, YarnException {\n-    ATSEntities entitiesContainer \u003d new ATSEntities();\n+  public TimelinePutResponse putEntities(\n+      TimelineEntity... entities) throws IOException, YarnException {\n+    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n     ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n     if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg);\n       if (LOG.isDebugEnabled()) {\n         String output \u003d resp.getEntity(String.class);\n         LOG.debug(\"HTTP error code: \" + resp.getStatus()\n             + \" Server response : \\n\" + output);\n       }\n       throw new YarnException(msg);\n     }\n-    return resp.getEntity(ATSPutErrors.class);\n+    return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled()) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {
            "oldValue": "ATSPutErrors",
            "newValue": "TimelinePutResponse"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "14/02/14 12:01 PM",
          "commitNameOld": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ATSPutErrors postEntities(\n-      ATSEntity... entities) throws IOException, YarnException {\n-    ATSEntities entitiesContainer \u003d new ATSEntities();\n+  public TimelinePutResponse putEntities(\n+      TimelineEntity... entities) throws IOException, YarnException {\n+    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n     entitiesContainer.addEntities(Arrays.asList(entities));\n     ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n     if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n       String msg \u003d\n           \"Failed to get the response from the timeline server.\";\n       LOG.error(msg);\n       if (LOG.isDebugEnabled()) {\n         String output \u003d resp.getEntity(String.class);\n         LOG.debug(\"HTTP error code: \" + resp.getStatus()\n             + \" Server response : \\n\" + output);\n       }\n       throw new YarnException(msg);\n     }\n-    return resp.getEntity(ATSPutErrors.class);\n+    return resp.getEntity(TimelinePutResponse.class);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelinePutResponse putEntities(\n      TimelineEntity... entities) throws IOException, YarnException {\n    TimelineEntities entitiesContainer \u003d new TimelineEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled()) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(TimelinePutResponse.class);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "e74e117ad3e0b6c0572913f602a28934f87bba70": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1637. Implemented a client library for Java users to post timeline entities and events. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566752 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 1:31 PM",
      "commitName": "e74e117ad3e0b6c0572913f602a28934f87bba70",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,18 @@\n+  public ATSPutErrors postEntities(\n+      ATSEntity... entities) throws IOException, YarnException {\n+    ATSEntities entitiesContainer \u003d new ATSEntities();\n+    entitiesContainer.addEntities(Arrays.asList(entities));\n+    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n+    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n+      String msg \u003d\n+          \"Failed to get the response from the timeline server.\";\n+      LOG.error(msg);\n+      if (LOG.isDebugEnabled()) {\n+        String output \u003d resp.getEntity(String.class);\n+        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n+            + \" Server response : \\n\" + output);\n+      }\n+      throw new YarnException(msg);\n+    }\n+    return resp.getEntity(ATSPutErrors.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ATSPutErrors postEntities(\n      ATSEntity... entities) throws IOException, YarnException {\n    ATSEntities entitiesContainer \u003d new ATSEntities();\n    entitiesContainer.addEntities(Arrays.asList(entities));\n    ClientResponse resp \u003d doPostingEntities(entitiesContainer);\n    if (resp.getClientResponseStatus() !\u003d ClientResponse.Status.OK) {\n      String msg \u003d\n          \"Failed to get the response from the timeline server.\";\n      LOG.error(msg);\n      if (LOG.isDebugEnabled()) {\n        String output \u003d resp.getEntity(String.class);\n        LOG.debug(\"HTTP error code: \" + resp.getStatus()\n            + \" Server response : \\n\" + output);\n      }\n      throw new YarnException(msg);\n    }\n    return resp.getEntity(ATSPutErrors.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
    }
  }
}