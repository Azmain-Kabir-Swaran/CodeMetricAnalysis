{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptorREST.java",
  "functionName": "submitApplication",
  "functionId": "submitApplication___newApp-ApplicationSubmissionContextInfo__hsr-HttpServletRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
  "functionStartLine": 397,
  "functionEndLine": 539,
  "numCommitsSeen": 20,
  "timeTaken": 1683,
  "changeHistory": [
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d"
  ],
  "changeHistoryShort": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ybodychange",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,124 +1,143 @@\n   public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n       HttpServletRequest hsr)\n       throws AuthorizationException, IOException, InterruptedException {\n \n     long startTime \u003d clock.getTime();\n \n     if (newApp \u003d\u003d null || newApp.getApplicationId() \u003d\u003d null) {\n       routerMetrics.incrAppsFailedSubmitted();\n       String errMsg \u003d \"Missing ApplicationSubmissionContextInfo or \"\n           + \"applicationSubmissionContex information.\";\n-      return Response.status(Status.BAD_REQUEST).entity(errMsg).build();\n+      return Response\n+          .status(Status.BAD_REQUEST)\n+          .entity(errMsg)\n+          .build();\n     }\n \n     ApplicationId applicationId \u003d null;\n     try {\n       applicationId \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (IllegalArgumentException e) {\n       routerMetrics.incrAppsFailedSubmitted();\n-      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n+      return Response\n+          .status(Status.BAD_REQUEST)\n+          .entity(e.getLocalizedMessage())\n           .build();\n     }\n \n     List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n \n     for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n \n       ApplicationSubmissionContext context \u003d\n           RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\n \n       SubClusterId subClusterId \u003d null;\n       try {\n         subClusterId \u003d policyFacade.getHomeSubcluster(context, blacklist);\n       } catch (YarnException e) {\n         routerMetrics.incrAppsFailedSubmitted();\n-        return Response.status(Status.SERVICE_UNAVAILABLE)\n-            .entity(e.getLocalizedMessage()).build();\n+        return Response\n+            .status(Status.SERVICE_UNAVAILABLE)\n+            .entity(e.getLocalizedMessage())\n+            .build();\n       }\n-      LOG.info(\"submitApplication appId\" + applicationId + \" try #\" + i\n-          + \" on SubCluster \" + subClusterId);\n+      LOG.info(\"submitApplication appId {} try #{} on SubCluster {}\",\n+          applicationId, i, subClusterId);\n \n       ApplicationHomeSubCluster appHomeSubCluster \u003d\n           ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\n \n       if (i \u003d\u003d 0) {\n         try {\n           // persist the mapping of applicationId and the subClusterId which has\n           // been selected as its home\n           subClusterId \u003d\n               federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\n         } catch (YarnException e) {\n           routerMetrics.incrAppsFailedSubmitted();\n           String errMsg \u003d \"Unable to insert the ApplicationId \" + applicationId\n               + \" into the FederationStateStore\";\n-          return Response.status(Status.SERVICE_UNAVAILABLE)\n-              .entity(errMsg + \" \" + e.getLocalizedMessage()).build();\n+          return Response\n+              .status(Status.SERVICE_UNAVAILABLE)\n+              .entity(errMsg + \" \" + e.getLocalizedMessage())\n+              .build();\n         }\n       } else {\n         try {\n           // update the mapping of applicationId and the home subClusterId to\n           // the new subClusterId we have selected\n           federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\n         } catch (YarnException e) {\n           String errMsg \u003d \"Unable to update the ApplicationId \" + applicationId\n               + \" into the FederationStateStore\";\n           SubClusterId subClusterIdInStateStore;\n           try {\n             subClusterIdInStateStore \u003d\n                 federationFacade.getApplicationHomeSubCluster(applicationId);\n           } catch (YarnException e1) {\n             routerMetrics.incrAppsFailedSubmitted();\n-            return Response.status(Status.SERVICE_UNAVAILABLE)\n-                .entity(e1.getLocalizedMessage()).build();\n+            return Response\n+                .status(Status.SERVICE_UNAVAILABLE)\n+                .entity(e1.getLocalizedMessage())\n+                .build();\n           }\n           if (subClusterId \u003d\u003d subClusterIdInStateStore) {\n-            LOG.info(\"Application \" + applicationId\n-                + \" already submitted on SubCluster \" + subClusterId);\n+            LOG.info(\"Application {} already submitted on SubCluster {}\",\n+                applicationId, subClusterId);\n           } else {\n             routerMetrics.incrAppsFailedSubmitted();\n-            return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg)\n+            return Response\n+                .status(Status.SERVICE_UNAVAILABLE)\n+                .entity(errMsg)\n                 .build();\n           }\n         }\n       }\n \n       SubClusterInfo subClusterInfo;\n       try {\n         subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n       } catch (YarnException e) {\n         routerMetrics.incrAppsFailedSubmitted();\n-        return Response.status(Status.SERVICE_UNAVAILABLE)\n-            .entity(e.getLocalizedMessage()).build();\n+        return Response\n+            .status(Status.SERVICE_UNAVAILABLE)\n+            .entity(e.getLocalizedMessage())\n+            .build();\n       }\n \n       Response response \u003d null;\n       try {\n         response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n             subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp,\n                 hsr);\n       } catch (Exception e) {\n-        LOG.warn(\"Unable to submit the application \" + applicationId\n-            + \"to SubCluster \" + subClusterId.getId(), e);\n+        LOG.warn(\"Unable to submit the application {} to SubCluster {}\",\n+            applicationId, subClusterId.getId(), e);\n       }\n \n-      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 202) {\n-        LOG.info(\"Application \" + context.getApplicationName() + \" with appId \"\n-            + applicationId + \" submitted on \" + subClusterId);\n+      if (response !\u003d null \u0026\u0026\n+          response.getStatus() \u003d\u003d HttpServletResponse.SC_ACCEPTED) {\n+        LOG.info(\"Application {} with appId {} submitted on {}\",\n+            context.getApplicationName(), applicationId, subClusterId);\n \n         long stopTime \u003d clock.getTime();\n         routerMetrics.succeededAppsSubmitted(stopTime - startTime);\n \n         return response;\n       } else {\n         // Empty response from the ResourceManager.\n         // Blacklist this subcluster for this request.\n         blacklist.add(subClusterId);\n       }\n     }\n \n     routerMetrics.incrAppsFailedSubmitted();\n     String errMsg \u003d \"Application \" + newApp.getApplicationName()\n         + \" with appId \" + applicationId + \" failed to be submitted.\";\n     LOG.error(errMsg);\n-    return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\n+    return Response\n+        .status(Status.SERVICE_UNAVAILABLE)\n+        .entity(errMsg)\n+        .build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n      HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n\n    long startTime \u003d clock.getTime();\n\n    if (newApp \u003d\u003d null || newApp.getApplicationId() \u003d\u003d null) {\n      routerMetrics.incrAppsFailedSubmitted();\n      String errMsg \u003d \"Missing ApplicationSubmissionContextInfo or \"\n          + \"applicationSubmissionContex information.\";\n      return Response\n          .status(Status.BAD_REQUEST)\n          .entity(errMsg)\n          .build();\n    }\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (IllegalArgumentException e) {\n      routerMetrics.incrAppsFailedSubmitted();\n      return Response\n          .status(Status.BAD_REQUEST)\n          .entity(e.getLocalizedMessage())\n          .build();\n    }\n\n    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n\n      ApplicationSubmissionContext context \u003d\n          RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\n\n      SubClusterId subClusterId \u003d null;\n      try {\n        subClusterId \u003d policyFacade.getHomeSubcluster(context, blacklist);\n      } catch (YarnException e) {\n        routerMetrics.incrAppsFailedSubmitted();\n        return Response\n            .status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage())\n            .build();\n      }\n      LOG.info(\"submitApplication appId {} try #{} on SubCluster {}\",\n          applicationId, i, subClusterId);\n\n      ApplicationHomeSubCluster appHomeSubCluster \u003d\n          ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\n\n      if (i \u003d\u003d 0) {\n        try {\n          // persist the mapping of applicationId and the subClusterId which has\n          // been selected as its home\n          subClusterId \u003d\n              federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\n        } catch (YarnException e) {\n          routerMetrics.incrAppsFailedSubmitted();\n          String errMsg \u003d \"Unable to insert the ApplicationId \" + applicationId\n              + \" into the FederationStateStore\";\n          return Response\n              .status(Status.SERVICE_UNAVAILABLE)\n              .entity(errMsg + \" \" + e.getLocalizedMessage())\n              .build();\n        }\n      } else {\n        try {\n          // update the mapping of applicationId and the home subClusterId to\n          // the new subClusterId we have selected\n          federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\n        } catch (YarnException e) {\n          String errMsg \u003d \"Unable to update the ApplicationId \" + applicationId\n              + \" into the FederationStateStore\";\n          SubClusterId subClusterIdInStateStore;\n          try {\n            subClusterIdInStateStore \u003d\n                federationFacade.getApplicationHomeSubCluster(applicationId);\n          } catch (YarnException e1) {\n            routerMetrics.incrAppsFailedSubmitted();\n            return Response\n                .status(Status.SERVICE_UNAVAILABLE)\n                .entity(e1.getLocalizedMessage())\n                .build();\n          }\n          if (subClusterId \u003d\u003d subClusterIdInStateStore) {\n            LOG.info(\"Application {} already submitted on SubCluster {}\",\n                applicationId, subClusterId);\n          } else {\n            routerMetrics.incrAppsFailedSubmitted();\n            return Response\n                .status(Status.SERVICE_UNAVAILABLE)\n                .entity(errMsg)\n                .build();\n          }\n        }\n      }\n\n      SubClusterInfo subClusterInfo;\n      try {\n        subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n      } catch (YarnException e) {\n        routerMetrics.incrAppsFailedSubmitted();\n        return Response\n            .status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage())\n            .build();\n      }\n\n      Response response \u003d null;\n      try {\n        response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n            subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp,\n                hsr);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to submit the application {} to SubCluster {}\",\n            applicationId, subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null \u0026\u0026\n          response.getStatus() \u003d\u003d HttpServletResponse.SC_ACCEPTED) {\n        LOG.info(\"Application {} with appId {} submitted on {}\",\n            context.getApplicationName(), applicationId, subClusterId);\n\n        long stopTime \u003d clock.getTime();\n        routerMetrics.succeededAppsSubmitted(stopTime - startTime);\n\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        blacklist.add(subClusterId);\n      }\n    }\n\n    routerMetrics.incrAppsFailedSubmitted();\n    String errMsg \u003d \"Application \" + newApp.getApplicationName()\n        + \" with appId \" + applicationId + \" failed to be submitted.\";\n    LOG.error(errMsg);\n    return Response\n        .status(Status.SERVICE_UNAVAILABLE)\n        .entity(errMsg)\n        .build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "11/08/17 3:58 PM",
      "commitNameOld": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 10.29,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,109 +1,124 @@\n   public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n       HttpServletRequest hsr)\n       throws AuthorizationException, IOException, InterruptedException {\n+\n+    long startTime \u003d clock.getTime();\n+\n     if (newApp \u003d\u003d null || newApp.getApplicationId() \u003d\u003d null) {\n+      routerMetrics.incrAppsFailedSubmitted();\n       String errMsg \u003d \"Missing ApplicationSubmissionContextInfo or \"\n           + \"applicationSubmissionContex information.\";\n       return Response.status(Status.BAD_REQUEST).entity(errMsg).build();\n     }\n \n     ApplicationId applicationId \u003d null;\n     try {\n       applicationId \u003d ApplicationId.fromString(newApp.getApplicationId());\n     } catch (IllegalArgumentException e) {\n+      routerMetrics.incrAppsFailedSubmitted();\n       return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n           .build();\n     }\n \n     List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n \n     for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n \n       ApplicationSubmissionContext context \u003d\n           RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\n \n       SubClusterId subClusterId \u003d null;\n       try {\n         subClusterId \u003d policyFacade.getHomeSubcluster(context, blacklist);\n       } catch (YarnException e) {\n+        routerMetrics.incrAppsFailedSubmitted();\n         return Response.status(Status.SERVICE_UNAVAILABLE)\n             .entity(e.getLocalizedMessage()).build();\n       }\n       LOG.info(\"submitApplication appId\" + applicationId + \" try #\" + i\n           + \" on SubCluster \" + subClusterId);\n \n       ApplicationHomeSubCluster appHomeSubCluster \u003d\n           ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\n \n       if (i \u003d\u003d 0) {\n         try {\n           // persist the mapping of applicationId and the subClusterId which has\n           // been selected as its home\n           subClusterId \u003d\n               federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\n         } catch (YarnException e) {\n+          routerMetrics.incrAppsFailedSubmitted();\n           String errMsg \u003d \"Unable to insert the ApplicationId \" + applicationId\n               + \" into the FederationStateStore\";\n           return Response.status(Status.SERVICE_UNAVAILABLE)\n               .entity(errMsg + \" \" + e.getLocalizedMessage()).build();\n         }\n       } else {\n         try {\n           // update the mapping of applicationId and the home subClusterId to\n           // the new subClusterId we have selected\n           federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\n         } catch (YarnException e) {\n           String errMsg \u003d \"Unable to update the ApplicationId \" + applicationId\n               + \" into the FederationStateStore\";\n           SubClusterId subClusterIdInStateStore;\n           try {\n             subClusterIdInStateStore \u003d\n                 federationFacade.getApplicationHomeSubCluster(applicationId);\n           } catch (YarnException e1) {\n+            routerMetrics.incrAppsFailedSubmitted();\n             return Response.status(Status.SERVICE_UNAVAILABLE)\n                 .entity(e1.getLocalizedMessage()).build();\n           }\n           if (subClusterId \u003d\u003d subClusterIdInStateStore) {\n             LOG.info(\"Application \" + applicationId\n                 + \" already submitted on SubCluster \" + subClusterId);\n           } else {\n+            routerMetrics.incrAppsFailedSubmitted();\n             return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg)\n                 .build();\n           }\n         }\n       }\n \n       SubClusterInfo subClusterInfo;\n       try {\n         subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n       } catch (YarnException e) {\n+        routerMetrics.incrAppsFailedSubmitted();\n         return Response.status(Status.SERVICE_UNAVAILABLE)\n             .entity(e.getLocalizedMessage()).build();\n       }\n \n       Response response \u003d null;\n       try {\n         response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n             subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp,\n                 hsr);\n       } catch (Exception e) {\n         LOG.warn(\"Unable to submit the application \" + applicationId\n             + \"to SubCluster \" + subClusterId.getId(), e);\n       }\n \n       if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 202) {\n         LOG.info(\"Application \" + context.getApplicationName() + \" with appId \"\n             + applicationId + \" submitted on \" + subClusterId);\n+\n+        long stopTime \u003d clock.getTime();\n+        routerMetrics.succeededAppsSubmitted(stopTime - startTime);\n+\n         return response;\n       } else {\n         // Empty response from the ResourceManager.\n         // Blacklist this subcluster for this request.\n         blacklist.add(subClusterId);\n       }\n     }\n \n+    routerMetrics.incrAppsFailedSubmitted();\n     String errMsg \u003d \"Application \" + newApp.getApplicationName()\n         + \" with appId \" + applicationId + \" failed to be submitted.\";\n     LOG.error(errMsg);\n     return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n      HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n\n    long startTime \u003d clock.getTime();\n\n    if (newApp \u003d\u003d null || newApp.getApplicationId() \u003d\u003d null) {\n      routerMetrics.incrAppsFailedSubmitted();\n      String errMsg \u003d \"Missing ApplicationSubmissionContextInfo or \"\n          + \"applicationSubmissionContex information.\";\n      return Response.status(Status.BAD_REQUEST).entity(errMsg).build();\n    }\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (IllegalArgumentException e) {\n      routerMetrics.incrAppsFailedSubmitted();\n      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n          .build();\n    }\n\n    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n\n      ApplicationSubmissionContext context \u003d\n          RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\n\n      SubClusterId subClusterId \u003d null;\n      try {\n        subClusterId \u003d policyFacade.getHomeSubcluster(context, blacklist);\n      } catch (YarnException e) {\n        routerMetrics.incrAppsFailedSubmitted();\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n      LOG.info(\"submitApplication appId\" + applicationId + \" try #\" + i\n          + \" on SubCluster \" + subClusterId);\n\n      ApplicationHomeSubCluster appHomeSubCluster \u003d\n          ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\n\n      if (i \u003d\u003d 0) {\n        try {\n          // persist the mapping of applicationId and the subClusterId which has\n          // been selected as its home\n          subClusterId \u003d\n              federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\n        } catch (YarnException e) {\n          routerMetrics.incrAppsFailedSubmitted();\n          String errMsg \u003d \"Unable to insert the ApplicationId \" + applicationId\n              + \" into the FederationStateStore\";\n          return Response.status(Status.SERVICE_UNAVAILABLE)\n              .entity(errMsg + \" \" + e.getLocalizedMessage()).build();\n        }\n      } else {\n        try {\n          // update the mapping of applicationId and the home subClusterId to\n          // the new subClusterId we have selected\n          federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\n        } catch (YarnException e) {\n          String errMsg \u003d \"Unable to update the ApplicationId \" + applicationId\n              + \" into the FederationStateStore\";\n          SubClusterId subClusterIdInStateStore;\n          try {\n            subClusterIdInStateStore \u003d\n                federationFacade.getApplicationHomeSubCluster(applicationId);\n          } catch (YarnException e1) {\n            routerMetrics.incrAppsFailedSubmitted();\n            return Response.status(Status.SERVICE_UNAVAILABLE)\n                .entity(e1.getLocalizedMessage()).build();\n          }\n          if (subClusterId \u003d\u003d subClusterIdInStateStore) {\n            LOG.info(\"Application \" + applicationId\n                + \" already submitted on SubCluster \" + subClusterId);\n          } else {\n            routerMetrics.incrAppsFailedSubmitted();\n            return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg)\n                .build();\n          }\n        }\n      }\n\n      SubClusterInfo subClusterInfo;\n      try {\n        subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n      } catch (YarnException e) {\n        routerMetrics.incrAppsFailedSubmitted();\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n\n      Response response \u003d null;\n      try {\n        response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n            subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp,\n                hsr);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to submit the application \" + applicationId\n            + \"to SubCluster \" + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 202) {\n        LOG.info(\"Application \" + context.getApplicationName() + \" with appId \"\n            + applicationId + \" submitted on \" + subClusterId);\n\n        long stopTime \u003d clock.getTime();\n        routerMetrics.succeededAppsSubmitted(stopTime - startTime);\n\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        blacklist.add(subClusterId);\n      }\n    }\n\n    routerMetrics.incrAppsFailedSubmitted();\n    String errMsg \u003d \"Application \" + newApp.getApplicationName()\n        + \" with appId \" + applicationId + \" failed to be submitted.\";\n    LOG.error(errMsg);\n    return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6896. Federation: routing REST invocations transparently to multiple RMs (part 1 - basic execution). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "11/08/17 3:58 PM",
      "commitName": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,109 @@\n+  public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n+      HttpServletRequest hsr)\n+      throws AuthorizationException, IOException, InterruptedException {\n+    if (newApp \u003d\u003d null || newApp.getApplicationId() \u003d\u003d null) {\n+      String errMsg \u003d \"Missing ApplicationSubmissionContextInfo or \"\n+          + \"applicationSubmissionContex information.\";\n+      return Response.status(Status.BAD_REQUEST).entity(errMsg).build();\n+    }\n+\n+    ApplicationId applicationId \u003d null;\n+    try {\n+      applicationId \u003d ApplicationId.fromString(newApp.getApplicationId());\n+    } catch (IllegalArgumentException e) {\n+      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n+          .build();\n+    }\n+\n+    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n+\n+    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n+\n+      ApplicationSubmissionContext context \u003d\n+          RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\n+\n+      SubClusterId subClusterId \u003d null;\n+      try {\n+        subClusterId \u003d policyFacade.getHomeSubcluster(context, blacklist);\n+      } catch (YarnException e) {\n+        return Response.status(Status.SERVICE_UNAVAILABLE)\n+            .entity(e.getLocalizedMessage()).build();\n+      }\n+      LOG.info(\"submitApplication appId\" + applicationId + \" try #\" + i\n+          + \" on SubCluster \" + subClusterId);\n+\n+      ApplicationHomeSubCluster appHomeSubCluster \u003d\n+          ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\n+\n+      if (i \u003d\u003d 0) {\n+        try {\n+          // persist the mapping of applicationId and the subClusterId which has\n+          // been selected as its home\n+          subClusterId \u003d\n+              federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\n+        } catch (YarnException e) {\n+          String errMsg \u003d \"Unable to insert the ApplicationId \" + applicationId\n+              + \" into the FederationStateStore\";\n+          return Response.status(Status.SERVICE_UNAVAILABLE)\n+              .entity(errMsg + \" \" + e.getLocalizedMessage()).build();\n+        }\n+      } else {\n+        try {\n+          // update the mapping of applicationId and the home subClusterId to\n+          // the new subClusterId we have selected\n+          federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\n+        } catch (YarnException e) {\n+          String errMsg \u003d \"Unable to update the ApplicationId \" + applicationId\n+              + \" into the FederationStateStore\";\n+          SubClusterId subClusterIdInStateStore;\n+          try {\n+            subClusterIdInStateStore \u003d\n+                federationFacade.getApplicationHomeSubCluster(applicationId);\n+          } catch (YarnException e1) {\n+            return Response.status(Status.SERVICE_UNAVAILABLE)\n+                .entity(e1.getLocalizedMessage()).build();\n+          }\n+          if (subClusterId \u003d\u003d subClusterIdInStateStore) {\n+            LOG.info(\"Application \" + applicationId\n+                + \" already submitted on SubCluster \" + subClusterId);\n+          } else {\n+            return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg)\n+                .build();\n+          }\n+        }\n+      }\n+\n+      SubClusterInfo subClusterInfo;\n+      try {\n+        subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n+      } catch (YarnException e) {\n+        return Response.status(Status.SERVICE_UNAVAILABLE)\n+            .entity(e.getLocalizedMessage()).build();\n+      }\n+\n+      Response response \u003d null;\n+      try {\n+        response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n+            subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp,\n+                hsr);\n+      } catch (Exception e) {\n+        LOG.warn(\"Unable to submit the application \" + applicationId\n+            + \"to SubCluster \" + subClusterId.getId(), e);\n+      }\n+\n+      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 202) {\n+        LOG.info(\"Application \" + context.getApplicationName() + \" with appId \"\n+            + applicationId + \" submitted on \" + subClusterId);\n+        return response;\n+      } else {\n+        // Empty response from the ResourceManager.\n+        // Blacklist this subcluster for this request.\n+        blacklist.add(subClusterId);\n+      }\n+    }\n+\n+    String errMsg \u003d \"Application \" + newApp.getApplicationName()\n+        + \" with appId \" + applicationId + \" failed to be submitted.\";\n+    LOG.error(errMsg);\n+    return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n      HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n    if (newApp \u003d\u003d null || newApp.getApplicationId() \u003d\u003d null) {\n      String errMsg \u003d \"Missing ApplicationSubmissionContextInfo or \"\n          + \"applicationSubmissionContex information.\";\n      return Response.status(Status.BAD_REQUEST).entity(errMsg).build();\n    }\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(newApp.getApplicationId());\n    } catch (IllegalArgumentException e) {\n      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n          .build();\n    }\n\n    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n\n      ApplicationSubmissionContext context \u003d\n          RMWebAppUtil.createAppSubmissionContext(newApp, this.getConf());\n\n      SubClusterId subClusterId \u003d null;\n      try {\n        subClusterId \u003d policyFacade.getHomeSubcluster(context, blacklist);\n      } catch (YarnException e) {\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n      LOG.info(\"submitApplication appId\" + applicationId + \" try #\" + i\n          + \" on SubCluster \" + subClusterId);\n\n      ApplicationHomeSubCluster appHomeSubCluster \u003d\n          ApplicationHomeSubCluster.newInstance(applicationId, subClusterId);\n\n      if (i \u003d\u003d 0) {\n        try {\n          // persist the mapping of applicationId and the subClusterId which has\n          // been selected as its home\n          subClusterId \u003d\n              federationFacade.addApplicationHomeSubCluster(appHomeSubCluster);\n        } catch (YarnException e) {\n          String errMsg \u003d \"Unable to insert the ApplicationId \" + applicationId\n              + \" into the FederationStateStore\";\n          return Response.status(Status.SERVICE_UNAVAILABLE)\n              .entity(errMsg + \" \" + e.getLocalizedMessage()).build();\n        }\n      } else {\n        try {\n          // update the mapping of applicationId and the home subClusterId to\n          // the new subClusterId we have selected\n          federationFacade.updateApplicationHomeSubCluster(appHomeSubCluster);\n        } catch (YarnException e) {\n          String errMsg \u003d \"Unable to update the ApplicationId \" + applicationId\n              + \" into the FederationStateStore\";\n          SubClusterId subClusterIdInStateStore;\n          try {\n            subClusterIdInStateStore \u003d\n                federationFacade.getApplicationHomeSubCluster(applicationId);\n          } catch (YarnException e1) {\n            return Response.status(Status.SERVICE_UNAVAILABLE)\n                .entity(e1.getLocalizedMessage()).build();\n          }\n          if (subClusterId \u003d\u003d subClusterIdInStateStore) {\n            LOG.info(\"Application \" + applicationId\n                + \" already submitted on SubCluster \" + subClusterId);\n          } else {\n            return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg)\n                .build();\n          }\n        }\n      }\n\n      SubClusterInfo subClusterInfo;\n      try {\n        subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n      } catch (YarnException e) {\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n\n      Response response \u003d null;\n      try {\n        response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n            subClusterInfo.getRMWebServiceAddress()).submitApplication(newApp,\n                hsr);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to submit the application \" + applicationId\n            + \"to SubCluster \" + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 202) {\n        LOG.info(\"Application \" + context.getApplicationName() + \" with appId \"\n            + applicationId + \" submitted on \" + subClusterId);\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        blacklist.add(subClusterId);\n      }\n    }\n\n    String errMsg \u003d \"Application \" + newApp.getApplicationName()\n        + \" with appId \" + applicationId + \" failed to be submitted.\";\n    LOG.error(errMsg);\n    return Response.status(Status.SERVICE_UNAVAILABLE).entity(errMsg).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java"
    }
  }
}