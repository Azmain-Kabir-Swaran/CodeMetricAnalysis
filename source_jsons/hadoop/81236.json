{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopology.java",
  "functionName": "getDistance",
  "functionId": "getDistance___node1-Node__node2-Node",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
  "functionStartLine": 314,
  "functionEndLine": 355,
  "numCommitsSeen": 55,
  "timeTaken": 1798,
  "changeHistory": [
    "cd8b6889a74a949e37f4b2eb664cdf3b59bfb93b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd8b6889a74a949e37f4b2eb664cdf3b59bfb93b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd8b6889a74a949e37f4b2eb664cdf3b59bfb93b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9579. Provide bytes-read-by-network-distance metrics at FileSystem.Statistics level (Ming Ma via sjlee)\n",
      "commitDate": "19/03/16 2:02 PM",
      "commitName": "cd8b6889a74a949e37f4b2eb664cdf3b59bfb93b",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "21/10/15 8:06 AM",
      "commitNameOld": "e27c2ae8bafc94f18eb38f5d839dcef5652d424e",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 150.25,
      "commitsBetweenForRepo": 1002,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,42 @@\n   public int getDistance(Node node1, Node node2) {\n-    if (node1 \u003d\u003d node2) {\n+    if ((node1 !\u003d null \u0026\u0026 node1.equals(node2)) ||\n+        (node1 \u003d\u003d null \u0026\u0026 node2 \u003d\u003d null))  {\n       return 0;\n     }\n+    if (node1 \u003d\u003d null || node2 \u003d\u003d null) {\n+      LOG.warn(\"One of the nodes is a null pointer\");\n+      return Integer.MAX_VALUE;\n+    }\n     Node n1\u003dnode1, n2\u003dnode2;\n     int dis \u003d 0;\n     netlock.readLock().lock();\n     try {\n       int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n       while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n         n1 \u003d n1.getParent();\n         level1--;\n         dis++;\n       }\n       while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n         n2 \u003d n2.getParent();\n         level2--;\n         dis++;\n       }\n       while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n         n1\u003dn1.getParent();\n         n2\u003dn2.getParent();\n         dis+\u003d2;\n       }\n     } finally {\n       netlock.readLock().unlock();\n     }\n     if (n1\u003d\u003dnull) {\n       LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n       return Integer.MAX_VALUE;\n     }\n     if (n2\u003d\u003dnull) {\n       LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n       return Integer.MAX_VALUE;\n     }\n     return dis+2;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getDistance(Node node1, Node node2) {\n    if ((node1 !\u003d null \u0026\u0026 node1.equals(node2)) ||\n        (node1 \u003d\u003d null \u0026\u0026 node2 \u003d\u003d null))  {\n      return 0;\n    }\n    if (node1 \u003d\u003d null || node2 \u003d\u003d null) {\n      LOG.warn(\"One of the nodes is a null pointer\");\n      return Integer.MAX_VALUE;\n    }\n    Node n1\u003dnode1, n2\u003dnode2;\n    int dis \u003d 0;\n    netlock.readLock().lock();\n    try {\n      int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n      while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n        n1 \u003d n1.getParent();\n        level1--;\n        dis++;\n      }\n      while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n        n2 \u003d n2.getParent();\n        level2--;\n        dis++;\n      }\n      while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n        n1\u003dn1.getParent();\n        n2\u003dn2.getParent();\n        dis+\u003d2;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n    if (n1\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n      return Integer.MAX_VALUE;\n    }\n    if (n2\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n      return Integer.MAX_VALUE;\n    }\n    return dis+2;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int getDistance(Node node1, Node node2) {\n    if (node1 \u003d\u003d node2) {\n      return 0;\n    }\n    Node n1\u003dnode1, n2\u003dnode2;\n    int dis \u003d 0;\n    netlock.readLock().lock();\n    try {\n      int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n      while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n        n1 \u003d n1.getParent();\n        level1--;\n        dis++;\n      }\n      while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n        n2 \u003d n2.getParent();\n        level2--;\n        dis++;\n      }\n      while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n        n1\u003dn1.getParent();\n        n2\u003dn2.getParent();\n        dis+\u003d2;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n    if (n1\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n      return Integer.MAX_VALUE;\n    }\n    if (n2\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n      return Integer.MAX_VALUE;\n    }\n    return dis+2;\n  } ",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int getDistance(Node node1, Node node2) {\n    if (node1 \u003d\u003d node2) {\n      return 0;\n    }\n    Node n1\u003dnode1, n2\u003dnode2;\n    int dis \u003d 0;\n    netlock.readLock().lock();\n    try {\n      int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n      while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n        n1 \u003d n1.getParent();\n        level1--;\n        dis++;\n      }\n      while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n        n2 \u003d n2.getParent();\n        level2--;\n        dis++;\n      }\n      while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n        n1\u003dn1.getParent();\n        n2\u003dn2.getParent();\n        dis+\u003d2;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n    if (n1\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n      return Integer.MAX_VALUE;\n    }\n    if (n2\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n      return Integer.MAX_VALUE;\n    }\n    return dis+2;\n  } ",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/net/NetworkTopology.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int getDistance(Node node1, Node node2) {\n    if (node1 \u003d\u003d node2) {\n      return 0;\n    }\n    Node n1\u003dnode1, n2\u003dnode2;\n    int dis \u003d 0;\n    netlock.readLock().lock();\n    try {\n      int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n      while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n        n1 \u003d n1.getParent();\n        level1--;\n        dis++;\n      }\n      while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n        n2 \u003d n2.getParent();\n        level2--;\n        dis++;\n      }\n      while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n        n1\u003dn1.getParent();\n        n2\u003dn2.getParent();\n        dis+\u003d2;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n    if (n1\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n      return Integer.MAX_VALUE;\n    }\n    if (n2\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n      return Integer.MAX_VALUE;\n    }\n    return dis+2;\n  } ",
      "path": "common/src/java/org/apache/hadoop/net/NetworkTopology.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/net/NetworkTopology.java",
        "newPath": "common/src/java/org/apache/hadoop/net/NetworkTopology.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,37 @@\n+  public int getDistance(Node node1, Node node2) {\n+    if (node1 \u003d\u003d node2) {\n+      return 0;\n+    }\n+    Node n1\u003dnode1, n2\u003dnode2;\n+    int dis \u003d 0;\n+    netlock.readLock().lock();\n+    try {\n+      int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n+      while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n+        n1 \u003d n1.getParent();\n+        level1--;\n+        dis++;\n+      }\n+      while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n+        n2 \u003d n2.getParent();\n+        level2--;\n+        dis++;\n+      }\n+      while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n+        n1\u003dn1.getParent();\n+        n2\u003dn2.getParent();\n+        dis+\u003d2;\n+      }\n+    } finally {\n+      netlock.readLock().unlock();\n+    }\n+    if (n1\u003d\u003dnull) {\n+      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n+      return Integer.MAX_VALUE;\n+    }\n+    if (n2\u003d\u003dnull) {\n+      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n+      return Integer.MAX_VALUE;\n+    }\n+    return dis+2;\n+  } \n\\ No newline at end of file\n",
      "actualSource": "  public int getDistance(Node node1, Node node2) {\n    if (node1 \u003d\u003d node2) {\n      return 0;\n    }\n    Node n1\u003dnode1, n2\u003dnode2;\n    int dis \u003d 0;\n    netlock.readLock().lock();\n    try {\n      int level1\u003dnode1.getLevel(), level2\u003dnode2.getLevel();\n      while(n1!\u003dnull \u0026\u0026 level1\u003elevel2) {\n        n1 \u003d n1.getParent();\n        level1--;\n        dis++;\n      }\n      while(n2!\u003dnull \u0026\u0026 level2\u003elevel1) {\n        n2 \u003d n2.getParent();\n        level2--;\n        dis++;\n      }\n      while(n1!\u003dnull \u0026\u0026 n2!\u003dnull \u0026\u0026 n1.getParent()!\u003dn2.getParent()) {\n        n1\u003dn1.getParent();\n        n2\u003dn2.getParent();\n        dis+\u003d2;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n    if (n1\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node1));\n      return Integer.MAX_VALUE;\n    }\n    if (n2\u003d\u003dnull) {\n      LOG.warn(\"The cluster does not contain node: \"+NodeBase.getPath(node2));\n      return Integer.MAX_VALUE;\n    }\n    return dis+2;\n  } ",
      "path": "src/java/org/apache/hadoop/net/NetworkTopology.java"
    }
  }
}