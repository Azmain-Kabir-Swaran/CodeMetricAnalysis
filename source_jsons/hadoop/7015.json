{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirectory.java",
  "functionName": "checkPermission",
  "functionId": "checkPermission___pc-FSPermissionChecker__iip-INodesInPath__doCheckOwner-boolean__ancestorAccess-FsAction__parentAccess-FsAction__access-FsAction__subAccess-FsAction__ignoreEmptyDir-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
  "functionStartLine": 1912,
  "functionEndLine": 1925,
  "numCommitsSeen": 533,
  "timeTaken": 4508,
  "changeHistory": [
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "23dacb38924e3ed6a456b1c526e71e13e3c8f30d"
  ],
  "changeHistoryShort": {
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "23dacb38924e3ed6a456b1c526e71e13e3c8f30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "04/12/14 2:09 PM",
          "commitNameOld": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  void checkPermission(\n-      FSPermissionChecker pc, String path, boolean doCheckOwner,\n-      FsAction ancestorAccess, FsAction parentAccess, FsAction access,\n-      FsAction subAccess, boolean ignoreEmptyDir, boolean resolveLink)\n-      throws AccessControlException, UnresolvedLinkException {\n+  void checkPermission(FSPermissionChecker pc, INodesInPath iip,\n+      boolean doCheckOwner, FsAction ancestorAccess, FsAction parentAccess,\n+      FsAction access, FsAction subAccess, boolean ignoreEmptyDir)\n+      throws AccessControlException {\n     if (!pc.isSuperUser()) {\n       readLock();\n       try {\n-        pc.checkPermission(path, this, doCheckOwner, ancestorAccess,\n-            parentAccess, access, subAccess, ignoreEmptyDir, resolveLink);\n+        pc.checkPermission(iip, doCheckOwner, ancestorAccess,\n+            parentAccess, access, subAccess, ignoreEmptyDir);\n       } finally {\n         readUnlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkPermission(FSPermissionChecker pc, INodesInPath iip,\n      boolean doCheckOwner, FsAction ancestorAccess, FsAction parentAccess,\n      FsAction access, FsAction subAccess, boolean ignoreEmptyDir)\n      throws AccessControlException {\n    if (!pc.isSuperUser()) {\n      readLock();\n      try {\n        pc.checkPermission(iip, doCheckOwner, ancestorAccess,\n            parentAccess, access, subAccess, ignoreEmptyDir);\n      } finally {\n        readUnlock();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[pc-FSPermissionChecker, path-String, doCheckOwner-boolean, ancestorAccess-FsAction, parentAccess-FsAction, access-FsAction, subAccess-FsAction, ignoreEmptyDir-boolean, resolveLink-boolean]",
            "newValue": "[pc-FSPermissionChecker, iip-INodesInPath, doCheckOwner-boolean, ancestorAccess-FsAction, parentAccess-FsAction, access-FsAction, subAccess-FsAction, ignoreEmptyDir-boolean]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "04/12/14 2:09 PM",
          "commitNameOld": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  void checkPermission(\n-      FSPermissionChecker pc, String path, boolean doCheckOwner,\n-      FsAction ancestorAccess, FsAction parentAccess, FsAction access,\n-      FsAction subAccess, boolean ignoreEmptyDir, boolean resolveLink)\n-      throws AccessControlException, UnresolvedLinkException {\n+  void checkPermission(FSPermissionChecker pc, INodesInPath iip,\n+      boolean doCheckOwner, FsAction ancestorAccess, FsAction parentAccess,\n+      FsAction access, FsAction subAccess, boolean ignoreEmptyDir)\n+      throws AccessControlException {\n     if (!pc.isSuperUser()) {\n       readLock();\n       try {\n-        pc.checkPermission(path, this, doCheckOwner, ancestorAccess,\n-            parentAccess, access, subAccess, ignoreEmptyDir, resolveLink);\n+        pc.checkPermission(iip, doCheckOwner, ancestorAccess,\n+            parentAccess, access, subAccess, ignoreEmptyDir);\n       } finally {\n         readUnlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkPermission(FSPermissionChecker pc, INodesInPath iip,\n      boolean doCheckOwner, FsAction ancestorAccess, FsAction parentAccess,\n      FsAction access, FsAction subAccess, boolean ignoreEmptyDir)\n      throws AccessControlException {\n    if (!pc.isSuperUser()) {\n      readLock();\n      try {\n        pc.checkPermission(iip, doCheckOwner, ancestorAccess,\n            parentAccess, access, subAccess, ignoreEmptyDir);\n      } finally {\n        readUnlock();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException, UnresolvedLinkException]",
            "newValue": "[AccessControlException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "04/12/14 2:09 PM",
          "commitNameOld": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  void checkPermission(\n-      FSPermissionChecker pc, String path, boolean doCheckOwner,\n-      FsAction ancestorAccess, FsAction parentAccess, FsAction access,\n-      FsAction subAccess, boolean ignoreEmptyDir, boolean resolveLink)\n-      throws AccessControlException, UnresolvedLinkException {\n+  void checkPermission(FSPermissionChecker pc, INodesInPath iip,\n+      boolean doCheckOwner, FsAction ancestorAccess, FsAction parentAccess,\n+      FsAction access, FsAction subAccess, boolean ignoreEmptyDir)\n+      throws AccessControlException {\n     if (!pc.isSuperUser()) {\n       readLock();\n       try {\n-        pc.checkPermission(path, this, doCheckOwner, ancestorAccess,\n-            parentAccess, access, subAccess, ignoreEmptyDir, resolveLink);\n+        pc.checkPermission(iip, doCheckOwner, ancestorAccess,\n+            parentAccess, access, subAccess, ignoreEmptyDir);\n       } finally {\n         readUnlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkPermission(FSPermissionChecker pc, INodesInPath iip,\n      boolean doCheckOwner, FsAction ancestorAccess, FsAction parentAccess,\n      FsAction access, FsAction subAccess, boolean ignoreEmptyDir)\n      throws AccessControlException {\n    if (!pc.isSuperUser()) {\n      readLock();\n      try {\n        pc.checkPermission(iip, doCheckOwner, ancestorAccess,\n            parentAccess, access, subAccess, ignoreEmptyDir);\n      } finally {\n        readUnlock();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "23dacb38924e3ed6a456b1c526e71e13e3c8f30d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7420. Delegate permission checks to FSDirectory. Contributed by Haohui Mai.\n",
      "commitDate": "21/11/14 11:01 AM",
      "commitName": "23dacb38924e3ed6a456b1c526e71e13e3c8f30d",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,15 @@\n+  void checkPermission(\n+      FSPermissionChecker pc, String path, boolean doCheckOwner,\n+      FsAction ancestorAccess, FsAction parentAccess, FsAction access,\n+      FsAction subAccess, boolean ignoreEmptyDir, boolean resolveLink)\n+      throws AccessControlException, UnresolvedLinkException {\n+    if (!pc.isSuperUser()) {\n+      readLock();\n+      try {\n+        pc.checkPermission(path, this, doCheckOwner, ancestorAccess,\n+            parentAccess, access, subAccess, ignoreEmptyDir, resolveLink);\n+      } finally {\n+        readUnlock();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void checkPermission(\n      FSPermissionChecker pc, String path, boolean doCheckOwner,\n      FsAction ancestorAccess, FsAction parentAccess, FsAction access,\n      FsAction subAccess, boolean ignoreEmptyDir, boolean resolveLink)\n      throws AccessControlException, UnresolvedLinkException {\n    if (!pc.isSuperUser()) {\n      readLock();\n      try {\n        pc.checkPermission(path, this, doCheckOwner, ancestorAccess,\n            parentAccess, access, subAccess, ignoreEmptyDir, resolveLink);\n      } finally {\n        readUnlock();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
    }
  }
}