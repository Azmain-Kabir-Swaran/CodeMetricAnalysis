{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyService.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
  "functionStartLine": 152,
  "functionEndLine": 190,
  "numCommitsSeen": 17,
  "timeTaken": 1755,
  "changeHistory": [
    "84612788339392fcda1aef0e27c43f5c6b2a19e5",
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "84612788339392fcda1aef0e27c43f5c6b2a19e5": "Ybodychange",
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "84612788339392fcda1aef0e27c43f5c6b2a19e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8544. [DS] AM registration fails when hadoop authorization is enabled. Contributed by Bibin A Chundatt.\n",
      "commitDate": "24/07/18 12:39 AM",
      "commitName": "84612788339392fcda1aef0e27c43f5c6b2a19e5",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "06/04/18 4:31 PM",
      "commitNameOld": "00905efab22edd9857e0a3828c201bf70f03cb96",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 108.34,
      "commitsBetweenForRepo": 1269,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,39 @@\n   protected void serviceStart() throws Exception {\n     LOG.info(\"Starting AMRMProxyService\");\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     UserGroupInformation.setConfiguration(conf);\n \n     this.listenerEndpoint \u003d\n         conf.getSocketAddr(YarnConfiguration.AMRM_PROXY_ADDRESS,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_PORT);\n \n     Configuration serverConf \u003d new Configuration(conf);\n     serverConf.set(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n         SaslRpcServer.AuthMethod.TOKEN.toString());\n \n     int numWorkerThreads \u003d\n         serverConf.getInt(\n             YarnConfiguration.AMRM_PROXY_CLIENT_THREAD_COUNT,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_CLIENT_THREAD_COUNT);\n \n     this.secretManager.start();\n \n     this.server \u003d\n         rpc.getServer(ApplicationMasterProtocol.class, this,\n             listenerEndpoint, serverConf, this.secretManager,\n             numWorkerThreads);\n \n+    if (conf\n+        .getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n+            false)) {\n+        this.server.refreshServiceAcl(conf, NMPolicyProvider.getInstance());\n+    }\n+\n     this.server.start();\n     LOG.info(\"AMRMProxyService listening on address: \"\n         + this.server.getListenerAddress());\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    LOG.info(\"Starting AMRMProxyService\");\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    UserGroupInformation.setConfiguration(conf);\n\n    this.listenerEndpoint \u003d\n        conf.getSocketAddr(YarnConfiguration.AMRM_PROXY_ADDRESS,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_PORT);\n\n    Configuration serverConf \u003d new Configuration(conf);\n    serverConf.set(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n        SaslRpcServer.AuthMethod.TOKEN.toString());\n\n    int numWorkerThreads \u003d\n        serverConf.getInt(\n            YarnConfiguration.AMRM_PROXY_CLIENT_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_CLIENT_THREAD_COUNT);\n\n    this.secretManager.start();\n\n    this.server \u003d\n        rpc.getServer(ApplicationMasterProtocol.class, this,\n            listenerEndpoint, serverConf, this.secretManager,\n            numWorkerThreads);\n\n    if (conf\n        .getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n            false)) {\n        this.server.refreshServiceAcl(conf, NMPolicyProvider.getInstance());\n    }\n\n    this.server.start();\n    LOG.info(\"AMRMProxyService listening on address: \"\n        + this.server.getListenerAddress());\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6127. Add support for work preserving NM restart when AMRMProxy is enabled. (Botong Huang via asuresh).\n",
      "commitDate": "22/06/17 11:27 AM",
      "commitName": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "08/05/17 4:55 PM",
      "commitNameOld": "749e5c09b9990590c282ea944e24735b795351fc",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 44.77,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,33 @@\n   protected void serviceStart() throws Exception {\n     LOG.info(\"Starting AMRMProxyService\");\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     UserGroupInformation.setConfiguration(conf);\n \n     this.listenerEndpoint \u003d\n         conf.getSocketAddr(YarnConfiguration.AMRM_PROXY_ADDRESS,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_PORT);\n \n     Configuration serverConf \u003d new Configuration(conf);\n     serverConf.set(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n         SaslRpcServer.AuthMethod.TOKEN.toString());\n \n     int numWorkerThreads \u003d\n         serverConf.getInt(\n             YarnConfiguration.AMRM_PROXY_CLIENT_THREAD_COUNT,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_CLIENT_THREAD_COUNT);\n \n-    this.secretManager \u003d new AMRMProxyTokenSecretManager(serverConf);\n     this.secretManager.start();\n \n     this.server \u003d\n         rpc.getServer(ApplicationMasterProtocol.class, this,\n             listenerEndpoint, serverConf, this.secretManager,\n             numWorkerThreads);\n \n     this.server.start();\n     LOG.info(\"AMRMProxyService listening on address: \"\n         + this.server.getListenerAddress());\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    LOG.info(\"Starting AMRMProxyService\");\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    UserGroupInformation.setConfiguration(conf);\n\n    this.listenerEndpoint \u003d\n        conf.getSocketAddr(YarnConfiguration.AMRM_PROXY_ADDRESS,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_PORT);\n\n    Configuration serverConf \u003d new Configuration(conf);\n    serverConf.set(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n        SaslRpcServer.AuthMethod.TOKEN.toString());\n\n    int numWorkerThreads \u003d\n        serverConf.getInt(\n            YarnConfiguration.AMRM_PROXY_CLIENT_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_CLIENT_THREAD_COUNT);\n\n    this.secretManager.start();\n\n    this.server \u003d\n        rpc.getServer(ApplicationMasterProtocol.class, this,\n            listenerEndpoint, serverConf, this.secretManager,\n            numWorkerThreads);\n\n    this.server.start();\n    LOG.info(\"AMRMProxyService listening on address: \"\n        + this.server.getListenerAddress());\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,34 @@\n+  protected void serviceStart() throws Exception {\n+    LOG.info(\"Starting AMRMProxyService\");\n+    Configuration conf \u003d getConfig();\n+    YarnRPC rpc \u003d YarnRPC.create(conf);\n+    UserGroupInformation.setConfiguration(conf);\n+\n+    this.listenerEndpoint \u003d\n+        conf.getSocketAddr(YarnConfiguration.AMRM_PROXY_ADDRESS,\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS,\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_PORT);\n+\n+    Configuration serverConf \u003d new Configuration(conf);\n+    serverConf.set(\n+        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n+        SaslRpcServer.AuthMethod.TOKEN.toString());\n+\n+    int numWorkerThreads \u003d\n+        serverConf.getInt(\n+            YarnConfiguration.AMRM_PROXY_CLIENT_THREAD_COUNT,\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_CLIENT_THREAD_COUNT);\n+\n+    this.secretManager \u003d new AMRMProxyTokenSecretManager(serverConf);\n+    this.secretManager.start();\n+\n+    this.server \u003d\n+        rpc.getServer(ApplicationMasterProtocol.class, this,\n+            listenerEndpoint, serverConf, this.secretManager,\n+            numWorkerThreads);\n+\n+    this.server.start();\n+    LOG.info(\"AMRMProxyService listening on address: \"\n+        + this.server.getListenerAddress());\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    LOG.info(\"Starting AMRMProxyService\");\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    UserGroupInformation.setConfiguration(conf);\n\n    this.listenerEndpoint \u003d\n        conf.getSocketAddr(YarnConfiguration.AMRM_PROXY_ADDRESS,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_PORT);\n\n    Configuration serverConf \u003d new Configuration(conf);\n    serverConf.set(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n        SaslRpcServer.AuthMethod.TOKEN.toString());\n\n    int numWorkerThreads \u003d\n        serverConf.getInt(\n            YarnConfiguration.AMRM_PROXY_CLIENT_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_CLIENT_THREAD_COUNT);\n\n    this.secretManager \u003d new AMRMProxyTokenSecretManager(serverConf);\n    this.secretManager.start();\n\n    this.server \u003d\n        rpc.getServer(ApplicationMasterProtocol.class, this,\n            listenerEndpoint, serverConf, this.secretManager,\n            numWorkerThreads);\n\n    this.server.start();\n    LOG.info(\"AMRMProxyService listening on address: \"\n        + this.server.getListenerAddress());\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java"
    }
  }
}