{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CGroupsHandlerImpl.java",
  "functionName": "initializeControllerPaths",
  "functionId": "initializeControllerPaths",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
  "functionStartLine": 137,
  "functionEndLine": 175,
  "numCommitsSeen": 25,
  "timeTaken": 3212,
  "changeHistory": [
    "e0c21c6da91776caf661661a19c368939c81fcc4",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "47b145b9b4e81d781891abce8a6638f0b436acc4",
    "a2f680493f040704e2b85108e286731ee3860a52",
    "e6f13fe5d1df8918ffc680d18f9d5576f38893a6",
    "1b3b9e5c31c38388c1ce4208c65e8dd5f956da82",
    "838b06ac87339494cea706d4a97e7f5383bdc442"
  ],
  "changeHistoryShort": {
    "e0c21c6da91776caf661661a19c368939c81fcc4": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "47b145b9b4e81d781891abce8a6638f0b436acc4": "Ybodychange",
    "a2f680493f040704e2b85108e286731ee3860a52": "Ybodychange",
    "e6f13fe5d1df8918ffc680d18f9d5576f38893a6": "Ybodychange",
    "1b3b9e5c31c38388c1ce4208c65e8dd5f956da82": "Ybodychange",
    "838b06ac87339494cea706d4a97e7f5383bdc442": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e0c21c6da91776caf661661a19c368939c81fcc4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9092. Create an object for cgroups mount enable and cgroups mount path as they belong together. Contributed by Gergely Pollak\n",
      "commitDate": "09/08/19 1:18 AM",
      "commitName": "e0c21c6da91776caf661661a19c368939c81fcc4",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "18/03/19 10:57 AM",
      "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 143.6,
      "commitsBetweenForRepo": 1035,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   private void initializeControllerPaths() throws ResourceHandlerException {\n     // Cluster admins may have some subsystems mounted in specific locations\n     // We\u0027ll attempt to figure out mount points. We do this even if we plan\n     // to mount cgroups into our own tree to control the path permissions or\n     // to mount subsystems that are not mounted previously.\n     // The subsystems for new and existing mount points have to match, and\n     // the same hierarchy will be mounted at each mount point with the same\n     // subsystem set.\n \n     Map\u003cString, Set\u003cString\u003e\u003e newMtab \u003d null;\n     Map\u003cCGroupController, String\u003e cPaths;\n     try {\n-      if (this.cGroupMountPath !\u003d null \u0026\u0026 !this.enableCGroupMount) {\n+      if (this.cGroupsMountConfig.mountDisabledButMountPathDefined()) {\n         newMtab \u003d ResourceHandlerModule.\n-            parseConfiguredCGroupPath(this.cGroupMountPath);\n+            parseConfiguredCGroupPath(this.cGroupsMountConfig.getMountPath());\n       }\n \n       if (newMtab \u003d\u003d null) {\n         // parse mtab\n         newMtab \u003d parseMtab(mtabFile);\n       }\n \n       // find cgroup controller paths\n       cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n       throw new ResourceHandlerException(\n           \"Failed to initialize controller paths!\");\n     }\n \n     // we want to do a bulk update without the paths changing concurrently\n     rwLock.writeLock().lock();\n     try {\n       controllerPaths \u003d cPaths;\n       parsedMtab \u003d newMtab;\n     } finally {\n       rwLock.writeLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    // Cluster admins may have some subsystems mounted in specific locations\n    // We\u0027ll attempt to figure out mount points. We do this even if we plan\n    // to mount cgroups into our own tree to control the path permissions or\n    // to mount subsystems that are not mounted previously.\n    // The subsystems for new and existing mount points have to match, and\n    // the same hierarchy will be mounted at each mount point with the same\n    // subsystem set.\n\n    Map\u003cString, Set\u003cString\u003e\u003e newMtab \u003d null;\n    Map\u003cCGroupController, String\u003e cPaths;\n    try {\n      if (this.cGroupsMountConfig.mountDisabledButMountPathDefined()) {\n        newMtab \u003d ResourceHandlerModule.\n            parseConfiguredCGroupPath(this.cGroupsMountConfig.getMountPath());\n      }\n\n      if (newMtab \u003d\u003d null) {\n        // parse mtab\n        newMtab \u003d parseMtab(mtabFile);\n      }\n\n      // find cgroup controller paths\n      cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n      throw new ResourceHandlerException(\n          \"Failed to initialize controller paths!\");\n    }\n\n    // we want to do a bulk update without the paths changing concurrently\n    rwLock.writeLock().lock();\n    try {\n      controllerPaths \u003d cPaths;\n      parsedMtab \u003d newMtab;\n    } finally {\n      rwLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "10/12/18 11:12 AM",
      "commitNameOld": "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 87.11,
      "commitsBetweenForRepo": 653,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   private void initializeControllerPaths() throws ResourceHandlerException {\n     // Cluster admins may have some subsystems mounted in specific locations\n     // We\u0027ll attempt to figure out mount points. We do this even if we plan\n     // to mount cgroups into our own tree to control the path permissions or\n     // to mount subsystems that are not mounted previously.\n     // The subsystems for new and existing mount points have to match, and\n     // the same hierarchy will be mounted at each mount point with the same\n     // subsystem set.\n \n     Map\u003cString, Set\u003cString\u003e\u003e newMtab \u003d null;\n     Map\u003cCGroupController, String\u003e cPaths;\n     try {\n       if (this.cGroupMountPath !\u003d null \u0026\u0026 !this.enableCGroupMount) {\n         newMtab \u003d ResourceHandlerModule.\n             parseConfiguredCGroupPath(this.cGroupMountPath);\n       }\n \n       if (newMtab \u003d\u003d null) {\n         // parse mtab\n         newMtab \u003d parseMtab(mtabFile);\n       }\n \n       // find cgroup controller paths\n       cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n       throw new ResourceHandlerException(\n           \"Failed to initialize controller paths!\");\n     }\n \n     // we want to do a bulk update without the paths changing concurrently\n+    rwLock.writeLock().lock();\n     try {\n-      rwLock.writeLock().lock();\n       controllerPaths \u003d cPaths;\n       parsedMtab \u003d newMtab;\n     } finally {\n       rwLock.writeLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    // Cluster admins may have some subsystems mounted in specific locations\n    // We\u0027ll attempt to figure out mount points. We do this even if we plan\n    // to mount cgroups into our own tree to control the path permissions or\n    // to mount subsystems that are not mounted previously.\n    // The subsystems for new and existing mount points have to match, and\n    // the same hierarchy will be mounted at each mount point with the same\n    // subsystem set.\n\n    Map\u003cString, Set\u003cString\u003e\u003e newMtab \u003d null;\n    Map\u003cCGroupController, String\u003e cPaths;\n    try {\n      if (this.cGroupMountPath !\u003d null \u0026\u0026 !this.enableCGroupMount) {\n        newMtab \u003d ResourceHandlerModule.\n            parseConfiguredCGroupPath(this.cGroupMountPath);\n      }\n\n      if (newMtab \u003d\u003d null) {\n        // parse mtab\n        newMtab \u003d parseMtab(mtabFile);\n      }\n\n      // find cgroup controller paths\n      cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n      throw new ResourceHandlerException(\n          \"Failed to initialize controller paths!\");\n    }\n\n    // we want to do a bulk update without the paths changing concurrently\n    rwLock.writeLock().lock();\n    try {\n      controllerPaths \u003d cPaths;\n      parsedMtab \u003d newMtab;\n    } finally {\n      rwLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
      "extendedDetails": {}
    },
    "47b145b9b4e81d781891abce8a6638f0b436acc4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6757. Refactor the usage of yarn.nodemanager.linux-container-executor.cgroups.mount-path\n(Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "08/08/17 10:33 AM",
      "commitName": "47b145b9b4e81d781891abce8a6638f0b436acc4",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "09/05/17 12:05 PM",
      "commitNameOld": "a2f680493f040704e2b85108e286731ee3860a52",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 90.94,
      "commitsBetweenForRepo": 509,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,39 @@\n   private void initializeControllerPaths() throws ResourceHandlerException {\n     // Cluster admins may have some subsystems mounted in specific locations\n     // We\u0027ll attempt to figure out mount points. We do this even if we plan\n     // to mount cgroups into our own tree to control the path permissions or\n     // to mount subsystems that are not mounted previously.\n     // The subsystems for new and existing mount points have to match, and\n     // the same hierarchy will be mounted at each mount point with the same\n     // subsystem set.\n \n-    Map\u003cString, Set\u003cString\u003e\u003e newMtab;\n+    Map\u003cString, Set\u003cString\u003e\u003e newMtab \u003d null;\n     Map\u003cCGroupController, String\u003e cPaths;\n     try {\n-      // parse mtab\n-      newMtab \u003d parseMtab(mtabFile);\n+      if (this.cGroupMountPath !\u003d null \u0026\u0026 !this.enableCGroupMount) {\n+        newMtab \u003d ResourceHandlerModule.\n+            parseConfiguredCGroupPath(this.cGroupMountPath);\n+      }\n+\n+      if (newMtab \u003d\u003d null) {\n+        // parse mtab\n+        newMtab \u003d parseMtab(mtabFile);\n+      }\n \n       // find cgroup controller paths\n       cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n       throw new ResourceHandlerException(\n           \"Failed to initialize controller paths!\");\n     }\n \n     // we want to do a bulk update without the paths changing concurrently\n     try {\n       rwLock.writeLock().lock();\n       controllerPaths \u003d cPaths;\n       parsedMtab \u003d newMtab;\n     } finally {\n       rwLock.writeLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    // Cluster admins may have some subsystems mounted in specific locations\n    // We\u0027ll attempt to figure out mount points. We do this even if we plan\n    // to mount cgroups into our own tree to control the path permissions or\n    // to mount subsystems that are not mounted previously.\n    // The subsystems for new and existing mount points have to match, and\n    // the same hierarchy will be mounted at each mount point with the same\n    // subsystem set.\n\n    Map\u003cString, Set\u003cString\u003e\u003e newMtab \u003d null;\n    Map\u003cCGroupController, String\u003e cPaths;\n    try {\n      if (this.cGroupMountPath !\u003d null \u0026\u0026 !this.enableCGroupMount) {\n        newMtab \u003d ResourceHandlerModule.\n            parseConfiguredCGroupPath(this.cGroupMountPath);\n      }\n\n      if (newMtab \u003d\u003d null) {\n        // parse mtab\n        newMtab \u003d parseMtab(mtabFile);\n      }\n\n      // find cgroup controller paths\n      cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n      throw new ResourceHandlerException(\n          \"Failed to initialize controller paths!\");\n    }\n\n    // we want to do a bulk update without the paths changing concurrently\n    try {\n      rwLock.writeLock().lock();\n      controllerPaths \u003d cPaths;\n      parsedMtab \u003d newMtab;\n    } finally {\n      rwLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
      "extendedDetails": {}
    },
    "a2f680493f040704e2b85108e286731ee3860a52": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5301. NM mount cpu cgroups failed on some systems\n(Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "09/05/17 12:05 PM",
      "commitName": "a2f680493f040704e2b85108e286731ee3860a52",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "24/04/17 11:37 AM",
      "commitNameOld": "8ac50e1322cb3f84bd998635924d85846aa47c94",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 15.02,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,32 @@\n   private void initializeControllerPaths() throws ResourceHandlerException {\n-    if (enableCGroupMount) {\n-      // nothing to do here - we support \u0027deferred\u0027 mounting of specific\n-      // controllers - we\u0027ll populate the path for a given controller when an\n-      // explicit mountCGroupController request is issued.\n-      LOG.info(\"CGroup controller mounting enabled.\");\n-    } else {\n-      // cluster admins are expected to have mounted controllers in specific\n-      // locations - we\u0027ll attempt to figure out mount points\n+    // Cluster admins may have some subsystems mounted in specific locations\n+    // We\u0027ll attempt to figure out mount points. We do this even if we plan\n+    // to mount cgroups into our own tree to control the path permissions or\n+    // to mount subsystems that are not mounted previously.\n+    // The subsystems for new and existing mount points have to match, and\n+    // the same hierarchy will be mounted at each mount point with the same\n+    // subsystem set.\n \n-      Map\u003cCGroupController, String\u003e cPaths \u003d\n-          initializeControllerPathsFromMtab(mtabFile, this.cGroupPrefix);\n-      // we want to do a bulk update without the paths changing concurrently\n-      try {\n-        rwLock.writeLock().lock();\n-        controllerPaths \u003d cPaths;\n-      } finally {\n-        rwLock.writeLock().unlock();\n-      }\n+    Map\u003cString, Set\u003cString\u003e\u003e newMtab;\n+    Map\u003cCGroupController, String\u003e cPaths;\n+    try {\n+      // parse mtab\n+      newMtab \u003d parseMtab(mtabFile);\n+\n+      // find cgroup controller paths\n+      cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n+    } catch (IOException e) {\n+      LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n+      throw new ResourceHandlerException(\n+          \"Failed to initialize controller paths!\");\n+    }\n+\n+    // we want to do a bulk update without the paths changing concurrently\n+    try {\n+      rwLock.writeLock().lock();\n+      controllerPaths \u003d cPaths;\n+      parsedMtab \u003d newMtab;\n+    } finally {\n+      rwLock.writeLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    // Cluster admins may have some subsystems mounted in specific locations\n    // We\u0027ll attempt to figure out mount points. We do this even if we plan\n    // to mount cgroups into our own tree to control the path permissions or\n    // to mount subsystems that are not mounted previously.\n    // The subsystems for new and existing mount points have to match, and\n    // the same hierarchy will be mounted at each mount point with the same\n    // subsystem set.\n\n    Map\u003cString, Set\u003cString\u003e\u003e newMtab;\n    Map\u003cCGroupController, String\u003e cPaths;\n    try {\n      // parse mtab\n      newMtab \u003d parseMtab(mtabFile);\n\n      // find cgroup controller paths\n      cPaths \u003d initializeControllerPathsFromMtab(newMtab);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to initialize controller paths! Exception: \" + e);\n      throw new ResourceHandlerException(\n          \"Failed to initialize controller paths!\");\n    }\n\n    // we want to do a bulk update without the paths changing concurrently\n    try {\n      rwLock.writeLock().lock();\n      controllerPaths \u003d cPaths;\n      parsedMtab \u003d newMtab;\n    } finally {\n      rwLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
      "extendedDetails": {}
    },
    "e6f13fe5d1df8918ffc680d18f9d5576f38893a6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5849. Automatically create YARN control group for pre-mounted cgroups (Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "11/01/17 4:00 PM",
      "commitName": "e6f13fe5d1df8918ffc680d18f9d5576f38893a6",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "07/03/16 7:40 AM",
      "commitNameOld": "059caf99891943d9587cac19b48e82efbed06b2d",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 310.35,
      "commitsBetweenForRepo": 2164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private void initializeControllerPaths() throws ResourceHandlerException {\n     if (enableCGroupMount) {\n       // nothing to do here - we support \u0027deferred\u0027 mounting of specific\n       // controllers - we\u0027ll populate the path for a given controller when an\n       // explicit mountCGroupController request is issued.\n       LOG.info(\"CGroup controller mounting enabled.\");\n     } else {\n       // cluster admins are expected to have mounted controllers in specific\n       // locations - we\u0027ll attempt to figure out mount points\n \n       Map\u003cCGroupController, String\u003e cPaths \u003d\n-          initializeControllerPathsFromMtab(MTAB_FILE, this.cGroupPrefix);\n+          initializeControllerPathsFromMtab(mtabFile, this.cGroupPrefix);\n       // we want to do a bulk update without the paths changing concurrently\n       try {\n         rwLock.writeLock().lock();\n         controllerPaths \u003d cPaths;\n       } finally {\n         rwLock.writeLock().unlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    if (enableCGroupMount) {\n      // nothing to do here - we support \u0027deferred\u0027 mounting of specific\n      // controllers - we\u0027ll populate the path for a given controller when an\n      // explicit mountCGroupController request is issued.\n      LOG.info(\"CGroup controller mounting enabled.\");\n    } else {\n      // cluster admins are expected to have mounted controllers in specific\n      // locations - we\u0027ll attempt to figure out mount points\n\n      Map\u003cCGroupController, String\u003e cPaths \u003d\n          initializeControllerPathsFromMtab(mtabFile, this.cGroupPrefix);\n      // we want to do a bulk update without the paths changing concurrently\n      try {\n        rwLock.writeLock().lock();\n        controllerPaths \u003d cPaths;\n      } finally {\n        rwLock.writeLock().unlock();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
      "extendedDetails": {}
    },
    "1b3b9e5c31c38388c1ce4208c65e8dd5f956da82": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2619. Added NodeManager support for disk io isolation through cgroups. Contributed by Varun Vasudev and Wei Yan.\n",
      "commitDate": "30/04/15 9:41 PM",
      "commitName": "1b3b9e5c31c38388c1ce4208c65e8dd5f956da82",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/04/15 6:35 PM",
      "commitNameOld": "838b06ac87339494cea706d4a97e7f5383bdc442",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 17.13,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,21 @@\n   private void initializeControllerPaths() throws ResourceHandlerException {\n     if (enableCGroupMount) {\n-      //nothing to do here - we support \u0027deferred\u0027 mounting of specific\n-      //controllers - we\u0027ll populate the path for a given controller when an\n-      //explicit mountCGroupController request is issued.\n+      // nothing to do here - we support \u0027deferred\u0027 mounting of specific\n+      // controllers - we\u0027ll populate the path for a given controller when an\n+      // explicit mountCGroupController request is issued.\n       LOG.info(\"CGroup controller mounting enabled.\");\n     } else {\n-      //cluster admins are expected to have mounted controllers in specific\n-      //locations - we\u0027ll attempt to figure out mount points\n-      initializeControllerPathsFromMtab();\n+      // cluster admins are expected to have mounted controllers in specific\n+      // locations - we\u0027ll attempt to figure out mount points\n+\n+      Map\u003cCGroupController, String\u003e cPaths \u003d\n+          initializeControllerPathsFromMtab(MTAB_FILE, this.cGroupPrefix);\n+      // we want to do a bulk update without the paths changing concurrently\n+      try {\n+        rwLock.writeLock().lock();\n+        controllerPaths \u003d cPaths;\n+      } finally {\n+        rwLock.writeLock().unlock();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    if (enableCGroupMount) {\n      // nothing to do here - we support \u0027deferred\u0027 mounting of specific\n      // controllers - we\u0027ll populate the path for a given controller when an\n      // explicit mountCGroupController request is issued.\n      LOG.info(\"CGroup controller mounting enabled.\");\n    } else {\n      // cluster admins are expected to have mounted controllers in specific\n      // locations - we\u0027ll attempt to figure out mount points\n\n      Map\u003cCGroupController, String\u003e cPaths \u003d\n          initializeControllerPathsFromMtab(MTAB_FILE, this.cGroupPrefix);\n      // we want to do a bulk update without the paths changing concurrently\n      try {\n        rwLock.writeLock().lock();\n        controllerPaths \u003d cPaths;\n      } finally {\n        rwLock.writeLock().unlock();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java",
      "extendedDetails": {}
    },
    "838b06ac87339494cea706d4a97e7f5383bdc442": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3443. Create a \u0027ResourceHandler\u0027 subsystem to ease addition of support for new resource types on the NM. Contributed by Sidharta Seethana.\n",
      "commitDate": "13/04/15 6:35 PM",
      "commitName": "838b06ac87339494cea706d4a97e7f5383bdc442",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,12 @@\n+  private void initializeControllerPaths() throws ResourceHandlerException {\n+    if (enableCGroupMount) {\n+      //nothing to do here - we support \u0027deferred\u0027 mounting of specific\n+      //controllers - we\u0027ll populate the path for a given controller when an\n+      //explicit mountCGroupController request is issued.\n+      LOG.info(\"CGroup controller mounting enabled.\");\n+    } else {\n+      //cluster admins are expected to have mounted controllers in specific\n+      //locations - we\u0027ll attempt to figure out mount points\n+      initializeControllerPathsFromMtab();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeControllerPaths() throws ResourceHandlerException {\n    if (enableCGroupMount) {\n      //nothing to do here - we support \u0027deferred\u0027 mounting of specific\n      //controllers - we\u0027ll populate the path for a given controller when an\n      //explicit mountCGroupController request is issued.\n      LOG.info(\"CGroup controller mounting enabled.\");\n    } else {\n      //cluster admins are expected to have mounted controllers in specific\n      //locations - we\u0027ll attempt to figure out mount points\n      initializeControllerPathsFromMtab();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/CGroupsHandlerImpl.java"
    }
  }
}