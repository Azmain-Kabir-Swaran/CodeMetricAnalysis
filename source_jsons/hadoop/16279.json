{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConnectionManager.java",
  "functionName": "cleanup",
  "functionId": "cleanup___pool-ConnectionPool",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
  "functionStartLine": 325,
  "functionEndLine": 345,
  "numCommitsSeen": 11,
  "timeTaken": 3809,
  "changeHistory": [
    "94a8dec168842cc17787526ee9a662f427a5dcea",
    "0ca7142c112c14004a6411df0f0d1bf3c4d17702",
    "6aa7aabff801905f55a18d117f927d0125057d78",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "0c2b969e0161a068bf9ae013c4b95508dfb90a8a",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7"
  ],
  "changeHistoryShort": {
    "94a8dec168842cc17787526ee9a662f427a5dcea": "Ybodychange",
    "0ca7142c112c14004a6411df0f0d1bf3c4d17702": "Ybodychange",
    "6aa7aabff801905f55a18d117f927d0125057d78": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "0c2b969e0161a068bf9ae013c4b95508dfb90a8a": "Ymultichange(Ymodifierchange,Ybodychange)",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "94a8dec168842cc17787526ee9a662f427a5dcea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14114. RBF: MIN_ACTIVE_RATIO should be configurable. Contributed by Fei Hui.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "94a8dec168842cc17787526ee9a662f427a5dcea",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "0ca7142c112c14004a6411df0f0d1bf3c4d17702",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   void cleanup(ConnectionPool pool) {\n     if (pool.getNumConnections() \u003e pool.getMinSize()) {\n       // Check if the pool hasn\u0027t been active in a while or not 50% are used\n       long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n       int total \u003d pool.getNumConnections();\n       int active \u003d pool.getNumActiveConnections();\n+      float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n       if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n-          active \u003c MIN_ACTIVE_RATIO * total) {\n+          active \u003c poolMinActiveRatio * total) {\n         // Remove and close 1 connection\n         List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n         for (ConnectionContext conn : conns) {\n           conn.close();\n         }\n         LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                 \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n             TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n             pool.getNumConnections(), pool.getMaxSize());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void cleanup(ConnectionPool pool) {\n    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n      int total \u003d pool.getNumConnections();\n      int active \u003d pool.getNumActiveConnections();\n      float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n          active \u003c poolMinActiveRatio * total) {\n        // Remove and close 1 connection\n        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n        for (ConnectionContext conn : conns) {\n          conn.close();\n        }\n        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n            pool.getNumConnections(), pool.getMaxSize());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "0ca7142c112c14004a6411df0f0d1bf3c4d17702": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-14114. RBF: MIN_ACTIVE_RATIO should be configurable. Contributed by Fei Hui.\"\n\nThis reverts commit 7c0d6f65fde12ead91ed7c706521ad1d3dc995f8.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "0ca7142c112c14004a6411df0f0d1bf3c4d17702",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "6aa7aabff801905f55a18d117f927d0125057d78",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   void cleanup(ConnectionPool pool) {\n     if (pool.getNumConnections() \u003e pool.getMinSize()) {\n       // Check if the pool hasn\u0027t been active in a while or not 50% are used\n       long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n       int total \u003d pool.getNumConnections();\n       int active \u003d pool.getNumActiveConnections();\n-      float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n       if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n-          active \u003c poolMinActiveRatio * total) {\n+          active \u003c MIN_ACTIVE_RATIO * total) {\n         // Remove and close 1 connection\n         List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n         for (ConnectionContext conn : conns) {\n           conn.close();\n         }\n         LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                 \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n             TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n             pool.getNumConnections(), pool.getMaxSize());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void cleanup(ConnectionPool pool) {\n    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n      int total \u003d pool.getNumConnections();\n      int active \u003d pool.getNumActiveConnections();\n      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n          active \u003c MIN_ACTIVE_RATIO * total) {\n        // Remove and close 1 connection\n        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n        for (ConnectionContext conn : conns) {\n          conn.close();\n        }\n        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n            pool.getNumConnections(), pool.getMaxSize());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "6aa7aabff801905f55a18d117f927d0125057d78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14114. RBF: MIN_ACTIVE_RATIO should be configurable. Contributed by Fei Hui.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6aa7aabff801905f55a18d117f927d0125057d78",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "fa55eacd357f4c4524fb54598e989c5746921de2",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   void cleanup(ConnectionPool pool) {\n     if (pool.getNumConnections() \u003e pool.getMinSize()) {\n       // Check if the pool hasn\u0027t been active in a while or not 50% are used\n       long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n       int total \u003d pool.getNumConnections();\n       int active \u003d pool.getNumActiveConnections();\n+      float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n       if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n-          active \u003c MIN_ACTIVE_RATIO * total) {\n+          active \u003c poolMinActiveRatio * total) {\n         // Remove and close 1 connection\n         List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n         for (ConnectionContext conn : conns) {\n           conn.close();\n         }\n         LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                 \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n             TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n             pool.getNumConnections(), pool.getMaxSize());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void cleanup(ConnectionPool pool) {\n    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n      int total \u003d pool.getNumConnections();\n      int active \u003d pool.getNumActiveConnections();\n      float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n          active \u003c poolMinActiveRatio * total) {\n        // Remove and close 1 connection\n        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n        for (ConnectionContext conn : conns) {\n          conn.close();\n        }\n        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n            pool.getNumConnections(), pool.getMaxSize());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void cleanup(ConnectionPool pool) {\n    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n      int total \u003d pool.getNumConnections();\n      int active \u003d pool.getNumActiveConnections();\n      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n          active \u003c MIN_ACTIVE_RATIO * total) {\n        // Remove and close 1 connection\n        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n        for (ConnectionContext conn : conns) {\n          conn.close();\n        }\n        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n            pool.getNumConnections(), pool.getMaxSize());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java"
      }
    },
    "0c2b969e0161a068bf9ae013c4b95508dfb90a8a": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-13232. RBF: ConnectionManager\u0027s cleanup task will compare each pool\u0027s own active conns with its total conns. Contributed by Chao Sun.\n",
      "commitDate": "08/03/18 9:32 AM",
      "commitName": "0c2b969e0161a068bf9ae013c4b95508dfb90a8a",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-13232. RBF: ConnectionManager\u0027s cleanup task will compare each pool\u0027s own active conns with its total conns. Contributed by Chao Sun.\n",
          "commitDate": "08/03/18 9:32 AM",
          "commitName": "0c2b969e0161a068bf9ae013c4b95508dfb90a8a",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "29/11/17 9:43 AM",
          "commitNameOld": "301641811d93ac22dc6fe1a05f18c1f266cc5e54",
          "commitAuthorOld": "Wei Yan",
          "daysBetweenCommits": 98.99,
          "commitsBetweenForRepo": 608,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void cleanup(ConnectionPool pool) {\n-      if (pool.getNumConnections() \u003e pool.getMinSize()) {\n-        // Check if the pool hasn\u0027t been active in a while or not 50% are used\n-        long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n-        int total \u003d pool.getNumConnections();\n-        int active \u003d getNumActiveConnections();\n-        if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n-            active \u003c MIN_ACTIVE_RATIO * total) {\n-          // Remove and close 1 connection\n-          List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n-          for (ConnectionContext conn : conns) {\n-            conn.close();\n-          }\n-          LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n-              \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n-              TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n-              pool.getNumConnections(), pool.getMaxSize());\n+  void cleanup(ConnectionPool pool) {\n+    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n+      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n+      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n+      int total \u003d pool.getNumConnections();\n+      int active \u003d pool.getNumActiveConnections();\n+      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n+          active \u003c MIN_ACTIVE_RATIO * total) {\n+        // Remove and close 1 connection\n+        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n+        for (ConnectionContext conn : conns) {\n+          conn.close();\n         }\n+        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n+                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n+            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n+            pool.getNumConnections(), pool.getMaxSize());\n       }\n-    }\n\\ No newline at end of file\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void cleanup(ConnectionPool pool) {\n    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n      int total \u003d pool.getNumConnections();\n      int active \u003d pool.getNumActiveConnections();\n      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n          active \u003c MIN_ACTIVE_RATIO * total) {\n        // Remove and close 1 connection\n        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n        for (ConnectionContext conn : conns) {\n          conn.close();\n        }\n        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n            pool.getNumConnections(), pool.getMaxSize());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13232. RBF: ConnectionManager\u0027s cleanup task will compare each pool\u0027s own active conns with its total conns. Contributed by Chao Sun.\n",
          "commitDate": "08/03/18 9:32 AM",
          "commitName": "0c2b969e0161a068bf9ae013c4b95508dfb90a8a",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "29/11/17 9:43 AM",
          "commitNameOld": "301641811d93ac22dc6fe1a05f18c1f266cc5e54",
          "commitAuthorOld": "Wei Yan",
          "daysBetweenCommits": 98.99,
          "commitsBetweenForRepo": 608,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void cleanup(ConnectionPool pool) {\n-      if (pool.getNumConnections() \u003e pool.getMinSize()) {\n-        // Check if the pool hasn\u0027t been active in a while or not 50% are used\n-        long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n-        int total \u003d pool.getNumConnections();\n-        int active \u003d getNumActiveConnections();\n-        if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n-            active \u003c MIN_ACTIVE_RATIO * total) {\n-          // Remove and close 1 connection\n-          List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n-          for (ConnectionContext conn : conns) {\n-            conn.close();\n-          }\n-          LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n-              \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n-              TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n-              pool.getNumConnections(), pool.getMaxSize());\n+  void cleanup(ConnectionPool pool) {\n+    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n+      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n+      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n+      int total \u003d pool.getNumConnections();\n+      int active \u003d pool.getNumActiveConnections();\n+      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n+          active \u003c MIN_ACTIVE_RATIO * total) {\n+        // Remove and close 1 connection\n+        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n+        for (ConnectionContext conn : conns) {\n+          conn.close();\n         }\n+        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n+                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n+            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n+            pool.getNumConnections(), pool.getMaxSize());\n       }\n-    }\n\\ No newline at end of file\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void cleanup(ConnectionPool pool) {\n    if (pool.getNumConnections() \u003e pool.getMinSize()) {\n      // Check if the pool hasn\u0027t been active in a while or not 50% are used\n      long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n      int total \u003d pool.getNumConnections();\n      int active \u003d pool.getNumActiveConnections();\n      if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n          active \u003c MIN_ACTIVE_RATIO * total) {\n        // Remove and close 1 connection\n        List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n        for (ConnectionContext conn : conns) {\n          conn.close();\n        }\n        LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n                \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n            TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n            pool.getNumConnections(), pool.getMaxSize());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11546. Federation Router RPC server. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 8a9cdebebf26841a0f1e99fb08135f4597f2eba2)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "ca4f209b49e3aad6a80306f7342c9b6b560a79a7",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,20 @@\n+    private void cleanup(ConnectionPool pool) {\n+      if (pool.getNumConnections() \u003e pool.getMinSize()) {\n+        // Check if the pool hasn\u0027t been active in a while or not 50% are used\n+        long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n+        int total \u003d pool.getNumConnections();\n+        int active \u003d getNumActiveConnections();\n+        if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n+            active \u003c MIN_ACTIVE_RATIO * total) {\n+          // Remove and close 1 connection\n+          List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n+          for (ConnectionContext conn : conns) {\n+            conn.close();\n+          }\n+          LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n+              \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n+              TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n+              pool.getNumConnections(), pool.getMaxSize());\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void cleanup(ConnectionPool pool) {\n      if (pool.getNumConnections() \u003e pool.getMinSize()) {\n        // Check if the pool hasn\u0027t been active in a while or not 50% are used\n        long timeSinceLastActive \u003d Time.now() - pool.getLastActiveTime();\n        int total \u003d pool.getNumConnections();\n        int active \u003d getNumActiveConnections();\n        if (timeSinceLastActive \u003e connectionCleanupPeriodMs ||\n            active \u003c MIN_ACTIVE_RATIO * total) {\n          // Remove and close 1 connection\n          List\u003cConnectionContext\u003e conns \u003d pool.removeConnections(1);\n          for (ConnectionContext conn : conns) {\n            conn.close();\n          }\n          LOG.debug(\"Removed connection {} used {} seconds ago. \" +\n              \"Pool has {}/{} connections\", pool.getConnectionPoolId(),\n              TimeUnit.MILLISECONDS.toSeconds(timeSinceLastActive),\n              pool.getNumConnections(), pool.getMaxSize());\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java"
    }
  }
}