{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSWebApp.java",
  "functionName": "printPageIndex",
  "functionId": "printPageIndex___request-HttpServletRequest__response-HttpServletResponse",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java",
  "functionStartLine": 192,
  "functionEndLine": 218,
  "numCommitsSeen": 10,
  "timeTaken": 915,
  "changeHistory": [
    "2ba9903932e3c99afb0e6abb7cd3c5d29a554bd9",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "2ba9903932e3c99afb0e6abb7cd3c5d29a554bd9": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2ba9903932e3c99afb0e6abb7cd3c5d29a554bd9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14400. Fix warnings from spotbugs in hadoop-tools. Contributed by Weiwei Yang.\n",
      "commitDate": "10/05/17 3:57 AM",
      "commitName": "2ba9903932e3c99afb0e6abb7cd3c5d29a554bd9",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/04/17 11:08 AM",
      "commitNameOld": "7e075a50e37a24399bdae413349762f556293da3",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 20.7,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void printPageIndex(HttpServletRequest request,\n                               HttpServletResponse response) throws IOException {\n     response.setContentType(\"text/html\");\n     response.setStatus(HttpServletResponse.SC_OK);\n \n     String simulateInfo;\n-    if (SLSRunner.simulateInfoMap.isEmpty()) {\n+    if (SLSRunner.getSimulateInfoMap().isEmpty()) {\n       String empty \u003d \"\u003ctr\u003e\u003ctd colspan\u003d\u00272\u0027 align\u003d\u0027center\u0027\u003e\" +\n               \"No information available\u003c/td\u003e\u003c/tr\u003e\";\n       simulateInfo \u003d MessageFormat.format(simulateInfoTemplate, empty);\n     } else {\n       StringBuilder info \u003d new StringBuilder();\n       for (Map.Entry\u003cString, Object\u003e entry :\n-              SLSRunner.simulateInfoMap.entrySet()) {\n+              SLSRunner.getSimulateInfoMap().entrySet()) {\n         info.append(\"\u003ctr\u003e\");\n         info.append(\"\u003ctd class\u003d\u0027td1\u0027\u003e\").append(entry.getKey()).append(\"\u003c/td\u003e\");\n         info.append(\"\u003ctd class\u003d\u0027td2\u0027\u003e\").append(entry.getValue())\n                 .append(\"\u003c/td\u003e\");\n         info.append(\"\u003c/tr\u003e\");\n       }\n       simulateInfo \u003d\n               MessageFormat.format(simulateInfoTemplate, info.toString());\n     }\n     response.getWriter().println(simulateInfo);\n \n     ((Request) request).setHandled(true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printPageIndex(HttpServletRequest request,\n                              HttpServletResponse response) throws IOException {\n    response.setContentType(\"text/html\");\n    response.setStatus(HttpServletResponse.SC_OK);\n\n    String simulateInfo;\n    if (SLSRunner.getSimulateInfoMap().isEmpty()) {\n      String empty \u003d \"\u003ctr\u003e\u003ctd colspan\u003d\u00272\u0027 align\u003d\u0027center\u0027\u003e\" +\n              \"No information available\u003c/td\u003e\u003c/tr\u003e\";\n      simulateInfo \u003d MessageFormat.format(simulateInfoTemplate, empty);\n    } else {\n      StringBuilder info \u003d new StringBuilder();\n      for (Map.Entry\u003cString, Object\u003e entry :\n              SLSRunner.getSimulateInfoMap().entrySet()) {\n        info.append(\"\u003ctr\u003e\");\n        info.append(\"\u003ctd class\u003d\u0027td1\u0027\u003e\").append(entry.getKey()).append(\"\u003c/td\u003e\");\n        info.append(\"\u003ctd class\u003d\u0027td2\u0027\u003e\").append(entry.getValue())\n                .append(\"\u003c/td\u003e\");\n        info.append(\"\u003c/tr\u003e\");\n      }\n      simulateInfo \u003d\n              MessageFormat.format(simulateInfoTemplate, info.toString());\n    }\n    response.getWriter().println(simulateInfo);\n\n    ((Request) request).setHandled(true);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,27 @@\n+  private void printPageIndex(HttpServletRequest request,\n+                              HttpServletResponse response) throws IOException {\n+    response.setContentType(\"text/html\");\n+    response.setStatus(HttpServletResponse.SC_OK);\n+\n+    String simulateInfo;\n+    if (SLSRunner.simulateInfoMap.isEmpty()) {\n+      String empty \u003d \"\u003ctr\u003e\u003ctd colspan\u003d\u00272\u0027 align\u003d\u0027center\u0027\u003e\" +\n+              \"No information available\u003c/td\u003e\u003c/tr\u003e\";\n+      simulateInfo \u003d MessageFormat.format(simulateInfoTemplate, empty);\n+    } else {\n+      StringBuilder info \u003d new StringBuilder();\n+      for (Map.Entry\u003cString, Object\u003e entry :\n+              SLSRunner.simulateInfoMap.entrySet()) {\n+        info.append(\"\u003ctr\u003e\");\n+        info.append(\"\u003ctd class\u003d\u0027td1\u0027\u003e\").append(entry.getKey()).append(\"\u003c/td\u003e\");\n+        info.append(\"\u003ctd class\u003d\u0027td2\u0027\u003e\").append(entry.getValue())\n+                .append(\"\u003c/td\u003e\");\n+        info.append(\"\u003c/tr\u003e\");\n+      }\n+      simulateInfo \u003d\n+              MessageFormat.format(simulateInfoTemplate, info.toString());\n+    }\n+    response.getWriter().println(simulateInfo);\n+\n+    ((Request) request).setHandled(true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printPageIndex(HttpServletRequest request,\n                              HttpServletResponse response) throws IOException {\n    response.setContentType(\"text/html\");\n    response.setStatus(HttpServletResponse.SC_OK);\n\n    String simulateInfo;\n    if (SLSRunner.simulateInfoMap.isEmpty()) {\n      String empty \u003d \"\u003ctr\u003e\u003ctd colspan\u003d\u00272\u0027 align\u003d\u0027center\u0027\u003e\" +\n              \"No information available\u003c/td\u003e\u003c/tr\u003e\";\n      simulateInfo \u003d MessageFormat.format(simulateInfoTemplate, empty);\n    } else {\n      StringBuilder info \u003d new StringBuilder();\n      for (Map.Entry\u003cString, Object\u003e entry :\n              SLSRunner.simulateInfoMap.entrySet()) {\n        info.append(\"\u003ctr\u003e\");\n        info.append(\"\u003ctd class\u003d\u0027td1\u0027\u003e\").append(entry.getKey()).append(\"\u003c/td\u003e\");\n        info.append(\"\u003ctd class\u003d\u0027td2\u0027\u003e\").append(entry.getValue())\n                .append(\"\u003c/td\u003e\");\n        info.append(\"\u003c/tr\u003e\");\n      }\n      simulateInfo \u003d\n              MessageFormat.format(simulateInfoTemplate, info.toString());\n    }\n    response.getWriter().println(simulateInfo);\n\n    ((Request) request).setHandled(true);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/web/SLSWebApp.java"
    }
  }
}