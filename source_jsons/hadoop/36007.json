{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "refreshQueues",
  "functionId": "refreshQueues",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 436,
  "functionEndLine": 445,
  "numCommitsSeen": 78,
  "timeTaken": 2979,
  "changeHistory": [
    "a63d19d36520fa55bf523483f14329756f6eadd3",
    "4c8b208adb8c7639628676387e275856cf0842c9",
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "d9a354c2f39274b2810144d1ae133201e44e3bfc"
  ],
  "changeHistoryShort": {
    "a63d19d36520fa55bf523483f14329756f6eadd3": "Ybodychange",
    "4c8b208adb8c7639628676387e275856cf0842c9": "Ymodifierchange",
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "d9a354c2f39274b2810144d1ae133201e44e3bfc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a63d19d36520fa55bf523483f14329756f6eadd3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6124. Make SchedulingEditPolicy can be enabled / disabled / updated with RMAdmin -refreshQueues. (Zian Chen via wangda)\n\nChange-Id: Id93656f3af7dcd78cafa94e33663c78d410d43c2\n",
      "commitDate": "30/11/17 3:57 PM",
      "commitName": "a63d19d36520fa55bf523483f14329756f6eadd3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 52.24,
      "commitsBetweenForRepo": 397,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   public void refreshQueues() throws IOException, YarnException {\n-    rm.getRMContext().getScheduler().reinitialize(getConfig(),\n+    Configuration conf \u003d loadNewConfiguration();\n+    rm.getRMContext().getScheduler().reinitialize(conf,\n         this.rm.getRMContext());\n     // refresh the reservation system\n     ReservationSystem rSystem \u003d rm.getRMContext().getReservationSystem();\n     if (rSystem !\u003d null) {\n-      rSystem.reinitialize(getConfig(), rm.getRMContext());\n+      rSystem.reinitialize(conf, rm.getRMContext());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshQueues() throws IOException, YarnException {\n    Configuration conf \u003d loadNewConfiguration();\n    rm.getRMContext().getScheduler().reinitialize(conf,\n        this.rm.getRMContext());\n    // refresh the reservation system\n    ReservationSystem rSystem \u003d rm.getRMContext().getReservationSystem();\n    if (rSystem !\u003d null) {\n      rSystem.reinitialize(conf, rm.getRMContext());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "4c8b208adb8c7639628676387e275856cf0842c9": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-6322: Disable queue refresh when configuration mutation is enabled. Contributed by Jonathan Hung\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "4c8b208adb8c7639628676387e275856cf0842c9",
      "commitAuthor": "Xuan",
      "commitDateOld": "23/07/17 11:09 PM",
      "commitNameOld": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 77.5,
      "commitsBetweenForRepo": 707,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-  private void refreshQueues() throws IOException, YarnException {\n+  public void refreshQueues() throws IOException, YarnException {\n     rm.getRMContext().getScheduler().reinitialize(getConfig(),\n         this.rm.getRMContext());\n     // refresh the reservation system\n     ReservationSystem rSystem \u003d rm.getRMContext().getReservationSystem();\n     if (rSystem !\u003d null) {\n       rSystem.reinitialize(getConfig(), rm.getRMContext());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshQueues() throws IOException, YarnException {\n    rm.getRMContext().getScheduler().reinitialize(getConfig(),\n        this.rm.getRMContext());\n    // refresh the reservation system\n    ReservationSystem rSystem \u003d rm.getRMContext().getReservationSystem();\n    if (rSystem !\u003d null) {\n      rSystem.reinitialize(getConfig(), rm.getRMContext());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/05/17 2:44 PM",
      "commitNameOld": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 75.35,
      "commitsBetweenForRepo": 358,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   private void refreshQueues() throws IOException, YarnException {\n-    rmContext.getScheduler().reinitialize(getConfig(), this.rmContext);\n+    rm.getRMContext().getScheduler().reinitialize(getConfig(),\n+        this.rm.getRMContext());\n     // refresh the reservation system\n-    ReservationSystem rSystem \u003d rmContext.getReservationSystem();\n+    ReservationSystem rSystem \u003d rm.getRMContext().getReservationSystem();\n     if (rSystem !\u003d null) {\n-      rSystem.reinitialize(getConfig(), rmContext);\n+      rSystem.reinitialize(getConfig(), rm.getRMContext());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshQueues() throws IOException, YarnException {\n    rm.getRMContext().getScheduler().reinitialize(getConfig(),\n        this.rm.getRMContext());\n    // refresh the reservation system\n    ReservationSystem rSystem \u003d rm.getRMContext().getReservationSystem();\n    if (rSystem !\u003d null) {\n      rSystem.reinitialize(getConfig(), rm.getRMContext());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "d9a354c2f39274b2810144d1ae133201e44e3bfc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5333. Some recovered apps are put into default queue when RM HA. Contributed by Jun Gong.\n",
      "commitDate": "05/08/16 9:05 AM",
      "commitName": "d9a354c2f39274b2810144d1ae133201e44e3bfc",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,8 @@\n+  private void refreshQueues() throws IOException, YarnException {\n+    rmContext.getScheduler().reinitialize(getConfig(), this.rmContext);\n+    // refresh the reservation system\n+    ReservationSystem rSystem \u003d rmContext.getReservationSystem();\n+    if (rSystem !\u003d null) {\n+      rSystem.reinitialize(getConfig(), rmContext);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshQueues() throws IOException, YarnException {\n    rmContext.getScheduler().reinitialize(getConfig(), this.rmContext);\n    // refresh the reservation system\n    ReservationSystem rSystem \u003d rmContext.getReservationSystem();\n    if (rSystem !\u003d null) {\n      rSystem.reinitialize(getConfig(), rmContext);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}