{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "getDatanodeStorageReport",
  "functionId": "getDatanodeStorageReport___type-DatanodeReportType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 2038,
  "functionEndLine": 2050,
  "numCommitsSeen": 172,
  "timeTaken": 1702,
  "changeHistory": [
    "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d"
  ],
  "changeHistoryShort": {
    "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12982 : [SPS]: Reduce the locking and cleanup the Namesystem access. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "05d4daf6ba3e5bd40f46e8003ee12fc7c613453d",
      "commitAuthor": "Surendra Singh Lilhore",
      "diff": "@@ -0,0 +1,13 @@\n+  public DatanodeStorageReport[] getDatanodeStorageReport(\n+      DatanodeReportType type) {\n+    final List\u003cDatanodeDescriptor\u003e datanodes \u003d getDatanodeListForReport(type);\n+\n+    DatanodeStorageReport[] reports \u003d new DatanodeStorageReport[datanodes\n+        .size()];\n+    for (int i \u003d 0; i \u003c reports.length; i++) {\n+      final DatanodeDescriptor d \u003d datanodes.get(i);\n+      reports[i] \u003d new DatanodeStorageReport(\n+          new DatanodeInfoBuilder().setFrom(d).build(), d.getStorageReports());\n+    }\n+    return reports;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeStorageReport[] getDatanodeStorageReport(\n      DatanodeReportType type) {\n    final List\u003cDatanodeDescriptor\u003e datanodes \u003d getDatanodeListForReport(type);\n\n    DatanodeStorageReport[] reports \u003d new DatanodeStorageReport[datanodes\n        .size()];\n    for (int i \u003d 0; i \u003c reports.length; i++) {\n      final DatanodeDescriptor d \u003d datanodes.get(i);\n      reports[i] \u003d new DatanodeStorageReport(\n          new DatanodeInfoBuilder().setFrom(d).build(), d.getStorageReports());\n    }\n    return reports;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
    }
  }
}