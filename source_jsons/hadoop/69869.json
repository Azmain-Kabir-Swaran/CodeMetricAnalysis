{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShellDecryptionKeyProvider.java",
  "functionName": "getStorageAccountKey",
  "functionId": "getStorageAccountKey___accountName-String__rawConfig-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/ShellDecryptionKeyProvider.java",
  "functionStartLine": 40,
  "functionEndLine": 70,
  "numCommitsSeen": 3,
  "timeTaken": 1854,
  "changeHistory": [
    "e5593cbd8323399359b3e8da46bd58e8364cbf22",
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc"
  ],
  "changeHistoryShort": {
    "e5593cbd8323399359b3e8da46bd58e8364cbf22": "Ymultichange(Yparameterchange,Ybodychange)",
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5593cbd8323399359b3e8da46bd58e8364cbf22": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
      "commitAuthor": "Thomas Marquardt",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
          "commitAuthor": "Thomas Marquardt",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
          "commitAuthorOld": "Thomas Marquardt",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,31 @@\n-  public String getStorageAccountKey(String accountName, Configuration conf)\n+  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n       throws KeyProviderException {\n-    String envelope \u003d super.getStorageAccountKey(accountName, conf);\n+    String envelope \u003d super.getStorageAccountKey(accountName, rawConfig);\n \n-    final String command \u003d conf.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n+    AbfsConfiguration abfsConfig;\n+    try {\n+      abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n+    } catch(IllegalAccessException | IOException e) {\n+      throw new KeyProviderException(\"Unable to get key from credential providers.\", e);\n+    }\n+\n+    final String command \u003d abfsConfig.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n     if (command \u003d\u003d null) {\n       throw new KeyProviderException(\n           \"Script path is not specified via fs.azure.shellkeyprovider.script\");\n     }\n \n     String[] cmd \u003d command.split(\" \");\n     String[] cmdWithEnvelope \u003d Arrays.copyOf(cmd, cmd.length + 1);\n     cmdWithEnvelope[cmdWithEnvelope.length - 1] \u003d envelope;\n \n     String decryptedKey \u003d null;\n     try {\n       decryptedKey \u003d Shell.execCommand(cmdWithEnvelope);\n     } catch (IOException ex) {\n       throw new KeyProviderException(ex);\n     }\n \n     // trim any whitespace\n     return decryptedKey.trim();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n      throws KeyProviderException {\n    String envelope \u003d super.getStorageAccountKey(accountName, rawConfig);\n\n    AbfsConfiguration abfsConfig;\n    try {\n      abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n    } catch(IllegalAccessException | IOException e) {\n      throw new KeyProviderException(\"Unable to get key from credential providers.\", e);\n    }\n\n    final String command \u003d abfsConfig.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n    if (command \u003d\u003d null) {\n      throw new KeyProviderException(\n          \"Script path is not specified via fs.azure.shellkeyprovider.script\");\n    }\n\n    String[] cmd \u003d command.split(\" \");\n    String[] cmdWithEnvelope \u003d Arrays.copyOf(cmd, cmd.length + 1);\n    cmdWithEnvelope[cmdWithEnvelope.length - 1] \u003d envelope;\n\n    String decryptedKey \u003d null;\n    try {\n      decryptedKey \u003d Shell.execCommand(cmdWithEnvelope);\n    } catch (IOException ex) {\n      throw new KeyProviderException(ex);\n    }\n\n    // trim any whitespace\n    return decryptedKey.trim();\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/ShellDecryptionKeyProvider.java",
          "extendedDetails": {
            "oldValue": "[accountName-String, conf-Configuration]",
            "newValue": "[accountName-String, rawConfig-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
          "commitAuthor": "Thomas Marquardt",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
          "commitAuthorOld": "Thomas Marquardt",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,31 @@\n-  public String getStorageAccountKey(String accountName, Configuration conf)\n+  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n       throws KeyProviderException {\n-    String envelope \u003d super.getStorageAccountKey(accountName, conf);\n+    String envelope \u003d super.getStorageAccountKey(accountName, rawConfig);\n \n-    final String command \u003d conf.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n+    AbfsConfiguration abfsConfig;\n+    try {\n+      abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n+    } catch(IllegalAccessException | IOException e) {\n+      throw new KeyProviderException(\"Unable to get key from credential providers.\", e);\n+    }\n+\n+    final String command \u003d abfsConfig.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n     if (command \u003d\u003d null) {\n       throw new KeyProviderException(\n           \"Script path is not specified via fs.azure.shellkeyprovider.script\");\n     }\n \n     String[] cmd \u003d command.split(\" \");\n     String[] cmdWithEnvelope \u003d Arrays.copyOf(cmd, cmd.length + 1);\n     cmdWithEnvelope[cmdWithEnvelope.length - 1] \u003d envelope;\n \n     String decryptedKey \u003d null;\n     try {\n       decryptedKey \u003d Shell.execCommand(cmdWithEnvelope);\n     } catch (IOException ex) {\n       throw new KeyProviderException(ex);\n     }\n \n     // trim any whitespace\n     return decryptedKey.trim();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n      throws KeyProviderException {\n    String envelope \u003d super.getStorageAccountKey(accountName, rawConfig);\n\n    AbfsConfiguration abfsConfig;\n    try {\n      abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n    } catch(IllegalAccessException | IOException e) {\n      throw new KeyProviderException(\"Unable to get key from credential providers.\", e);\n    }\n\n    final String command \u003d abfsConfig.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n    if (command \u003d\u003d null) {\n      throw new KeyProviderException(\n          \"Script path is not specified via fs.azure.shellkeyprovider.script\");\n    }\n\n    String[] cmd \u003d command.split(\" \");\n    String[] cmdWithEnvelope \u003d Arrays.copyOf(cmd, cmd.length + 1);\n    cmdWithEnvelope[cmdWithEnvelope.length - 1] \u003d envelope;\n\n    String decryptedKey \u003d null;\n    try {\n      decryptedKey \u003d Shell.execCommand(cmdWithEnvelope);\n    } catch (IOException ex) {\n      throw new KeyProviderException(ex);\n    }\n\n    // trim any whitespace\n    return decryptedKey.trim();\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/ShellDecryptionKeyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15659. Code changes for bug fix and new tests.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
      "commitAuthor": "Thomas Marquardt",
      "diff": "@@ -0,0 +1,24 @@\n+  public String getStorageAccountKey(String accountName, Configuration conf)\n+      throws KeyProviderException {\n+    String envelope \u003d super.getStorageAccountKey(accountName, conf);\n+\n+    final String command \u003d conf.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n+    if (command \u003d\u003d null) {\n+      throw new KeyProviderException(\n+          \"Script path is not specified via fs.azure.shellkeyprovider.script\");\n+    }\n+\n+    String[] cmd \u003d command.split(\" \");\n+    String[] cmdWithEnvelope \u003d Arrays.copyOf(cmd, cmd.length + 1);\n+    cmdWithEnvelope[cmdWithEnvelope.length - 1] \u003d envelope;\n+\n+    String decryptedKey \u003d null;\n+    try {\n+      decryptedKey \u003d Shell.execCommand(cmdWithEnvelope);\n+    } catch (IOException ex) {\n+      throw new KeyProviderException(ex);\n+    }\n+\n+    // trim any whitespace\n+    return decryptedKey.trim();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStorageAccountKey(String accountName, Configuration conf)\n      throws KeyProviderException {\n    String envelope \u003d super.getStorageAccountKey(accountName, conf);\n\n    final String command \u003d conf.get(ConfigurationKeys.AZURE_KEY_ACCOUNT_SHELLKEYPROVIDER_SCRIPT);\n    if (command \u003d\u003d null) {\n      throw new KeyProviderException(\n          \"Script path is not specified via fs.azure.shellkeyprovider.script\");\n    }\n\n    String[] cmd \u003d command.split(\" \");\n    String[] cmdWithEnvelope \u003d Arrays.copyOf(cmd, cmd.length + 1);\n    cmdWithEnvelope[cmdWithEnvelope.length - 1] \u003d envelope;\n\n    String decryptedKey \u003d null;\n    try {\n      decryptedKey \u003d Shell.execCommand(cmdWithEnvelope);\n    } catch (IOException ex) {\n      throw new KeyProviderException(ex);\n    }\n\n    // trim any whitespace\n    return decryptedKey.trim();\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/ShellDecryptionKeyProvider.java"
    }
  }
}