{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCSQueue.java",
  "functionName": "getInheritedDefaultAppLifetime",
  "functionId": "getInheritedDefaultAppLifetime___q-CSQueue__conf-CapacitySchedulerConfiguration__myMaxAppLifetime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
  "functionStartLine": 925,
  "functionEndLine": 966,
  "numCommitsSeen": 76,
  "timeTaken": 2233,
  "changeHistory": [
    "e578e52aae01248507e089b406fe038ab8e84207"
  ],
  "changeHistoryShort": {
    "e578e52aae01248507e089b406fe038ab8e84207": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e578e52aae01248507e089b406fe038ab8e84207": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10084. Allow inheritance of max app lifetime / default app lifetime. Contributed by Eric Payne.\n",
      "commitDate": "28/01/20 7:54 PM",
      "commitName": "e578e52aae01248507e089b406fe038ab8e84207",
      "commitAuthor": "Eric Badger",
      "diff": "@@ -0,0 +1,42 @@\n+  private long getInheritedDefaultAppLifetime(CSQueue q,\n+      CapacitySchedulerConfiguration conf, long myMaxAppLifetime) {\n+    CSQueue parentQ \u003d q.getParent();\n+    long defaultAppLifetime \u003d conf.getDefaultLifetimePerQueue(getQueuePath());\n+    defaultAppLifetimeWasSpecifiedInConfig \u003d\n+        (defaultAppLifetime \u003e\u003d 0\n+        || (parentQ !\u003d null \u0026\u0026\n+            parentQ.getDefaultAppLifetimeWasSpecifiedInConfig()));\n+\n+    // If q is the root queue, then get default app lifetime from conf.\n+    if (parentQ \u003d\u003d null) {\n+      return defaultAppLifetime;\n+    }\n+\n+    // If this is not the root queue, get the parent\u0027s default app lifetime. The\n+    // parent\u0027s default app lifetime will be used if not set for this queue.\n+    long parentsDefaultAppLifetime \u003d\n+        getParent().getDefaultApplicationLifetime();\n+\n+    // Negative value indicates default lifetime was not set at this level.\n+    // If default lifetime was not set at this level, calculate it based on\n+    // parent\u0027s default lifetime or current queue\u0027s max lifetime.\n+    if (defaultAppLifetime \u003c 0) {\n+      // If default lifetime was not set at this level but was set somewhere in\n+      // the parent\u0027s hierarchy, set default lifetime to parent queue\u0027s default\n+      // only if parent queue\u0027s lifetime is less than current queueu\u0027s max\n+      // lifetime. Otherwise, use current queue\u0027s max lifetime value for its\n+      // default lifetime.\n+      if (defaultAppLifetimeWasSpecifiedInConfig) {\n+        if (parentsDefaultAppLifetime \u003c\u003d myMaxAppLifetime) {\n+          defaultAppLifetime \u003d parentsDefaultAppLifetime;\n+        } else {\n+          defaultAppLifetime \u003d myMaxAppLifetime;\n+        }\n+      } else {\n+        // Default app lifetime value was not set anywhere in this queue\u0027s\n+        // hierarchy. Use current queue\u0027s max lifetime as its default.\n+        defaultAppLifetime \u003d myMaxAppLifetime;\n+      }\n+    } // else if \u003e\u003d 0, default lifetime was set at this level. Just use it.\n+    return defaultAppLifetime;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getInheritedDefaultAppLifetime(CSQueue q,\n      CapacitySchedulerConfiguration conf, long myMaxAppLifetime) {\n    CSQueue parentQ \u003d q.getParent();\n    long defaultAppLifetime \u003d conf.getDefaultLifetimePerQueue(getQueuePath());\n    defaultAppLifetimeWasSpecifiedInConfig \u003d\n        (defaultAppLifetime \u003e\u003d 0\n        || (parentQ !\u003d null \u0026\u0026\n            parentQ.getDefaultAppLifetimeWasSpecifiedInConfig()));\n\n    // If q is the root queue, then get default app lifetime from conf.\n    if (parentQ \u003d\u003d null) {\n      return defaultAppLifetime;\n    }\n\n    // If this is not the root queue, get the parent\u0027s default app lifetime. The\n    // parent\u0027s default app lifetime will be used if not set for this queue.\n    long parentsDefaultAppLifetime \u003d\n        getParent().getDefaultApplicationLifetime();\n\n    // Negative value indicates default lifetime was not set at this level.\n    // If default lifetime was not set at this level, calculate it based on\n    // parent\u0027s default lifetime or current queue\u0027s max lifetime.\n    if (defaultAppLifetime \u003c 0) {\n      // If default lifetime was not set at this level but was set somewhere in\n      // the parent\u0027s hierarchy, set default lifetime to parent queue\u0027s default\n      // only if parent queue\u0027s lifetime is less than current queueu\u0027s max\n      // lifetime. Otherwise, use current queue\u0027s max lifetime value for its\n      // default lifetime.\n      if (defaultAppLifetimeWasSpecifiedInConfig) {\n        if (parentsDefaultAppLifetime \u003c\u003d myMaxAppLifetime) {\n          defaultAppLifetime \u003d parentsDefaultAppLifetime;\n        } else {\n          defaultAppLifetime \u003d myMaxAppLifetime;\n        }\n      } else {\n        // Default app lifetime value was not set anywhere in this queue\u0027s\n        // hierarchy. Use current queue\u0027s max lifetime as its default.\n        defaultAppLifetime \u003d myMaxAppLifetime;\n      }\n    } // else if \u003e\u003d 0, default lifetime was set at this level. Just use it.\n    return defaultAppLifetime;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java"
    }
  }
}