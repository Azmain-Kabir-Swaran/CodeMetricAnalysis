{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MockAMLauncher.java",
  "functionName": "handle",
  "functionId": "handle___event-AMLauncherEvent",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java",
  "functionStartLine": 83,
  "functionEndLine": 120,
  "numCommitsSeen": 6,
  "timeTaken": 1526,
  "changeHistory": [
    "9cbd0cd2a9268ff2e8fed0af335e9c4f91c5f601",
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
    "b32ffa2753e83615b980721b6067fcc35ce54372"
  ],
  "changeHistoryShort": {
    "9cbd0cd2a9268ff2e8fed0af335e9c4f91c5f601": "Ybodychange",
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": "Ybodychange",
    "b32ffa2753e83615b980721b6067fcc35ce54372": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9cbd0cd2a9268ff2e8fed0af335e9c4f91c5f601": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9301. Too many InvalidStateTransitionException with SLS. Contributed by Bilwa S T.\n",
      "commitDate": "12/05/20 8:20 AM",
      "commitName": "9cbd0cd2a9268ff2e8fed0af335e9c4f91c5f601",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "14/02/19 9:26 AM",
      "commitNameOld": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 452.91,
      "commitsBetweenForRepo": 2624,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,38 @@\n   public void handle(AMLauncherEvent event) {\n-    if (AMLauncherEventType.LAUNCH \u003d\u003d event.getType()) {\n-      ApplicationId appId \u003d\n-          event.getAppAttempt().getAppAttemptId().getApplicationId();\n+    ApplicationId appId \u003d\n+        event.getAppAttempt().getAppAttemptId().getApplicationId();\n+    // find AMSimulator\n+    AMSimulator ams \u003d appIdAMSim.get(appId);\n+    if (ams \u003d\u003d null) {\n+      throw new YarnRuntimeException(\n+          \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n+    }\n+    Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n+    switch (event.getType()) {\n+    case LAUNCH:\n+      try {\n+        setupAMRMToken(event.getAppAttempt());\n+        // Notify RMAppAttempt to change state\n+        super.context.getDispatcher().getEventHandler().handle(\n+            new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n+                RMAppAttemptEventType.LAUNCHED));\n \n-      // find AMSimulator\n-      AMSimulator ams \u003d appIdAMSim.get(appId);\n-      if (ams !\u003d null) {\n-        try {\n-          Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n+        ams.notifyAMContainerLaunched(\n+            event.getAppAttempt().getMasterContainer());\n+        LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n \n-          setupAMRMToken(event.getAppAttempt());\n-\n-          // Notify RMAppAttempt to change state\n-          super.context.getDispatcher().getEventHandler().handle(\n-              new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n-                  RMAppAttemptEventType.LAUNCHED));\n-\n-          ams.notifyAMContainerLaunched(\n-              event.getAppAttempt().getMasterContainer());\n-          LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n-\n-          se.getNmMap().get(amContainer.getNodeId())\n-              .addNewContainer(amContainer, 100000000L);\n-\n-          return;\n-        } catch (Exception e) {\n-          throw new YarnRuntimeException(e);\n-        }\n+        se.getNmMap().get(amContainer.getNodeId())\n+            .addNewContainer(amContainer, -1);\n+        return;\n+      } catch (Exception e) {\n+        throw new YarnRuntimeException(e);\n       }\n-\n+    case CLEANUP:\n+      se.getNmMap().get(amContainer.getNodeId())\n+          .cleanupContainer(amContainer.getId());\n+      break;\n+    default:\n       throw new YarnRuntimeException(\n           \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AMLauncherEvent event) {\n    ApplicationId appId \u003d\n        event.getAppAttempt().getAppAttemptId().getApplicationId();\n    // find AMSimulator\n    AMSimulator ams \u003d appIdAMSim.get(appId);\n    if (ams \u003d\u003d null) {\n      throw new YarnRuntimeException(\n          \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n    }\n    Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n    switch (event.getType()) {\n    case LAUNCH:\n      try {\n        setupAMRMToken(event.getAppAttempt());\n        // Notify RMAppAttempt to change state\n        super.context.getDispatcher().getEventHandler().handle(\n            new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n                RMAppAttemptEventType.LAUNCHED));\n\n        ams.notifyAMContainerLaunched(\n            event.getAppAttempt().getMasterContainer());\n        LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n\n        se.getNmMap().get(amContainer.getNodeId())\n            .addNewContainer(amContainer, -1);\n        return;\n      } catch (Exception e) {\n        throw new YarnRuntimeException(e);\n      }\n    case CLEANUP:\n      se.getNmMap().get(amContainer.getNodeId())\n          .cleanupContainer(amContainer.getId());\n      break;\n    default:\n      throw new YarnRuntimeException(\n          \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java",
      "extendedDetails": {}
    },
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
      "commitDate": "14/02/19 9:26 AM",
      "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/08/18 8:31 AM",
      "commitNameOld": "3e3963b035911703c61e6d9a2939eb894da5644c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 183.08,
      "commitsBetweenForRepo": 1414,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,35 @@\n   public void handle(AMLauncherEvent event) {\n     if (AMLauncherEventType.LAUNCH \u003d\u003d event.getType()) {\n       ApplicationId appId \u003d\n           event.getAppAttempt().getAppAttemptId().getApplicationId();\n \n       // find AMSimulator\n-      for (AMSimulator ams : amMap.values()) {\n-        if (ams.getApplicationId() !\u003d null \u0026\u0026 ams.getApplicationId().equals(\n-            appId)) {\n-          try {\n-            Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n+      AMSimulator ams \u003d appIdAMSim.get(appId);\n+      if (ams !\u003d null) {\n+        try {\n+          Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n \n-            setupAMRMToken(event.getAppAttempt());\n+          setupAMRMToken(event.getAppAttempt());\n \n-            // Notify RMAppAttempt to change state\n-            super.context.getDispatcher().getEventHandler().handle(\n-                new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n-                    RMAppAttemptEventType.LAUNCHED));\n+          // Notify RMAppAttempt to change state\n+          super.context.getDispatcher().getEventHandler().handle(\n+              new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n+                  RMAppAttemptEventType.LAUNCHED));\n \n-            ams.notifyAMContainerLaunched(\n-                event.getAppAttempt().getMasterContainer());\n-            LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n+          ams.notifyAMContainerLaunched(\n+              event.getAppAttempt().getMasterContainer());\n+          LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n \n-            se.getNmMap().get(amContainer.getNodeId())\n-                .addNewContainer(amContainer, 100000000L);\n+          se.getNmMap().get(amContainer.getNodeId())\n+              .addNewContainer(amContainer, 100000000L);\n \n-            return;\n-          } catch (Exception e) {\n-            throw new YarnRuntimeException(e);\n-          }\n+          return;\n+        } catch (Exception e) {\n+          throw new YarnRuntimeException(e);\n         }\n       }\n \n       throw new YarnRuntimeException(\n           \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AMLauncherEvent event) {\n    if (AMLauncherEventType.LAUNCH \u003d\u003d event.getType()) {\n      ApplicationId appId \u003d\n          event.getAppAttempt().getAppAttemptId().getApplicationId();\n\n      // find AMSimulator\n      AMSimulator ams \u003d appIdAMSim.get(appId);\n      if (ams !\u003d null) {\n        try {\n          Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n\n          setupAMRMToken(event.getAppAttempt());\n\n          // Notify RMAppAttempt to change state\n          super.context.getDispatcher().getEventHandler().handle(\n              new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n                  RMAppAttemptEventType.LAUNCHED));\n\n          ams.notifyAMContainerLaunched(\n              event.getAppAttempt().getMasterContainer());\n          LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n\n          se.getNmMap().get(amContainer.getNodeId())\n              .addNewContainer(amContainer, 100000000L);\n\n          return;\n        } catch (Exception e) {\n          throw new YarnRuntimeException(e);\n        }\n      }\n\n      throw new YarnRuntimeException(\n          \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java",
      "extendedDetails": {}
    },
    "b32ffa2753e83615b980721b6067fcc35ce54372": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4779. Fix AM container allocation logic in SLS. Contributed by Wangda Tan.\n",
      "commitDate": "24/02/17 8:09 AM",
      "commitName": "b32ffa2753e83615b980721b6067fcc35ce54372",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,37 @@\n+  public void handle(AMLauncherEvent event) {\n+    if (AMLauncherEventType.LAUNCH \u003d\u003d event.getType()) {\n+      ApplicationId appId \u003d\n+          event.getAppAttempt().getAppAttemptId().getApplicationId();\n+\n+      // find AMSimulator\n+      for (AMSimulator ams : amMap.values()) {\n+        if (ams.getApplicationId() !\u003d null \u0026\u0026 ams.getApplicationId().equals(\n+            appId)) {\n+          try {\n+            Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n+\n+            setupAMRMToken(event.getAppAttempt());\n+\n+            // Notify RMAppAttempt to change state\n+            super.context.getDispatcher().getEventHandler().handle(\n+                new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n+                    RMAppAttemptEventType.LAUNCHED));\n+\n+            ams.notifyAMContainerLaunched(\n+                event.getAppAttempt().getMasterContainer());\n+            LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n+\n+            se.getNmMap().get(amContainer.getNodeId())\n+                .addNewContainer(amContainer, 100000000L);\n+\n+            return;\n+          } catch (Exception e) {\n+            throw new YarnRuntimeException(e);\n+          }\n+        }\n+      }\n+\n+      throw new YarnRuntimeException(\n+          \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AMLauncherEvent event) {\n    if (AMLauncherEventType.LAUNCH \u003d\u003d event.getType()) {\n      ApplicationId appId \u003d\n          event.getAppAttempt().getAppAttemptId().getApplicationId();\n\n      // find AMSimulator\n      for (AMSimulator ams : amMap.values()) {\n        if (ams.getApplicationId() !\u003d null \u0026\u0026 ams.getApplicationId().equals(\n            appId)) {\n          try {\n            Container amContainer \u003d event.getAppAttempt().getMasterContainer();\n\n            setupAMRMToken(event.getAppAttempt());\n\n            // Notify RMAppAttempt to change state\n            super.context.getDispatcher().getEventHandler().handle(\n                new RMAppAttemptEvent(event.getAppAttempt().getAppAttemptId(),\n                    RMAppAttemptEventType.LAUNCHED));\n\n            ams.notifyAMContainerLaunched(\n                event.getAppAttempt().getMasterContainer());\n            LOG.info(\"Notify AM launcher launched:\" + amContainer.getId());\n\n            se.getNmMap().get(amContainer.getNodeId())\n                .addNewContainer(amContainer, 100000000L);\n\n            return;\n          } catch (Exception e) {\n            throw new YarnRuntimeException(e);\n          }\n        }\n      }\n\n      throw new YarnRuntimeException(\n          \"Didn\u0027t find any AMSimulator for applicationId\u003d\" + appId);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/resourcemanager/MockAMLauncher.java"
    }
  }
}