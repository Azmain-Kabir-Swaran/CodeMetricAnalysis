{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "process",
  "functionId": "process",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 1332,
  "functionEndLine": 1389,
  "numCommitsSeen": 15,
  "timeTaken": 1650,
  "changeHistory": [
    "680716f31e120f4d3ee70b095e4db46c05b891d9",
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9951. Use string constants for XML tags in OfflineImageReconstructor (Lin Yiqun via cmccabe)\n",
      "commitDate": "21/03/16 11:40 AM",
      "commitName": "680716f31e120f4d3ee70b095e4db46c05b891d9",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/03/16 1:41 PM",
      "commitNameOld": "bd49354c6d6387620b0de2219eab1714ec2d64f8",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 10.87,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void process() throws IOException {\n       // No header for this section type.\n       LOG.debug(\"Processing SnapshotDiffSection\");\n       while (true) {\n         XMLEvent ev \u003d expectTag(\"[diff start tag]\", true);\n         if (ev.isEndElement()) {\n           String name \u003d ev.asEndElement().getName().getLocalPart();\n-          if (name.equals(\"SnapshotDiffSection\")) {\n+          if (name.equals(SNAPSHOT_DIFF_SECTION_NAME)) {\n             break;\n           }\n           throw new IOException(\"Got unexpected end tag for \" + name);\n         }\n         String tagName \u003d ev.asStartElement().getName().getLocalPart();\n-        if (tagName.equals(\"dirDiffEntry\")) {\n+        if (tagName.equals(SNAPSHOT_DIFF_SECTION_DIR_DIFF_ENTRY)) {\n           processDirDiffEntry();\n-        } else if (tagName.equals(\"fileDiffEntry\")) {\n+        } else if (tagName.equals(SNAPSHOT_DIFF_SECTION_FILE_DIFF_ENTRY)) {\n           processFileDiffEntry();\n         } else {\n           throw new IOException(\"SnapshotDiffSection contained unexpected \" +\n               \"tag \" + tagName);\n         }\n       }\n       recordSectionLength(SectionName.SNAPSHOT_DIFF.name());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void process() throws IOException {\n      // No header for this section type.\n      LOG.debug(\"Processing SnapshotDiffSection\");\n      while (true) {\n        XMLEvent ev \u003d expectTag(\"[diff start tag]\", true);\n        if (ev.isEndElement()) {\n          String name \u003d ev.asEndElement().getName().getLocalPart();\n          if (name.equals(SNAPSHOT_DIFF_SECTION_NAME)) {\n            break;\n          }\n          throw new IOException(\"Got unexpected end tag for \" + name);\n        }\n        String tagName \u003d ev.asStartElement().getName().getLocalPart();\n        if (tagName.equals(SNAPSHOT_DIFF_SECTION_DIR_DIFF_ENTRY)) {\n          processDirDiffEntry();\n        } else if (tagName.equals(SNAPSHOT_DIFF_SECTION_FILE_DIFF_ENTRY)) {\n          processFileDiffEntry();\n        } else {\n          throw new IOException(\"SnapshotDiffSection contained unexpected \" +\n              \"tag \" + tagName);\n        }\n      }\n      recordSectionLength(SectionName.SNAPSHOT_DIFF.name());\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,24 @@\n+    public void process() throws IOException {\n+      // No header for this section type.\n+      LOG.debug(\"Processing SnapshotDiffSection\");\n+      while (true) {\n+        XMLEvent ev \u003d expectTag(\"[diff start tag]\", true);\n+        if (ev.isEndElement()) {\n+          String name \u003d ev.asEndElement().getName().getLocalPart();\n+          if (name.equals(\"SnapshotDiffSection\")) {\n+            break;\n+          }\n+          throw new IOException(\"Got unexpected end tag for \" + name);\n+        }\n+        String tagName \u003d ev.asStartElement().getName().getLocalPart();\n+        if (tagName.equals(\"dirDiffEntry\")) {\n+          processDirDiffEntry();\n+        } else if (tagName.equals(\"fileDiffEntry\")) {\n+          processFileDiffEntry();\n+        } else {\n+          throw new IOException(\"SnapshotDiffSection contained unexpected \" +\n+              \"tag \" + tagName);\n+        }\n+      }\n+      recordSectionLength(SectionName.SNAPSHOT_DIFF.name());\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void process() throws IOException {\n      // No header for this section type.\n      LOG.debug(\"Processing SnapshotDiffSection\");\n      while (true) {\n        XMLEvent ev \u003d expectTag(\"[diff start tag]\", true);\n        if (ev.isEndElement()) {\n          String name \u003d ev.asEndElement().getName().getLocalPart();\n          if (name.equals(\"SnapshotDiffSection\")) {\n            break;\n          }\n          throw new IOException(\"Got unexpected end tag for \" + name);\n        }\n        String tagName \u003d ev.asStartElement().getName().getLocalPart();\n        if (tagName.equals(\"dirDiffEntry\")) {\n          processDirDiffEntry();\n        } else if (tagName.equals(\"fileDiffEntry\")) {\n          processFileDiffEntry();\n        } else {\n          throw new IOException(\"SnapshotDiffSection contained unexpected \" +\n              \"tag \" + tagName);\n        }\n      }\n      recordSectionLength(SectionName.SNAPSHOT_DIFF.name());\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}