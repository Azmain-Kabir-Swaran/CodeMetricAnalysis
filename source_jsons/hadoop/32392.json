{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalDirsHandlerService.java",
  "functionName": "checkDirs",
  "functionId": "checkDirs",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
  "functionStartLine": 531,
  "functionEndLine": 578,
  "numCommitsSeen": 29,
  "timeTaken": 2539,
  "changeHistory": [
    "f880ff418c07965b333c750805c8de77a067b158",
    "674c7ef64916fabbe59c8d6cdd50ca19cf7ddb7c",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
    "41ebf4fb24241e9b09bf29965630a7a73af129f3",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "123c4f57d3de1771c762c89f5befd04d420cf7e7"
  ],
  "changeHistoryShort": {
    "f880ff418c07965b333c750805c8de77a067b158": "Ymodifierchange",
    "674c7ef64916fabbe59c8d6cdd50ca19cf7ddb7c": "Ybodychange",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": "Ybodychange",
    "41ebf4fb24241e9b09bf29965630a7a73af129f3": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "123c4f57d3de1771c762c89f5befd04d420cf7e7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f880ff418c07965b333c750805c8de77a067b158": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-8775. TestDiskFailures.testLocalDirsFailures sometimes can fail on concurrent File modifications. (Contributed by Antal BÃ¡lint Steinbach)\n",
      "commitDate": "15/10/18 9:37 AM",
      "commitName": "f880ff418c07965b333c750805c8de77a067b158",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "19/07/18 4:27 PM",
      "commitNameOld": "e6873dfde057e63ce5efa91f3061db3ee1b2e236",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 87.72,
      "commitsBetweenForRepo": 793,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n-  private void checkDirs() {\n+  public void checkDirs() {\n     boolean disksStatusChange \u003d false;\n     Set\u003cString\u003e failedLocalDirsPreCheck \u003d\n         new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n     Set\u003cString\u003e failedLogDirsPreCheck \u003d\n         new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n \n     if (localDirs.checkDirs()) {\n       disksStatusChange \u003d true;\n     }\n     if (logDirs.checkDirs()) {\n       disksStatusChange \u003d true;\n     }\n \n     Set\u003cString\u003e failedLocalDirsPostCheck \u003d\n         new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n     Set\u003cString\u003e failedLogDirsPostCheck \u003d\n         new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n \n     boolean disksFailed \u003d false;\n     boolean disksTurnedGood \u003d false;\n \n     disksFailed \u003d\n         disksTurnedBad(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n     disksTurnedGood \u003d\n         disksTurnedGood(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n \n     // skip check if we have new failed or good local dirs since we\u0027re going to\n     // log anyway\n     if (!disksFailed) {\n       disksFailed \u003d\n           disksTurnedBad(failedLogDirsPreCheck, failedLogDirsPostCheck);\n     }\n     if (!disksTurnedGood) {\n       disksTurnedGood \u003d\n           disksTurnedGood(failedLogDirsPreCheck, failedLogDirsPostCheck);\n     }\n \n     logDiskStatus(disksFailed, disksTurnedGood);\n \n     if (disksStatusChange) {\n       updateDirsAfterTest();\n     }\n \n     updateMetrics();\n \n     lastDisksCheckTime \u003d System.currentTimeMillis();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkDirs() {\n    boolean disksStatusChange \u003d false;\n    Set\u003cString\u003e failedLocalDirsPreCheck \u003d\n        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n    Set\u003cString\u003e failedLogDirsPreCheck \u003d\n        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n\n    if (localDirs.checkDirs()) {\n      disksStatusChange \u003d true;\n    }\n    if (logDirs.checkDirs()) {\n      disksStatusChange \u003d true;\n    }\n\n    Set\u003cString\u003e failedLocalDirsPostCheck \u003d\n        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n    Set\u003cString\u003e failedLogDirsPostCheck \u003d\n        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n\n    boolean disksFailed \u003d false;\n    boolean disksTurnedGood \u003d false;\n\n    disksFailed \u003d\n        disksTurnedBad(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n    disksTurnedGood \u003d\n        disksTurnedGood(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n\n    // skip check if we have new failed or good local dirs since we\u0027re going to\n    // log anyway\n    if (!disksFailed) {\n      disksFailed \u003d\n          disksTurnedBad(failedLogDirsPreCheck, failedLogDirsPostCheck);\n    }\n    if (!disksTurnedGood) {\n      disksTurnedGood \u003d\n          disksTurnedGood(failedLogDirsPreCheck, failedLogDirsPostCheck);\n    }\n\n    logDiskStatus(disksFailed, disksTurnedGood);\n\n    if (disksStatusChange) {\n      updateDirsAfterTest();\n    }\n\n    updateMetrics();\n\n    lastDisksCheckTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "674c7ef64916fabbe59c8d6cdd50ca19cf7ddb7c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3503. Expose disk utilization percentage and bad local and log dir counts in NM metrics. Contributed by Varun Vasudev\n",
      "commitDate": "21/04/15 8:57 PM",
      "commitName": "674c7ef64916fabbe59c8d6cdd50ca19cf7ddb7c",
      "commitAuthor": "Jian He",
      "commitDateOld": "21/10/14 10:31 AM",
      "commitNameOld": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 182.43,
      "commitsBetweenForRepo": 1484,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,48 @@\n   private void checkDirs() {\n     boolean disksStatusChange \u003d false;\n     Set\u003cString\u003e failedLocalDirsPreCheck \u003d\n         new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n     Set\u003cString\u003e failedLogDirsPreCheck \u003d\n         new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n \n     if (localDirs.checkDirs()) {\n       disksStatusChange \u003d true;\n     }\n     if (logDirs.checkDirs()) {\n       disksStatusChange \u003d true;\n     }\n \n     Set\u003cString\u003e failedLocalDirsPostCheck \u003d\n         new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n     Set\u003cString\u003e failedLogDirsPostCheck \u003d\n         new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n \n     boolean disksFailed \u003d false;\n     boolean disksTurnedGood \u003d false;\n \n     disksFailed \u003d\n         disksTurnedBad(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n     disksTurnedGood \u003d\n         disksTurnedGood(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n \n     // skip check if we have new failed or good local dirs since we\u0027re going to\n     // log anyway\n     if (!disksFailed) {\n       disksFailed \u003d\n           disksTurnedBad(failedLogDirsPreCheck, failedLogDirsPostCheck);\n     }\n     if (!disksTurnedGood) {\n       disksTurnedGood \u003d\n           disksTurnedGood(failedLogDirsPreCheck, failedLogDirsPostCheck);\n     }\n \n     logDiskStatus(disksFailed, disksTurnedGood);\n \n     if (disksStatusChange) {\n       updateDirsAfterTest();\n     }\n \n+    updateMetrics();\n+\n     lastDisksCheckTime \u003d System.currentTimeMillis();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkDirs() {\n    boolean disksStatusChange \u003d false;\n    Set\u003cString\u003e failedLocalDirsPreCheck \u003d\n        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n    Set\u003cString\u003e failedLogDirsPreCheck \u003d\n        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n\n    if (localDirs.checkDirs()) {\n      disksStatusChange \u003d true;\n    }\n    if (logDirs.checkDirs()) {\n      disksStatusChange \u003d true;\n    }\n\n    Set\u003cString\u003e failedLocalDirsPostCheck \u003d\n        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n    Set\u003cString\u003e failedLogDirsPostCheck \u003d\n        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n\n    boolean disksFailed \u003d false;\n    boolean disksTurnedGood \u003d false;\n\n    disksFailed \u003d\n        disksTurnedBad(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n    disksTurnedGood \u003d\n        disksTurnedGood(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n\n    // skip check if we have new failed or good local dirs since we\u0027re going to\n    // log anyway\n    if (!disksFailed) {\n      disksFailed \u003d\n          disksTurnedBad(failedLogDirsPreCheck, failedLogDirsPostCheck);\n    }\n    if (!disksTurnedGood) {\n      disksTurnedGood \u003d\n          disksTurnedGood(failedLogDirsPreCheck, failedLogDirsPostCheck);\n    }\n\n    logDiskStatus(disksFailed, disksTurnedGood);\n\n    if (disksStatusChange) {\n      updateDirsAfterTest();\n    }\n\n    updateMetrics();\n\n    lastDisksCheckTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
      "extendedDetails": {}
    },
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": {
      "type": "Ybodychange",
      "commitMessage": "YARN-90. NodeManager should identify failed disks becoming good again. Contributed by Varun Vasudev\n",
      "commitDate": "21/10/14 10:31 AM",
      "commitName": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "07/03/14 4:52 PM",
      "commitNameOld": "0b1304d098169bda3c7eadf9a07dd0b9e87ab150",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 227.69,
      "commitsBetweenForRepo": 1802,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,46 @@\n   private void checkDirs() {\n-      boolean newFailure \u003d false;\n-      if (localDirs.checkDirs()) {\n-        newFailure \u003d true;\n-      }\n-      if (logDirs.checkDirs()) {\n-        newFailure \u003d true;\n-      }\n+    boolean disksStatusChange \u003d false;\n+    Set\u003cString\u003e failedLocalDirsPreCheck \u003d\n+        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n+    Set\u003cString\u003e failedLogDirsPreCheck \u003d\n+        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n \n-      if (newFailure) {\n-        updateDirsAfterFailure();\n-      }\n-      lastDisksCheckTime \u003d System.currentTimeMillis();\n+    if (localDirs.checkDirs()) {\n+      disksStatusChange \u003d true;\n+    }\n+    if (logDirs.checkDirs()) {\n+      disksStatusChange \u003d true;\n+    }\n+\n+    Set\u003cString\u003e failedLocalDirsPostCheck \u003d\n+        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n+    Set\u003cString\u003e failedLogDirsPostCheck \u003d\n+        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n+\n+    boolean disksFailed \u003d false;\n+    boolean disksTurnedGood \u003d false;\n+\n+    disksFailed \u003d\n+        disksTurnedBad(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n+    disksTurnedGood \u003d\n+        disksTurnedGood(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n+\n+    // skip check if we have new failed or good local dirs since we\u0027re going to\n+    // log anyway\n+    if (!disksFailed) {\n+      disksFailed \u003d\n+          disksTurnedBad(failedLogDirsPreCheck, failedLogDirsPostCheck);\n+    }\n+    if (!disksTurnedGood) {\n+      disksTurnedGood \u003d\n+          disksTurnedGood(failedLogDirsPreCheck, failedLogDirsPostCheck);\n+    }\n+\n+    logDiskStatus(disksFailed, disksTurnedGood);\n+\n+    if (disksStatusChange) {\n+      updateDirsAfterTest();\n+    }\n+\n+    lastDisksCheckTime \u003d System.currentTimeMillis();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkDirs() {\n    boolean disksStatusChange \u003d false;\n    Set\u003cString\u003e failedLocalDirsPreCheck \u003d\n        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n    Set\u003cString\u003e failedLogDirsPreCheck \u003d\n        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n\n    if (localDirs.checkDirs()) {\n      disksStatusChange \u003d true;\n    }\n    if (logDirs.checkDirs()) {\n      disksStatusChange \u003d true;\n    }\n\n    Set\u003cString\u003e failedLocalDirsPostCheck \u003d\n        new HashSet\u003cString\u003e(localDirs.getFailedDirs());\n    Set\u003cString\u003e failedLogDirsPostCheck \u003d\n        new HashSet\u003cString\u003e(logDirs.getFailedDirs());\n\n    boolean disksFailed \u003d false;\n    boolean disksTurnedGood \u003d false;\n\n    disksFailed \u003d\n        disksTurnedBad(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n    disksTurnedGood \u003d\n        disksTurnedGood(failedLocalDirsPreCheck, failedLocalDirsPostCheck);\n\n    // skip check if we have new failed or good local dirs since we\u0027re going to\n    // log anyway\n    if (!disksFailed) {\n      disksFailed \u003d\n          disksTurnedBad(failedLogDirsPreCheck, failedLogDirsPostCheck);\n    }\n    if (!disksTurnedGood) {\n      disksTurnedGood \u003d\n          disksTurnedGood(failedLogDirsPreCheck, failedLogDirsPostCheck);\n    }\n\n    logDiskStatus(disksFailed, disksTurnedGood);\n\n    if (disksStatusChange) {\n      updateDirsAfterTest();\n    }\n\n    lastDisksCheckTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
      "extendedDetails": {}
    },
    "41ebf4fb24241e9b09bf29965630a7a73af129f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-106. Nodemanager needs to set permissions of local directories (jlowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391649 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/12 1:50 PM",
      "commitName": "41ebf4fb24241e9b09bf29965630a7a73af129f3",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 51.64,
      "commitsBetweenForRepo": 293,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,14 @@\n   private void checkDirs() {\n       boolean newFailure \u003d false;\n       if (localDirs.checkDirs()) {\n         newFailure \u003d true;\n       }\n       if (logDirs.checkDirs()) {\n         newFailure \u003d true;\n       }\n \n       if (newFailure) {\n-        LOG.info(\"Disk(s) failed. \" + getDisksHealthReport());\n-        updateDirsInConfiguration();\n-        if (!areDisksHealthy()) {\n-          // Just log.\n-          LOG.error(\"Most of the disks failed. \" + getDisksHealthReport());\n-        }\n+        updateDirsAfterFailure();\n       }\n       lastDisksCheckTime \u003d System.currentTimeMillis();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkDirs() {\n      boolean newFailure \u003d false;\n      if (localDirs.checkDirs()) {\n        newFailure \u003d true;\n      }\n      if (logDirs.checkDirs()) {\n        newFailure \u003d true;\n      }\n\n      if (newFailure) {\n        updateDirsAfterFailure();\n      }\n      lastDisksCheckTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void checkDirs() {\n      boolean newFailure \u003d false;\n      if (localDirs.checkDirs()) {\n        newFailure \u003d true;\n      }\n      if (logDirs.checkDirs()) {\n        newFailure \u003d true;\n      }\n\n      if (newFailure) {\n        LOG.info(\"Disk(s) failed. \" + getDisksHealthReport());\n        updateDirsInConfiguration();\n        if (!areDisksHealthy()) {\n          // Just log.\n          LOG.error(\"Most of the disks failed. \" + getDisksHealthReport());\n        }\n      }\n      lastDisksCheckTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java"
      }
    },
    "123c4f57d3de1771c762c89f5befd04d420cf7e7": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4444. nodemanager fails to start when one of the local-dirs is  bad (Jason Lowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1367783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/12 2:08 PM",
      "commitName": "123c4f57d3de1771c762c89f5befd04d420cf7e7",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,19 @@\n+  private void checkDirs() {\n+      boolean newFailure \u003d false;\n+      if (localDirs.checkDirs()) {\n+        newFailure \u003d true;\n+      }\n+      if (logDirs.checkDirs()) {\n+        newFailure \u003d true;\n+      }\n+\n+      if (newFailure) {\n+        LOG.info(\"Disk(s) failed. \" + getDisksHealthReport());\n+        updateDirsInConfiguration();\n+        if (!areDisksHealthy()) {\n+          // Just log.\n+          LOG.error(\"Most of the disks failed. \" + getDisksHealthReport());\n+        }\n+      }\n+      lastDisksCheckTime \u003d System.currentTimeMillis();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkDirs() {\n      boolean newFailure \u003d false;\n      if (localDirs.checkDirs()) {\n        newFailure \u003d true;\n      }\n      if (logDirs.checkDirs()) {\n        newFailure \u003d true;\n      }\n\n      if (newFailure) {\n        LOG.info(\"Disk(s) failed. \" + getDisksHealthReport());\n        updateDirsInConfiguration();\n        if (!areDisksHealthy()) {\n          // Just log.\n          LOG.error(\"Most of the disks failed. \" + getDisksHealthReport());\n        }\n      }\n      lastDisksCheckTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LocalDirsHandlerService.java"
    }
  }
}