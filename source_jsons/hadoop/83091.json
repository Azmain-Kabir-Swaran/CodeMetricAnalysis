{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GangliaSink30.java",
  "functionName": "emitMetric",
  "functionId": "emitMetric___groupName-String__name-String__type-String__value-String__gConf-GangliaConf__gSlope-GangliaSlope",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
  "functionStartLine": 221,
  "functionEndLine": 252,
  "numCommitsSeen": 6,
  "timeTaken": 792,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "224972e0558e7a0022002ed26e765acdfd9f8f6c"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "224972e0558e7a0022002ed26e765acdfd9f8f6c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void emitMetric(String groupName, String name, String type,\n      String value, GangliaConf gConf, GangliaSlope gSlope) throws IOException {\n\n    if (name \u003d\u003d null) {\n      LOG.warn(\"Metric was emitted with no name.\");\n      return;\n    } else if (value \u003d\u003d null) {\n      LOG.warn(\"Metric name \" + name + \" was emitted with a null value.\");\n      return;\n    } else if (type \u003d\u003d null) {\n      LOG.warn(\"Metric name \" + name + \", value \" + value + \" has no type.\");\n      return;\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Emitting metric \" + name + \", type \" + type + \", value \"\n          + value + \", slope \" + gSlope.name() + \" from hostname \"\n          + getHostName());\n    }\n\n    xdr_int(0); // metric_user_defined\n    xdr_string(type);\n    xdr_string(name);\n    xdr_string(value);\n    xdr_string(gConf.getUnits());\n    xdr_int(gSlope.ordinal());\n    xdr_int(gConf.getTmax());\n    xdr_int(gConf.getDmax());\n\n    // send the metric to Ganglia hosts\n    emitToGangliaHosts();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void emitMetric(String groupName, String name, String type,\n      String value, GangliaConf gConf, GangliaSlope gSlope) throws IOException {\n\n    if (name \u003d\u003d null) {\n      LOG.warn(\"Metric was emitted with no name.\");\n      return;\n    } else if (value \u003d\u003d null) {\n      LOG.warn(\"Metric name \" + name + \" was emitted with a null value.\");\n      return;\n    } else if (type \u003d\u003d null) {\n      LOG.warn(\"Metric name \" + name + \", value \" + value + \" has no type.\");\n      return;\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Emitting metric \" + name + \", type \" + type + \", value \"\n          + value + \", slope \" + gSlope.name() + \" from hostname \"\n          + getHostName());\n    }\n\n    xdr_int(0); // metric_user_defined\n    xdr_string(type);\n    xdr_string(name);\n    xdr_string(value);\n    xdr_string(gConf.getUnits());\n    xdr_int(gSlope.ordinal());\n    xdr_int(gConf.getTmax());\n    xdr_int(gConf.getDmax());\n\n    // send the metric to Ganglia hosts\n    emitToGangliaHosts();\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java"
      }
    },
    "224972e0558e7a0022002ed26e765acdfd9f8f6c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7324. Ganglia plugins for metrics v2. (Priyo Mustafi via llu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/11 3:23 AM",
      "commitName": "224972e0558e7a0022002ed26e765acdfd9f8f6c",
      "commitAuthor": "Luke Lu",
      "diff": "@@ -0,0 +1,32 @@\n+  protected void emitMetric(String groupName, String name, String type,\n+      String value, GangliaConf gConf, GangliaSlope gSlope) throws IOException {\n+\n+    if (name \u003d\u003d null) {\n+      LOG.warn(\"Metric was emitted with no name.\");\n+      return;\n+    } else if (value \u003d\u003d null) {\n+      LOG.warn(\"Metric name \" + name + \" was emitted with a null value.\");\n+      return;\n+    } else if (type \u003d\u003d null) {\n+      LOG.warn(\"Metric name \" + name + \", value \" + value + \" has no type.\");\n+      return;\n+    }\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Emitting metric \" + name + \", type \" + type + \", value \"\n+          + value + \", slope \" + gSlope.name() + \" from hostname \"\n+          + getHostName());\n+    }\n+\n+    xdr_int(0); // metric_user_defined\n+    xdr_string(type);\n+    xdr_string(name);\n+    xdr_string(value);\n+    xdr_string(gConf.getUnits());\n+    xdr_int(gSlope.ordinal());\n+    xdr_int(gConf.getTmax());\n+    xdr_int(gConf.getDmax());\n+\n+    // send the metric to Ganglia hosts\n+    emitToGangliaHosts();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void emitMetric(String groupName, String name, String type,\n      String value, GangliaConf gConf, GangliaSlope gSlope) throws IOException {\n\n    if (name \u003d\u003d null) {\n      LOG.warn(\"Metric was emitted with no name.\");\n      return;\n    } else if (value \u003d\u003d null) {\n      LOG.warn(\"Metric name \" + name + \" was emitted with a null value.\");\n      return;\n    } else if (type \u003d\u003d null) {\n      LOG.warn(\"Metric name \" + name + \", value \" + value + \" has no type.\");\n      return;\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Emitting metric \" + name + \", type \" + type + \", value \"\n          + value + \", slope \" + gSlope.name() + \" from hostname \"\n          + getHostName());\n    }\n\n    xdr_int(0); // metric_user_defined\n    xdr_string(type);\n    xdr_string(name);\n    xdr_string(value);\n    xdr_string(gConf.getUnits());\n    xdr_int(gSlope.ordinal());\n    xdr_int(gConf.getTmax());\n    xdr_int(gConf.getDmax());\n\n    // send the metric to Ganglia hosts\n    emitToGangliaHosts();\n  }",
      "path": "common/src/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java"
    }
  }
}