{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerApplicationAttempt.java",
  "functionName": "getOutstandingAsksCount",
  "functionId": "getOutstandingAsksCount___schedulerKey-SchedulerRequestKey__resourceName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
  "functionStartLine": 332,
  "functionEndLine": 342,
  "numCommitsSeen": 105,
  "timeTaken": 3209,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Ybodychange",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public int getOutstandingAsksCount(SchedulerRequestKey schedulerKey,\n       String resourceName) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       AppPlacementAllocator ap \u003d appSchedulingInfo.getAppPlacementAllocator(\n           schedulerKey);\n       return ap \u003d\u003d null ? 0 : ap.getOutstandingAsksCount(resourceName);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getOutstandingAsksCount(SchedulerRequestKey schedulerKey,\n      String resourceName) {\n    readLock.lock();\n    try {\n      AppPlacementAllocator ap \u003d appSchedulingInfo.getAppPlacementAllocator(\n          schedulerKey);\n      return ap \u003d\u003d null ? 0 : ap.getOutstandingAsksCount(resourceName);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public int getOutstandingAsksCount(SchedulerRequestKey schedulerKey,\n       String resourceName) {\n     try {\n       readLock.lock();\n-      SchedulingPlacementSet ps \u003d appSchedulingInfo.getSchedulingPlacementSet(\n+      AppPlacementAllocator ap \u003d appSchedulingInfo.getAppPlacementAllocator(\n           schedulerKey);\n-      return ps \u003d\u003d null ? 0 : ps.getOutstandingAsksCount(resourceName);\n+      return ap \u003d\u003d null ? 0 : ap.getOutstandingAsksCount(resourceName);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getOutstandingAsksCount(SchedulerRequestKey schedulerKey,\n      String resourceName) {\n    try {\n      readLock.lock();\n      AppPlacementAllocator ap \u003d appSchedulingInfo.getAppPlacementAllocator(\n          schedulerKey);\n      return ap \u003d\u003d null ? 0 : ap.getOutstandingAsksCount(resourceName);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,11 @@\n+  public int getOutstandingAsksCount(SchedulerRequestKey schedulerKey,\n+      String resourceName) {\n+    try {\n+      readLock.lock();\n+      SchedulingPlacementSet ps \u003d appSchedulingInfo.getSchedulingPlacementSet(\n+          schedulerKey);\n+      return ps \u003d\u003d null ? 0 : ps.getOutstandingAsksCount(resourceName);\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int getOutstandingAsksCount(SchedulerRequestKey schedulerKey,\n      String resourceName) {\n    try {\n      readLock.lock();\n      SchedulingPlacementSet ps \u003d appSchedulingInfo.getSchedulingPlacementSet(\n          schedulerKey);\n      return ps \u003d\u003d null ? 0 : ps.getOutstandingAsksCount(resourceName);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java"
    }
  }
}