{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagerImpl.java",
  "functionName": "localize",
  "functionId": "localize___request-ResourceLocalizationRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
  "functionStartLine": 1814,
  "functionEndLine": 1833,
  "numCommitsSeen": 139,
  "timeTaken": 4468,
  "changeHistory": [
    "4815d024c59cb029e2053d94c7aed33eb8053d3e",
    "2f163cd5cfaf8308f50b6a92c21498b78ada6953",
    "fe644bafe7b4fb5b07f7cf08a7d7044abbf55027",
    "3552c2b99dff4f21489ff284f9dcba40e897a1e5",
    "40b5a59b726733df456330a26f03d5174cc0bc1c",
    "e6fcfe28e304062c7d09231db757acb2953703ce",
    "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d"
  ],
  "changeHistoryShort": {
    "4815d024c59cb029e2053d94c7aed33eb8053d3e": "Ybodychange",
    "2f163cd5cfaf8308f50b6a92c21498b78ada6953": "Ybodychange",
    "fe644bafe7b4fb5b07f7cf08a7d7044abbf55027": "Ybodychange",
    "3552c2b99dff4f21489ff284f9dcba40e897a1e5": "Ybodychange",
    "40b5a59b726733df456330a26f03d5174cc0bc1c": "Ybodychange",
    "e6fcfe28e304062c7d09231db757acb2953703ce": "Ybodychange",
    "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4815d024c59cb029e2053d94c7aed33eb8053d3e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5609. Expose upgrade and restart API in ContainerManagementProtocol. Contributed by Arun Suresh\n",
      "commitDate": "26/09/16 8:46 AM",
      "commitName": "4815d024c59cb029e2053d94c7aed33eb8053d3e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "26/09/16 8:36 AM",
      "commitNameOld": "2f163cd5cfaf8308f50b6a92c21498b78ada6953",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public ResourceLocalizationResponse localize(\n       ResourceLocalizationRequest request) throws YarnException, IOException {\n \n     ContainerId containerId \u003d request.getContainerId();\n-    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n+    Container container \u003d preReInitializeOrLocalizeCheck(containerId,\n         ReInitOp.LOCALIZE);\n     try {\n       Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n           container.getResourceSet().addResources(request.getLocalResources());\n       if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n         dispatcher.getEventHandler()\n             .handle(new ContainerLocalizationRequestEvent(container, req));\n       }\n     } catch (URISyntaxException e) {\n       LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n       throw new YarnException(e);\n     }\n \n     return ResourceLocalizationResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    ContainerId containerId \u003d request.getContainerId();\n    Container container \u003d preReInitializeOrLocalizeCheck(containerId,\n        ReInitOp.LOCALIZE);\n    try {\n      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n          container.getResourceSet().addResources(request.getLocalResources());\n      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n        dispatcher.getEventHandler()\n            .handle(new ContainerLocalizationRequestEvent(container, req));\n      }\n    } catch (URISyntaxException e) {\n      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n      throw new YarnException(e);\n    }\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "2f163cd5cfaf8308f50b6a92c21498b78ada6953": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-5609. Expose upgrade and restart API in ContainerManagementProtocol. Contributed by Arun Suresh\"\n\nThis reverts commit fe644bafe7b4fb5b07f7cf08a7d7044abbf55027.\n",
      "commitDate": "26/09/16 8:36 AM",
      "commitName": "2f163cd5cfaf8308f50b6a92c21498b78ada6953",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "26/09/16 7:41 AM",
      "commitNameOld": "fe644bafe7b4fb5b07f7cf08a7d7044abbf55027",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public ResourceLocalizationResponse localize(\n       ResourceLocalizationRequest request) throws YarnException, IOException {\n \n     ContainerId containerId \u003d request.getContainerId();\n-    Container container \u003d preReInitializeOrLocalizeCheck(containerId,\n+    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n         ReInitOp.LOCALIZE);\n     try {\n       Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n           container.getResourceSet().addResources(request.getLocalResources());\n       if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n         dispatcher.getEventHandler()\n             .handle(new ContainerLocalizationRequestEvent(container, req));\n       }\n     } catch (URISyntaxException e) {\n       LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n       throw new YarnException(e);\n     }\n \n     return ResourceLocalizationResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    ContainerId containerId \u003d request.getContainerId();\n    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n        ReInitOp.LOCALIZE);\n    try {\n      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n          container.getResourceSet().addResources(request.getLocalResources());\n      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n        dispatcher.getEventHandler()\n            .handle(new ContainerLocalizationRequestEvent(container, req));\n      }\n    } catch (URISyntaxException e) {\n      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n      throw new YarnException(e);\n    }\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "fe644bafe7b4fb5b07f7cf08a7d7044abbf55027": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5609. Expose upgrade and restart API in ContainerManagementProtocol. Contributed by Arun Suresh\n",
      "commitDate": "26/09/16 7:41 AM",
      "commitName": "fe644bafe7b4fb5b07f7cf08a7d7044abbf55027",
      "commitAuthor": "Jian He",
      "commitDateOld": "18/09/16 10:55 AM",
      "commitNameOld": "3552c2b99dff4f21489ff284f9dcba40e897a1e5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 7.87,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public ResourceLocalizationResponse localize(\n       ResourceLocalizationRequest request) throws YarnException, IOException {\n \n     ContainerId containerId \u003d request.getContainerId();\n-    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n+    Container container \u003d preReInitializeOrLocalizeCheck(containerId,\n         ReInitOp.LOCALIZE);\n     try {\n       Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n           container.getResourceSet().addResources(request.getLocalResources());\n       if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n         dispatcher.getEventHandler()\n             .handle(new ContainerLocalizationRequestEvent(container, req));\n       }\n     } catch (URISyntaxException e) {\n       LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n       throw new YarnException(e);\n     }\n \n     return ResourceLocalizationResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    ContainerId containerId \u003d request.getContainerId();\n    Container container \u003d preReInitializeOrLocalizeCheck(containerId,\n        ReInitOp.LOCALIZE);\n    try {\n      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n          container.getResourceSet().addResources(request.getLocalResources());\n      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n        dispatcher.getEventHandler()\n            .handle(new ContainerLocalizationRequestEvent(container, req));\n      }\n    } catch (URISyntaxException e) {\n      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n      throw new YarnException(e);\n    }\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "3552c2b99dff4f21489ff284f9dcba40e897a1e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5637. Changes in NodeManager to support Container rollback and commit. (asuresh)\n",
      "commitDate": "18/09/16 10:55 AM",
      "commitName": "3552c2b99dff4f21489ff284f9dcba40e897a1e5",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "15/09/16 7:15 AM",
      "commitNameOld": "40b5a59b726733df456330a26f03d5174cc0bc1c",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 3.15,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public ResourceLocalizationResponse localize(\n       ResourceLocalizationRequest request) throws YarnException, IOException {\n \n     ContainerId containerId \u003d request.getContainerId();\n     Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n-        ReinitOp.LOCALIZE);\n+        ReInitOp.LOCALIZE);\n     try {\n       Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n           container.getResourceSet().addResources(request.getLocalResources());\n       if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n         dispatcher.getEventHandler()\n             .handle(new ContainerLocalizationRequestEvent(container, req));\n       }\n     } catch (URISyntaxException e) {\n       LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n       throw new YarnException(e);\n     }\n \n     return ResourceLocalizationResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    ContainerId containerId \u003d request.getContainerId();\n    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n        ReInitOp.LOCALIZE);\n    try {\n      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n          container.getResourceSet().addResources(request.getLocalResources());\n      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n        dispatcher.getEventHandler()\n            .handle(new ContainerLocalizationRequestEvent(container, req));\n      }\n    } catch (URISyntaxException e) {\n      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n      throw new YarnException(e);\n    }\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "40b5a59b726733df456330a26f03d5174cc0bc1c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5620. Core changes in NodeManager to support re-initialization of Containers with new launchContext. (asuresh)\n",
      "commitDate": "15/09/16 7:15 AM",
      "commitName": "40b5a59b726733df456330a26f03d5174cc0bc1c",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "06/09/16 7:31 AM",
      "commitNameOld": "e6fcfe28e304062c7d09231db757acb2953703ce",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 8.99,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,20 @@\n   public ResourceLocalizationResponse localize(\n       ResourceLocalizationRequest request) throws YarnException, IOException {\n \n     ContainerId containerId \u003d request.getContainerId();\n-    Container container \u003d context.getContainers().get(containerId);\n-    if (container \u003d\u003d null) {\n-      throw new YarnException(\"Specified \" + containerId + \" does not exist!\");\n-    }\n-    if (!container.getContainerState()\n-        .equals(org.apache.hadoop.yarn.server.nodemanager.\n-            containermanager.container.ContainerState.RUNNING)) {\n-      throw new YarnException(\n-          containerId + \" is at \" + container.getContainerState()\n-              + \" state. Not able to localize new resources.\");\n-    }\n-\n+    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n+        ReinitOp.LOCALIZE);\n     try {\n       Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n           container.getResourceSet().addResources(request.getLocalResources());\n       if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n         dispatcher.getEventHandler()\n             .handle(new ContainerLocalizationRequestEvent(container, req));\n       }\n     } catch (URISyntaxException e) {\n       LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n       throw new YarnException(e);\n     }\n \n     return ResourceLocalizationResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    ContainerId containerId \u003d request.getContainerId();\n    Container container \u003d preUpgradeOrLocalizeCheck(containerId,\n        ReinitOp.LOCALIZE);\n    try {\n      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n          container.getResourceSet().addResources(request.getLocalResources());\n      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n        dispatcher.getEventHandler()\n            .handle(new ContainerLocalizationRequestEvent(container, req));\n      }\n    } catch (URISyntaxException e) {\n      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n      throw new YarnException(e);\n    }\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "e6fcfe28e304062c7d09231db757acb2953703ce": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5576. Allow resource localization while container is running. Contributed by Jian He.\n",
      "commitDate": "06/09/16 7:31 AM",
      "commitName": "e6fcfe28e304062c7d09231db757acb2953703ce",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 6.65,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,30 @@\n   public ResourceLocalizationResponse localize(\n       ResourceLocalizationRequest request) throws YarnException, IOException {\n \n+    ContainerId containerId \u003d request.getContainerId();\n+    Container container \u003d context.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new YarnException(\"Specified \" + containerId + \" does not exist!\");\n+    }\n+    if (!container.getContainerState()\n+        .equals(org.apache.hadoop.yarn.server.nodemanager.\n+            containermanager.container.ContainerState.RUNNING)) {\n+      throw new YarnException(\n+          containerId + \" is at \" + container.getContainerState()\n+              + \" state. Not able to localize new resources.\");\n+    }\n+\n+    try {\n+      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n+          container.getResourceSet().addResources(request.getLocalResources());\n+      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n+        dispatcher.getEventHandler()\n+            .handle(new ContainerLocalizationRequestEvent(container, req));\n+      }\n+    } catch (URISyntaxException e) {\n+      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n+      throw new YarnException(e);\n+    }\n+\n     return ResourceLocalizationResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    ContainerId containerId \u003d request.getContainerId();\n    Container container \u003d context.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new YarnException(\"Specified \" + containerId + \" does not exist!\");\n    }\n    if (!container.getContainerState()\n        .equals(org.apache.hadoop.yarn.server.nodemanager.\n            containermanager.container.ContainerState.RUNNING)) {\n      throw new YarnException(\n          containerId + \" is at \" + container.getContainerState()\n              + \" state. Not able to localize new resources.\");\n    }\n\n    try {\n      Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e req \u003d\n          container.getResourceSet().addResources(request.getLocalResources());\n      if (req !\u003d null \u0026\u0026 !req.isEmpty()) {\n        dispatcher.getEventHandler()\n            .handle(new ContainerLocalizationRequestEvent(container, req));\n      }\n    } catch (URISyntaxException e) {\n      LOG.info(\"Error when parsing local resource URI for \" + containerId, e);\n      throw new YarnException(e);\n    }\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5557. Add localize API to the ContainerManagementProtocol. Contributed by Jian He.\n",
      "commitDate": "26/08/16 9:04 AM",
      "commitName": "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,5 @@\n+  public ResourceLocalizationResponse localize(\n+      ResourceLocalizationRequest request) throws YarnException, IOException {\n+\n+    return ResourceLocalizationResponse.newInstance();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ResourceLocalizationResponse localize(\n      ResourceLocalizationRequest request) throws YarnException, IOException {\n\n    return ResourceLocalizationResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}