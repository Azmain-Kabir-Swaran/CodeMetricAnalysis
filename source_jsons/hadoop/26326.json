{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MRAppMaster.java",
  "functionName": "isJobNamePatternMatch",
  "functionId": "isJobNamePatternMatch___conf-JobConf__jobTempDir-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
  "functionStartLine": 573,
  "functionEndLine": 585,
  "numCommitsSeen": 124,
  "timeTaken": 1949,
  "changeHistory": [
    "3ed3062fe3979ff55a411b730a8eee2b2c96d6b3",
    "3b3b63081b39270ba363eb4558c5fb37fd5172d5"
  ],
  "changeHistoryShort": {
    "3ed3062fe3979ff55a411b730a8eee2b2c96d6b3": "Ybodychange",
    "3b3b63081b39270ba363eb4558c5fb37fd5172d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ed3062fe3979ff55a411b730a8eee2b2c96d6b3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6881. Fix warnings from Spotbugs in hadoop-mapreduce. Contributed by Weiwei Yang.\n",
      "commitDate": "26/04/17 11:45 PM",
      "commitName": "3ed3062fe3979ff55a411b730a8eee2b2c96d6b3",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/04/17 11:44 AM",
      "commitNameOld": "dd43b895c2e50fa97cb7327be77509b87dad1823",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 7.5,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   private boolean isJobNamePatternMatch(JobConf conf, String jobTempDir) {\n     // Matched staging files should be preserved after job is finished.\n     if (conf.getKeepTaskFilesPattern() !\u003d null \u0026\u0026 jobTempDir !\u003d null) {\n-      String jobFileName \u003d Paths.get(jobTempDir).getFileName().toString();\n-      Pattern pattern \u003d Pattern.compile(conf.getKeepTaskFilesPattern());\n-      Matcher matcher \u003d pattern.matcher(jobFileName);\n-      return matcher.find();\n-    } else {\n-      return false;\n+      java.nio.file.Path pathName \u003d Paths.get(jobTempDir).getFileName();\n+      if (pathName !\u003d null) {\n+        String jobFileName \u003d pathName.toString();\n+        Pattern pattern \u003d Pattern.compile(conf.getKeepTaskFilesPattern());\n+        Matcher matcher \u003d pattern.matcher(jobFileName);\n+        return matcher.find();\n+      }\n     }\n+    return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isJobNamePatternMatch(JobConf conf, String jobTempDir) {\n    // Matched staging files should be preserved after job is finished.\n    if (conf.getKeepTaskFilesPattern() !\u003d null \u0026\u0026 jobTempDir !\u003d null) {\n      java.nio.file.Path pathName \u003d Paths.get(jobTempDir).getFileName();\n      if (pathName !\u003d null) {\n        String jobFileName \u003d pathName.toString();\n        Pattern pattern \u003d Pattern.compile(conf.getKeepTaskFilesPattern());\n        Matcher matcher \u003d pattern.matcher(jobFileName);\n        return matcher.find();\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
      "extendedDetails": {}
    },
    "3b3b63081b39270ba363eb4558c5fb37fd5172d5": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6607. Enable regex pattern matching when mapreduce.task.files.preserve.filepattern is set. Contributed by Kai Sasaki.\n",
      "commitDate": "22/05/16 3:24 PM",
      "commitName": "3b3b63081b39270ba363eb4558c5fb37fd5172d5",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,11 @@\n+  private boolean isJobNamePatternMatch(JobConf conf, String jobTempDir) {\n+    // Matched staging files should be preserved after job is finished.\n+    if (conf.getKeepTaskFilesPattern() !\u003d null \u0026\u0026 jobTempDir !\u003d null) {\n+      String jobFileName \u003d Paths.get(jobTempDir).getFileName().toString();\n+      Pattern pattern \u003d Pattern.compile(conf.getKeepTaskFilesPattern());\n+      Matcher matcher \u003d pattern.matcher(jobFileName);\n+      return matcher.find();\n+    } else {\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isJobNamePatternMatch(JobConf conf, String jobTempDir) {\n    // Matched staging files should be preserved after job is finished.\n    if (conf.getKeepTaskFilesPattern() !\u003d null \u0026\u0026 jobTempDir !\u003d null) {\n      String jobFileName \u003d Paths.get(jobTempDir).getFileName().toString();\n      Pattern pattern \u003d Pattern.compile(conf.getKeepTaskFilesPattern());\n      Matcher matcher \u003d pattern.matcher(jobFileName);\n      return matcher.find();\n    } else {\n      return false;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java"
    }
  }
}