{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsLoggerTask.java",
  "functionName": "getFilteredAttributes",
  "functionId": "getFilteredAttributes___mBeanInfo-MBeanInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
  "functionStartLine": 134,
  "functionEndLine": 147,
  "numCommitsSeen": 151,
  "timeTaken": 1899,
  "changeHistory": [
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
    "a88f31ebf3433392419127816f168136de0a9e77"
  ],
  "changeHistoryShort": {
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5": "Ymovefromfile",
    "a88f31ebf3433392419127816f168136de0a9e77": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
      "commitDate": "15/09/15 11:48 AM",
      "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "15/09/15 11:40 AM",
      "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n-    private static Set\u003cString\u003e getFilteredAttributes(\n-        MBeanInfo mBeanInfo) {\n-      Set\u003cString\u003e attributeNames \u003d new HashSet\u003c\u003e();\n-      for (MBeanAttributeInfo attributeInfo : mBeanInfo.getAttributes()) {\n-        if (!attributeInfo.getType().equals(\n-                \"javax.management.openmbean.TabularData\") \u0026\u0026\n-            !attributeInfo.getType().equals(\n-                \"javax.management.openmbean.CompositeData\") \u0026\u0026\n-            !attributeInfo.getType().equals(\n-                \"[Ljavax.management.openmbean.CompositeData;\")) {\n-          attributeNames.add(attributeInfo.getName());\n-        }\n+  private static Set\u003cString\u003e getFilteredAttributes(MBeanInfo mBeanInfo) {\n+    Set\u003cString\u003e attributeNames \u003d new HashSet\u003c\u003e();\n+    for (MBeanAttributeInfo attributeInfo : mBeanInfo.getAttributes()) {\n+      if (!attributeInfo.getType().equals(\n+          \"javax.management.openmbean.TabularData\")\n+          \u0026\u0026 !attributeInfo.getType().equals(\n+              \"javax.management.openmbean.CompositeData\")\n+          \u0026\u0026 !attributeInfo.getType().equals(\n+              \"[Ljavax.management.openmbean.CompositeData;\")) {\n+        attributeNames.add(attributeInfo.getName());\n       }\n-      return attributeNames;\n-    }\n\\ No newline at end of file\n+    }\n+    return attributeNames;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Set\u003cString\u003e getFilteredAttributes(MBeanInfo mBeanInfo) {\n    Set\u003cString\u003e attributeNames \u003d new HashSet\u003c\u003e();\n    for (MBeanAttributeInfo attributeInfo : mBeanInfo.getAttributes()) {\n      if (!attributeInfo.getType().equals(\n          \"javax.management.openmbean.TabularData\")\n          \u0026\u0026 !attributeInfo.getType().equals(\n              \"javax.management.openmbean.CompositeData\")\n          \u0026\u0026 !attributeInfo.getType().equals(\n              \"[Ljavax.management.openmbean.CompositeData;\")) {\n        attributeNames.add(attributeInfo.getName());\n      }\n    }\n    return attributeNames;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
        "oldMethodName": "getFilteredAttributes",
        "newMethodName": "getFilteredAttributes"
      }
    },
    "a88f31ebf3433392419127816f168136de0a9e77": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8880. NameNode metrics logging. (Arpit Agarwal)\n",
      "commitDate": "17/08/15 4:55 PM",
      "commitName": "a88f31ebf3433392419127816f168136de0a9e77",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,15 @@\n+    private static Set\u003cString\u003e getFilteredAttributes(\n+        MBeanInfo mBeanInfo) {\n+      Set\u003cString\u003e attributeNames \u003d new HashSet\u003c\u003e();\n+      for (MBeanAttributeInfo attributeInfo : mBeanInfo.getAttributes()) {\n+        if (!attributeInfo.getType().equals(\n+                \"javax.management.openmbean.TabularData\") \u0026\u0026\n+            !attributeInfo.getType().equals(\n+                \"javax.management.openmbean.CompositeData\") \u0026\u0026\n+            !attributeInfo.getType().equals(\n+                \"[Ljavax.management.openmbean.CompositeData;\")) {\n+          attributeNames.add(attributeInfo.getName());\n+        }\n+      }\n+      return attributeNames;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cString\u003e getFilteredAttributes(\n        MBeanInfo mBeanInfo) {\n      Set\u003cString\u003e attributeNames \u003d new HashSet\u003c\u003e();\n      for (MBeanAttributeInfo attributeInfo : mBeanInfo.getAttributes()) {\n        if (!attributeInfo.getType().equals(\n                \"javax.management.openmbean.TabularData\") \u0026\u0026\n            !attributeInfo.getType().equals(\n                \"javax.management.openmbean.CompositeData\") \u0026\u0026\n            !attributeInfo.getType().equals(\n                \"[Ljavax.management.openmbean.CompositeData;\")) {\n          attributeNames.add(attributeInfo.getName());\n        }\n      }\n      return attributeNames;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
    }
  }
}