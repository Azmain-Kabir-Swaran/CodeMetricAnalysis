{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CrossOriginFilter.java",
  "functionName": "doCrossFilter",
  "functionId": "doCrossFilter___req-HttpServletRequest__res-HttpServletResponse",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
  "functionStartLine": 108,
  "functionEndLine": 154,
  "numCommitsSeen": 11,
  "timeTaken": 1369,
  "changeHistory": [
    "f8adeb712dc834c27cec15c04a986f2f635aba83",
    "a8ad1e8089e4bf5854085d2d38d1c0133b5a41bc",
    "98588cf044d9908ecf767257c09a52cf17aa2ec2",
    "41aa4badf8270a8e7d4321809fe8b8a34db98968"
  ],
  "changeHistoryShort": {
    "f8adeb712dc834c27cec15c04a986f2f635aba83": "Yfilerename",
    "a8ad1e8089e4bf5854085d2d38d1c0133b5a41bc": "Ybodychange",
    "98588cf044d9908ecf767257c09a52cf17aa2ec2": "Ybodychange",
    "41aa4badf8270a8e7d4321809fe8b8a34db98968": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f8adeb712dc834c27cec15c04a986f2f635aba83": {
      "type": "Yfilerename",
      "commitMessage": "YARN-4009. CORS support for ResourceManager REST API. ( Varun Vasudev via jeagles)\n",
      "commitDate": "23/10/15 8:34 AM",
      "commitName": "f8adeb712dc834c27cec15c04a986f2f635aba83",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "23/10/15 7:47 AM",
      "commitNameOld": "35a303dfbe348f96c465fb8778ced6b5bb617e89",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n\n    String originsList \u003d encodeHeader(req.getHeader(ORIGIN));\n    if (!isCrossOrigin(originsList)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Header origin is null. Returning\");\n      }\n      return;\n    }\n\n    if (!areOriginsAllowed(originsList)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Header origins \u0027\" + originsList + \"\u0027 not allowed. Returning\");\n      }\n      return;\n    }\n\n    String accessControlRequestMethod \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n    if (!isMethodAllowed(accessControlRequestMethod)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Access control method \u0027\" + accessControlRequestMethod +\n            \"\u0027 not allowed. Returning\");\n      }\n      return;\n    }\n\n    String accessControlRequestHeaders \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n    if (!areHeadersAllowed(accessControlRequestHeaders)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Access control headers \u0027\" + accessControlRequestHeaders +\n            \"\u0027 not allowed. Returning\");\n      }\n      return;\n    }\n\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"Completed cross origin filter checks. Populating \" +\n          \"HttpServletResponse\");\n    }\n    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, originsList);\n    res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n    res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n    res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n    res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java"
      }
    },
    "a8ad1e8089e4bf5854085d2d38d1c0133b5a41bc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2897. CrossOriginFilter needs more log statements (Mit Desai via jeagles)\n",
      "commitDate": "27/01/15 2:06 PM",
      "commitName": "a8ad1e8089e4bf5854085d2d38d1c0133b5a41bc",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "12/09/14 9:33 PM",
      "commitNameOld": "98588cf044d9908ecf767257c09a52cf17aa2ec2",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 136.73,
      "commitsBetweenForRepo": 1085,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,47 @@\n   private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n \n     String originsList \u003d encodeHeader(req.getHeader(ORIGIN));\n     if (!isCrossOrigin(originsList)) {\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"Header origin is null. Returning\");\n+      }\n       return;\n     }\n \n     if (!areOriginsAllowed(originsList)) {\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"Header origins \u0027\" + originsList + \"\u0027 not allowed. Returning\");\n+      }\n       return;\n     }\n \n     String accessControlRequestMethod \u003d\n         req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n     if (!isMethodAllowed(accessControlRequestMethod)) {\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"Access control method \u0027\" + accessControlRequestMethod +\n+            \"\u0027 not allowed. Returning\");\n+      }\n       return;\n     }\n \n     String accessControlRequestHeaders \u003d\n         req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n     if (!areHeadersAllowed(accessControlRequestHeaders)) {\n+      if(LOG.isDebugEnabled()) {\n+        LOG.debug(\"Access control headers \u0027\" + accessControlRequestHeaders +\n+            \"\u0027 not allowed. Returning\");\n+      }\n       return;\n     }\n \n+    if(LOG.isDebugEnabled()) {\n+      LOG.debug(\"Completed cross origin filter checks. Populating \" +\n+          \"HttpServletResponse\");\n+    }\n     res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, originsList);\n     res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n     res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n     res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n     res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n\n    String originsList \u003d encodeHeader(req.getHeader(ORIGIN));\n    if (!isCrossOrigin(originsList)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Header origin is null. Returning\");\n      }\n      return;\n    }\n\n    if (!areOriginsAllowed(originsList)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Header origins \u0027\" + originsList + \"\u0027 not allowed. Returning\");\n      }\n      return;\n    }\n\n    String accessControlRequestMethod \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n    if (!isMethodAllowed(accessControlRequestMethod)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Access control method \u0027\" + accessControlRequestMethod +\n            \"\u0027 not allowed. Returning\");\n      }\n      return;\n    }\n\n    String accessControlRequestHeaders \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n    if (!areHeadersAllowed(accessControlRequestHeaders)) {\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(\"Access control headers \u0027\" + accessControlRequestHeaders +\n            \"\u0027 not allowed. Returning\");\n      }\n      return;\n    }\n\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"Completed cross origin filter checks. Populating \" +\n          \"HttpServletResponse\");\n    }\n    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, originsList);\n    res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n    res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n    res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n    res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "98588cf044d9908ecf767257c09a52cf17aa2ec2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2528. Relaxed http response split vulnerability protection for the origins header and made it accept multiple origins in CrossOriginFilter. Contributed by Jonathan Eagles.\n",
      "commitDate": "12/09/14 9:33 PM",
      "commitName": "98588cf044d9908ecf767257c09a52cf17aa2ec2",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "12/09/14 1:35 PM",
      "commitNameOld": "54e5794806bd856da0277510efe63656eed23146",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 0.33,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n \n-    String origin \u003d encodeHeader(req.getHeader(ORIGIN));\n-    if (!isCrossOrigin(origin)) {\n+    String originsList \u003d encodeHeader(req.getHeader(ORIGIN));\n+    if (!isCrossOrigin(originsList)) {\n       return;\n     }\n \n-    if (!isOriginAllowed(origin)) {\n+    if (!areOriginsAllowed(originsList)) {\n       return;\n     }\n \n     String accessControlRequestMethod \u003d\n         req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n     if (!isMethodAllowed(accessControlRequestMethod)) {\n       return;\n     }\n \n     String accessControlRequestHeaders \u003d\n         req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n     if (!areHeadersAllowed(accessControlRequestHeaders)) {\n       return;\n     }\n \n-    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin);\n+    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, originsList);\n     res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n     res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n     res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n     res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n\n    String originsList \u003d encodeHeader(req.getHeader(ORIGIN));\n    if (!isCrossOrigin(originsList)) {\n      return;\n    }\n\n    if (!areOriginsAllowed(originsList)) {\n      return;\n    }\n\n    String accessControlRequestMethod \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n    if (!isMethodAllowed(accessControlRequestMethod)) {\n      return;\n    }\n\n    String accessControlRequestHeaders \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n    if (!areHeadersAllowed(accessControlRequestHeaders)) {\n      return;\n    }\n\n    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, originsList);\n    res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n    res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n    res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n    res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "41aa4badf8270a8e7d4321809fe8b8a34db98968": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2277. Added cross-origin support for the timeline server web services. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617832 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/08/14 1:29 PM",
      "commitName": "41aa4badf8270a8e7d4321809fe8b8a34db98968",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,29 @@\n+  private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n+\n+    String origin \u003d encodeHeader(req.getHeader(ORIGIN));\n+    if (!isCrossOrigin(origin)) {\n+      return;\n+    }\n+\n+    if (!isOriginAllowed(origin)) {\n+      return;\n+    }\n+\n+    String accessControlRequestMethod \u003d\n+        req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n+    if (!isMethodAllowed(accessControlRequestMethod)) {\n+      return;\n+    }\n+\n+    String accessControlRequestHeaders \u003d\n+        req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n+    if (!areHeadersAllowed(accessControlRequestHeaders)) {\n+      return;\n+    }\n+\n+    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin);\n+    res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n+    res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n+    res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n+    res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) {\n\n    String origin \u003d encodeHeader(req.getHeader(ORIGIN));\n    if (!isCrossOrigin(origin)) {\n      return;\n    }\n\n    if (!isOriginAllowed(origin)) {\n      return;\n    }\n\n    String accessControlRequestMethod \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_METHOD);\n    if (!isMethodAllowed(accessControlRequestMethod)) {\n      return;\n    }\n\n    String accessControlRequestHeaders \u003d\n        req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS);\n    if (!areHeadersAllowed(accessControlRequestHeaders)) {\n      return;\n    }\n\n    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin);\n    res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString());\n    res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader());\n    res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader());\n    res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java"
    }
  }
}