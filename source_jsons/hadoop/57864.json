{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebAppUtils.java",
  "functionName": "loadSslConfiguration",
  "functionId": "loadSslConfiguration___builder-HttpServer2.Builder__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
  "functionStartLine": 461,
  "functionEndLine": 482,
  "numCommitsSeen": 52,
  "timeTaken": 2471,
  "changeHistory": [
    "1769b12a773dc6c83f13663a77da33fa78878730",
    "a2fdfff02daef85b651eda31e99868986aab5b28",
    "0c9b8f2d7ffa3e7c36bc317ff3facb992f7a154c"
  ],
  "changeHistoryShort": {
    "1769b12a773dc6c83f13663a77da33fa78878730": "Ymultichange(Yparameterchange,Ybodychange)",
    "a2fdfff02daef85b651eda31e99868986aab5b28": "Ybodychange",
    "0c9b8f2d7ffa3e7c36bc317ff3facb992f7a154c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1769b12a773dc6c83f13663a77da33fa78878730": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6457. Allow custom SSL configuration to be supplied in WebApps. (Sanjay M Pujare via Haibo Chen)\n",
      "commitDate": "08/05/17 3:46 PM",
      "commitName": "1769b12a773dc6c83f13663a77da33fa78878730",
      "commitAuthor": "Haibo Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6457. Allow custom SSL configuration to be supplied in WebApps. (Sanjay M Pujare via Haibo Chen)\n",
          "commitDate": "08/05/17 3:46 PM",
          "commitName": "1769b12a773dc6c83f13663a77da33fa78878730",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "03/03/17 3:24 PM",
          "commitNameOld": "279d187f723d01658ef8698a29263652e2a05618",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 65.97,
          "commitsBetweenForRepo": 373,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n   public static HttpServer2.Builder loadSslConfiguration(\n-      HttpServer2.Builder builder, Configuration sslConf) {\n-    if (sslConf \u003d\u003d null) {\n-      sslConf \u003d new Configuration(false);\n+      HttpServer2.Builder builder, Configuration conf) {\n+\n+    Configuration sslConf \u003d new Configuration(false);\n+\n+    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n+    if (conf !\u003d null) {\n+      sslConf.addResource(conf);\n     }\n     boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n-    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n-\n     return builder\n         .needsClientAuth(needsClientAuth)\n         .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n         .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n             getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n             sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n         .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n             getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n             sslConf.get(\"ssl.server.truststore.type\", \"jks\"))\n         .excludeCiphers(\n             sslConf.get(\"ssl.server.exclude.cipher.list\"));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HttpServer2.Builder loadSslConfiguration(\n      HttpServer2.Builder builder, Configuration conf) {\n\n    Configuration sslConf \u003d new Configuration(false);\n\n    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n    if (conf !\u003d null) {\n      sslConf.addResource(conf);\n    }\n    boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n    return builder\n        .needsClientAuth(needsClientAuth)\n        .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n            getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n            getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.truststore.type\", \"jks\"))\n        .excludeCiphers(\n            sslConf.get(\"ssl.server.exclude.cipher.list\"));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
          "extendedDetails": {
            "oldValue": "[builder-HttpServer2.Builder, sslConf-Configuration]",
            "newValue": "[builder-HttpServer2.Builder, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6457. Allow custom SSL configuration to be supplied in WebApps. (Sanjay M Pujare via Haibo Chen)\n",
          "commitDate": "08/05/17 3:46 PM",
          "commitName": "1769b12a773dc6c83f13663a77da33fa78878730",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "03/03/17 3:24 PM",
          "commitNameOld": "279d187f723d01658ef8698a29263652e2a05618",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 65.97,
          "commitsBetweenForRepo": 373,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n   public static HttpServer2.Builder loadSslConfiguration(\n-      HttpServer2.Builder builder, Configuration sslConf) {\n-    if (sslConf \u003d\u003d null) {\n-      sslConf \u003d new Configuration(false);\n+      HttpServer2.Builder builder, Configuration conf) {\n+\n+    Configuration sslConf \u003d new Configuration(false);\n+\n+    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n+    if (conf !\u003d null) {\n+      sslConf.addResource(conf);\n     }\n     boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n-    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n-\n     return builder\n         .needsClientAuth(needsClientAuth)\n         .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n         .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n             getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n             sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n         .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n             getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n             sslConf.get(\"ssl.server.truststore.type\", \"jks\"))\n         .excludeCiphers(\n             sslConf.get(\"ssl.server.exclude.cipher.list\"));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HttpServer2.Builder loadSslConfiguration(\n      HttpServer2.Builder builder, Configuration conf) {\n\n    Configuration sslConf \u003d new Configuration(false);\n\n    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n    if (conf !\u003d null) {\n      sslConf.addResource(conf);\n    }\n    boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n    return builder\n        .needsClientAuth(needsClientAuth)\n        .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n            getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n            getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.truststore.type\", \"jks\"))\n        .excludeCiphers(\n            sslConf.get(\"ssl.server.exclude.cipher.list\"));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "a2fdfff02daef85b651eda31e99868986aab5b28": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12668. Support excluding weak Ciphers in HttpServer2 through ssl-server.conf. Contributed by Vijay Singh.\n\nChange-Id: Ie46a5427d29188935427f67e55203c19fcd83335\n",
      "commitDate": "22/02/16 2:13 PM",
      "commitName": "a2fdfff02daef85b651eda31e99868986aab5b28",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "18/03/15 4:30 PM",
      "commitNameOld": "20b49224eb90c796f042ac4251508f3979fd4787",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 340.95,
      "commitsBetweenForRepo": 2668,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   public static HttpServer2.Builder loadSslConfiguration(\n       HttpServer2.Builder builder, Configuration sslConf) {\n     if (sslConf \u003d\u003d null) {\n       sslConf \u003d new Configuration(false);\n     }\n     boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n     sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n \n     return builder\n         .needsClientAuth(needsClientAuth)\n         .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n         .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n             getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n             sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n         .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n             getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n-            sslConf.get(\"ssl.server.truststore.type\", \"jks\"));\n+            sslConf.get(\"ssl.server.truststore.type\", \"jks\"))\n+        .excludeCiphers(\n+            sslConf.get(\"ssl.server.exclude.cipher.list\"));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpServer2.Builder loadSslConfiguration(\n      HttpServer2.Builder builder, Configuration sslConf) {\n    if (sslConf \u003d\u003d null) {\n      sslConf \u003d new Configuration(false);\n    }\n    boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n\n    return builder\n        .needsClientAuth(needsClientAuth)\n        .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n            getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n            getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.truststore.type\", \"jks\"))\n        .excludeCiphers(\n            sslConf.get(\"ssl.server.exclude.cipher.list\"));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
      "extendedDetails": {}
    },
    "0c9b8f2d7ffa3e7c36bc317ff3facb992f7a154c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2373. Changed WebAppUtils to use Configuration#getPassword for accessing SSL passwords. Contributed by Larry McCay\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617555 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 11:29 AM",
      "commitName": "0c9b8f2d7ffa3e7c36bc317ff3facb992f7a154c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,18 @@\n+  public static HttpServer2.Builder loadSslConfiguration(\n+      HttpServer2.Builder builder, Configuration sslConf) {\n+    if (sslConf \u003d\u003d null) {\n+      sslConf \u003d new Configuration(false);\n+    }\n+    boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n+    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n+\n+    return builder\n+        .needsClientAuth(needsClientAuth)\n+        .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n+        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n+            getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n+            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n+        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n+            getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n+            sslConf.get(\"ssl.server.truststore.type\", \"jks\"));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpServer2.Builder loadSslConfiguration(\n      HttpServer2.Builder builder, Configuration sslConf) {\n    if (sslConf \u003d\u003d null) {\n      sslConf \u003d new Configuration(false);\n    }\n    boolean needsClientAuth \u003d YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;\n    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);\n\n    return builder\n        .needsClientAuth(needsClientAuth)\n        .keyPassword(getPassword(sslConf, WEB_APP_KEY_PASSWORD_KEY))\n        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n            getPassword(sslConf, WEB_APP_KEYSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n            getPassword(sslConf, WEB_APP_TRUSTSTORE_PASSWORD_KEY),\n            sslConf.get(\"ssl.server.truststore.type\", \"jks\"));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java"
    }
  }
}