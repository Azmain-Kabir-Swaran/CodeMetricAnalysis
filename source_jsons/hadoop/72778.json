{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LoadBalancingKMSClientProvider.java",
  "functionName": "rollNewVersion",
  "functionId": "rollNewVersion___name-String(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
  "functionStartLine": 521,
  "functionEndLine": 539,
  "numCommitsSeen": 17,
  "timeTaken": 1831,
  "changeHistory": [
    "edeb2a356ad671d962764c6e2aee9f9e7d6f394c",
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
    "bca31fe276ccf7d02b13f25d43c81cca0b0b905b",
    "71385f9b70e22618db3f3d2b2c6dca3b1e82c317"
  ],
  "changeHistoryShort": {
    "edeb2a356ad671d962764c6e2aee9f9e7d6f394c": "Ybodychange",
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": "Ybodychange",
    "bca31fe276ccf7d02b13f25d43c81cca0b0b905b": "Ybodychange",
    "71385f9b70e22618db3f3d2b2c6dca3b1e82c317": "Yintroduced"
  },
  "changeHistoryDetails": {
    "edeb2a356ad671d962764c6e2aee9f9e7d6f394c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15655. Enhance KMS client retry behavior. Contributed by Kitti Nanasi.\n",
      "commitDate": "16/08/18 10:42 PM",
      "commitName": "edeb2a356ad671d962764c6e2aee9f9e7d6f394c",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "24/07/18 9:45 PM",
      "commitNameOld": "81d59506e539673edde12e19c0df5c2edd9d02ad",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 23.04,
      "commitsBetweenForRepo": 220,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public KeyVersion rollNewVersion(final String name)\n       throws NoSuchAlgorithmException, IOException {\n     try {\n       final KeyVersion newVersion \u003d doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n         @Override\n         public KeyVersion call(KMSClientProvider provider) throws IOException,\n             NoSuchAlgorithmException {\n           return provider.rollNewVersion(name);\n         }\n-      }, nextIdx());\n+      }, nextIdx(), false);\n       invalidateCache(name);\n       return newVersion;\n     } catch (WrapperException e) {\n       if (e.getCause() instanceof GeneralSecurityException) {\n         throw (NoSuchAlgorithmException) e.getCause();\n       }\n       throw new IOException(e.getCause());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(final String name)\n      throws NoSuchAlgorithmException, IOException {\n    try {\n      final KeyVersion newVersion \u003d doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n        @Override\n        public KeyVersion call(KMSClientProvider provider) throws IOException,\n            NoSuchAlgorithmException {\n          return provider.rollNewVersion(name);\n        }\n      }, nextIdx(), false);\n      invalidateCache(name);\n      return newVersion;\n    } catch (WrapperException e) {\n      if (e.getCause() instanceof GeneralSecurityException) {\n        throw (NoSuchAlgorithmException) e.getCause();\n      }\n      throw new IOException(e.getCause());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
      "extendedDetails": {}
    },
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
      "commitDate": "07/02/17 8:36 PM",
      "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "06/12/16 12:04 PM",
      "commitNameOld": "79d90b810c14d5e3abab75235f587663834ce36c",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 63.36,
      "commitsBetweenForRepo": 294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   public KeyVersion rollNewVersion(final String name)\n       throws NoSuchAlgorithmException, IOException {\n     try {\n-      return doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n+      final KeyVersion newVersion \u003d doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n         @Override\n         public KeyVersion call(KMSClientProvider provider) throws IOException,\n-        NoSuchAlgorithmException {\n+            NoSuchAlgorithmException {\n           return provider.rollNewVersion(name);\n         }\n       }, nextIdx());\n+      invalidateCache(name);\n+      return newVersion;\n     } catch (WrapperException e) {\n       if (e.getCause() instanceof GeneralSecurityException) {\n         throw (NoSuchAlgorithmException) e.getCause();\n       }\n       throw new IOException(e.getCause());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(final String name)\n      throws NoSuchAlgorithmException, IOException {\n    try {\n      final KeyVersion newVersion \u003d doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n        @Override\n        public KeyVersion call(KMSClientProvider provider) throws IOException,\n            NoSuchAlgorithmException {\n          return provider.rollNewVersion(name);\n        }\n      }, nextIdx());\n      invalidateCache(name);\n      return newVersion;\n    } catch (WrapperException e) {\n      if (e.getCause() instanceof GeneralSecurityException) {\n        throw (NoSuchAlgorithmException) e.getCause();\n      }\n      throw new IOException(e.getCause());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
      "extendedDetails": {}
    },
    "bca31fe276ccf7d02b13f25d43c81cca0b0b905b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13132. Handle ClassCastException on AuthenticationException in LoadBalancingKMSClientProvider. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "31/05/16 9:35 AM",
      "commitName": "bca31fe276ccf7d02b13f25d43c81cca0b0b905b",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "25/02/15 9:16 PM",
      "commitNameOld": "71385f9b70e22618db3f3d2b2c6dca3b1e82c317",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 460.47,
      "commitsBetweenForRepo": 3464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n   public KeyVersion rollNewVersion(final String name)\n       throws NoSuchAlgorithmException, IOException {\n     try {\n       return doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n         @Override\n         public KeyVersion call(KMSClientProvider provider) throws IOException,\n         NoSuchAlgorithmException {\n           return provider.rollNewVersion(name);\n         }\n       }, nextIdx());\n     } catch (WrapperException e) {\n-      throw (NoSuchAlgorithmException)e.getCause();\n+      if (e.getCause() instanceof GeneralSecurityException) {\n+        throw (NoSuchAlgorithmException) e.getCause();\n+      }\n+      throw new IOException(e.getCause());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(final String name)\n      throws NoSuchAlgorithmException, IOException {\n    try {\n      return doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n        @Override\n        public KeyVersion call(KMSClientProvider provider) throws IOException,\n        NoSuchAlgorithmException {\n          return provider.rollNewVersion(name);\n        }\n      }, nextIdx());\n    } catch (WrapperException e) {\n      if (e.getCause() instanceof GeneralSecurityException) {\n        throw (NoSuchAlgorithmException) e.getCause();\n      }\n      throw new IOException(e.getCause());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
      "extendedDetails": {}
    },
    "71385f9b70e22618db3f3d2b2c6dca3b1e82c317": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11620. Add support for load balancing across a group of KMS for HA. Contributed by Arun Suresh.\n",
      "commitDate": "25/02/15 9:16 PM",
      "commitName": "71385f9b70e22618db3f3d2b2c6dca3b1e82c317",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,14 @@\n+  public KeyVersion rollNewVersion(final String name)\n+      throws NoSuchAlgorithmException, IOException {\n+    try {\n+      return doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n+        @Override\n+        public KeyVersion call(KMSClientProvider provider) throws IOException,\n+        NoSuchAlgorithmException {\n+          return provider.rollNewVersion(name);\n+        }\n+      }, nextIdx());\n+    } catch (WrapperException e) {\n+      throw (NoSuchAlgorithmException)e.getCause();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(final String name)\n      throws NoSuchAlgorithmException, IOException {\n    try {\n      return doOp(new ProviderCallable\u003cKeyVersion\u003e() {\n        @Override\n        public KeyVersion call(KMSClientProvider provider) throws IOException,\n        NoSuchAlgorithmException {\n          return provider.rollNewVersion(name);\n        }\n      }, nextIdx());\n    } catch (WrapperException e) {\n      throw (NoSuchAlgorithmException)e.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java"
    }
  }
}