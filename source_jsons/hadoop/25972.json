{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NavBlock.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
  "functionStartLine": 39,
  "functionEndLine": 87,
  "numCommitsSeen": 14,
  "timeTaken": 7644,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "342efa110af9989829b8a8caa699658a2ba01607",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
    "397c261433fdc3748050905f748d4fc7f5474b46",
    "4bca22005f48f426b9bc7cf36d435ead470a2590",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "71886657f89f64b289c6f426bd9f557ed0e53590",
    "5f6adcf396b78934d7da2bba0d052038ff962f26",
    "b7660f2bc9ba031dde5e8e82c1c2573a2912d114",
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "342efa110af9989829b8a8caa699658a2ba01607": "Ybodychange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ybodychange",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": "Ybodychange",
    "397c261433fdc3748050905f748d4fc7f5474b46": "Ybodychange",
    "4bca22005f48f426b9bc7cf36d435ead470a2590": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "71886657f89f64b289c6f426bd9f557ed0e53590": "Ybodychange",
    "5f6adcf396b78934d7da2bba0d052038ff962f26": "Ybodychange",
    "b7660f2bc9ba031dde5e8e82c1c2573a2912d114": "Ybodychange",
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "29/01/15 9:49 AM",
      "commitNameOld": "342efa110af9989829b8a8caa699658a2ba01607",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 910.27,
      "commitsBetweenForRepo": 6416,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n-          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n-          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n-          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n+          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\").__().\n+          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\").__().\n+          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\").__().__().\n         h3(\"Application\").\n         ul().\n-          li().a(url(\"app/info\"), \"About\")._().\n-          li().a(url(\"app\"), \"Jobs\")._()._();\n+          li().a(url(\"app/info\"), \"About\").__().\n+          li().a(url(\"app\"), \"Jobs\").__().__();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n       AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n       String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n           + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n-          li().a(url(\"job\", jobid), \"Overview\")._().\n-          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n-          li().a(url(\"conf\", jobid), \"Configuration\")._().\n-          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n-          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n+          li().a(url(\"job\", jobid), \"Overview\").__().\n+          li().a(url(\"jobcounters\", jobid), \"Counters\").__().\n+          li().a(url(\"conf\", jobid), \"Configuration\").__().\n+          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\").__().\n+          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\").__().\n           li().a(\".logslink\", url(MRWebAppUtil.getYARNWebappScheme(),\n               nodeHttpAddress, \"node\",\n               \"containerlogs\", thisAmInfo.getContainerId().toString(), \n               app.getJob().getUserName()), \n-              \"AM Logs\")._()._();\n+              \"AM Logs\").__().__();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n-            li().a(url(\"task\", taskid), \"Task Overview\")._().\n-            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n+            li().a(url(\"task\", taskid), \"Task Overview\").__().\n+            li().a(url(\"taskcounters\", taskid), \"Counters\").__().__();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n-        li().a(\"/conf\", \"Configuration\")._().\n-        li().a(\"/logs\", \"Local logs\")._().\n-        li().a(\"/stacks\", \"Server stacks\")._().\n-        li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._()._()._();\n+        li().a(\"/conf\", \"Configuration\").__().\n+        li().a(\"/logs\", \"Local logs\").__().\n+        li().a(\"/stacks\", \"Server stacks\").__().\n+        li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__().__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\").__().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\").__().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\").__().__().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\").__().\n          li().a(url(\"app\"), \"Jobs\").__().__();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\").__().\n          li().a(url(\"jobcounters\", jobid), \"Counters\").__().\n          li().a(url(\"conf\", jobid), \"Configuration\").__().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\").__().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\").__().\n          li().a(\".logslink\", url(MRWebAppUtil.getYARNWebappScheme(),\n              nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\").__().__();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\").__().\n            li().a(url(\"taskcounters\", taskid), \"Counters\").__().__();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\").__().\n        li().a(\"/logs\", \"Local logs\").__().\n        li().a(\"/stacks\", \"Server stacks\").__().\n        li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__().__().__();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "342efa110af9989829b8a8caa699658a2ba01607": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9907. Webapp http://hostname:port/metrics link is not working. (aajisaka)\n",
      "commitDate": "29/01/15 9:49 AM",
      "commitName": "342efa110af9989829b8a8caa699658a2ba01607",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "01/10/13 3:52 PM",
      "commitNameOld": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 484.79,
      "commitsBetweenForRepo": 3640,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n       AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n       String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n           + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n           li().a(\".logslink\", url(MRWebAppUtil.getYARNWebappScheme(),\n               nodeHttpAddress, \"node\",\n               \"containerlogs\", thisAmInfo.getContainerId().toString(), \n               app.getJob().getUserName()), \n               \"AM Logs\")._()._();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n             li().a(url(\"task\", taskid), \"Task Overview\")._().\n             li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n-        li().a(\"/metrics\", \"Server metrics\")._()._()._();\n+        li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n          li().a(\".logslink\", url(MRWebAppUtil.getYARNWebappScheme(),\n              nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/09/13 4:35 PM",
      "commitNameOld": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.97,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n       AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n       String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n           + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n-          li().a(\".logslink\", url(WebAppUtil.getSchemePrefix(),\n+          li().a(\".logslink\", url(MRWebAppUtil.getYARNWebappScheme(),\n               nodeHttpAddress, \"node\",\n               \"containerlogs\", thisAmInfo.getContainerId().toString(), \n               app.getJob().getUserName()), \n               \"AM Logs\")._()._();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n             li().a(url(\"task\", taskid), \"Task Overview\")._().\n             li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n          li().a(\".logslink\", url(MRWebAppUtil.getYARNWebappScheme(),\n              nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1203. Changed YARN web-app proxy to handle http and https URLs from AM registration and finish correctly. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5515. Fixed MR AM\u0027s webapp to depend on a new config mapreduce.ssl.enabled to enable https and disabling it by default as MR AM needs\nto set up its own certificates etc and not depend on clusters\u0027. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 4:35 PM",
      "commitName": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/11/12 11:22 AM",
      "commitNameOld": "397c261433fdc3748050905f748d4fc7f5474b46",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 309.18,
      "commitsBetweenForRepo": 1729,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n       AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n       String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n           + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n-          li().a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n+          li().a(\".logslink\", url(WebAppUtil.getSchemePrefix(),\n               nodeHttpAddress, \"node\",\n               \"containerlogs\", thisAmInfo.getContainerId().toString(), \n               app.getJob().getUserName()), \n               \"AM Logs\")._()._();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n             li().a(url(\"task\", taskid), \"Task Overview\")._().\n             li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n          li().a(\".logslink\", url(WebAppUtil.getSchemePrefix(),\n              nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "397c261433fdc3748050905f748d4fc7f5474b46": {
      "type": "Ybodychange",
      "commitMessage": "YARN-216. Remove jquery theming support. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1409313 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/12 11:22 AM",
      "commitName": "397c261433fdc3748050905f748d4fc7f5474b46",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "09/08/12 3:52 PM",
      "commitNameOld": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 96.85,
      "commitsBetweenForRepo": 592,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,49 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n       AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n       String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n           + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n           li().a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n               nodeHttpAddress, \"node\",\n               \"containerlogs\", thisAmInfo.getContainerId().toString(), \n               app.getJob().getUserName()), \n               \"AM Logs\")._()._();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n             li().a(url(\"task\", taskid), \"Task Overview\")._().\n             li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n-        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n-    div(\"#themeswitcher\")._();\n+        li().a(\"/metrics\", \"Server metrics\")._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n          li().a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n              nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "4bca22005f48f426b9bc7cf36d435ead470a2590": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8681. add support for HTTPS to the web UIs. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/12 3:52 PM",
      "commitName": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "30/10/11 11:42 PM",
      "commitNameOld": "47a381e306877750b5a3ce5d76e0a5ff652ec188",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 283.67,
      "commitsBetweenForRepo": 1823,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,50 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n       AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n       String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n           + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n-          li().a(\".logslink\", url(\"http://\", nodeHttpAddress, \"node\",\n+          li().a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n+              nodeHttpAddress, \"node\",\n               \"containerlogs\", thisAmInfo.getContainerId().toString(), \n               app.getJob().getUserName()), \n               \"AM Logs\")._()._();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n             li().a(url(\"task\", taskid), \"Task Overview\")._().\n             li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._().\n     div(\"#themeswitcher\")._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n          li().a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n              nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/09/11 1:08 AM",
      "commitNameOld": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 28.94,
      "commitsBetweenForRepo": 253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,49 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n+      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n+      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n+      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n+          + thisAmInfo.getNodeManagerHttpPort();\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n-          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n+          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n+          li().a(\".logslink\", url(\"http://\", nodeHttpAddress, \"node\",\n+              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n+              app.getJob().getUserName()), \n+              \"AM Logs\")._()._();\n       if (app.getTask() !\u003d null) {\n         String taskid \u003d MRApps.toString(app.getTask().getID());\n         nav.\n           h3(\"Task\").\n           ul().\n             li().a(url(\"task\", taskid), \"Task Overview\")._().\n             li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n       }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._().\n     div(\"#themeswitcher\")._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      List\u003cAMInfo\u003e amInfos \u003d app.getJob().getAMInfos();\n      AMInfo thisAmInfo \u003d amInfos.get(amInfos.size()-1);\n      String nodeHttpAddress \u003d thisAmInfo.getNodeManagerHost() + \":\" \n          + thisAmInfo.getNodeManagerHttpPort();\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._().\n          li().a(\".logslink\", url(\"http://\", nodeHttpAddress, \"node\",\n              \"containerlogs\", thisAmInfo.getContainerId().toString(), \n              app.getJob().getUserName()), \n              \"AM Logs\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "71886657f89f64b289c6f426bd9f557ed0e53590": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3001. Added task-specific counters to AppMaster and JobHistory web-UIs. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 1:08 AM",
      "commitName": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/09/11 6:23 PM",
      "commitNameOld": "5f6adcf396b78934d7da2bba0d052038ff962f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.28,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,41 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n           li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n+      if (app.getTask() !\u003d null) {\n+        String taskid \u003d MRApps.toString(app.getTask().getID());\n+        nav.\n+          h3(\"Task\").\n+          ul().\n+            li().a(url(\"task\", taskid), \"Task Overview\")._().\n+            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n+      }\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._().\n     div(\"#themeswitcher\")._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n      if (app.getTask() !\u003d null) {\n        String taskid \u003d MRApps.toString(app.getTask().getID());\n        nav.\n          h3(\"Task\").\n          ul().\n            li().a(url(\"task\", taskid), \"Task Overview\")._().\n            li().a(url(\"taskcounters\", taskid), \"Counters\")._()._();\n      }\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "5f6adcf396b78934d7da2bba0d052038ff962f26": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3021. Change base urls for RM web-ui. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176681 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 6:23 PM",
      "commitName": "5f6adcf396b78934d7da2bba0d052038ff962f26",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "19/09/11 10:01 AM",
      "commitNameOld": "b7660f2bc9ba031dde5e8e82c1c2573a2912d114",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.35,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n-          li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n-          li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n-          li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n+          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n+          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n+          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._().\n     div(\"#themeswitcher\")._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, \"cluster\", \"cluster\"), \"About\")._().\n          li().a(url(rmweb, \"cluster\", \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, \"cluster\", \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "b7660f2bc9ba031dde5e8e82c1c2573a2912d114": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2726. Added job-file to the AM and JobHistoryServer web interfaces. Contributed by Jeffrey Naisbitt.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1172704 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/11 10:01 AM",
      "commitName": "b7660f2bc9ba031dde5e8e82c1c2573a2912d114",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 1:59 PM",
      "commitNameOld": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 10.83,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n           li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n     if (app.getJob() !\u003d null) {\n       String jobid \u003d MRApps.toString(app.getJob().getID());\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n+          li().a(url(\"conf\", jobid), \"Configuration\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._().\n     div(\"#themeswitcher\")._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n          li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"conf\", jobid), \"Configuration\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2677. Fixed 404 for some links from HistoryServer. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166901 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 1:59 PM",
      "commitName": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 14.86,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   @Override protected void render(Block html) {\n     String rmweb \u003d $(RM_WEB);\n     DIV\u003cHamlet\u003e nav \u003d html.\n       div(\"#nav\").\n         h3(\"Cluster\").\n         ul().\n           li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n           li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n           li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n         h3(\"Application\").\n         ul().\n           li().a(url(\"app/info\"), \"About\")._().\n           li().a(url(\"app\"), \"Jobs\")._()._();\n-    if (app.job !\u003d null) {\n-      String jobid \u003d MRApps.toString(app.job.getID());\n+    if (app.getJob() !\u003d null) {\n+      String jobid \u003d MRApps.toString(app.getJob().getID());\n       nav.\n         h3(\"Job\").\n         ul().\n           li().a(url(\"job\", jobid), \"Overview\")._().\n           li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n           li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n           li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n     }\n     nav.\n       h3(\"Tools\").\n       ul().\n         li().a(\"/conf\", \"Configuration\")._().\n         li().a(\"/logs\", \"Local logs\")._().\n         li().a(\"/stacks\", \"Server stacks\")._().\n         li().a(\"/metrics\", \"Server metrics\")._()._()._().\n     div(\"#themeswitcher\")._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n          li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.getJob() !\u003d null) {\n      String jobid \u003d MRApps.toString(app.getJob().getID());\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n          li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.job !\u003d null) {\n      String jobid \u003d MRApps.toString(app.job.getID());\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,32 @@\n+  @Override protected void render(Block html) {\n+    String rmweb \u003d $(RM_WEB);\n+    DIV\u003cHamlet\u003e nav \u003d html.\n+      div(\"#nav\").\n+        h3(\"Cluster\").\n+        ul().\n+          li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n+          li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n+          li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n+        h3(\"Application\").\n+        ul().\n+          li().a(url(\"app/info\"), \"About\")._().\n+          li().a(url(\"app\"), \"Jobs\")._()._();\n+    if (app.job !\u003d null) {\n+      String jobid \u003d MRApps.toString(app.job.getID());\n+      nav.\n+        h3(\"Job\").\n+        ul().\n+          li().a(url(\"job\", jobid), \"Overview\")._().\n+          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n+          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n+          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n+    }\n+    nav.\n+      h3(\"Tools\").\n+      ul().\n+        li().a(\"/conf\", \"Configuration\")._().\n+        li().a(\"/logs\", \"Local logs\")._().\n+        li().a(\"/stacks\", \"Server stacks\")._().\n+        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n+    div(\"#themeswitcher\")._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    String rmweb \u003d $(RM_WEB);\n    DIV\u003cHamlet\u003e nav \u003d html.\n      div(\"#nav\").\n        h3(\"Cluster\").\n        ul().\n          li().a(url(rmweb, prefix(), \"cluster\"), \"About\")._().\n          li().a(url(rmweb, prefix(), \"apps\"), \"Applications\")._().\n          li().a(url(rmweb, prefix(), \"scheduler\"), \"Scheduler\")._()._().\n        h3(\"Application\").\n        ul().\n          li().a(url(\"app/info\"), \"About\")._().\n          li().a(url(\"app\"), \"Jobs\")._()._();\n    if (app.job !\u003d null) {\n      String jobid \u003d MRApps.toString(app.job.getID());\n      nav.\n        h3(\"Job\").\n        ul().\n          li().a(url(\"job\", jobid), \"Overview\")._().\n          li().a(url(\"jobcounters\", jobid), \"Counters\")._().\n          li().a(url(\"tasks\", jobid, \"m\"), \"Map tasks\")._().\n          li().a(url(\"tasks\", jobid, \"r\"), \"Reduce tasks\")._()._();\n    }\n    nav.\n      h3(\"Tools\").\n      ul().\n        li().a(\"/conf\", \"Configuration\")._().\n        li().a(\"/logs\", \"Local logs\")._().\n        li().a(\"/stacks\", \"Server stacks\")._().\n        li().a(\"/metrics\", \"Server metrics\")._()._()._().\n    div(\"#themeswitcher\")._();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/NavBlock.java"
    }
  }
}