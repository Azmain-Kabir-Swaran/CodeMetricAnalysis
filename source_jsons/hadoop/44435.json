{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "setContainerResources",
  "functionId": "setContainerResources___profiles-Map__String,Resource____resourceTypes-List__ResourceTypeInfo__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
  "functionStartLine": 1316,
  "functionEndLine": 1333,
  "numCommitsSeen": 126,
  "timeTaken": 3465,
  "changeHistory": [
    "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd"
  ],
  "changeHistoryShort": {
    "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14": "Ymultichange(Yparameterchange,Ybodychange)",
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7242. Support to specify values of different resource types in DistributedShell for easier testing. Contributed by Gergely Novák.\n",
      "commitDate": "07/01/18 10:29 PM",
      "commitName": "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7242. Support to specify values of different resource types in DistributedShell for easier testing. Contributed by Gergely Novák.\n",
          "commitDate": "07/01/18 10:29 PM",
          "commitName": "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
          "commitAuthor": "Sunil G",
          "commitDateOld": "17/12/17 6:07 PM",
          "commitNameOld": "928964102029e96406f5482e8900802f38164501",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 21.18,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-  private void setContainerResources(long memory, int vcores,\n-      Map\u003cString, Resource\u003e profiles) throws IllegalArgumentException {\n-    if (memory \u003c -1 || memory \u003d\u003d 0) {\n-      throw new IllegalArgumentException(\n-          \"Container memory \u0027\" + memory + \"\u0027 has to be greated than 0\");\n+  private void setContainerResources(Map\u003cString, Resource\u003e profiles,\n+      List\u003cResourceTypeInfo\u003e resourceTypes) throws IllegalArgumentException {\n+    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\"Container memory \u0027\" +\n+          containerMemory + \"\u0027 has to be greated than 0\");\n     }\n-    if (vcores \u003c -1 || vcores \u003d\u003d 0) {\n-      throw new IllegalArgumentException(\n-          \"Container vcores \u0027\" + vcores + \"\u0027 has to be greated than 0\");\n+    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\"Container vcores \u0027\" +\n+          containerVirtualCores + \"\u0027 has to be greated than 0\");\n     }\n+    validateResourceTypes(containerResources.keySet(), resourceTypes);\n     if (profiles \u003d\u003d null) {\n-      containerMemory \u003d memory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : memory;\n-      containerVirtualCores \u003d vcores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES : vcores;\n+      containerMemory \u003d containerMemory \u003d\u003d -1 ?\n+          DEFAULT_CONTAINER_MEMORY : containerMemory;\n+      containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n+          DEFAULT_CONTAINER_VCORES : containerVirtualCores;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setContainerResources(Map\u003cString, Resource\u003e profiles,\n      List\u003cResourceTypeInfo\u003e resourceTypes) throws IllegalArgumentException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new IllegalArgumentException(\"Container memory \u0027\" +\n          containerMemory + \"\u0027 has to be greated than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new IllegalArgumentException(\"Container vcores \u0027\" +\n          containerVirtualCores + \"\u0027 has to be greated than 0\");\n    }\n    validateResourceTypes(containerResources.keySet(), resourceTypes);\n    if (profiles \u003d\u003d null) {\n      containerMemory \u003d containerMemory \u003d\u003d -1 ?\n          DEFAULT_CONTAINER_MEMORY : containerMemory;\n      containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n          DEFAULT_CONTAINER_VCORES : containerVirtualCores;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
          "extendedDetails": {
            "oldValue": "[memory-long, vcores-int, profiles-Map\u003cString,Resource\u003e]",
            "newValue": "[profiles-Map\u003cString,Resource\u003e, resourceTypes-List\u003cResourceTypeInfo\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7242. Support to specify values of different resource types in DistributedShell for easier testing. Contributed by Gergely Novák.\n",
          "commitDate": "07/01/18 10:29 PM",
          "commitName": "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
          "commitAuthor": "Sunil G",
          "commitDateOld": "17/12/17 6:07 PM",
          "commitNameOld": "928964102029e96406f5482e8900802f38164501",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 21.18,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-  private void setContainerResources(long memory, int vcores,\n-      Map\u003cString, Resource\u003e profiles) throws IllegalArgumentException {\n-    if (memory \u003c -1 || memory \u003d\u003d 0) {\n-      throw new IllegalArgumentException(\n-          \"Container memory \u0027\" + memory + \"\u0027 has to be greated than 0\");\n+  private void setContainerResources(Map\u003cString, Resource\u003e profiles,\n+      List\u003cResourceTypeInfo\u003e resourceTypes) throws IllegalArgumentException {\n+    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\"Container memory \u0027\" +\n+          containerMemory + \"\u0027 has to be greated than 0\");\n     }\n-    if (vcores \u003c -1 || vcores \u003d\u003d 0) {\n-      throw new IllegalArgumentException(\n-          \"Container vcores \u0027\" + vcores + \"\u0027 has to be greated than 0\");\n+    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\"Container vcores \u0027\" +\n+          containerVirtualCores + \"\u0027 has to be greated than 0\");\n     }\n+    validateResourceTypes(containerResources.keySet(), resourceTypes);\n     if (profiles \u003d\u003d null) {\n-      containerMemory \u003d memory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : memory;\n-      containerVirtualCores \u003d vcores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES : vcores;\n+      containerMemory \u003d containerMemory \u003d\u003d -1 ?\n+          DEFAULT_CONTAINER_MEMORY : containerMemory;\n+      containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n+          DEFAULT_CONTAINER_VCORES : containerVirtualCores;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setContainerResources(Map\u003cString, Resource\u003e profiles,\n      List\u003cResourceTypeInfo\u003e resourceTypes) throws IllegalArgumentException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new IllegalArgumentException(\"Container memory \u0027\" +\n          containerMemory + \"\u0027 has to be greated than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new IllegalArgumentException(\"Container vcores \u0027\" +\n          containerVirtualCores + \"\u0027 has to be greated than 0\");\n    }\n    validateResourceTypes(containerResources.keySet(), resourceTypes);\n    if (profiles \u003d\u003d null) {\n      containerMemory \u003d containerMemory \u003d\u003d -1 ?\n          DEFAULT_CONTAINER_MEMORY : containerMemory;\n      containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n          DEFAULT_CONTAINER_VCORES : containerVirtualCores;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5588. [YARN-3926] Add support for resource profiles in distributed shell. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "7805deed4896e470ebd2f6bbd1ba9962947c63cd",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,15 @@\n+  private void setContainerResources(long memory, int vcores,\n+      Map\u003cString, Resource\u003e profiles) throws IllegalArgumentException {\n+    if (memory \u003c -1 || memory \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\n+          \"Container memory \u0027\" + memory + \"\u0027 has to be greated than 0\");\n+    }\n+    if (vcores \u003c -1 || vcores \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\n+          \"Container vcores \u0027\" + vcores + \"\u0027 has to be greated than 0\");\n+    }\n+    if (profiles \u003d\u003d null) {\n+      containerMemory \u003d memory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : memory;\n+      containerVirtualCores \u003d vcores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES : vcores;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setContainerResources(long memory, int vcores,\n      Map\u003cString, Resource\u003e profiles) throws IllegalArgumentException {\n    if (memory \u003c -1 || memory \u003d\u003d 0) {\n      throw new IllegalArgumentException(\n          \"Container memory \u0027\" + memory + \"\u0027 has to be greated than 0\");\n    }\n    if (vcores \u003c -1 || vcores \u003d\u003d 0) {\n      throw new IllegalArgumentException(\n          \"Container vcores \u0027\" + vcores + \"\u0027 has to be greated than 0\");\n    }\n    if (profiles \u003d\u003d null) {\n      containerMemory \u003d memory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : memory;\n      containerVirtualCores \u003d vcores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES : vcores;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java"
    }
  }
}