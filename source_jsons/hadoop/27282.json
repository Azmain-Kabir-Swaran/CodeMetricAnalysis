{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderWebServices.java",
  "functionName": "getEntities",
  "functionId": "getEntities___req-HttpServletRequest(annotations-@Context)__res-HttpServletResponse(annotations-@Context)__appId-String(annotations-@PathParam(\"appid\"))__entityType-String(annotations-@PathParam(\"entitytype\"))__userId-String(annotations-@QueryParam(\"userid\"))__flowName-String(annotations-@QueryParam(\"flowname\"))__flowRunId-String(annotations-@QueryParam(\"flowrunid\"))__limit-String(annotations-@QueryParam(\"limit\"))__createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\"))__createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\"))__relatesTo-String(annotations-@QueryParam(\"relatesto\"))__isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\"))__infofilters-String(annotations-@QueryParam(\"infofilters\"))__conffilters-String(annotations-@QueryParam(\"conffilters\"))__metricfilters-String(annotations-@QueryParam(\"metricfilters\"))__eventfilters-String(annotations-@QueryParam(\"eventfilters\"))__confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\"))__metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\"))__fields-String(annotations-@QueryParam(\"fields\"))__metricsLimit-String(annotations-@QueryParam(\"metricslimit\"))__metricsTimeStart-String(annotations-@QueryParam(\"metricstimestart\"))__metricsTimeEnd-String(annotations-@QueryParam(\"metricstimeend\"))__fromId-String(annotations-@QueryParam(\"fromid\"))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
  "functionStartLine": 491,
  "functionEndLine": 520,
  "numCommitsSeen": 147,
  "timeTaken": 6894,
  "changeHistory": [
    "70078e91e3287aad51f6ddf6acd9ed75e7c6760d",
    "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844",
    "02a9710a099fc9572122d87dd3e90c78522f5836",
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
    "089caf49fe968cf4cd3fd4f9637da89ee143991a",
    "6934b05c7117a12286fb2ba7a47f75e227cacb22",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
    "451c13b1de1e42394a4c92888192da9a9519d9ac"
  ],
  "changeHistoryShort": {
    "70078e91e3287aad51f6ddf6acd9ed75e7c6760d": "Ymultichange(Yparameterchange,Ybodychange)",
    "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844": "Ymultichange(Yparameterchange,Ybodychange)",
    "02a9710a099fc9572122d87dd3e90c78522f5836": "Ymultichange(Yparameterchange,Ybodychange)",
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b": "Ymultichange(Yparameterchange,Ybodychange)",
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": "Ymultichange(Yparameterchange,Ybodychange)",
    "6934b05c7117a12286fb2ba7a47f75e227cacb22": "Ymultichange(Yparameterchange,Ybodychange)",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ymultichange(Yparameterchange,Ybodychange)",
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "451c13b1de1e42394a4c92888192da9a9519d9ac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70078e91e3287aad51f6ddf6acd9ed75e7c6760d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4455. Support fetching metrics by time range. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "70078e91e3287aad51f6ddf6acd9ed75e7c6760d",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4455. Support fetching metrics by time range. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "70078e91e3287aad51f6ddf6acd9ed75e7c6760d",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "b87b72b40a3cd4e124d6c941276481747133895f",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,30 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields,\n       @QueryParam(\"metricslimit\") String metricsLimit,\n+      @QueryParam(\"metricstimestart\") String metricsTimeStart,\n+      @QueryParam(\"metricstimeend\") String metricsTimeEnd,\n       @QueryParam(\"fromid\") String fromId) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n         confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n-        fromId);\n+        metricsTimeStart, metricsTimeEnd, fromId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit,\n      @QueryParam(\"metricstimestart\") String metricsTimeStart,\n      @QueryParam(\"metricstimeend\") String metricsTimeEnd,\n      @QueryParam(\"fromid\") String fromId) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n        metricsTimeStart, metricsTimeEnd, fromId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\")), fromId-String(annotations-@QueryParam(\"fromid\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\")), metricsTimeStart-String(annotations-@QueryParam(\"metricstimestart\")), metricsTimeEnd-String(annotations-@QueryParam(\"metricstimeend\")), fromId-String(annotations-@QueryParam(\"fromid\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4455. Support fetching metrics by time range. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "70078e91e3287aad51f6ddf6acd9ed75e7c6760d",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "b87b72b40a3cd4e124d6c941276481747133895f",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,30 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields,\n       @QueryParam(\"metricslimit\") String metricsLimit,\n+      @QueryParam(\"metricstimestart\") String metricsTimeStart,\n+      @QueryParam(\"metricstimeend\") String metricsTimeEnd,\n       @QueryParam(\"fromid\") String fromId) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n         confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n-        fromId);\n+        metricsTimeStart, metricsTimeEnd, fromId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit,\n      @QueryParam(\"metricstimestart\") String metricsTimeStart,\n      @QueryParam(\"metricstimeend\") String metricsTimeEnd,\n      @QueryParam(\"fromid\") String fromId) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n        metricsTimeStart, metricsTimeEnd, fromId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6256. Add FROM_ID info key for timeline entities in reader response (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6256. Add FROM_ID info key for timeline entities in reader response (Rohith Sharma K S via Varun Saxena)\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "8bb26465956a37d7398818bc0919772e12953725",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,28 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields,\n       @QueryParam(\"metricslimit\") String metricsLimit,\n-      @QueryParam(\"fromidprefix\") String fromIdPrefix,\n       @QueryParam(\"fromid\") String fromId) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        confsToRetrieve, metricsToRetrieve, fields, metricsLimit, fromIdPrefix,\n+        confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n         fromId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit,\n      @QueryParam(\"fromid\") String fromId) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n        fromId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\")), fromIdPrefix-String(annotations-@QueryParam(\"fromidprefix\")), fromId-String(annotations-@QueryParam(\"fromid\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\")), fromId-String(annotations-@QueryParam(\"fromid\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6256. Add FROM_ID info key for timeline entities in reader response (Rohith Sharma K S via Varun Saxena)\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "8bb26465956a37d7398818bc0919772e12953725",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,28 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields,\n       @QueryParam(\"metricslimit\") String metricsLimit,\n-      @QueryParam(\"fromidprefix\") String fromIdPrefix,\n       @QueryParam(\"fromid\") String fromId) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        confsToRetrieve, metricsToRetrieve, fields, metricsLimit, fromIdPrefix,\n+        confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n         fromId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit,\n      @QueryParam(\"fromid\") String fromId) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit,\n        fromId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "02a9710a099fc9572122d87dd3e90c78522f5836": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5585. [Atsv2] Reader side changes for entity prefix and support for pagination via additional filters (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "02a9710a099fc9572122d87dd3e90c78522f5836",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5585. [Atsv2] Reader side changes for entity prefix and support for pagination via additional filters (Rohith Sharma K S via Varun Saxena)\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "02a9710a099fc9572122d87dd3e90c78522f5836",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "4481561e4a3433197dd8e73f38856eef84f0fd03",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,29 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields,\n-      @QueryParam(\"metricslimit\") String metricsLimit) {\n+      @QueryParam(\"metricslimit\") String metricsLimit,\n+      @QueryParam(\"fromidprefix\") String fromIdPrefix,\n+      @QueryParam(\"fromid\") String fromId) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        confsToRetrieve, metricsToRetrieve, fields, metricsLimit);\n+        confsToRetrieve, metricsToRetrieve, fields, metricsLimit, fromIdPrefix,\n+        fromId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit,\n      @QueryParam(\"fromidprefix\") String fromIdPrefix,\n      @QueryParam(\"fromid\") String fromId) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit, fromIdPrefix,\n        fromId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\")), fromIdPrefix-String(annotations-@QueryParam(\"fromidprefix\")), fromId-String(annotations-@QueryParam(\"fromid\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5585. [Atsv2] Reader side changes for entity prefix and support for pagination via additional filters (Rohith Sharma K S via Varun Saxena)\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "02a9710a099fc9572122d87dd3e90c78522f5836",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "4481561e4a3433197dd8e73f38856eef84f0fd03",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,29 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields,\n-      @QueryParam(\"metricslimit\") String metricsLimit) {\n+      @QueryParam(\"metricslimit\") String metricsLimit,\n+      @QueryParam(\"fromidprefix\") String fromIdPrefix,\n+      @QueryParam(\"fromid\") String fromId) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        confsToRetrieve, metricsToRetrieve, fields, metricsLimit);\n+        confsToRetrieve, metricsToRetrieve, fields, metricsLimit, fromIdPrefix,\n+        fromId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit,\n      @QueryParam(\"fromidprefix\") String fromIdPrefix,\n      @QueryParam(\"fromid\") String fromId) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit, fromIdPrefix,\n        fromId);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5015. entire time series is returned for YARN container system metrics (CPU and memory) (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5015. entire time series is returned for YARN container system metrics (CPU and memory) (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n-      @QueryParam(\"fields\") String fields) {\n+      @QueryParam(\"fields\") String fields,\n+      @QueryParam(\"metricslimit\") String metricsLimit) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        confsToRetrieve, metricsToRetrieve, fields);\n+        confsToRetrieve, metricsToRetrieve, fields, metricsLimit);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\")), metricsLimit-String(annotations-@QueryParam(\"metricslimit\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5015. entire time series is returned for YARN container system metrics (CPU and memory) (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n       @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n-      @QueryParam(\"fields\") String fields) {\n+      @QueryParam(\"fields\") String fields,\n+      @QueryParam(\"metricslimit\") String metricsLimit) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        confsToRetrieve, metricsToRetrieve, fields);\n+        confsToRetrieve, metricsToRetrieve, fields, metricsLimit);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields,\n      @QueryParam(\"metricslimit\") String metricsLimit) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields, metricsLimit);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n+      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n+      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        fields);\n+        confsToRetrieve, metricsToRetrieve, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), confsToRetrieve-String(annotations-@QueryParam(\"confstoretrieve\")), metricsToRetrieve-String(annotations-@QueryParam(\"metricstoretrieve\")), fields-String(annotations-@QueryParam(\"fields\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n+      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n+      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n       @QueryParam(\"fields\") String fields) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n         isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n-        fields);\n+        confsToRetrieve, metricsToRetrieve, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"confstoretrieve\") String confsToRetrieve,\n      @QueryParam(\"metricstoretrieve\") String metricsToRetrieve,\n      @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        confsToRetrieve, metricsToRetrieve, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "6934b05c7117a12286fb2ba7a47f75e227cacb22": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,23 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n-      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n-      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n        @QueryParam(\"fields\") String fields) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n-        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n-        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n-        metricfilters, eventfilters, fields);\n+        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n+        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n+        fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedtimestart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,23 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n       @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n-      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n-      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n        @QueryParam(\"fields\") String fields) {\n     return getEntities(req, res, null, appId, entityType, userId, flowName,\n-        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n-        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n-        metricfilters, eventfilters, fields);\n+        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n+        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n+        fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, relatesTo,\n        isRelatedTo, infofilters, conffilters, metricfilters, eventfilters,\n        fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "09649005ca269f249f98384ecd1abf9fb6d5b0c1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n-      @QueryParam(\"flowid\") String flowId,\n+      @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n       @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n        @QueryParam(\"fields\") String fields) {\n-    return getEntities(req, res, null, appId, entityType, userId, flowId,\n+    return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n         modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n         metricfilters, eventfilters, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n        metricfilters, eventfilters, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowId-String(annotations-@QueryParam(\"flowid\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedtimestart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowName-String(annotations-@QueryParam(\"flowname\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedtimestart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "09649005ca269f249f98384ecd1abf9fb6d5b0c1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @PathParam(\"appid\") String appId,\n       @PathParam(\"entitytype\") String entityType,\n       @QueryParam(\"userid\") String userId,\n-      @QueryParam(\"flowid\") String flowId,\n+      @QueryParam(\"flowname\") String flowName,\n       @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n       @QueryParam(\"createdtimestart\") String createdTimeStart,\n       @QueryParam(\"createdtimeend\") String createdTimeEnd,\n       @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n       @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n        @QueryParam(\"fields\") String fields) {\n-    return getEntities(req, res, null, appId, entityType, userId, flowId,\n+    return getEntities(req, res, null, appId, entityType, userId, flowName,\n         flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n         modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n         metricfilters, eventfilters, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowname\") String flowName,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowName,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n        metricfilters, eventfilters, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "YARN-4075 [reader REST API] implement support for querying for flows and flow runs (Varun Saxena via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
      "commitAuthor": "Vrushali Channapattan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4075 [reader REST API] implement support for querying for flows and flow runs (Varun Saxena via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthor": "Vrushali Channapattan",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "451c13b1de1e42394a4c92888192da9a9519d9ac",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,52 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n-      @PathParam(\"clusterId\") String clusterId,\n-      @PathParam(\"appId\") String appId,\n-      @PathParam(\"entityType\") String entityType,\n-      @QueryParam(\"userId\") String userId,\n-      @QueryParam(\"flowId\") String flowId,\n-      @QueryParam(\"flowRunId\") String flowRunId,\n+      @PathParam(\"appid\") String appId,\n+      @PathParam(\"entitytype\") String entityType,\n+      @QueryParam(\"userid\") String userId,\n+      @QueryParam(\"flowid\") String flowId,\n+      @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n-      @QueryParam(\"createdTimeStart\") String createdTimeStart,\n-      @QueryParam(\"createdTimeEnd\") String createdTimeEnd,\n-      @QueryParam(\"modifiedTimeStart\") String modifiedTimeStart,\n-      @QueryParam(\"modifiedTimeEnd\") String modifiedTimeEnd,\n+      @QueryParam(\"createdtimestart\") String createdTimeStart,\n+      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n+      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n+      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n-      @QueryParam(\"fields\") String fields) {\n-    init(res);\n-    TimelineReaderManager timelineReaderManager \u003d getTimelineReaderManager();\n-    UserGroupInformation callerUGI \u003d getUser(req);\n-    try {\n-      return timelineReaderManager.getEntities(\n-          callerUGI !\u003d null \u0026\u0026 (userId \u003d\u003d null || userId.isEmpty()) ?\n-          callerUGI.getUserName().trim() : parseStr(userId),\n-          parseStr(clusterId), parseStr(flowId),\n-          parseLongStr(flowRunId), parseStr(appId), parseStr(entityType),\n-          parseLongStr(limit), parseLongStr(createdTimeStart),\n-          parseLongStr(createdTimeEnd), parseLongStr(modifiedTimeStart),\n-          parseLongStr(modifiedTimeEnd),\n-          parseKeyStrValuesStr(relatesTo, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValuesStr(isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValueObj(infofilters, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValueStr(conffilters, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseValuesStr(metricfilters, COMMA_DELIMITER),\n-          parseValuesStr(eventfilters, COMMA_DELIMITER),\n-          parseFieldsStr(fields, COMMA_DELIMITER));\n-    } catch (NumberFormatException e) {\n-      throw new BadRequestException(\n-          \"createdTime or modifiedTime start/end or limit or flowId is not\" +\n-          \" a numeric value.\");\n-    } catch (IllegalArgumentException e) {\n-      throw new BadRequestException(\"Requested Invalid Field.\");\n-    } catch (Exception e) {\n-      LOG.error(\"Error getting entities\", e);\n-      throw new WebApplicationException(e,\n-          Response.Status.INTERNAL_SERVER_ERROR);\n-    }\n+       @QueryParam(\"fields\") String fields) {\n+    return getEntities(req, res, null, appId, entityType, userId, flowId,\n+        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n+        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n+        metricfilters, eventfilters, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowid\") String flowId,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowId,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n        metricfilters, eventfilters, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), clusterId-String(annotations-@PathParam(\"clusterId\")), appId-String(annotations-@PathParam(\"appId\")), entityType-String(annotations-@PathParam(\"entityType\")), userId-String(annotations-@QueryParam(\"userId\")), flowId-String(annotations-@QueryParam(\"flowId\")), flowRunId-String(annotations-@QueryParam(\"flowRunId\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdTimeStart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdTimeEnd\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedTimeStart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedTimeEnd\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowId-String(annotations-@QueryParam(\"flowid\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedtimestart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4075 [reader REST API] implement support for querying for flows and flow runs (Varun Saxena via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthor": "Vrushali Channapattan",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "451c13b1de1e42394a4c92888192da9a9519d9ac",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,52 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n-      @PathParam(\"clusterId\") String clusterId,\n-      @PathParam(\"appId\") String appId,\n-      @PathParam(\"entityType\") String entityType,\n-      @QueryParam(\"userId\") String userId,\n-      @QueryParam(\"flowId\") String flowId,\n-      @QueryParam(\"flowRunId\") String flowRunId,\n+      @PathParam(\"appid\") String appId,\n+      @PathParam(\"entitytype\") String entityType,\n+      @QueryParam(\"userid\") String userId,\n+      @QueryParam(\"flowid\") String flowId,\n+      @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n-      @QueryParam(\"createdTimeStart\") String createdTimeStart,\n-      @QueryParam(\"createdTimeEnd\") String createdTimeEnd,\n-      @QueryParam(\"modifiedTimeStart\") String modifiedTimeStart,\n-      @QueryParam(\"modifiedTimeEnd\") String modifiedTimeEnd,\n+      @QueryParam(\"createdtimestart\") String createdTimeStart,\n+      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n+      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n+      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n-      @QueryParam(\"fields\") String fields) {\n-    init(res);\n-    TimelineReaderManager timelineReaderManager \u003d getTimelineReaderManager();\n-    UserGroupInformation callerUGI \u003d getUser(req);\n-    try {\n-      return timelineReaderManager.getEntities(\n-          callerUGI !\u003d null \u0026\u0026 (userId \u003d\u003d null || userId.isEmpty()) ?\n-          callerUGI.getUserName().trim() : parseStr(userId),\n-          parseStr(clusterId), parseStr(flowId),\n-          parseLongStr(flowRunId), parseStr(appId), parseStr(entityType),\n-          parseLongStr(limit), parseLongStr(createdTimeStart),\n-          parseLongStr(createdTimeEnd), parseLongStr(modifiedTimeStart),\n-          parseLongStr(modifiedTimeEnd),\n-          parseKeyStrValuesStr(relatesTo, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValuesStr(isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValueObj(infofilters, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValueStr(conffilters, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseValuesStr(metricfilters, COMMA_DELIMITER),\n-          parseValuesStr(eventfilters, COMMA_DELIMITER),\n-          parseFieldsStr(fields, COMMA_DELIMITER));\n-    } catch (NumberFormatException e) {\n-      throw new BadRequestException(\n-          \"createdTime or modifiedTime start/end or limit or flowId is not\" +\n-          \" a numeric value.\");\n-    } catch (IllegalArgumentException e) {\n-      throw new BadRequestException(\"Requested Invalid Field.\");\n-    } catch (Exception e) {\n-      LOG.error(\"Error getting entities\", e);\n-      throw new WebApplicationException(e,\n-          Response.Status.INTERNAL_SERVER_ERROR);\n-    }\n+       @QueryParam(\"fields\") String fields) {\n+    return getEntities(req, res, null, appId, entityType, userId, flowId,\n+        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n+        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n+        metricfilters, eventfilters, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowid\") String flowId,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowId,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n        metricfilters, eventfilters, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "YARN-4075 [reader REST API] implement support for querying for flows and flow runs (Varun Saxena via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthor": "Vrushali Channapattan",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "451c13b1de1e42394a4c92888192da9a9519d9ac",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,52 +1,25 @@\n   public Set\u003cTimelineEntity\u003e getEntities(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n-      @PathParam(\"clusterId\") String clusterId,\n-      @PathParam(\"appId\") String appId,\n-      @PathParam(\"entityType\") String entityType,\n-      @QueryParam(\"userId\") String userId,\n-      @QueryParam(\"flowId\") String flowId,\n-      @QueryParam(\"flowRunId\") String flowRunId,\n+      @PathParam(\"appid\") String appId,\n+      @PathParam(\"entitytype\") String entityType,\n+      @QueryParam(\"userid\") String userId,\n+      @QueryParam(\"flowid\") String flowId,\n+      @QueryParam(\"flowrunid\") String flowRunId,\n       @QueryParam(\"limit\") String limit,\n-      @QueryParam(\"createdTimeStart\") String createdTimeStart,\n-      @QueryParam(\"createdTimeEnd\") String createdTimeEnd,\n-      @QueryParam(\"modifiedTimeStart\") String modifiedTimeStart,\n-      @QueryParam(\"modifiedTimeEnd\") String modifiedTimeEnd,\n+      @QueryParam(\"createdtimestart\") String createdTimeStart,\n+      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n+      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n+      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n       @QueryParam(\"relatesto\") String relatesTo,\n       @QueryParam(\"isrelatedto\") String isRelatedTo,\n       @QueryParam(\"infofilters\") String infofilters,\n       @QueryParam(\"conffilters\") String conffilters,\n       @QueryParam(\"metricfilters\") String metricfilters,\n       @QueryParam(\"eventfilters\") String eventfilters,\n-      @QueryParam(\"fields\") String fields) {\n-    init(res);\n-    TimelineReaderManager timelineReaderManager \u003d getTimelineReaderManager();\n-    UserGroupInformation callerUGI \u003d getUser(req);\n-    try {\n-      return timelineReaderManager.getEntities(\n-          callerUGI !\u003d null \u0026\u0026 (userId \u003d\u003d null || userId.isEmpty()) ?\n-          callerUGI.getUserName().trim() : parseStr(userId),\n-          parseStr(clusterId), parseStr(flowId),\n-          parseLongStr(flowRunId), parseStr(appId), parseStr(entityType),\n-          parseLongStr(limit), parseLongStr(createdTimeStart),\n-          parseLongStr(createdTimeEnd), parseLongStr(modifiedTimeStart),\n-          parseLongStr(modifiedTimeEnd),\n-          parseKeyStrValuesStr(relatesTo, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValuesStr(isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValueObj(infofilters, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseKeyStrValueStr(conffilters, COMMA_DELIMITER, COLON_DELIMITER),\n-          parseValuesStr(metricfilters, COMMA_DELIMITER),\n-          parseValuesStr(eventfilters, COMMA_DELIMITER),\n-          parseFieldsStr(fields, COMMA_DELIMITER));\n-    } catch (NumberFormatException e) {\n-      throw new BadRequestException(\n-          \"createdTime or modifiedTime start/end or limit or flowId is not\" +\n-          \" a numeric value.\");\n-    } catch (IllegalArgumentException e) {\n-      throw new BadRequestException(\"Requested Invalid Field.\");\n-    } catch (Exception e) {\n-      LOG.error(\"Error getting entities\", e);\n-      throw new WebApplicationException(e,\n-          Response.Status.INTERNAL_SERVER_ERROR);\n-    }\n+       @QueryParam(\"fields\") String fields) {\n+    return getEntities(req, res, null, appId, entityType, userId, flowId,\n+        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n+        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n+        metricfilters, eventfilters, fields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"appid\") String appId,\n      @PathParam(\"entitytype\") String entityType,\n      @QueryParam(\"userid\") String userId,\n      @QueryParam(\"flowid\") String flowId,\n      @QueryParam(\"flowrunid\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdtimestart\") String createdTimeStart,\n      @QueryParam(\"createdtimeend\") String createdTimeEnd,\n      @QueryParam(\"modifiedtimestart\") String modifiedTimeStart,\n      @QueryParam(\"modifiedtimeend\") String modifiedTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n       @QueryParam(\"fields\") String fields) {\n    return getEntities(req, res, null, appId, entityType, userId, flowId,\n        flowRunId, limit, createdTimeStart, createdTimeEnd, modifiedTimeStart,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infofilters, conffilters,\n        metricfilters, eventfilters, fields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java",
          "extendedDetails": {
            "oldValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), clusterId-String(annotations-@PathParam(\"clusterId\")), appId-String(annotations-@PathParam(\"appId\")), entityType-String(annotations-@PathParam(\"entityType\")), userId-String(annotations-@QueryParam(\"userId\")), flowId-String(annotations-@QueryParam(\"flowId\")), flowRunId-String(annotations-@QueryParam(\"flowRunId\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdTimeStart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdTimeEnd\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedTimeStart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedTimeEnd\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]",
            "newValue": "[req-HttpServletRequest(annotations-@Context), res-HttpServletResponse(annotations-@Context), appId-String(annotations-@PathParam(\"appid\")), entityType-String(annotations-@PathParam(\"entitytype\")), userId-String(annotations-@QueryParam(\"userid\")), flowId-String(annotations-@QueryParam(\"flowid\")), flowRunId-String(annotations-@QueryParam(\"flowrunid\")), limit-String(annotations-@QueryParam(\"limit\")), createdTimeStart-String(annotations-@QueryParam(\"createdtimestart\")), createdTimeEnd-String(annotations-@QueryParam(\"createdtimeend\")), modifiedTimeStart-String(annotations-@QueryParam(\"modifiedtimestart\")), modifiedTimeEnd-String(annotations-@QueryParam(\"modifiedtimeend\")), relatesTo-String(annotations-@QueryParam(\"relatesto\")), isRelatedTo-String(annotations-@QueryParam(\"isrelatedto\")), infofilters-String(annotations-@QueryParam(\"infofilters\")), conffilters-String(annotations-@QueryParam(\"conffilters\")), metricfilters-String(annotations-@QueryParam(\"metricfilters\")), eventfilters-String(annotations-@QueryParam(\"eventfilters\")), fields-String(annotations-@QueryParam(\"fields\"))]"
          }
        }
      ]
    },
    "451c13b1de1e42394a4c92888192da9a9519d9ac": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3814. REST API implementation for getting raw entities in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "451c13b1de1e42394a4c92888192da9a9519d9ac",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,52 @@\n+  public Set\u003cTimelineEntity\u003e getEntities(\n+      @Context HttpServletRequest req,\n+      @Context HttpServletResponse res,\n+      @PathParam(\"clusterId\") String clusterId,\n+      @PathParam(\"appId\") String appId,\n+      @PathParam(\"entityType\") String entityType,\n+      @QueryParam(\"userId\") String userId,\n+      @QueryParam(\"flowId\") String flowId,\n+      @QueryParam(\"flowRunId\") String flowRunId,\n+      @QueryParam(\"limit\") String limit,\n+      @QueryParam(\"createdTimeStart\") String createdTimeStart,\n+      @QueryParam(\"createdTimeEnd\") String createdTimeEnd,\n+      @QueryParam(\"modifiedTimeStart\") String modifiedTimeStart,\n+      @QueryParam(\"modifiedTimeEnd\") String modifiedTimeEnd,\n+      @QueryParam(\"relatesto\") String relatesTo,\n+      @QueryParam(\"isrelatedto\") String isRelatedTo,\n+      @QueryParam(\"infofilters\") String infofilters,\n+      @QueryParam(\"conffilters\") String conffilters,\n+      @QueryParam(\"metricfilters\") String metricfilters,\n+      @QueryParam(\"eventfilters\") String eventfilters,\n+      @QueryParam(\"fields\") String fields) {\n+    init(res);\n+    TimelineReaderManager timelineReaderManager \u003d getTimelineReaderManager();\n+    UserGroupInformation callerUGI \u003d getUser(req);\n+    try {\n+      return timelineReaderManager.getEntities(\n+          callerUGI !\u003d null \u0026\u0026 (userId \u003d\u003d null || userId.isEmpty()) ?\n+          callerUGI.getUserName().trim() : parseStr(userId),\n+          parseStr(clusterId), parseStr(flowId),\n+          parseLongStr(flowRunId), parseStr(appId), parseStr(entityType),\n+          parseLongStr(limit), parseLongStr(createdTimeStart),\n+          parseLongStr(createdTimeEnd), parseLongStr(modifiedTimeStart),\n+          parseLongStr(modifiedTimeEnd),\n+          parseKeyStrValuesStr(relatesTo, COMMA_DELIMITER, COLON_DELIMITER),\n+          parseKeyStrValuesStr(isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),\n+          parseKeyStrValueObj(infofilters, COMMA_DELIMITER, COLON_DELIMITER),\n+          parseKeyStrValueStr(conffilters, COMMA_DELIMITER, COLON_DELIMITER),\n+          parseValuesStr(metricfilters, COMMA_DELIMITER),\n+          parseValuesStr(eventfilters, COMMA_DELIMITER),\n+          parseFieldsStr(fields, COMMA_DELIMITER));\n+    } catch (NumberFormatException e) {\n+      throw new BadRequestException(\n+          \"createdTime or modifiedTime start/end or limit or flowId is not\" +\n+          \" a numeric value.\");\n+    } catch (IllegalArgumentException e) {\n+      throw new BadRequestException(\"Requested Invalid Field.\");\n+    } catch (Exception e) {\n+      LOG.error(\"Error getting entities\", e);\n+      throw new WebApplicationException(e,\n+          Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"appId\") String appId,\n      @PathParam(\"entityType\") String entityType,\n      @QueryParam(\"userId\") String userId,\n      @QueryParam(\"flowId\") String flowId,\n      @QueryParam(\"flowRunId\") String flowRunId,\n      @QueryParam(\"limit\") String limit,\n      @QueryParam(\"createdTimeStart\") String createdTimeStart,\n      @QueryParam(\"createdTimeEnd\") String createdTimeEnd,\n      @QueryParam(\"modifiedTimeStart\") String modifiedTimeStart,\n      @QueryParam(\"modifiedTimeEnd\") String modifiedTimeEnd,\n      @QueryParam(\"relatesto\") String relatesTo,\n      @QueryParam(\"isrelatedto\") String isRelatedTo,\n      @QueryParam(\"infofilters\") String infofilters,\n      @QueryParam(\"conffilters\") String conffilters,\n      @QueryParam(\"metricfilters\") String metricfilters,\n      @QueryParam(\"eventfilters\") String eventfilters,\n      @QueryParam(\"fields\") String fields) {\n    init(res);\n    TimelineReaderManager timelineReaderManager \u003d getTimelineReaderManager();\n    UserGroupInformation callerUGI \u003d getUser(req);\n    try {\n      return timelineReaderManager.getEntities(\n          callerUGI !\u003d null \u0026\u0026 (userId \u003d\u003d null || userId.isEmpty()) ?\n          callerUGI.getUserName().trim() : parseStr(userId),\n          parseStr(clusterId), parseStr(flowId),\n          parseLongStr(flowRunId), parseStr(appId), parseStr(entityType),\n          parseLongStr(limit), parseLongStr(createdTimeStart),\n          parseLongStr(createdTimeEnd), parseLongStr(modifiedTimeStart),\n          parseLongStr(modifiedTimeEnd),\n          parseKeyStrValuesStr(relatesTo, COMMA_DELIMITER, COLON_DELIMITER),\n          parseKeyStrValuesStr(isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),\n          parseKeyStrValueObj(infofilters, COMMA_DELIMITER, COLON_DELIMITER),\n          parseKeyStrValueStr(conffilters, COMMA_DELIMITER, COLON_DELIMITER),\n          parseValuesStr(metricfilters, COMMA_DELIMITER),\n          parseValuesStr(eventfilters, COMMA_DELIMITER),\n          parseFieldsStr(fields, COMMA_DELIMITER));\n    } catch (NumberFormatException e) {\n      throw new BadRequestException(\n          \"createdTime or modifiedTime start/end or limit or flowId is not\" +\n          \" a numeric value.\");\n    } catch (IllegalArgumentException e) {\n      throw new BadRequestException(\"Requested Invalid Field.\");\n    } catch (Exception e) {\n      LOG.error(\"Error getting entities\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderWebServices.java"
    }
  }
}