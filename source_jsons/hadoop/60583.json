{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationSubmissionContextPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
  "functionStartLine": 113,
  "functionEndLine": 148,
  "numCommitsSeen": 38,
  "timeTaken": 10535,
  "changeHistory": [
    "a81144daa012e13590725f67f53e35ef84a6f1ec",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
    "9bae6720cb8432efd78c909dc624c00e367cedf5",
    "2ae5a3a5bf5ea355370469a53eeccff0b5220081",
    "620325e81696fca140195b74929ed9eda2d5eb16",
    "f7736f464f068d2e46a454616b988b2dda345a13",
    "180afa2f86f9854c536c3d4ff7476880e41ac48d",
    "c8212bacb1b2a7e6ee83cc56f72297465ce99390",
    "c9266df40434fdde05bd3a4c75f7a6bc29db760f",
    "5338ac416ab8ab3e7e0a7bfb4a53151fc457f673",
    "1141edc424a2975ab48871108e5da4bc3def49f6",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "88b82a0f6687ce103817fbb460fd30d870f717a0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "a81144daa012e13590725f67f53e35ef84a6f1ec": "Ybodychange",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": "Ybodychange",
    "9bae6720cb8432efd78c909dc624c00e367cedf5": "Ybodychange",
    "2ae5a3a5bf5ea355370469a53eeccff0b5220081": "Ybodychange",
    "620325e81696fca140195b74929ed9eda2d5eb16": "Ybodychange",
    "f7736f464f068d2e46a454616b988b2dda345a13": "Ybodychange",
    "180afa2f86f9854c536c3d4ff7476880e41ac48d": "Ybodychange",
    "c8212bacb1b2a7e6ee83cc56f72297465ce99390": "Ybodychange",
    "c9266df40434fdde05bd3a4c75f7a6bc29db760f": "Ybodychange",
    "5338ac416ab8ab3e7e0a7bfb4a53151fc457f673": "Ybodychange",
    "1141edc424a2975ab48871108e5da4bc3def49f6": "Ybodychange",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": "Ybodychange",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "88b82a0f6687ce103817fbb460fd30d870f717a0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a81144daa012e13590725f67f53e35ef84a6f1ec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7666. Introduce scheduler specific environment variable support in ApplicationSubmissionContext for better scheduling placement configurations. (Sunil G via wangda)\n\nChange-Id: I0fd826490f5160d47d42af2a9ac0bd8ec4e959dc\n",
      "commitDate": "05/01/18 3:12 PM",
      "commitName": "a81144daa012e13590725f67f53e35ef84a6f1ec",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/06/17 10:08 AM",
      "commitNameOld": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 211.25,
      "commitsBetweenForRepo": 1522,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.amResourceRequests !\u003d null) {\n       builder.clearAmContainerResourceRequest();\n       builder.addAllAmContainerResourceRequest(\n           convertToProtoFormat(this.amResourceRequests));\n     }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n     if (this.applicationTimeouts !\u003d null) {\n       addApplicationTimeouts();\n     }\n+    if (this.schedulingProperties !\u003d null) {\n+      addApplicationSchedulingProperties();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequests !\u003d null) {\n      builder.clearAmContainerResourceRequest();\n      builder.addAllAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequests));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n    if (this.applicationTimeouts !\u003d null) {\n      addApplicationTimeouts();\n    }\n    if (this.schedulingProperties !\u003d null) {\n      addApplicationSchedulingProperties();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6679. Reduce Resource instance overhead via non-PBImpl\n(Contributed by Daryn Sharp via Daniel Templeton)\n",
      "commitDate": "08/06/17 10:08 AM",
      "commitName": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "09/05/17 9:22 AM",
      "commitNameOld": "543aac9f281871a40473e83061f6deadc0bbdab7",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 30.03,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n-    if (this.resource !\u003d null \u0026\u0026\n-        !((ResourcePBImpl) this.resource).getProto().equals(\n-            builder.getResource())) {\n+    if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.amResourceRequests !\u003d null) {\n       builder.clearAmContainerResourceRequest();\n       builder.addAllAmContainerResourceRequest(\n           convertToProtoFormat(this.amResourceRequests));\n     }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n     if (this.applicationTimeouts !\u003d null) {\n       addApplicationTimeouts();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequests !\u003d null) {\n      builder.clearAmContainerResourceRequest();\n      builder.addAllAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequests));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n    if (this.applicationTimeouts !\u003d null) {\n      addApplicationTimeouts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "9bae6720cb8432efd78c909dc624c00e367cedf5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6050. AMs can\u0027t be scheduled on racks or nodes (rkanter)\n",
      "commitDate": "27/03/17 5:23 PM",
      "commitName": "9bae6720cb8432efd78c909dc624c00e367cedf5",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "24/03/17 6:06 PM",
      "commitNameOld": "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n-    if (this.amResourceRequest !\u003d null) {\n-      builder.setAmContainerResourceRequest(\n-          convertToProtoFormat(this.amResourceRequest));\n+    if (this.amResourceRequests !\u003d null) {\n+      builder.clearAmContainerResourceRequest();\n+      builder.addAllAmContainerResourceRequest(\n+          convertToProtoFormat(this.amResourceRequests));\n     }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n     if (this.applicationTimeouts !\u003d null) {\n       addApplicationTimeouts();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequests !\u003d null) {\n      builder.clearAmContainerResourceRequest();\n      builder.addAllAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequests));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n    if (this.applicationTimeouts !\u003d null) {\n      addApplicationTimeouts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "2ae5a3a5bf5ea355370469a53eeccff0b5220081": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4205. Add a service for monitoring application life time out. Contributed by Rohith Sharma K S\n",
      "commitDate": "29/09/16 7:00 AM",
      "commitName": "2ae5a3a5bf5ea355370469a53eeccff0b5220081",
      "commitAuthor": "Jian He",
      "commitDateOld": "07/06/16 3:06 PM",
      "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 113.66,
      "commitsBetweenForRepo": 854,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.amResourceRequest !\u003d null) {\n       builder.setAmContainerResourceRequest(\n           convertToProtoFormat(this.amResourceRequest));\n     }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n+    if (this.applicationTimeouts !\u003d null) {\n+      addApplicationTimeouts();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequest !\u003d null) {\n      builder.setAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequest));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n    if (this.applicationTimeouts !\u003d null) {\n      addApplicationTimeouts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "620325e81696fca140195b74929ed9eda2d5eb16": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
      "commitDate": "07/06/16 3:06 PM",
      "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "15/01/16 8:08 AM",
      "commitNameOld": "f7736f464f068d2e46a454616b988b2dda345a13",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 144.25,
      "commitsBetweenForRepo": 942,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,31 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.amResourceRequest !\u003d null) {\n       builder.setAmContainerResourceRequest(\n           convertToProtoFormat(this.amResourceRequest));\n     }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n-    if (this.amBlackListRequest !\u003d null) {\n-      builder.setAmBlacklistingRequest(\n-          convertToProtoFormat(this.amBlackListRequest));\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequest !\u003d null) {\n      builder.setAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequest));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "f7736f464f068d2e46a454616b988b2dda345a13": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4389. Allow application to enable or disable am blacklisting. (Sunil G via rohithsharmaks)\n",
      "commitDate": "15/01/16 8:08 AM",
      "commitName": "f7736f464f068d2e46a454616b988b2dda345a13",
      "commitAuthor": "rohithsharmaks",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 318.45,
      "commitsBetweenForRepo": 2536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,35 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.amResourceRequest !\u003d null) {\n       builder.setAmContainerResourceRequest(\n           convertToProtoFormat(this.amResourceRequest));\n     }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n+    if (this.amBlackListRequest !\u003d null) {\n+      builder.setAmBlacklistingRequest(\n+          convertToProtoFormat(this.amBlackListRequest));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequest !\u003d null) {\n      builder.setAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequest));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n    if (this.amBlackListRequest !\u003d null) {\n      builder.setAmBlacklistingRequest(\n          convertToProtoFormat(this.amBlackListRequest));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "180afa2f86f9854c536c3d4ff7476880e41ac48d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2493. Added user-APIs for using node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "09/10/14 11:26 AM",
      "commitName": "180afa2f86f9854c536c3d4ff7476880e41ac48d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/10/14 5:09 PM",
      "commitNameOld": "c8212bacb1b2a7e6ee83cc56f72297465ce99390",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 5.76,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n+    if (this.amResourceRequest !\u003d null) {\n+      builder.setAmContainerResourceRequest(\n+          convertToProtoFormat(this.amResourceRequest));\n+    }\n     if (this.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext(\n           convertToProtoFormat(this.logAggregationContext));\n     }\n     if (this.reservationId !\u003d null) {\n       builder.setReservationId(convertToProtoFormat(this.reservationId));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.amResourceRequest !\u003d null) {\n      builder.setAmContainerResourceRequest(\n          convertToProtoFormat(this.amResourceRequest));\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "c8212bacb1b2a7e6ee83cc56f72297465ce99390": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1051. Add a system for creating reservations of cluster capacity.\nContributed by Subru Krishnan and Carlo Curino.\n",
      "commitDate": "03/10/14 5:09 PM",
      "commitName": "c8212bacb1b2a7e6ee83cc56f72297465ce99390",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "03/10/14 3:41 PM",
      "commitNameOld": "c9266df40434fdde05bd3a4c75f7a6bc29db760f",
      "commitAuthorOld": "subru",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,27 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n+    if (this.logAggregationContext !\u003d null) {\n+      builder.setLogAggregationContext(\n+          convertToProtoFormat(this.logAggregationContext));\n+    }\n+    if (this.reservationId !\u003d null) {\n+      builder.setReservationId(convertToProtoFormat(this.reservationId));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n    if (this.reservationId !\u003d null) {\n      builder.setReservationId(convertToProtoFormat(this.reservationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "c9266df40434fdde05bd3a4c75f7a6bc29db760f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1708. Public YARN APIs for creating/updating/deleting reservations.\n(cherry picked from commit 3f2e3b275bcf29264a112c5d2f4eae289fe7f52c)\n",
      "commitDate": "03/10/14 3:41 PM",
      "commitName": "c9266df40434fdde05bd3a4c75f7a6bc29db760f",
      "commitAuthor": "subru",
      "commitDateOld": "23/09/14 10:36 AM",
      "commitNameOld": "5338ac416ab8ab3e7e0a7bfb4a53151fc457f673",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 10.21,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,20 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n-    if (this.logAggregationContext !\u003d null) {\n-      builder.setLogAggregationContext(\n-          convertToProtoFormat(this.logAggregationContext));\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "5338ac416ab8ab3e7e0a7bfb4a53151fc457f673": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2569. Added the log handling APIs for the long running services. Contributed by Xuan Gong.\n",
      "commitDate": "23/09/14 10:36 AM",
      "commitName": "5338ac416ab8ab3e7e0a7bfb4a53151fc457f673",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "13/09/14 6:04 PM",
      "commitNameOld": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.69,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n+    if (this.logAggregationContext !\u003d null) {\n+      builder.setLogAggregationContext(\n+          convertToProtoFormat(this.logAggregationContext));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext(\n          convertToProtoFormat(this.logAggregationContext));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "1141edc424a2975ab48871108e5da4bc3def49f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2051. Fix bug in PBimpls and add more unit tests with reflection. (Contributed by Binglin Chang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615025 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 9:16 PM",
      "commitName": "1141edc424a2975ab48871108e5da4bc3def49f6",
      "commitAuthor": "Junping Du",
      "commitDateOld": "04/02/14 8:55 PM",
      "commitNameOld": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 176.97,
      "commitsBetweenForRepo": 1245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n+      builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1461. Added tags for YARN applications and changed RM to handle them. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/14 8:55 PM",
      "commitName": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/01/14 7:04 AM",
      "commitNameOld": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 25.58,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n     if (this.resource !\u003d null \u0026\u0026\n         !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n+    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n+      builder.addAllApplicationTags(this.applicationTags);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java"
      }
    },
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 12:28 PM",
      "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/03/13 2:11 PM",
      "commitNameOld": "07573640147bb4cf3568078acae7b245e9299cf7",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.93,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.amContainer !\u003d null) {\n       builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n     }\n+    if (this.resource !\u003d null \u0026\u0026\n+        !((ResourcePBImpl) this.resource).getProto().equals(\n+            builder.getResource())) {\n+      builder.setResource(convertToProtoFormat(this.resource));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n    if (this.resource !\u003d null \u0026\u0026\n        !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java"
      }
    },
    "88b82a0f6687ce103817fbb460fd30d870f717a0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1170459 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/09/11 12:26 AM",
      "commitName": "88b82a0f6687ce103817fbb460fd30d870f717a0",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "25/08/11 10:16 AM",
      "commitNameOld": "7c85f33ce1b209e1e5bb17b9dd2ad270ca451d60",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,11 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n-    if (this.masterCapability !\u003d null) {\n-      builder.setMasterCapability(convertToProtoFormat(this.masterCapability));\n-    }\n-    if (this.resources !\u003d null) {\n-      addResourcesToProto();\n-    }\n-    if (this.resourcesTodo !\u003d null) {\n-      addResourcesTodoToProto();\n-    }\n-    if (this.fsTokenList !\u003d null) {\n-      addFsTokenListToProto();\n-    }\n-    if (this.fsTokenTodo !\u003d null) {\n-      builder.setFsTokensTodo(convertToProtoFormat(this.fsTokenTodo));\n-    }\n-    if (this.environment !\u003d null) {\n-      addEnvironmentToProto();\n-    }\n-    if (this.commandList !\u003d null) {\n-      addCommandsToProto();\n-    }\n     if (this.priority !\u003d null) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n+    if (this.amContainer !\u003d null) {\n+      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.amContainer !\u003d null) {\n      builder.setAmContainerSpec(convertToProtoFormat(this.amContainer));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.masterCapability !\u003d null) {\n      builder.setMasterCapability(convertToProtoFormat(this.masterCapability));\n    }\n    if (this.resources !\u003d null) {\n      addResourcesToProto();\n    }\n    if (this.resourcesTodo !\u003d null) {\n      addResourcesTodoToProto();\n    }\n    if (this.fsTokenList !\u003d null) {\n      addFsTokenListToProto();\n    }\n    if (this.fsTokenTodo !\u003d null) {\n      builder.setFsTokensTodo(convertToProtoFormat(this.fsTokenTodo));\n    }\n    if (this.environment !\u003d null) {\n      addEnvironmentToProto();\n    }\n    if (this.commandList !\u003d null) {\n      addCommandsToProto();\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,29 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.applicationId !\u003d null) {\n+      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n+    }\n+    if (this.masterCapability !\u003d null) {\n+      builder.setMasterCapability(convertToProtoFormat(this.masterCapability));\n+    }\n+    if (this.resources !\u003d null) {\n+      addResourcesToProto();\n+    }\n+    if (this.resourcesTodo !\u003d null) {\n+      addResourcesTodoToProto();\n+    }\n+    if (this.fsTokenList !\u003d null) {\n+      addFsTokenListToProto();\n+    }\n+    if (this.fsTokenTodo !\u003d null) {\n+      builder.setFsTokensTodo(convertToProtoFormat(this.fsTokenTodo));\n+    }\n+    if (this.environment !\u003d null) {\n+      addEnvironmentToProto();\n+    }\n+    if (this.commandList !\u003d null) {\n+      addCommandsToProto();\n+    }\n+    if (this.priority !\u003d null) {\n+      builder.setPriority(convertToProtoFormat(this.priority));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.masterCapability !\u003d null) {\n      builder.setMasterCapability(convertToProtoFormat(this.masterCapability));\n    }\n    if (this.resources !\u003d null) {\n      addResourcesToProto();\n    }\n    if (this.resourcesTodo !\u003d null) {\n      addResourcesTodoToProto();\n    }\n    if (this.fsTokenList !\u003d null) {\n      addFsTokenListToProto();\n    }\n    if (this.fsTokenTodo !\u003d null) {\n      builder.setFsTokensTodo(convertToProtoFormat(this.fsTokenTodo));\n    }\n    if (this.environment !\u003d null) {\n      addEnvironmentToProto();\n    }\n    if (this.commandList !\u003d null) {\n      addCommandsToProto();\n    }\n    if (this.priority !\u003d null) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java"
    }
  }
}