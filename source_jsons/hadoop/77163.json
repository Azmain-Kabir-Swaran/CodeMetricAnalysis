{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WritableUtils.java",
  "functionName": "readVIntInRange",
  "functionId": "readVIntInRange___stream-DataInput__lower-int__upper-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/WritableUtils.java",
  "functionStartLine": 348,
  "functionEndLine": 364,
  "numCommitsSeen": 5,
  "timeTaken": 674,
  "changeHistory": [
    "bbfda83044599ff7a23c8ca53016b65415f1aa37"
  ],
  "changeHistoryShort": {
    "bbfda83044599ff7a23c8ca53016b65415f1aa37": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbfda83044599ff7a23c8ca53016b65415f1aa37": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8275. Range check DelegationKey length. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332839 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/05/12 2:25 PM",
      "commitName": "bbfda83044599ff7a23c8ca53016b65415f1aa37",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,17 @@\n+  public static int readVIntInRange(DataInput stream, int lower, int upper)\n+      throws IOException {\n+    long n \u003d readVLong(stream);\n+    if (n \u003c lower) {\n+      if (lower \u003d\u003d 0) {\n+        throw new IOException(\"expected non-negative integer, got \" + n);\n+      } else {\n+        throw new IOException(\"expected integer greater than or equal to \" +\n+            lower + \", got \" + n);\n+      }\n+    }\n+    if (n \u003e upper) {\n+      throw new IOException(\"expected integer less or equal to \" + upper +\n+          \", got \" + n);\n+    }\n+    return (int)n;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int readVIntInRange(DataInput stream, int lower, int upper)\n      throws IOException {\n    long n \u003d readVLong(stream);\n    if (n \u003c lower) {\n      if (lower \u003d\u003d 0) {\n        throw new IOException(\"expected non-negative integer, got \" + n);\n      } else {\n        throw new IOException(\"expected integer greater than or equal to \" +\n            lower + \", got \" + n);\n      }\n    }\n    if (n \u003e upper) {\n      throw new IOException(\"expected integer less or equal to \" + upper +\n          \", got \" + n);\n    }\n    return (int)n;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/WritableUtils.java"
    }
  }
}