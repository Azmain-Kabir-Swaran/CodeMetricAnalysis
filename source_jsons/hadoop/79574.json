{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalDirAllocator.java",
  "functionName": "createPath",
  "functionId": "createPath___dir-Path__path-String__checkWrite-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
  "functionStartLine": 359,
  "functionEndLine": 374,
  "numCommitsSeen": 39,
  "timeTaken": 2447,
  "changeHistory": [
    "e6873dfde057e63ce5efa91f3061db3ee1b2e236",
    "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
    "c2e1756d7a604b64a3fbeba955754a8f844af70a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "1191be630ff05c9f1a540b952a8e34665f7fc181",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "e6873dfde057e63ce5efa91f3061db3ee1b2e236": "Ybodychange",
    "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b": "Ymultichange(Yparameterchange,Ybodychange)",
    "c2e1756d7a604b64a3fbeba955754a8f844af70a": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "1191be630ff05c9f1a540b952a8e34665f7fc181": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e6873dfde057e63ce5efa91f3061db3ee1b2e236": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7300. DiskValidator is not used in LocalDirAllocator. (Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "19/07/18 4:27 PM",
      "commitName": "e6873dfde057e63ce5efa91f3061db3ee1b2e236",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "29/06/18 11:18 AM",
      "commitNameOld": "d36f6b9e93e4c30d24d0e837cb00bd24ffa8f274",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 20.21,
      "commitsBetweenForRepo": 113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private Path createPath(Path dir, String path,\n         boolean checkWrite) throws IOException {\n       Path file \u003d new Path(dir, path);\n       if (checkWrite) {\n         //check whether we are able to create a directory here. If the disk\n         //happens to be RDONLY we will fail\n         try {\n-          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n+          diskValidator.checkStatus(new File(file.getParent().toUri().getPath()));\n           return file;\n         } catch (DiskErrorException d) {\n           LOG.warn(\"Disk Error Exception: \", d);\n           return null;\n         }\n       }\n       return file;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Path createPath(Path dir, String path,\n        boolean checkWrite) throws IOException {\n      Path file \u003d new Path(dir, path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          diskValidator.checkStatus(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {}
    },
    "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10048. LocalDirAllocator should avoid holding locks while accessing the filesystem. Contributed by Jason Lowe.\n",
      "commitDate": "07/06/16 9:18 AM",
      "commitName": "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10048. LocalDirAllocator should avoid holding locks while accessing the filesystem. Contributed by Jason Lowe.\n",
          "commitDate": "07/06/16 9:18 AM",
          "commitName": "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
          "commitAuthor": "Junping Du",
          "commitDateOld": "01/10/15 11:56 AM",
          "commitNameOld": "fd026f535cc09e99a7d4d5d2a8c13eabe8865315",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 249.89,
          "commitsBetweenForRepo": 1655,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-    private Path createPath(String path, \n+    private Path createPath(Path dir, String path,\n         boolean checkWrite) throws IOException {\n-      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n-                                    path);\n+      Path file \u003d new Path(dir, path);\n       if (checkWrite) {\n         //check whether we are able to create a directory here. If the disk\n         //happens to be RDONLY we will fail\n         try {\n           DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n           return file;\n         } catch (DiskErrorException d) {\n           LOG.warn(\"Disk Error Exception: \", d);\n           return null;\n         }\n       }\n       return file;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Path createPath(Path dir, String path,\n        boolean checkWrite) throws IOException {\n      Path file \u003d new Path(dir, path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
          "extendedDetails": {
            "oldValue": "[path-String, checkWrite-boolean]",
            "newValue": "[dir-Path, path-String, checkWrite-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10048. LocalDirAllocator should avoid holding locks while accessing the filesystem. Contributed by Jason Lowe.\n",
          "commitDate": "07/06/16 9:18 AM",
          "commitName": "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
          "commitAuthor": "Junping Du",
          "commitDateOld": "01/10/15 11:56 AM",
          "commitNameOld": "fd026f535cc09e99a7d4d5d2a8c13eabe8865315",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 249.89,
          "commitsBetweenForRepo": 1655,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-    private Path createPath(String path, \n+    private Path createPath(Path dir, String path,\n         boolean checkWrite) throws IOException {\n-      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n-                                    path);\n+      Path file \u003d new Path(dir, path);\n       if (checkWrite) {\n         //check whether we are able to create a directory here. If the disk\n         //happens to be RDONLY we will fail\n         try {\n           DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n           return file;\n         } catch (DiskErrorException d) {\n           LOG.warn(\"Disk Error Exception: \", d);\n           return null;\n         }\n       }\n       return file;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Path createPath(Path dir, String path,\n        boolean checkWrite) throws IOException {\n      Path file \u003d new Path(dir, path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "c2e1756d7a604b64a3fbeba955754a8f844af70a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7580. Add a version of getLocalPathForWrite to LocalDirAllocator which doesn\u0027t create dirs. Contributed by Chris Douglas \u0026 Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/11 6:36 PM",
      "commitName": "c2e1756d7a604b64a3fbeba955754a8f844af70a",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7580. Add a version of getLocalPathForWrite to LocalDirAllocator which doesn\u0027t create dirs. Contributed by Chris Douglas \u0026 Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165473 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/09/11 6:36 PM",
          "commitName": "c2e1756d7a604b64a3fbeba955754a8f844af70a",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 12.06,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,17 @@\n-    private Path createPath(String path) throws IOException {\n+    private Path createPath(String path, \n+        boolean checkWrite) throws IOException {\n       Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                     path);\n-      //check whether we are able to create a directory here. If the disk\n-      //happens to be RDONLY we will fail\n-      try {\n-        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n-        return file;\n-      } catch (DiskErrorException d) {\n-        LOG.warn(\"Disk Error Exception: \", d);\n-        return null;\n+      if (checkWrite) {\n+        //check whether we are able to create a directory here. If the disk\n+        //happens to be RDONLY we will fail\n+        try {\n+          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n+          return file;\n+        } catch (DiskErrorException d) {\n+          LOG.warn(\"Disk Error Exception: \", d);\n+          return null;\n+        }\n       }\n+      return file;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Path createPath(String path, \n        boolean checkWrite) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
          "extendedDetails": {
            "oldValue": "[path-String]",
            "newValue": "[path-String, checkWrite-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7580. Add a version of getLocalPathForWrite to LocalDirAllocator which doesn\u0027t create dirs. Contributed by Chris Douglas \u0026 Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165473 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/09/11 6:36 PM",
          "commitName": "c2e1756d7a604b64a3fbeba955754a8f844af70a",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 12.06,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,17 @@\n-    private Path createPath(String path) throws IOException {\n+    private Path createPath(String path, \n+        boolean checkWrite) throws IOException {\n       Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                     path);\n-      //check whether we are able to create a directory here. If the disk\n-      //happens to be RDONLY we will fail\n-      try {\n-        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n-        return file;\n-      } catch (DiskErrorException d) {\n-        LOG.warn(\"Disk Error Exception: \", d);\n-        return null;\n+      if (checkWrite) {\n+        //check whether we are able to create a directory here. If the disk\n+        //happens to be RDONLY we will fail\n+        try {\n+          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n+          return file;\n+        } catch (DiskErrorException d) {\n+          LOG.warn(\"Disk Error Exception: \", d);\n+          return null;\n+        }\n       }\n+      return file;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Path createPath(String path, \n        boolean checkWrite) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private Path createPath(String path) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      //check whether we are able to create a directory here. If the disk\n      //happens to be RDONLY we will fail\n      try {\n        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n        return file;\n      } catch (DiskErrorException d) {\n        LOG.warn(\"Disk Error Exception: \", d);\n        return null;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private Path createPath(String path) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      //check whether we are able to create a directory here. If the disk\n      //happens to be RDONLY we will fail\n      try {\n        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n        return file;\n      } catch (DiskErrorException d) {\n        LOG.warn(\"Disk Error Exception: \", d);\n        return null;\n      }\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java"
      }
    },
    "1191be630ff05c9f1a540b952a8e34665f7fc181": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7385 Remove StringUtils.stringifyException(ie) in logger functions.  Contributed by Bharath Mundlapudi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139123 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/06/11 4:55 PM",
      "commitName": "1191be630ff05c9f1a540b952a8e34665f7fc181",
      "commitAuthor": "Tanping Wang",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 11.08,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private Path createPath(String path) throws IOException {\n       Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                     path);\n       //check whether we are able to create a directory here. If the disk\n       //happens to be RDONLY we will fail\n       try {\n         DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n         return file;\n       } catch (DiskErrorException d) {\n-        LOG.warn(StringUtils.stringifyException(d));\n+        LOG.warn(\"Disk Error Exception: \", d);\n         return null;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Path createPath(String path) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      //check whether we are able to create a directory here. If the disk\n      //happens to be RDONLY we will fail\n      try {\n        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n        return file;\n      } catch (DiskErrorException d) {\n        LOG.warn(\"Disk Error Exception: \", d);\n        return null;\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private Path createPath(String path) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      //check whether we are able to create a directory here. If the disk\n      //happens to be RDONLY we will fail\n      try {\n        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n        return file;\n      } catch (DiskErrorException d) {\n        LOG.warn(StringUtils.stringifyException(d));\n        return null;\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,13 @@\n+    private Path createPath(String path) throws IOException {\n+      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n+                                    path);\n+      //check whether we are able to create a directory here. If the disk\n+      //happens to be RDONLY we will fail\n+      try {\n+        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n+        return file;\n+      } catch (DiskErrorException d) {\n+        LOG.warn(StringUtils.stringifyException(d));\n+        return null;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Path createPath(String path) throws IOException {\n      Path file \u003d new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      //check whether we are able to create a directory here. If the disk\n      //happens to be RDONLY we will fail\n      try {\n        DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n        return file;\n      } catch (DiskErrorException d) {\n        LOG.warn(StringUtils.stringifyException(d));\n        return null;\n      }\n    }",
      "path": "src/java/org/apache/hadoop/fs/LocalDirAllocator.java"
    }
  }
}