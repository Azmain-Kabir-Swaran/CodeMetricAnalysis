{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HadoopYarnProtoRPC.java",
  "functionName": "getServer",
  "functionId": "getServer___protocol-Class__instance-Object__addr-InetSocketAddress__conf-Configuration__secretManager-SecretManager__? extends TokenIdentifier____numHandlers-int__portRangeConfig-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
  "functionStartLine": 59,
  "functionEndLine": 69,
  "numCommitsSeen": 18,
  "timeTaken": 8219,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "f340d6c894da452d91491f9fbfc0df9327ec083c",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2",
    "d19cfe01642f9582e1fe5d567beb480399c37a01",
    "66137cf17cb4abccd6065819d97edc63c6510477",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "f340d6c894da452d91491f9fbfc0df9327ec083c": "Ymultichange(Yparameterchange,Ybodychange)",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": "Ybodychange",
    "d19cfe01642f9582e1fe5d567beb480399c37a01": "Ybodychange",
    "66137cf17cb4abccd6065819d97edc63c6510477": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 11.64,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public Server getServer(Class protocol, Object instance,\n       InetSocketAddress addr, Configuration conf,\n       SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n       int numHandlers, String portRangeConfig) {\n-    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n-        \" with \" + numHandlers + \" handlers\");\n+    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol {} with {}\"\n+        + \" handlers\", protocol, numHandlers);\n     \n     return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n         instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers, String portRangeConfig) {\n    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol {} with {}\"\n        + \" handlers\", protocol, numHandlers);\n    \n    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n        instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers, String portRangeConfig) {\n    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    \n    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n        instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java"
      }
    },
    "f340d6c894da452d91491f9fbfc0df9327ec083c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4079. Allow MR AppMaster to limit ephemeral port range.(bobby via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329694 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 6:03 AM",
      "commitName": "f340d6c894da452d91491f9fbfc0df9327ec083c",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-4079. Allow MR AppMaster to limit ephemeral port range.(bobby via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329694 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/12 6:03 AM",
          "commitName": "f340d6c894da452d91491f9fbfc0df9327ec083c",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "23/11/11 2:04 PM",
          "commitNameOld": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 152.62,
          "commitsBetweenForRepo": 1091,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n   public Server getServer(Class protocol, Object instance,\n       InetSocketAddress addr, Configuration conf,\n       SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n-      int numHandlers) {\n+      int numHandlers, String portRangeConfig) {\n     LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n         \" with \" + numHandlers + \" handlers\");\n     \n     return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n-        instance, addr, conf, secretManager, numHandlers);\n+        instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers, String portRangeConfig) {\n    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    \n    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n        instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
          "extendedDetails": {
            "oldValue": "[protocol-Class, instance-Object, addr-InetSocketAddress, conf-Configuration, secretManager-SecretManager\u003c? extends TokenIdentifier\u003e, numHandlers-int]",
            "newValue": "[protocol-Class, instance-Object, addr-InetSocketAddress, conf-Configuration, secretManager-SecretManager\u003c? extends TokenIdentifier\u003e, numHandlers-int, portRangeConfig-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4079. Allow MR AppMaster to limit ephemeral port range.(bobby via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329694 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/12 6:03 AM",
          "commitName": "f340d6c894da452d91491f9fbfc0df9327ec083c",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "23/11/11 2:04 PM",
          "commitNameOld": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 152.62,
          "commitsBetweenForRepo": 1091,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n   public Server getServer(Class protocol, Object instance,\n       InetSocketAddress addr, Configuration conf,\n       SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n-      int numHandlers) {\n+      int numHandlers, String portRangeConfig) {\n     LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n         \" with \" + numHandlers + \" handlers\");\n     \n     return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n-        instance, addr, conf, secretManager, numHandlers);\n+        instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers, String portRangeConfig) {\n    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    \n    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n        instance, addr, conf, secretManager, numHandlers, portRangeConfig);\n\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
          "extendedDetails": {}
        }
      ]
    },
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3265. Removed debug logs during job submission to LOG.debug to cut down noise. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1205628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/11/11 2:04 PM",
      "commitName": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "09/11/11 5:41 AM",
      "commitNameOld": "2df83e5b4d7a3516a9c7ec11309023e3c42a869b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.35,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public Server getServer(Class protocol, Object instance,\n       InetSocketAddress addr, Configuration conf,\n       SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n       int numHandlers) {\n-    LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n+    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n         \" with \" + numHandlers + \" handlers\");\n     \n-    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n-          addr, conf, secretManager, numHandlers);\n+    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n+        instance, addr, conf, secretManager, numHandlers);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers) {\n    LOG.debug(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    \n    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, \n        instance, addr, conf, secretManager, numHandlers);\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
      "extendedDetails": {}
    },
    "d19cfe01642f9582e1fe5d567beb480399c37a01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2746. Yarn servers can\u0027t communicate with each other with hadoop.security.authorization set to true (acmurthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:07 PM",
      "commitName": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "05/10/11 4:43 AM",
      "commitNameOld": "66137cf17cb4abccd6065819d97edc63c6510477",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.77,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,11 @@\n   public Server getServer(Class protocol, Object instance,\n       InetSocketAddress addr, Configuration conf,\n       SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n       int numHandlers) {\n     LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n         \" with \" + numHandlers + \" handlers\");\n     \n-    final RPC.Server hadoopServer;\n-    hadoopServer \u003d \n-      RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n+    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n           addr, conf, secretManager, numHandlers);\n \n-    Server server \u003d new Server() {\n-      @Override\n-      public void close() {\n-        hadoopServer.stop();\n-      }\n-\n-      @Override\n-      public int getPort() {\n-        return hadoopServer.getListenerAddress().getPort();\n-      }\n-\n-      @Override\n-      public void join() throws InterruptedException {\n-        hadoopServer.join();\n-      }\n-\n-      @Override\n-      public void start() {\n-        hadoopServer.start();\n-      }\n-    };\n-    return server;\n-\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers) {\n    LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    \n    return RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n          addr, conf, secretManager, numHandlers);\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
      "extendedDetails": {}
    },
    "66137cf17cb4abccd6065819d97edc63c6510477": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3013. Removed YarnConfiguration.YARN_SECURITY_INFO and its usage as it doesn\u0027t affect security any more. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 4:43 AM",
      "commitName": "66137cf17cb4abccd6065819d97edc63c6510477",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/08/11 10:16 AM",
      "commitNameOld": "7c85f33ce1b209e1e5bb17b9dd2ad270ca451d60",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 40.77,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,36 @@\n   public Server getServer(Class protocol, Object instance,\n       InetSocketAddress addr, Configuration conf,\n       SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n       int numHandlers) {\n     LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n         \" with \" + numHandlers + \" handlers\");\n-    LOG.info(\"Configured SecurityInfo class name is \"\n-        + conf.get(YarnConfiguration.YARN_SECURITY_INFO));\n     \n     final RPC.Server hadoopServer;\n     hadoopServer \u003d \n       RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n           addr, conf, secretManager, numHandlers);\n \n     Server server \u003d new Server() {\n       @Override\n       public void close() {\n         hadoopServer.stop();\n       }\n \n       @Override\n       public int getPort() {\n         return hadoopServer.getListenerAddress().getPort();\n       }\n \n       @Override\n       public void join() throws InterruptedException {\n         hadoopServer.join();\n       }\n \n       @Override\n       public void start() {\n         hadoopServer.start();\n       }\n     };\n     return server;\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers) {\n    LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    \n    final RPC.Server hadoopServer;\n    hadoopServer \u003d \n      RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n          addr, conf, secretManager, numHandlers);\n\n    Server server \u003d new Server() {\n      @Override\n      public void close() {\n        hadoopServer.stop();\n      }\n\n      @Override\n      public int getPort() {\n        return hadoopServer.getListenerAddress().getPort();\n      }\n\n      @Override\n      public void join() throws InterruptedException {\n        hadoopServer.join();\n      }\n\n      @Override\n      public void start() {\n        hadoopServer.start();\n      }\n    };\n    return server;\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers) {\n    LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    LOG.info(\"Configured SecurityInfo class name is \"\n        + conf.get(YarnConfiguration.YARN_SECURITY_INFO));\n    \n    final RPC.Server hadoopServer;\n    hadoopServer \u003d \n      RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n          addr, conf, secretManager, numHandlers);\n\n    Server server \u003d new Server() {\n      @Override\n      public void close() {\n        hadoopServer.stop();\n      }\n\n      @Override\n      public int getPort() {\n        return hadoopServer.getListenerAddress().getPort();\n      }\n\n      @Override\n      public void join() throws InterruptedException {\n        hadoopServer.join();\n      }\n\n      @Override\n      public void start() {\n        hadoopServer.start();\n      }\n    };\n    return server;\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,38 @@\n+  public Server getServer(Class protocol, Object instance,\n+      InetSocketAddress addr, Configuration conf,\n+      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n+      int numHandlers) {\n+    LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n+        \" with \" + numHandlers + \" handlers\");\n+    LOG.info(\"Configured SecurityInfo class name is \"\n+        + conf.get(YarnConfiguration.YARN_SECURITY_INFO));\n+    \n+    final RPC.Server hadoopServer;\n+    hadoopServer \u003d \n+      RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n+          addr, conf, secretManager, numHandlers);\n+\n+    Server server \u003d new Server() {\n+      @Override\n+      public void close() {\n+        hadoopServer.stop();\n+      }\n+\n+      @Override\n+      public int getPort() {\n+        return hadoopServer.getListenerAddress().getPort();\n+      }\n+\n+      @Override\n+      public void join() throws InterruptedException {\n+        hadoopServer.join();\n+      }\n+\n+      @Override\n+      public void start() {\n+        hadoopServer.start();\n+      }\n+    };\n+    return server;\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Server getServer(Class protocol, Object instance,\n      InetSocketAddress addr, Configuration conf,\n      SecretManager\u003c? extends TokenIdentifier\u003e secretManager,\n      int numHandlers) {\n    LOG.info(\"Creating a HadoopYarnProtoRpc server for protocol \" + protocol + \n        \" with \" + numHandlers + \" handlers\");\n    LOG.info(\"Configured SecurityInfo class name is \"\n        + conf.get(YarnConfiguration.YARN_SECURITY_INFO));\n    \n    final RPC.Server hadoopServer;\n    hadoopServer \u003d \n      RpcFactoryProvider.getServerFactory(conf).getServer(protocol, instance, \n          addr, conf, secretManager, numHandlers);\n\n    Server server \u003d new Server() {\n      @Override\n      public void close() {\n        hadoopServer.stop();\n      }\n\n      @Override\n      public int getPort() {\n        return hadoopServer.getListenerAddress().getPort();\n      }\n\n      @Override\n      public void join() throws InterruptedException {\n        hadoopServer.join();\n      }\n\n      @Override\n      public void start() {\n        hadoopServer.start();\n      }\n    };\n    return server;\n\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/HadoopYarnProtoRPC.java"
    }
  }
}