{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PipeMapRed.java",
  "functionName": "addJobConfToEnvironment",
  "functionId": "addJobConfToEnvironment___jobconf-JobConf__env-Properties",
  "sourceFilePath": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/PipeMapRed.java",
  "functionStartLine": 238,
  "functionEndLine": 254,
  "numCommitsSeen": 10,
  "timeTaken": 6623,
  "changeHistory": [
    "cc70df98e74142331043a611a3bd8a53ff6a2242",
    "b056048114bf4701ef9dd22486db937cb589e81b",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cc70df98e74142331043a611a3bd8a53ff6a2242": "Ybodychange",
    "b056048114bf4701ef9dd22486db937cb589e81b": "Ymultichange(Yparameterchange,Ybodychange)",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc70df98e74142331043a611a3bd8a53ff6a2242": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5965. Hadoop streaming throws error if list of input files is high. Error is: \"error\u003d7, Argument list too long at if number of input file is high\" (wilfreds via rkanter)\n",
      "commitDate": "03/06/15 6:41 PM",
      "commitName": "cc70df98e74142331043a611a3bd8a53ff6a2242",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "29/10/14 10:29 AM",
      "commitNameOld": "b056048114bf4701ef9dd22486db937cb589e81b",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 217.34,
      "commitsBetweenForRepo": 1838,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   void addJobConfToEnvironment(JobConf jobconf, Properties env) {\n     JobConf conf \u003d new JobConf(jobconf);\n     conf.setDeprecatedProperties();\n-    Iterator it \u003d conf.iterator();\n-    while (it.hasNext()) {\n-      Map.Entry en \u003d (Map.Entry) it.next();\n-      String name \u003d (String) en.getKey();\n-      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n-      String value \u003d conf.get(name); // does variable expansion \n+    int lenLimit \u003d conf.getInt(\"stream.jobconf.truncate.limit\", -1);\n+\n+    for (Entry\u003cString, String\u003e confEntry: conf) {\n+      String name \u003d confEntry.getKey();\n+      String value \u003d conf.get(name); // does variable expansion\n       name \u003d safeEnvVarName(name);\n+      if (lenLimit \u003e -1  \u0026\u0026 value.length() \u003e lenLimit) {\n+        LOG.warn(\"Environment variable \" + name + \" truncated to \" + lenLimit\n+            + \" to  fit system limits.\");\n+        value \u003d value.substring(0, lenLimit);\n+      }\n       envPut(env, name, value);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void addJobConfToEnvironment(JobConf jobconf, Properties env) {\n    JobConf conf \u003d new JobConf(jobconf);\n    conf.setDeprecatedProperties();\n    int lenLimit \u003d conf.getInt(\"stream.jobconf.truncate.limit\", -1);\n\n    for (Entry\u003cString, String\u003e confEntry: conf) {\n      String name \u003d confEntry.getKey();\n      String value \u003d conf.get(name); // does variable expansion\n      name \u003d safeEnvVarName(name);\n      if (lenLimit \u003e -1  \u0026\u0026 value.length() \u003e lenLimit) {\n        LOG.warn(\"Environment variable \" + name + \" truncated to \" + lenLimit\n            + \" to  fit system limits.\");\n        value \u003d value.substring(0, lenLimit);\n      }\n      envPut(env, name, value);\n    }\n  }",
      "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/PipeMapRed.java",
      "extendedDetails": {}
    },
    "b056048114bf4701ef9dd22486db937cb589e81b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-6022. map_input_file is missing from streaming job\nenvironment. Contributed by Jason Lowe.\n",
      "commitDate": "29/10/14 10:29 AM",
      "commitName": "b056048114bf4701ef9dd22486db937cb589e81b",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6022. map_input_file is missing from streaming job\nenvironment. Contributed by Jason Lowe.\n",
          "commitDate": "29/10/14 10:29 AM",
          "commitName": "b056048114bf4701ef9dd22486db937cb589e81b",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/02/12 9:43 AM",
          "commitNameOld": "858c6d2b1f6a3952597d5a662d924f6152e14b4c",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 973.99,
          "commitsBetweenForRepo": 6478,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,13 @@\n-  void addJobConfToEnvironment(JobConf conf, Properties env) {\n+  void addJobConfToEnvironment(JobConf jobconf, Properties env) {\n+    JobConf conf \u003d new JobConf(jobconf);\n+    conf.setDeprecatedProperties();\n     Iterator it \u003d conf.iterator();\n     while (it.hasNext()) {\n       Map.Entry en \u003d (Map.Entry) it.next();\n       String name \u003d (String) en.getKey();\n       //String value \u003d (String)en.getValue(); // does not apply variable expansion\n       String value \u003d conf.get(name); // does variable expansion \n       name \u003d safeEnvVarName(name);\n       envPut(env, name, value);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void addJobConfToEnvironment(JobConf jobconf, Properties env) {\n    JobConf conf \u003d new JobConf(jobconf);\n    conf.setDeprecatedProperties();\n    Iterator it \u003d conf.iterator();\n    while (it.hasNext()) {\n      Map.Entry en \u003d (Map.Entry) it.next();\n      String name \u003d (String) en.getKey();\n      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n      String value \u003d conf.get(name); // does variable expansion \n      name \u003d safeEnvVarName(name);\n      envPut(env, name, value);\n    }\n  }",
          "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/PipeMapRed.java",
          "extendedDetails": {
            "oldValue": "[conf-JobConf, env-Properties]",
            "newValue": "[jobconf-JobConf, env-Properties]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6022. map_input_file is missing from streaming job\nenvironment. Contributed by Jason Lowe.\n",
          "commitDate": "29/10/14 10:29 AM",
          "commitName": "b056048114bf4701ef9dd22486db937cb589e81b",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/02/12 9:43 AM",
          "commitNameOld": "858c6d2b1f6a3952597d5a662d924f6152e14b4c",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 973.99,
          "commitsBetweenForRepo": 6478,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,13 @@\n-  void addJobConfToEnvironment(JobConf conf, Properties env) {\n+  void addJobConfToEnvironment(JobConf jobconf, Properties env) {\n+    JobConf conf \u003d new JobConf(jobconf);\n+    conf.setDeprecatedProperties();\n     Iterator it \u003d conf.iterator();\n     while (it.hasNext()) {\n       Map.Entry en \u003d (Map.Entry) it.next();\n       String name \u003d (String) en.getKey();\n       //String value \u003d (String)en.getValue(); // does not apply variable expansion\n       String value \u003d conf.get(name); // does variable expansion \n       name \u003d safeEnvVarName(name);\n       envPut(env, name, value);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void addJobConfToEnvironment(JobConf jobconf, Properties env) {\n    JobConf conf \u003d new JobConf(jobconf);\n    conf.setDeprecatedProperties();\n    Iterator it \u003d conf.iterator();\n    while (it.hasNext()) {\n      Map.Entry en \u003d (Map.Entry) it.next();\n      String name \u003d (String) en.getKey();\n      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n      String value \u003d conf.get(name); // does variable expansion \n      name \u003d safeEnvVarName(name);\n      envPut(env, name, value);\n    }\n  }",
          "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/PipeMapRed.java",
          "extendedDetails": {}
        }
      ]
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void addJobConfToEnvironment(JobConf conf, Properties env) {\n    Iterator it \u003d conf.iterator();\n    while (it.hasNext()) {\n      Map.Entry en \u003d (Map.Entry) it.next();\n      String name \u003d (String) en.getKey();\n      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n      String value \u003d conf.get(name); // does variable expansion \n      name \u003d safeEnvVarName(name);\n      envPut(env, name, value);\n    }\n  }",
      "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/PipeMapRed.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java",
        "newPath": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/PipeMapRed.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void addJobConfToEnvironment(JobConf conf, Properties env) {\n    Iterator it \u003d conf.iterator();\n    while (it.hasNext()) {\n      Map.Entry en \u003d (Map.Entry) it.next();\n      String name \u003d (String) en.getKey();\n      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n      String value \u003d conf.get(name); // does variable expansion \n      name \u003d safeEnvVarName(name);\n      envPut(env, name, value);\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void addJobConfToEnvironment(JobConf conf, Properties env) {\n    Iterator it \u003d conf.iterator();\n    while (it.hasNext()) {\n      Map.Entry en \u003d (Map.Entry) it.next();\n      String name \u003d (String) en.getKey();\n      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n      String value \u003d conf.get(name); // does variable expansion \n      name \u003d safeEnvVarName(name);\n      envPut(env, name, value);\n    }\n  }",
      "path": "hadoop-mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java",
        "newPath": "hadoop-mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,11 @@\n+  void addJobConfToEnvironment(JobConf conf, Properties env) {\n+    Iterator it \u003d conf.iterator();\n+    while (it.hasNext()) {\n+      Map.Entry en \u003d (Map.Entry) it.next();\n+      String name \u003d (String) en.getKey();\n+      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n+      String value \u003d conf.get(name); // does variable expansion \n+      name \u003d safeEnvVarName(name);\n+      envPut(env, name, value);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void addJobConfToEnvironment(JobConf conf, Properties env) {\n    Iterator it \u003d conf.iterator();\n    while (it.hasNext()) {\n      Map.Entry en \u003d (Map.Entry) it.next();\n      String name \u003d (String) en.getKey();\n      //String value \u003d (String)en.getValue(); // does not apply variable expansion\n      String value \u003d conf.get(name); // does variable expansion \n      name \u003d safeEnvVarName(name);\n      envPut(env, name, value);\n    }\n  }",
      "path": "mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/PipeMapRed.java"
    }
  }
}