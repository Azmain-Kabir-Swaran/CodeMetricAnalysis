{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientUtils.java",
  "functionName": "addToOutstandingSchedulingRequests",
  "functionId": "addToOutstandingSchedulingRequests___requests-Collection__SchedulingRequest____outstandingSchedRequests-Map__Set__String__,List__SchedulingRequest____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/AMRMClientUtils.java",
  "functionStartLine": 162,
  "functionEndLine": 182,
  "numCommitsSeen": 5,
  "timeTaken": 553,
  "changeHistory": [
    "3159bffce23abf35754da2d7d51de7d8c2631ae3"
  ],
  "changeHistoryShort": {
    "3159bffce23abf35754da2d7d51de7d8c2631ae3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3159bffce23abf35754da2d7d51de7d8c2631ae3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7900. [AMRMProxy] AMRMClientRelayer for stateful FederationInterceptor. (Botong Huang via asuresh)\n",
      "commitDate": "17/05/18 8:00 PM",
      "commitName": "3159bffce23abf35754da2d7d51de7d8c2631ae3",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,21 @@\n+  public static void addToOutstandingSchedulingRequests(\n+      Collection\u003cSchedulingRequest\u003e requests,\n+      Map\u003cSet\u003cString\u003e, List\u003cSchedulingRequest\u003e\u003e outstandingSchedRequests) {\n+    for (SchedulingRequest req : requests) {\n+      List\u003cSchedulingRequest\u003e schedulingRequests \u003d outstandingSchedRequests\n+          .computeIfAbsent(req.getAllocationTags(), x -\u003e new LinkedList\u003c\u003e());\n+      SchedulingRequest matchingReq \u003d null;\n+      for (SchedulingRequest schedReq : schedulingRequests) {\n+        if (isMatchingSchedulingRequests(req, schedReq)) {\n+          matchingReq \u003d schedReq;\n+          break;\n+        }\n+      }\n+      if (matchingReq !\u003d null) {\n+        matchingReq.getResourceSizing()\n+            .setNumAllocations(req.getResourceSizing().getNumAllocations());\n+      } else {\n+        schedulingRequests.add(req);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void addToOutstandingSchedulingRequests(\n      Collection\u003cSchedulingRequest\u003e requests,\n      Map\u003cSet\u003cString\u003e, List\u003cSchedulingRequest\u003e\u003e outstandingSchedRequests) {\n    for (SchedulingRequest req : requests) {\n      List\u003cSchedulingRequest\u003e schedulingRequests \u003d outstandingSchedRequests\n          .computeIfAbsent(req.getAllocationTags(), x -\u003e new LinkedList\u003c\u003e());\n      SchedulingRequest matchingReq \u003d null;\n      for (SchedulingRequest schedReq : schedulingRequests) {\n        if (isMatchingSchedulingRequests(req, schedReq)) {\n          matchingReq \u003d schedReq;\n          break;\n        }\n      }\n      if (matchingReq !\u003d null) {\n        matchingReq.getResourceSizing()\n            .setNumAllocations(req.getResourceSizing().getNumAllocations());\n      } else {\n        schedulingRequests.add(req);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/AMRMClientUtils.java"
    }
  }
}