{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppLogAggregatorImpl.java",
  "functionName": "doAppLogAggregationPostCleanUp",
  "functionId": "doAppLogAggregationPostCleanUp",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
  "functionStartLine": 531,
  "functionEndLine": 558,
  "numCommitsSeen": 53,
  "timeTaken": 2250,
  "changeHistory": [
    "c89bdfacc8715fa6d72acd85437ab8cd257c8aad",
    "547f18cb96aeda55cc19b38be2be4d631b3a5f4f",
    "25e2b02122c4ed760227ab33c49d3445c23b9276"
  ],
  "changeHistoryShort": {
    "c89bdfacc8715fa6d72acd85437ab8cd257c8aad": "Ybodychange",
    "547f18cb96aeda55cc19b38be2be4d631b3a5f4f": "Ybodychange",
    "25e2b02122c4ed760227ab33c49d3445c23b9276": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c89bdfacc8715fa6d72acd85437ab8cd257c8aad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9676. Add DEBUG and TRACE level messages to AppLogAggregatorImplâ€¦ (#1261)\n\n* YARN-9676. Add DEBUG and TRACE level messages to AppLogAggregatorImpl and connected classes\r\n\r\n* Using {} placeholder, and increasing loglevel if log aggregation failed.\r\n",
      "commitDate": "14/08/19 8:35 AM",
      "commitName": "c89bdfacc8715fa6d72acd85437ab8cd257c8aad",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "02/08/19 4:38 AM",
      "commitNameOld": "54ac80176e8487b7a18cd9e16a11efa289d0b7df",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 12.16,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   private void doAppLogAggregationPostCleanUp() {\n     // Remove the local app-log-dirs\n     List\u003cPath\u003e localAppLogDirs \u003d new ArrayList\u003cPath\u003e();\n     for (String rootLogDir : dirsHandler.getLogDirsForCleanup()) {\n       Path logPath \u003d new Path(rootLogDir, applicationId);\n       try {\n         // check if log dir exists\n         lfs.getFileStatus(logPath);\n         localAppLogDirs.add(logPath);\n       } catch (UnsupportedFileSystemException ue) {\n-        LOG.warn(\"Log dir \" + rootLogDir + \"is an unsupported file system\", ue);\n+        LOG.warn(\"Log dir {} is in an unsupported file system\", rootLogDir,\n+            ue);\n         continue;\n       } catch (IOException fe) {\n+        LOG.warn(\"An exception occurred while getting file information\", fe);\n         continue;\n       }\n     }\n \n     if (localAppLogDirs.size() \u003e 0) {\n+      LOG.debug(\"Cleaning up {} files\", localAppLogDirs.size());\n       List\u003cPath\u003e localAppLogDirsList \u003d new ArrayList\u003c\u003e();\n       localAppLogDirsList.addAll(localAppLogDirs);\n       DeletionTask deletionTask \u003d new FileDeletionTask(delService,\n           this.userUgi.getShortUserName(), null, localAppLogDirsList);\n       this.delService.delete(deletionTask);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doAppLogAggregationPostCleanUp() {\n    // Remove the local app-log-dirs\n    List\u003cPath\u003e localAppLogDirs \u003d new ArrayList\u003cPath\u003e();\n    for (String rootLogDir : dirsHandler.getLogDirsForCleanup()) {\n      Path logPath \u003d new Path(rootLogDir, applicationId);\n      try {\n        // check if log dir exists\n        lfs.getFileStatus(logPath);\n        localAppLogDirs.add(logPath);\n      } catch (UnsupportedFileSystemException ue) {\n        LOG.warn(\"Log dir {} is in an unsupported file system\", rootLogDir,\n            ue);\n        continue;\n      } catch (IOException fe) {\n        LOG.warn(\"An exception occurred while getting file information\", fe);\n        continue;\n      }\n    }\n\n    if (localAppLogDirs.size() \u003e 0) {\n      LOG.debug(\"Cleaning up {} files\", localAppLogDirs.size());\n      List\u003cPath\u003e localAppLogDirsList \u003d new ArrayList\u003c\u003e();\n      localAppLogDirsList.addAll(localAppLogDirs);\n      DeletionTask deletionTask \u003d new FileDeletionTask(delService,\n          this.userUgi.getShortUserName(), null, localAppLogDirsList);\n      this.delService.delete(deletionTask);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
      "extendedDetails": {}
    },
    "547f18cb96aeda55cc19b38be2be4d631b3a5f4f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6366. Refactor the NodeManager DeletionService to support additional DeletionTask types. Contributed by Shane Kumpf.\n",
      "commitDate": "31/05/17 3:45 AM",
      "commitName": "547f18cb96aeda55cc19b38be2be4d631b3a5f4f",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "06/04/17 2:24 PM",
      "commitNameOld": "1b081ca27e05e97d8b7d284ca24200d43763e481",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 54.56,
      "commitsBetweenForRepo": 288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   private void doAppLogAggregationPostCleanUp() {\n     // Remove the local app-log-dirs\n     List\u003cPath\u003e localAppLogDirs \u003d new ArrayList\u003cPath\u003e();\n     for (String rootLogDir : dirsHandler.getLogDirsForCleanup()) {\n       Path logPath \u003d new Path(rootLogDir, applicationId);\n       try {\n         // check if log dir exists\n         lfs.getFileStatus(logPath);\n         localAppLogDirs.add(logPath);\n       } catch (UnsupportedFileSystemException ue) {\n         LOG.warn(\"Log dir \" + rootLogDir + \"is an unsupported file system\", ue);\n         continue;\n       } catch (IOException fe) {\n         continue;\n       }\n     }\n \n     if (localAppLogDirs.size() \u003e 0) {\n-      this.delService.delete(this.userUgi.getShortUserName(), null,\n-        localAppLogDirs.toArray(new Path[localAppLogDirs.size()]));\n+      List\u003cPath\u003e localAppLogDirsList \u003d new ArrayList\u003c\u003e();\n+      localAppLogDirsList.addAll(localAppLogDirs);\n+      DeletionTask deletionTask \u003d new FileDeletionTask(delService,\n+          this.userUgi.getShortUserName(), null, localAppLogDirsList);\n+      this.delService.delete(deletionTask);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doAppLogAggregationPostCleanUp() {\n    // Remove the local app-log-dirs\n    List\u003cPath\u003e localAppLogDirs \u003d new ArrayList\u003cPath\u003e();\n    for (String rootLogDir : dirsHandler.getLogDirsForCleanup()) {\n      Path logPath \u003d new Path(rootLogDir, applicationId);\n      try {\n        // check if log dir exists\n        lfs.getFileStatus(logPath);\n        localAppLogDirs.add(logPath);\n      } catch (UnsupportedFileSystemException ue) {\n        LOG.warn(\"Log dir \" + rootLogDir + \"is an unsupported file system\", ue);\n        continue;\n      } catch (IOException fe) {\n        continue;\n      }\n    }\n\n    if (localAppLogDirs.size() \u003e 0) {\n      List\u003cPath\u003e localAppLogDirsList \u003d new ArrayList\u003c\u003e();\n      localAppLogDirsList.addAll(localAppLogDirs);\n      DeletionTask deletionTask \u003d new FileDeletionTask(delService,\n          this.userUgi.getShortUserName(), null, localAppLogDirsList);\n      this.delService.delete(deletionTask);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
      "extendedDetails": {}
    },
    "25e2b02122c4ed760227ab33c49d3445c23b9276": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3476. Nodemanager can fail to delete local logs if log aggregation fails. Contributed by Rohith\n",
      "commitDate": "08/05/15 3:45 PM",
      "commitName": "25e2b02122c4ed760227ab33c49d3445c23b9276",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,22 @@\n+  private void doAppLogAggregationPostCleanUp() {\n+    // Remove the local app-log-dirs\n+    List\u003cPath\u003e localAppLogDirs \u003d new ArrayList\u003cPath\u003e();\n+    for (String rootLogDir : dirsHandler.getLogDirsForCleanup()) {\n+      Path logPath \u003d new Path(rootLogDir, applicationId);\n+      try {\n+        // check if log dir exists\n+        lfs.getFileStatus(logPath);\n+        localAppLogDirs.add(logPath);\n+      } catch (UnsupportedFileSystemException ue) {\n+        LOG.warn(\"Log dir \" + rootLogDir + \"is an unsupported file system\", ue);\n+        continue;\n+      } catch (IOException fe) {\n+        continue;\n+      }\n+    }\n+\n+    if (localAppLogDirs.size() \u003e 0) {\n+      this.delService.delete(this.userUgi.getShortUserName(), null,\n+        localAppLogDirs.toArray(new Path[localAppLogDirs.size()]));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void doAppLogAggregationPostCleanUp() {\n    // Remove the local app-log-dirs\n    List\u003cPath\u003e localAppLogDirs \u003d new ArrayList\u003cPath\u003e();\n    for (String rootLogDir : dirsHandler.getLogDirsForCleanup()) {\n      Path logPath \u003d new Path(rootLogDir, applicationId);\n      try {\n        // check if log dir exists\n        lfs.getFileStatus(logPath);\n        localAppLogDirs.add(logPath);\n      } catch (UnsupportedFileSystemException ue) {\n        LOG.warn(\"Log dir \" + rootLogDir + \"is an unsupported file system\", ue);\n        continue;\n      } catch (IOException fe) {\n        continue;\n      }\n    }\n\n    if (localAppLogDirs.size() \u003e 0) {\n      this.delService.delete(this.userUgi.getShortUserName(), null,\n        localAppLogDirs.toArray(new Path[localAppLogDirs.size()]));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java"
    }
  }
}