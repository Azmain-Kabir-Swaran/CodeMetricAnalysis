{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemoryPlan.java",
  "functionName": "getReservationCountForUserOverTime",
  "functionId": "getReservationCountForUserOverTime___user-String__start-long__end-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/InMemoryPlan.java",
  "functionStartLine": 537,
  "functionEndLine": 552,
  "numCommitsSeen": 27,
  "timeTaken": 2595,
  "changeHistory": [
    "742632e346604fd2b263bd42367165638fcf2416",
    "cf4b34282aafee9f6b09d3433c4de1ae4b359168"
  ],
  "changeHistoryShort": {
    "742632e346604fd2b263bd42367165638fcf2416": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "cf4b34282aafee9f6b09d3433c4de1ae4b359168": "Yintroduced"
  },
  "changeHistoryDetails": {
    "742632e346604fd2b263bd42367165638fcf2416": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-4358. Reservation System: Improve relationship between SharingPolicy and ReservationAgent. (Carlo Curino via asuresh)\n",
      "commitDate": "05/12/15 9:26 PM",
      "commitName": "742632e346604fd2b263bd42367165638fcf2416",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4358. Reservation System: Improve relationship between SharingPolicy and ReservationAgent. (Carlo Curino via asuresh)\n",
          "commitDate": "05/12/15 9:26 PM",
          "commitName": "742632e346604fd2b263bd42367165638fcf2416",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "21/11/15 9:59 AM",
          "commitNameOld": "da1016365aba1cee9c06771ab142d077379f27af",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 14.48,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public Resource getConsumptionForUser(String user, long t) {\n+  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n+      String user, long start, long end) {\n     readLock.lock();\n     try {\n-      RLESparseResourceAllocation userResAlloc \u003d userResourceAlloc.get(user);\n+      RLESparseResourceAllocation userResAlloc \u003d\n+          userActiveReservationCount.get(user);\n+\n       if (userResAlloc !\u003d null) {\n-        return userResAlloc.getCapacityAtTime(t);\n+        return userResAlloc.getRangeOverlapping(start, end);\n       } else {\n-        return Resources.clone(ZERO_RESOURCE);\n+        return new RLESparseResourceAllocation(resCalc);\n       }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n      String user, long start, long end) {\n    readLock.lock();\n    try {\n      RLESparseResourceAllocation userResAlloc \u003d\n          userActiveReservationCount.get(user);\n\n      if (userResAlloc !\u003d null) {\n        return userResAlloc.getRangeOverlapping(start, end);\n      } else {\n        return new RLESparseResourceAllocation(resCalc);\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/InMemoryPlan.java",
          "extendedDetails": {
            "oldValue": "getConsumptionForUser",
            "newValue": "getReservationCountForUserOverTime"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4358. Reservation System: Improve relationship between SharingPolicy and ReservationAgent. (Carlo Curino via asuresh)\n",
          "commitDate": "05/12/15 9:26 PM",
          "commitName": "742632e346604fd2b263bd42367165638fcf2416",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "21/11/15 9:59 AM",
          "commitNameOld": "da1016365aba1cee9c06771ab142d077379f27af",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 14.48,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public Resource getConsumptionForUser(String user, long t) {\n+  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n+      String user, long start, long end) {\n     readLock.lock();\n     try {\n-      RLESparseResourceAllocation userResAlloc \u003d userResourceAlloc.get(user);\n+      RLESparseResourceAllocation userResAlloc \u003d\n+          userActiveReservationCount.get(user);\n+\n       if (userResAlloc !\u003d null) {\n-        return userResAlloc.getCapacityAtTime(t);\n+        return userResAlloc.getRangeOverlapping(start, end);\n       } else {\n-        return Resources.clone(ZERO_RESOURCE);\n+        return new RLESparseResourceAllocation(resCalc);\n       }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n      String user, long start, long end) {\n    readLock.lock();\n    try {\n      RLESparseResourceAllocation userResAlloc \u003d\n          userActiveReservationCount.get(user);\n\n      if (userResAlloc !\u003d null) {\n        return userResAlloc.getRangeOverlapping(start, end);\n      } else {\n        return new RLESparseResourceAllocation(resCalc);\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/InMemoryPlan.java",
          "extendedDetails": {
            "oldValue": "[user-String, t-long]",
            "newValue": "[user-String, start-long, end-long]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-4358. Reservation System: Improve relationship between SharingPolicy and ReservationAgent. (Carlo Curino via asuresh)\n",
          "commitDate": "05/12/15 9:26 PM",
          "commitName": "742632e346604fd2b263bd42367165638fcf2416",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "21/11/15 9:59 AM",
          "commitNameOld": "da1016365aba1cee9c06771ab142d077379f27af",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 14.48,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public Resource getConsumptionForUser(String user, long t) {\n+  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n+      String user, long start, long end) {\n     readLock.lock();\n     try {\n-      RLESparseResourceAllocation userResAlloc \u003d userResourceAlloc.get(user);\n+      RLESparseResourceAllocation userResAlloc \u003d\n+          userActiveReservationCount.get(user);\n+\n       if (userResAlloc !\u003d null) {\n-        return userResAlloc.getCapacityAtTime(t);\n+        return userResAlloc.getRangeOverlapping(start, end);\n       } else {\n-        return Resources.clone(ZERO_RESOURCE);\n+        return new RLESparseResourceAllocation(resCalc);\n       }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n      String user, long start, long end) {\n    readLock.lock();\n    try {\n      RLESparseResourceAllocation userResAlloc \u003d\n          userActiveReservationCount.get(user);\n\n      if (userResAlloc !\u003d null) {\n        return userResAlloc.getRangeOverlapping(start, end);\n      } else {\n        return new RLESparseResourceAllocation(resCalc);\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/InMemoryPlan.java",
          "extendedDetails": {
            "oldValue": "Resource",
            "newValue": "RLESparseResourceAllocation"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4358. Reservation System: Improve relationship between SharingPolicy and ReservationAgent. (Carlo Curino via asuresh)\n",
          "commitDate": "05/12/15 9:26 PM",
          "commitName": "742632e346604fd2b263bd42367165638fcf2416",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "21/11/15 9:59 AM",
          "commitNameOld": "da1016365aba1cee9c06771ab142d077379f27af",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 14.48,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public Resource getConsumptionForUser(String user, long t) {\n+  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n+      String user, long start, long end) {\n     readLock.lock();\n     try {\n-      RLESparseResourceAllocation userResAlloc \u003d userResourceAlloc.get(user);\n+      RLESparseResourceAllocation userResAlloc \u003d\n+          userActiveReservationCount.get(user);\n+\n       if (userResAlloc !\u003d null) {\n-        return userResAlloc.getCapacityAtTime(t);\n+        return userResAlloc.getRangeOverlapping(start, end);\n       } else {\n-        return Resources.clone(ZERO_RESOURCE);\n+        return new RLESparseResourceAllocation(resCalc);\n       }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RLESparseResourceAllocation getReservationCountForUserOverTime(\n      String user, long start, long end) {\n    readLock.lock();\n    try {\n      RLESparseResourceAllocation userResAlloc \u003d\n          userActiveReservationCount.get(user);\n\n      if (userResAlloc !\u003d null) {\n        return userResAlloc.getRangeOverlapping(start, end);\n      } else {\n        return new RLESparseResourceAllocation(resCalc);\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/InMemoryPlan.java",
          "extendedDetails": {}
        }
      ]
    },
    "cf4b34282aafee9f6b09d3433c4de1ae4b359168": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1709. In-memory data structures used to track resources over time to enable reservations.\n(cherry picked from commit 0d8b2cd88b958b1e602fd4ea4078ef8d4742a7c3)\n",
      "commitDate": "03/10/14 3:41 PM",
      "commitName": "cf4b34282aafee9f6b09d3433c4de1ae4b359168",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,13 @@\n+  public Resource getConsumptionForUser(String user, long t) {\n+    readLock.lock();\n+    try {\n+      RLESparseResourceAllocation userResAlloc \u003d userResourceAlloc.get(user);\n+      if (userResAlloc !\u003d null) {\n+        return userResAlloc.getCapacityAtTime(t);\n+      } else {\n+        return Resources.clone(ZERO_RESOURCE);\n+      }\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getConsumptionForUser(String user, long t) {\n    readLock.lock();\n    try {\n      RLESparseResourceAllocation userResAlloc \u003d userResourceAlloc.get(user);\n      if (userResAlloc !\u003d null) {\n        return userResAlloc.getCapacityAtTime(t);\n      } else {\n        return Resources.clone(ZERO_RESOURCE);\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/InMemoryPlan.java"
    }
  }
}