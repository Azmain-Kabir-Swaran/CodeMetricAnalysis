{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Log4jWarningErrorMetricsAppender.java",
  "functionName": "cleanupMessages",
  "functionId": "cleanupMessages___map-Map__String,SortedMap__Long,Integer______purgeInformation-SortedSet__PurgeElement____cutoff-long__mapTargetSize-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Log4jWarningErrorMetricsAppender.java",
  "functionStartLine": 396,
  "functionEndLine": 421,
  "numCommitsSeen": 2,
  "timeTaken": 556,
  "changeHistory": [
    "bad070fe15a642cc6f3a165612fbd272187e03cb"
  ],
  "changeHistoryShort": {
    "bad070fe15a642cc6f3a165612fbd272187e03cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bad070fe15a642cc6f3a165612fbd272187e03cb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2901. Add errors and warning metrics page to RM, NM web UI. (Varun Vasudev via wangda)\n",
      "commitDate": "02/04/15 5:23 PM",
      "commitName": "bad070fe15a642cc6f3a165612fbd272187e03cb",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+    void cleanupMessages(Map\u003cString, SortedMap\u003cLong, Integer\u003e\u003e map,\n+            SortedSet\u003cPurgeElement\u003e purgeInformation, long cutoff,\n+            int mapTargetSize) {\n+\n+      PurgeElement el \u003d new PurgeElement(\"\", cutoff);\n+      synchronized (lock) {\n+        SortedSet\u003cPurgeElement\u003e removeSet \u003d purgeInformation.headSet(el);\n+        Iterator\u003cPurgeElement\u003e it \u003d removeSet.iterator();\n+        while (it.hasNext()) {\n+          PurgeElement p \u003d it.next();\n+          map.remove(p.message);\n+          it.remove();\n+        }\n+\n+        // don\u0027t keep more mapTargetSize keys\n+        if (purgeInformation.size() \u003e mapTargetSize) {\n+          Object[] array \u003d purgeInformation.toArray();\n+          int cutoffIndex \u003d purgeInformation.size() - mapTargetSize;\n+          for (int i \u003d 0; i \u003c cutoffIndex; ++i) {\n+            PurgeElement p \u003d (PurgeElement) array[i];\n+            map.remove(p.message);\n+            purgeInformation.remove(p);\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void cleanupMessages(Map\u003cString, SortedMap\u003cLong, Integer\u003e\u003e map,\n            SortedSet\u003cPurgeElement\u003e purgeInformation, long cutoff,\n            int mapTargetSize) {\n\n      PurgeElement el \u003d new PurgeElement(\"\", cutoff);\n      synchronized (lock) {\n        SortedSet\u003cPurgeElement\u003e removeSet \u003d purgeInformation.headSet(el);\n        Iterator\u003cPurgeElement\u003e it \u003d removeSet.iterator();\n        while (it.hasNext()) {\n          PurgeElement p \u003d it.next();\n          map.remove(p.message);\n          it.remove();\n        }\n\n        // don\u0027t keep more mapTargetSize keys\n        if (purgeInformation.size() \u003e mapTargetSize) {\n          Object[] array \u003d purgeInformation.toArray();\n          int cutoffIndex \u003d purgeInformation.size() - mapTargetSize;\n          for (int i \u003d 0; i \u003c cutoffIndex; ++i) {\n            PurgeElement p \u003d (PurgeElement) array[i];\n            map.remove(p.message);\n            purgeInformation.remove(p);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Log4jWarningErrorMetricsAppender.java"
    }
  }
}