{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtobufRpcEngine.java",
  "functionName": "getProxy",
  "functionId": "getProxy___protocol-Class__T____clientVersion-long__addr-InetSocketAddress__ticket-UserGroupInformation__conf-Configuration__factory-SocketFactory__rpcTimeout-int__connectionRetryPolicy-RetryPolicy__fallbackToSimpleAuth-AtomicBoolean__alignmentContext-AlignmentContext",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java",
  "functionStartLine": 94,
  "functionEndLine": 105,
  "numCommitsSeen": 124,
  "timeTaken": 2837,
  "changeHistory": [
    "e880660a204b6fd0e5a0799393a4d36359765a54",
    "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5"
  ],
  "changeHistoryShort": {
    "e880660a204b6fd0e5a0799393a4d36359765a54": "Ymultichange(Yparameterchange,Ybodychange)",
    "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e880660a204b6fd0e5a0799393a4d36359765a54": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13399. [SBN read] Make Client field AlignmentContext non-static. Contributed by Plamen Jeliazkov.",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "e880660a204b6fd0e5a0799393a4d36359765a54",
      "commitAuthor": "Plamen Jeliazkov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13399. [SBN read] Make Client field AlignmentContext non-static. Contributed by Plamen Jeliazkov.",
          "commitDate": "24/12/18 9:33 AM",
          "commitName": "e880660a204b6fd0e5a0799393a4d36359765a54",
          "commitAuthor": "Plamen Jeliazkov",
          "commitDateOld": "24/12/18 9:33 AM",
          "commitNameOld": "c9d73437e881296282abe46a6b3196befc8cef72",
          "commitAuthorOld": "Plamen Jeliazkov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n   public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n       InetSocketAddress addr, UserGroupInformation ticket, Configuration conf,\n       SocketFactory factory, int rpcTimeout, RetryPolicy connectionRetryPolicy,\n-      AtomicBoolean fallbackToSimpleAuth) throws IOException {\n+      AtomicBoolean fallbackToSimpleAuth, AlignmentContext alignmentContext)\n+      throws IOException {\n \n     final Invoker invoker \u003d new Invoker(protocol, addr, ticket, conf, factory,\n-        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth);\n+        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth,\n+        alignmentContext);\n     return new ProtocolProxy\u003cT\u003e(protocol, (T) Proxy.newProxyInstance(\n         protocol.getClassLoader(), new Class[]{protocol}, invoker), false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n      InetSocketAddress addr, UserGroupInformation ticket, Configuration conf,\n      SocketFactory factory, int rpcTimeout, RetryPolicy connectionRetryPolicy,\n      AtomicBoolean fallbackToSimpleAuth, AlignmentContext alignmentContext)\n      throws IOException {\n\n    final Invoker invoker \u003d new Invoker(protocol, addr, ticket, conf, factory,\n        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth,\n        alignmentContext);\n    return new ProtocolProxy\u003cT\u003e(protocol, (T) Proxy.newProxyInstance(\n        protocol.getClassLoader(), new Class[]{protocol}, invoker), false);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java",
          "extendedDetails": {
            "oldValue": "[protocol-Class\u003cT\u003e, clientVersion-long, addr-InetSocketAddress, ticket-UserGroupInformation, conf-Configuration, factory-SocketFactory, rpcTimeout-int, connectionRetryPolicy-RetryPolicy, fallbackToSimpleAuth-AtomicBoolean]",
            "newValue": "[protocol-Class\u003cT\u003e, clientVersion-long, addr-InetSocketAddress, ticket-UserGroupInformation, conf-Configuration, factory-SocketFactory, rpcTimeout-int, connectionRetryPolicy-RetryPolicy, fallbackToSimpleAuth-AtomicBoolean, alignmentContext-AlignmentContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13399. [SBN read] Make Client field AlignmentContext non-static. Contributed by Plamen Jeliazkov.",
          "commitDate": "24/12/18 9:33 AM",
          "commitName": "e880660a204b6fd0e5a0799393a4d36359765a54",
          "commitAuthor": "Plamen Jeliazkov",
          "commitDateOld": "24/12/18 9:33 AM",
          "commitNameOld": "c9d73437e881296282abe46a6b3196befc8cef72",
          "commitAuthorOld": "Plamen Jeliazkov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n   public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n       InetSocketAddress addr, UserGroupInformation ticket, Configuration conf,\n       SocketFactory factory, int rpcTimeout, RetryPolicy connectionRetryPolicy,\n-      AtomicBoolean fallbackToSimpleAuth) throws IOException {\n+      AtomicBoolean fallbackToSimpleAuth, AlignmentContext alignmentContext)\n+      throws IOException {\n \n     final Invoker invoker \u003d new Invoker(protocol, addr, ticket, conf, factory,\n-        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth);\n+        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth,\n+        alignmentContext);\n     return new ProtocolProxy\u003cT\u003e(protocol, (T) Proxy.newProxyInstance(\n         protocol.getClassLoader(), new Class[]{protocol}, invoker), false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n      InetSocketAddress addr, UserGroupInformation ticket, Configuration conf,\n      SocketFactory factory, int rpcTimeout, RetryPolicy connectionRetryPolicy,\n      AtomicBoolean fallbackToSimpleAuth, AlignmentContext alignmentContext)\n      throws IOException {\n\n    final Invoker invoker \u003d new Invoker(protocol, addr, ticket, conf, factory,\n        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth,\n        alignmentContext);\n    return new ProtocolProxy\u003cT\u003e(protocol, (T) Proxy.newProxyInstance(\n        protocol.getClassLoader(), new Class[]{protocol}, invoker), false);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java",
          "extendedDetails": {}
        }
      ]
    },
    "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7073. Allow falling back to a non-SASL connection on DataTransferProtocol in several edge cases. Contributed by Chris Nauroth.\n",
      "commitDate": "19/09/14 9:23 PM",
      "commitName": "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,10 @@\n+  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n+      InetSocketAddress addr, UserGroupInformation ticket, Configuration conf,\n+      SocketFactory factory, int rpcTimeout, RetryPolicy connectionRetryPolicy,\n+      AtomicBoolean fallbackToSimpleAuth) throws IOException {\n+\n+    final Invoker invoker \u003d new Invoker(protocol, addr, ticket, conf, factory,\n+        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth);\n+    return new ProtocolProxy\u003cT\u003e(protocol, (T) Proxy.newProxyInstance(\n+        protocol.getClassLoader(), new Class[]{protocol}, invoker), false);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n      InetSocketAddress addr, UserGroupInformation ticket, Configuration conf,\n      SocketFactory factory, int rpcTimeout, RetryPolicy connectionRetryPolicy,\n      AtomicBoolean fallbackToSimpleAuth) throws IOException {\n\n    final Invoker invoker \u003d new Invoker(protocol, addr, ticket, conf, factory,\n        rpcTimeout, connectionRetryPolicy, fallbackToSimpleAuth);\n    return new ProtocolProxy\u003cT\u003e(protocol, (T) Proxy.newProxyInstance(\n        protocol.getClassLoader(), new Class[]{protocol}, invoker), false);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java"
    }
  }
}