{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineStorageUtils.java",
  "functionName": "calculateTheClosestNextRowKeyForPrefix",
  "functionId": "calculateTheClosestNextRowKeyForPrefix___rowKeyPrefix-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/HBaseTimelineStorageUtils.java",
  "functionStartLine": 93,
  "functionEndLine": 118,
  "numCommitsSeen": 14,
  "timeTaken": 2329,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "4481561e4a3433197dd8e73f38856eef84f0fd03"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymovefromfile",
    "4481561e4a3433197dd8e73f38856eef84f0fd03": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static byte[] calculateTheClosestNextRowKeyForPrefix(\n      byte[] rowKeyPrefix) {\n    // Essentially we are treating it like an \u0027unsigned very very long\u0027 and\n    // doing +1 manually.\n    // Search for the place where the trailing 0xFFs start\n    int offset \u003d rowKeyPrefix.length;\n    while (offset \u003e 0) {\n      if (rowKeyPrefix[offset - 1] !\u003d (byte) 0xFF) {\n        break;\n      }\n      offset--;\n    }\n\n    if (offset \u003d\u003d 0) {\n      // We got an 0xFFFF... (only FFs) stopRow value which is\n      // the last possible prefix before the end of the table.\n      // So set it to stop at the \u0027end of the table\u0027\n      return HConstants.EMPTY_END_ROW;\n    }\n\n    // Copy the right length of the original\n    byte[] newStopRow \u003d Arrays.copyOfRange(rowKeyPrefix, 0, offset);\n    // And increment the last one\n    newStopRow[newStopRow.length - 1]++;\n    return newStopRow;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/HBaseTimelineStorageUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/HBaseTimelineStorageUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/HBaseTimelineStorageUtils.java",
        "oldMethodName": "calculateTheClosestNextRowKeyForPrefix",
        "newMethodName": "calculateTheClosestNextRowKeyForPrefix"
      }
    },
    "4481561e4a3433197dd8e73f38856eef84f0fd03": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5739. Provide timeline reader API to list available timeline entity types for one application. Contributed by Li Lu.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "4481561e4a3433197dd8e73f38856eef84f0fd03",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,26 @@\n+  public static byte[] calculateTheClosestNextRowKeyForPrefix(\n+      byte[] rowKeyPrefix) {\n+    // Essentially we are treating it like an \u0027unsigned very very long\u0027 and\n+    // doing +1 manually.\n+    // Search for the place where the trailing 0xFFs start\n+    int offset \u003d rowKeyPrefix.length;\n+    while (offset \u003e 0) {\n+      if (rowKeyPrefix[offset - 1] !\u003d (byte) 0xFF) {\n+        break;\n+      }\n+      offset--;\n+    }\n+\n+    if (offset \u003d\u003d 0) {\n+      // We got an 0xFFFF... (only FFs) stopRow value which is\n+      // the last possible prefix before the end of the table.\n+      // So set it to stop at the \u0027end of the table\u0027\n+      return HConstants.EMPTY_END_ROW;\n+    }\n+\n+    // Copy the right length of the original\n+    byte[] newStopRow \u003d Arrays.copyOfRange(rowKeyPrefix, 0, offset);\n+    // And increment the last one\n+    newStopRow[newStopRow.length - 1]++;\n+    return newStopRow;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static byte[] calculateTheClosestNextRowKeyForPrefix(\n      byte[] rowKeyPrefix) {\n    // Essentially we are treating it like an \u0027unsigned very very long\u0027 and\n    // doing +1 manually.\n    // Search for the place where the trailing 0xFFs start\n    int offset \u003d rowKeyPrefix.length;\n    while (offset \u003e 0) {\n      if (rowKeyPrefix[offset - 1] !\u003d (byte) 0xFF) {\n        break;\n      }\n      offset--;\n    }\n\n    if (offset \u003d\u003d 0) {\n      // We got an 0xFFFF... (only FFs) stopRow value which is\n      // the last possible prefix before the end of the table.\n      // So set it to stop at the \u0027end of the table\u0027\n      return HConstants.EMPTY_END_ROW;\n    }\n\n    // Copy the right length of the original\n    byte[] newStopRow \u003d Arrays.copyOfRange(rowKeyPrefix, 0, offset);\n    // And increment the last one\n    newStopRow[newStopRow.length - 1]++;\n    return newStopRow;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/HBaseTimelineStorageUtils.java"
    }
  }
}