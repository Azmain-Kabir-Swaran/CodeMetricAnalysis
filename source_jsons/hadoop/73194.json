{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "addDefaultApps",
  "functionId": "addDefaultApps___parent-ContextHandlerCollection__appDir-String(modifiers-final)__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 785,
  "functionEndLine": 832,
  "numCommitsSeen": 126,
  "timeTaken": 6482,
  "changeHistory": [
    "3d41f330186f6481850b46e0c345d3ecf7b1b818",
    "294695dd57cb75f2756a31a54264bdd37b32bb01",
    "89b49167a5a7b78cb25d2ee56ac011f344e9c9e4",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "56b9500bbd44b79c3c3be84a17c97502f923c6f8",
    "e27fffdb9036d9ed9759d59b964020423b982e22",
    "611aa77f750986190a94ee88d1148a05f66513d0",
    "a6f20d80de3adbebacd586a534b474030ff608e9",
    "4539131102e01bd150d147c16e33d0dd1e9a031a",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
    "ec8ed4e95158f79d564fc3f5c327e807e87bcef2",
    "fc1fab9084ae2d857da57c16109ac97dcab62e15",
    "59586d801543a4209f2daf277c07a4f4e55414ba",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "4b8e1bda2d329604398ed199456aa6ae3cd8ffa3",
    "7785232da5a1db2d06f5d208ce3258c342a4d19c",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "3d41f330186f6481850b46e0c345d3ecf7b1b818": "Ybodychange",
    "294695dd57cb75f2756a31a54264bdd37b32bb01": "Ybodychange",
    "89b49167a5a7b78cb25d2ee56ac011f344e9c9e4": "Ybodychange",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ybodychange",
    "56b9500bbd44b79c3c3be84a17c97502f923c6f8": "Ybodychange",
    "e27fffdb9036d9ed9759d59b964020423b982e22": "Ybodychange",
    "611aa77f750986190a94ee88d1148a05f66513d0": "Ybodychange",
    "a6f20d80de3adbebacd586a534b474030ff608e9": "Ybodychange",
    "4539131102e01bd150d147c16e33d0dd1e9a031a": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Yfilerename",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": "Ybodychange",
    "ec8ed4e95158f79d564fc3f5c327e807e87bcef2": "Ybodychange",
    "fc1fab9084ae2d857da57c16109ac97dcab62e15": "Ybodychange",
    "59586d801543a4209f2daf277c07a4f4e55414ba": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "4b8e1bda2d329604398ed199456aa6ae3cd8ffa3": "Ybodychange",
    "7785232da5a1db2d06f5d208ce3258c342a4d19c": "Ymultichange(Yparameterchange,Ybodychange)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d41f330186f6481850b46e0c345d3ecf7b1b818": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16152. Upgrade Eclipse Jetty version to 9.4.x. Contributed by Yuming Wang, Siyao Meng.\n\nCo-authored-By: Siyao Meng \u003csmeng@cloudera.com\u003e\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "18/10/19 8:25 AM",
      "commitName": "3d41f330186f6481850b46e0c345d3ecf7b1b818",
      "commitAuthor": "Yuming Wang",
      "commitDateOld": "15/10/19 1:55 PM",
      "commitNameOld": "c39e9fc9a3ce7bf6f627c003526fa903a69c2646",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,48 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n     // and it\u0027s enabled.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     boolean logsEnabled \u003d conf.getBoolean(\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n     if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n       ServletContextHandler logContext \u003d\n           new ServletContextHandler(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       SessionHandler handler \u003d new SessionHandler();\n-      SessionManager sm \u003d handler.getSessionManager();\n-      if (sm instanceof AbstractSessionManager) {\n-        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n-        asm.setHttpOnly(true);\n-        asm.getSessionCookieConfig().setSecure(true);\n-      }\n+      handler.setHttpOnly(true);\n+      handler.getSessionCookieConfig().setSecure(true);\n       logContext.setSessionHandler(handler);\n       logContext.addAliasCheck(new AllowSymLinkAliasChecker());\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(logContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     ServletContextHandler staticContext \u003d\n         new ServletContextHandler(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(WebServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     @SuppressWarnings(\"unchecked\")\n     Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n     params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n     params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n     SessionHandler handler \u003d new SessionHandler();\n-    SessionManager sm \u003d handler.getSessionManager();\n-    if (sm instanceof AbstractSessionManager) {\n-      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n-      asm.setHttpOnly(true);\n-      asm.getSessionCookieConfig().setSecure(true);\n-    }\n+    handler.setHttpOnly(true);\n+    handler.getSessionCookieConfig().setSecure(true);\n     staticContext.setSessionHandler(handler);\n     staticContext.addAliasCheck(new AllowSymLinkAliasChecker());\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it\u0027s enabled.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled \u003d conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n      ServletContextHandler logContext \u003d\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      handler.setHttpOnly(true);\n      handler.getSessionCookieConfig().setSecure(true);\n      logContext.setSessionHandler(handler);\n      logContext.addAliasCheck(new AllowSymLinkAliasChecker());\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext \u003d\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(WebServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler \u003d new SessionHandler();\n    handler.setHttpOnly(true);\n    handler.getSessionCookieConfig().setSecure(true);\n    staticContext.setSessionHandler(handler);\n    staticContext.addAliasCheck(new AllowSymLinkAliasChecker());\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "294695dd57cb75f2756a31a54264bdd37b32bb01": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16314.  Make sure all web end points are covered by the same authentication filter.\n               Contributed by Prabhu Joseph\n",
      "commitDate": "05/06/19 3:55 PM",
      "commitName": "294695dd57cb75f2756a31a54264bdd37b32bb01",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/01/19 2:54 PM",
      "commitNameOld": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 152.0,
      "commitsBetweenForRepo": 1072,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n     // and it\u0027s enabled.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     boolean logsEnabled \u003d conf.getBoolean(\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n     if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n       ServletContextHandler logContext \u003d\n           new ServletContextHandler(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       SessionHandler handler \u003d new SessionHandler();\n       SessionManager sm \u003d handler.getSessionManager();\n       if (sm instanceof AbstractSessionManager) {\n         AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n         asm.setHttpOnly(true);\n         asm.getSessionCookieConfig().setSecure(true);\n       }\n       logContext.setSessionHandler(handler);\n       logContext.addAliasCheck(new AllowSymLinkAliasChecker());\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(logContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     ServletContextHandler staticContext \u003d\n         new ServletContextHandler(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n-    staticContext.addServlet(DefaultServlet.class, \"/*\");\n+    staticContext.addServlet(WebServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     @SuppressWarnings(\"unchecked\")\n     Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n     params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n     params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n     SessionHandler handler \u003d new SessionHandler();\n     SessionManager sm \u003d handler.getSessionManager();\n     if (sm instanceof AbstractSessionManager) {\n       AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n       asm.setHttpOnly(true);\n       asm.getSessionCookieConfig().setSecure(true);\n     }\n     staticContext.setSessionHandler(handler);\n     staticContext.addAliasCheck(new AllowSymLinkAliasChecker());\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it\u0027s enabled.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled \u003d conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n      ServletContextHandler logContext \u003d\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      SessionManager sm \u003d handler.getSessionManager();\n      if (sm instanceof AbstractSessionManager) {\n        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n        asm.setHttpOnly(true);\n        asm.getSessionCookieConfig().setSecure(true);\n      }\n      logContext.setSessionHandler(handler);\n      logContext.addAliasCheck(new AllowSymLinkAliasChecker());\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext \u003d\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(WebServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler \u003d new SessionHandler();\n    SessionManager sm \u003d handler.getSessionManager();\n    if (sm instanceof AbstractSessionManager) {\n      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n      asm.setHttpOnly(true);\n      asm.getSessionCookieConfig().setSecure(true);\n    }\n    staticContext.setSessionHandler(handler);\n    staticContext.addAliasCheck(new AllowSymLinkAliasChecker());\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "89b49167a5a7b78cb25d2ee56ac011f344e9c9e4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15903. Allow HttpServer2 to discover resources in /static when symlinks are used. Contributed by Inigo Goiri.\n",
      "commitDate": "08/11/18 2:52 PM",
      "commitName": "89b49167a5a7b78cb25d2ee56ac011f344e9c9e4",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "10/10/18 9:51 PM",
      "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 28.75,
      "commitsBetweenForRepo": 278,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,56 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n     // and it\u0027s enabled.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     boolean logsEnabled \u003d conf.getBoolean(\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n     if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n       ServletContextHandler logContext \u003d\n           new ServletContextHandler(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       SessionHandler handler \u003d new SessionHandler();\n       SessionManager sm \u003d handler.getSessionManager();\n       if (sm instanceof AbstractSessionManager) {\n         AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n         asm.setHttpOnly(true);\n         asm.getSessionCookieConfig().setSecure(true);\n       }\n       logContext.setSessionHandler(handler);\n+      logContext.addAliasCheck(new AllowSymLinkAliasChecker());\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(logContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     ServletContextHandler staticContext \u003d\n         new ServletContextHandler(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     @SuppressWarnings(\"unchecked\")\n     Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n     params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n     params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n     SessionHandler handler \u003d new SessionHandler();\n     SessionManager sm \u003d handler.getSessionManager();\n     if (sm instanceof AbstractSessionManager) {\n       AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n       asm.setHttpOnly(true);\n       asm.getSessionCookieConfig().setSecure(true);\n     }\n     staticContext.setSessionHandler(handler);\n+    staticContext.addAliasCheck(new AllowSymLinkAliasChecker());\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it\u0027s enabled.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled \u003d conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n      ServletContextHandler logContext \u003d\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      SessionManager sm \u003d handler.getSessionManager();\n      if (sm instanceof AbstractSessionManager) {\n        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n        asm.setHttpOnly(true);\n        asm.getSessionCookieConfig().setSecure(true);\n      }\n      logContext.setSessionHandler(handler);\n      logContext.addAliasCheck(new AllowSymLinkAliasChecker());\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext \u003d\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler \u003d new SessionHandler();\n    SessionManager sm \u003d handler.getSessionManager();\n    if (sm instanceof AbstractSessionManager) {\n      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n      asm.setHttpOnly(true);\n      asm.getSessionCookieConfig().setSecure(true);\n    }\n    staticContext.setSessionHandler(handler);\n    staticContext.addAliasCheck(new AllowSymLinkAliasChecker());\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "19/08/16 9:22 AM",
      "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 69.28,
      "commitsBetweenForRepo": 490,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,54 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n     // and it\u0027s enabled.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     boolean logsEnabled \u003d conf.getBoolean(\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n     if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n-      Context logContext \u003d new Context(parent, \"/logs\");\n+      ServletContextHandler logContext \u003d\n+          new ServletContextHandler(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n-        params.put(\n-            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n+        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       SessionHandler handler \u003d new SessionHandler();\n       SessionManager sm \u003d handler.getSessionManager();\n       if (sm instanceof AbstractSessionManager) {\n         AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n         asm.setHttpOnly(true);\n-        asm.setSecureCookies(true);\n+        asm.getSessionCookieConfig().setSecure(true);\n       }\n       logContext.setSessionHandler(handler);\n       setContextAttributes(logContext, conf);\n-      addNoCacheFilter(webAppContext);\n+      addNoCacheFilter(logContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n-    Context staticContext \u003d new Context(parent, \"/static\");\n+    ServletContextHandler staticContext \u003d\n+        new ServletContextHandler(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     @SuppressWarnings(\"unchecked\")\n     Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n-    params.put(\"org.mortbay.jetty.servlet.Default.dirAllowed\", \"false\");\n+    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n+    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n     SessionHandler handler \u003d new SessionHandler();\n     SessionManager sm \u003d handler.getSessionManager();\n     if (sm instanceof AbstractSessionManager) {\n       AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n       asm.setHttpOnly(true);\n-      asm.setSecureCookies(true);\n+      asm.getSessionCookieConfig().setSecure(true);\n     }\n     staticContext.setSessionHandler(handler);\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it\u0027s enabled.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled \u003d conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n      ServletContextHandler logContext \u003d\n          new ServletContextHandler(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\"org.eclipse.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      SessionManager sm \u003d handler.getSessionManager();\n      if (sm instanceof AbstractSessionManager) {\n        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n        asm.setHttpOnly(true);\n        asm.getSessionCookieConfig().setSecure(true);\n      }\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(logContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    ServletContextHandler staticContext \u003d\n        new ServletContextHandler(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n    params.put(\"org.eclipse.jetty.servlet.Default.dirAllowed\", \"false\");\n    params.put(\"org.eclipse.jetty.servlet.Default.gzip\", \"true\");\n    SessionHandler handler \u003d new SessionHandler();\n    SessionManager sm \u003d handler.getSessionManager();\n    if (sm instanceof AbstractSessionManager) {\n      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n      asm.setHttpOnly(true);\n      asm.getSessionCookieConfig().setSecure(true);\n    }\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "56b9500bbd44b79c3c3be84a17c97502f923c6f8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12584. Disable browsing the static directory in HttpServer2. Contributed by Robert Kanter.\n",
      "commitDate": "11/01/16 8:34 PM",
      "commitName": "56b9500bbd44b79c3c3be84a17c97502f923c6f8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/12/15 2:32 PM",
      "commitNameOld": "e27fffdb9036d9ed9759d59b964020423b982e22",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 33.25,
      "commitsBetweenForRepo": 170,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,52 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n     // and it\u0027s enabled.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     boolean logsEnabled \u003d conf.getBoolean(\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n         CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n     if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       SessionHandler handler \u003d new SessionHandler();\n       SessionManager sm \u003d handler.getSessionManager();\n       if (sm instanceof AbstractSessionManager) {\n         AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n         asm.setHttpOnly(true);\n         asm.setSecureCookies(true);\n       }\n       logContext.setSessionHandler(handler);\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n+    @SuppressWarnings(\"unchecked\")\n+    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n+    params.put(\"org.mortbay.jetty.servlet.Default.dirAllowed\", \"false\");\n     SessionHandler handler \u003d new SessionHandler();\n     SessionManager sm \u003d handler.getSessionManager();\n     if (sm instanceof AbstractSessionManager) {\n       AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n       asm.setHttpOnly(true);\n       asm.setSecureCookies(true);\n     }\n     staticContext.setSessionHandler(handler);\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it\u0027s enabled.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled \u003d conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      SessionManager sm \u003d handler.getSessionManager();\n      if (sm instanceof AbstractSessionManager) {\n        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n        asm.setHttpOnly(true);\n        asm.setSecureCookies(true);\n      }\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n    params.put(\"org.mortbay.jetty.servlet.Default.dirAllowed\", \"false\");\n    SessionHandler handler \u003d new SessionHandler();\n    SessionManager sm \u003d handler.getSessionManager();\n    if (sm instanceof AbstractSessionManager) {\n      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n      asm.setHttpOnly(true);\n      asm.setSecureCookies(true);\n    }\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "e27fffdb9036d9ed9759d59b964020423b982e22": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12625. Add a config to disable the /logs endpoints (rkanter)\n",
      "commitDate": "09/12/15 2:32 PM",
      "commitName": "e27fffdb9036d9ed9759d59b964020423b982e22",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "22/11/15 7:52 PM",
      "commitNameOld": "611aa77f750986190a94ee88d1148a05f66513d0",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 16.78,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,49 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n-    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n+    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n+    // and it\u0027s enabled.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n-    if (logDir !\u003d null) {\n+    boolean logsEnabled \u003d conf.getBoolean(\n+        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n+        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n+    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       SessionHandler handler \u003d new SessionHandler();\n       SessionManager sm \u003d handler.getSessionManager();\n       if (sm instanceof AbstractSessionManager) {\n         AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n         asm.setHttpOnly(true);\n         asm.setSecureCookies(true);\n       }\n       logContext.setSessionHandler(handler);\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     SessionHandler handler \u003d new SessionHandler();\n     SessionManager sm \u003d handler.getSessionManager();\n     if (sm instanceof AbstractSessionManager) {\n       AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n       asm.setHttpOnly(true);\n       asm.setSecureCookies(true);\n     }\n     staticContext.setSessionHandler(handler);\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined\n    // and it\u0027s enabled.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    boolean logsEnabled \u003d conf.getBoolean(\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED,\n        CommonConfigurationKeys.HADOOP_HTTP_LOGS_ENABLED_DEFAULT);\n    if (logDir !\u003d null \u0026\u0026 logsEnabled) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      SessionManager sm \u003d handler.getSessionManager();\n      if (sm instanceof AbstractSessionManager) {\n        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n        asm.setHttpOnly(true);\n        asm.setSecureCookies(true);\n      }\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    SessionHandler handler \u003d new SessionHandler();\n    SessionManager sm \u003d handler.getSessionManager();\n    if (sm instanceof AbstractSessionManager) {\n      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n      asm.setHttpOnly(true);\n      asm.setSecureCookies(true);\n    }\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "611aa77f750986190a94ee88d1148a05f66513d0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11677. Add cookie flags for logs and static contexts. Contributed by nijel.\n",
      "commitDate": "22/11/15 7:52 PM",
      "commitName": "611aa77f750986190a94ee88d1148a05f66513d0",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/11/15 3:41 AM",
      "commitNameOld": "a6f20d80de3adbebacd586a534b474030ff608e9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,45 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n+      SessionHandler handler \u003d new SessionHandler();\n+      SessionManager sm \u003d handler.getSessionManager();\n+      if (sm instanceof AbstractSessionManager) {\n+        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n+        asm.setHttpOnly(true);\n+        asm.setSecureCookies(true);\n+      }\n+      logContext.setSessionHandler(handler);\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n+    SessionHandler handler \u003d new SessionHandler();\n+    SessionManager sm \u003d handler.getSessionManager();\n+    if (sm instanceof AbstractSessionManager) {\n+      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n+      asm.setHttpOnly(true);\n+      asm.setSecureCookies(true);\n+    }\n+    staticContext.setSessionHandler(handler);\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      SessionHandler handler \u003d new SessionHandler();\n      SessionManager sm \u003d handler.getSessionManager();\n      if (sm instanceof AbstractSessionManager) {\n        AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n        asm.setHttpOnly(true);\n        asm.setSecureCookies(true);\n      }\n      logContext.setSessionHandler(handler);\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    SessionHandler handler \u003d new SessionHandler();\n    SessionManager sm \u003d handler.getSessionManager();\n    if (sm instanceof AbstractSessionManager) {\n      AbstractSessionManager asm \u003d (AbstractSessionManager) sm;\n      asm.setHttpOnly(true);\n      asm.setSecureCookies(true);\n    }\n    staticContext.setSessionHandler(handler);\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "a6f20d80de3adbebacd586a534b474030ff608e9": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-12584. Disable browsing the static directory in HttpServer2. Contributed by Robert Kanter.\"\n\nThis reverts commit b7e3f419bdaa4d46ffb9829dd7873b5221cab077.\n",
      "commitDate": "22/11/15 3:41 AM",
      "commitName": "a6f20d80de3adbebacd586a534b474030ff608e9",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/11/15 3:47 PM",
      "commitNameOld": "4539131102e01bd150d147c16e33d0dd1e9a031a",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.5,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,29 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n-    @SuppressWarnings(\"unchecked\")\n-    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n-    params.put(\"org.mortbay.jetty.servlet.Default.dirAllowed\", \"false\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "4539131102e01bd150d147c16e33d0dd1e9a031a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12584. Disable browsing the static directory in HttpServer2. Contributed by Robert Kanter.\n",
      "commitDate": "19/11/15 3:47 PM",
      "commitName": "4539131102e01bd150d147c16e33d0dd1e9a031a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/10/15 7:47 AM",
      "commitNameOld": "35a303dfbe348f96c465fb8778ced6b5bb617e89",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 27.37,
      "commitsBetweenForRepo": 210,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n+    @SuppressWarnings(\"unchecked\")\n+    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n+    params.put(\"org.mortbay.jetty.servlet.Default.dirAllowed\", \"false\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    @SuppressWarnings(\"unchecked\")\n    Map\u003cString, String\u003e params \u003d staticContext.getInitParams();\n    params.put(\"org.mortbay.jetty.servlet.Default.dirAllowed\", \"false\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "27/01/14 10:41 PM",
      "commitNameOld": "87166f1ee81dbad579508c2bdbc7dda96b1ef809",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n-    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n+    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n         params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined.\n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
      }
    },
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3987. Support webhdfs over HTTPS. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543962 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/11/13 1:51 PM",
      "commitName": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "15/11/13 5:00 PM",
      "commitNameOld": "fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n-        logContext.getInitParams().put(\n+        @SuppressWarnings(\"unchecked\")\n+        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n+        params.put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n       addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, String\u003e params \u003d logContext.getInitParams();\n        params.put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "ec8ed4e95158f79d564fc3f5c327e807e87bcef2": {
      "type": "Ybodychange",
      "commitMessage": "HADOO-8998. set Cache-Control no-cache header on all dynamic content. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1409095 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/11/12 10:22 PM",
      "commitName": "ec8ed4e95158f79d564fc3f5c327e807e87bcef2",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "10/09/12 11:37 PM",
      "commitNameOld": "bdcbc2d1ef0fba999170ba748176ad0f496ccf2c",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 63.99,
      "commitsBetweenForRepo": 362,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       if (conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n           CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n         logContext.getInitParams().put(\n             \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n       }\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n+      addNoCacheFilter(webAppContext);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        logContext.getInitParams().put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      addNoCacheFilter(webAppContext);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "fc1fab9084ae2d857da57c16109ac97dcab62e15": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-4572. Can not access user logs - Jetty is not configured by default to serve aliases/symlinks (ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1376753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/12 3:52 PM",
      "commitName": "fc1fab9084ae2d857da57c16109ac97dcab62e15",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "09/08/12 3:52 PM",
      "commitNameOld": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 14.0,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n+      if (conf.getBoolean(\n+          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n+          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n+        logContext.getInitParams().put(\n+            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n+      }\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      if (conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_JETTY_LOGS_SERVE_ALIASES,\n          CommonConfigurationKeys.DEFAULT_HADOOP_JETTY_LOGS_SERVE_ALIASES)) {\n        logContext.getInitParams().put(\n            \"org.mortbay.jetty.servlet.Default.aliases\", \"true\");\n      }\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "59586d801543a4209f2daf277c07a4f4e55414ba": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7662. Fixed logs servlet to use the pathspec \u0027/*\u0027 instead of \u0027/\u0027 for correct filtering. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176849 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 5:36 AM",
      "commitName": "59586d801543a4209f2daf277c07a4f4e55414ba",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "20/09/11 6:11 AM",
      "commitNameOld": "e49ef2e6c5e2dba5677ff742a32344b5fc82435a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.98,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n-      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n+      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n       logContext.setDisplayName(\"logs\");\n       setContextAttributes(logContext, conf);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n     setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/*\");\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "common/src/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "common/src/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "4b8e1bda2d329604398ed199456aa6ae3cd8ffa3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6748. Removes hadoop.cluster.administrators, cluster administrators acl is passed as parameter in constructor. Contributed by Amareshwari Sriramadasu\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@955975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/10 5:30 AM",
      "commitName": "4b8e1bda2d329604398ed199456aa6ae3cd8ffa3",
      "commitAuthor": "Amareshwari Sri Ramadasu",
      "commitDateOld": "02/06/10 8:43 AM",
      "commitNameOld": "da60eca889fdac4116f1105907f75fa4d8399d86",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 15.87,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n       final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n       logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n       logContext.setDisplayName(\"logs\");\n-      logContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n+      setContextAttributes(logContext, conf);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n     staticContext.setDisplayName(\"static\");\n-    staticContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n+    setContextAttributes(staticContext, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n      logContext.setDisplayName(\"logs\");\n      setContextAttributes(logContext, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    setContextAttributes(staticContext, conf);\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "src/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "7785232da5a1db2d06f5d208ce3258c342a4d19c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-6568. Adds authorization for the default servlets. Contributed by Vinod Kumar Vavilapalli.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916467 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/10 1:39 PM",
      "commitName": "7785232da5a1db2d06f5d208ce3258c342a4d19c",
      "commitAuthor": "Devaraj Das",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-6568. Adds authorization for the default servlets. Contributed by Vinod Kumar Vavilapalli.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916467 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:39 PM",
          "commitName": "7785232da5a1db2d06f5d208ce3258c342a4d19c",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "06/01/10 11:44 AM",
          "commitNameOld": "889528e387680f18472b45e63f7857dbd0117eb9",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 50.08,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n-      final String appDir) throws IOException {\n+      final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n-      logContext.addServlet(DefaultServlet.class, \"/\");\n+      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n+      logContext.setDisplayName(\"logs\");\n+      logContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n+    staticContext.setDisplayName(\"static\");\n+    staticContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n      logContext.setDisplayName(\"logs\");\n      logContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    staticContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n    defaultContexts.put(staticContext, true);\n  }",
          "path": "src/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {
            "oldValue": "[parent-ContextHandlerCollection, appDir-String(modifiers-final)]",
            "newValue": "[parent-ContextHandlerCollection, appDir-String(modifiers-final), conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6568. Adds authorization for the default servlets. Contributed by Vinod Kumar Vavilapalli.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916467 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:39 PM",
          "commitName": "7785232da5a1db2d06f5d208ce3258c342a4d19c",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "06/01/10 11:44 AM",
          "commitNameOld": "889528e387680f18472b45e63f7857dbd0117eb9",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 50.08,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n   protected void addDefaultApps(ContextHandlerCollection parent,\n-      final String appDir) throws IOException {\n+      final String appDir, Configuration conf) throws IOException {\n     // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n     String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n     if (logDir !\u003d null) {\n       Context logContext \u003d new Context(parent, \"/logs\");\n       logContext.setResourceBase(logDir);\n-      logContext.addServlet(DefaultServlet.class, \"/\");\n+      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n+      logContext.setDisplayName(\"logs\");\n+      logContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n       defaultContexts.put(logContext, true);\n     }\n     // set up the context for \"/static/*\"\n     Context staticContext \u003d new Context(parent, \"/static\");\n     staticContext.setResourceBase(appDir + \"/static\");\n     staticContext.addServlet(DefaultServlet.class, \"/*\");\n+    staticContext.setDisplayName(\"static\");\n+    staticContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n     defaultContexts.put(staticContext, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir, Configuration conf) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(AdminAuthorizedServlet.class, \"/\");\n      logContext.setDisplayName(\"logs\");\n      logContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    staticContext.setDisplayName(\"static\");\n    staticContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);\n    defaultContexts.put(staticContext, true);\n  }",
          "path": "src/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,16 @@\n+  protected void addDefaultApps(ContextHandlerCollection parent,\n+      final String appDir) throws IOException {\n+    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n+    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n+    if (logDir !\u003d null) {\n+      Context logContext \u003d new Context(parent, \"/logs\");\n+      logContext.setResourceBase(logDir);\n+      logContext.addServlet(DefaultServlet.class, \"/\");\n+      defaultContexts.put(logContext, true);\n+    }\n+    // set up the context for \"/static/*\"\n+    Context staticContext \u003d new Context(parent, \"/static\");\n+    staticContext.setResourceBase(appDir + \"/static\");\n+    staticContext.addServlet(DefaultServlet.class, \"/*\");\n+    defaultContexts.put(staticContext, true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addDefaultApps(ContextHandlerCollection parent,\n      final String appDir) throws IOException {\n    // set up the context for \"/logs/\" if \"hadoop.log.dir\" property is defined. \n    String logDir \u003d System.getProperty(\"hadoop.log.dir\");\n    if (logDir !\u003d null) {\n      Context logContext \u003d new Context(parent, \"/logs\");\n      logContext.setResourceBase(logDir);\n      logContext.addServlet(DefaultServlet.class, \"/\");\n      defaultContexts.put(logContext, true);\n    }\n    // set up the context for \"/static/*\"\n    Context staticContext \u003d new Context(parent, \"/static\");\n    staticContext.setResourceBase(appDir + \"/static\");\n    staticContext.addServlet(DefaultServlet.class, \"/*\");\n    defaultContexts.put(staticContext, true);\n  }",
      "path": "src/java/org/apache/hadoop/http/HttpServer.java"
    }
  }
}