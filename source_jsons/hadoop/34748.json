{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyService.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
  "functionStartLine": 134,
  "functionEndLine": 149,
  "numCommitsSeen": 17,
  "timeTaken": 2157,
  "changeHistory": [
    "670e8d4ec7e71fc3b054cd3b2826f869b649a788",
    "d5f66888b8d767ee6706fab9950c194a1bf26d32",
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da"
  ],
  "changeHistoryShort": {
    "670e8d4ec7e71fc3b054cd3b2826f869b649a788": "Ybodychange",
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Ybodychange",
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "670e8d4ec7e71fc3b054cd3b2826f869b649a788": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6704. Add support for work preserving NM restart when FederationInterceptor is enabled in AMRMProxyService. (Botong Huang via Subru).\n",
      "commitDate": "08/12/17 3:39 PM",
      "commitName": "670e8d4ec7e71fc3b054cd3b2826f869b649a788",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "17/11/17 5:39 PM",
      "commitNameOld": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 20.92,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,16 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     this.secretManager \u003d\n         new AMRMProxyTokenSecretManager(this.nmContext.getNMStateStore());\n     this.secretManager.init(conf);\n \n-    // Both second app attempt and NM restart within Federation need registry\n     if (conf.getBoolean(YarnConfiguration.AMRM_PROXY_HA_ENABLED,\n-        YarnConfiguration.DEFAULT_AMRM_PROXY_HA_ENABLED)\n-        || conf.getBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,\n-            YarnConfiguration.DEFAULT_NM_RECOVERY_ENABLED)) {\n+        YarnConfiguration.DEFAULT_AMRM_PROXY_HA_ENABLED)) {\n       this.registry \u003d FederationStateStoreFacade.createInstance(conf,\n           YarnConfiguration.YARN_REGISTRY_CLASS,\n           YarnConfiguration.DEFAULT_YARN_REGISTRY_CLASS,\n           RegistryOperations.class);\n       addService(this.registry);\n     }\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    this.secretManager \u003d\n        new AMRMProxyTokenSecretManager(this.nmContext.getNMStateStore());\n    this.secretManager.init(conf);\n\n    if (conf.getBoolean(YarnConfiguration.AMRM_PROXY_HA_ENABLED,\n        YarnConfiguration.DEFAULT_AMRM_PROXY_HA_ENABLED)) {\n      this.registry \u003d FederationStateStoreFacade.createInstance(conf,\n          YarnConfiguration.YARN_REGISTRY_CLASS,\n          YarnConfiguration.DEFAULT_YARN_REGISTRY_CLASS,\n          RegistryOperations.class);\n      addService(this.registry);\n    }\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "22/06/17 11:27 AM",
      "commitNameOld": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 148.3,
      "commitsBetweenForRepo": 1203,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,19 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n-    super.serviceInit(conf);\n     this.secretManager \u003d\n         new AMRMProxyTokenSecretManager(this.nmContext.getNMStateStore());\n     this.secretManager.init(conf);\n+\n+    // Both second app attempt and NM restart within Federation need registry\n+    if (conf.getBoolean(YarnConfiguration.AMRM_PROXY_HA_ENABLED,\n+        YarnConfiguration.DEFAULT_AMRM_PROXY_HA_ENABLED)\n+        || conf.getBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,\n+            YarnConfiguration.DEFAULT_NM_RECOVERY_ENABLED)) {\n+      this.registry \u003d FederationStateStoreFacade.createInstance(conf,\n+          YarnConfiguration.YARN_REGISTRY_CLASS,\n+          YarnConfiguration.DEFAULT_YARN_REGISTRY_CLASS,\n+          RegistryOperations.class);\n+      addService(this.registry);\n+    }\n+\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    this.secretManager \u003d\n        new AMRMProxyTokenSecretManager(this.nmContext.getNMStateStore());\n    this.secretManager.init(conf);\n\n    // Both second app attempt and NM restart within Federation need registry\n    if (conf.getBoolean(YarnConfiguration.AMRM_PROXY_HA_ENABLED,\n        YarnConfiguration.DEFAULT_AMRM_PROXY_HA_ENABLED)\n        || conf.getBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,\n            YarnConfiguration.DEFAULT_NM_RECOVERY_ENABLED)) {\n      this.registry \u003d FederationStateStoreFacade.createInstance(conf,\n          YarnConfiguration.YARN_REGISTRY_CLASS,\n          YarnConfiguration.DEFAULT_YARN_REGISTRY_CLASS,\n          RegistryOperations.class);\n      addService(this.registry);\n    }\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6127. Add support for work preserving NM restart when AMRMProxy is enabled. (Botong Huang via asuresh).\n",
      "commitDate": "22/06/17 11:27 AM",
      "commitName": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,6 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    super.serviceInit(conf);\n+    this.secretManager \u003d\n+        new AMRMProxyTokenSecretManager(this.nmContext.getNMStateStore());\n+    this.secretManager.init(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    this.secretManager \u003d\n        new AMRMProxyTokenSecretManager(this.nmContext.getNMStateStore());\n    this.secretManager.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java"
    }
  }
}