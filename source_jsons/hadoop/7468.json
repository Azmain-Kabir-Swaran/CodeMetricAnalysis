{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "INodeReference.java",
  "functionName": "cleanSubtree",
  "functionId": "cleanSubtree___reclaimContext-ReclaimContext__snapshot-int__prior-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
  "functionStartLine": 648,
  "functionEndLine": 669,
  "numCommitsSeen": 216,
  "timeTaken": 6895,
  "changeHistory": [
    "b2c85db86c9a62b0a03ee87547265077f664970a",
    "4536399d47f6c061e149e2504600804a0f1e093d",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "d46e1608626c64400d2b6c7693a4c035783c55b4",
    "973017cab7bbdded68a0c74b137ab52fbd7d6d83",
    "0aab1ef9962314eb7a44140f35eb04c5f847765b",
    "72d783374c1e302492d7ce537222b563241038bb",
    "0fa5cad0b27780c27a284c23101b1099d4886506",
    "92e0416ced279a910616985bf11fa3f8b1b1de9b",
    "9701555899315c94584b24d8717c1d7540a4a491"
  ],
  "changeHistoryShort": {
    "b2c85db86c9a62b0a03ee87547265077f664970a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "4536399d47f6c061e149e2504600804a0f1e093d": "Ymultichange(Yparameterchange,Ybodychange)",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ymultichange(Yparameterchange,Ybodychange)",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ymultichange(Yparameterchange,Ybodychange)",
    "d46e1608626c64400d2b6c7693a4c035783c55b4": "Ymultichange(Yparameterchange,Ybodychange)",
    "973017cab7bbdded68a0c74b137ab52fbd7d6d83": "Ybodychange",
    "0aab1ef9962314eb7a44140f35eb04c5f847765b": "Ybodychange",
    "72d783374c1e302492d7ce537222b563241038bb": "Ybodychange",
    "0fa5cad0b27780c27a284c23101b1099d4886506": "Ymultichange(Ymodifierchange,Ybodychange,Yparametermetachange)",
    "92e0416ced279a910616985bf11fa3f8b1b1de9b": "Ymultichange(Yparameterchange,Ybodychange)",
    "9701555899315c94584b24d8717c1d7540a4a491": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2c85db86c9a62b0a03ee87547265077f664970a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
      "commitDate": "13/05/15 9:50 PM",
      "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "09/05/15 10:51 PM",
          "commitNameOld": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 3.96,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,22 @@\n-    public QuotaCounts cleanSubtree(\n-        ReclaimContext reclaimContext, int snapshot, int prior) {\n+    public void cleanSubtree(ReclaimContext reclaimContext, int snapshot,\n+        int prior) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n-        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-        this.computeQuotaUsage(reclaimContext.bsps, counts, true);\n         destroyAndCollectBlocks(reclaimContext);\n-        return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n-          return new QuotaCounts.Builder().build();\n+          return;\n         }\n-        return getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n+        getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void cleanSubtree(ReclaimContext reclaimContext, int snapshot,\n        int prior) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        destroyAndCollectBlocks(reclaimContext);\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return;\n        }\n        getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "QuotaCounts",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "09/05/15 10:51 PM",
          "commitNameOld": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 3.96,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,22 @@\n-    public QuotaCounts cleanSubtree(\n-        ReclaimContext reclaimContext, int snapshot, int prior) {\n+    public void cleanSubtree(ReclaimContext reclaimContext, int snapshot,\n+        int prior) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n-        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-        this.computeQuotaUsage(reclaimContext.bsps, counts, true);\n         destroyAndCollectBlocks(reclaimContext);\n-        return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n-          return new QuotaCounts.Builder().build();\n+          return;\n         }\n-        return getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n+        getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void cleanSubtree(ReclaimContext reclaimContext, int snapshot,\n        int prior) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        destroyAndCollectBlocks(reclaimContext);\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return;\n        }\n        getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "4536399d47f6c061e149e2504600804a0f1e093d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
      "commitDate": "09/05/15 10:51 PM",
      "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:04 PM",
          "commitNameOld": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,25 @@\n     public QuotaCounts cleanSubtree(\n-        BlockStoragePolicySuite bsps, int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n-        List\u003cLong\u003e removedUCFiles) {\n+        ReclaimContext reclaimContext, int snapshot, int prior) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-        this.computeQuotaUsage(bsps, counts, true);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n-                                removedUCFiles);\n+        this.computeQuotaUsage(reclaimContext.bsps, counts, true);\n+        destroyAndCollectBlocks(reclaimContext);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return new QuotaCounts.Builder().build();\n         }\n-        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n-            collectedBlocks, removedINodes, removedUCFiles);\n+        return getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(\n        ReclaimContext reclaimContext, int snapshot, int prior) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(reclaimContext.bsps, counts, true);\n        destroyAndCollectBlocks(reclaimContext);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e, removedUCFiles-List\u003cLong\u003e]",
            "newValue": "[reclaimContext-ReclaimContext, snapshot-int, prior-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:04 PM",
          "commitNameOld": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,25 @@\n     public QuotaCounts cleanSubtree(\n-        BlockStoragePolicySuite bsps, int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n-        List\u003cLong\u003e removedUCFiles) {\n+        ReclaimContext reclaimContext, int snapshot, int prior) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-        this.computeQuotaUsage(bsps, counts, true);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n-                                removedUCFiles);\n+        this.computeQuotaUsage(reclaimContext.bsps, counts, true);\n+        destroyAndCollectBlocks(reclaimContext);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return new QuotaCounts.Builder().build();\n         }\n-        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n-            collectedBlocks, removedINodes, removedUCFiles);\n+        return getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(\n        ReclaimContext reclaimContext, int snapshot, int prior) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(reclaimContext.bsps, counts, true);\n        destroyAndCollectBlocks(reclaimContext);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(reclaimContext, snapshot, prior);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
          "commitDate": "08/05/15 11:04 PM",
          "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/04/15 9:20 PM",
          "commitNameOld": "72f6bd4893dcf10d6dad24753f9be99505a87a1f",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 36.07,
          "commitsBetweenForRepo": 375,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,29 @@\n-    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n+    public QuotaCounts cleanSubtree(\n+        BlockStoragePolicySuite bsps, int snapshot, int prior,\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n+        List\u003cLong\u003e removedUCFiles) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n         this.computeQuotaUsage(bsps, counts, true);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n+                                removedUCFiles);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return new QuotaCounts.Builder().build();\n         }\n         return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n-            collectedBlocks, removedINodes);\n+            collectedBlocks, removedINodes, removedUCFiles);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(\n        BlockStoragePolicySuite bsps, int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n        List\u003cLong\u003e removedUCFiles) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(bsps, counts, true);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n                                removedUCFiles);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n            collectedBlocks, removedINodes, removedUCFiles);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e]",
            "newValue": "[bsps-BlockStoragePolicySuite, snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e, removedUCFiles-List\u003cLong\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
          "commitDate": "08/05/15 11:04 PM",
          "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/04/15 9:20 PM",
          "commitNameOld": "72f6bd4893dcf10d6dad24753f9be99505a87a1f",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 36.07,
          "commitsBetweenForRepo": 375,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,29 @@\n-    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n+    public QuotaCounts cleanSubtree(\n+        BlockStoragePolicySuite bsps, int snapshot, int prior,\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n+        List\u003cLong\u003e removedUCFiles) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n         this.computeQuotaUsage(bsps, counts, true);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n+                                removedUCFiles);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return new QuotaCounts.Builder().build();\n         }\n         return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n-            collectedBlocks, removedINodes);\n+            collectedBlocks, removedINodes, removedUCFiles);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(\n        BlockStoragePolicySuite bsps, int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n        List\u003cLong\u003e removedUCFiles) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(bsps, counts, true);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n                                removedUCFiles);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n            collectedBlocks, removedINodes, removedUCFiles);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public Quota.Counts cleanSubtree(int snapshot, int prior,\n+    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n-        Quota.Counts counts \u003d Quota.Counts.newInstance();\n-        this.computeQuotaUsage(counts, true);\n-        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+        this.computeQuotaUsage(bsps, counts, true);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n-          return Quota.Counts.newInstance();\n+          return new QuotaCounts.Builder().build();\n         }\n-        return getReferredINode().cleanSubtree(snapshot, prior,\n+        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n             collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(bsps, counts, true);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e]",
            "newValue": "[bsps-BlockStoragePolicySuite, snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public Quota.Counts cleanSubtree(int snapshot, int prior,\n+    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n-        Quota.Counts counts \u003d Quota.Counts.newInstance();\n-        this.computeQuotaUsage(counts, true);\n-        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+        this.computeQuotaUsage(bsps, counts, true);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n-          return Quota.Counts.newInstance();\n+          return new QuotaCounts.Builder().build();\n         }\n-        return getReferredINode().cleanSubtree(snapshot, prior,\n+        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n             collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(bsps, counts, true);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "Quota.Counts",
            "newValue": "QuotaCounts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public Quota.Counts cleanSubtree(int snapshot, int prior,\n+    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n-        Quota.Counts counts \u003d Quota.Counts.newInstance();\n-        this.computeQuotaUsage(counts, true);\n-        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+        this.computeQuotaUsage(bsps, counts, true);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n-          return Quota.Counts.newInstance();\n+          return new QuotaCounts.Builder().build();\n         }\n-        return getReferredINode().cleanSubtree(snapshot, prior,\n+        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n             collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n        this.computeQuotaUsage(bsps, counts, true);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return new QuotaCounts.Builder().build();\n        }\n        return getReferredINode().cleanSubtree(bsps, snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
      "commitDate": "02/02/15 4:32 PM",
      "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "05/09/14 11:37 AM",
          "commitNameOld": "300cb12bef9802f328cfb37aaab5af71137504ff",
          "commitAuthorOld": "",
          "daysBetweenCommits": 150.25,
          "commitsBetweenForRepo": 1218,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n     public Quota.Counts cleanSubtree(int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n-        final boolean countDiffChange) throws QuotaExceededException {\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n-            collectedBlocks, removedINodes, countDiffChange);\n+            collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e, countDiffChange-boolean(modifiers-final)]",
            "newValue": "[snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "05/09/14 11:37 AM",
          "commitNameOld": "300cb12bef9802f328cfb37aaab5af71137504ff",
          "commitAuthorOld": "",
          "daysBetweenCommits": 150.25,
          "commitsBetweenForRepo": 1218,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n     public Quota.Counts cleanSubtree(int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n-        final boolean countDiffChange) throws QuotaExceededException {\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n-            collectedBlocks, removedINodes, countDiffChange);\n+            collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "05/09/14 11:37 AM",
          "commitNameOld": "300cb12bef9802f328cfb37aaab5af71137504ff",
          "commitAuthorOld": "",
          "daysBetweenCommits": 150.25,
          "commitsBetweenForRepo": 1218,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n     public Quota.Counts cleanSubtree(int snapshot, int prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n-        final boolean countDiffChange) throws QuotaExceededException {\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n       if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n           \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n         // the previous WithName instance\n         if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n         // to-be-deleted snapshot, we can quit here and leave the snapshot\n         // deletion work to the src tree of rename\n         if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n             \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n             \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n-            collectedBlocks, removedINodes, countDiffChange);\n+            collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes) {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n+    public Quota.Counts cleanSubtree(int snapshot, int prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n         final boolean countDiffChange) throws QuotaExceededException {\n-      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n+      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n+          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n-        // if prior is null, we need to check snapshot belonging to the previous\n-        // WithName instance\n-        if (prior \u003d\u003d null) {\n+        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n+        // the previous WithName instance\n+        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n-        // if prior is not null, and prior is not before the to-be-deleted \n-        // snapshot, we can quit here and leave the snapshot deletion work to \n-        // the src tree of rename\n-        if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n-            \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n+        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n+        // to-be-deleted snapshot, we can quit here and leave the snapshot\n+        // deletion work to the src tree of rename\n+        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n+            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n+            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n             collectedBlocks, removedINodes, countDiffChange);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n        final boolean countDiffChange) throws QuotaExceededException {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes, countDiffChange);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e, countDiffChange-boolean(modifiers-final)]",
            "newValue": "[snapshot-int, prior-int, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e, countDiffChange-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n+    public Quota.Counts cleanSubtree(int snapshot, int prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n         final boolean countDiffChange) throws QuotaExceededException {\n-      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n+      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n+          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n-        // if prior is null, we need to check snapshot belonging to the previous\n-        // WithName instance\n-        if (prior \u003d\u003d null) {\n+        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n+        // the previous WithName instance\n+        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n           prior \u003d getPriorSnapshot(this);\n         }\n-        // if prior is not null, and prior is not before the to-be-deleted \n-        // snapshot, we can quit here and leave the snapshot deletion work to \n-        // the src tree of rename\n-        if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n-            \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n+        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n+        // to-be-deleted snapshot, we can quit here and leave the snapshot\n+        // deletion work to the src tree of rename\n+        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n+            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n+            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n             collectedBlocks, removedINodes, countDiffChange);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(int snapshot, int prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n        final boolean countDiffChange) throws QuotaExceededException {\n      if (snapshot \u003d\u003d Snapshot.CURRENT_STATE_ID\n          \u0026\u0026 prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is NO_SNAPSHOT_ID, we need to check snapshot belonging to \n        // the previous WithName instance\n        if (prior \u003d\u003d Snapshot.NO_SNAPSHOT_ID) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not NO_SNAPSHOT_ID, and prior is not before the\n        // to-be-deleted snapshot, we can quit here and leave the snapshot\n        // deletion work to the src tree of rename\n        if (snapshot !\u003d Snapshot.CURRENT_STATE_ID\n            \u0026\u0026 prior !\u003d Snapshot.NO_SNAPSHOT_ID\n            \u0026\u0026 Snapshot.ID_INTEGER_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes, countDiffChange);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "d46e1608626c64400d2b6c7693a4c035783c55b4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4877. Snapshot: fix the scenario where a directory is renamed under its prior descendant. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490421 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/06/13 1:15 PM",
      "commitName": "d46e1608626c64400d2b6c7693a4c035783c55b4",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4877. Snapshot: fix the scenario where a directory is renamed under its prior descendant. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490421 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/06/13 1:15 PM",
          "commitName": "d46e1608626c64400d2b6c7693a4c035783c55b4",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "29/05/13 1:54 PM",
          "commitNameOld": "973017cab7bbdded68a0c74b137ab52fbd7d6d83",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 7.97,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n     public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n-        throws QuotaExceededException {\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n+        final boolean countDiffChange) throws QuotaExceededException {\n       if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is null, we need to check snapshot belonging to the previous\n         // WithName instance\n         if (prior \u003d\u003d null) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not null, and prior is not before the to-be-deleted \n         // snapshot, we can quit here and leave the snapshot deletion work to \n         // the src tree of rename\n         if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n             \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n-            collectedBlocks, removedINodes);\n+            collectedBlocks, removedINodes, countDiffChange);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n        final boolean countDiffChange) throws QuotaExceededException {\n      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is null, we need to check snapshot belonging to the previous\n        // WithName instance\n        if (prior \u003d\u003d null) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not null, and prior is not before the to-be-deleted \n        // snapshot, we can quit here and leave the snapshot deletion work to \n        // the src tree of rename\n        if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n            \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes, countDiffChange);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e]",
            "newValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e, countDiffChange-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4877. Snapshot: fix the scenario where a directory is renamed under its prior descendant. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490421 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/06/13 1:15 PM",
          "commitName": "d46e1608626c64400d2b6c7693a4c035783c55b4",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "29/05/13 1:54 PM",
          "commitNameOld": "973017cab7bbdded68a0c74b137ab52fbd7d6d83",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 7.97,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n     public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n-        throws QuotaExceededException {\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n+        final boolean countDiffChange) throws QuotaExceededException {\n       if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is null, we need to check snapshot belonging to the previous\n         // WithName instance\n         if (prior \u003d\u003d null) {\n           prior \u003d getPriorSnapshot(this);\n         }\n         // if prior is not null, and prior is not before the to-be-deleted \n         // snapshot, we can quit here and leave the snapshot deletion work to \n         // the src tree of rename\n         if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n             \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n-            collectedBlocks, removedINodes);\n+            collectedBlocks, removedINodes, countDiffChange);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes,\n        final boolean countDiffChange) throws QuotaExceededException {\n      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is null, we need to check snapshot belonging to the previous\n        // WithName instance\n        if (prior \u003d\u003d null) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not null, and prior is not before the to-be-deleted \n        // snapshot, we can quit here and leave the snapshot deletion work to \n        // the src tree of rename\n        if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n            \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes, countDiffChange);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "973017cab7bbdded68a0c74b137ab52fbd7d6d83": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4842. Identify the correct prior snapshot when deleting a snapshot under a renamed subtree. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487643 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 1:54 PM",
      "commitName": "973017cab7bbdded68a0c74b137ab52fbd7d6d83",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/05/13 3:45 PM",
      "commitNameOld": "0aab1ef9962314eb7a44140f35eb04c5f847765b",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 22.92,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n     public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n         throws QuotaExceededException {\n       if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n         // if prior is null, we need to check snapshot belonging to the previous\n         // WithName instance\n         if (prior \u003d\u003d null) {\n           prior \u003d getPriorSnapshot(this);\n         }\n-        if (snapshot !\u003d null \u0026\u0026 snapshot.equals(prior)) {\n+        // if prior is not null, and prior is not before the to-be-deleted \n+        // snapshot, we can quit here and leave the snapshot deletion work to \n+        // the src tree of rename\n+        if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n+            \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n           return Quota.Counts.newInstance();\n         }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n             collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n        throws QuotaExceededException {\n      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is null, we need to check snapshot belonging to the previous\n        // WithName instance\n        if (prior \u003d\u003d null) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        // if prior is not null, and prior is not before the to-be-deleted \n        // snapshot, we can quit here and leave the snapshot deletion work to \n        // the src tree of rename\n        if (snapshot !\u003d null \u0026\u0026 prior !\u003d null\n            \u0026\u0026 Snapshot.ID_COMPARATOR.compare(snapshot, prior) \u003c\u003d 0) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
      "extendedDetails": {}
    },
    "0aab1ef9962314eb7a44140f35eb04c5f847765b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4800. Fix INodeDirectoryWithSnapshot#cleanDeletedINode.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1479707 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 3:45 PM",
      "commitName": "0aab1ef9962314eb7a44140f35eb04c5f847765b",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/05/13 11:48 AM",
      "commitNameOld": "424b270c94297b00a850e7a821163b9802edc7ae",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,21 @@\n     public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n         throws QuotaExceededException {\n       if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n         Quota.Counts counts \u003d Quota.Counts.newInstance();\n         this.computeQuotaUsage(counts, true);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n         return counts;\n       } else {\n+        // if prior is null, we need to check snapshot belonging to the previous\n+        // WithName instance\n+        if (prior \u003d\u003d null) {\n+          prior \u003d getPriorSnapshot(this);\n+        }\n+        if (snapshot !\u003d null \u0026\u0026 snapshot.equals(prior)) {\n+          return Quota.Counts.newInstance();\n+        }\n         return getReferredINode().cleanSubtree(snapshot, prior,\n             collectedBlocks, removedINodes);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n        throws QuotaExceededException {\n      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        // if prior is null, we need to check snapshot belonging to the previous\n        // WithName instance\n        if (prior \u003d\u003d null) {\n          prior \u003d getPriorSnapshot(this);\n        }\n        if (snapshot !\u003d null \u0026\u0026 snapshot.equals(prior)) {\n          return Quota.Counts.newInstance();\n        }\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
      "extendedDetails": {}
    },
    "72d783374c1e302492d7ce537222b563241038bb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4791. Update and fix deletion of reference inode.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1479198 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/13 3:10 PM",
      "commitName": "72d783374c1e302492d7ce537222b563241038bb",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "30/04/13 2:05 PM",
      "commitNameOld": "3a3e0f573129c8308332d4b301a9319ee579d85a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 4.05,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n         BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n         throws QuotaExceededException {\n-      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n-          collectedBlocks, removedINodes);\n-      if (snapshot !\u003d null) {\n-        // also need to update quota usage along the corresponding WithName node\n-        WithCount wc \u003d (WithCount) getReferredINode();\n-        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n-            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n+      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n+        Quota.Counts counts \u003d Quota.Counts.newInstance();\n+        this.computeQuotaUsage(counts, true);\n+        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        return counts;\n+      } else {\n+        return getReferredINode().cleanSubtree(snapshot, prior,\n+            collectedBlocks, removedINodes);\n       }\n-      return counts;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n        throws QuotaExceededException {\n      if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n        Quota.Counts counts \u003d Quota.Counts.newInstance();\n        this.computeQuotaUsage(counts, true);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n        return counts;\n      } else {\n        return getReferredINode().cleanSubtree(snapshot, prior,\n            collectedBlocks, removedINodes);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
      "extendedDetails": {}
    },
    "0fa5cad0b27780c27a284c23101b1099d4886506": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/13 1:31 PM",
      "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/13 1:31 PM",
          "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 5:00 PM",
          "commitNameOld": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.85,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,13 @@\n-  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws QuotaExceededException {\n-    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n-        removedINodes);\n-  }\n\\ No newline at end of file\n+    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n+        throws QuotaExceededException {\n+      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n+          collectedBlocks, removedINodes);\n+      if (snapshot !\u003d null) {\n+        // also need to update quota usage along the corresponding WithName node\n+        WithCount wc \u003d (WithCount) getReferredINode();\n+        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n+            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n+      }\n+      return counts;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n        throws QuotaExceededException {\n      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n          collectedBlocks, removedINodes);\n      if (snapshot !\u003d null) {\n        // also need to update quota usage along the corresponding WithName node\n        WithCount wc \u003d (WithCount) getReferredINode();\n        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[public, final]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/13 1:31 PM",
          "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 5:00 PM",
          "commitNameOld": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.85,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,13 @@\n-  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws QuotaExceededException {\n-    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n-        removedINodes);\n-  }\n\\ No newline at end of file\n+    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n+        throws QuotaExceededException {\n+      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n+          collectedBlocks, removedINodes);\n+      if (snapshot !\u003d null) {\n+        // also need to update quota usage along the corresponding WithName node\n+        WithCount wc \u003d (WithCount) getReferredINode();\n+        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n+            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n+      }\n+      return counts;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n        throws QuotaExceededException {\n      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n          collectedBlocks, removedINodes);\n      if (snapshot !\u003d null) {\n        // also need to update quota usage along the corresponding WithName node\n        WithCount wc \u003d (WithCount) getReferredINode();\n        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/13 1:31 PM",
          "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 5:00 PM",
          "commitNameOld": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.85,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,13 @@\n-  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws QuotaExceededException {\n-    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n-        removedINodes);\n-  }\n\\ No newline at end of file\n+    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n+        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n+        throws QuotaExceededException {\n+      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n+          collectedBlocks, removedINodes);\n+      if (snapshot !\u003d null) {\n+        // also need to update quota usage along the corresponding WithName node\n+        WithCount wc \u003d (WithCount) getReferredINode();\n+        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n+            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n+      }\n+      return counts;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n        BlocksMapUpdateInfo collectedBlocks, List\u003cINode\u003e removedINodes)\n        throws QuotaExceededException {\n      Quota.Counts counts \u003d getReferredINode().cleanSubtree(snapshot, prior,\n          collectedBlocks, removedINodes);\n      if (snapshot !\u003d null) {\n        // also need to update quota usage along the corresponding WithName node\n        WithCount wc \u003d (WithCount) getReferredINode();\n        wc.addSpaceConsumedToRenameSrc(-counts.get(Quota.NAMESPACE),\n            -counts.get(Quota.DISKSPACE), true, snapshot.getId());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e]"
          }
        }
      ]
    },
    "92e0416ced279a910616985bf11fa3f8b1b1de9b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/04/13 5:00 PM",
      "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/04/13 5:00 PM",
          "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/04/13 3:03 PM",
          "commitNameOld": "6bda1f20ad396918edde211f709f5819a361b51e",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.08,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,6 @@\n   public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-      BlocksMapUpdateInfo collectedBlocks) throws QuotaExceededException {\n-    return referred.cleanSubtree(snapshot, prior, collectedBlocks);\n+      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n+      throws QuotaExceededException {\n+    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n+        removedINodes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws QuotaExceededException {\n    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n        removedINodes);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {
            "oldValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo]",
            "newValue": "[snapshot-Snapshot, prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/04/13 5:00 PM",
          "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/04/13 3:03 PM",
          "commitNameOld": "6bda1f20ad396918edde211f709f5819a361b51e",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.08,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,6 @@\n   public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n-      BlocksMapUpdateInfo collectedBlocks) throws QuotaExceededException {\n-    return referred.cleanSubtree(snapshot, prior, collectedBlocks);\n+      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n+      throws QuotaExceededException {\n+    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n+        removedINodes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws QuotaExceededException {\n    return referred.cleanSubtree(snapshot, prior, collectedBlocks,\n        removedINodes);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java",
          "extendedDetails": {}
        }
      ]
    },
    "9701555899315c94584b24d8717c1d7540a4a491": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4534. Add INodeReference in order to support rename with snapshots.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1458164 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/03/13 11:27 PM",
      "commitName": "9701555899315c94584b24d8717c1d7540a4a491",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,4 @@\n+  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n+      BlocksMapUpdateInfo collectedBlocks) throws QuotaExceededException {\n+    return referred.cleanSubtree(snapshot, prior, collectedBlocks);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public final Quota.Counts cleanSubtree(Snapshot snapshot, Snapshot prior,\n      BlocksMapUpdateInfo collectedBlocks) throws QuotaExceededException {\n    return referred.cleanSubtree(snapshot, prior, collectedBlocks);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeReference.java"
    }
  }
}