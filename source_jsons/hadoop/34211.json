{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuxServices.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
  "functionStartLine": 802,
  "functionEndLine": 819,
  "numCommitsSeen": 36,
  "timeTaken": 9518,
  "changeHistory": [
    "1ab69a9543df555b878951e66e3da13485e7f6d5",
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
    "f4d80e91ae314d316100baa7770b9d73ea853d9c",
    "686ac311c9241ce64b0b6a942f95941f94446a81",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ade0f0560f729e50382c6992f713f29e2dd5b270",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "1ab69a9543df555b878951e66e3da13485e7f6d5": "Ybodychange",
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": "Ymultichange(Ymodifierchange,Ybodychange)",
    "f4d80e91ae314d316100baa7770b9d73ea853d9c": "Ybodychange",
    "686ac311c9241ce64b0b6a942f95941f94446a81": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ade0f0560f729e50382c6992f713f29e2dd5b270": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ab69a9543df555b878951e66e3da13485e7f6d5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9221.  Added flag to disable dynamic auxiliary service feature.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "25/01/19 4:05 PM",
      "commitName": "1ab69a9543df555b878951e66e3da13485e7f6d5",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "22/01/19 3:24 PM",
      "commitNameOld": "2fa9389c2e1ca4853a61533686941c685c889dbe",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   public synchronized void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n       startAuxService(name, service, serviceRecordMap.get(name));\n     }\n-    if (manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n-      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestRelaod-Timer\",\n+    if (manifestEnabled \u0026\u0026 manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n+      LOG.info(\"Scheduling reloading auxiliary services manifest file at \" +\n+          \"interval \" + manifestReloadInterval + \" ms\");\n+      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestReload-Timer\",\n           true);\n       manifestReloadTimer.schedule(manifestReloadTask,\n           manifestReloadInterval, manifestReloadInterval);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      startAuxService(name, service, serviceRecordMap.get(name));\n    }\n    if (manifestEnabled \u0026\u0026 manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n      LOG.info(\"Scheduling reloading auxiliary services manifest file at \" +\n          \"interval \" + manifestReloadInterval + \" ms\");\n      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestReload-Timer\",\n          true);\n      manifestReloadTimer.schedule(manifestReloadTask,\n          manifestReloadInterval, manifestReloadInterval);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9075.  Add ability to register/remove auxiliary service without restart node manager.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "18/12/18 2:05 PM",
      "commitName": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9075.  Add ability to register/remove auxiliary service without restart node manager.\n            Contributed by Billie Rinaldi\n",
          "commitDate": "18/12/18 2:05 PM",
          "commitName": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "06/06/18 9:55 PM",
          "commitNameOld": "58bc34f1e347034af566d6968eb3b3439a91cc74",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 194.72,
          "commitsBetweenForRepo": 1523,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void serviceStart() throws Exception {\n+  public synchronized void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n-      service.start();\n-      service.registerServiceListener(this);\n-      ByteBuffer meta \u003d service.getMetaData();\n-      if(meta !\u003d null) {\n-        serviceMetaData.put(name, meta);\n-      }\n+      startAuxService(name, service, serviceRecordMap.get(name));\n+    }\n+    if (manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n+      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestRelaod-Timer\",\n+          true);\n+      manifestReloadTimer.schedule(manifestReloadTask,\n+          manifestReloadInterval, manifestReloadInterval);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      startAuxService(name, service, serviceRecordMap.get(name));\n    }\n    if (manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestRelaod-Timer\",\n          true);\n      manifestReloadTimer.schedule(manifestReloadTask,\n          manifestReloadInterval, manifestReloadInterval);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9075.  Add ability to register/remove auxiliary service without restart node manager.\n            Contributed by Billie Rinaldi\n",
          "commitDate": "18/12/18 2:05 PM",
          "commitName": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "06/06/18 9:55 PM",
          "commitNameOld": "58bc34f1e347034af566d6968eb3b3439a91cc74",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 194.72,
          "commitsBetweenForRepo": 1523,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void serviceStart() throws Exception {\n+  public synchronized void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n-      service.start();\n-      service.registerServiceListener(this);\n-      ByteBuffer meta \u003d service.getMetaData();\n-      if(meta !\u003d null) {\n-        serviceMetaData.put(name, meta);\n-      }\n+      startAuxService(name, service, serviceRecordMap.get(name));\n+    }\n+    if (manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n+      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestRelaod-Timer\",\n+          true);\n+      manifestReloadTimer.schedule(manifestReloadTask,\n+          manifestReloadInterval, manifestReloadInterval);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      startAuxService(name, service, serviceRecordMap.get(name));\n    }\n    if (manifest !\u003d null \u0026\u0026 manifestReloadInterval \u003e 0) {\n      manifestReloadTimer \u003d new Timer(\"AuxServicesManifestRelaod-Timer\",\n          true);\n      manifestReloadTimer.schedule(manifestReloadTask,\n          manifestReloadInterval, manifestReloadInterval);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "f4d80e91ae314d316100baa7770b9d73ea853d9c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-841. Move Auxiliary service to yarn-api, annotate and document it. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494031 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 11:20 PM",
      "commitName": "f4d80e91ae314d316100baa7770b9d73ea853d9c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n       service.start();\n       service.registerServiceListener(this);\n-      ByteBuffer meta \u003d service.getMeta();\n+      ByteBuffer meta \u003d service.getMetaData();\n       if(meta !\u003d null) {\n-        serviceMeta.put(name, meta);\n+        serviceMetaData.put(name, meta);\n       }\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.registerServiceListener(this);\n      ByteBuffer meta \u003d service.getMetaData();\n      if(meta !\u003d null) {\n        serviceMetaData.put(name, meta);\n      }\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "686ac311c9241ce64b0b6a942f95941f94446a81": {
      "type": "Ybodychange",
      "commitMessage": "YARN-746. Renamed Service.register() and Service.unregister() to registerServiceListener() \u0026 unregisterServiceListener() respectively. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492780 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 10:49 AM",
      "commitName": "686ac311c9241ce64b0b6a942f95941f94446a81",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/06/13 8:54 AM",
      "commitNameOld": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n       service.start();\n-      service.register(this);\n+      service.registerServiceListener(this);\n       ByteBuffer meta \u003d service.getMeta();\n       if(meta !\u003d null) {\n         serviceMeta.put(name, meta);\n       }\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.registerServiceListener(this);\n      ByteBuffer meta \u003d service.getMeta();\n      if(meta !\u003d null) {\n        serviceMeta.put(name, meta);\n      }\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 309.44,
          "commitsBetweenForRepo": 1788,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void start() {\n+  public void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n       service.start();\n       service.register(this);\n       ByteBuffer meta \u003d service.getMeta();\n       if(meta !\u003d null) {\n         serviceMeta.put(name, meta);\n       }\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.register(this);\n      ByteBuffer meta \u003d service.getMeta();\n      if(meta !\u003d null) {\n        serviceMeta.put(name, meta);\n      }\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
          "extendedDetails": {
            "oldValue": "start",
            "newValue": "serviceStart"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 309.44,
          "commitsBetweenForRepo": 1788,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void start() {\n+  public void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n       service.start();\n       service.register(this);\n       ByteBuffer meta \u003d service.getMeta();\n       if(meta !\u003d null) {\n         serviceMeta.put(name, meta);\n       }\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.register(this);\n      ByteBuffer meta \u003d service.getMeta();\n      if(meta !\u003d null) {\n        serviceMeta.put(name, meta);\n      }\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 309.44,
          "commitsBetweenForRepo": 1788,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void start() {\n+  public void serviceStart() throws Exception {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n     for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n       AuxiliaryService service \u003d entry.getValue();\n       String name \u003d entry.getKey();\n       service.start();\n       service.register(this);\n       ByteBuffer meta \u003d service.getMeta();\n       if(meta !\u003d null) {\n         serviceMeta.put(name, meta);\n       }\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceStart() throws Exception {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.register(this);\n      ByteBuffer meta \u003d service.getMeta();\n      if(meta !\u003d null) {\n        serviceMeta.put(name, meta);\n      }\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.register(this);\n      ByteBuffer meta \u003d service.getMeta();\n      if(meta !\u003d null) {\n        serviceMeta.put(name, meta);\n      }\n    }\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
      }
    },
    "ade0f0560f729e50382c6992f713f29e2dd5b270": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163585 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 4:38 AM",
      "commitName": "ade0f0560f729e50382c6992f713f29e2dd5b270",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 6.48,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,15 @@\n   public void start() {\n     // TODO fork(?) services running as configured user\n     //      monitor for health, shutdown/restart(?) if any should die\n-    for (Service service : serviceMap.values()) {\n+    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n+      AuxiliaryService service \u003d entry.getValue();\n+      String name \u003d entry.getKey();\n       service.start();\n       service.register(this);\n+      ByteBuffer meta \u003d service.getMeta();\n+      if(meta !\u003d null) {\n+        serviceMeta.put(name, meta);\n+      }\n     }\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Map.Entry\u003cString, AuxiliaryService\u003e entry : serviceMap.entrySet()) {\n      AuxiliaryService service \u003d entry.getValue();\n      String name \u003d entry.getKey();\n      service.start();\n      service.register(this);\n      ByteBuffer meta \u003d service.getMeta();\n      if(meta !\u003d null) {\n        serviceMeta.put(name, meta);\n      }\n    }\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Service service : serviceMap.values()) {\n      service.start();\n      service.register(this);\n    }\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+  public void start() {\n+    // TODO fork(?) services running as configured user\n+    //      monitor for health, shutdown/restart(?) if any should die\n+    for (Service service : serviceMap.values()) {\n+      service.start();\n+      service.register(this);\n+    }\n+    super.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    // TODO fork(?) services running as configured user\n    //      monitor for health, shutdown/restart(?) if any should die\n    for (Service service : serviceMap.values()) {\n      service.start();\n      service.register(this);\n    }\n    super.start();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
    }
  }
}