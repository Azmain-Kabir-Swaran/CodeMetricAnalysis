{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagementProtocolProxy.java",
  "functionName": "newProxy",
  "functionId": "newProxy___rpc-YarnRPC(modifiers-final)__containerManagerBindAddr-String__containerId-ContainerId__token-Token",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.java",
  "functionStartLine": 249,
  "functionEndLine": 272,
  "numCommitsSeen": 10,
  "timeTaken": 2245,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "b84fb41bb6ca2d69153cf5bd61f88492538ee713",
    "0708827a935d190d439854e08bb5a655d7daa606",
    "243bcd367ff3130d74676280233041f88aca62a5"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "b84fb41bb6ca2d69153cf5bd61f88492538ee713": "Ybodychange",
    "0708827a935d190d439854e08bb5a655d7daa606": "Ybodychange",
    "243bcd367ff3130d74676280233041f88aca62a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "31/10/17 1:09 AM",
      "commitNameOld": "c02d2ba50db8a355ea03081c3984b2ea0c375a3f",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 500.63,
      "commitsBetweenForRepo": 4349,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n     protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n         String containerManagerBindAddr, ContainerId containerId, Token token)\n         throws InvalidToken {\n \n       if (token \u003d\u003d null) {\n         throw new InvalidToken(\"No NMToken sent for \"\n             + containerManagerBindAddr);\n       }\n       \n       final InetSocketAddress cmAddr \u003d\n           NetUtils.createSocketAddr(containerManagerBindAddr);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Opening proxy : \" + containerManagerBindAddr);\n-      }\n+      LOG.debug(\"Opening proxy : {}\", containerManagerBindAddr);\n       // the user in createRemoteUser in this context has to be ContainerID\n       UserGroupInformation user \u003d\n           UserGroupInformation.createRemoteUser(containerId\n               .getApplicationAttemptId().toString());\n \n       org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n           ConverterUtils.convertFromYarn(token, cmAddr);\n       user.addToken(nmToken);\n \n       return NMProxy.createNMProxy(conf, ContainerManagementProtocol.class,\n         user, rpc, cmAddr);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n        String containerManagerBindAddr, ContainerId containerId, Token token)\n        throws InvalidToken {\n\n      if (token \u003d\u003d null) {\n        throw new InvalidToken(\"No NMToken sent for \"\n            + containerManagerBindAddr);\n      }\n      \n      final InetSocketAddress cmAddr \u003d\n          NetUtils.createSocketAddr(containerManagerBindAddr);\n      LOG.debug(\"Opening proxy : {}\", containerManagerBindAddr);\n      // the user in createRemoteUser in this context has to be ContainerID\n      UserGroupInformation user \u003d\n          UserGroupInformation.createRemoteUser(containerId\n              .getApplicationAttemptId().toString());\n\n      org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n          ConverterUtils.convertFromYarn(token, cmAddr);\n      user.addToken(nmToken);\n\n      return NMProxy.createNMProxy(conf, ContainerManagementProtocol.class,\n        user, rpc, cmAddr);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.java",
      "extendedDetails": {}
    },
    "b84fb41bb6ca2d69153cf5bd61f88492538ee713": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4115. Reduce loglevel of ContainerManagementProtocolProxy to Debug (adhoot via rkanter)\n",
      "commitDate": "11/09/15 11:46 AM",
      "commitName": "b84fb41bb6ca2d69153cf5bd61f88492538ee713",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "20/04/15 10:38 AM",
      "commitNameOld": "f967fd2f21791c5c4a5a090cc14ee88d155d2e2b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 144.05,
      "commitsBetweenForRepo": 1052,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n         String containerManagerBindAddr, ContainerId containerId, Token token)\n         throws InvalidToken {\n \n       if (token \u003d\u003d null) {\n         throw new InvalidToken(\"No NMToken sent for \"\n             + containerManagerBindAddr);\n       }\n       \n       final InetSocketAddress cmAddr \u003d\n           NetUtils.createSocketAddr(containerManagerBindAddr);\n-      LOG.info(\"Opening proxy : \" + containerManagerBindAddr);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Opening proxy : \" + containerManagerBindAddr);\n+      }\n       // the user in createRemoteUser in this context has to be ContainerID\n       UserGroupInformation user \u003d\n           UserGroupInformation.createRemoteUser(containerId\n               .getApplicationAttemptId().toString());\n \n       org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n           ConverterUtils.convertFromYarn(token, cmAddr);\n       user.addToken(nmToken);\n \n       return NMProxy.createNMProxy(conf, ContainerManagementProtocol.class,\n         user, rpc, cmAddr);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n        String containerManagerBindAddr, ContainerId containerId, Token token)\n        throws InvalidToken {\n\n      if (token \u003d\u003d null) {\n        throw new InvalidToken(\"No NMToken sent for \"\n            + containerManagerBindAddr);\n      }\n      \n      final InetSocketAddress cmAddr \u003d\n          NetUtils.createSocketAddr(containerManagerBindAddr);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Opening proxy : \" + containerManagerBindAddr);\n      }\n      // the user in createRemoteUser in this context has to be ContainerID\n      UserGroupInformation user \u003d\n          UserGroupInformation.createRemoteUser(containerId\n              .getApplicationAttemptId().toString());\n\n      org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n          ConverterUtils.convertFromYarn(token, cmAddr);\n      user.addToken(nmToken);\n\n      return NMProxy.createNMProxy(conf, ContainerManagementProtocol.class,\n        user, rpc, cmAddr);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.java",
      "extendedDetails": {}
    },
    "0708827a935d190d439854e08bb5a655d7daa606": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2613. Support retry in NMClient for rolling-upgrades. (Contributed by Jian He)\n",
      "commitDate": "01/10/14 4:50 PM",
      "commitName": "0708827a935d190d439854e08bb5a655d7daa606",
      "commitAuthor": "junping_du",
      "commitDateOld": "30/10/13 3:37 PM",
      "commitNameOld": "b8f1d1350b1f047a16cd6648d2349df41a989e8f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 336.05,
      "commitsBetweenForRepo": 2539,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,24 @@\n     protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n         String containerManagerBindAddr, ContainerId containerId, Token token)\n         throws InvalidToken {\n \n       if (token \u003d\u003d null) {\n         throw new InvalidToken(\"No NMToken sent for \"\n             + containerManagerBindAddr);\n       }\n       \n       final InetSocketAddress cmAddr \u003d\n           NetUtils.createSocketAddr(containerManagerBindAddr);\n       LOG.info(\"Opening proxy : \" + containerManagerBindAddr);\n       // the user in createRemoteUser in this context has to be ContainerID\n       UserGroupInformation user \u003d\n           UserGroupInformation.createRemoteUser(containerId\n               .getApplicationAttemptId().toString());\n \n       org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n           ConverterUtils.convertFromYarn(token, cmAddr);\n       user.addToken(nmToken);\n \n-      ContainerManagementProtocol proxy \u003d user\n-          .doAs(new PrivilegedAction\u003cContainerManagementProtocol\u003e() {\n-\n-            @Override\n-            public ContainerManagementProtocol run() {\n-              return (ContainerManagementProtocol) rpc.getProxy(\n-                  ContainerManagementProtocol.class, cmAddr, conf);\n-            }\n-          });\n-      return proxy;\n+      return NMProxy.createNMProxy(conf, ContainerManagementProtocol.class,\n+        user, rpc, cmAddr);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n        String containerManagerBindAddr, ContainerId containerId, Token token)\n        throws InvalidToken {\n\n      if (token \u003d\u003d null) {\n        throw new InvalidToken(\"No NMToken sent for \"\n            + containerManagerBindAddr);\n      }\n      \n      final InetSocketAddress cmAddr \u003d\n          NetUtils.createSocketAddr(containerManagerBindAddr);\n      LOG.info(\"Opening proxy : \" + containerManagerBindAddr);\n      // the user in createRemoteUser in this context has to be ContainerID\n      UserGroupInformation user \u003d\n          UserGroupInformation.createRemoteUser(containerId\n              .getApplicationAttemptId().toString());\n\n      org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n          ConverterUtils.convertFromYarn(token, cmAddr);\n      user.addToken(nmToken);\n\n      return NMProxy.createNMProxy(conf, ContainerManagementProtocol.class,\n        user, rpc, cmAddr);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.java",
      "extendedDetails": {}
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+    protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n+        String containerManagerBindAddr, ContainerId containerId, Token token)\n+        throws InvalidToken {\n+      if (token \u003d\u003d null) {\n+        throw new InvalidToken(\"No NMToken sent for \"\n+            + containerManagerBindAddr);\n+      }\n+      final InetSocketAddress cmAddr \u003d\n+          NetUtils.createSocketAddr(containerManagerBindAddr);\n+      LOG.info(\"Opening proxy : \" + containerManagerBindAddr);\n+      // the user in createRemoteUser in this context has to be ContainerID\n+      UserGroupInformation user \u003d\n+          UserGroupInformation.createRemoteUser(containerId\n+              .getApplicationAttemptId().toString());\n+\n+      org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n+          ConverterUtils.convertFromYarn(token, cmAddr);\n+      user.addToken(nmToken);\n+\n+      ContainerManagementProtocol proxy \u003d user\n+          .doAs(new PrivilegedAction\u003cContainerManagementProtocol\u003e() {\n+\n+            @Override\n+            public ContainerManagementProtocol run() {\n+              return (ContainerManagementProtocol) rpc.getProxy(\n+                  ContainerManagementProtocol.class, cmAddr, conf);\n+            }\n+          });\n+      return proxy;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected ContainerManagementProtocol newProxy(final YarnRPC rpc,\n        String containerManagerBindAddr, ContainerId containerId, Token token)\n        throws InvalidToken {\n      if (token \u003d\u003d null) {\n        throw new InvalidToken(\"No NMToken sent for \"\n            + containerManagerBindAddr);\n      }\n      final InetSocketAddress cmAddr \u003d\n          NetUtils.createSocketAddr(containerManagerBindAddr);\n      LOG.info(\"Opening proxy : \" + containerManagerBindAddr);\n      // the user in createRemoteUser in this context has to be ContainerID\n      UserGroupInformation user \u003d\n          UserGroupInformation.createRemoteUser(containerId\n              .getApplicationAttemptId().toString());\n\n      org.apache.hadoop.security.token.Token\u003cNMTokenIdentifier\u003e nmToken \u003d\n          ConverterUtils.convertFromYarn(token, cmAddr);\n      user.addToken(nmToken);\n\n      ContainerManagementProtocol proxy \u003d user\n          .doAs(new PrivilegedAction\u003cContainerManagementProtocol\u003e() {\n\n            @Override\n            public ContainerManagementProtocol run() {\n              return (ContainerManagementProtocol) rpc.getProxy(\n                  ContainerManagementProtocol.class, cmAddr, conf);\n            }\n          });\n      return proxy;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/ContainerManagementProtocolProxy.java"
    }
  }
}