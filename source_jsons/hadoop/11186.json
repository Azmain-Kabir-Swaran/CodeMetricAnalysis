{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsHandler.java",
  "functionName": "allowCORSOnCreate",
  "functionId": "allowCORSOnCreate___ctx-ChannelHandlerContext",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
  "functionStartLine": 311,
  "functionEndLine": 323,
  "numCommitsSeen": 19,
  "timeTaken": 1747,
  "changeHistory": [
    "bf74dbf80dc9379d669779a598950908adffb8a7",
    "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6"
  ],
  "changeHistoryShort": {
    "bf74dbf80dc9379d669779a598950908adffb8a7": "Ybodychange",
    "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf74dbf80dc9379d669779a598950908adffb8a7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7959. WebHdfs logging is missing on Datanode (Kihwal Lee via sjlee)\n",
      "commitDate": "24/06/16 2:44 PM",
      "commitName": "bf74dbf80dc9379d669779a598950908adffb8a7",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "23/05/16 3:52 PM",
      "commitNameOld": "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 31.95,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void allowCORSOnCreate(ChannelHandlerContext ctx)\n     throws IOException, URISyntaxException {\n-    DefaultHttpResponse response \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n-    HttpHeaders headers \u003d response.headers();\n+    resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n+    HttpHeaders headers \u003d resp.headers();\n     headers.set(ACCESS_CONTROL_ALLOW_ORIGIN, \"*\");\n     headers.set(ACCESS_CONTROL_ALLOW_HEADERS, ACCEPT);\n     headers.set(ACCESS_CONTROL_ALLOW_METHODS, PUT);\n     headers.set(ACCESS_CONTROL_MAX_AGE, 1728000);\n     headers.set(CONTENT_LENGTH, 0);\n     headers.set(CONNECTION, KEEP_ALIVE);\n \n-    ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n+    ctx.writeAndFlush(resp).addListener(ChannelFutureListener.CLOSE);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void allowCORSOnCreate(ChannelHandlerContext ctx)\n    throws IOException, URISyntaxException {\n    resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n    HttpHeaders headers \u003d resp.headers();\n    headers.set(ACCESS_CONTROL_ALLOW_ORIGIN, \"*\");\n    headers.set(ACCESS_CONTROL_ALLOW_HEADERS, ACCEPT);\n    headers.set(ACCESS_CONTROL_ALLOW_METHODS, PUT);\n    headers.set(ACCESS_CONTROL_MAX_AGE, 1728000);\n    headers.set(CONTENT_LENGTH, 0);\n    headers.set(CONNECTION, KEEP_ALIVE);\n\n    ctx.writeAndFlush(resp).addListener(ChannelFutureListener.CLOSE);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
      "extendedDetails": {}
    },
    "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7766. Add a flag to WebHDFS op\u003dCREATE to not respond with a 307 redirect (Ravi Prakash via aw)\n",
      "commitDate": "23/05/16 3:52 PM",
      "commitName": "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6",
      "commitAuthor": "Allen Wittenauer",
      "diff": "@@ -0,0 +1,13 @@\n+  private void allowCORSOnCreate(ChannelHandlerContext ctx)\n+    throws IOException, URISyntaxException {\n+    DefaultHttpResponse response \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n+    HttpHeaders headers \u003d response.headers();\n+    headers.set(ACCESS_CONTROL_ALLOW_ORIGIN, \"*\");\n+    headers.set(ACCESS_CONTROL_ALLOW_HEADERS, ACCEPT);\n+    headers.set(ACCESS_CONTROL_ALLOW_METHODS, PUT);\n+    headers.set(ACCESS_CONTROL_MAX_AGE, 1728000);\n+    headers.set(CONTENT_LENGTH, 0);\n+    headers.set(CONNECTION, KEEP_ALIVE);\n+\n+    ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void allowCORSOnCreate(ChannelHandlerContext ctx)\n    throws IOException, URISyntaxException {\n    DefaultHttpResponse response \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n    HttpHeaders headers \u003d response.headers();\n    headers.set(ACCESS_CONTROL_ALLOW_ORIGIN, \"*\");\n    headers.set(ACCESS_CONTROL_ALLOW_HEADERS, ACCEPT);\n    headers.set(ACCESS_CONTROL_ALLOW_METHODS, PUT);\n    headers.set(ACCESS_CONTROL_MAX_AGE, 1728000);\n    headers.set(CONTENT_LENGTH, 0);\n    headers.set(CONNECTION, KEEP_ALIVE);\n\n    ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java"
    }
  }
}