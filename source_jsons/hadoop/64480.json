{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AUtils.java",
  "functionName": "buildAWSProviderList",
  "functionId": "buildAWSProviderList___binding-URI(annotations-@Nullable__modifiers-final)__conf-Configuration(modifiers-final)__key-String(modifiers-final)__defaultValues-List__Class__?____(modifiers-final)__forbidden-Set__Class__?____(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
  "functionStartLine": 660,
  "functionEndLine": 690,
  "numCommitsSeen": 51,
  "timeTaken": 1652,
  "changeHistory": [
    "6d0bffe17eadedd60d4599427248b0db4a7c5502"
  ],
  "changeHistoryShort": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,31 @@\n+  public static AWSCredentialProviderList buildAWSProviderList(\n+      @Nullable final URI binding,\n+      final Configuration conf,\n+      final String key,\n+      final List\u003cClass\u003c?\u003e\u003e defaultValues,\n+      final Set\u003cClass\u003c?\u003e\u003e forbidden) throws IOException {\n+\n+    // build up the base provider\n+    List\u003cClass\u003c?\u003e\u003e awsClasses \u003d loadAWSProviderClasses(conf,\n+        key,\n+        defaultValues.toArray(new Class[defaultValues.size()]));\n+    // and if the list is empty, switch back to the defaults.\n+    // this is to address the issue that configuration.getClasses()\n+    // doesn\u0027t return the default if the config value is just whitespace.\n+    if (awsClasses.isEmpty()) {\n+      awsClasses \u003d defaultValues;\n+    }\n+    // iterate through, checking for blacklists and then instantiating\n+    // each provider\n+    AWSCredentialProviderList providers \u003d new AWSCredentialProviderList();\n+    for (Class\u003c?\u003e aClass : awsClasses) {\n+\n+      if (forbidden.contains(aClass)) {\n+        throw new IOException(E_FORBIDDEN_AWS_PROVIDER\n+            + \" in option \" + key + \": \" + aClass);\n+      }\n+      providers.add(createAWSCredentialProvider(conf,\n+          aClass, binding));\n+    }\n+    return providers;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static AWSCredentialProviderList buildAWSProviderList(\n      @Nullable final URI binding,\n      final Configuration conf,\n      final String key,\n      final List\u003cClass\u003c?\u003e\u003e defaultValues,\n      final Set\u003cClass\u003c?\u003e\u003e forbidden) throws IOException {\n\n    // build up the base provider\n    List\u003cClass\u003c?\u003e\u003e awsClasses \u003d loadAWSProviderClasses(conf,\n        key,\n        defaultValues.toArray(new Class[defaultValues.size()]));\n    // and if the list is empty, switch back to the defaults.\n    // this is to address the issue that configuration.getClasses()\n    // doesn\u0027t return the default if the config value is just whitespace.\n    if (awsClasses.isEmpty()) {\n      awsClasses \u003d defaultValues;\n    }\n    // iterate through, checking for blacklists and then instantiating\n    // each provider\n    AWSCredentialProviderList providers \u003d new AWSCredentialProviderList();\n    for (Class\u003c?\u003e aClass : awsClasses) {\n\n      if (forbidden.contains(aClass)) {\n        throw new IOException(E_FORBIDDEN_AWS_PROVIDER\n            + \" in option \" + key + \": \" + aClass);\n      }\n      providers.add(createAWSCredentialProvider(conf,\n          aClass, binding));\n    }\n    return providers;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java"
    }
  }
}