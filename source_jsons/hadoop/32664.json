{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeStatusUpdaterImpl.java",
  "functionName": "createKeepAliveApplicationList",
  "functionId": "createKeepAliveApplicationList",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
  "functionStartLine": 488,
  "functionEndLine": 509,
  "numCommitsSeen": 134,
  "timeTaken": 2561,
  "changeHistory": [
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b"
  ],
  "changeHistoryShort": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private List\u003cApplicationId\u003e createKeepAliveApplicationList() {\n    if (!tokenKeepAliveEnabled) {\n      return Collections.emptyList();\n    }\n\n    List\u003cApplicationId\u003e appList \u003d new ArrayList\u003cApplicationId\u003e();\n    for (Iterator\u003cEntry\u003cApplicationId, Long\u003e\u003e i \u003d\n        this.appTokenKeepAliveMap.entrySet().iterator(); i.hasNext();) {\n      Entry\u003cApplicationId, Long\u003e e \u003d i.next();\n      ApplicationId appId \u003d e.getKey();\n      Long nextKeepAlive \u003d e.getValue();\n      if (!this.context.getApplications().containsKey(appId)) {\n        // Remove if the application has finished.\n        i.remove();\n      } else if (System.currentTimeMillis() \u003e nextKeepAlive) {\n        // KeepAlive list for the next hearbeat.\n        appList.add(appId);\n        trackAppForKeepAlive(appId);\n      }\n    }\n    return appList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
      }
    },
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3398. Fixed log aggregation to work correctly in secure mode. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214429 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 11:55 AM",
      "commitName": "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  private List\u003cApplicationId\u003e createKeepAliveApplicationList() {\n+    if (!tokenKeepAliveEnabled) {\n+      return Collections.emptyList();\n+    }\n+\n+    List\u003cApplicationId\u003e appList \u003d new ArrayList\u003cApplicationId\u003e();\n+    for (Iterator\u003cEntry\u003cApplicationId, Long\u003e\u003e i \u003d\n+        this.appTokenKeepAliveMap.entrySet().iterator(); i.hasNext();) {\n+      Entry\u003cApplicationId, Long\u003e e \u003d i.next();\n+      ApplicationId appId \u003d e.getKey();\n+      Long nextKeepAlive \u003d e.getValue();\n+      if (!this.context.getApplications().containsKey(appId)) {\n+        // Remove if the application has finished.\n+        i.remove();\n+      } else if (System.currentTimeMillis() \u003e nextKeepAlive) {\n+        // KeepAlive list for the next hearbeat.\n+        appList.add(appId);\n+        trackAppForKeepAlive(appId);\n+      }\n+    }\n+    return appList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cApplicationId\u003e createKeepAliveApplicationList() {\n    if (!tokenKeepAliveEnabled) {\n      return Collections.emptyList();\n    }\n\n    List\u003cApplicationId\u003e appList \u003d new ArrayList\u003cApplicationId\u003e();\n    for (Iterator\u003cEntry\u003cApplicationId, Long\u003e\u003e i \u003d\n        this.appTokenKeepAliveMap.entrySet().iterator(); i.hasNext();) {\n      Entry\u003cApplicationId, Long\u003e e \u003d i.next();\n      ApplicationId appId \u003d e.getKey();\n      Long nextKeepAlive \u003d e.getValue();\n      if (!this.context.getApplications().containsKey(appId)) {\n        // Remove if the application has finished.\n        i.remove();\n      } else if (System.currentTimeMillis() \u003e nextKeepAlive) {\n        // KeepAlive list for the next hearbeat.\n        appList.add(appId);\n        trackAppForKeepAlive(appId);\n      }\n    }\n    return appList;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
    }
  }
}