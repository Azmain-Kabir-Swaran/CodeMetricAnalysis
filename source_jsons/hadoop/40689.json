{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MemoryPlacementConstraintManager.java",
  "functionName": "getConstraints",
  "functionId": "getConstraints___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/MemoryPlacementConstraintManager.java",
  "functionStartLine": 182,
  "functionEndLine": 204,
  "numCommitsSeen": 5,
  "timeTaken": 2270,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "24bc5e0e4d919fddae983fc13d4ba4e4e5cb9533",
    "1efb2b6f250022f41fe5911c1bb3028ec15c5447"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "24bc5e0e4d919fddae983fc13d4ba4e4e5cb9533": "Ybodychange",
    "1efb2b6f250022f41fe5911c1bb3028ec15c5447": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n       ApplicationId appId) {\n     readLock.lock();\n     try {\n       if (appConstraints.get(appId) \u003d\u003d null) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Application {} is not registered in the Placement \"\n-              + \"Constraint Manager.\", appId);\n-        }\n+        LOG.debug(\"Application {} is not registered in the Placement \"\n+            + \"Constraint Manager.\", appId);\n         return null;\n       }\n \n       // Copy to a new map and return an unmodifiable version of it.\n       // Each key of the map is a set with a single source tag.\n       Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n           appConstraints.get(appId).entrySet().stream()\n               .collect(Collectors.toMap(\n                   e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                   e -\u003e e.getValue()));\n \n       return Collections.unmodifiableMap(constraintMap);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n      ApplicationId appId) {\n    readLock.lock();\n    try {\n      if (appConstraints.get(appId) \u003d\u003d null) {\n        LOG.debug(\"Application {} is not registered in the Placement \"\n            + \"Constraint Manager.\", appId);\n        return null;\n      }\n\n      // Copy to a new map and return an unmodifiable version of it.\n      // Each key of the map is a set with a single source tag.\n      Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n          appConstraints.get(appId).entrySet().stream()\n              .collect(Collectors.toMap(\n                  e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                  e -\u003e e.getValue()));\n\n      return Collections.unmodifiableMap(constraintMap);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/MemoryPlacementConstraintManager.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "26/03/18 11:20 AM",
      "commitNameOld": "24bc5e0e4d919fddae983fc13d4ba4e4e5cb9533",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 346.14,
      "commitsBetweenForRepo": 3168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n       ApplicationId appId) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       if (appConstraints.get(appId) \u003d\u003d null) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Application {} is not registered in the Placement \"\n               + \"Constraint Manager.\", appId);\n         }\n         return null;\n       }\n \n       // Copy to a new map and return an unmodifiable version of it.\n       // Each key of the map is a set with a single source tag.\n       Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n           appConstraints.get(appId).entrySet().stream()\n               .collect(Collectors.toMap(\n                   e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                   e -\u003e e.getValue()));\n \n       return Collections.unmodifiableMap(constraintMap);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n      ApplicationId appId) {\n    readLock.lock();\n    try {\n      if (appConstraints.get(appId) \u003d\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Application {} is not registered in the Placement \"\n              + \"Constraint Manager.\", appId);\n        }\n        return null;\n      }\n\n      // Copy to a new map and return an unmodifiable version of it.\n      // Each key of the map is a set with a single source tag.\n      Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n          appConstraints.get(appId).entrySet().stream()\n              .collect(Collectors.toMap(\n                  e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                  e -\u003e e.getValue()));\n\n      return Collections.unmodifiableMap(constraintMap);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/MemoryPlacementConstraintManager.java",
      "extendedDetails": {}
    },
    "24bc5e0e4d919fddae983fc13d4ba4e4e5cb9533": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8072. RM log is getting flooded with MemoryPlacementConstraintManager info logs. (Zian Chen via wangda)\n\nChange-Id: I2567f4669ad868e13c4301fe44c4bde85bb92c37\n",
      "commitDate": "26/03/18 11:20 AM",
      "commitName": "24bc5e0e4d919fddae983fc13d4ba4e4e5cb9533",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/02/18 2:46 PM",
      "commitNameOld": "50723889cc29e8dadfa6ab6afbb90ac798d66878",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 51.82,
      "commitsBetweenForRepo": 457,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n       ApplicationId appId) {\n     try {\n       readLock.lock();\n       if (appConstraints.get(appId) \u003d\u003d null) {\n-        LOG.info(\"Application {} is not registered in the Placement \"\n-            + \"Constraint Manager.\", appId);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Application {} is not registered in the Placement \"\n+              + \"Constraint Manager.\", appId);\n+        }\n         return null;\n       }\n \n       // Copy to a new map and return an unmodifiable version of it.\n       // Each key of the map is a set with a single source tag.\n       Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n           appConstraints.get(appId).entrySet().stream()\n               .collect(Collectors.toMap(\n                   e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                   e -\u003e e.getValue()));\n \n       return Collections.unmodifiableMap(constraintMap);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n      ApplicationId appId) {\n    try {\n      readLock.lock();\n      if (appConstraints.get(appId) \u003d\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Application {} is not registered in the Placement \"\n              + \"Constraint Manager.\", appId);\n        }\n        return null;\n      }\n\n      // Copy to a new map and return an unmodifiable version of it.\n      // Each key of the map is a set with a single source tag.\n      Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n          appConstraints.get(appId).entrySet().stream()\n              .collect(Collectors.toMap(\n                  e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                  e -\u003e e.getValue()));\n\n      return Collections.unmodifiableMap(constraintMap);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/MemoryPlacementConstraintManager.java",
      "extendedDetails": {}
    },
    "1efb2b6f250022f41fe5911c1bb3028ec15c5447": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6596. Introduce Placement Constraint Manager module. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "1efb2b6f250022f41fe5911c1bb3028ec15c5447",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,23 @@\n+  public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n+      ApplicationId appId) {\n+    try {\n+      readLock.lock();\n+      if (appConstraints.get(appId) \u003d\u003d null) {\n+        LOG.info(\"Application {} is not registered in the Placement \"\n+            + \"Constraint Manager.\", appId);\n+        return null;\n+      }\n+\n+      // Copy to a new map and return an unmodifiable version of it.\n+      // Each key of the map is a set with a single source tag.\n+      Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n+          appConstraints.get(appId).entrySet().stream()\n+              .collect(Collectors.toMap(\n+                  e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n+                  e -\u003e e.getValue()));\n+\n+      return Collections.unmodifiableMap(constraintMap);\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e getConstraints(\n      ApplicationId appId) {\n    try {\n      readLock.lock();\n      if (appConstraints.get(appId) \u003d\u003d null) {\n        LOG.info(\"Application {} is not registered in the Placement \"\n            + \"Constraint Manager.\", appId);\n        return null;\n      }\n\n      // Copy to a new map and return an unmodifiable version of it.\n      // Each key of the map is a set with a single source tag.\n      Map\u003cSet\u003cString\u003e, PlacementConstraint\u003e constraintMap \u003d\n          appConstraints.get(appId).entrySet().stream()\n              .collect(Collectors.toMap(\n                  e -\u003e Stream.of(e.getKey()).collect(Collectors.toSet()),\n                  e -\u003e e.getValue()));\n\n      return Collections.unmodifiableMap(constraintMap);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/MemoryPlacementConstraintManager.java"
    }
  }
}