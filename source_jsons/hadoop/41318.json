{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "isReservable",
  "functionId": "isReservable___capacity-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 923,
  "functionEndLine": 929,
  "numCommitsSeen": 104,
  "timeTaken": 4666,
  "changeHistory": [
    "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf",
    "5279af7cd4afb090da742a96b5786d9dee6224bc",
    "94dec5a9164cd9bc573fbf74e76bcff9e7c5c637"
  ],
  "changeHistoryShort": {
    "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf": "Ybodychange",
    "5279af7cd4afb090da742a96b5786d9dee6224bc": "Ymultichange(Yparameterchange,Ybodychange)",
    "94dec5a9164cd9bc573fbf74e76bcff9e7c5c637": "Yintroduced"
  },
  "changeHistoryDetails": {
    "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6210. FairScheduler: Node reservations can interfere with preemption. (kasha)\n",
      "commitDate": "22/02/17 3:46 PM",
      "commitName": "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/02/17 2:07 PM",
      "commitNameOld": "dbbfcf74ab44d7bfdc805b63affd0defc57182b8",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 5.07,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,7 @@\n   private boolean isReservable(Resource capacity) {\n-    return scheduler.isAtLeastReservationThreshold(\n-        getQueue().getPolicy().getResourceCalculator(), capacity);\n+    // Reserve only when the app is starved and the requested container size\n+    // is larger than the configured threshold\n+    return isStarved() \u0026\u0026\n+        scheduler.isAtLeastReservationThreshold(\n+            getQueue().getPolicy().getResourceCalculator(), capacity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isReservable(Resource capacity) {\n    // Reserve only when the app is starved and the requested container size\n    // is larger than the configured threshold\n    return isStarved() \u0026\u0026\n        scheduler.isAtLeastReservationThreshold(\n            getQueue().getPolicy().getResourceCalculator(), capacity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "5279af7cd4afb090da742a96b5786d9dee6224bc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5082. Limit ContainerId increase in fair scheduler if the num of node app reserved reached the limit (sandflee via asuresh)\n",
      "commitDate": "10/06/16 10:33 PM",
      "commitName": "5279af7cd4afb090da742a96b5786d9dee6224bc",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5082. Limit ContainerId increase in fair scheduler if the num of node app reserved reached the limit (sandflee via asuresh)\n",
          "commitDate": "10/06/16 10:33 PM",
          "commitName": "5279af7cd4afb090da742a96b5786d9dee6224bc",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/05/16 8:54 AM",
          "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 12.57,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-  private boolean isReservable(Container container) {\n+  private boolean isReservable(Resource capacity) {\n     return scheduler.isAtLeastReservationThreshold(\n-      getQueue().getPolicy().getResourceCalculator(), container.getResource());\n+        getQueue().getPolicy().getResourceCalculator(), capacity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isReservable(Resource capacity) {\n    return scheduler.isAtLeastReservationThreshold(\n        getQueue().getPolicy().getResourceCalculator(), capacity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {
            "oldValue": "[container-Container]",
            "newValue": "[capacity-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5082. Limit ContainerId increase in fair scheduler if the num of node app reserved reached the limit (sandflee via asuresh)\n",
          "commitDate": "10/06/16 10:33 PM",
          "commitName": "5279af7cd4afb090da742a96b5786d9dee6224bc",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/05/16 8:54 AM",
          "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 12.57,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-  private boolean isReservable(Container container) {\n+  private boolean isReservable(Resource capacity) {\n     return scheduler.isAtLeastReservationThreshold(\n-      getQueue().getPolicy().getResourceCalculator(), container.getResource());\n+        getQueue().getPolicy().getResourceCalculator(), capacity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isReservable(Resource capacity) {\n    return scheduler.isAtLeastReservationThreshold(\n        getQueue().getPolicy().getResourceCalculator(), capacity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "94dec5a9164cd9bc573fbf74e76bcff9e7c5c637": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3920. FairScheduler container reservation on a node should be configurable to limit it to large containers (adhoot via asuresh)\n",
      "commitDate": "18/09/15 2:02 PM",
      "commitName": "94dec5a9164cd9bc573fbf74e76bcff9e7c5c637",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,4 @@\n+  private boolean isReservable(Container container) {\n+    return scheduler.isAtLeastReservationThreshold(\n+      getQueue().getPolicy().getResourceCalculator(), container.getResource());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isReservable(Container container) {\n    return scheduler.isAtLeastReservationThreshold(\n      getQueue().getPolicy().getResourceCalculator(), container.getResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}