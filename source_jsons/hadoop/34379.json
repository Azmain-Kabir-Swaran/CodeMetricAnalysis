{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalCacheCleaner.java",
  "functionName": "addResources",
  "functionId": "addResources___newTracker-LocalResourcesTracker",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalCacheCleaner.java",
  "functionStartLine": 66,
  "functionEndLine": 75,
  "numCommitsSeen": 5,
  "timeTaken": 7773,
  "changeHistory": [
    "1b79c417dca17bcd2e031864bc6ca07254c61b47",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "1b79c417dca17bcd2e031864bc6ca07254c61b47": "Ymultichange(Ymovefromfile,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1b79c417dca17bcd2e031864bc6ca07254c61b47": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-5767. Fix the order that resources are cleaned up from the local Public/Private caches. Contributed by Chris Trezzo\n",
      "commitDate": "28/10/16 8:58 AM",
      "commitName": "1b79c417dca17bcd2e031864bc6ca07254c61b47",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5767. Fix the order that resources are cleaned up from the local Public/Private caches. Contributed by Chris Trezzo\n",
          "commitDate": "28/10/16 8:58 AM",
          "commitName": "1b79c417dca17bcd2e031864bc6ca07254c61b47",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "28/10/16 8:48 AM",
          "commitNameOld": "7146359bfd436a76585fb1f3ea93716795308cec",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,10 @@\n   public void addResources(LocalResourcesTracker newTracker) {\n     for (LocalizedResource resource : newTracker) {\n       currentSize +\u003d resource.getSize();\n       if (resource.getRefCount() \u003e 0) {\n-        // always retain resources in use\n+        // Do not delete resources that are still in use\n         continue;\n       }\n-      retain.put(resource, newTracker);\n-    }\n-    for (Iterator\u003cMap.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e\u003e i \u003d\n-           retain.entrySet().iterator();\n-         currentSize - delSize \u003e targetSize \u0026\u0026 i.hasNext();) {\n-      Map.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e rsrc \u003d i.next();\n-      LocalizedResource resource \u003d rsrc.getKey();\n-      LocalResourcesTracker tracker \u003d rsrc.getValue();\n-      if (tracker.remove(resource, delService)) {\n-        delSize +\u003d resource.getSize();\n-        i.remove();\n-      }\n+      resourceMap.put(resource, newTracker);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addResources(LocalResourcesTracker newTracker) {\n    for (LocalizedResource resource : newTracker) {\n      currentSize +\u003d resource.getSize();\n      if (resource.getRefCount() \u003e 0) {\n        // Do not delete resources that are still in use\n        continue;\n      }\n      resourceMap.put(resource, newTracker);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalCacheCleaner.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalCacheCleaner.java",
            "oldMethodName": "addResources",
            "newMethodName": "addResources"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5767. Fix the order that resources are cleaned up from the local Public/Private caches. Contributed by Chris Trezzo\n",
          "commitDate": "28/10/16 8:58 AM",
          "commitName": "1b79c417dca17bcd2e031864bc6ca07254c61b47",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "28/10/16 8:48 AM",
          "commitNameOld": "7146359bfd436a76585fb1f3ea93716795308cec",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,10 @@\n   public void addResources(LocalResourcesTracker newTracker) {\n     for (LocalizedResource resource : newTracker) {\n       currentSize +\u003d resource.getSize();\n       if (resource.getRefCount() \u003e 0) {\n-        // always retain resources in use\n+        // Do not delete resources that are still in use\n         continue;\n       }\n-      retain.put(resource, newTracker);\n-    }\n-    for (Iterator\u003cMap.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e\u003e i \u003d\n-           retain.entrySet().iterator();\n-         currentSize - delSize \u003e targetSize \u0026\u0026 i.hasNext();) {\n-      Map.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e rsrc \u003d i.next();\n-      LocalizedResource resource \u003d rsrc.getKey();\n-      LocalResourcesTracker tracker \u003d rsrc.getValue();\n-      if (tracker.remove(resource, delService)) {\n-        delSize +\u003d resource.getSize();\n-        i.remove();\n-      }\n+      resourceMap.put(resource, newTracker);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addResources(LocalResourcesTracker newTracker) {\n    for (LocalizedResource resource : newTracker) {\n      currentSize +\u003d resource.getSize();\n      if (resource.getRefCount() \u003e 0) {\n        // Do not delete resources that are still in use\n        continue;\n      }\n      resourceMap.put(resource, newTracker);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalCacheCleaner.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void addResources(LocalResourcesTracker newTracker) {\n    for (LocalizedResource resource : newTracker) {\n      currentSize +\u003d resource.getSize();\n      if (resource.getRefCount() \u003e 0) {\n        // always retain resources in use\n        continue;\n      }\n      retain.put(resource, newTracker);\n    }\n    for (Iterator\u003cMap.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e\u003e i \u003d\n           retain.entrySet().iterator();\n         currentSize - delSize \u003e targetSize \u0026\u0026 i.hasNext();) {\n      Map.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e rsrc \u003d i.next();\n      LocalizedResource resource \u003d rsrc.getKey();\n      LocalResourcesTracker tracker \u003d rsrc.getValue();\n      if (tracker.remove(resource, delService)) {\n        delSize +\u003d resource.getSize();\n        i.remove();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void addResources(LocalResourcesTracker newTracker) {\n    for (LocalizedResource resource : newTracker) {\n      currentSize +\u003d resource.getSize();\n      if (resource.getRefCount() \u003e 0) {\n        // always retain resources in use\n        continue;\n      }\n      retain.put(resource, newTracker);\n    }\n    for (Iterator\u003cMap.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e\u003e i \u003d\n           retain.entrySet().iterator();\n         currentSize - delSize \u003e targetSize \u0026\u0026 i.hasNext();) {\n      Map.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e rsrc \u003d i.next();\n      LocalizedResource resource \u003d rsrc.getKey();\n      LocalResourcesTracker tracker \u003d rsrc.getValue();\n      if (tracker.remove(resource, delService)) {\n        delSize +\u003d resource.getSize();\n        i.remove();\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+  public void addResources(LocalResourcesTracker newTracker) {\n+    for (LocalizedResource resource : newTracker) {\n+      currentSize +\u003d resource.getSize();\n+      if (resource.getRefCount() \u003e 0) {\n+        // always retain resources in use\n+        continue;\n+      }\n+      retain.put(resource, newTracker);\n+    }\n+    for (Iterator\u003cMap.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e\u003e i \u003d\n+           retain.entrySet().iterator();\n+         currentSize - delSize \u003e targetSize \u0026\u0026 i.hasNext();) {\n+      Map.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e rsrc \u003d i.next();\n+      LocalizedResource resource \u003d rsrc.getKey();\n+      LocalResourcesTracker tracker \u003d rsrc.getValue();\n+      if (tracker.remove(resource, delService)) {\n+        delSize +\u003d resource.getSize();\n+        i.remove();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addResources(LocalResourcesTracker newTracker) {\n    for (LocalizedResource resource : newTracker) {\n      currentSize +\u003d resource.getSize();\n      if (resource.getRefCount() \u003e 0) {\n        // always retain resources in use\n        continue;\n      }\n      retain.put(resource, newTracker);\n    }\n    for (Iterator\u003cMap.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e\u003e i \u003d\n           retain.entrySet().iterator();\n         currentSize - delSize \u003e targetSize \u0026\u0026 i.hasNext();) {\n      Map.Entry\u003cLocalizedResource,LocalResourcesTracker\u003e rsrc \u003d i.next();\n      LocalizedResource resource \u003d rsrc.getKey();\n      LocalResourcesTracker tracker \u003d rsrc.getValue();\n      if (tracker.remove(resource, delService)) {\n        delSize +\u003d resource.getSize();\n        i.remove();\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceRetentionSet.java"
    }
  }
}