{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PathData.java",
  "functionName": "relativize",
  "functionId": "relativize___cwdUri-URI__srcUri-URI__isDir-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
  "functionStartLine": 415,
  "functionEndLine": 440,
  "numCommitsSeen": 18,
  "timeTaken": 864,
  "changeHistory": [
    "659ea4c540e440004d9f1a7dedefa91c0bec8b04"
  ],
  "changeHistoryShort": {
    "659ea4c540e440004d9f1a7dedefa91c0bec8b04": "Yintroduced"
  },
  "changeHistoryDetails": {
    "659ea4c540e440004d9f1a7dedefa91c0bec8b04": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7360. Preserve relative paths that do not contain globs in FsShell.  Contributed by Daryn Sharp and Kihwal Lee \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190109 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 6:13 PM",
      "commitName": "659ea4c540e440004d9f1a7dedefa91c0bec8b04",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,26 @@\n+  private static String relativize(URI cwdUri, URI srcUri, boolean isDir) {\n+    String uriPath \u003d srcUri.getPath();\n+    String cwdPath \u003d cwdUri.getPath();\n+    if (cwdPath.equals(uriPath)) {\n+      return Path.CUR_DIR;\n+    }\n+\n+    // find common ancestor\n+    int lastSep \u003d findLongestDirPrefix(cwdPath, uriPath, isDir);\n+    \n+    StringBuilder relPath \u003d new StringBuilder();    \n+    // take the remaining path fragment after the ancestor\n+    if (lastSep \u003c uriPath.length()) {\n+      relPath.append(uriPath.substring(lastSep+1));\n+    }\n+\n+    // if cwd has a path fragment after the ancestor, convert them to \"..\"\n+    if (lastSep \u003c cwdPath.length()) {\n+      while (lastSep !\u003d -1) {\n+        if (relPath.length() !\u003d 0) relPath.insert(0, Path.SEPARATOR);\n+        relPath.insert(0, \"..\");\n+        lastSep \u003d cwdPath.indexOf(Path.SEPARATOR, lastSep+1);\n+      }\n+    }\n+    return relPath.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String relativize(URI cwdUri, URI srcUri, boolean isDir) {\n    String uriPath \u003d srcUri.getPath();\n    String cwdPath \u003d cwdUri.getPath();\n    if (cwdPath.equals(uriPath)) {\n      return Path.CUR_DIR;\n    }\n\n    // find common ancestor\n    int lastSep \u003d findLongestDirPrefix(cwdPath, uriPath, isDir);\n    \n    StringBuilder relPath \u003d new StringBuilder();    \n    // take the remaining path fragment after the ancestor\n    if (lastSep \u003c uriPath.length()) {\n      relPath.append(uriPath.substring(lastSep+1));\n    }\n\n    // if cwd has a path fragment after the ancestor, convert them to \"..\"\n    if (lastSep \u003c cwdPath.length()) {\n      while (lastSep !\u003d -1) {\n        if (relPath.length() !\u003d 0) relPath.insert(0, Path.SEPARATOR);\n        relPath.insert(0, \"..\");\n        lastSep \u003d cwdPath.indexOf(Path.SEPARATOR, lastSep+1);\n      }\n    }\n    return relPath.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java"
    }
  }
}