{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebAppFilter.java",
  "functionName": "appendOrReplaceParamter",
  "functionId": "appendOrReplaceParamter___uri-String__newQuery-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppFilter.java",
  "functionStartLine": 250,
  "functionEndLine": 272,
  "numCommitsSeen": 13,
  "timeTaken": 1229,
  "changeHistory": [
    "a3fd2ccc869dfc1f04d1cf0a8678d4d90a43a80f"
  ],
  "changeHistoryShort": {
    "a3fd2ccc869dfc1f04d1cf0a8678d4d90a43a80f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3fd2ccc869dfc1f04d1cf0a8678d4d90a43a80f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4092. Fixed UI redirection to print useful messages when both RMs are in standby mode. Contributed by Xuan Gong\n",
      "commitDate": "31/08/15 5:33 PM",
      "commitName": "a3fd2ccc869dfc1f04d1cf0a8678d4d90a43a80f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,23 @@\n+  private String appendOrReplaceParamter(String uri, String newQuery) {\n+    if (uri.contains(YarnWebParams.NEXT_REFRESH_INTERVAL + \"\u003d\")) {\n+      return uri.replaceAll(YarnWebParams.NEXT_REFRESH_INTERVAL + \"\u003d[^\u0026]+\",\n+        newQuery);\n+    }\n+    try {\n+      URI oldUri \u003d new URI(uri);\n+      String appendQuery \u003d oldUri.getQuery();\n+      if (appendQuery \u003d\u003d null) {\n+        appendQuery \u003d newQuery;\n+      } else {\n+        appendQuery +\u003d \"\u0026\" + newQuery;\n+      }\n+\n+      URI newUri \u003d\n+          new URI(oldUri.getScheme(), oldUri.getAuthority(), oldUri.getPath(),\n+            appendQuery, oldUri.getFragment());\n+\n+      return newUri.toString();\n+    } catch (URISyntaxException e) {\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String appendOrReplaceParamter(String uri, String newQuery) {\n    if (uri.contains(YarnWebParams.NEXT_REFRESH_INTERVAL + \"\u003d\")) {\n      return uri.replaceAll(YarnWebParams.NEXT_REFRESH_INTERVAL + \"\u003d[^\u0026]+\",\n        newQuery);\n    }\n    try {\n      URI oldUri \u003d new URI(uri);\n      String appendQuery \u003d oldUri.getQuery();\n      if (appendQuery \u003d\u003d null) {\n        appendQuery \u003d newQuery;\n      } else {\n        appendQuery +\u003d \"\u0026\" + newQuery;\n      }\n\n      URI newUri \u003d\n          new URI(oldUri.getScheme(), oldUri.getAuthority(), oldUri.getPath(),\n            appendQuery, oldUri.getFragment());\n\n      return newUri.toString();\n    } catch (URISyntaxException e) {\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebAppFilter.java"
    }
  }
}