{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemorySCMStore.java",
  "functionName": "bootstrap",
  "functionId": "bootstrap___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/store/InMemorySCMStore.java",
  "functionStartLine": 166,
  "functionEndLine": 184,
  "numCommitsSeen": 6,
  "timeTaken": 648,
  "changeHistory": [
    "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8"
  ],
  "changeHistoryShort": {
    "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2180. [YARN-1492] In-memory backing store for cache manager. (Chris Trezzo via kasha)\n",
      "commitDate": "09/10/14 5:16 PM",
      "commitName": "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,19 @@\n+  private void bootstrap(Configuration conf) throws IOException {\n+    Map\u003cString, String\u003e initialCachedResources \u003d\n+        getInitialCachedResources(FileSystem.get(conf), conf);\n+    LOG.info(\"Bootstrapping from \" + initialCachedResources.size()\n+        + \" cache resources located in the file system\");\n+    Iterator\u003cMap.Entry\u003cString, String\u003e\u003e it \u003d\n+        initialCachedResources.entrySet().iterator();\n+    while (it.hasNext()) {\n+      Map.Entry\u003cString, String\u003e e \u003d it.next();\n+      String key \u003d intern(e.getKey());\n+      String fileName \u003d e.getValue();\n+      SharedCacheResource resource \u003d new SharedCacheResource(fileName);\n+      // we don\u0027t hold the lock for this as it is done as part of serviceInit\n+      cachedResources.put(key, resource);\n+      // clear out the initial resource to reduce the footprint\n+      it.remove();\n+    }\n+    LOG.info(\"Bootstrapping complete\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void bootstrap(Configuration conf) throws IOException {\n    Map\u003cString, String\u003e initialCachedResources \u003d\n        getInitialCachedResources(FileSystem.get(conf), conf);\n    LOG.info(\"Bootstrapping from \" + initialCachedResources.size()\n        + \" cache resources located in the file system\");\n    Iterator\u003cMap.Entry\u003cString, String\u003e\u003e it \u003d\n        initialCachedResources.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cString, String\u003e e \u003d it.next();\n      String key \u003d intern(e.getKey());\n      String fileName \u003d e.getValue();\n      SharedCacheResource resource \u003d new SharedCacheResource(fileName);\n      // we don\u0027t hold the lock for this as it is done as part of serviceInit\n      cachedResources.put(key, resource);\n      // clear out the initial resource to reduce the footprint\n      it.remove();\n    }\n    LOG.info(\"Bootstrapping complete\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/store/InMemorySCMStore.java"
    }
  }
}