{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WeightedPolicyInfo.java",
  "functionName": "equals",
  "functionId": "equals___other-Object",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/dao/WeightedPolicyInfo.java",
  "functionStartLine": 182,
  "functionEndLine": 205,
  "numCommitsSeen": 3,
  "timeTaken": 538,
  "changeHistory": [
    "0662996b6af19deece21b95b961d9362accc5159"
  ],
  "changeHistoryShort": {
    "0662996b6af19deece21b95b961d9362accc5159": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0662996b6af19deece21b95b961d9362accc5159": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5324. Stateless Federation router policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 1298127bdad60a961441dc7e25cdc2553c119f33)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "0662996b6af19deece21b95b961d9362accc5159",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,25 @@\n+  public boolean equals(Object other) {\n+\n+    if (other \u003d\u003d null || !other.getClass().equals(this.getClass())) {\n+      return false;\n+    }\n+\n+    WeightedPolicyInfo otherPolicy \u003d\n+        (WeightedPolicyInfo) other;\n+    Map\u003cSubClusterIdInfo, Float\u003e otherAMRMWeights \u003d\n+        otherPolicy.getAMRMPolicyWeights();\n+    Map\u003cSubClusterIdInfo, Float\u003e otherRouterWeights \u003d\n+        otherPolicy.getRouterPolicyWeights();\n+\n+    boolean amrmWeightsMatch \u003d otherAMRMWeights !\u003d null \u0026\u0026\n+        getAMRMPolicyWeights() !\u003d null \u0026\u0026\n+        CollectionUtils.isEqualCollection(otherAMRMWeights.entrySet(),\n+            getAMRMPolicyWeights().entrySet());\n+\n+    boolean routerWeightsMatch \u003d otherRouterWeights !\u003d null \u0026\u0026\n+        getRouterPolicyWeights() !\u003d null \u0026\u0026\n+        CollectionUtils.isEqualCollection(otherRouterWeights.entrySet(),\n+            getRouterPolicyWeights().entrySet());\n+\n+    return amrmWeightsMatch \u0026\u0026 routerWeightsMatch;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object other) {\n\n    if (other \u003d\u003d null || !other.getClass().equals(this.getClass())) {\n      return false;\n    }\n\n    WeightedPolicyInfo otherPolicy \u003d\n        (WeightedPolicyInfo) other;\n    Map\u003cSubClusterIdInfo, Float\u003e otherAMRMWeights \u003d\n        otherPolicy.getAMRMPolicyWeights();\n    Map\u003cSubClusterIdInfo, Float\u003e otherRouterWeights \u003d\n        otherPolicy.getRouterPolicyWeights();\n\n    boolean amrmWeightsMatch \u003d otherAMRMWeights !\u003d null \u0026\u0026\n        getAMRMPolicyWeights() !\u003d null \u0026\u0026\n        CollectionUtils.isEqualCollection(otherAMRMWeights.entrySet(),\n            getAMRMPolicyWeights().entrySet());\n\n    boolean routerWeightsMatch \u003d otherRouterWeights !\u003d null \u0026\u0026\n        getRouterPolicyWeights() !\u003d null \u0026\u0026\n        CollectionUtils.isEqualCollection(otherRouterWeights.entrySet(),\n            getRouterPolicyWeights().entrySet());\n\n    return amrmWeightsMatch \u0026\u0026 routerWeightsMatch;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/dao/WeightedPolicyInfo.java"
    }
  }
}