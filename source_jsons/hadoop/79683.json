{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FTPFileSystem.java",
  "functionName": "getFileStatus",
  "functionId": "getFileStatus___ftpFile-FTPFile__parentPath-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
  "functionStartLine": 557,
  "functionEndLine": 572,
  "numCommitsSeen": 25,
  "timeTaken": 1456,
  "changeHistory": [
    "4222c971080f2b150713727092c7197df58c88e5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "4222c971080f2b150713727092c7197df58c88e5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4222c971080f2b150713727092c7197df58c88e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10392. Use FileSystem#makeQualified(Path) instead of Path#makeQualified(FileSystem) (ajisakaa via aw)\n",
      "commitDate": "11/08/17 9:25 AM",
      "commitName": "4222c971080f2b150713727092c7197df58c88e5",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.5,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n     long length \u003d ftpFile.getSize();\n     boolean isDir \u003d ftpFile.isDirectory();\n     int blockReplication \u003d 1;\n     // Using default block size since there is no way in FTP client to know of\n     // block sizes on server. The assumption could be less than ideal.\n     long blockSize \u003d DEFAULT_BLOCK_SIZE;\n     long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n     long accessTime \u003d 0;\n     FsPermission permission \u003d getPermissions(ftpFile);\n     String user \u003d ftpFile.getUser();\n     String group \u003d ftpFile.getGroup();\n     Path filePath \u003d new Path(parentPath, ftpFile.getName());\n     return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n-        accessTime, permission, user, group, filePath.makeQualified(this));\n+        accessTime, permission, user, group, this.makeQualified(filePath));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n    long length \u003d ftpFile.getSize();\n    boolean isDir \u003d ftpFile.isDirectory();\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in FTP client to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n    long accessTime \u003d 0;\n    FsPermission permission \u003d getPermissions(ftpFile);\n    String user \u003d ftpFile.getUser();\n    String group \u003d ftpFile.getGroup();\n    Path filePath \u003d new Path(parentPath, ftpFile.getName());\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, this.makeQualified(filePath));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n    long length \u003d ftpFile.getSize();\n    boolean isDir \u003d ftpFile.isDirectory();\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in FTP client to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n    long accessTime \u003d 0;\n    FsPermission permission \u003d getPermissions(ftpFile);\n    String user \u003d ftpFile.getUser();\n    String group \u003d ftpFile.getGroup();\n    Path filePath \u003d new Path(parentPath, ftpFile.getName());\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(this));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n    long length \u003d ftpFile.getSize();\n    boolean isDir \u003d ftpFile.isDirectory();\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in FTP client to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n    long accessTime \u003d 0;\n    FsPermission permission \u003d getPermissions(ftpFile);\n    String user \u003d ftpFile.getUser();\n    String group \u003d ftpFile.getGroup();\n    Path filePath \u003d new Path(parentPath, ftpFile.getName());\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(this));\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n    long length \u003d ftpFile.getSize();\n    boolean isDir \u003d ftpFile.isDirectory();\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in FTP client to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n    long accessTime \u003d 0;\n    FsPermission permission \u003d getPermissions(ftpFile);\n    String user \u003d ftpFile.getUser();\n    String group \u003d ftpFile.getGroup();\n    Path filePath \u003d new Path(parentPath, ftpFile.getName());\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(this));\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,16 @@\n+  private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n+    long length \u003d ftpFile.getSize();\n+    boolean isDir \u003d ftpFile.isDirectory();\n+    int blockReplication \u003d 1;\n+    // Using default block size since there is no way in FTP client to know of\n+    // block sizes on server. The assumption could be less than ideal.\n+    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n+    long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n+    long accessTime \u003d 0;\n+    FsPermission permission \u003d getPermissions(ftpFile);\n+    String user \u003d ftpFile.getUser();\n+    String group \u003d ftpFile.getGroup();\n+    Path filePath \u003d new Path(parentPath, ftpFile.getName());\n+    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n+        accessTime, permission, user, group, filePath.makeQualified(this));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus getFileStatus(FTPFile ftpFile, Path parentPath) {\n    long length \u003d ftpFile.getSize();\n    boolean isDir \u003d ftpFile.isDirectory();\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in FTP client to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d ftpFile.getTimestamp().getTimeInMillis();\n    long accessTime \u003d 0;\n    FsPermission permission \u003d getPermissions(ftpFile);\n    String user \u003d ftpFile.getUser();\n    String group \u003d ftpFile.getGroup();\n    Path filePath \u003d new Path(parentPath, ftpFile.getName());\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(this));\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
    }
  }
}