{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommitterEventHandler.java",
  "functionName": "handleJobCommit",
  "functionId": "handleJobCommit___event-CommitterJobCommitEvent",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/commit/CommitterEventHandler.java",
  "functionStartLine": 273,
  "functionEndLine": 303,
  "numCommitsSeen": 12,
  "timeTaken": 1479,
  "changeHistory": [
    "6502d59e73cd6f3f3a358fce58d398ca38a61fba",
    "64e4fb983e022d8d3375a3e1b8facbf95f7ba403",
    "78ab699fe93cafbaff8f496be53d26aff40a68b1",
    "402eb1851341fce72c8e46266a2578bb67b5b684"
  ],
  "changeHistoryShort": {
    "6502d59e73cd6f3f3a358fce58d398ca38a61fba": "Ybodychange",
    "64e4fb983e022d8d3375a3e1b8facbf95f7ba403": "Ybodychange",
    "78ab699fe93cafbaff8f496be53d26aff40a68b1": "Ybodychange",
    "402eb1851341fce72c8e46266a2578bb67b5b684": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6502d59e73cd6f3f3a358fce58d398ca38a61fba": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5485. Allow repeating job commit by extending OutputCommitter API. Contributed by Junping Du\n",
      "commitDate": "16/11/15 5:06 PM",
      "commitName": "6502d59e73cd6f3f3a358fce58d398ca38a61fba",
      "commitAuthor": "Jian He",
      "commitDateOld": "28/08/14 7:05 PM",
      "commitNameOld": "fef8554be80c01519870ad2969f6c9f3df4d6a7f",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 444.96,
      "commitsBetweenForRepo": 3763,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,31 @@\n     protected void handleJobCommit(CommitterJobCommitEvent event) {\n+      boolean commitJobIsRepeatable \u003d false;\n       try {\n-        touchz(startCommitFile);\n+        commitJobIsRepeatable \u003d committer.isCommitJobRepeatable(\n+            event.getJobContext());\n+      } catch (IOException e) {\n+        LOG.warn(\"Exception in committer.isCommitJobRepeatable():\", e);\n+      }\n+\n+      try {\n+        touchz(startCommitFile, commitJobIsRepeatable);\n         jobCommitStarted();\n         waitForValidCommitWindow();\n         committer.commitJob(event.getJobContext());\n-        touchz(endCommitSuccessFile);\n+        touchz(endCommitSuccessFile, commitJobIsRepeatable);\n         context.getEventHandler().handle(\n             new JobCommitCompletedEvent(event.getJobID()));\n       } catch (Exception e) {\n+        LOG.error(\"Could not commit job\", e);\n         try {\n-          touchz(endCommitFailureFile);\n+          touchz(endCommitFailureFile, commitJobIsRepeatable);\n         } catch (Exception e2) {\n           LOG.error(\"could not create failure file.\", e2);\n         }\n-        LOG.error(\"Could not commit job\", e);\n         context.getEventHandler().handle(\n             new JobCommitFailedEvent(event.getJobID(),\n                 StringUtils.stringifyException(e)));\n       } finally {\n         jobCommitEnded();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void handleJobCommit(CommitterJobCommitEvent event) {\n      boolean commitJobIsRepeatable \u003d false;\n      try {\n        commitJobIsRepeatable \u003d committer.isCommitJobRepeatable(\n            event.getJobContext());\n      } catch (IOException e) {\n        LOG.warn(\"Exception in committer.isCommitJobRepeatable():\", e);\n      }\n\n      try {\n        touchz(startCommitFile, commitJobIsRepeatable);\n        jobCommitStarted();\n        waitForValidCommitWindow();\n        committer.commitJob(event.getJobContext());\n        touchz(endCommitSuccessFile, commitJobIsRepeatable);\n        context.getEventHandler().handle(\n            new JobCommitCompletedEvent(event.getJobID()));\n      } catch (Exception e) {\n        LOG.error(\"Could not commit job\", e);\n        try {\n          touchz(endCommitFailureFile, commitJobIsRepeatable);\n        } catch (Exception e2) {\n          LOG.error(\"could not create failure file.\", e2);\n        }\n        context.getEventHandler().handle(\n            new JobCommitFailedEvent(event.getJobID(),\n                StringUtils.stringifyException(e)));\n      } finally {\n        jobCommitEnded();\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/commit/CommitterEventHandler.java",
      "extendedDetails": {}
    },
    "64e4fb983e022d8d3375a3e1b8facbf95f7ba403": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4819. AM can rerun job after reporting final job status to the client (bobby and Bikas Saha via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1429114 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/13 12:35 PM",
      "commitName": "64e4fb983e022d8d3375a3e1b8facbf95f7ba403",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "04/01/13 11:15 AM",
      "commitNameOld": "78ab699fe93cafbaff8f496be53d26aff40a68b1",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,23 @@\n     protected void handleJobCommit(CommitterJobCommitEvent event) {\n       try {\n+        touchz(startCommitFile);\n         jobCommitStarted();\n         waitForValidCommitWindow();\n         committer.commitJob(event.getJobContext());\n+        touchz(endCommitSuccessFile);\n         context.getEventHandler().handle(\n             new JobCommitCompletedEvent(event.getJobID()));\n       } catch (Exception e) {\n-          LOG.error(\"Could not commit job\", e);\n-          context.getEventHandler().handle(\n-              new JobCommitFailedEvent(event.getJobID(),\n-                  StringUtils.stringifyException(e)));\n+        try {\n+          touchz(endCommitFailureFile);\n+        } catch (Exception e2) {\n+          LOG.error(\"could not create failure file.\", e2);\n+        }\n+        LOG.error(\"Could not commit job\", e);\n+        context.getEventHandler().handle(\n+            new JobCommitFailedEvent(event.getJobID(),\n+                StringUtils.stringifyException(e)));\n       } finally {\n         jobCommitEnded();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void handleJobCommit(CommitterJobCommitEvent event) {\n      try {\n        touchz(startCommitFile);\n        jobCommitStarted();\n        waitForValidCommitWindow();\n        committer.commitJob(event.getJobContext());\n        touchz(endCommitSuccessFile);\n        context.getEventHandler().handle(\n            new JobCommitCompletedEvent(event.getJobID()));\n      } catch (Exception e) {\n        try {\n          touchz(endCommitFailureFile);\n        } catch (Exception e2) {\n          LOG.error(\"could not create failure file.\", e2);\n        }\n        LOG.error(\"Could not commit job\", e);\n        context.getEventHandler().handle(\n            new JobCommitFailedEvent(event.getJobID(),\n                StringUtils.stringifyException(e)));\n      } finally {\n        jobCommitEnded();\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/commit/CommitterEventHandler.java",
      "extendedDetails": {}
    },
    "78ab699fe93cafbaff8f496be53d26aff40a68b1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4832. MR AM can get in a split brain situation. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1429040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/13 11:15 AM",
      "commitName": "78ab699fe93cafbaff8f496be53d26aff40a68b1",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "28/12/12 7:01 AM",
      "commitNameOld": "402eb1851341fce72c8e46266a2578bb67b5b684",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 7.18,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n     protected void handleJobCommit(CommitterJobCommitEvent event) {\n       try {\n         jobCommitStarted();\n+        waitForValidCommitWindow();\n         committer.commitJob(event.getJobContext());\n         context.getEventHandler().handle(\n             new JobCommitCompletedEvent(event.getJobID()));\n       } catch (Exception e) {\n           LOG.error(\"Could not commit job\", e);\n           context.getEventHandler().handle(\n               new JobCommitFailedEvent(event.getJobID(),\n                   StringUtils.stringifyException(e)));\n       } finally {\n         jobCommitEnded();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void handleJobCommit(CommitterJobCommitEvent event) {\n      try {\n        jobCommitStarted();\n        waitForValidCommitWindow();\n        committer.commitJob(event.getJobContext());\n        context.getEventHandler().handle(\n            new JobCommitCompletedEvent(event.getJobID()));\n      } catch (Exception e) {\n          LOG.error(\"Could not commit job\", e);\n          context.getEventHandler().handle(\n              new JobCommitFailedEvent(event.getJobID(),\n                  StringUtils.stringifyException(e)));\n      } finally {\n        jobCommitEnded();\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/commit/CommitterEventHandler.java",
      "extendedDetails": {}
    },
    "402eb1851341fce72c8e46266a2578bb67b5b684": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4813. AM timing out during job commit (jlowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1426536 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/12/12 7:01 AM",
      "commitName": "402eb1851341fce72c8e46266a2578bb67b5b684",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,15 @@\n+    protected void handleJobCommit(CommitterJobCommitEvent event) {\n+      try {\n+        jobCommitStarted();\n+        committer.commitJob(event.getJobContext());\n+        context.getEventHandler().handle(\n+            new JobCommitCompletedEvent(event.getJobID()));\n+      } catch (Exception e) {\n+          LOG.error(\"Could not commit job\", e);\n+          context.getEventHandler().handle(\n+              new JobCommitFailedEvent(event.getJobID(),\n+                  StringUtils.stringifyException(e)));\n+      } finally {\n+        jobCommitEnded();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void handleJobCommit(CommitterJobCommitEvent event) {\n      try {\n        jobCommitStarted();\n        committer.commitJob(event.getJobContext());\n        context.getEventHandler().handle(\n            new JobCommitCompletedEvent(event.getJobID()));\n      } catch (Exception e) {\n          LOG.error(\"Could not commit job\", e);\n          context.getEventHandler().handle(\n              new JobCommitFailedEvent(event.getJobID(),\n                  StringUtils.stringifyException(e)));\n      } finally {\n        jobCommitEnded();\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/commit/CommitterEventHandler.java"
    }
  }
}