{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EncryptionZoneManager.java",
  "functionName": "pauseForTestingAfterNthCheckpoint",
  "functionId": "pauseForTestingAfterNthCheckpoint___zone-String(modifiers-final)__count-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
  "functionStartLine": 186,
  "functionEndLine": 198,
  "numCommitsSeen": 42,
  "timeTaken": 3055,
  "changeHistory": [
    "ecbcb058b8bc0fbc3903acb56814c6d9608bc396",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "ecbcb058b8bc0fbc3903acb56814c6d9608bc396": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ecbcb058b8bc0fbc3903acb56814c6d9608bc396": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14731. [FGL] Remove redundant locking on NameNode. Contributed by Konstantin V Shvachko.",
      "commitDate": "21/02/20 5:53 PM",
      "commitName": "ecbcb058b8bc0fbc3903acb56814c6d9608bc396",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "07/02/20 1:21 AM",
      "commitNameOld": "7dac7e1d13eaf0eac04fe805c7502dcecd597979",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 14.69,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void pauseForTestingAfterNthCheckpoint(final String zone,\n       final int count) throws IOException {\n     INodesInPath iip;\n     final FSPermissionChecker pc \u003d dir.getPermissionChecker();\n-    dir.readLock();\n+    dir.getFSNamesystem().readLock();\n     try {\n       iip \u003d dir.resolvePath(pc, zone, DirOp.READ);\n     } finally {\n-      dir.readUnlock();\n+      dir.getFSNamesystem().readUnlock();\n     }\n     reencryptionHandler\n         .pauseForTestingAfterNthCheckpoint(iip.getLastINode().getId(), count);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void pauseForTestingAfterNthCheckpoint(final String zone,\n      final int count) throws IOException {\n    INodesInPath iip;\n    final FSPermissionChecker pc \u003d dir.getPermissionChecker();\n    dir.getFSNamesystem().readLock();\n    try {\n      iip \u003d dir.resolvePath(pc, zone, DirOp.READ);\n    } finally {\n      dir.getFSNamesystem().readUnlock();\n    }\n    reencryptionHandler\n        .pauseForTestingAfterNthCheckpoint(iip.getLastINode().getId(), count);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "05/09/17 10:08 AM",
      "commitNameOld": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 170.1,
      "commitsBetweenForRepo": 1223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public void pauseForTestingAfterNthCheckpoint(final String zone,\n       final int count) throws IOException {\n     INodesInPath iip;\n+    final FSPermissionChecker pc \u003d dir.getPermissionChecker();\n     dir.readLock();\n     try {\n-      iip \u003d dir.resolvePath(dir.getPermissionChecker(), zone, DirOp.READ);\n+      iip \u003d dir.resolvePath(pc, zone, DirOp.READ);\n     } finally {\n       dir.readUnlock();\n     }\n     reencryptionHandler\n         .pauseForTestingAfterNthCheckpoint(iip.getLastINode().getId(), count);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void pauseForTestingAfterNthCheckpoint(final String zone,\n      final int count) throws IOException {\n    INodesInPath iip;\n    final FSPermissionChecker pc \u003d dir.getPermissionChecker();\n    dir.readLock();\n    try {\n      iip \u003d dir.resolvePath(pc, zone, DirOp.READ);\n    } finally {\n      dir.readUnlock();\n    }\n    reencryptionHandler\n        .pauseForTestingAfterNthCheckpoint(iip.getLastINode().getId(), count);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,12 @@\n+  public void pauseForTestingAfterNthCheckpoint(final String zone,\n+      final int count) throws IOException {\n+    INodesInPath iip;\n+    dir.readLock();\n+    try {\n+      iip \u003d dir.resolvePath(dir.getPermissionChecker(), zone, DirOp.READ);\n+    } finally {\n+      dir.readUnlock();\n+    }\n+    reencryptionHandler\n+        .pauseForTestingAfterNthCheckpoint(iip.getLastINode().getId(), count);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void pauseForTestingAfterNthCheckpoint(final String zone,\n      final int count) throws IOException {\n    INodesInPath iip;\n    dir.readLock();\n    try {\n      iip \u003d dir.resolvePath(dir.getPermissionChecker(), zone, DirOp.READ);\n    } finally {\n      dir.readUnlock();\n    }\n    reencryptionHandler\n        .pauseForTestingAfterNthCheckpoint(iip.getLastINode().getId(), count);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java"
    }
  }
}