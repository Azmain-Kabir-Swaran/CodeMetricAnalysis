{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionName": "append",
  "functionId": "append___controller-RpcController__req-AppendRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 513,
  "functionEndLine": 533,
  "numCommitsSeen": 141,
  "timeTaken": 3912,
  "changeHistory": [
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "f05c21285ef23b6a973d69f045b1cb46c5abc039",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
    "1556f86a31a54733d6550363aa0e027acca7823b",
    "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e",
    "48da033901d3471ef176a94104158546152353e9"
  ],
  "changeHistoryShort": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "f05c21285ef23b6a973d69f045b1cb46c5abc039": "Ybodychange",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Ybodychange",
    "1556f86a31a54733d6550363aa0e027acca7823b": "Ybodychange",
    "8f70a25b1c5df498c441a9b3475a8ada5a92111f": "Ybodychange",
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e": "Ybodychange",
    "48da033901d3471ef176a94104158546152353e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 24.18,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public AppendResponseProto append(RpcController controller,\n       AppendRequestProto req) throws ServiceException {\n     try {\n       EnumSetWritable\u003cCreateFlag\u003e flags \u003d req.hasFlag() ?\n-          PBHelper.convertCreateFlag(req.getFlag()) :\n+          PBHelperClient.convertCreateFlag(req.getFlag()) :\n           new EnumSetWritable\u003c\u003e(EnumSet.of(CreateFlag.APPEND));\n       LastBlockWithStatus result \u003d server.append(req.getSrc(),\n           req.getClientName(), flags);\n       AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n       if (result.getLastBlock() !\u003d null) {\n-        builder.setBlock(PBHelper.convert(result.getLastBlock()));\n+        builder.setBlock(PBHelperClient.convert(result.getLastBlock()));\n       }\n       if (result.getFileStatus() !\u003d null) {\n-        builder.setStat(PBHelper.convert(result.getFileStatus()));\n+        builder.setStat(PBHelperClient.convert(result.getFileStatus()));\n       }\n       return builder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      EnumSetWritable\u003cCreateFlag\u003e flags \u003d req.hasFlag() ?\n          PBHelperClient.convertCreateFlag(req.getFlag()) :\n          new EnumSetWritable\u003c\u003e(EnumSet.of(CreateFlag.APPEND));\n      LastBlockWithStatus result \u003d server.append(req.getSrc(),\n          req.getClientName(), flags);\n      AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n      if (result.getLastBlock() !\u003d null) {\n        builder.setBlock(PBHelperClient.convert(result.getLastBlock()));\n      }\n      if (result.getFileStatus() !\u003d null) {\n        builder.setStat(PBHelperClient.convert(result.getFileStatus()));\n      }\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "f05c21285ef23b6a973d69f045b1cb46c5abc039": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7853. Erasure coding: extend LocatedBlocks to support reading from striped files. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:32 AM",
      "commitName": "f05c21285ef23b6a973d69f045b1cb46c5abc039",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 24.06,
      "commitsBetweenForRepo": 279,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public AppendResponseProto append(RpcController controller,\n       AppendRequestProto req) throws ServiceException {\n     try {\n       EnumSetWritable\u003cCreateFlag\u003e flags \u003d req.hasFlag() ?\n           PBHelper.convertCreateFlag(req.getFlag()) :\n           new EnumSetWritable\u003c\u003e(EnumSet.of(CreateFlag.APPEND));\n       LastBlockWithStatus result \u003d server.append(req.getSrc(),\n           req.getClientName(), flags);\n       AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n       if (result.getLastBlock() !\u003d null) {\n-        builder.setBlock(PBHelper.convert(result.getLastBlock()));\n+        builder.setBlock(PBHelper.convertLocatedBlock(result.getLastBlock()));\n       }\n       if (result.getFileStatus() !\u003d null) {\n         builder.setStat(PBHelper.convert(result.getFileStatus()));\n       }\n       return builder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      EnumSetWritable\u003cCreateFlag\u003e flags \u003d req.hasFlag() ?\n          PBHelper.convertCreateFlag(req.getFlag()) :\n          new EnumSetWritable\u003c\u003e(EnumSet.of(CreateFlag.APPEND));\n      LastBlockWithStatus result \u003d server.append(req.getSrc(),\n          req.getClientName(), flags);\n      AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n      if (result.getLastBlock() !\u003d null) {\n        builder.setBlock(PBHelper.convertLocatedBlock(result.getLastBlock()));\n      }\n      if (result.getFileStatus() !\u003d null) {\n        builder.setStat(PBHelper.convert(result.getFileStatus()));\n      }\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "12/01/15 10:50 PM",
      "commitNameOld": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
      "commitAuthorOld": "Plamen Jeliazkov",
      "daysBetweenCommits": 14.59,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   public AppendResponseProto append(RpcController controller,\n       AppendRequestProto req) throws ServiceException {\n     try {\n+      EnumSetWritable\u003cCreateFlag\u003e flags \u003d req.hasFlag() ?\n+          PBHelper.convertCreateFlag(req.getFlag()) :\n+          new EnumSetWritable\u003c\u003e(EnumSet.of(CreateFlag.APPEND));\n       LastBlockWithStatus result \u003d server.append(req.getSrc(),\n-          req.getClientName());\n+          req.getClientName(), flags);\n       AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n       if (result.getLastBlock() !\u003d null) {\n         builder.setBlock(PBHelper.convert(result.getLastBlock()));\n       }\n       if (result.getFileStatus() !\u003d null) {\n         builder.setStat(PBHelper.convert(result.getFileStatus()));\n       }\n       return builder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      EnumSetWritable\u003cCreateFlag\u003e flags \u003d req.hasFlag() ?\n          PBHelper.convertCreateFlag(req.getFlag()) :\n          new EnumSetWritable\u003c\u003e(EnumSet.of(CreateFlag.APPEND));\n      LastBlockWithStatus result \u003d server.append(req.getSrc(),\n          req.getClientName(), flags);\n      AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n      if (result.getLastBlock() !\u003d null) {\n        builder.setBlock(PBHelper.convert(result.getLastBlock()));\n      }\n      if (result.getFileStatus() !\u003d null) {\n        builder.setStat(PBHelper.convert(result.getFileStatus()));\n      }\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "1556f86a31a54733d6550363aa0e027acca7823b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7210. Avoid two separate RPC\u0027s namenode.append() and namenode.getFileInfo() for an append call from DFSClient. (Vinayakumar B via umamahesh)\n",
      "commitDate": "28/11/14 7:39 AM",
      "commitName": "1556f86a31a54733d6550363aa0e027acca7823b",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "29/09/14 2:14 PM",
      "commitNameOld": "7f0efe96f85704e39349f20ab6a11bfaa81c6a75",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 59.77,
      "commitsBetweenForRepo": 530,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   public AppendResponseProto append(RpcController controller,\n       AppendRequestProto req) throws ServiceException {\n     try {\n-      LocatedBlock result \u003d server.append(req.getSrc(), req.getClientName());\n-      if (result !\u003d null) {\n-        return AppendResponseProto.newBuilder()\n-            .setBlock(PBHelper.convert(result)).build();\n+      LastBlockWithStatus result \u003d server.append(req.getSrc(),\n+          req.getClientName());\n+      AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n+      if (result.getLastBlock() !\u003d null) {\n+        builder.setBlock(PBHelper.convert(result.getLastBlock()));\n       }\n-      return VOID_APPEND_RESPONSE;\n+      if (result.getFileStatus() !\u003d null) {\n+        builder.setStat(PBHelper.convert(result.getFileStatus()));\n+      }\n+      return builder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      LastBlockWithStatus result \u003d server.append(req.getSrc(),\n          req.getClientName());\n      AppendResponseProto.Builder builder \u003d AppendResponseProto.newBuilder();\n      if (result.getLastBlock() !\u003d null) {\n        builder.setBlock(PBHelper.convert(result.getLastBlock()));\n      }\n      if (result.getFileStatus() !\u003d null) {\n        builder.setStat(PBHelper.convert(result.getFileStatus()));\n      }\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "8f70a25b1c5df498c441a9b3475a8ada5a92111f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4393. Make empty request and responses in protocol translators can be static final members. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1434844 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/01/13 10:21 AM",
      "commitName": "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "14/01/13 4:26 PM",
      "commitNameOld": "8767a37b9bd589286871be1272ee72fb331a31ad",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 2.75,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public AppendResponseProto append(RpcController controller,\n       AppendRequestProto req) throws ServiceException {\n     try {\n       LocatedBlock result \u003d server.append(req.getSrc(), req.getClientName());\n       if (result !\u003d null) {\n         return AppendResponseProto.newBuilder()\n             .setBlock(PBHelper.convert(result)).build();\n       }\n-      return NULL_APPEND_RESPONSE;\n+      return VOID_APPEND_RESPONSE;\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      LocatedBlock result \u003d server.append(req.getSrc(), req.getClientName());\n      if (result !\u003d null) {\n        return AppendResponseProto.newBuilder()\n            .setBlock(PBHelper.convert(result)).build();\n      }\n      return VOID_APPEND_RESPONSE;\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e": {
      "type": "Ybodychange",
      "commitMessage": "    HDFS-2669 Enable protobuf rpc for ClientNamenodeProtocol\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214128 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 1:27 AM",
      "commitName": "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "13/12/11 3:31 PM",
      "commitNameOld": "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public AppendResponseProto append(RpcController controller,\n       AppendRequestProto req) throws ServiceException {\n     try {\n-      return AppendResponseProto\n-          .newBuilder()\n-          .setBlock(\n-              PBHelper.convert(server.append(req.getSrc(), req.getClientName())))\n-          .build();\n+      LocatedBlock result \u003d server.append(req.getSrc(), req.getClientName());\n+      if (result !\u003d null) {\n+        return AppendResponseProto.newBuilder()\n+            .setBlock(PBHelper.convert(result)).build();\n+      }\n+      return NULL_APPEND_RESPONSE;\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      LocatedBlock result \u003d server.append(req.getSrc(), req.getClientName());\n      if (result !\u003d null) {\n        return AppendResponseProto.newBuilder()\n            .setBlock(PBHelper.convert(result)).build();\n      }\n      return NULL_APPEND_RESPONSE;\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "48da033901d3471ef176a94104158546152353e9": {
      "type": "Yintroduced",
      "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/11 9:36 PM",
      "commitName": "48da033901d3471ef176a94104158546152353e9",
      "commitAuthor": "Sanjay Radia",
      "diff": "@@ -0,0 +1,12 @@\n+  public AppendResponseProto append(RpcController controller,\n+      AppendRequestProto req) throws ServiceException {\n+    try {\n+      return AppendResponseProto\n+          .newBuilder()\n+          .setBlock(\n+              PBHelper.convert(server.append(req.getSrc(), req.getClientName())))\n+          .build();\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppendResponseProto append(RpcController controller,\n      AppendRequestProto req) throws ServiceException {\n    try {\n      return AppendResponseProto\n          .newBuilder()\n          .setBlock(\n              PBHelper.convert(server.append(req.getSrc(), req.getClientName())))\n          .build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java"
    }
  }
}