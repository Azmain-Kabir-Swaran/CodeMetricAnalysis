{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Nfs3Utils.java",
  "functionName": "getResolvedURI",
  "functionId": "getResolvedURI___fs-FileSystem__exportPath-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/Nfs3Utils.java",
  "functionStartLine": 248,
  "functionEndLine": 272,
  "numCommitsSeen": 15,
  "timeTaken": 906,
  "changeHistory": [
    "d6602b5f39833611b4afa4581552f6c4c37e23a8"
  ],
  "changeHistoryShort": {
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
      "commitDate": "10/10/17 10:38 AM",
      "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthor": "Jitendra Pandey",
      "diff": "@@ -0,0 +1,25 @@\n+  public static URI getResolvedURI(FileSystem fs, String exportPath)\n+      throws IOException {\n+    URI fsURI \u003d fs.getUri();\n+    String scheme \u003d fs.getScheme();\n+    if (scheme.equalsIgnoreCase(FsConstants.VIEWFS_SCHEME)) {\n+      ViewFileSystem viewFs \u003d (ViewFileSystem)fs;\n+      ViewFileSystem.MountPoint[] mountPoints \u003d viewFs.getMountPoints();\n+      for (ViewFileSystem.MountPoint mount : mountPoints) {\n+        String mountedPath \u003d mount.getMountedOnPath().toString();\n+        if (exportPath.startsWith(mountedPath)) {\n+          String subpath \u003d exportPath.substring(mountedPath.length());\n+          fsURI \u003d mount.getTargetFileSystemURIs()[0].resolve(subpath);\n+          break;\n+        }\n+      }\n+    } else if (scheme.equalsIgnoreCase(HdfsConstants.HDFS_URI_SCHEME)) {\n+      fsURI \u003d fsURI.resolve(exportPath);\n+    }\n+\n+    if (!fsURI.getScheme().equalsIgnoreCase(HdfsConstants.HDFS_URI_SCHEME)) {\n+      throw new FileSystemException(\"Only HDFS is supported as underlying\"\n+          + \"FileSystem, fs scheme:\" + scheme + \" uri to be added\" + fsURI);\n+    }\n+    return fsURI;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static URI getResolvedURI(FileSystem fs, String exportPath)\n      throws IOException {\n    URI fsURI \u003d fs.getUri();\n    String scheme \u003d fs.getScheme();\n    if (scheme.equalsIgnoreCase(FsConstants.VIEWFS_SCHEME)) {\n      ViewFileSystem viewFs \u003d (ViewFileSystem)fs;\n      ViewFileSystem.MountPoint[] mountPoints \u003d viewFs.getMountPoints();\n      for (ViewFileSystem.MountPoint mount : mountPoints) {\n        String mountedPath \u003d mount.getMountedOnPath().toString();\n        if (exportPath.startsWith(mountedPath)) {\n          String subpath \u003d exportPath.substring(mountedPath.length());\n          fsURI \u003d mount.getTargetFileSystemURIs()[0].resolve(subpath);\n          break;\n        }\n      }\n    } else if (scheme.equalsIgnoreCase(HdfsConstants.HDFS_URI_SCHEME)) {\n      fsURI \u003d fsURI.resolve(exportPath);\n    }\n\n    if (!fsURI.getScheme().equalsIgnoreCase(HdfsConstants.HDFS_URI_SCHEME)) {\n      throw new FileSystemException(\"Only HDFS is supported as underlying\"\n          + \"FileSystem, fs scheme:\" + scheme + \" uri to be added\" + fsURI);\n    }\n    return fsURI;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/Nfs3Utils.java"
    }
  }
}