{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SignalLogger.java",
  "functionName": "register",
  "functionId": "register___LOG-LogAdapter(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SignalLogger.java",
  "functionStartLine": 75,
  "functionEndLine": 96,
  "numCommitsSeen": 4,
  "timeTaken": 1848,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "9175105eeaecf0a1d60b57989b73ce45cee4689b",
    "c2003ab56b39c370678d7f6fe0b7fd3d8a7d0be8"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "9175105eeaecf0a1d60b57989b73ce45cee4689b": "Ymultichange(Yparameterchange,Ymodifierchange)",
    "c2003ab56b39c370678d7f6fe0b7fd3d8a7d0be8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "04/02/15 11:31 AM",
      "commitNameOld": "9175105eeaecf0a1d60b57989b73ce45cee4689b",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1436.97,
      "commitsBetweenForRepo": 11022,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   void register(final LogAdapter LOG) {\n     if (registered) {\n       throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n     }\n     registered \u003d true;\n     StringBuilder bld \u003d new StringBuilder();\n     bld.append(\"registered UNIX signal handlers for [\");\n     final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n     String separator \u003d \"\";\n     for (String signalName : SIGNALS) {\n       try {\n         new Handler(signalName, LOG);\n-        bld.append(separator);\n-        bld.append(signalName);\n+        bld.append(separator)\n+            .append(signalName);\n         separator \u003d \", \";\n       } catch (Exception e) {\n         LOG.debug(e);\n       }\n     }\n     bld.append(\"]\");\n     LOG.info(bld.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void register(final LogAdapter LOG) {\n    if (registered) {\n      throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n    }\n    registered \u003d true;\n    StringBuilder bld \u003d new StringBuilder();\n    bld.append(\"registered UNIX signal handlers for [\");\n    final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n    String separator \u003d \"\";\n    for (String signalName : SIGNALS) {\n      try {\n        new Handler(signalName, LOG);\n        bld.append(separator)\n            .append(signalName);\n        separator \u003d \", \";\n      } catch (Exception e) {\n        LOG.debug(e);\n      }\n    }\n    bld.append(\"]\");\n    LOG.info(bld.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SignalLogger.java",
      "extendedDetails": {}
    },
    "9175105eeaecf0a1d60b57989b73ce45cee4689b": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange)",
      "commitMessage": "HDFS-7734. Class cast exception in NameNode#main. Contributed by Yi Liu.\n",
      "commitDate": "04/02/15 11:31 AM",
      "commitName": "9175105eeaecf0a1d60b57989b73ce45cee4689b",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7734. Class cast exception in NameNode#main. Contributed by Yi Liu.\n",
          "commitDate": "04/02/15 11:31 AM",
          "commitName": "9175105eeaecf0a1d60b57989b73ce45cee4689b",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "15/03/13 2:16 PM",
          "commitNameOld": "c2003ab56b39c370678d7f6fe0b7fd3d8a7d0be8",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 690.93,
          "commitsBetweenForRepo": 4926,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void register(final Log LOG) {\n+  void register(final LogAdapter LOG) {\n     if (registered) {\n       throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n     }\n     registered \u003d true;\n     StringBuilder bld \u003d new StringBuilder();\n     bld.append(\"registered UNIX signal handlers for [\");\n     final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n     String separator \u003d \"\";\n     for (String signalName : SIGNALS) {\n       try {\n         new Handler(signalName, LOG);\n         bld.append(separator);\n         bld.append(signalName);\n         separator \u003d \", \";\n       } catch (Exception e) {\n         LOG.debug(e);\n       }\n     }\n     bld.append(\"]\");\n     LOG.info(bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void register(final LogAdapter LOG) {\n    if (registered) {\n      throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n    }\n    registered \u003d true;\n    StringBuilder bld \u003d new StringBuilder();\n    bld.append(\"registered UNIX signal handlers for [\");\n    final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n    String separator \u003d \"\";\n    for (String signalName : SIGNALS) {\n      try {\n        new Handler(signalName, LOG);\n        bld.append(separator);\n        bld.append(signalName);\n        separator \u003d \", \";\n      } catch (Exception e) {\n        LOG.debug(e);\n      }\n    }\n    bld.append(\"]\");\n    LOG.info(bld.toString());\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SignalLogger.java",
          "extendedDetails": {
            "oldValue": "[LOG-Log(modifiers-final)]",
            "newValue": "[LOG-LogAdapter(modifiers-final)]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7734. Class cast exception in NameNode#main. Contributed by Yi Liu.\n",
          "commitDate": "04/02/15 11:31 AM",
          "commitName": "9175105eeaecf0a1d60b57989b73ce45cee4689b",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "15/03/13 2:16 PM",
          "commitNameOld": "c2003ab56b39c370678d7f6fe0b7fd3d8a7d0be8",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 690.93,
          "commitsBetweenForRepo": 4926,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public void register(final Log LOG) {\n+  void register(final LogAdapter LOG) {\n     if (registered) {\n       throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n     }\n     registered \u003d true;\n     StringBuilder bld \u003d new StringBuilder();\n     bld.append(\"registered UNIX signal handlers for [\");\n     final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n     String separator \u003d \"\";\n     for (String signalName : SIGNALS) {\n       try {\n         new Handler(signalName, LOG);\n         bld.append(separator);\n         bld.append(signalName);\n         separator \u003d \", \";\n       } catch (Exception e) {\n         LOG.debug(e);\n       }\n     }\n     bld.append(\"]\");\n     LOG.info(bld.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void register(final LogAdapter LOG) {\n    if (registered) {\n      throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n    }\n    registered \u003d true;\n    StringBuilder bld \u003d new StringBuilder();\n    bld.append(\"registered UNIX signal handlers for [\");\n    final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n    String separator \u003d \"\";\n    for (String signalName : SIGNALS) {\n      try {\n        new Handler(signalName, LOG);\n        bld.append(separator);\n        bld.append(signalName);\n        separator \u003d \", \";\n      } catch (Exception e) {\n        LOG.debug(e);\n      }\n    }\n    bld.append(\"]\");\n    LOG.info(bld.toString());\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SignalLogger.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        }
      ]
    },
    "c2003ab56b39c370678d7f6fe0b7fd3d8a7d0be8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9318. When exiting on a signal, print the signal name first. Contributed by Colin Patrick McCabe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1457122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/03/13 2:16 PM",
      "commitName": "c2003ab56b39c370678d7f6fe0b7fd3d8a7d0be8",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,22 @@\n+  public void register(final Log LOG) {\n+    if (registered) {\n+      throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n+    }\n+    registered \u003d true;\n+    StringBuilder bld \u003d new StringBuilder();\n+    bld.append(\"registered UNIX signal handlers for [\");\n+    final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n+    String separator \u003d \"\";\n+    for (String signalName : SIGNALS) {\n+      try {\n+        new Handler(signalName, LOG);\n+        bld.append(separator);\n+        bld.append(signalName);\n+        separator \u003d \", \";\n+      } catch (Exception e) {\n+        LOG.debug(e);\n+      }\n+    }\n+    bld.append(\"]\");\n+    LOG.info(bld.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void register(final Log LOG) {\n    if (registered) {\n      throw new IllegalStateException(\"Can\u0027t re-install the signal handlers.\");\n    }\n    registered \u003d true;\n    StringBuilder bld \u003d new StringBuilder();\n    bld.append(\"registered UNIX signal handlers for [\");\n    final String SIGNALS[] \u003d { \"TERM\", \"HUP\", \"INT\" };\n    String separator \u003d \"\";\n    for (String signalName : SIGNALS) {\n      try {\n        new Handler(signalName, LOG);\n        bld.append(separator);\n        bld.append(signalName);\n        separator \u003d \", \";\n      } catch (Exception e) {\n        LOG.debug(e);\n      }\n    }\n    bld.append(\"]\");\n    LOG.info(bld.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SignalLogger.java"
    }
  }
}