{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeQueueLoadMonitor.java",
  "functionName": "selectLeastLoadedNodes",
  "functionId": "selectLeastLoadedNodes___k-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
  "functionStartLine": 334,
  "functionEndLine": 345,
  "numCommitsSeen": 12,
  "timeTaken": 1558,
  "changeHistory": [
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
    "10be45986cdf86a89055065b752959bd6369d54f",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830"
  ],
  "changeHistoryShort": {
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": "Ybodychange",
    "10be45986cdf86a89055065b752959bd6369d54f": "Ybodychange",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5938. Refactoring OpportunisticContainerAllocator to use SchedulerRequestKey instead of Priority and other misc fixes (asuresh)\n",
      "commitDate": "27/12/16 12:40 PM",
      "commitName": "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "23/11/16 9:53 AM",
      "commitNameOld": "005850b28feb2f7bb8c2844d11e3f9d21b45d754",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 34.12,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public List\u003cNodeId\u003e selectLeastLoadedNodes(int k) {\n     ReentrantReadWriteLock.ReadLock readLock \u003d sortedNodesLock.readLock();\n     readLock.lock();\n     try {\n       List\u003cNodeId\u003e retVal \u003d ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n           new ArrayList\u003c\u003e(this.sortedNodes).subList(0, k) :\n           new ArrayList\u003c\u003e(this.sortedNodes);\n-      return Collections.unmodifiableList(retVal);\n+      return retVal;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cNodeId\u003e selectLeastLoadedNodes(int k) {\n    ReentrantReadWriteLock.ReadLock readLock \u003d sortedNodesLock.readLock();\n    readLock.lock();\n    try {\n      List\u003cNodeId\u003e retVal \u003d ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n          new ArrayList\u003c\u003e(this.sortedNodes).subList(0, k) :\n          new ArrayList\u003c\u003e(this.sortedNodes);\n      return retVal;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {}
    },
    "10be45986cdf86a89055065b752959bd6369d54f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "29/09/16 3:11 PM",
      "commitName": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "18/05/16 6:46 PM",
      "commitNameOld": "1597630681c784a3d59f5605b87e96197b8139d7",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 133.85,
      "commitsBetweenForRepo": 988,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,12 @@\n   public List\u003cNodeId\u003e selectLeastLoadedNodes(int k) {\n-    synchronized (this.sortedNodes) {\n-      return ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n+    ReentrantReadWriteLock.ReadLock readLock \u003d sortedNodesLock.readLock();\n+    readLock.lock();\n+    try {\n+      List\u003cNodeId\u003e retVal \u003d ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n           new ArrayList\u003c\u003e(this.sortedNodes).subList(0, k) :\n           new ArrayList\u003c\u003e(this.sortedNodes);\n+      return Collections.unmodifiableList(retVal);\n+    } finally {\n+      readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cNodeId\u003e selectLeastLoadedNodes(int k) {\n    ReentrantReadWriteLock.ReadLock readLock \u003d sortedNodesLock.readLock();\n    readLock.lock();\n    try {\n      List\u003cNodeId\u003e retVal \u003d ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n          new ArrayList\u003c\u003e(this.sortedNodes).subList(0, k) :\n          new ArrayList\u003c\u003e(this.sortedNodes);\n      return Collections.unmodifiableList(retVal);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {}
    },
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2888. Corrective mechanisms for rebalancing NM container queues. (asuresh)\n",
      "commitDate": "13/05/16 1:38 PM",
      "commitName": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,7 @@\n+  public List\u003cNodeId\u003e selectLeastLoadedNodes(int k) {\n+    synchronized (this.sortedNodes) {\n+      return ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n+          new ArrayList\u003c\u003e(this.sortedNodes).subList(0, k) :\n+          new ArrayList\u003c\u003e(this.sortedNodes);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cNodeId\u003e selectLeastLoadedNodes(int k) {\n    synchronized (this.sortedNodes) {\n      return ((k \u003c this.sortedNodes.size()) \u0026\u0026 (k \u003e\u003d 0)) ?\n          new ArrayList\u003c\u003e(this.sortedNodes).subList(0, k) :\n          new ArrayList\u003c\u003e(this.sortedNodes);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java"
    }
  }
}