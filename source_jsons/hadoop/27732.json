{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityMulticastAMRMProxyPolicy.java",
  "functionName": "internalAddToAnswer",
  "functionId": "internalAddToAnswer___targetId-SubClusterId__partialRR-ResourceRequest__isRack-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
  "functionStartLine": 624,
  "functionEndLine": 637,
  "numCommitsSeen": 18,
  "timeTaken": 2061,
  "changeHistory": [
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
    "1dadd0b45a6a605da72eb304808edb49fc66da45"
  ],
  "changeHistoryShort": {
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7": "Ymultichange(Yparameterchange,Ybodychange)",
    "1dadd0b45a6a605da72eb304808edb49fc66da45": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8697. LocalityMulticastAMRMProxyPolicy should fallback to random sub-cluster when cannot resolve resource. Contributed by Botong Huang.\n",
      "commitDate": "28/08/18 4:01 PM",
      "commitName": "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8697. LocalityMulticastAMRMProxyPolicy should fallback to random sub-cluster when cannot resolve resource. Contributed by Botong Huang.\n",
          "commitDate": "28/08/18 4:01 PM",
          "commitName": "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
          "commitAuthor": "Giovanni Matteo Fumarola",
          "commitDateOld": "20/08/18 2:33 PM",
          "commitNameOld": "e0f6ffdbad6f43fd43ec57fb68ebf5275b8b9ba0",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 8.06,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,14 @@\n     private void internalAddToAnswer(SubClusterId targetId,\n-        ResourceRequest partialRR) {\n+        ResourceRequest partialRR, boolean isRack) {\n+      if (!isRack) {\n+        if (!maskForRackDeletion.containsKey(targetId)) {\n+          maskForRackDeletion.put(targetId, new HashSet\u003cLong\u003e());\n+        }\n+        maskForRackDeletion.get(targetId)\n+            .add(partialRR.getAllocationRequestId());\n+      }\n       if (!answer.containsKey(targetId)) {\n         answer.put(targetId, new ArrayList\u003cResourceRequest\u003e());\n       }\n       answer.get(targetId).add(partialRR);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void internalAddToAnswer(SubClusterId targetId,\n        ResourceRequest partialRR, boolean isRack) {\n      if (!isRack) {\n        if (!maskForRackDeletion.containsKey(targetId)) {\n          maskForRackDeletion.put(targetId, new HashSet\u003cLong\u003e());\n        }\n        maskForRackDeletion.get(targetId)\n            .add(partialRR.getAllocationRequestId());\n      }\n      if (!answer.containsKey(targetId)) {\n        answer.put(targetId, new ArrayList\u003cResourceRequest\u003e());\n      }\n      answer.get(targetId).add(partialRR);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
          "extendedDetails": {
            "oldValue": "[targetId-SubClusterId, partialRR-ResourceRequest]",
            "newValue": "[targetId-SubClusterId, partialRR-ResourceRequest, isRack-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8697. LocalityMulticastAMRMProxyPolicy should fallback to random sub-cluster when cannot resolve resource. Contributed by Botong Huang.\n",
          "commitDate": "28/08/18 4:01 PM",
          "commitName": "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
          "commitAuthor": "Giovanni Matteo Fumarola",
          "commitDateOld": "20/08/18 2:33 PM",
          "commitNameOld": "e0f6ffdbad6f43fd43ec57fb68ebf5275b8b9ba0",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 8.06,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,14 @@\n     private void internalAddToAnswer(SubClusterId targetId,\n-        ResourceRequest partialRR) {\n+        ResourceRequest partialRR, boolean isRack) {\n+      if (!isRack) {\n+        if (!maskForRackDeletion.containsKey(targetId)) {\n+          maskForRackDeletion.put(targetId, new HashSet\u003cLong\u003e());\n+        }\n+        maskForRackDeletion.get(targetId)\n+            .add(partialRR.getAllocationRequestId());\n+      }\n       if (!answer.containsKey(targetId)) {\n         answer.put(targetId, new ArrayList\u003cResourceRequest\u003e());\n       }\n       answer.get(targetId).add(partialRR);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void internalAddToAnswer(SubClusterId targetId,\n        ResourceRequest partialRR, boolean isRack) {\n      if (!isRack) {\n        if (!maskForRackDeletion.containsKey(targetId)) {\n          maskForRackDeletion.put(targetId, new HashSet\u003cLong\u003e());\n        }\n        maskForRackDeletion.get(targetId)\n            .add(partialRR.getAllocationRequestId());\n      }\n      if (!answer.containsKey(targetId)) {\n        answer.put(targetId, new ArrayList\u003cResourceRequest\u003e());\n      }\n      answer.get(targetId).add(partialRR);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "1dadd0b45a6a605da72eb304808edb49fc66da45": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "1dadd0b45a6a605da72eb304808edb49fc66da45",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,7 @@\n+    private void internalAddToAnswer(SubClusterId targetId,\n+        ResourceRequest partialRR) {\n+      if (!answer.containsKey(targetId)) {\n+        answer.put(targetId, new ArrayList\u003cResourceRequest\u003e());\n+      }\n+      answer.get(targetId).add(partialRR);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void internalAddToAnswer(SubClusterId targetId,\n        ResourceRequest partialRR) {\n      if (!answer.containsKey(targetId)) {\n        answer.put(targetId, new ArrayList\u003cResourceRequest\u003e());\n      }\n      answer.get(targetId).add(partialRR);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java"
    }
  }
}