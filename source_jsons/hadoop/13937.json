{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 4954,
  "functionEndLine": 4977,
  "numCommitsSeen": 502,
  "timeTaken": 16690,
  "changeHistory": [
    "f741476146574550a1a208d58ef8be76639e5ddc",
    "715b9c649982bff91d1f9eae656ba3b82178e1a3",
    "951b3608a8cb1d9063b9be9c740b524c137b816f",
    "b7923a356e9f111619375b94d12749d634069347",
    "1be4ddef9ef08bfee9fdb8a6303e8a96a3e28a7d",
    "3a3109f8bf3ef83045766ee4c365626405469ee7",
    "c4382e7565447277e716c22dd20053113e0732cb",
    "527933f4f351a3df5e369c8bb6e2cfc4937e0836",
    "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9",
    "8c0366bf103ca638b5ef9e962671f7728db4fd10",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "89537b7710b23db7abcd2a77f03818c06a5f5fa7"
  ],
  "changeHistoryShort": {
    "f741476146574550a1a208d58ef8be76639e5ddc": "Ybodychange",
    "715b9c649982bff91d1f9eae656ba3b82178e1a3": "Ybodychange",
    "951b3608a8cb1d9063b9be9c740b524c137b816f": "Ybodychange",
    "b7923a356e9f111619375b94d12749d634069347": "Ybodychange",
    "1be4ddef9ef08bfee9fdb8a6303e8a96a3e28a7d": "Ybodychange",
    "3a3109f8bf3ef83045766ee4c365626405469ee7": "Ybodychange",
    "c4382e7565447277e716c22dd20053113e0732cb": "Ybodychange",
    "527933f4f351a3df5e369c8bb6e2cfc4937e0836": "Ybodychange",
    "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9": "Ybodychange",
    "8c0366bf103ca638b5ef9e962671f7728db4fd10": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "89537b7710b23db7abcd2a77f03818c06a5f5fa7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f741476146574550a1a208d58ef8be76639e5ddc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9198. Coalesce IBR processing in the NN. (Daryn Sharp via umamahesh)\n",
      "commitDate": "16/12/15 6:16 PM",
      "commitName": "f741476146574550a1a208d58ef8be76639e5ddc",
      "commitAuthor": "Uma Mahesh",
      "commitDateOld": "15/12/15 10:47 AM",
      "commitNameOld": "8602692338d6f493647205e0241e4116211fab75",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.31,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,8 @@\n     public void run() {\n-      while (namesystem.isRunning()) {\n-        try {\n-          // Process replication work only when active NN is out of safe mode.\n-          if (isPopulatingReplQueues()) {\n-            computeDatanodeWork();\n-            processPendingReplications();\n-            rescanPostponedMisreplicatedBlocks();\n-          }\n-          Thread.sleep(replicationRecheckInterval);\n-        } catch (Throwable t) {\n-          if (!namesystem.isRunning()) {\n-            LOG.info(\"Stopping ReplicationMonitor.\");\n-            if (!(t instanceof InterruptedException)) {\n-              LOG.info(\"ReplicationMonitor received an exception\"\n-                  + \" while shutting down.\", t);\n-            }\n-            break;\n-          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n-            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n-            break;\n-          }\n-          LOG.error(\"ReplicationMonitor thread received Runtime exception. \",\n-              t);\n-          terminate(1, t);\n-        }\n+      try {\n+        processQueue();\n+      } catch (Throwable t) {\n+        ExitUtil.terminate(1,\n+            getName() + \" encountered fatal exception: \" + t);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        processQueue();\n      } catch (Throwable t) {\n        ExitUtil.terminate(1,\n            getName() + \" encountered fatal exception: \" + t);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "715b9c649982bff91d1f9eae656ba3b82178e1a3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8984. Move replication queues related methods in FSNamesystem to BlockManager. Contributed by Haohui Mai.\n",
      "commitDate": "04/09/15 11:45 AM",
      "commitName": "715b9c649982bff91d1f9eae656ba3b82178e1a3",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/09/15 1:46 PM",
      "commitNameOld": "afc88b396f06488c331564e0f6987013bb920d3e",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.92,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           // Process replication work only when active NN is out of safe mode.\n-          if (namesystem.isPopulatingReplQueues()) {\n+          if (isPopulatingReplQueues()) {\n             computeDatanodeWork();\n             processPendingReplications();\n             rescanPostponedMisreplicatedBlocks();\n           }\n           Thread.sleep(replicationRecheckInterval);\n         } catch (Throwable t) {\n           if (!namesystem.isRunning()) {\n             LOG.info(\"Stopping ReplicationMonitor.\");\n             if (!(t instanceof InterruptedException)) {\n               LOG.info(\"ReplicationMonitor received an exception\"\n                   + \" while shutting down.\", t);\n             }\n             break;\n           } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n             LOG.info(\"Stopping ReplicationMonitor for testing.\");\n             break;\n           }\n           LOG.error(\"ReplicationMonitor thread received Runtime exception. \",\n               t);\n           terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          // Process replication work only when active NN is out of safe mode.\n          if (isPopulatingReplQueues()) {\n            computeDatanodeWork();\n            processPendingReplications();\n            rescanPostponedMisreplicatedBlocks();\n          }\n          Thread.sleep(replicationRecheckInterval);\n        } catch (Throwable t) {\n          if (!namesystem.isRunning()) {\n            LOG.info(\"Stopping ReplicationMonitor.\");\n            if (!(t instanceof InterruptedException)) {\n              LOG.info(\"ReplicationMonitor received an exception\"\n                  + \" while shutting down.\", t);\n            }\n            break;\n          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n            break;\n          }\n          LOG.error(\"ReplicationMonitor thread received Runtime exception. \",\n              t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "951b3608a8cb1d9063b9be9c740b524c137b816f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7706. Switch BlockManager logging to use slf4j.\n",
      "commitDate": "30/01/15 11:33 AM",
      "commitName": "951b3608a8cb1d9063b9be9c740b524c137b816f",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/01/15 10:36 AM",
      "commitNameOld": "89b07490f8354bb83a67b7ffc917bfe99708e615",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.04,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           // Process replication work only when active NN is out of safe mode.\n           if (namesystem.isPopulatingReplQueues()) {\n             computeDatanodeWork();\n             processPendingReplications();\n             rescanPostponedMisreplicatedBlocks();\n           }\n           Thread.sleep(replicationRecheckInterval);\n         } catch (Throwable t) {\n           if (!namesystem.isRunning()) {\n             LOG.info(\"Stopping ReplicationMonitor.\");\n             if (!(t instanceof InterruptedException)) {\n               LOG.info(\"ReplicationMonitor received an exception\"\n                   + \" while shutting down.\", t);\n             }\n             break;\n           } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n             LOG.info(\"Stopping ReplicationMonitor for testing.\");\n             break;\n           }\n-          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n+          LOG.error(\"ReplicationMonitor thread received Runtime exception. \",\n+              t);\n           terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          // Process replication work only when active NN is out of safe mode.\n          if (namesystem.isPopulatingReplQueues()) {\n            computeDatanodeWork();\n            processPendingReplications();\n            rescanPostponedMisreplicatedBlocks();\n          }\n          Thread.sleep(replicationRecheckInterval);\n        } catch (Throwable t) {\n          if (!namesystem.isRunning()) {\n            LOG.info(\"Stopping ReplicationMonitor.\");\n            if (!(t instanceof InterruptedException)) {\n              LOG.info(\"ReplicationMonitor received an exception\"\n                  + \" while shutting down.\", t);\n            }\n            break;\n          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n            break;\n          }\n          LOG.error(\"ReplicationMonitor thread received Runtime exception. \",\n              t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "b7923a356e9f111619375b94d12749d634069347": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6425. Large postponedMisreplicatedBlocks has impact on blockReport latency. Contributed by Ming Ma.\n",
      "commitDate": "16/12/14 8:30 AM",
      "commitName": "b7923a356e9f111619375b94d12749d634069347",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "10/12/14 11:44 PM",
      "commitNameOld": "390642acf35f3d599271617d30ba26c2f6406fc1",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 5.37,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           // Process replication work only when active NN is out of safe mode.\n           if (namesystem.isPopulatingReplQueues()) {\n             computeDatanodeWork();\n             processPendingReplications();\n+            rescanPostponedMisreplicatedBlocks();\n           }\n           Thread.sleep(replicationRecheckInterval);\n         } catch (Throwable t) {\n           if (!namesystem.isRunning()) {\n             LOG.info(\"Stopping ReplicationMonitor.\");\n             if (!(t instanceof InterruptedException)) {\n               LOG.info(\"ReplicationMonitor received an exception\"\n                   + \" while shutting down.\", t);\n             }\n             break;\n           } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n             LOG.info(\"Stopping ReplicationMonitor for testing.\");\n             break;\n           }\n           LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n           terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          // Process replication work only when active NN is out of safe mode.\n          if (namesystem.isPopulatingReplQueues()) {\n            computeDatanodeWork();\n            processPendingReplications();\n            rescanPostponedMisreplicatedBlocks();\n          }\n          Thread.sleep(replicationRecheckInterval);\n        } catch (Throwable t) {\n          if (!namesystem.isRunning()) {\n            LOG.info(\"Stopping ReplicationMonitor.\");\n            if (!(t instanceof InterruptedException)) {\n              LOG.info(\"ReplicationMonitor received an exception\"\n                  + \" while shutting down.\", t);\n            }\n            break;\n          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n            break;\n          }\n          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "1be4ddef9ef08bfee9fdb8a6303e8a96a3e28a7d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6178. Decommission on standby NN couldn\u0027t finish. Contributed by Ming Ma.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589002 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/04/14 4:35 PM",
      "commitName": "1be4ddef9ef08bfee9fdb8a6303e8a96a3e28a7d",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/03/14 11:36 AM",
      "commitNameOld": "fe8c3dc2b80a2c127e7aed0d3beb41dcfd8f7eac",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 26.21,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n-          computeDatanodeWork();\n-          processPendingReplications();\n+          // Process replication work only when active NN is out of safe mode.\n+          if (namesystem.isPopulatingReplQueues()) {\n+            computeDatanodeWork();\n+            processPendingReplications();\n+          }\n           Thread.sleep(replicationRecheckInterval);\n         } catch (Throwable t) {\n           if (!namesystem.isRunning()) {\n             LOG.info(\"Stopping ReplicationMonitor.\");\n             if (!(t instanceof InterruptedException)) {\n               LOG.info(\"ReplicationMonitor received an exception\"\n                   + \" while shutting down.\", t);\n             }\n             break;\n           } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n             LOG.info(\"Stopping ReplicationMonitor for testing.\");\n             break;\n           }\n           LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n           terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          // Process replication work only when active NN is out of safe mode.\n          if (namesystem.isPopulatingReplQueues()) {\n            computeDatanodeWork();\n            processPendingReplications();\n          }\n          Thread.sleep(replicationRecheckInterval);\n        } catch (Throwable t) {\n          if (!namesystem.isRunning()) {\n            LOG.info(\"Stopping ReplicationMonitor.\");\n            if (!(t instanceof InterruptedException)) {\n              LOG.info(\"ReplicationMonitor received an exception\"\n                  + \" while shutting down.\", t);\n            }\n            break;\n          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n            break;\n          }\n          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "3a3109f8bf3ef83045766ee4c365626405469ee7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4887. TestNNThroughputBenchmark exits abruptly. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 9:39 AM",
      "commitName": "3a3109f8bf3ef83045766ee4c365626405469ee7",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "07/07/13 10:29 PM",
      "commitNameOld": "6770de7ec4f73e16740f1723f4e35d2fef2c22c8",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.47,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           computeDatanodeWork();\n           processPendingReplications();\n           Thread.sleep(replicationRecheckInterval);\n         } catch (Throwable t) {\n           if (!namesystem.isRunning()) {\n             LOG.info(\"Stopping ReplicationMonitor.\");\n             if (!(t instanceof InterruptedException)) {\n               LOG.info(\"ReplicationMonitor received an exception\"\n                   + \" while shutting down.\", t);\n             }\n             break;\n+          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n+            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n+            break;\n           }\n           LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n           terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (Throwable t) {\n          if (!namesystem.isRunning()) {\n            LOG.info(\"Stopping ReplicationMonitor.\");\n            if (!(t instanceof InterruptedException)) {\n              LOG.info(\"ReplicationMonitor received an exception\"\n                  + \" while shutting down.\", t);\n            }\n            break;\n          } else if (!checkNSRunning \u0026\u0026 t instanceof InterruptedException) {\n            LOG.info(\"Stopping ReplicationMonitor for testing.\");\n            break;\n          }\n          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "c4382e7565447277e716c22dd20053113e0732cb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4840. ReplicationMonitor gets NPE during shutdown. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489634 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/06/13 2:43 PM",
      "commitName": "c4382e7565447277e716c22dd20053113e0732cb",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "14/05/13 7:18 PM",
      "commitNameOld": "5c82a0cd1aa77b684b493ba7ef9679f4fdff3e09",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 20.81,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,20 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           computeDatanodeWork();\n           processPendingReplications();\n           Thread.sleep(replicationRecheckInterval);\n-        } catch (InterruptedException ie) {\n-          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n-          break;\n         } catch (Throwable t) {\n+          if (!namesystem.isRunning()) {\n+            LOG.info(\"Stopping ReplicationMonitor.\");\n+            if (!(t instanceof InterruptedException)) {\n+              LOG.info(\"ReplicationMonitor received an exception\"\n+                  + \" while shutting down.\", t);\n+            }\n+            break;\n+          }\n           LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n           terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (Throwable t) {\n          if (!namesystem.isRunning()) {\n            LOG.info(\"Stopping ReplicationMonitor.\");\n            if (!(t instanceof InterruptedException)) {\n              LOG.info(\"ReplicationMonitor received an exception\"\n                  + \" while shutting down.\", t);\n            }\n            break;\n          }\n          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "527933f4f351a3df5e369c8bb6e2cfc4937e0836": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3666. Plumb more exception messages to terminate. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362270 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 2:26 PM",
      "commitName": "527933f4f351a3df5e369c8bb6e2cfc4937e0836",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "12/07/12 12:01 PM",
      "commitNameOld": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 4.1,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           computeDatanodeWork();\n           processPendingReplications();\n           Thread.sleep(replicationRecheckInterval);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n           break;\n         } catch (Throwable t) {\n           LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n-          terminate(1);\n+          terminate(1, t);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n          break;\n        } catch (Throwable t) {\n          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n          terminate(1, t);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3582. Hook daemon process exit for testing. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 10:58 AM",
      "commitName": "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "06/07/12 11:59 AM",
      "commitNameOld": "fb95fce24056c0b0aa5b77683c684fe1b68c4f76",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 4.96,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           computeDatanodeWork();\n           processPendingReplications();\n           Thread.sleep(replicationRecheckInterval);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n           break;\n         } catch (Throwable t) {\n-          LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n-          Runtime.getRuntime().exit(-1);\n+          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n+          terminate(1);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n          break;\n        } catch (Throwable t) {\n          LOG.fatal(\"ReplicationMonitor thread received Runtime exception. \", t);\n          terminate(1);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "8c0366bf103ca638b5ef9e962671f7728db4fd10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3168. Remove unnecessary \"throw IOException\" and change fields to final in FSNamesystem and BlockManager. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309218 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/12 7:51 PM",
      "commitName": "8c0366bf103ca638b5ef9e962671f7728db4fd10",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "01/04/12 3:12 PM",
      "commitNameOld": "be7dd8333a7e56e732171db0781786987de03195",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 2.19,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     public void run() {\n       while (namesystem.isRunning()) {\n         try {\n           computeDatanodeWork();\n           processPendingReplications();\n           Thread.sleep(replicationRecheckInterval);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n           break;\n-        } catch (IOException ie) {\n-          LOG.warn(\"ReplicationMonitor thread received exception. \" , ie);\n         } catch (Throwable t) {\n           LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n           Runtime.getRuntime().exit(-1);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n          break;\n        } catch (Throwable t) {\n          LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n          Runtime.getRuntime().exit(-1);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n          break;\n        } catch (IOException ie) {\n          LOG.warn(\"ReplicationMonitor thread received exception. \" , ie);\n        } catch (Throwable t) {\n          LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n          Runtime.getRuntime().exit(-1);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n          break;\n        } catch (IOException ie) {\n          LOG.warn(\"ReplicationMonitor thread received exception. \" , ie);\n        } catch (Throwable t) {\n          LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n          Runtime.getRuntime().exit(-1);\n        }\n      }\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "89537b7710b23db7abcd2a77f03818c06a5f5fa7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2112.  Move ReplicationMonitor to block management.  Contributed by Uma Maheswara Rao G\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1149771 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/11 6:01 PM",
      "commitName": "89537b7710b23db7abcd2a77f03818c06a5f5fa7",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,17 @@\n+    public void run() {\n+      while (namesystem.isRunning()) {\n+        try {\n+          computeDatanodeWork();\n+          processPendingReplications();\n+          Thread.sleep(replicationRecheckInterval);\n+        } catch (InterruptedException ie) {\n+          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n+          break;\n+        } catch (IOException ie) {\n+          LOG.warn(\"ReplicationMonitor thread received exception. \" , ie);\n+        } catch (Throwable t) {\n+          LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n+          Runtime.getRuntime().exit(-1);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (namesystem.isRunning()) {\n        try {\n          computeDatanodeWork();\n          processPendingReplications();\n          Thread.sleep(replicationRecheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ReplicationMonitor thread received InterruptedException.\", ie);\n          break;\n        } catch (IOException ie) {\n          LOG.warn(\"ReplicationMonitor thread received exception. \" , ie);\n        } catch (Throwable t) {\n          LOG.warn(\"ReplicationMonitor thread received Runtime exception. \", t);\n          Runtime.getRuntime().exit(-1);\n        }\n      }\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
    }
  }
}