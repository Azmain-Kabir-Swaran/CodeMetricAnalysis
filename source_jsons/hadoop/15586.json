{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FoldedTreeSet.java",
  "functionName": "addSortedLast",
  "functionId": "addSortedLast___entry-E",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/FoldedTreeSet.java",
  "functionStartLine": 646,
  "functionEndLine": 669,
  "numCommitsSeen": 1,
  "timeTaken": 1277,
  "changeHistory": [
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a"
  ],
  "changeHistoryShort": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9260. Improve the performance and GC friendliness of NameNode startup and full block reports (Staffan Friberg via cmccabe)\n",
      "commitDate": "02/02/16 11:23 AM",
      "commitName": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,24 @@\n+  public boolean addSortedLast(E entry) {\n+\n+    if (isEmpty()) {\n+      root \u003d cachedOrNewNode(entry);\n+      size \u003d 1;\n+      modCount++;\n+      return true;\n+    } else {\n+      Node\u003cE\u003e node \u003d root.getRightMostNode();\n+      if (compare(node.entries[node.rightIndex], entry, comparator) \u003c 0) {\n+        size++;\n+        modCount++;\n+        if (!node.isFull()) {\n+          node.addEntryRight(entry);\n+        } else {\n+          attachNodeRight(node, cachedOrNewNode(entry));\n+        }\n+        return true;\n+      }\n+    }\n+\n+    // Fallback on normal add if entry is unsorted\n+    return add(entry);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addSortedLast(E entry) {\n\n    if (isEmpty()) {\n      root \u003d cachedOrNewNode(entry);\n      size \u003d 1;\n      modCount++;\n      return true;\n    } else {\n      Node\u003cE\u003e node \u003d root.getRightMostNode();\n      if (compare(node.entries[node.rightIndex], entry, comparator) \u003c 0) {\n        size++;\n        modCount++;\n        if (!node.isFull()) {\n          node.addEntryRight(entry);\n        } else {\n          attachNodeRight(node, cachedOrNewNode(entry));\n        }\n        return true;\n      }\n    }\n\n    // Fallback on normal add if entry is unsorted\n    return add(entry);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/FoldedTreeSet.java"
    }
  }
}