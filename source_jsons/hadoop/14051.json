{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenSecretManager.java",
  "functionName": "loadSecretManagerState",
  "functionId": "loadSecretManagerState___state-SecretManagerState",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager.java",
  "functionStartLine": 194,
  "functionEndLine": 215,
  "numCommitsSeen": 23,
  "timeTaken": 1639,
  "changeHistory": [
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,22 @@\n+  public synchronized void loadSecretManagerState(SecretManagerState state)\n+      throws IOException {\n+    Preconditions.checkState(!running,\n+        \"Can\u0027t load state from image in a running SecretManager.\");\n+\n+    currentId \u003d state.section.getCurrentId();\n+    delegationTokenSequenceNumber \u003d state.section.getTokenSequenceNumber();\n+    for (SecretManagerSection.DelegationKey k : state.keys) {\n+      addKey(new DelegationKey(k.getId(), k.getExpiryDate(), k.hasKey() ? k\n+          .getKey().toByteArray() : null));\n+    }\n+\n+    for (SecretManagerSection.PersistToken t : state.tokens) {\n+      DelegationTokenIdentifier id \u003d new DelegationTokenIdentifier(new Text(\n+          t.getOwner()), new Text(t.getRenewer()), new Text(t.getRealUser()));\n+      id.setIssueDate(t.getIssueDate());\n+      id.setMaxDate(t.getMaxDate());\n+      id.setSequenceNumber(t.getSequenceNumber());\n+      id.setMasterKeyId(t.getMasterKeyId());\n+      addPersistedDelegationToken(id, t.getExpiryDate());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void loadSecretManagerState(SecretManagerState state)\n      throws IOException {\n    Preconditions.checkState(!running,\n        \"Can\u0027t load state from image in a running SecretManager.\");\n\n    currentId \u003d state.section.getCurrentId();\n    delegationTokenSequenceNumber \u003d state.section.getTokenSequenceNumber();\n    for (SecretManagerSection.DelegationKey k : state.keys) {\n      addKey(new DelegationKey(k.getId(), k.getExpiryDate(), k.hasKey() ? k\n          .getKey().toByteArray() : null));\n    }\n\n    for (SecretManagerSection.PersistToken t : state.tokens) {\n      DelegationTokenIdentifier id \u003d new DelegationTokenIdentifier(new Text(\n          t.getOwner()), new Text(t.getRenewer()), new Text(t.getRealUser()));\n      id.setIssueDate(t.getIssueDate());\n      id.setMaxDate(t.getMaxDate());\n      id.setSequenceNumber(t.getSequenceNumber());\n      id.setMasterKeyId(t.getMasterKeyId());\n      addPersistedDelegationToken(id, t.getExpiryDate());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager.java"
    }
  }
}