{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "addMandatoryResources",
  "functionId": "addMandatoryResources___res-Map__String,ResourceInformation__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 159,
  "functionEndLine": 177,
  "numCommitsSeen": 48,
  "timeTaken": 3545,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "8bcc49e6771ca75f012211e27870a421b19233e7",
    "805095496dfd8e50f71b70cf20845e954d3ba47c",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "8bcc49e6771ca75f012211e27870a421b19233e7": "Ybodychange",
    "805095496dfd8e50f71b70cf20845e954d3ba47c": "Yrename",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Yfilerename",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": "Ybodychange",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "24/01/19 1:53 AM",
      "commitNameOld": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 50.56,
      "commitsBetweenForRepo": 422,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n   private static void addMandatoryResources(\n       Map\u003cString, ResourceInformation\u003e res) {\n     ResourceInformation ri;\n     if (!res.containsKey(MEMORY)) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n-            + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n-            + ResourceTypes.COUNTABLE);\n-      }\n+      LOG.debug(\"Adding resource type - name \u003d {}, units \u003d {}, type \u003d {}\",\n+          MEMORY, ResourceInformation.MEMORY_MB.getUnits(),\n+          ResourceTypes.COUNTABLE);\n       ri \u003d ResourceInformation.newInstance(MEMORY,\n           ResourceInformation.MEMORY_MB.getUnits());\n       res.put(MEMORY, ri);\n     }\n     if (!res.containsKey(VCORES)) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Adding resource type - name \u003d \" + VCORES\n-            + \", units \u003d , type \u003d \" + ResourceTypes.COUNTABLE);\n-      }\n+      LOG.debug(\"Adding resource type - name \u003d {}, units \u003d {}, type \u003d {}\",\n+          VCORES, ResourceInformation.VCORES.getUnits(),\n+          ResourceTypes.COUNTABLE);\n       ri \u003d ResourceInformation.newInstance(VCORES);\n       res.put(VCORES, ri);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addMandatoryResources(\n      Map\u003cString, ResourceInformation\u003e res) {\n    ResourceInformation ri;\n    if (!res.containsKey(MEMORY)) {\n      LOG.debug(\"Adding resource type - name \u003d {}, units \u003d {}, type \u003d {}\",\n          MEMORY, ResourceInformation.MEMORY_MB.getUnits(),\n          ResourceTypes.COUNTABLE);\n      ri \u003d ResourceInformation.newInstance(MEMORY,\n          ResourceInformation.MEMORY_MB.getUnits());\n      res.put(MEMORY, ri);\n    }\n    if (!res.containsKey(VCORES)) {\n      LOG.debug(\"Adding resource type - name \u003d {}, units \u003d {}, type \u003d {}\",\n          VCORES, ResourceInformation.VCORES.getUnits(),\n          ResourceTypes.COUNTABLE);\n      ri \u003d ResourceInformation.newInstance(VCORES);\n      res.put(VCORES, ri);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "8bcc49e6771ca75f012211e27870a421b19233e7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7205. Log improvements for the ResourceUtils. (Sunil G via wangda)\n\nChange-Id: I0f5b7a7f68ec5d3e1d52211f83fdd089bc0bfd37\n",
      "commitDate": "11/10/17 3:25 PM",
      "commitName": "8bcc49e6771ca75f012211e27870a421b19233e7",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "11/10/17 11:14 AM",
      "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   private static void addMandatoryResources(\n       Map\u003cString, ResourceInformation\u003e res) {\n     ResourceInformation ri;\n     if (!res.containsKey(MEMORY)) {\n-      LOG.info(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n-          + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n-          + ResourceTypes.COUNTABLE);\n-      ri \u003d ResourceInformation\n-          .newInstance(MEMORY,\n-              ResourceInformation.MEMORY_MB.getUnits());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n+            + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n+            + ResourceTypes.COUNTABLE);\n+      }\n+      ri \u003d ResourceInformation.newInstance(MEMORY,\n+          ResourceInformation.MEMORY_MB.getUnits());\n       res.put(MEMORY, ri);\n     }\n     if (!res.containsKey(VCORES)) {\n-      LOG.info(\"Adding resource type - name \u003d \" + VCORES + \", units \u003d , type \u003d \"\n-          + ResourceTypes.COUNTABLE);\n-      ri \u003d\n-          ResourceInformation.newInstance(VCORES);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Adding resource type - name \u003d \" + VCORES\n+            + \", units \u003d , type \u003d \" + ResourceTypes.COUNTABLE);\n+      }\n+      ri \u003d ResourceInformation.newInstance(VCORES);\n       res.put(VCORES, ri);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addMandatoryResources(\n      Map\u003cString, ResourceInformation\u003e res) {\n    ResourceInformation ri;\n    if (!res.containsKey(MEMORY)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n            + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n            + ResourceTypes.COUNTABLE);\n      }\n      ri \u003d ResourceInformation.newInstance(MEMORY,\n          ResourceInformation.MEMORY_MB.getUnits());\n      res.put(MEMORY, ri);\n    }\n    if (!res.containsKey(VCORES)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Adding resource type - name \u003d \" + VCORES\n            + \", units \u003d , type \u003d \" + ResourceTypes.COUNTABLE);\n      }\n      ri \u003d ResourceInformation.newInstance(VCORES);\n      res.put(VCORES, ri);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "805095496dfd8e50f71b70cf20845e954d3ba47c": {
      "type": "Yrename",
      "commitMessage": "YARN-6933. [YARN-3926] ResourceUtils.DISALLOWED_NAMES check is duplicated. Contributed by Manikandan R.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "805095496dfd8e50f71b70cf20845e954d3ba47c",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "53df3eac503064b8c4cd8eb2b659567622f4d8a7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  private static void addManadtoryResources(\n+  private static void addMandatoryResources(\n       Map\u003cString, ResourceInformation\u003e res) {\n     ResourceInformation ri;\n     if (!res.containsKey(MEMORY)) {\n       LOG.info(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n           + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n           + ResourceTypes.COUNTABLE);\n       ri \u003d ResourceInformation\n           .newInstance(MEMORY,\n               ResourceInformation.MEMORY_MB.getUnits());\n       res.put(MEMORY, ri);\n     }\n     if (!res.containsKey(VCORES)) {\n       LOG.info(\"Adding resource type - name \u003d \" + VCORES + \", units \u003d , type \u003d \"\n           + ResourceTypes.COUNTABLE);\n       ri \u003d\n           ResourceInformation.newInstance(VCORES);\n       res.put(VCORES, ri);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addMandatoryResources(\n      Map\u003cString, ResourceInformation\u003e res) {\n    ResourceInformation ri;\n    if (!res.containsKey(MEMORY)) {\n      LOG.info(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n          + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n          + ResourceTypes.COUNTABLE);\n      ri \u003d ResourceInformation\n          .newInstance(MEMORY,\n              ResourceInformation.MEMORY_MB.getUnits());\n      res.put(MEMORY, ri);\n    }\n    if (!res.containsKey(VCORES)) {\n      LOG.info(\"Adding resource type - name \u003d \" + VCORES + \", units \u003d , type \u003d \"\n          + ResourceTypes.COUNTABLE);\n      ri \u003d\n          ResourceInformation.newInstance(VCORES);\n      res.put(VCORES, ri);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {
        "oldValue": "addManadtoryResources",
        "newValue": "addMandatoryResources"
      }
    },
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "4e5632d28eb8f6b1b8830c2aa89ec6321d477977",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void addManadtoryResources(\n      Map\u003cString, ResourceInformation\u003e res) {\n    ResourceInformation ri;\n    if (!res.containsKey(MEMORY)) {\n      LOG.info(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n          + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n          + ResourceTypes.COUNTABLE);\n      ri \u003d ResourceInformation\n          .newInstance(MEMORY,\n              ResourceInformation.MEMORY_MB.getUnits());\n      res.put(MEMORY, ri);\n    }\n    if (!res.containsKey(VCORES)) {\n      LOG.info(\"Adding resource type - name \u003d \" + VCORES + \", units \u003d , type \u003d \"\n          + ResourceTypes.COUNTABLE);\n      ri \u003d\n          ResourceInformation.newInstance(VCORES);\n      res.put(VCORES, ri);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
      }
    },
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private static void addManadtoryResources(\n       Map\u003cString, ResourceInformation\u003e res) {\n     ResourceInformation ri;\n-    if (!res.containsKey(ResourceInformation.MEMORY_MB.getName())) {\n-      LOG.info(\"Adding resource type - name \u003d \" + ResourceInformation.MEMORY_MB\n-          .getName() + \", units \u003d \" + ResourceInformation.MEMORY_MB.getUnits()\n-          + \", type \u003d \" + ResourceTypes.COUNTABLE);\n+    if (!res.containsKey(MEMORY)) {\n+      LOG.info(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n+          + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n+          + ResourceTypes.COUNTABLE);\n       ri \u003d ResourceInformation\n-          .newInstance(ResourceInformation.MEMORY_MB.getName(),\n+          .newInstance(MEMORY,\n               ResourceInformation.MEMORY_MB.getUnits());\n-      res.put(ResourceInformation.MEMORY_MB.getName(), ri);\n+      res.put(MEMORY, ri);\n     }\n-    if (!res.containsKey(ResourceInformation.VCORES.getName())) {\n-      LOG.info(\"Adding resource type - name \u003d \" + ResourceInformation.VCORES\n-          .getName() + \", units \u003d , type \u003d \" + ResourceTypes.COUNTABLE);\n+    if (!res.containsKey(VCORES)) {\n+      LOG.info(\"Adding resource type - name \u003d \" + VCORES + \", units \u003d , type \u003d \"\n+          + ResourceTypes.COUNTABLE);\n       ri \u003d\n-          ResourceInformation.newInstance(ResourceInformation.VCORES.getName());\n-      res.put(ResourceInformation.VCORES.getName(), ri);\n+          ResourceInformation.newInstance(VCORES);\n+      res.put(VCORES, ri);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addManadtoryResources(\n      Map\u003cString, ResourceInformation\u003e res) {\n    ResourceInformation ri;\n    if (!res.containsKey(MEMORY)) {\n      LOG.info(\"Adding resource type - name \u003d \" + MEMORY + \", units \u003d \"\n          + ResourceInformation.MEMORY_MB.getUnits() + \", type \u003d \"\n          + ResourceTypes.COUNTABLE);\n      ri \u003d ResourceInformation\n          .newInstance(MEMORY,\n              ResourceInformation.MEMORY_MB.getUnits());\n      res.put(MEMORY, ri);\n    }\n    if (!res.containsKey(VCORES)) {\n      LOG.info(\"Adding resource type - name \u003d \" + VCORES + \", units \u003d , type \u003d \"\n          + ResourceTypes.COUNTABLE);\n      ri \u003d\n          ResourceInformation.newInstance(VCORES);\n      res.put(VCORES, ri);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4715. Add support to read resource types from a config file. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,20 @@\n+  private static void addManadtoryResources(\n+      Map\u003cString, ResourceInformation\u003e res) {\n+    ResourceInformation ri;\n+    if (!res.containsKey(ResourceInformation.MEMORY_MB.getName())) {\n+      LOG.info(\"Adding resource type - name \u003d \" + ResourceInformation.MEMORY_MB\n+          .getName() + \", units \u003d \" + ResourceInformation.MEMORY_MB.getUnits()\n+          + \", type \u003d \" + ResourceTypes.COUNTABLE);\n+      ri \u003d ResourceInformation\n+          .newInstance(ResourceInformation.MEMORY_MB.getName(),\n+              ResourceInformation.MEMORY_MB.getUnits());\n+      res.put(ResourceInformation.MEMORY_MB.getName(), ri);\n+    }\n+    if (!res.containsKey(ResourceInformation.VCORES.getName())) {\n+      LOG.info(\"Adding resource type - name \u003d \" + ResourceInformation.VCORES\n+          .getName() + \", units \u003d , type \u003d \" + ResourceTypes.COUNTABLE);\n+      ri \u003d\n+          ResourceInformation.newInstance(ResourceInformation.VCORES.getName());\n+      res.put(ResourceInformation.VCORES.getName(), ri);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addManadtoryResources(\n      Map\u003cString, ResourceInformation\u003e res) {\n    ResourceInformation ri;\n    if (!res.containsKey(ResourceInformation.MEMORY_MB.getName())) {\n      LOG.info(\"Adding resource type - name \u003d \" + ResourceInformation.MEMORY_MB\n          .getName() + \", units \u003d \" + ResourceInformation.MEMORY_MB.getUnits()\n          + \", type \u003d \" + ResourceTypes.COUNTABLE);\n      ri \u003d ResourceInformation\n          .newInstance(ResourceInformation.MEMORY_MB.getName(),\n              ResourceInformation.MEMORY_MB.getUnits());\n      res.put(ResourceInformation.MEMORY_MB.getName(), ri);\n    }\n    if (!res.containsKey(ResourceInformation.VCORES.getName())) {\n      LOG.info(\"Adding resource type - name \u003d \" + ResourceInformation.VCORES\n          .getName() + \", units \u003d , type \u003d \" + ResourceTypes.COUNTABLE);\n      ri \u003d\n          ResourceInformation.newInstance(ResourceInformation.VCORES.getName());\n      res.put(ResourceInformation.VCORES.getName(), ri);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
    }
  }
}