{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSLeafQueue.java",
  "functionName": "updateInternal",
  "functionId": "updateInternal",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
  "functionStartLine": 199,
  "functionEndLine": 206,
  "numCommitsSeen": 173,
  "timeTaken": 5263,
  "changeHistory": [
    "d5b71e4175c13679d451710be150fc461a661263",
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "24ee9e3431d27811530ffa01d8d241133fd643fe",
    "7545d8bf996e5d060d5d613bf769ec52a62d428b",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21"
  ],
  "changeHistoryShort": {
    "d5b71e4175c13679d451710be150fc461a661263": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "24ee9e3431d27811530ffa01d8d241133fd643fe": "Ybodychange",
    "7545d8bf996e5d060d5d613bf769ec52a62d428b": "Ybodychange",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": "Ymultichange(Yrename,Ybodychange)",
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3": "Ybodychange",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5b71e4175c13679d451710be150fc461a661263": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6246. Identifying starved apps does not need the scheduler writelock\n(Contributed by Karthik Kambatla via Daniel Templeton)\n",
      "commitDate": "31/05/17 3:48 PM",
      "commitName": "d5b71e4175c13679d451710be150fc461a661263",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6246. Identifying starved apps does not need the scheduler writelock\n(Contributed by Karthik Kambatla via Daniel Templeton)\n",
          "commitDate": "31/05/17 3:48 PM",
          "commitName": "d5b71e4175c13679d451710be150fc461a661263",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "10/03/17 4:13 PM",
          "commitNameOld": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
          "commitAuthorOld": "Ray Chiang",
          "daysBetweenCommits": 81.94,
          "commitsBetweenForRepo": 446,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,8 @@\n-  public void updateInternal(boolean checkStarvation) {\n+  void updateInternal() {\n     readLock.lock();\n     try {\n       policy.computeShares(runnableApps, getFairShare());\n-      if (checkStarvation) {\n-        updateStarvedApps();\n-      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateInternal() {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[checkStarvation-boolean]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6246. Identifying starved apps does not need the scheduler writelock\n(Contributed by Karthik Kambatla via Daniel Templeton)\n",
          "commitDate": "31/05/17 3:48 PM",
          "commitName": "d5b71e4175c13679d451710be150fc461a661263",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "10/03/17 4:13 PM",
          "commitNameOld": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
          "commitAuthorOld": "Ray Chiang",
          "daysBetweenCommits": 81.94,
          "commitsBetweenForRepo": 446,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,8 @@\n-  public void updateInternal(boolean checkStarvation) {\n+  void updateInternal() {\n     readLock.lock();\n     try {\n       policy.computeShares(runnableApps, getFairShare());\n-      if (checkStarvation) {\n-        updateStarvedApps();\n-      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateInternal() {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6246. Identifying starved apps does not need the scheduler writelock\n(Contributed by Karthik Kambatla via Daniel Templeton)\n",
          "commitDate": "31/05/17 3:48 PM",
          "commitName": "d5b71e4175c13679d451710be150fc461a661263",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "10/03/17 4:13 PM",
          "commitNameOld": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
          "commitAuthorOld": "Ray Chiang",
          "daysBetweenCommits": 81.94,
          "commitsBetweenForRepo": 446,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,8 @@\n-  public void updateInternal(boolean checkStarvation) {\n+  void updateInternal() {\n     readLock.lock();\n     try {\n       policy.computeShares(runnableApps, getFairShare());\n-      if (checkStarvation) {\n-        updateStarvedApps();\n-      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateInternal() {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 11:44 PM",
          "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 13.92,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,11 @@\n-  public void recomputeShares() {\n+  public void updateInternal(boolean checkStarvation) {\n     readLock.lock();\n     try {\n       policy.computeShares(runnableApps, getFairShare());\n+      if (checkStarvation) {\n+        updateStarvedApps();\n+      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateInternal(boolean checkStarvation) {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n      if (checkStarvation) {\n        updateStarvedApps();\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "recomputeShares",
            "newValue": "updateInternal"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 11:44 PM",
          "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 13.92,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,11 @@\n-  public void recomputeShares() {\n+  public void updateInternal(boolean checkStarvation) {\n     readLock.lock();\n     try {\n       policy.computeShares(runnableApps, getFairShare());\n+      if (checkStarvation) {\n+        updateStarvedApps();\n+      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateInternal(boolean checkStarvation) {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n      if (checkStarvation) {\n        updateStarvedApps();\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[checkStarvation-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 11:44 PM",
          "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 13.92,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,11 @@\n-  public void recomputeShares() {\n+  public void updateInternal(boolean checkStarvation) {\n     readLock.lock();\n     try {\n       policy.computeShares(runnableApps, getFairShare());\n+      if (checkStarvation) {\n+        updateStarvedApps();\n+      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateInternal(boolean checkStarvation) {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n      if (checkStarvation) {\n        updateStarvedApps();\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "24ee9e3431d27811530ffa01d8d241133fd643fe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2975. FSLeafQueue app lists are accessed without required locks. (kasha)\n",
      "commitDate": "20/12/14 12:17 PM",
      "commitName": "24ee9e3431d27811530ffa01d8d241133fd643fe",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/12/14 12:03 PM",
      "commitNameOld": "f2d150ea1205b77a75c347ace667b4cd060aaf40",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 3.01,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,8 @@\n   public void recomputeShares() {\n-    policy.computeShares(getRunnableAppSchedulables(), getFairShare());\n+    readLock.lock();\n+    try {\n+      policy.computeShares(runnableApps, getFairShare());\n+    } finally {\n+      readLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recomputeShares() {\n    readLock.lock();\n    try {\n      policy.computeShares(runnableApps, getFairShare());\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "7545d8bf996e5d060d5d613bf769ec52a62d428b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1241. In Fair Scheduler, maxRunningApps does not work for non-leaf queues. (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546623 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/13 11:02 AM",
      "commitName": "7545d8bf996e5d060d5d613bf769ec52a62d428b",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "25/10/13 5:27 PM",
      "commitNameOld": "025f1719472282a30aa26ae3e235e404f04ba932",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 34.77,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public void recomputeShares() {\n-    policy.computeShares(getAppSchedulables(), getFairShare());\n+    policy.computeShares(getRunnableAppSchedulables(), getFairShare());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recomputeShares() {\n    policy.computeShares(getRunnableAppSchedulables(), getFairShare());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/13 11:11 AM",
      "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/04/13 11:11 AM",
          "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "25/03/13 8:25 PM",
          "commitNameOld": "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 23.62,
          "commitsBetweenForRepo": 127,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  public void recomputeFairShares() {\n-    schedulingMode.computeShares(getAppSchedulables(), getFairShare());\n+  public void recomputeShares() {\n+    policy.computeShares(getAppSchedulables(), getFairShare());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recomputeShares() {\n    policy.computeShares(getAppSchedulables(), getFairShare());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "recomputeFairShares",
            "newValue": "recomputeShares"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/04/13 11:11 AM",
          "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "25/03/13 8:25 PM",
          "commitNameOld": "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 23.62,
          "commitsBetweenForRepo": 127,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  public void recomputeFairShares() {\n-    schedulingMode.computeShares(getAppSchedulables(), getFairShare());\n+  public void recomputeShares() {\n+    policy.computeShares(getAppSchedulables(), getFairShare());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recomputeShares() {\n    policy.computeShares(getAppSchedulables(), getFairShare());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-469. Make scheduling mode in FS pluggable. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1460961 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/13 8:25 PM",
      "commitName": "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "15/01/13 9:09 AM",
      "commitNameOld": "72e631098d2db8a9a18c32c9b25b57b7af4d9275",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 69.43,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,3 @@\n   public void recomputeFairShares() {\n-    if (schedulingMode \u003d\u003d SchedulingMode.FAIR) {\n-      SchedulingAlgorithms.computeFairShares(appScheds, getFairShare());\n-    } else {\n-      for (AppSchedulable sched: appScheds) {\n-        sched.setFairShare(Resources.createResource(0));\n-      }\n-    }\n+    schedulingMode.computeShares(getAppSchedulables(), getFairShare());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recomputeFairShares() {\n    schedulingMode.computeShares(getAppSchedulables(), getFairShare());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": {
      "type": "Yintroduced",
      "commitMessage": "YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415592 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/12 4:03 AM",
      "commitName": "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
      "commitAuthor": "Thomas White",
      "diff": "@@ -0,0 +1,9 @@\n+  public void recomputeFairShares() {\n+    if (schedulingMode \u003d\u003d SchedulingMode.FAIR) {\n+      SchedulingAlgorithms.computeFairShares(appScheds, getFairShare());\n+    } else {\n+      for (AppSchedulable sched: appScheds) {\n+        sched.setFairShare(Resources.createResource(0));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recomputeFairShares() {\n    if (schedulingMode \u003d\u003d SchedulingMode.FAIR) {\n      SchedulingAlgorithms.computeFairShares(appScheds, getFairShare());\n    } else {\n      for (AppSchedulable sched: appScheds) {\n        sched.setFairShare(Resources.createResource(0));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java"
    }
  }
}