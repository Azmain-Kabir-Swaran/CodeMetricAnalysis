{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileStatus.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
  "functionStartLine": 443,
  "functionEndLine": 472,
  "numCommitsSeen": 25,
  "timeTaken": 2817,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "4ad39ec3084ab45fb9bbace13082c88666a76a4c",
    "37efa67e377e7fc251ee0088098f4b1700d21823",
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
    "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc",
    "7d8057707f16f8e70529958a296ea7448d733a37",
    "788f28b6798df10e199618cc08d90284a1ee15ad"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "4ad39ec3084ab45fb9bbace13082c88666a76a4c": "Ybodychange",
    "37efa67e377e7fc251ee0088098f4b1700d21823": "Ybodychange",
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": "Ybodychange",
    "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc": "Ybodychange",
    "7d8057707f16f8e70529958a296ea7448d733a37": "Ybodychange",
    "788f28b6798df10e199618cc08d90284a1ee15ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "06/03/18 2:05 AM",
      "commitNameOld": "12ecb55ffee2b89108eea2565e7ad955ea1fabe7",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 311.37,
      "commitsBetweenForRepo": 2992,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n-    sb.append(getClass().getSimpleName()); \n-    sb.append(\"{\");\n-    sb.append(\"path\u003d\" + path);\n-    sb.append(\"; isDirectory\u003d\" + isdir);\n+    sb.append(getClass().getSimpleName())\n+        .append(\"{\")\n+        .append(\"path\u003d\" + path)\n+        .append(\"; isDirectory\u003d\" + isdir);\n     if(!isDirectory()){\n-      sb.append(\"; length\u003d\" + length);\n-      sb.append(\"; replication\u003d\" + block_replication);\n-      sb.append(\"; blocksize\u003d\" + blocksize);\n+      sb.append(\"; length\u003d\" + length)\n+          .append(\"; replication\u003d\" + block_replication)\n+          .append(\"; blocksize\u003d\" + blocksize);\n     }\n-    sb.append(\"; modification_time\u003d\" + modification_time);\n-    sb.append(\"; access_time\u003d\" + access_time);\n-    sb.append(\"; owner\u003d\" + owner);\n-    sb.append(\"; group\u003d\" + group);\n-    sb.append(\"; permission\u003d\" + permission);\n-    sb.append(\"; isSymlink\u003d\" + isSymlink());\n+    sb.append(\"; modification_time\u003d\" + modification_time)\n+        .append(\"; access_time\u003d\" + access_time)\n+        .append(\"; owner\u003d\" + owner)\n+        .append(\"; group\u003d\" + group)\n+        .append(\"; permission\u003d\" + permission)\n+        .append(\"; isSymlink\u003d\" + isSymlink());\n     if(isSymlink()) {\n       try {\n         sb.append(\"; symlink\u003d\" + getSymlink());\n       } catch (IOException e) {\n         throw new RuntimeException(\"Unexpected exception\", e);\n       }\n     }\n-    sb.append(\"; hasAcl\u003d\" + hasAcl());\n-    sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n-    sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n-    sb.append(\"}\");\n+    sb.append(\"; hasAcl\u003d\" + hasAcl())\n+        .append(\"; isEncrypted\u003d\" + isEncrypted())\n+        .append(\"; isErasureCoded\u003d\" + isErasureCoded())\n+        .append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName())\n        .append(\"{\")\n        .append(\"path\u003d\" + path)\n        .append(\"; isDirectory\u003d\" + isdir);\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + length)\n          .append(\"; replication\u003d\" + block_replication)\n          .append(\"; blocksize\u003d\" + blocksize);\n    }\n    sb.append(\"; modification_time\u003d\" + modification_time)\n        .append(\"; access_time\u003d\" + access_time)\n        .append(\"; owner\u003d\" + owner)\n        .append(\"; group\u003d\" + group)\n        .append(\"; permission\u003d\" + permission)\n        .append(\"; isSymlink\u003d\" + isSymlink());\n    if(isSymlink()) {\n      try {\n        sb.append(\"; symlink\u003d\" + getSymlink());\n      } catch (IOException e) {\n        throw new RuntimeException(\"Unexpected exception\", e);\n      }\n    }\n    sb.append(\"; hasAcl\u003d\" + hasAcl())\n        .append(\"; isEncrypted\u003d\" + isEncrypted())\n        .append(\"; isErasureCoded\u003d\" + isErasureCoded())\n        .append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "4ad39ec3084ab45fb9bbace13082c88666a76a4c": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-10054. ViewFsFileStatus.toString() is broken. Contributed by Hanisha Koneru.\"\n\nThis reverts commit 37efa67e377e7fc251ee0088098f4b1700d21823.\n",
      "commitDate": "02/01/18 5:34 PM",
      "commitName": "4ad39ec3084ab45fb9bbace13082c88666a76a4c",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "14/12/17 10:58 AM",
      "commitNameOld": "37efa67e377e7fc251ee0088098f4b1700d21823",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 19.28,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(getClass().getSimpleName()); \n     sb.append(\"{\");\n-    sb.append(\"path\u003d\" + getPath());\n-    sb.append(\"; isDirectory\u003d\" + isDirectory());\n+    sb.append(\"path\u003d\" + path);\n+    sb.append(\"; isDirectory\u003d\" + isdir);\n     if(!isDirectory()){\n-      sb.append(\"; length\u003d\" + getLen());\n-      sb.append(\"; replication\u003d\" + getReplication());\n-      sb.append(\"; blocksize\u003d\" + getBlockSize());\n+      sb.append(\"; length\u003d\" + length);\n+      sb.append(\"; replication\u003d\" + block_replication);\n+      sb.append(\"; blocksize\u003d\" + blocksize);\n     }\n-    sb.append(\"; modification_time\u003d\" + getModificationTime());\n-    sb.append(\"; access_time\u003d\" + getAccessTime());\n-    sb.append(\"; owner\u003d\" + getOwner());\n-    sb.append(\"; group\u003d\" + getGroup());\n-    sb.append(\"; permission\u003d\" + getPermission());\n+    sb.append(\"; modification_time\u003d\" + modification_time);\n+    sb.append(\"; access_time\u003d\" + access_time);\n+    sb.append(\"; owner\u003d\" + owner);\n+    sb.append(\"; group\u003d\" + group);\n+    sb.append(\"; permission\u003d\" + permission);\n     sb.append(\"; isSymlink\u003d\" + isSymlink());\n     if(isSymlink()) {\n       try {\n         sb.append(\"; symlink\u003d\" + getSymlink());\n       } catch (IOException e) {\n         throw new RuntimeException(\"Unexpected exception\", e);\n       }\n     }\n     sb.append(\"; hasAcl\u003d\" + hasAcl());\n     sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n     sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName()); \n    sb.append(\"{\");\n    sb.append(\"path\u003d\" + path);\n    sb.append(\"; isDirectory\u003d\" + isdir);\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + length);\n      sb.append(\"; replication\u003d\" + block_replication);\n      sb.append(\"; blocksize\u003d\" + blocksize);\n    }\n    sb.append(\"; modification_time\u003d\" + modification_time);\n    sb.append(\"; access_time\u003d\" + access_time);\n    sb.append(\"; owner\u003d\" + owner);\n    sb.append(\"; group\u003d\" + group);\n    sb.append(\"; permission\u003d\" + permission);\n    sb.append(\"; isSymlink\u003d\" + isSymlink());\n    if(isSymlink()) {\n      try {\n        sb.append(\"; symlink\u003d\" + getSymlink());\n      } catch (IOException e) {\n        throw new RuntimeException(\"Unexpected exception\", e);\n      }\n    }\n    sb.append(\"; hasAcl\u003d\" + hasAcl());\n    sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n    sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "37efa67e377e7fc251ee0088098f4b1700d21823": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10054. ViewFsFileStatus.toString() is broken. Contributed by Hanisha Koneru.\n",
      "commitDate": "14/12/17 10:58 AM",
      "commitName": "37efa67e377e7fc251ee0088098f4b1700d21823",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "29/11/17 8:28 PM",
      "commitNameOld": "0e560f3b8d194c10dce06443979df4074e14b0db",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 14.6,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(getClass().getSimpleName()); \n     sb.append(\"{\");\n-    sb.append(\"path\u003d\" + path);\n-    sb.append(\"; isDirectory\u003d\" + isdir);\n+    sb.append(\"path\u003d\" + getPath());\n+    sb.append(\"; isDirectory\u003d\" + isDirectory());\n     if(!isDirectory()){\n-      sb.append(\"; length\u003d\" + length);\n-      sb.append(\"; replication\u003d\" + block_replication);\n-      sb.append(\"; blocksize\u003d\" + blocksize);\n+      sb.append(\"; length\u003d\" + getLen());\n+      sb.append(\"; replication\u003d\" + getReplication());\n+      sb.append(\"; blocksize\u003d\" + getBlockSize());\n     }\n-    sb.append(\"; modification_time\u003d\" + modification_time);\n-    sb.append(\"; access_time\u003d\" + access_time);\n-    sb.append(\"; owner\u003d\" + owner);\n-    sb.append(\"; group\u003d\" + group);\n-    sb.append(\"; permission\u003d\" + permission);\n+    sb.append(\"; modification_time\u003d\" + getModificationTime());\n+    sb.append(\"; access_time\u003d\" + getAccessTime());\n+    sb.append(\"; owner\u003d\" + getOwner());\n+    sb.append(\"; group\u003d\" + getGroup());\n+    sb.append(\"; permission\u003d\" + getPermission());\n     sb.append(\"; isSymlink\u003d\" + isSymlink());\n     if(isSymlink()) {\n       try {\n         sb.append(\"; symlink\u003d\" + getSymlink());\n       } catch (IOException e) {\n         throw new RuntimeException(\"Unexpected exception\", e);\n       }\n     }\n     sb.append(\"; hasAcl\u003d\" + hasAcl());\n     sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n     sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName()); \n    sb.append(\"{\");\n    sb.append(\"path\u003d\" + getPath());\n    sb.append(\"; isDirectory\u003d\" + isDirectory());\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + getLen());\n      sb.append(\"; replication\u003d\" + getReplication());\n      sb.append(\"; blocksize\u003d\" + getBlockSize());\n    }\n    sb.append(\"; modification_time\u003d\" + getModificationTime());\n    sb.append(\"; access_time\u003d\" + getAccessTime());\n    sb.append(\"; owner\u003d\" + getOwner());\n    sb.append(\"; group\u003d\" + getGroup());\n    sb.append(\"; permission\u003d\" + getPermission());\n    sb.append(\"; isSymlink\u003d\" + isSymlink());\n    if(isSymlink()) {\n      try {\n        sb.append(\"; symlink\u003d\" + getSymlink());\n      } catch (IOException e) {\n        throw new RuntimeException(\"Unexpected exception\", e);\n      }\n    }\n    sb.append(\"; hasAcl\u003d\" + hasAcl());\n    sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n    sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6984. Serialize FileStatus via protobuf.\n",
      "commitDate": "02/08/17 12:12 PM",
      "commitName": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "01/08/17 5:13 PM",
      "commitNameOld": "cf6794ebe93906c406a54acc5c8854dc600a9a7f",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,30 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(getClass().getSimpleName()); \n     sb.append(\"{\");\n     sb.append(\"path\u003d\" + path);\n     sb.append(\"; isDirectory\u003d\" + isdir);\n     if(!isDirectory()){\n       sb.append(\"; length\u003d\" + length);\n       sb.append(\"; replication\u003d\" + block_replication);\n       sb.append(\"; blocksize\u003d\" + blocksize);\n     }\n     sb.append(\"; modification_time\u003d\" + modification_time);\n     sb.append(\"; access_time\u003d\" + access_time);\n     sb.append(\"; owner\u003d\" + owner);\n     sb.append(\"; group\u003d\" + group);\n     sb.append(\"; permission\u003d\" + permission);\n     sb.append(\"; isSymlink\u003d\" + isSymlink());\n     if(isSymlink()) {\n-      sb.append(\"; symlink\u003d\" + symlink);\n+      try {\n+        sb.append(\"; symlink\u003d\" + getSymlink());\n+      } catch (IOException e) {\n+        throw new RuntimeException(\"Unexpected exception\", e);\n+      }\n     }\n     sb.append(\"; hasAcl\u003d\" + hasAcl());\n     sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n     sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName()); \n    sb.append(\"{\");\n    sb.append(\"path\u003d\" + path);\n    sb.append(\"; isDirectory\u003d\" + isdir);\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + length);\n      sb.append(\"; replication\u003d\" + block_replication);\n      sb.append(\"; blocksize\u003d\" + blocksize);\n    }\n    sb.append(\"; modification_time\u003d\" + modification_time);\n    sb.append(\"; access_time\u003d\" + access_time);\n    sb.append(\"; owner\u003d\" + owner);\n    sb.append(\"; group\u003d\" + group);\n    sb.append(\"; permission\u003d\" + permission);\n    sb.append(\"; isSymlink\u003d\" + isSymlink());\n    if(isSymlink()) {\n      try {\n        sb.append(\"; symlink\u003d\" + getSymlink());\n      } catch (IOException e) {\n        throw new RuntimeException(\"Unexpected exception\", e);\n      }\n    }\n    sb.append(\"; hasAcl\u003d\" + hasAcl());\n    sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n    sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14223. Extend FileStatus#toString() to include details like Erasure Coding and Encryption. Contributed by Manoj Govindassamy.\n",
      "commitDate": "29/03/17 2:37 PM",
      "commitName": "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/03/17 11:44 AM",
      "commitNameOld": "52b00600df921763725396ed92194d3338167655",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(getClass().getSimpleName()); \n     sb.append(\"{\");\n     sb.append(\"path\u003d\" + path);\n     sb.append(\"; isDirectory\u003d\" + isdir);\n     if(!isDirectory()){\n       sb.append(\"; length\u003d\" + length);\n       sb.append(\"; replication\u003d\" + block_replication);\n       sb.append(\"; blocksize\u003d\" + blocksize);\n     }\n     sb.append(\"; modification_time\u003d\" + modification_time);\n     sb.append(\"; access_time\u003d\" + access_time);\n     sb.append(\"; owner\u003d\" + owner);\n     sb.append(\"; group\u003d\" + group);\n     sb.append(\"; permission\u003d\" + permission);\n     sb.append(\"; isSymlink\u003d\" + isSymlink());\n     if(isSymlink()) {\n       sb.append(\"; symlink\u003d\" + symlink);\n     }\n+    sb.append(\"; hasAcl\u003d\" + hasAcl());\n+    sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n+    sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName()); \n    sb.append(\"{\");\n    sb.append(\"path\u003d\" + path);\n    sb.append(\"; isDirectory\u003d\" + isdir);\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + length);\n      sb.append(\"; replication\u003d\" + block_replication);\n      sb.append(\"; blocksize\u003d\" + blocksize);\n    }\n    sb.append(\"; modification_time\u003d\" + modification_time);\n    sb.append(\"; access_time\u003d\" + access_time);\n    sb.append(\"; owner\u003d\" + owner);\n    sb.append(\"; group\u003d\" + group);\n    sb.append(\"; permission\u003d\" + permission);\n    sb.append(\"; isSymlink\u003d\" + isSymlink());\n    if(isSymlink()) {\n      sb.append(\"; symlink\u003d\" + symlink);\n    }\n    sb.append(\"; hasAcl\u003d\" + hasAcl());\n    sb.append(\"; isEncrypted\u003d\" + isEncrypted());\n    sb.append(\"; isErasureCoded\u003d\" + isErasureCoded());\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "7d8057707f16f8e70529958a296ea7448d733a37": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9147. Add missing fields to FIleStatus.toString. Contributed by Jonathan Allen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 6:23 AM",
      "commitName": "7d8057707f16f8e70529958a296ea7448d733a37",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 115.56,
      "commitsBetweenForRepo": 610,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,23 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(getClass().getSimpleName()); \n     sb.append(\"{\");\n     sb.append(\"path\u003d\" + path);\n     sb.append(\"; isDirectory\u003d\" + isdir);\n     if(!isDirectory()){\n       sb.append(\"; length\u003d\" + length);\n       sb.append(\"; replication\u003d\" + block_replication);\n       sb.append(\"; blocksize\u003d\" + blocksize);\n     }\n+    sb.append(\"; modification_time\u003d\" + modification_time);\n+    sb.append(\"; access_time\u003d\" + access_time);\n     sb.append(\"; owner\u003d\" + owner);\n     sb.append(\"; group\u003d\" + group);\n     sb.append(\"; permission\u003d\" + permission);\n+    sb.append(\"; isSymlink\u003d\" + isSymlink());\n+    if(isSymlink()) {\n+      sb.append(\"; symlink\u003d\" + symlink);\n+    }\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName()); \n    sb.append(\"{\");\n    sb.append(\"path\u003d\" + path);\n    sb.append(\"; isDirectory\u003d\" + isdir);\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + length);\n      sb.append(\"; replication\u003d\" + block_replication);\n      sb.append(\"; blocksize\u003d\" + blocksize);\n    }\n    sb.append(\"; modification_time\u003d\" + modification_time);\n    sb.append(\"; access_time\u003d\" + access_time);\n    sb.append(\"; owner\u003d\" + owner);\n    sb.append(\"; group\u003d\" + group);\n    sb.append(\"; permission\u003d\" + permission);\n    sb.append(\"; isSymlink\u003d\" + isSymlink());\n    if(isSymlink()) {\n      sb.append(\"; symlink\u003d\" + symlink);\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "788f28b6798df10e199618cc08d90284a1ee15ad": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7886. Add toString to FileStatus. Contributed by SreeHari.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1210793 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/11 10:35 PM",
      "commitName": "788f28b6798df10e199618cc08d90284a1ee15ad",
      "commitAuthor": "Jakob Homan",
      "diff": "@@ -0,0 +1,17 @@\n+  public String toString() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(getClass().getSimpleName()); \n+    sb.append(\"{\");\n+    sb.append(\"path\u003d\" + path);\n+    sb.append(\"; isDirectory\u003d\" + isdir);\n+    if(!isDirectory()){\n+      sb.append(\"; length\u003d\" + length);\n+      sb.append(\"; replication\u003d\" + block_replication);\n+      sb.append(\"; blocksize\u003d\" + blocksize);\n+    }\n+    sb.append(\"; owner\u003d\" + owner);\n+    sb.append(\"; group\u003d\" + group);\n+    sb.append(\"; permission\u003d\" + permission);\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName()); \n    sb.append(\"{\");\n    sb.append(\"path\u003d\" + path);\n    sb.append(\"; isDirectory\u003d\" + isdir);\n    if(!isDirectory()){\n      sb.append(\"; length\u003d\" + length);\n      sb.append(\"; replication\u003d\" + block_replication);\n      sb.append(\"; blocksize\u003d\" + blocksize);\n    }\n    sb.append(\"; owner\u003d\" + owner);\n    sb.append(\"; group\u003d\" + group);\n    sb.append(\"; permission\u003d\" + permission);\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java"
    }
  }
}