{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AggregatedLogDeletionService.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
  "functionStartLine": 82,
  "functionEndLine": 108,
  "numCommitsSeen": 14,
  "timeTaken": 1670,
  "changeHistory": [
    "accb811e5727f2a780a41cd5e50bab47a0cccb68",
    "5cfaee2e6db8b2ac55708de0968ff5539ee3bd76",
    "cb81bac0029fce3a9726df3523f0b692cd3375b8",
    "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e"
  ],
  "changeHistoryShort": {
    "accb811e5727f2a780a41cd5e50bab47a0cccb68": "Ybodychange",
    "5cfaee2e6db8b2ac55708de0968ff5539ee3bd76": "Ybodychange",
    "cb81bac0029fce3a9726df3523f0b692cd3375b8": "Ybodychange",
    "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "accb811e5727f2a780a41cd5e50bab47a0cccb68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6929.  Improved partition algorithm for yarn remote-app-log-dir.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "30/04/19 2:04 PM",
      "commitName": "accb811e5727f2a780a41cd5e50bab47a0cccb68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 57.55,
      "commitsBetweenForRepo": 409,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,27 @@\n     public void run() {\n       long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n       LOG.info(\"aggregated log deletion started.\");\n       try {\n         FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n         for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n           if(userDir.isDirectory()) {\n-            Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n-            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs, rmClient);\n+            for (FileStatus suffixDir : fs.listStatus(userDir.getPath())) {\n+              Path suffixDirPath \u003d suffixDir.getPath();\n+              if (suffixDir.isDirectory() \u0026\u0026 suffixDirPath.getName().\n+                  startsWith(suffix)) {\n+                for (FileStatus bucketDir : fs.listStatus(suffixDirPath)) {\n+                  if (bucketDir.isDirectory()) {\n+                    deleteOldLogDirsFrom(bucketDir.getPath(), cutoffMillis,\n+                        fs, rmClient);\n+                  }\n+                }\n+              }\n+            }\n           }\n         }\n       } catch (Throwable t) {\n         logException(\"Error reading root log dir this deletion \" +\n             \"attempt is being aborted\", t);\n       }\n       LOG.info(\"aggregated log deletion finished.\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n      LOG.info(\"aggregated log deletion started.\");\n      try {\n        FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n        for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n          if(userDir.isDirectory()) {\n            for (FileStatus suffixDir : fs.listStatus(userDir.getPath())) {\n              Path suffixDirPath \u003d suffixDir.getPath();\n              if (suffixDir.isDirectory() \u0026\u0026 suffixDirPath.getName().\n                  startsWith(suffix)) {\n                for (FileStatus bucketDir : fs.listStatus(suffixDirPath)) {\n                  if (bucketDir.isDirectory()) {\n                    deleteOldLogDirsFrom(bucketDir.getPath(), cutoffMillis,\n                        fs, rmClient);\n                  }\n                }\n              }\n            }\n          }\n        }\n      } catch (Throwable t) {\n        logException(\"Error reading root log dir this deletion \" +\n            \"attempt is being aborted\", t);\n      }\n      LOG.info(\"aggregated log deletion finished.\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
      "extendedDetails": {}
    },
    "5cfaee2e6db8b2ac55708de0968ff5539ee3bd76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7495. Improve robustness of the AggregatedLogDeletionService. Contributed by Jonathan Eagles\n",
      "commitDate": "30/11/17 10:39 AM",
      "commitName": "5cfaee2e6db8b2ac55708de0968ff5539ee3bd76",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 533.86,
      "commitsBetweenForRepo": 3650,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public void run() {\n       long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n       LOG.info(\"aggregated log deletion started.\");\n       try {\n         FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n         for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n           if(userDir.isDirectory()) {\n             Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n             deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs, rmClient);\n           }\n         }\n-      } catch (IOException e) {\n-        logIOException(\"Error reading root log dir this deletion \" +\n-        \t\t\"attempt is being aborted\", e);\n+      } catch (Throwable t) {\n+        logException(\"Error reading root log dir this deletion \" +\n+            \"attempt is being aborted\", t);\n       }\n       LOG.info(\"aggregated log deletion finished.\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n      LOG.info(\"aggregated log deletion started.\");\n      try {\n        FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n        for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n          if(userDir.isDirectory()) {\n            Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs, rmClient);\n          }\n        }\n      } catch (Throwable t) {\n        logException(\"Error reading root log dir this deletion \" +\n            \"attempt is being aborted\", t);\n      }\n      LOG.info(\"aggregated log deletion finished.\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
      "extendedDetails": {}
    },
    "cb81bac0029fce3a9726df3523f0b692cd3375b8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2583. Modified AggregatedLogDeletionService to be able to delete rolling aggregated logs. Contributed by Xuan Gong.\n",
      "commitDate": "10/10/14 12:11 AM",
      "commitName": "cb81bac0029fce3a9726df3523f0b692cd3375b8",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "23/07/13 12:20 PM",
      "commitNameOld": "a42e459b9eba8c79652036e44dceb34d717b665e",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 443.49,
      "commitsBetweenForRepo": 3290,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n     public void run() {\n       long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n       LOG.info(\"aggregated log deletion started.\");\n       try {\n         FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n-\n         for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n           if(userDir.isDirectory()) {\n             Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n-            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs);\n+            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs, rmClient);\n           }\n         }\n       } catch (IOException e) {\n         logIOException(\"Error reading root log dir this deletion \" +\n         \t\t\"attempt is being aborted\", e);\n       }\n       LOG.info(\"aggregated log deletion finished.\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n      LOG.info(\"aggregated log deletion started.\");\n      try {\n        FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n        for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n          if(userDir.isDirectory()) {\n            Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs, rmClient);\n          }\n        }\n      } catch (IOException e) {\n        logIOException(\"Error reading root log dir this deletion \" +\n        \t\t\"attempt is being aborted\", e);\n      }\n      LOG.info(\"aggregated log deletion finished.\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
      "extendedDetails": {}
    },
    "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-25. remove old aggregated logs  (Robert Evans via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374424 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/12 1:29 PM",
      "commitName": "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,18 @@\n+    public void run() {\n+      long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n+      LOG.info(\"aggregated log deletion started.\");\n+      try {\n+        FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n+\n+        for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n+          if(userDir.isDirectory()) {\n+            Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n+            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs);\n+          }\n+        }\n+      } catch (IOException e) {\n+        logIOException(\"Error reading root log dir this deletion \" +\n+        \t\t\"attempt is being aborted\", e);\n+      }\n+      LOG.info(\"aggregated log deletion finished.\");\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      long cutoffMillis \u003d System.currentTimeMillis() - retentionMillis;\n      LOG.info(\"aggregated log deletion started.\");\n      try {\n        FileSystem fs \u003d remoteRootLogDir.getFileSystem(conf);\n\n        for(FileStatus userDir : fs.listStatus(remoteRootLogDir)) {\n          if(userDir.isDirectory()) {\n            Path userDirPath \u003d new Path(userDir.getPath(), suffix);\n            deleteOldLogDirsFrom(userDirPath, cutoffMillis, fs);\n          }\n        }\n      } catch (IOException e) {\n        logIOException(\"Error reading root log dir this deletion \" +\n        \t\t\"attempt is being aborted\", e);\n      }\n      LOG.info(\"aggregated log deletion finished.\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java"
    }
  }
}