{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Task.java",
  "functionName": "updateCounters",
  "functionId": "updateCounters",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
  "functionStartLine": 1137,
  "functionEndLine": 1185,
  "numCommitsSeen": 47,
  "timeTaken": 9791,
  "changeHistory": [
    "5fdfa2b4bdc2c75bcc920538ee1f8c2063c48e33",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "24676e8c2ef48e67265d33c053badb31aecad616",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "5fdfa2b4bdc2c75bcc920538ee1f8c2063c48e33": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "24676e8c2ef48e67265d33c053badb31aecad616": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5fdfa2b4bdc2c75bcc920538ee1f8c2063c48e33": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3822. Changed FS counter computation to use all occurences of the same FS scheme, instead of randomly using one. (Contributed by Mahadev Konar)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/12 4:56 PM",
      "commitName": "5fdfa2b4bdc2c75bcc920538ee1f8c2063c48e33",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "06/02/12 4:53 PM",
      "commitNameOld": "59d1f07d6c24c085934330b6dedfd4d22ee2f260",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,26 @@\n   private synchronized void updateCounters() {\n+    Map\u003cString, List\u003cFileSystem.Statistics\u003e\u003e map \u003d new \n+        HashMap\u003cString, List\u003cFileSystem.Statistics\u003e\u003e();\n     for(Statistics stat: FileSystem.getAllStatistics()) {\n       String uriScheme \u003d stat.getScheme();\n-      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n-      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n-        updater \u003d new FileSystemStatisticUpdater(stat);\n-        statisticUpdaters.put(uriScheme, updater);\n+      if (map.containsKey(uriScheme)) {\n+        List\u003cFileSystem.Statistics\u003e list \u003d map.get(uriScheme);\n+        list.add(stat);\n+      } else {\n+        List\u003cFileSystem.Statistics\u003e list \u003d new ArrayList\u003cFileSystem.Statistics\u003e();\n+        list.add(stat);\n+        map.put(uriScheme, list);\n       }\n-      updater.updateCounters();      \n     }\n-\n+    for (Map.Entry\u003cString, List\u003cFileSystem.Statistics\u003e\u003e entry: map.entrySet()) {\n+      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(entry.getKey());\n+      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n+        updater \u003d new FileSystemStatisticUpdater(entry.getValue(), entry.getKey());\n+        statisticUpdaters.put(entry.getKey(), updater);\n+      }\n+      updater.updateCounters();\n+    }\n+    \n     gcUpdater.incrementGcCounter();\n     updateResourceCounters();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void updateCounters() {\n    Map\u003cString, List\u003cFileSystem.Statistics\u003e\u003e map \u003d new \n        HashMap\u003cString, List\u003cFileSystem.Statistics\u003e\u003e();\n    for(Statistics stat: FileSystem.getAllStatistics()) {\n      String uriScheme \u003d stat.getScheme();\n      if (map.containsKey(uriScheme)) {\n        List\u003cFileSystem.Statistics\u003e list \u003d map.get(uriScheme);\n        list.add(stat);\n      } else {\n        List\u003cFileSystem.Statistics\u003e list \u003d new ArrayList\u003cFileSystem.Statistics\u003e();\n        list.add(stat);\n        map.put(uriScheme, list);\n      }\n    }\n    for (Map.Entry\u003cString, List\u003cFileSystem.Statistics\u003e\u003e entry: map.entrySet()) {\n      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(entry.getKey());\n      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n        updater \u003d new FileSystemStatisticUpdater(entry.getValue(), entry.getKey());\n        statisticUpdaters.put(entry.getKey(), updater);\n      }\n      updater.updateCounters();\n    }\n    \n    gcUpdater.incrementGcCounter();\n    updateResourceCounters();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void updateCounters() {\n    for(Statistics stat: FileSystem.getAllStatistics()) {\n      String uriScheme \u003d stat.getScheme();\n      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n        updater \u003d new FileSystemStatisticUpdater(stat);\n        statisticUpdaters.put(uriScheme, updater);\n      }\n      updater.updateCounters();      \n    }\n\n    gcUpdater.incrementGcCounter();\n    updateResourceCounters();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void updateCounters() {\n    for(Statistics stat: FileSystem.getAllStatistics()) {\n      String uriScheme \u003d stat.getScheme();\n      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n        updater \u003d new FileSystemStatisticUpdater(stat);\n        statisticUpdaters.put(uriScheme, updater);\n      }\n      updater.updateCounters();      \n    }\n\n    gcUpdater.incrementGcCounter();\n    updateResourceCounters();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/Task.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
        "oldMethodName": "updateCounters",
        "newMethodName": "updateCounters"
      }
    },
    "24676e8c2ef48e67265d33c053badb31aecad616": {
      "type": "Ybodychange",
      "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 4:25 PM",
      "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/08/11 2:00 PM",
      "commitNameOld": "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private synchronized void updateCounters() {\n     for(Statistics stat: FileSystem.getAllStatistics()) {\n       String uriScheme \u003d stat.getScheme();\n       FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n       if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n-        updater \u003d new FileSystemStatisticUpdater(uriScheme, stat);\n+        updater \u003d new FileSystemStatisticUpdater(stat);\n         statisticUpdaters.put(uriScheme, updater);\n       }\n       updater.updateCounters();      \n     }\n \n     gcUpdater.incrementGcCounter();\n     updateResourceCounters();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void updateCounters() {\n    for(Statistics stat: FileSystem.getAllStatistics()) {\n      String uriScheme \u003d stat.getScheme();\n      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n        updater \u003d new FileSystemStatisticUpdater(stat);\n        statisticUpdaters.put(uriScheme, updater);\n      }\n      updater.updateCounters();      \n    }\n\n    gcUpdater.incrementGcCounter();\n    updateResourceCounters();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  private synchronized void updateCounters() {\n+    for(Statistics stat: FileSystem.getAllStatistics()) {\n+      String uriScheme \u003d stat.getScheme();\n+      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n+      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n+        updater \u003d new FileSystemStatisticUpdater(uriScheme, stat);\n+        statisticUpdaters.put(uriScheme, updater);\n+      }\n+      updater.updateCounters();      \n+    }\n+\n+    gcUpdater.incrementGcCounter();\n+    updateResourceCounters();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void updateCounters() {\n    for(Statistics stat: FileSystem.getAllStatistics()) {\n      String uriScheme \u003d stat.getScheme();\n      FileSystemStatisticUpdater updater \u003d statisticUpdaters.get(uriScheme);\n      if(updater\u003d\u003dnull) {//new FileSystem has been found in the cache\n        updater \u003d new FileSystemStatisticUpdater(uriScheme, stat);\n        statisticUpdaters.put(uriScheme, updater);\n      }\n      updater.updateCounters();      \n    }\n\n    gcUpdater.incrementGcCounter();\n    updateResourceCounters();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/Task.java"
    }
  }
}