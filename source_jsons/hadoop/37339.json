{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractReservationSystem.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
  "functionStartLine": 327,
  "functionEndLine": 336,
  "numCommitsSeen": 15,
  "timeTaken": 1139,
  "changeHistory": [
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,10 @@\n+  public void serviceInit(Configuration conf) throws Exception {\n+    Configuration configuration \u003d new Configuration(conf);\n+    reinitialize(configuration, rmContext);\n+    // Create the plan follower with the active plans\n+    planFollower \u003d createPlanFollower();\n+    if (planFollower !\u003d null) {\n+      planFollower.init(clock, scheduler, plans.values());\n+    }\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    Configuration configuration \u003d new Configuration(conf);\n    reinitialize(configuration, rmContext);\n    // Create the plan follower with the active plans\n    planFollower \u003d createPlanFollower();\n    if (planFollower !\u003d null) {\n      planFollower.init(clock, scheduler, plans.values());\n    }\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java"
    }
  }
}