{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsVolumeImpl.java",
  "functionName": "updateRURCopyOnTruncate",
  "functionId": "updateRURCopyOnTruncate___rur-ReplicaInfo__bpid-String__newBlockId-long__recoveryId-long__newlength-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java",
  "functionStartLine": 1283,
  "functionEndLine": 1306,
  "numCommitsSeen": 71,
  "timeTaken": 3207,
  "changeHistory": [
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
    "c619e9b43fd00ba0e59a98ae09685ff719bb722b",
    "86c9862bec0248d671e657aa56094a2919b8ac14"
  ],
  "changeHistoryShort": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": "Ybodychange",
    "c619e9b43fd00ba0e59a98ae09685ff719bb722b": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
      "commitDate": "14/12/16 11:18 AM",
      "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "12/12/16 6:11 PM",
      "commitNameOld": "2d4731c067ff64cd88f496eac8faaf302faa2ccc",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 1.71,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public ReplicaInPipeline updateRURCopyOnTruncate(ReplicaInfo rur,\n       String bpid, long newBlockId, long recoveryId, long newlength)\n       throws IOException {\n \n     rur.breakHardLinksIfNeeded();\n     File[] copiedReplicaFiles \u003d\n         copyReplicaWithNewBlockIdAndGS(rur, bpid, newBlockId, recoveryId);\n     File blockFile \u003d copiedReplicaFiles[1];\n     File metaFile \u003d copiedReplicaFiles[0];\n-    LocalReplica.truncateBlock(blockFile, metaFile,\n-        rur.getNumBytes(), newlength);\n+    LocalReplica.truncateBlock(rur.getVolume(), blockFile, metaFile,\n+        rur.getNumBytes(), newlength, fileIoProvider);\n \n     LocalReplicaInPipeline newReplicaInfo \u003d new ReplicaBuilder(ReplicaState.RBW)\n         .setBlockId(newBlockId)\n         .setGenerationStamp(recoveryId)\n         .setFsVolume(this)\n         .setDirectoryToUse(blockFile.getParentFile())\n         .setBytesToReserve(newlength)\n         .buildLocalReplicaInPipeline();\n     // In theory, this rbw replica needs to reload last chunk checksum,\n     // but it is immediately converted to finalized state within the same lock,\n     // so no need to update it.\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaInPipeline updateRURCopyOnTruncate(ReplicaInfo rur,\n      String bpid, long newBlockId, long recoveryId, long newlength)\n      throws IOException {\n\n    rur.breakHardLinksIfNeeded();\n    File[] copiedReplicaFiles \u003d\n        copyReplicaWithNewBlockIdAndGS(rur, bpid, newBlockId, recoveryId);\n    File blockFile \u003d copiedReplicaFiles[1];\n    File metaFile \u003d copiedReplicaFiles[0];\n    LocalReplica.truncateBlock(rur.getVolume(), blockFile, metaFile,\n        rur.getNumBytes(), newlength, fileIoProvider);\n\n    LocalReplicaInPipeline newReplicaInfo \u003d new ReplicaBuilder(ReplicaState.RBW)\n        .setBlockId(newBlockId)\n        .setGenerationStamp(recoveryId)\n        .setFsVolume(this)\n        .setDirectoryToUse(blockFile.getParentFile())\n        .setBytesToReserve(newlength)\n        .buildLocalReplicaInPipeline();\n    // In theory, this rbw replica needs to reload last chunk checksum,\n    // but it is immediately converted to finalized state within the same lock,\n    // so no need to update it.\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java",
      "extendedDetails": {}
    },
    "c619e9b43fd00ba0e59a98ae09685ff719bb722b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11056. Concurrent append and read operations lead to checksum error. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "09/11/16 9:16 AM",
      "commitName": "c619e9b43fd00ba0e59a98ae09685ff719bb722b",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "06/11/16 6:16 PM",
      "commitNameOld": "049e7d27bea13d4254baccf49401daae820b71df",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.63,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public ReplicaInPipeline updateRURCopyOnTruncate(ReplicaInfo rur,\n       String bpid, long newBlockId, long recoveryId, long newlength)\n       throws IOException {\n \n     rur.breakHardLinksIfNeeded();\n     File[] copiedReplicaFiles \u003d\n         copyReplicaWithNewBlockIdAndGS(rur, bpid, newBlockId, recoveryId);\n     File blockFile \u003d copiedReplicaFiles[1];\n     File metaFile \u003d copiedReplicaFiles[0];\n     LocalReplica.truncateBlock(blockFile, metaFile,\n         rur.getNumBytes(), newlength);\n \n     LocalReplicaInPipeline newReplicaInfo \u003d new ReplicaBuilder(ReplicaState.RBW)\n         .setBlockId(newBlockId)\n         .setGenerationStamp(recoveryId)\n         .setFsVolume(this)\n         .setDirectoryToUse(blockFile.getParentFile())\n         .setBytesToReserve(newlength)\n         .buildLocalReplicaInPipeline();\n+    // In theory, this rbw replica needs to reload last chunk checksum,\n+    // but it is immediately converted to finalized state within the same lock,\n+    // so no need to update it.\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaInPipeline updateRURCopyOnTruncate(ReplicaInfo rur,\n      String bpid, long newBlockId, long recoveryId, long newlength)\n      throws IOException {\n\n    rur.breakHardLinksIfNeeded();\n    File[] copiedReplicaFiles \u003d\n        copyReplicaWithNewBlockIdAndGS(rur, bpid, newBlockId, recoveryId);\n    File blockFile \u003d copiedReplicaFiles[1];\n    File metaFile \u003d copiedReplicaFiles[0];\n    LocalReplica.truncateBlock(blockFile, metaFile,\n        rur.getNumBytes(), newlength);\n\n    LocalReplicaInPipeline newReplicaInfo \u003d new ReplicaBuilder(ReplicaState.RBW)\n        .setBlockId(newBlockId)\n        .setGenerationStamp(recoveryId)\n        .setFsVolume(this)\n        .setDirectoryToUse(blockFile.getParentFile())\n        .setBytesToReserve(newlength)\n        .buildLocalReplicaInPipeline();\n    // In theory, this rbw replica needs to reload last chunk checksum,\n    // but it is immediately converted to finalized state within the same lock,\n    // so no need to update it.\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,21 @@\n+  public ReplicaInPipeline updateRURCopyOnTruncate(ReplicaInfo rur,\n+      String bpid, long newBlockId, long recoveryId, long newlength)\n+      throws IOException {\n+\n+    rur.breakHardLinksIfNeeded();\n+    File[] copiedReplicaFiles \u003d\n+        copyReplicaWithNewBlockIdAndGS(rur, bpid, newBlockId, recoveryId);\n+    File blockFile \u003d copiedReplicaFiles[1];\n+    File metaFile \u003d copiedReplicaFiles[0];\n+    LocalReplica.truncateBlock(blockFile, metaFile,\n+        rur.getNumBytes(), newlength);\n+\n+    LocalReplicaInPipeline newReplicaInfo \u003d new ReplicaBuilder(ReplicaState.RBW)\n+        .setBlockId(newBlockId)\n+        .setGenerationStamp(recoveryId)\n+        .setFsVolume(this)\n+        .setDirectoryToUse(blockFile.getParentFile())\n+        .setBytesToReserve(newlength)\n+        .buildLocalReplicaInPipeline();\n+    return newReplicaInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaInPipeline updateRURCopyOnTruncate(ReplicaInfo rur,\n      String bpid, long newBlockId, long recoveryId, long newlength)\n      throws IOException {\n\n    rur.breakHardLinksIfNeeded();\n    File[] copiedReplicaFiles \u003d\n        copyReplicaWithNewBlockIdAndGS(rur, bpid, newBlockId, recoveryId);\n    File blockFile \u003d copiedReplicaFiles[1];\n    File metaFile \u003d copiedReplicaFiles[0];\n    LocalReplica.truncateBlock(blockFile, metaFile,\n        rur.getNumBytes(), newlength);\n\n    LocalReplicaInPipeline newReplicaInfo \u003d new ReplicaBuilder(ReplicaState.RBW)\n        .setBlockId(newBlockId)\n        .setGenerationStamp(recoveryId)\n        .setFsVolume(this)\n        .setDirectoryToUse(blockFile.getParentFile())\n        .setBytesToReserve(newlength)\n        .buildLocalReplicaInPipeline();\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java"
    }
  }
}