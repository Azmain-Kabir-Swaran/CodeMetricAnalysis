{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeAttributesCLI.java",
  "functionName": "printNodesByAttributes",
  "functionId": "printNodesByAttributes___attrs-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.java",
  "functionStartLine": 358,
  "functionEndLine": 393,
  "numCommitsSeen": 4,
  "timeTaken": 1171,
  "changeHistory": [
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1"
  ],
  "changeHistoryShort": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,36 @@\n+    public int printNodesByAttributes(String[] attrs)\n+        throws YarnException, IOException {\n+      ApplicationClientProtocol protocol \u003d createApplicationProtocol();\n+      HashSet\u003cNodeAttributeKey\u003e set \u003d new HashSet\u003c\u003e();\n+\n+      for (String attr : attrs) {\n+        String[] attrFields \u003d attr.split(SPLITPATTERN);\n+        if (attrFields.length \u003d\u003d 1) {\n+          set.add(NodeAttributeKey.newInstance(attrFields[0]));\n+        } else if (attrFields.length \u003d\u003d 2) {\n+          set.add(NodeAttributeKey.newInstance(attrFields[0], attrFields[1]));\n+        } else {\n+          throw new IllegalArgumentException(\n+              \" Attribute format not correct. Should be \u003c[prefix]/[name]\u003e :\"\n+                  + attr);\n+        }\n+      }\n+\n+      GetAttributesToNodesRequest request \u003d\n+          GetAttributesToNodesRequest.newInstance(set);\n+      GetAttributesToNodesResponse response \u003d\n+          protocol.getAttributesToNodes(request);\n+      ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n+      PrintWriter writer \u003d new PrintWriter(\n+          new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n+      writer.format(HOSTNAMEVAL, \"Hostname\", \"Attribute-value\");\n+      response.getAttributesToNodes().forEach((attributeKey, v) -\u003e {\n+        writer.println(getKeyString(attributeKey) + \" :\");\n+        v.iterator().forEachRemaining(attrVal -\u003e writer\n+            .format(HOSTNAMEVAL, attrVal.getHostname(),\n+                attrVal.getAttributeValue()));\n+      });\n+      writer.close();\n+      sysOut.println(baos.toString(\"UTF-8\"));\n+      return 0;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int printNodesByAttributes(String[] attrs)\n        throws YarnException, IOException {\n      ApplicationClientProtocol protocol \u003d createApplicationProtocol();\n      HashSet\u003cNodeAttributeKey\u003e set \u003d new HashSet\u003c\u003e();\n\n      for (String attr : attrs) {\n        String[] attrFields \u003d attr.split(SPLITPATTERN);\n        if (attrFields.length \u003d\u003d 1) {\n          set.add(NodeAttributeKey.newInstance(attrFields[0]));\n        } else if (attrFields.length \u003d\u003d 2) {\n          set.add(NodeAttributeKey.newInstance(attrFields[0], attrFields[1]));\n        } else {\n          throw new IllegalArgumentException(\n              \" Attribute format not correct. Should be \u003c[prefix]/[name]\u003e :\"\n                  + attr);\n        }\n      }\n\n      GetAttributesToNodesRequest request \u003d\n          GetAttributesToNodesRequest.newInstance(set);\n      GetAttributesToNodesResponse response \u003d\n          protocol.getAttributesToNodes(request);\n      ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n      PrintWriter writer \u003d new PrintWriter(\n          new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n      writer.format(HOSTNAMEVAL, \"Hostname\", \"Attribute-value\");\n      response.getAttributesToNodes().forEach((attributeKey, v) -\u003e {\n        writer.println(getKeyString(attributeKey) + \" :\");\n        v.iterator().forEachRemaining(attrVal -\u003e writer\n            .format(HOSTNAMEVAL, attrVal.getHostname(),\n                attrVal.getAttributeValue()));\n      });\n      writer.close();\n      sysOut.println(baos.toString(\"UTF-8\"));\n      return 0;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.java"
    }
  }
}