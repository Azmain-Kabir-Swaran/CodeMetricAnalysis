{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RmController.java",
  "functionName": "app",
  "functionId": "app",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
  "functionStartLine": 53,
  "functionEndLine": 55,
  "numCommitsSeen": 27,
  "timeTaken": 7478,
  "changeHistory": [
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "506232da5c762c715dbcfa7d738ccd860ce4f123",
    "d1f805f942def3f7d62cba222e764095cbe0cfd0",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "6b2cbe1198b444852a64746f04bd7fd3a0128030",
    "df2991c0cbc3f35c2640b93680667507c4f810dd",
    "85588e5ce98d3b9adbc97f5e57f84fd96beaaf14",
    "9a4e890f4aadc921fa468fd1292d215704429b61",
    "063e33a862f99ce93b8399924c35d39ccd880f01",
    "5f6adcf396b78934d7da2bba0d052038ff962f26",
    "bbfd81503cfd98aaeb0334ba356076bfdf6bbd9f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "506232da5c762c715dbcfa7d738ccd860ce4f123": "Ybodychange",
    "d1f805f942def3f7d62cba222e764095cbe0cfd0": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "6b2cbe1198b444852a64746f04bd7fd3a0128030": "Ybodychange",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Ybodychange",
    "85588e5ce98d3b9adbc97f5e57f84fd96beaaf14": "Ybodychange",
    "9a4e890f4aadc921fa468fd1292d215704429b61": "Ybodychange",
    "063e33a862f99ce93b8399924c35d39ccd880f01": "Ybodychange",
    "5f6adcf396b78934d7da2bba0d052038ff962f26": "Ybodychange",
    "bbfd81503cfd98aaeb0334ba356076bfdf6bbd9f": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void app() {\n    render(AppPage.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java"
      }
    },
    "506232da5c762c715dbcfa7d738ccd860ce4f123": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4211. Error conditions (missing appid, appid not found) are masked in the RM app page (Jonathan Eagles via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332701 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/05/12 8:34 AM",
      "commitName": "506232da5c762c715dbcfa7d738ccd860ce4f123",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "17/04/12 1:05 PM",
      "commitNameOld": "ca9f62121e829aeb9fc67122a78ba9f673eba074",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 13.81,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,3 @@\n   public void app() {\n-    String aid \u003d $(APPLICATION_ID);\n-    if (aid.isEmpty()) {\n-      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n-      setTitle(\"Bad request: requires application ID\");\n-      return;\n-    }\n-    ApplicationId appID \u003d Apps.toAppID(aid);\n-    RMContext context \u003d getInstance(RMContext.class);\n-    RMApp rmApp \u003d context.getRMApps().get(appID);\n-    if (rmApp \u003d\u003d null) {\n-      // TODO: handle redirect to jobhistory server\n-      setStatus(HttpServletResponse.SC_NOT_FOUND);\n-      setTitle(\"Application not found: \"+ aid);\n-      return;\n-    }\n-    AppInfo app \u003d new AppInfo(rmApp, true);\n-\n-    // Check for the authorization.\n-    String remoteUser \u003d request().getRemoteUser();\n-    UserGroupInformation callerUGI \u003d null;\n-    if (remoteUser !\u003d null) {\n-      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n-    }\n-    if (callerUGI !\u003d null\n-        \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n-            ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n-      setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n-      setTitle(\"Unauthorized request for viewing application \" + appID);\n-      renderText(\"You (User \" + remoteUser\n-          + \") are not authorized to view the logs for application \" + appID);\n-      return;\n-    }\n-\n-    setTitle(join(\"Application \", aid));\n-\n-    ResponseInfo info \u003d info(\"Application Overview\").\n-      _(\"User:\", app.getUser()).\n-      _(\"Name:\", app.getName()).\n-      _(\"State:\", app.getState()).\n-      _(\"FinalStatus:\", app.getFinalStatus()).\n-      _(\"Started:\", Times.format(app.getStartTime())).\n-      _(\"Elapsed:\", StringUtils.formatTime(\n-        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n-      _(\"Tracking URL:\", !app.isTrackingUrlReady() ?\n-        \"#\" : app.getTrackingUrlPretty(), app.getTrackingUI()).\n-      _(\"Diagnostics:\", app.getNote());\n-    if (app.amContainerLogsExist()) {\n-      info._(\"AM container logs:\", app.getAMContainerLogs(), app.getAMContainerLogs());\n-    } else {\n-      info._(\"AM container logs:\", \"\");\n-    }\n     render(AppPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    render(AppPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "d1f805f942def3f7d62cba222e764095cbe0cfd0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3754. Modified RM UI to filter applications based on state of the applications. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1238887 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/12 4:51 PM",
      "commitName": "d1f805f942def3f7d62cba222e764095cbe0cfd0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 49.07,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,54 @@\n   public void app() {\n-    String aid \u003d $(APP_ID);\n+    String aid \u003d $(APPLICATION_ID);\n     if (aid.isEmpty()) {\n       setStatus(HttpServletResponse.SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp rmApp \u003d context.getRMApps().get(appID);\n     if (rmApp \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(HttpServletResponse.SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n     AppInfo app \u003d new AppInfo(rmApp, true);\n \n     // Check for the authorization.\n     String remoteUser \u003d request().getRemoteUser();\n     UserGroupInformation callerUGI \u003d null;\n     if (remoteUser !\u003d null) {\n       callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n     }\n     if (callerUGI !\u003d null\n         \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n             ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n       setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n       setTitle(\"Unauthorized request for viewing application \" + appID);\n       renderText(\"You (User \" + remoteUser\n           + \") are not authorized to view the logs for application \" + appID);\n       return;\n     }\n \n     setTitle(join(\"Application \", aid));\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n       _(\"State:\", app.getState()).\n       _(\"FinalStatus:\", app.getFinalStatus()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", !app.isTrackingUrlReady() ?\n         \"#\" : app.getTrackingUrlPretty(), app.getTrackingUI()).\n       _(\"Diagnostics:\", app.getNote());\n     if (app.amContainerLogsExist()) {\n       info._(\"AM container logs:\", app.getAMContainerLogs(), app.getAMContainerLogs());\n     } else {\n       info._(\"AM container logs:\", \"\");\n     }\n     render(AppPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APPLICATION_ID);\n    if (aid.isEmpty()) {\n      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp rmApp \u003d context.getRMApps().get(appID);\n    if (rmApp \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(HttpServletResponse.SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    AppInfo app \u003d new AppInfo(rmApp, true);\n\n    // Check for the authorization.\n    String remoteUser \u003d request().getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI !\u003d null\n        \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n            ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n      setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n      setTitle(\"Unauthorized request for viewing application \" + appID);\n      renderText(\"You (User \" + remoteUser\n          + \") are not authorized to view the logs for application \" + appID);\n      return;\n    }\n\n    setTitle(join(\"Application \", aid));\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState()).\n      _(\"FinalStatus:\", app.getFinalStatus()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", !app.isTrackingUrlReady() ?\n        \"#\" : app.getTrackingUrlPretty(), app.getTrackingUI()).\n      _(\"Diagnostics:\", app.getNote());\n    if (app.amContainerLogsExist()) {\n      info._(\"AM container logs:\", app.getAMContainerLogs(), app.getAMContainerLogs());\n    } else {\n      info._(\"AM container logs:\", \"\");\n    }\n    render(AppPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "02/12/11 2:51 PM",
      "commitNameOld": "6b2cbe1198b444852a64746f04bd7fd3a0128030",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 11.01,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,54 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(HttpServletResponse.SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n-    RMApp app \u003d context.getRMApps().get(appID);\n-    if (app \u003d\u003d null) {\n+    RMApp rmApp \u003d context.getRMApps().get(appID);\n+    if (rmApp \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(HttpServletResponse.SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n+    AppInfo app \u003d new AppInfo(rmApp, true);\n \n     // Check for the authorization.\n     String remoteUser \u003d request().getRemoteUser();\n     UserGroupInformation callerUGI \u003d null;\n     if (remoteUser !\u003d null) {\n       callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n     }\n     if (callerUGI !\u003d null\n         \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n             ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n       setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n       setTitle(\"Unauthorized request for viewing application \" + appID);\n       renderText(\"You (User \" + remoteUser\n           + \") are not authorized to view the logs for application \" + appID);\n       return;\n     }\n \n     setTitle(join(\"Application \", aid));\n-    String trackingUrl \u003d app.getTrackingUrl();\n-    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null\n-        || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n-    String ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n-        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n-      _(\"State:\", app.getState().toString()).\n-      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n+      _(\"State:\", app.getState()).\n+      _(\"FinalStatus:\", app.getFinalStatus()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n-      _(\"Tracking URL:\", trackingUrlIsNotReady ?\n-        \"#\" : join(\"http://\", trackingUrl), ui).\n-      _(\"Diagnostics:\", app.getDiagnostics());\n-    Container masterContainer \u003d app.getCurrentAppAttempt()\n-        .getMasterContainer();\n-    if (masterContainer !\u003d null) {\n-      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n-          \"/node\", \"/containerlogs/\",\n-          ConverterUtils.toString(masterContainer.getId()));\n-      info._(\"AM container logs:\", url, url);\n+      _(\"Tracking URL:\", !app.isTrackingUrlReady() ?\n+        \"#\" : app.getTrackingUrlPretty(), app.getTrackingUI()).\n+      _(\"Diagnostics:\", app.getNote());\n+    if (app.amContainerLogsExist()) {\n+      info._(\"AM container logs:\", app.getAMContainerLogs(), app.getAMContainerLogs());\n     } else {\n-      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n+      info._(\"AM container logs:\", \"\");\n     }\n     render(AppPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp rmApp \u003d context.getRMApps().get(appID);\n    if (rmApp \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(HttpServletResponse.SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    AppInfo app \u003d new AppInfo(rmApp, true);\n\n    // Check for the authorization.\n    String remoteUser \u003d request().getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI !\u003d null\n        \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n            ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n      setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n      setTitle(\"Unauthorized request for viewing application \" + appID);\n      renderText(\"You (User \" + remoteUser\n          + \") are not authorized to view the logs for application \" + appID);\n      return;\n    }\n\n    setTitle(join(\"Application \", aid));\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState()).\n      _(\"FinalStatus:\", app.getFinalStatus()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", !app.isTrackingUrlReady() ?\n        \"#\" : app.getTrackingUrlPretty(), app.getTrackingUI()).\n      _(\"Diagnostics:\", app.getNote());\n    if (app.amContainerLogsExist()) {\n      info._(\"AM container logs:\", app.getAMContainerLogs(), app.getAMContainerLogs());\n    } else {\n      info._(\"AM container logs:\", \"\");\n    }\n    render(AppPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "6b2cbe1198b444852a64746f04bd7fd3a0128030": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3453. RM web ui application details page shows RM cluster about information. (Contributed by Jonathan Eagles)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1209759 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/11 2:51 PM",
      "commitName": "6b2cbe1198b444852a64746f04bd7fd3a0128030",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "20/10/11 4:45 AM",
      "commitNameOld": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 43.46,
      "commitsBetweenForRepo": 295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,63 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(HttpServletResponse.SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(HttpServletResponse.SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n \n     // Check for the authorization.\n     String remoteUser \u003d request().getRemoteUser();\n     UserGroupInformation callerUGI \u003d null;\n     if (remoteUser !\u003d null) {\n       callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n     }\n     if (callerUGI !\u003d null\n         \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n             ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n       setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n       setTitle(\"Unauthorized request for viewing application \" + appID);\n       renderText(\"You (User \" + remoteUser\n           + \") are not authorized to view the logs for application \" + appID);\n       return;\n     }\n \n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n     boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null\n         || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n     String ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n         (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n       _(\"State:\", app.getState().toString()).\n       _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", trackingUrlIsNotReady ?\n         \"#\" : join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n           \"/node\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n-    render(AboutPage.class);\n+    render(AppPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(HttpServletResponse.SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n\n    // Check for the authorization.\n    String remoteUser \u003d request().getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI !\u003d null\n        \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n            ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n      setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n      setTitle(\"Unauthorized request for viewing application \" + appID);\n      renderText(\"You (User \" + remoteUser\n          + \") are not authorized to view the logs for application \" + appID);\n      return;\n    }\n\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null\n        || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n    String ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState().toString()).\n      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrlIsNotReady ?\n        \"#\" : join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/node\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(AppPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/10/11 11:23 PM",
      "commitNameOld": "85588e5ce98d3b9adbc97f5e57f84fd96beaaf14",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.22,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,63 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(HttpServletResponse.SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(HttpServletResponse.SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n+\n+    // Check for the authorization.\n+    String remoteUser \u003d request().getRemoteUser();\n+    UserGroupInformation callerUGI \u003d null;\n+    if (remoteUser !\u003d null) {\n+      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n+    }\n+    if (callerUGI !\u003d null\n+        \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n+            ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n+      setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n+      setTitle(\"Unauthorized request for viewing application \" + appID);\n+      renderText(\"You (User \" + remoteUser\n+          + \") are not authorized to view the logs for application \" + appID);\n+      return;\n+    }\n+\n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n-    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n-\tString ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n+    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null\n+        || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n+    String ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n         (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n       _(\"State:\", app.getState().toString()).\n       _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", trackingUrlIsNotReady ?\n         \"#\" : join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n           \"/node\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n     render(AboutPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(HttpServletResponse.SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n\n    // Check for the authorization.\n    String remoteUser \u003d request().getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI !\u003d null\n        \u0026\u0026 !this.aclsManager.checkAccess(callerUGI,\n            ApplicationAccessType.VIEW_APP, app.getUser(), appID)) {\n      setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n      setTitle(\"Unauthorized request for viewing application \" + appID);\n      renderText(\"You (User \" + remoteUser\n          + \") are not authorized to view the logs for application \" + appID);\n      return;\n    }\n\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null\n        || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n    String ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState().toString()).\n      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrlIsNotReady ?\n        \"#\" : join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/node\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(AboutPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "85588e5ce98d3b9adbc97f5e57f84fd96beaaf14": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3140. Fixed the invalid JobHistory URL for failed applications. Contributed by Subroto Sanyal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1182216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/11 11:23 PM",
      "commitName": "85588e5ce98d3b9adbc97f5e57f84fd96beaaf14",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "05/10/11 7:01 AM",
      "commitNameOld": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.68,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,45 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(HttpServletResponse.SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(HttpServletResponse.SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n-    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n-        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n+    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n+\tString ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n+        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n       _(\"State:\", app.getState().toString()).\n       _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n-      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n-        join(\"http://\", trackingUrl), ui).\n+      _(\"Tracking URL:\", trackingUrlIsNotReady ?\n+        \"#\" : join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n           \"/node\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n     render(AboutPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(HttpServletResponse.SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    boolean trackingUrlIsNotReady \u003d trackingUrl \u003d\u003d null || trackingUrl.isEmpty() || \"N/A\".equalsIgnoreCase(trackingUrl);\n\tString ui \u003d trackingUrlIsNotReady ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"History\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState().toString()).\n      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrlIsNotReady ?\n        \"#\" : join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/node\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(AboutPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "9a4e890f4aadc921fa468fd1292d215704429b61": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 7:01 AM",
      "commitName": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "30/09/11 5:46 AM",
      "commitNameOld": "063e33a862f99ce93b8399924c35d39ccd880f01",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.05,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n-      setStatus(response().SC_BAD_REQUEST);\n+      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n-      setStatus(response().SC_NOT_FOUND);\n+      setStatus(HttpServletResponse.SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n     String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n         (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n       _(\"State:\", app.getState().toString()).\n       _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n         join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n           \"/node\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n-    render(InfoPage.class);\n+    render(AboutPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(HttpServletResponse.SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState().toString()).\n      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n        join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/node\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(AboutPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "063e33a862f99ce93b8399924c35d39ccd880f01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3098. Fixed RM and MR AM to report YarnApplicationState and application\u0027s FinalStatus separately. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 5:46 AM",
      "commitName": "063e33a862f99ce93b8399924c35d39ccd880f01",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/09/11 6:23 PM",
      "commitNameOld": "5f6adcf396b78934d7da2bba0d052038ff962f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.47,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,44 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(response().SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(response().SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n     String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n         (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n-      _(\"State:\", (app.getState() \u003d\u003d RMAppState.FINISHED ?\n-        app.getAMFinalState() : app.getState().toString())\n-      ).\n+      _(\"State:\", app.getState().toString()).\n+      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n         join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n           \"/node\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n     render(InfoPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(response().SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(response().SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState().toString()).\n      _(\"FinalStatus:\", app.getFinalApplicationStatus().toString()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n        join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/node\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(InfoPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "5f6adcf396b78934d7da2bba0d052038ff962f26": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3021. Change base urls for RM web-ui. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176681 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 6:23 PM",
      "commitName": "5f6adcf396b78934d7da2bba0d052038ff962f26",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "19/09/11 4:56 PM",
      "commitNameOld": "bbfd81503cfd98aaeb0334ba356076bfdf6bbd9f",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(response().SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(response().SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n     String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n         (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n       _(\"State:\", (app.getState() \u003d\u003d RMAppState.FINISHED ?\n         app.getAMFinalState() : app.getState().toString())\n       ).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n         join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n-          \"/yarn\", \"/containerlogs/\",\n+          \"/node\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n     render(InfoPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(response().SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(response().SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", (app.getState() \u003d\u003d RMAppState.FINISHED ?\n        app.getAMFinalState() : app.getState().toString())\n      ).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n        join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/node\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(InfoPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "bbfd81503cfd98aaeb0334ba356076bfdf6bbd9f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3017. The Web UI shows FINISHED for killed/successful/failed jobs. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1172906 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/11 4:56 PM",
      "commitName": "bbfd81503cfd98aaeb0334ba356076bfdf6bbd9f",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 25.99,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,45 @@\n   public void app() {\n     String aid \u003d $(APP_ID);\n     if (aid.isEmpty()) {\n       setStatus(response().SC_BAD_REQUEST);\n       setTitle(\"Bad request: requires application ID\");\n       return;\n     }\n     ApplicationId appID \u003d Apps.toAppID(aid);\n     RMContext context \u003d getInstance(RMContext.class);\n     RMApp app \u003d context.getRMApps().get(appID);\n     if (app \u003d\u003d null) {\n       // TODO: handle redirect to jobhistory server\n       setStatus(response().SC_NOT_FOUND);\n       setTitle(\"Application not found: \"+ aid);\n       return;\n     }\n     setTitle(join(\"Application \", aid));\n     String trackingUrl \u003d app.getTrackingUrl();\n     String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n         (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n \n     ResponseInfo info \u003d info(\"Application Overview\").\n       _(\"User:\", app.getUser()).\n       _(\"Name:\", app.getName()).\n-      _(\"State:\", app.getState()).\n+      _(\"State:\", (app.getState() \u003d\u003d RMAppState.FINISHED ?\n+        app.getAMFinalState() : app.getState().toString())\n+      ).\n       _(\"Started:\", Times.format(app.getStartTime())).\n       _(\"Elapsed:\", StringUtils.formatTime(\n         Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n       _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n         join(\"http://\", trackingUrl), ui).\n       _(\"Diagnostics:\", app.getDiagnostics());\n     Container masterContainer \u003d app.getCurrentAppAttempt()\n         .getMasterContainer();\n     if (masterContainer !\u003d null) {\n       String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n           \"/yarn\", \"/containerlogs/\",\n           ConverterUtils.toString(masterContainer.getId()));\n       info._(\"AM container logs:\", url, url);\n     } else {\n       info._(\"AM container logs:\", \"AM not yet registered with RM\");\n     }\n     render(InfoPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(response().SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(response().SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", (app.getState() \u003d\u003d RMAppState.FINISHED ?\n        app.getAMFinalState() : app.getState().toString())\n      ).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n        join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/yarn\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(InfoPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(response().SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(response().SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n        join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/yarn\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(InfoPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,43 @@\n+  public void app() {\n+    String aid \u003d $(APP_ID);\n+    if (aid.isEmpty()) {\n+      setStatus(response().SC_BAD_REQUEST);\n+      setTitle(\"Bad request: requires application ID\");\n+      return;\n+    }\n+    ApplicationId appID \u003d Apps.toAppID(aid);\n+    RMContext context \u003d getInstance(RMContext.class);\n+    RMApp app \u003d context.getRMApps().get(appID);\n+    if (app \u003d\u003d null) {\n+      // TODO: handle redirect to jobhistory server\n+      setStatus(response().SC_NOT_FOUND);\n+      setTitle(\"Application not found: \"+ aid);\n+      return;\n+    }\n+    setTitle(join(\"Application \", aid));\n+    String trackingUrl \u003d app.getTrackingUrl();\n+    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n+        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n+\n+    ResponseInfo info \u003d info(\"Application Overview\").\n+      _(\"User:\", app.getUser()).\n+      _(\"Name:\", app.getName()).\n+      _(\"State:\", app.getState()).\n+      _(\"Started:\", Times.format(app.getStartTime())).\n+      _(\"Elapsed:\", StringUtils.formatTime(\n+        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n+      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n+        join(\"http://\", trackingUrl), ui).\n+      _(\"Diagnostics:\", app.getDiagnostics());\n+    Container masterContainer \u003d app.getCurrentAppAttempt()\n+        .getMasterContainer();\n+    if (masterContainer !\u003d null) {\n+      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n+          \"/yarn\", \"/containerlogs/\",\n+          ConverterUtils.toString(masterContainer.getId()));\n+      info._(\"AM container logs:\", url, url);\n+    } else {\n+      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n+    }\n+    render(InfoPage.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void app() {\n    String aid \u003d $(APP_ID);\n    if (aid.isEmpty()) {\n      setStatus(response().SC_BAD_REQUEST);\n      setTitle(\"Bad request: requires application ID\");\n      return;\n    }\n    ApplicationId appID \u003d Apps.toAppID(aid);\n    RMContext context \u003d getInstance(RMContext.class);\n    RMApp app \u003d context.getRMApps().get(appID);\n    if (app \u003d\u003d null) {\n      // TODO: handle redirect to jobhistory server\n      setStatus(response().SC_NOT_FOUND);\n      setTitle(\"Application not found: \"+ aid);\n      return;\n    }\n    setTitle(join(\"Application \", aid));\n    String trackingUrl \u003d app.getTrackingUrl();\n    String ui \u003d trackingUrl \u003d\u003d null ? \"UNASSIGNED\" :\n        (app.getFinishTime() \u003d\u003d 0 ? \"ApplicationMaster\" : \"JobHistory\");\n\n    ResponseInfo info \u003d info(\"Application Overview\").\n      _(\"User:\", app.getUser()).\n      _(\"Name:\", app.getName()).\n      _(\"State:\", app.getState()).\n      _(\"Started:\", Times.format(app.getStartTime())).\n      _(\"Elapsed:\", StringUtils.formatTime(\n        Times.elapsed(app.getStartTime(), app.getFinishTime()))).\n      _(\"Tracking URL:\", trackingUrl \u003d\u003d null ? \"#\" :\n        join(\"http://\", trackingUrl), ui).\n      _(\"Diagnostics:\", app.getDiagnostics());\n    Container masterContainer \u003d app.getCurrentAppAttempt()\n        .getMasterContainer();\n    if (masterContainer !\u003d null) {\n      String url \u003d join(\"http://\", masterContainer.getNodeHttpAddress(),\n          \"/yarn\", \"/containerlogs/\",\n          ConverterUtils.toString(masterContainer.getId()));\n      info._(\"AM container logs:\", url, url);\n    } else {\n      info._(\"AM container logs:\", \"AM not yet registered with RM\");\n    }\n    render(InfoPage.class);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java"
    }
  }
}