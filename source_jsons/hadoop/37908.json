{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupMappingPlacementRule.java",
  "functionName": "validateQueueMapping",
  "functionId": "validateQueueMapping___queueMapping-QueueMapping",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
  "functionStartLine": 438,
  "functionEndLine": 467,
  "numCommitsSeen": 24,
  "timeTaken": 1670,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "cf68857631fe12d3e3cabb53ab3029beab9457b7"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "cf68857631fe12d3e3cabb53ab3029beab9457b7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "23/03/20 5:31 AM",
      "commitNameOld": "d312991ead37a5f840577a39420a18f0621b09dc",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,30 @@\n   private void validateQueueMapping(QueueMapping queueMapping)\n       throws IOException {\n     String parentQueueName \u003d queueMapping.getParentQueue();\n-    String leafQueueName \u003d queueMapping.getQueue();\n-    CSQueue parentQueue \u003d queueManager.getQueue(parentQueueName);\n-    CSQueue leafQueue \u003d queueManager.getQueue(leafQueueName);\n+    String leafQueueFullName \u003d queueMapping.getFullPath();\n+    CSQueue parentQueue \u003d queueManager.getQueueByFullName(parentQueueName);\n+    CSQueue leafQueue \u003d queueManager.getQueue(leafQueueFullName);\n \n     if (leafQueue \u003d\u003d null || (!(leafQueue instanceof LeafQueue))) {\n-      throw new IOException(\"mapping contains invalid or non-leaf queue : \"\n-          + leafQueueName);\n+      //this might be confusing, but a mapping is not guaranteed to provide the\n+      //parent queue\u0027s name, which can result in ambiguous queue references\n+      //if no parent queueName is provided mapping.getFullPath() is the same\n+      //as mapping.getQueue()\n+      if (leafQueue \u003d\u003d null \u0026\u0026 queueManager.isAmbiguous(leafQueueFullName)) {\n+        throw new IOException(\"mapping contains ambiguous leaf queue name: \"\n+          + leafQueueFullName);\n+      } else {\n+        throw new IOException(\"mapping contains invalid or non-leaf queue : \"\n+          + leafQueueFullName);\n+      }\n     } else if (parentQueue \u003d\u003d null || (!(parentQueue instanceof ParentQueue))) {\n       throw new IOException(\n           \"mapping contains invalid parent queue [\" + parentQueueName + \"]\");\n-    } else if (!parentQueue.getQueueName()\n-        .equals(leafQueue.getParent().getQueueName())) {\n+    } else if (!parentQueue.getQueuePath()\n+        .equals(leafQueue.getParent().getQueuePath())) {\n       throw new IOException(\"mapping contains invalid parent queue \"\n           + \"which does not match existing leaf queue\u0027s parent : [\"\n-          + parentQueue.getQueueName() + \"] does not match [ \"\n-          + leafQueue.getParent().getQueueName() + \"]\");\n+          + parentQueue.getQueuePath() + \"] does not match [ \"\n+          + leafQueue.getParent().getQueuePath() + \"]\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateQueueMapping(QueueMapping queueMapping)\n      throws IOException {\n    String parentQueueName \u003d queueMapping.getParentQueue();\n    String leafQueueFullName \u003d queueMapping.getFullPath();\n    CSQueue parentQueue \u003d queueManager.getQueueByFullName(parentQueueName);\n    CSQueue leafQueue \u003d queueManager.getQueue(leafQueueFullName);\n\n    if (leafQueue \u003d\u003d null || (!(leafQueue instanceof LeafQueue))) {\n      //this might be confusing, but a mapping is not guaranteed to provide the\n      //parent queue\u0027s name, which can result in ambiguous queue references\n      //if no parent queueName is provided mapping.getFullPath() is the same\n      //as mapping.getQueue()\n      if (leafQueue \u003d\u003d null \u0026\u0026 queueManager.isAmbiguous(leafQueueFullName)) {\n        throw new IOException(\"mapping contains ambiguous leaf queue name: \"\n          + leafQueueFullName);\n      } else {\n        throw new IOException(\"mapping contains invalid or non-leaf queue : \"\n          + leafQueueFullName);\n      }\n    } else if (parentQueue \u003d\u003d null || (!(parentQueue instanceof ParentQueue))) {\n      throw new IOException(\n          \"mapping contains invalid parent queue [\" + parentQueueName + \"]\");\n    } else if (!parentQueue.getQueuePath()\n        .equals(leafQueue.getParent().getQueuePath())) {\n      throw new IOException(\"mapping contains invalid parent queue \"\n          + \"which does not match existing leaf queue\u0027s parent : [\"\n          + parentQueue.getQueuePath() + \"] does not match [ \"\n          + leafQueue.getParent().getQueuePath() + \"]\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "cf68857631fe12d3e3cabb53ab3029beab9457b7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9938. Validate Parent Queue for QueueMapping contains dynamic group as parent queue. Contributed by Manikandan R\n",
      "commitDate": "05/12/19 12:04 PM",
      "commitName": "cf68857631fe12d3e3cabb53ab3029beab9457b7",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,21 @@\n+  private void validateQueueMapping(QueueMapping queueMapping)\n+      throws IOException {\n+    String parentQueueName \u003d queueMapping.getParentQueue();\n+    String leafQueueName \u003d queueMapping.getQueue();\n+    CSQueue parentQueue \u003d queueManager.getQueue(parentQueueName);\n+    CSQueue leafQueue \u003d queueManager.getQueue(leafQueueName);\n+\n+    if (leafQueue \u003d\u003d null || (!(leafQueue instanceof LeafQueue))) {\n+      throw new IOException(\"mapping contains invalid or non-leaf queue : \"\n+          + leafQueueName);\n+    } else if (parentQueue \u003d\u003d null || (!(parentQueue instanceof ParentQueue))) {\n+      throw new IOException(\n+          \"mapping contains invalid parent queue [\" + parentQueueName + \"]\");\n+    } else if (!parentQueue.getQueueName()\n+        .equals(leafQueue.getParent().getQueueName())) {\n+      throw new IOException(\"mapping contains invalid parent queue \"\n+          + \"which does not match existing leaf queue\u0027s parent : [\"\n+          + parentQueue.getQueueName() + \"] does not match [ \"\n+          + leafQueue.getParent().getQueueName() + \"]\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateQueueMapping(QueueMapping queueMapping)\n      throws IOException {\n    String parentQueueName \u003d queueMapping.getParentQueue();\n    String leafQueueName \u003d queueMapping.getQueue();\n    CSQueue parentQueue \u003d queueManager.getQueue(parentQueueName);\n    CSQueue leafQueue \u003d queueManager.getQueue(leafQueueName);\n\n    if (leafQueue \u003d\u003d null || (!(leafQueue instanceof LeafQueue))) {\n      throw new IOException(\"mapping contains invalid or non-leaf queue : \"\n          + leafQueueName);\n    } else if (parentQueue \u003d\u003d null || (!(parentQueue instanceof ParentQueue))) {\n      throw new IOException(\n          \"mapping contains invalid parent queue [\" + parentQueueName + \"]\");\n    } else if (!parentQueue.getQueueName()\n        .equals(leafQueue.getParent().getQueueName())) {\n      throw new IOException(\"mapping contains invalid parent queue \"\n          + \"which does not match existing leaf queue\u0027s parent : [\"\n          + parentQueue.getQueueName() + \"] does not match [ \"\n          + leafQueue.getParent().getQueueName() + \"]\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java"
    }
  }
}