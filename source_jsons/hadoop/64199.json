{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EncryptionSecretOperations.java",
  "functionName": "createSSEAwsKeyManagementParams",
  "functionId": "createSSEAwsKeyManagementParams___secrets-EncryptionSecrets(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/EncryptionSecretOperations.java",
  "functionStartLine": 58,
  "functionEndLine": 72,
  "numCommitsSeen": 3,
  "timeTaken": 1446,
  "changeHistory": [
    "6d0bffe17eadedd60d4599427248b0db4a7c5502"
  ],
  "changeHistoryShort": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,15 @@\n+  public static Optional\u003cSSEAwsKeyManagementParams\u003e createSSEAwsKeyManagementParams(\n+      final EncryptionSecrets secrets) {\n+\n+    //Use specified key, otherwise default to default master aws/s3 key by AWS\n+    if (secrets.getEncryptionMethod() \u003d\u003d S3AEncryptionMethods.SSE_KMS) {\n+      if (secrets.hasEncryptionKey()) {\n+        return Optional.of(new SSEAwsKeyManagementParams(\n+            secrets.getEncryptionKey()));\n+      } else {\n+        return Optional.of(new SSEAwsKeyManagementParams());\n+      }\n+    } else {\n+      return Optional.empty();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Optional\u003cSSEAwsKeyManagementParams\u003e createSSEAwsKeyManagementParams(\n      final EncryptionSecrets secrets) {\n\n    //Use specified key, otherwise default to default master aws/s3 key by AWS\n    if (secrets.getEncryptionMethod() \u003d\u003d S3AEncryptionMethods.SSE_KMS) {\n      if (secrets.hasEncryptionKey()) {\n        return Optional.of(new SSEAwsKeyManagementParams(\n            secrets.getEncryptionKey()));\n      } else {\n        return Optional.of(new SSEAwsKeyManagementParams());\n      }\n    } else {\n      return Optional.empty();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/EncryptionSecretOperations.java"
    }
  }
}