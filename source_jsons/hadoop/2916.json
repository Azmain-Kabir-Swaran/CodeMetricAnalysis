{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockTokenIdentifier.java",
  "functionName": "readFieldsProtobuf",
  "functionId": "readFieldsProtobuf___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.java",
  "functionStartLine": 282,
  "functionEndLine": 316,
  "numCommitsSeen": 8,
  "timeTaken": 2465,
  "changeHistory": [
    "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1",
    "a3954ccab148bddc290cb96528e63ff19799bcc9",
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
    "4ed33e9ca3d85568e3904753a3ef61a85f801838"
  ],
  "changeHistoryShort": {
    "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1": "Ybodychange",
    "a3954ccab148bddc290cb96528e63ff19799bcc9": "Ybodychange",
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37": "Ybodychange",
    "4ed33e9ca3d85568e3904753a3ef61a85f801838": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14611. Move handshake secret field from Token to BlockAccessToken. Contributed by Chen Liang.\n",
      "commitDate": "11/07/19 1:23 PM",
      "commitName": "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "01/10/18 5:49 PM",
      "commitNameOld": "f6c5ef9903dba5eb268997110ef169125327c2c8",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 282.82,
      "commitsBetweenForRepo": 2103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n   void readFieldsProtobuf(DataInput in) throws IOException {\n     BlockTokenSecretProto blockTokenSecretProto \u003d\n         BlockTokenSecretProto.parseFrom((DataInputStream)in);\n     expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n     keyId \u003d blockTokenSecretProto.getKeyId();\n     if (blockTokenSecretProto.hasUserId()) {\n       userId \u003d blockTokenSecretProto.getUserId();\n     } else {\n       userId \u003d null;\n     }\n     if (blockTokenSecretProto.hasBlockPoolId()) {\n       blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n     } else {\n       blockPoolId \u003d null;\n     }\n     blockId \u003d blockTokenSecretProto.getBlockId();\n     for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n       AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n       modes.add(PBHelperClient.convert(accessModeProto));\n     }\n \n     storageTypes \u003d blockTokenSecretProto.getStorageTypesList().stream()\n         .map(PBHelperClient::convertStorageType)\n         .toArray(StorageType[]::new);\n     storageIds \u003d blockTokenSecretProto.getStorageIdsList().stream()\n         .toArray(String[]::new);\n     useProto \u003d true;\n+\n+    if(blockTokenSecretProto.hasHandshakeSecret()) {\n+      handshakeMsg \u003d blockTokenSecretProto\n+          .getHandshakeSecret().toByteArray();\n+    } else {\n+      handshakeMsg \u003d new byte[0];\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void readFieldsProtobuf(DataInput in) throws IOException {\n    BlockTokenSecretProto blockTokenSecretProto \u003d\n        BlockTokenSecretProto.parseFrom((DataInputStream)in);\n    expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n    keyId \u003d blockTokenSecretProto.getKeyId();\n    if (blockTokenSecretProto.hasUserId()) {\n      userId \u003d blockTokenSecretProto.getUserId();\n    } else {\n      userId \u003d null;\n    }\n    if (blockTokenSecretProto.hasBlockPoolId()) {\n      blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n    } else {\n      blockPoolId \u003d null;\n    }\n    blockId \u003d blockTokenSecretProto.getBlockId();\n    for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n      AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n      modes.add(PBHelperClient.convert(accessModeProto));\n    }\n\n    storageTypes \u003d blockTokenSecretProto.getStorageTypesList().stream()\n        .map(PBHelperClient::convertStorageType)\n        .toArray(StorageType[]::new);\n    storageIds \u003d blockTokenSecretProto.getStorageIdsList().stream()\n        .toArray(String[]::new);\n    useProto \u003d true;\n\n    if(blockTokenSecretProto.hasHandshakeSecret()) {\n      handshakeMsg \u003d blockTokenSecretProto\n          .getHandshakeSecret().toByteArray();\n    } else {\n      handshakeMsg \u003d new byte[0];\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.java",
      "extendedDetails": {}
    },
    "a3954ccab148bddc290cb96528e63ff19799bcc9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9807. Add an optional StorageID to writes. Contributed by Ewan Higgs\n",
      "commitDate": "05/05/17 12:01 PM",
      "commitName": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "25/04/17 11:57 PM",
      "commitNameOld": "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 9.5,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   void readFieldsProtobuf(DataInput in) throws IOException {\n     BlockTokenSecretProto blockTokenSecretProto \u003d\n         BlockTokenSecretProto.parseFrom((DataInputStream)in);\n     expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n     keyId \u003d blockTokenSecretProto.getKeyId();\n     if (blockTokenSecretProto.hasUserId()) {\n       userId \u003d blockTokenSecretProto.getUserId();\n     } else {\n       userId \u003d null;\n     }\n     if (blockTokenSecretProto.hasBlockPoolId()) {\n       blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n     } else {\n       blockPoolId \u003d null;\n     }\n     blockId \u003d blockTokenSecretProto.getBlockId();\n     for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n       AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n       modes.add(PBHelperClient.convert(accessModeProto));\n     }\n \n     storageTypes \u003d blockTokenSecretProto.getStorageTypesList().stream()\n         .map(PBHelperClient::convertStorageType)\n         .toArray(StorageType[]::new);\n+    storageIds \u003d blockTokenSecretProto.getStorageIdsList().stream()\n+        .toArray(String[]::new);\n     useProto \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void readFieldsProtobuf(DataInput in) throws IOException {\n    BlockTokenSecretProto blockTokenSecretProto \u003d\n        BlockTokenSecretProto.parseFrom((DataInputStream)in);\n    expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n    keyId \u003d blockTokenSecretProto.getKeyId();\n    if (blockTokenSecretProto.hasUserId()) {\n      userId \u003d blockTokenSecretProto.getUserId();\n    } else {\n      userId \u003d null;\n    }\n    if (blockTokenSecretProto.hasBlockPoolId()) {\n      blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n    } else {\n      blockPoolId \u003d null;\n    }\n    blockId \u003d blockTokenSecretProto.getBlockId();\n    for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n      AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n      modes.add(PBHelperClient.convert(accessModeProto));\n    }\n\n    storageTypes \u003d blockTokenSecretProto.getStorageTypesList().stream()\n        .map(PBHelperClient::convertStorageType)\n        .toArray(StorageType[]::new);\n    storageIds \u003d blockTokenSecretProto.getStorageIdsList().stream()\n        .toArray(String[]::new);\n    useProto \u003d true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.java",
      "extendedDetails": {}
    },
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6708. StorageType should be encoded in the block token. Contributed by Ewan Higgs\n",
      "commitDate": "25/04/17 11:57 PM",
      "commitName": "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "13/02/17 11:29 AM",
      "commitNameOld": "4ed33e9ca3d85568e3904753a3ef61a85f801838",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 71.48,
      "commitsBetweenForRepo": 422,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n   void readFieldsProtobuf(DataInput in) throws IOException {\n     BlockTokenSecretProto blockTokenSecretProto \u003d\n         BlockTokenSecretProto.parseFrom((DataInputStream)in);\n     expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n     keyId \u003d blockTokenSecretProto.getKeyId();\n     if (blockTokenSecretProto.hasUserId()) {\n       userId \u003d blockTokenSecretProto.getUserId();\n     } else {\n       userId \u003d null;\n     }\n     if (blockTokenSecretProto.hasBlockPoolId()) {\n       blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n     } else {\n       blockPoolId \u003d null;\n     }\n     blockId \u003d blockTokenSecretProto.getBlockId();\n     for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n       AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n       modes.add(PBHelperClient.convert(accessModeProto));\n     }\n+\n+    storageTypes \u003d blockTokenSecretProto.getStorageTypesList().stream()\n+        .map(PBHelperClient::convertStorageType)\n+        .toArray(StorageType[]::new);\n     useProto \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void readFieldsProtobuf(DataInput in) throws IOException {\n    BlockTokenSecretProto blockTokenSecretProto \u003d\n        BlockTokenSecretProto.parseFrom((DataInputStream)in);\n    expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n    keyId \u003d blockTokenSecretProto.getKeyId();\n    if (blockTokenSecretProto.hasUserId()) {\n      userId \u003d blockTokenSecretProto.getUserId();\n    } else {\n      userId \u003d null;\n    }\n    if (blockTokenSecretProto.hasBlockPoolId()) {\n      blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n    } else {\n      blockPoolId \u003d null;\n    }\n    blockId \u003d blockTokenSecretProto.getBlockId();\n    for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n      AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n      modes.add(PBHelperClient.convert(accessModeProto));\n    }\n\n    storageTypes \u003d blockTokenSecretProto.getStorageTypesList().stream()\n        .map(PBHelperClient::convertStorageType)\n        .toArray(StorageType[]::new);\n    useProto \u003d true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.java",
      "extendedDetails": {}
    },
    "4ed33e9ca3d85568e3904753a3ef61a85f801838": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11026. Convert BlockTokenIdentifier to use Protobuf. Contributed by Ewan Higgs.\n",
      "commitDate": "13/02/17 11:29 AM",
      "commitName": "4ed33e9ca3d85568e3904753a3ef61a85f801838",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,22 @@\n+  void readFieldsProtobuf(DataInput in) throws IOException {\n+    BlockTokenSecretProto blockTokenSecretProto \u003d\n+        BlockTokenSecretProto.parseFrom((DataInputStream)in);\n+    expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n+    keyId \u003d blockTokenSecretProto.getKeyId();\n+    if (blockTokenSecretProto.hasUserId()) {\n+      userId \u003d blockTokenSecretProto.getUserId();\n+    } else {\n+      userId \u003d null;\n+    }\n+    if (blockTokenSecretProto.hasBlockPoolId()) {\n+      blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n+    } else {\n+      blockPoolId \u003d null;\n+    }\n+    blockId \u003d blockTokenSecretProto.getBlockId();\n+    for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n+      AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n+      modes.add(PBHelperClient.convert(accessModeProto));\n+    }\n+    useProto \u003d true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void readFieldsProtobuf(DataInput in) throws IOException {\n    BlockTokenSecretProto blockTokenSecretProto \u003d\n        BlockTokenSecretProto.parseFrom((DataInputStream)in);\n    expiryDate \u003d blockTokenSecretProto.getExpiryDate();\n    keyId \u003d blockTokenSecretProto.getKeyId();\n    if (blockTokenSecretProto.hasUserId()) {\n      userId \u003d blockTokenSecretProto.getUserId();\n    } else {\n      userId \u003d null;\n    }\n    if (blockTokenSecretProto.hasBlockPoolId()) {\n      blockPoolId \u003d blockTokenSecretProto.getBlockPoolId();\n    } else {\n      blockPoolId \u003d null;\n    }\n    blockId \u003d blockTokenSecretProto.getBlockId();\n    for (int i \u003d 0; i \u003c blockTokenSecretProto.getModesCount(); i++) {\n      AccessModeProto accessModeProto \u003d blockTokenSecretProto.getModes(i);\n      modes.add(PBHelperClient.convert(accessModeProto));\n    }\n    useProto \u003d true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier.java"
    }
  }
}