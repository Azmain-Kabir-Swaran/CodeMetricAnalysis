{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServiceClient.java",
  "functionName": "processResponse",
  "functionId": "processResponse___response-ClientResponse",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
  "functionStartLine": 273,
  "functionEndLine": 300,
  "numCommitsSeen": 28,
  "timeTaken": 2324,
  "changeHistory": [
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "f9a4d4cf237d64ccb52ab1792372c89e9d36f41d",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d"
  ],
  "changeHistoryShort": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "f9a4d4cf237d64ccb52ab1792372c89e9d36f41d": "Ybodychange",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int processResponse(ClientResponse response) {\n    response.bufferEntity();\n    String output;\n    if (response.getStatus() \u003d\u003d 401) {\n      LOG.error(\"Authentication required\");\n      return EXIT_EXCEPTION_THROWN;\n    }\n    if (response.getStatus() \u003d\u003d 503) {\n      LOG.error(\"YARN Service is unavailable or disabled.\");\n      return EXIT_EXCEPTION_THROWN;\n    }\n    try {\n      ServiceStatus ss \u003d response.getEntity(ServiceStatus.class);\n      output \u003d ss.getDiagnostics();\n    } catch (Throwable t) {\n      output \u003d response.getEntity(String.class);\n    }\n    if (output\u003d\u003dnull) {\n      output \u003d response.getEntity(String.class);\n    }\n    if (response.getStatus() \u003c\u003d 299) {\n      LOG.info(output);\n      return EXIT_SUCCESS;\n    } else {\n      LOG.error(output);\n      return EXIT_EXCEPTION_THROWN;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
      }
    },
    "f9a4d4cf237d64ccb52ab1792372c89e9d36f41d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7868. Provide improved error message when YARN service is disabled. Contributed by Eric Yang\n",
      "commitDate": "02/02/18 11:10 AM",
      "commitName": "f9a4d4cf237d64ccb52ab1792372c89e9d36f41d",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/01/18 5:54 PM",
      "commitNameOld": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 9.72,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   private int processResponse(ClientResponse response) {\n     response.bufferEntity();\n     String output;\n     if (response.getStatus() \u003d\u003d 401) {\n       LOG.error(\"Authentication required\");\n       return EXIT_EXCEPTION_THROWN;\n     }\n+    if (response.getStatus() \u003d\u003d 503) {\n+      LOG.error(\"YARN Service is unavailable or disabled.\");\n+      return EXIT_EXCEPTION_THROWN;\n+    }\n     try {\n       ServiceStatus ss \u003d response.getEntity(ServiceStatus.class);\n       output \u003d ss.getDiagnostics();\n     } catch (Throwable t) {\n       output \u003d response.getEntity(String.class);\n     }\n     if (output\u003d\u003dnull) {\n       output \u003d response.getEntity(String.class);\n     }\n     if (response.getStatus() \u003c\u003d 299) {\n       LOG.info(output);\n       return EXIT_SUCCESS;\n     } else {\n       LOG.error(output);\n       return EXIT_EXCEPTION_THROWN;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int processResponse(ClientResponse response) {\n    response.bufferEntity();\n    String output;\n    if (response.getStatus() \u003d\u003d 401) {\n      LOG.error(\"Authentication required\");\n      return EXIT_EXCEPTION_THROWN;\n    }\n    if (response.getStatus() \u003d\u003d 503) {\n      LOG.error(\"YARN Service is unavailable or disabled.\");\n      return EXIT_EXCEPTION_THROWN;\n    }\n    try {\n      ServiceStatus ss \u003d response.getEntity(ServiceStatus.class);\n      output \u003d ss.getDiagnostics();\n    } catch (Throwable t) {\n      output \u003d response.getEntity(String.class);\n    }\n    if (output\u003d\u003dnull) {\n      output \u003d response.getEntity(String.class);\n    }\n    if (response.getStatus() \u003c\u003d 299) {\n      LOG.info(output);\n      return EXIT_SUCCESS;\n    } else {\n      LOG.error(output);\n      return EXIT_EXCEPTION_THROWN;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
      "extendedDetails": {}
    },
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
      "commitDate": "23/01/18 5:54 PM",
      "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,24 @@\n+  private int processResponse(ClientResponse response) {\n+    response.bufferEntity();\n+    String output;\n+    if (response.getStatus() \u003d\u003d 401) {\n+      LOG.error(\"Authentication required\");\n+      return EXIT_EXCEPTION_THROWN;\n+    }\n+    try {\n+      ServiceStatus ss \u003d response.getEntity(ServiceStatus.class);\n+      output \u003d ss.getDiagnostics();\n+    } catch (Throwable t) {\n+      output \u003d response.getEntity(String.class);\n+    }\n+    if (output\u003d\u003dnull) {\n+      output \u003d response.getEntity(String.class);\n+    }\n+    if (response.getStatus() \u003c\u003d 299) {\n+      LOG.info(output);\n+      return EXIT_SUCCESS;\n+    } else {\n+      LOG.error(output);\n+      return EXIT_EXCEPTION_THROWN;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int processResponse(ClientResponse response) {\n    response.bufferEntity();\n    String output;\n    if (response.getStatus() \u003d\u003d 401) {\n      LOG.error(\"Authentication required\");\n      return EXIT_EXCEPTION_THROWN;\n    }\n    try {\n      ServiceStatus ss \u003d response.getEntity(ServiceStatus.class);\n      output \u003d ss.getDiagnostics();\n    } catch (Throwable t) {\n      output \u003d response.getEntity(String.class);\n    }\n    if (output\u003d\u003dnull) {\n      output \u003d response.getEntity(String.class);\n    }\n    if (response.getStatus() \u003c\u003d 299) {\n      LOG.info(output);\n      return EXIT_SUCCESS;\n    } else {\n      LOG.error(output);\n      return EXIT_EXCEPTION_THROWN;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
    }
  }
}