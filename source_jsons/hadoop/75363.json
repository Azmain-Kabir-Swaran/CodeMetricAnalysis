{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SshFenceByTcpPort.java",
  "functionName": "doFence",
  "functionId": "doFence___session-Session__serviceAddr-InetSocketAddress",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
  "functionStartLine": 130,
  "functionEndLine": 171,
  "numCommitsSeen": 21,
  "timeTaken": 931,
  "changeHistory": [
    "8fd473cf4c04f4a28a2e7f76951ab0db5d206542",
    "5c156519dfc1be193a9b7fc2aa450ed1f774b60f",
    "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9"
  ],
  "changeHistoryShort": {
    "8fd473cf4c04f4a28a2e7f76951ab0db5d206542": "Ymultichange(Yparameterchange,Ybodychange)",
    "5c156519dfc1be193a9b7fc2aa450ed1f774b60f": "Ybodychange",
    "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)"
  },
  "changeHistoryDetails": {
    "8fd473cf4c04f4a28a2e7f76951ab0db5d206542": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8191. SshFenceByTcpPort uses netcat incorrectly. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/12 2:01 PM",
      "commitName": "8fd473cf4c04f4a28a2e7f76951ab0db5d206542",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8191. SshFenceByTcpPort uses netcat incorrectly. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303148 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/12 2:01 PM",
          "commitName": "8fd473cf4c04f4a28a2e7f76951ab0db5d206542",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "01/03/12 5:32 PM",
          "commitNameOld": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 18.81,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,42 @@\n-  private boolean doFence(Session session, int port) throws JSchException {\n+  private boolean doFence(Session session, InetSocketAddress serviceAddr)\n+      throws JSchException {\n+    int port \u003d serviceAddr.getPort();\n     try {\n       LOG.info(\"Looking for process running on port \" + port);\n       int rc \u003d execCommand(session,\n           \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n       if (rc \u003d\u003d 0) {\n         LOG.info(\"Successfully killed process that was \" +\n             \"listening on port \" + port);\n         // exit code 0 indicates the process was successfully killed.\n         return true;\n       } else if (rc \u003d\u003d 1) {\n         // exit code 1 indicates either that the process was not running\n         // or that fuser didn\u0027t have root privileges in order to find it\n         // (eg running as a different user)\n         LOG.info(\n             \"Indeterminate response from trying to kill service. \" +\n             \"Verifying whether it is running using nc...\");\n-        rc \u003d execCommand(session, \"nc -z localhost 8020\");\n+        rc \u003d execCommand(session, \"nc -z \" + serviceAddr.getHostName() +\n+            \" \" + serviceAddr.getPort());\n         if (rc \u003d\u003d 0) {\n           // the service is still listening - we are unable to fence\n           LOG.warn(\"Unable to fence - it is running but we cannot kill it\");\n           return false;\n         } else {\n           LOG.info(\"Verified that the service is down.\");\n           return true;          \n         }\n       } else {\n         // other \n       }\n       LOG.info(\"rc: \" + rc);\n       return rc \u003d\u003d 0;\n     } catch (InterruptedException e) {\n       LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n       return false;\n     } catch (IOException e) {\n       LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean doFence(Session session, InetSocketAddress serviceAddr)\n      throws JSchException {\n    int port \u003d serviceAddr.getPort();\n    try {\n      LOG.info(\"Looking for process running on port \" + port);\n      int rc \u003d execCommand(session,\n          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n      if (rc \u003d\u003d 0) {\n        LOG.info(\"Successfully killed process that was \" +\n            \"listening on port \" + port);\n        // exit code 0 indicates the process was successfully killed.\n        return true;\n      } else if (rc \u003d\u003d 1) {\n        // exit code 1 indicates either that the process was not running\n        // or that fuser didn\u0027t have root privileges in order to find it\n        // (eg running as a different user)\n        LOG.info(\n            \"Indeterminate response from trying to kill service. \" +\n            \"Verifying whether it is running using nc...\");\n        rc \u003d execCommand(session, \"nc -z \" + serviceAddr.getHostName() +\n            \" \" + serviceAddr.getPort());\n        if (rc \u003d\u003d 0) {\n          // the service is still listening - we are unable to fence\n          LOG.warn(\"Unable to fence - it is running but we cannot kill it\");\n          return false;\n        } else {\n          LOG.info(\"Verified that the service is down.\");\n          return true;          \n        }\n      } else {\n        // other \n      }\n      LOG.info(\"rc: \" + rc);\n      return rc \u003d\u003d 0;\n    } catch (InterruptedException e) {\n      LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n      return false;\n    } catch (IOException e) {\n      LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
          "extendedDetails": {
            "oldValue": "[session-Session, port-int]",
            "newValue": "[session-Session, serviceAddr-InetSocketAddress]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8191. SshFenceByTcpPort uses netcat incorrectly. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303148 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/12 2:01 PM",
          "commitName": "8fd473cf4c04f4a28a2e7f76951ab0db5d206542",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "01/03/12 5:32 PM",
          "commitNameOld": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 18.81,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,42 @@\n-  private boolean doFence(Session session, int port) throws JSchException {\n+  private boolean doFence(Session session, InetSocketAddress serviceAddr)\n+      throws JSchException {\n+    int port \u003d serviceAddr.getPort();\n     try {\n       LOG.info(\"Looking for process running on port \" + port);\n       int rc \u003d execCommand(session,\n           \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n       if (rc \u003d\u003d 0) {\n         LOG.info(\"Successfully killed process that was \" +\n             \"listening on port \" + port);\n         // exit code 0 indicates the process was successfully killed.\n         return true;\n       } else if (rc \u003d\u003d 1) {\n         // exit code 1 indicates either that the process was not running\n         // or that fuser didn\u0027t have root privileges in order to find it\n         // (eg running as a different user)\n         LOG.info(\n             \"Indeterminate response from trying to kill service. \" +\n             \"Verifying whether it is running using nc...\");\n-        rc \u003d execCommand(session, \"nc -z localhost 8020\");\n+        rc \u003d execCommand(session, \"nc -z \" + serviceAddr.getHostName() +\n+            \" \" + serviceAddr.getPort());\n         if (rc \u003d\u003d 0) {\n           // the service is still listening - we are unable to fence\n           LOG.warn(\"Unable to fence - it is running but we cannot kill it\");\n           return false;\n         } else {\n           LOG.info(\"Verified that the service is down.\");\n           return true;          \n         }\n       } else {\n         // other \n       }\n       LOG.info(\"rc: \" + rc);\n       return rc \u003d\u003d 0;\n     } catch (InterruptedException e) {\n       LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n       return false;\n     } catch (IOException e) {\n       LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean doFence(Session session, InetSocketAddress serviceAddr)\n      throws JSchException {\n    int port \u003d serviceAddr.getPort();\n    try {\n      LOG.info(\"Looking for process running on port \" + port);\n      int rc \u003d execCommand(session,\n          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n      if (rc \u003d\u003d 0) {\n        LOG.info(\"Successfully killed process that was \" +\n            \"listening on port \" + port);\n        // exit code 0 indicates the process was successfully killed.\n        return true;\n      } else if (rc \u003d\u003d 1) {\n        // exit code 1 indicates either that the process was not running\n        // or that fuser didn\u0027t have root privileges in order to find it\n        // (eg running as a different user)\n        LOG.info(\n            \"Indeterminate response from trying to kill service. \" +\n            \"Verifying whether it is running using nc...\");\n        rc \u003d execCommand(session, \"nc -z \" + serviceAddr.getHostName() +\n            \" \" + serviceAddr.getPort());\n        if (rc \u003d\u003d 0) {\n          // the service is still listening - we are unable to fence\n          LOG.warn(\"Unable to fence - it is running but we cannot kill it\");\n          return false;\n        } else {\n          LOG.info(\"Verified that the service is down.\");\n          return true;          \n        }\n      } else {\n        // other \n      }\n      LOG.info(\"rc: \" + rc);\n      return rc \u003d\u003d 0;\n    } catch (InterruptedException e) {\n      LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n      return false;\n    } catch (IOException e) {\n      LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
          "extendedDetails": {}
        }
      ]
    },
    "5c156519dfc1be193a9b7fc2aa450ed1f774b60f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7983. HA: failover should be able to pass args to fencers. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238049 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/12 2:27 PM",
      "commitName": "5c156519dfc1be193a9b7fc2aa450ed1f774b60f",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "06/01/12 7:29 PM",
      "commitNameOld": "fcf1039cdc8bb7253935ef7361a0dfc026155f8f",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 23.79,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   private boolean doFence(Session session, int port) throws JSchException {\n     try {\n       LOG.info(\"Looking for process running on port \" + port);\n       int rc \u003d execCommand(session,\n           \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n       if (rc \u003d\u003d 0) {\n         LOG.info(\"Successfully killed process that was \" +\n             \"listening on port \" + port);\n         // exit code 0 indicates the process was successfully killed.\n         return true;\n       } else if (rc \u003d\u003d 1) {\n         // exit code 1 indicates either that the process was not running\n         // or that fuser didn\u0027t have root privileges in order to find it\n         // (eg running as a different user)\n         LOG.info(\n             \"Indeterminate response from trying to kill service. \" +\n             \"Verifying whether it is running using nc...\");\n         rc \u003d execCommand(session, \"nc -z localhost 8020\");\n         if (rc \u003d\u003d 0) {\n-          // the NN is still listening - we are unable to fence\n-          LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n+          // the service is still listening - we are unable to fence\n+          LOG.warn(\"Unable to fence - it is running but we cannot kill it\");\n           return false;\n         } else {\n-          LOG.info(\"Verified that the NN is down.\");\n+          LOG.info(\"Verified that the service is down.\");\n           return true;          \n         }\n       } else {\n         // other \n       }\n       LOG.info(\"rc: \" + rc);\n       return rc \u003d\u003d 0;\n     } catch (InterruptedException e) {\n       LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n       return false;\n     } catch (IOException e) {\n       LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean doFence(Session session, int port) throws JSchException {\n    try {\n      LOG.info(\"Looking for process running on port \" + port);\n      int rc \u003d execCommand(session,\n          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n      if (rc \u003d\u003d 0) {\n        LOG.info(\"Successfully killed process that was \" +\n            \"listening on port \" + port);\n        // exit code 0 indicates the process was successfully killed.\n        return true;\n      } else if (rc \u003d\u003d 1) {\n        // exit code 1 indicates either that the process was not running\n        // or that fuser didn\u0027t have root privileges in order to find it\n        // (eg running as a different user)\n        LOG.info(\n            \"Indeterminate response from trying to kill service. \" +\n            \"Verifying whether it is running using nc...\");\n        rc \u003d execCommand(session, \"nc -z localhost 8020\");\n        if (rc \u003d\u003d 0) {\n          // the service is still listening - we are unable to fence\n          LOG.warn(\"Unable to fence - it is running but we cannot kill it\");\n          return false;\n        } else {\n          LOG.info(\"Verified that the service is down.\");\n          return true;          \n        }\n      } else {\n        // other \n      }\n      LOG.info(\"rc: \" + rc);\n      return rc \u003d\u003d 0;\n    } catch (InterruptedException e) {\n      LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n      return false;\n    } catch (IOException e) {\n      LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n      return false;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
      "extendedDetails": {}
    },
    "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "HADOOP-7961. Move HA fencing to common. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228510 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/12 4:17 PM",
      "commitName": "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-7961. Move HA fencing to common. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228510 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/12 4:17 PM",
          "commitName": "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "06/01/12 12:44 PM",
          "commitNameOld": "9a07ba8945407cd8f63169faf9e0faa4311d38c7",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,39 @@\n-  private boolean doFence(Session session, int nnPort) throws JSchException {\n+  private boolean doFence(Session session, int port) throws JSchException {\n     try {\n-      LOG.info(\"Looking for process running on port \" + nnPort);\n+      LOG.info(\"Looking for process running on port \" + port);\n       int rc \u003d execCommand(session,\n-          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + nnPort);\n+          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n       if (rc \u003d\u003d 0) {\n         LOG.info(\"Successfully killed process that was \" +\n-            \"listening on port \" + nnPort);\n+            \"listening on port \" + port);\n         // exit code 0 indicates the process was successfully killed.\n         return true;\n       } else if (rc \u003d\u003d 1) {\n         // exit code 1 indicates either that the process was not running\n         // or that fuser didn\u0027t have root privileges in order to find it\n         // (eg running as a different user)\n         LOG.info(\n-            \"Indeterminate response from trying to kill NameNode. \" +\n+            \"Indeterminate response from trying to kill service. \" +\n             \"Verifying whether it is running using nc...\");\n         rc \u003d execCommand(session, \"nc -z localhost 8020\");\n         if (rc \u003d\u003d 0) {\n           // the NN is still listening - we are unable to fence\n           LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n           return false;\n         } else {\n           LOG.info(\"Verified that the NN is down.\");\n           return true;          \n         }\n       } else {\n         // other \n       }\n       LOG.info(\"rc: \" + rc);\n       return rc \u003d\u003d 0;\n     } catch (InterruptedException e) {\n       LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n       return false;\n     } catch (IOException e) {\n       LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean doFence(Session session, int port) throws JSchException {\n    try {\n      LOG.info(\"Looking for process running on port \" + port);\n      int rc \u003d execCommand(session,\n          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n      if (rc \u003d\u003d 0) {\n        LOG.info(\"Successfully killed process that was \" +\n            \"listening on port \" + port);\n        // exit code 0 indicates the process was successfully killed.\n        return true;\n      } else if (rc \u003d\u003d 1) {\n        // exit code 1 indicates either that the process was not running\n        // or that fuser didn\u0027t have root privileges in order to find it\n        // (eg running as a different user)\n        LOG.info(\n            \"Indeterminate response from trying to kill service. \" +\n            \"Verifying whether it is running using nc...\");\n        rc \u003d execCommand(session, \"nc -z localhost 8020\");\n        if (rc \u003d\u003d 0) {\n          // the NN is still listening - we are unable to fence\n          LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n          return false;\n        } else {\n          LOG.info(\"Verified that the NN is down.\");\n          return true;          \n        }\n      } else {\n        // other \n      }\n      LOG.info(\"rc: \" + rc);\n      return rc \u003d\u003d 0;\n    } catch (InterruptedException e) {\n      LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n      return false;\n    } catch (IOException e) {\n      LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/SshFenceByTcpPort.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7961. Move HA fencing to common. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228510 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/12 4:17 PM",
          "commitName": "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "06/01/12 12:44 PM",
          "commitNameOld": "9a07ba8945407cd8f63169faf9e0faa4311d38c7",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,39 @@\n-  private boolean doFence(Session session, int nnPort) throws JSchException {\n+  private boolean doFence(Session session, int port) throws JSchException {\n     try {\n-      LOG.info(\"Looking for process running on port \" + nnPort);\n+      LOG.info(\"Looking for process running on port \" + port);\n       int rc \u003d execCommand(session,\n-          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + nnPort);\n+          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n       if (rc \u003d\u003d 0) {\n         LOG.info(\"Successfully killed process that was \" +\n-            \"listening on port \" + nnPort);\n+            \"listening on port \" + port);\n         // exit code 0 indicates the process was successfully killed.\n         return true;\n       } else if (rc \u003d\u003d 1) {\n         // exit code 1 indicates either that the process was not running\n         // or that fuser didn\u0027t have root privileges in order to find it\n         // (eg running as a different user)\n         LOG.info(\n-            \"Indeterminate response from trying to kill NameNode. \" +\n+            \"Indeterminate response from trying to kill service. \" +\n             \"Verifying whether it is running using nc...\");\n         rc \u003d execCommand(session, \"nc -z localhost 8020\");\n         if (rc \u003d\u003d 0) {\n           // the NN is still listening - we are unable to fence\n           LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n           return false;\n         } else {\n           LOG.info(\"Verified that the NN is down.\");\n           return true;          \n         }\n       } else {\n         // other \n       }\n       LOG.info(\"rc: \" + rc);\n       return rc \u003d\u003d 0;\n     } catch (InterruptedException e) {\n       LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n       return false;\n     } catch (IOException e) {\n       LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean doFence(Session session, int port) throws JSchException {\n    try {\n      LOG.info(\"Looking for process running on port \" + port);\n      int rc \u003d execCommand(session,\n          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n      if (rc \u003d\u003d 0) {\n        LOG.info(\"Successfully killed process that was \" +\n            \"listening on port \" + port);\n        // exit code 0 indicates the process was successfully killed.\n        return true;\n      } else if (rc \u003d\u003d 1) {\n        // exit code 1 indicates either that the process was not running\n        // or that fuser didn\u0027t have root privileges in order to find it\n        // (eg running as a different user)\n        LOG.info(\n            \"Indeterminate response from trying to kill service. \" +\n            \"Verifying whether it is running using nc...\");\n        rc \u003d execCommand(session, \"nc -z localhost 8020\");\n        if (rc \u003d\u003d 0) {\n          // the NN is still listening - we are unable to fence\n          LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n          return false;\n        } else {\n          LOG.info(\"Verified that the NN is down.\");\n          return true;          \n        }\n      } else {\n        // other \n      }\n      LOG.info(\"rc: \" + rc);\n      return rc \u003d\u003d 0;\n    } catch (InterruptedException e) {\n      LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n      return false;\n    } catch (IOException e) {\n      LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7961. Move HA fencing to common. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228510 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/12 4:17 PM",
          "commitName": "2d0b340c4739dff11d1c04982d4bd3a4dcd97ce9",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "06/01/12 12:44 PM",
          "commitNameOld": "9a07ba8945407cd8f63169faf9e0faa4311d38c7",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,39 @@\n-  private boolean doFence(Session session, int nnPort) throws JSchException {\n+  private boolean doFence(Session session, int port) throws JSchException {\n     try {\n-      LOG.info(\"Looking for process running on port \" + nnPort);\n+      LOG.info(\"Looking for process running on port \" + port);\n       int rc \u003d execCommand(session,\n-          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + nnPort);\n+          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n       if (rc \u003d\u003d 0) {\n         LOG.info(\"Successfully killed process that was \" +\n-            \"listening on port \" + nnPort);\n+            \"listening on port \" + port);\n         // exit code 0 indicates the process was successfully killed.\n         return true;\n       } else if (rc \u003d\u003d 1) {\n         // exit code 1 indicates either that the process was not running\n         // or that fuser didn\u0027t have root privileges in order to find it\n         // (eg running as a different user)\n         LOG.info(\n-            \"Indeterminate response from trying to kill NameNode. \" +\n+            \"Indeterminate response from trying to kill service. \" +\n             \"Verifying whether it is running using nc...\");\n         rc \u003d execCommand(session, \"nc -z localhost 8020\");\n         if (rc \u003d\u003d 0) {\n           // the NN is still listening - we are unable to fence\n           LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n           return false;\n         } else {\n           LOG.info(\"Verified that the NN is down.\");\n           return true;          \n         }\n       } else {\n         // other \n       }\n       LOG.info(\"rc: \" + rc);\n       return rc \u003d\u003d 0;\n     } catch (InterruptedException e) {\n       LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n       return false;\n     } catch (IOException e) {\n       LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean doFence(Session session, int port) throws JSchException {\n    try {\n      LOG.info(\"Looking for process running on port \" + port);\n      int rc \u003d execCommand(session,\n          \"PATH\u003d$PATH:/sbin:/usr/sbin fuser -v -k -n tcp \" + port);\n      if (rc \u003d\u003d 0) {\n        LOG.info(\"Successfully killed process that was \" +\n            \"listening on port \" + port);\n        // exit code 0 indicates the process was successfully killed.\n        return true;\n      } else if (rc \u003d\u003d 1) {\n        // exit code 1 indicates either that the process was not running\n        // or that fuser didn\u0027t have root privileges in order to find it\n        // (eg running as a different user)\n        LOG.info(\n            \"Indeterminate response from trying to kill service. \" +\n            \"Verifying whether it is running using nc...\");\n        rc \u003d execCommand(session, \"nc -z localhost 8020\");\n        if (rc \u003d\u003d 0) {\n          // the NN is still listening - we are unable to fence\n          LOG.warn(\"Unable to fence NN - it is running but we cannot kill it\");\n          return false;\n        } else {\n          LOG.info(\"Verified that the NN is down.\");\n          return true;          \n        }\n      } else {\n        // other \n      }\n      LOG.info(\"rc: \" + rc);\n      return rc \u003d\u003d 0;\n    } catch (InterruptedException e) {\n      LOG.warn(\"Interrupted while trying to fence via ssh\", e);\n      return false;\n    } catch (IOException e) {\n      LOG.warn(\"Unknown failure while trying to fence via ssh\", e);\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java",
          "extendedDetails": {
            "oldValue": "[session-Session, nnPort-int]",
            "newValue": "[session-Session, port-int]"
          }
        }
      ]
    }
  }
}