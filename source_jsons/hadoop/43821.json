{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PortProbe.java",
  "functionName": "ping",
  "functionId": "ping___instance-ComponentInstance",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/monitor/probe/PortProbe.java",
  "functionStartLine": 71,
  "functionEndLine": 97,
  "numCommitsSeen": 10,
  "timeTaken": 5508,
  "changeHistory": [
    "2d0662cfd57bd438421f912dc172e79a15835442",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "e86d828548c17ebadc0e6d22b50151eebd9696d5",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec"
  ],
  "changeHistoryShort": {
    "2d0662cfd57bd438421f912dc172e79a15835442": "Ybodychange",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yparameterchange,Ybodychange)",
    "e86d828548c17ebadc0e6d22b50151eebd9696d5": "Ymultichange(Yparameterchange,Ybodychange)",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d0662cfd57bd438421f912dc172e79a15835442": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8060.  Added default readiness check for service components.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "16/04/18 11:24 AM",
      "commitName": "2d0662cfd57bd438421f912dc172e79a15835442",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 160.87,
      "commitsBetweenForRepo": 1093,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,27 @@\n   public ProbeStatus ping(ComponentInstance instance) {\n-    ProbeStatus status \u003d new ProbeStatus();\n-\n-    if (instance.getContainerStatus() \u003d\u003d null || ServiceUtils\n-        .isEmpty(instance.getContainerStatus().getIPs())) {\n-      status.fail(this, new IOException(\n-          instance.getCompInstanceName() + \": IP is not available yet\"));\n+    ProbeStatus status \u003d super.ping(instance);\n+    if (!status.isSuccess()) {\n       return status;\n     }\n \n     String ip \u003d instance.getContainerStatus().getIPs().get(0);\n     InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n     Socket socket \u003d new Socket();\n     try {\n       if (log.isDebugEnabled()) {\n         log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n             .toString() + \", timeout\u003d\" + MonitorUtils\n             .millisToHumanTime(timeout));\n       }\n       socket.connect(sockAddr, timeout);\n       status.succeed(this);\n     } catch (Throwable e) {\n       String error \u003d\n           instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n       log.debug(error, e);\n       status.fail(this, new IOException(error, e));\n     } finally {\n       IOUtils.closeSocket(socket);\n     }\n     return status;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ProbeStatus ping(ComponentInstance instance) {\n    ProbeStatus status \u003d super.ping(instance);\n    if (!status.isSuccess()) {\n      return status;\n    }\n\n    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n            .toString() + \", timeout\u003d\" + MonitorUtils\n            .millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d\n          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/monitor/probe/PortProbe.java",
      "extendedDetails": {}
    },
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public ProbeStatus ping(ComponentInstance instance) {\n     ProbeStatus status \u003d new ProbeStatus();\n \n-    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n+    if (instance.getContainerStatus() \u003d\u003d null || ServiceUtils\n         .isEmpty(instance.getContainerStatus().getIPs())) {\n       status.fail(this, new IOException(\n           instance.getCompInstanceName() + \": IP is not available yet\"));\n       return status;\n     }\n \n     String ip \u003d instance.getContainerStatus().getIPs().get(0);\n     InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n     Socket socket \u003d new Socket();\n     try {\n       if (log.isDebugEnabled()) {\n         log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n             .toString() + \", timeout\u003d\" + MonitorUtils\n             .millisToHumanTime(timeout));\n       }\n       socket.connect(sockAddr, timeout);\n       status.succeed(this);\n     } catch (Throwable e) {\n       String error \u003d\n           instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n       log.debug(error, e);\n       status.fail(this, new IOException(error, e));\n     } finally {\n       IOUtils.closeSocket(socket);\n     }\n     return status;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ProbeStatus ping(ComponentInstance instance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    if (instance.getContainerStatus() \u003d\u003d null || ServiceUtils\n        .isEmpty(instance.getContainerStatus().getIPs())) {\n      status.fail(this, new IOException(\n          instance.getCompInstanceName() + \": IP is not available yet\"));\n      return status;\n    }\n\n    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n            .toString() + \", timeout\u003d\" + MonitorUtils\n            .millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d\n          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/monitor/probe/PortProbe.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ProbeStatus ping(ComponentInstance instance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n        .isEmpty(instance.getContainerStatus().getIPs())) {\n      status.fail(this, new IOException(\n          instance.getCompInstanceName() + \": IP is not available yet\"));\n      return status;\n    }\n\n    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n            .toString() + \", timeout\u003d\" + MonitorUtils\n            .millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d\n          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/monitor/probe/PortProbe.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/servicemonitor/probe/PortProbe.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/monitor/probe/PortProbe.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ProbeStatus ping(ComponentInstance instance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n        .isEmpty(instance.getContainerStatus().getIPs())) {\n      status.fail(this, new IOException(\n          instance.getCompInstanceName() + \": IP is not available yet\"));\n      return status;\n    }\n\n    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n            .toString() + \", timeout\u003d\" + MonitorUtils\n            .millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d\n          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/servicemonitor/probe/PortProbe.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/servicemonitor/PortProbe.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/servicemonitor/probe/PortProbe.java",
        "oldMethodName": "ping",
        "newMethodName": "ping"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "e86d828548c17ebadc0e6d22b50151eebd9696d5",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  public ProbeStatus ping(RoleInstance roleInstance) {\n+  public ProbeStatus ping(ComponentInstance instance) {\n     ProbeStatus status \u003d new ProbeStatus();\n \n-    String ip \u003d roleInstance.ip;\n-    if (ip \u003d\u003d null) {\n-      status.fail(this, new IOException(\"IP is not available yet\"));\n+    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n+        .isEmpty(instance.getContainerStatus().getIPs())) {\n+      status.fail(this, new IOException(\n+          instance.getCompInstanceName() + \": IP is not available yet\"));\n       return status;\n     }\n \n+    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n     InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n     Socket socket \u003d new Socket();\n     try {\n       if (log.isDebugEnabled()) {\n-        log.debug(\"Connecting to \" + sockAddr.toString() + \"timeout\u003d\" +\n-            MonitorUtils.millisToHumanTime(timeout));\n+        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n+            .toString() + \", timeout\u003d\" + MonitorUtils\n+            .millisToHumanTime(timeout));\n       }\n       socket.connect(sockAddr, timeout);\n       status.succeed(this);\n     } catch (Throwable e) {\n-      String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n+      String error \u003d\n+          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n       log.debug(error, e);\n       status.fail(this, new IOException(error, e));\n     } finally {\n       IOUtils.closeSocket(socket);\n     }\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ProbeStatus ping(ComponentInstance instance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n        .isEmpty(instance.getContainerStatus().getIPs())) {\n      status.fail(this, new IOException(\n          instance.getCompInstanceName() + \": IP is not available yet\"));\n      return status;\n    }\n\n    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n            .toString() + \", timeout\u003d\" + MonitorUtils\n            .millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d\n          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/servicemonitor/PortProbe.java",
          "extendedDetails": {
            "oldValue": "[roleInstance-RoleInstance]",
            "newValue": "[instance-ComponentInstance]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "e86d828548c17ebadc0e6d22b50151eebd9696d5",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  public ProbeStatus ping(RoleInstance roleInstance) {\n+  public ProbeStatus ping(ComponentInstance instance) {\n     ProbeStatus status \u003d new ProbeStatus();\n \n-    String ip \u003d roleInstance.ip;\n-    if (ip \u003d\u003d null) {\n-      status.fail(this, new IOException(\"IP is not available yet\"));\n+    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n+        .isEmpty(instance.getContainerStatus().getIPs())) {\n+      status.fail(this, new IOException(\n+          instance.getCompInstanceName() + \": IP is not available yet\"));\n       return status;\n     }\n \n+    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n     InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n     Socket socket \u003d new Socket();\n     try {\n       if (log.isDebugEnabled()) {\n-        log.debug(\"Connecting to \" + sockAddr.toString() + \"timeout\u003d\" +\n-            MonitorUtils.millisToHumanTime(timeout));\n+        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n+            .toString() + \", timeout\u003d\" + MonitorUtils\n+            .millisToHumanTime(timeout));\n       }\n       socket.connect(sockAddr, timeout);\n       status.succeed(this);\n     } catch (Throwable e) {\n-      String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n+      String error \u003d\n+          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n       log.debug(error, e);\n       status.fail(this, new IOException(error, e));\n     } finally {\n       IOUtils.closeSocket(socket);\n     }\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ProbeStatus ping(ComponentInstance instance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    if (instance.getContainerStatus() \u003d\u003d null || SliderUtils\n        .isEmpty(instance.getContainerStatus().getIPs())) {\n      status.fail(this, new IOException(\n          instance.getCompInstanceName() + \": IP is not available yet\"));\n      return status;\n    }\n\n    String ip \u003d instance.getContainerStatus().getIPs().get(0);\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(instance.getCompInstanceName() + \": Connecting \" + sockAddr\n            .toString() + \", timeout\u003d\" + MonitorUtils\n            .millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d\n          instance.getCompInstanceName() + \": Probe \" + sockAddr + \" failed\";\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/servicemonitor/PortProbe.java",
          "extendedDetails": {}
        }
      ]
    },
    "e86d828548c17ebadc0e6d22b50151eebd9696d5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6716. Native services support for specifying component start order. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "e86d828548c17ebadc0e6d22b50151eebd9696d5",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6716. Native services support for specifying component start order. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "e86d828548c17ebadc0e6d22b50151eebd9696d5",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-  public ProbeStatus ping(boolean livePing) {\n+  public ProbeStatus ping(RoleInstance roleInstance) {\n     ProbeStatus status \u003d new ProbeStatus();\n-    InetSocketAddress sockAddr \u003d new InetSocketAddress(host, port);\n+\n+    String ip \u003d roleInstance.ip;\n+    if (ip \u003d\u003d null) {\n+      status.fail(this, new IOException(\"IP is not available yet\"));\n+      return status;\n+    }\n+\n+    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n     Socket socket \u003d new Socket();\n     try {\n       if (log.isDebugEnabled()) {\n-        log.debug(\"Connecting to \" + sockAddr.toString() + \" connection-timeout\u003d\" +\n-                  MonitorUtils.millisToHumanTime(timeout));\n+        log.debug(\"Connecting to \" + sockAddr.toString() + \"timeout\u003d\" +\n+            MonitorUtils.millisToHumanTime(timeout));\n       }\n       socket.connect(sockAddr, timeout);\n       status.succeed(this);\n-    } catch (IOException e) {\n+    } catch (Throwable e) {\n       String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n       log.debug(error, e);\n-      status.fail(this,\n-                  new IOException(error, e));\n+      status.fail(this, new IOException(error, e));\n     } finally {\n       IOUtils.closeSocket(socket);\n     }\n     return status;\n-\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ProbeStatus ping(RoleInstance roleInstance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    String ip \u003d roleInstance.ip;\n    if (ip \u003d\u003d null) {\n      status.fail(this, new IOException(\"IP is not available yet\"));\n      return status;\n    }\n\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Connecting to \" + sockAddr.toString() + \"timeout\u003d\" +\n            MonitorUtils.millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/servicemonitor/PortProbe.java",
          "extendedDetails": {
            "oldValue": "[livePing-boolean]",
            "newValue": "[roleInstance-RoleInstance]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6716. Native services support for specifying component start order. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "e86d828548c17ebadc0e6d22b50151eebd9696d5",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-  public ProbeStatus ping(boolean livePing) {\n+  public ProbeStatus ping(RoleInstance roleInstance) {\n     ProbeStatus status \u003d new ProbeStatus();\n-    InetSocketAddress sockAddr \u003d new InetSocketAddress(host, port);\n+\n+    String ip \u003d roleInstance.ip;\n+    if (ip \u003d\u003d null) {\n+      status.fail(this, new IOException(\"IP is not available yet\"));\n+      return status;\n+    }\n+\n+    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n     Socket socket \u003d new Socket();\n     try {\n       if (log.isDebugEnabled()) {\n-        log.debug(\"Connecting to \" + sockAddr.toString() + \" connection-timeout\u003d\" +\n-                  MonitorUtils.millisToHumanTime(timeout));\n+        log.debug(\"Connecting to \" + sockAddr.toString() + \"timeout\u003d\" +\n+            MonitorUtils.millisToHumanTime(timeout));\n       }\n       socket.connect(sockAddr, timeout);\n       status.succeed(this);\n-    } catch (IOException e) {\n+    } catch (Throwable e) {\n       String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n       log.debug(error, e);\n-      status.fail(this,\n-                  new IOException(error, e));\n+      status.fail(this, new IOException(error, e));\n     } finally {\n       IOUtils.closeSocket(socket);\n     }\n     return status;\n-\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ProbeStatus ping(RoleInstance roleInstance) {\n    ProbeStatus status \u003d new ProbeStatus();\n\n    String ip \u003d roleInstance.ip;\n    if (ip \u003d\u003d null) {\n      status.fail(this, new IOException(\"IP is not available yet\"));\n      return status;\n    }\n\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(ip, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Connecting to \" + sockAddr.toString() + \"timeout\u003d\" +\n            MonitorUtils.millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (Throwable e) {\n      String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n      log.debug(error, e);\n      status.fail(this, new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/servicemonitor/PortProbe.java",
          "extendedDetails": {}
        }
      ]
    },
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5461. Initial code ported from slider-core module. (jianhe)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,22 @@\n+  public ProbeStatus ping(boolean livePing) {\n+    ProbeStatus status \u003d new ProbeStatus();\n+    InetSocketAddress sockAddr \u003d new InetSocketAddress(host, port);\n+    Socket socket \u003d new Socket();\n+    try {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Connecting to \" + sockAddr.toString() + \" connection-timeout\u003d\" +\n+                  MonitorUtils.millisToHumanTime(timeout));\n+      }\n+      socket.connect(sockAddr, timeout);\n+      status.succeed(this);\n+    } catch (IOException e) {\n+      String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n+      log.debug(error, e);\n+      status.fail(this,\n+                  new IOException(error, e));\n+    } finally {\n+      IOUtils.closeSocket(socket);\n+    }\n+    return status;\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ProbeStatus ping(boolean livePing) {\n    ProbeStatus status \u003d new ProbeStatus();\n    InetSocketAddress sockAddr \u003d new InetSocketAddress(host, port);\n    Socket socket \u003d new Socket();\n    try {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Connecting to \" + sockAddr.toString() + \" connection-timeout\u003d\" +\n                  MonitorUtils.millisToHumanTime(timeout));\n      }\n      socket.connect(sockAddr, timeout);\n      status.succeed(this);\n    } catch (IOException e) {\n      String error \u003d \"Probe \" + sockAddr + \" failed: \" + e;\n      log.debug(error, e);\n      status.fail(this,\n                  new IOException(error, e));\n    } finally {\n      IOUtils.closeSocket(socket);\n    }\n    return status;\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/servicemonitor/PortProbe.java"
    }
  }
}