{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GreedyReservationAgent.java",
  "functionName": "init",
  "functionId": "init___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/GreedyReservationAgent.java",
  "functionStartLine": 56,
  "functionEndLine": 72,
  "numCommitsSeen": 4,
  "timeTaken": 2185,
  "changeHistory": [
    "a3a615eeab8c14ccdc548311097e62a916963dc5",
    "5f5b031d1f20cb7f621db41979e963eaa42cf52f"
  ],
  "changeHistoryShort": {
    "a3a615eeab8c14ccdc548311097e62a916963dc5": "Ybodychange",
    "5f5b031d1f20cb7f621db41979e963eaa42cf52f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3a615eeab8c14ccdc548311097e62a916963dc5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4359. Update LowCost agents logic to take advantage of YARN-4358. (Jonathan Yaniv and Ishai Menache via Subru).\n",
      "commitDate": "01/05/17 4:01 PM",
      "commitName": "a3a615eeab8c14ccdc548311097e62a916963dc5",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "27/02/17 7:08 AM",
      "commitNameOld": "5f5b031d1f20cb7f621db41979e963eaa42cf52f",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 63.33,
      "commitsBetweenForRepo": 373,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void init(Configuration conf) {\n-    allocateLeft \u003d conf.getBoolean(GREEDY_FAVOR_EARLY_ALLOCATION,\n+    allocateLeft \u003d conf.getBoolean(FAVOR_EARLY_ALLOCATION,\n         DEFAULT_GREEDY_FAVOR_EARLY_ALLOCATION);\n     if (allocateLeft) {\n       LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"early\\\"\"\n           + \" (left) allocations (controlled by parameter: \"\n-          + GREEDY_FAVOR_EARLY_ALLOCATION + \")\");\n+          + FAVOR_EARLY_ALLOCATION + \")\");\n     } else {\n       LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"late\\\"\"\n           + \" (right) allocations (controlled by parameter: \"\n-          + GREEDY_FAVOR_EARLY_ALLOCATION + \")\");\n+          + FAVOR_EARLY_ALLOCATION + \")\");\n     }\n \n     planner \u003d\n-        new IterativePlanner(new StageEarliestStartByJobArrival(),\n+        new IterativePlanner(new StageExecutionIntervalUnconstrained(),\n             new StageAllocatorGreedyRLE(allocateLeft), allocateLeft);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf) {\n    allocateLeft \u003d conf.getBoolean(FAVOR_EARLY_ALLOCATION,\n        DEFAULT_GREEDY_FAVOR_EARLY_ALLOCATION);\n    if (allocateLeft) {\n      LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"early\\\"\"\n          + \" (left) allocations (controlled by parameter: \"\n          + FAVOR_EARLY_ALLOCATION + \")\");\n    } else {\n      LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"late\\\"\"\n          + \" (right) allocations (controlled by parameter: \"\n          + FAVOR_EARLY_ALLOCATION + \")\");\n    }\n\n    planner \u003d\n        new IterativePlanner(new StageExecutionIntervalUnconstrained(),\n            new StageAllocatorGreedyRLE(allocateLeft), allocateLeft);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/GreedyReservationAgent.java",
      "extendedDetails": {}
    },
    "5f5b031d1f20cb7f621db41979e963eaa42cf52f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5703. ReservationAgents are not correctly configured. Contributed by Manikandan R.\n",
      "commitDate": "27/02/17 7:08 AM",
      "commitName": "5f5b031d1f20cb7f621db41979e963eaa42cf52f",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,17 @@\n+  public void init(Configuration conf) {\n+    allocateLeft \u003d conf.getBoolean(GREEDY_FAVOR_EARLY_ALLOCATION,\n+        DEFAULT_GREEDY_FAVOR_EARLY_ALLOCATION);\n+    if (allocateLeft) {\n+      LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"early\\\"\"\n+          + \" (left) allocations (controlled by parameter: \"\n+          + GREEDY_FAVOR_EARLY_ALLOCATION + \")\");\n+    } else {\n+      LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"late\\\"\"\n+          + \" (right) allocations (controlled by parameter: \"\n+          + GREEDY_FAVOR_EARLY_ALLOCATION + \")\");\n+    }\n+\n+    planner \u003d\n+        new IterativePlanner(new StageEarliestStartByJobArrival(),\n+            new StageAllocatorGreedyRLE(allocateLeft), allocateLeft);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf) {\n    allocateLeft \u003d conf.getBoolean(GREEDY_FAVOR_EARLY_ALLOCATION,\n        DEFAULT_GREEDY_FAVOR_EARLY_ALLOCATION);\n    if (allocateLeft) {\n      LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"early\\\"\"\n          + \" (left) allocations (controlled by parameter: \"\n          + GREEDY_FAVOR_EARLY_ALLOCATION + \")\");\n    } else {\n      LOG.info(\"Initializing the GreedyReservationAgent to favor \\\"late\\\"\"\n          + \" (right) allocations (controlled by parameter: \"\n          + GREEDY_FAVOR_EARLY_ALLOCATION + \")\");\n    }\n\n    planner \u003d\n        new IterativePlanner(new StageEarliestStartByJobArrival(),\n            new StageAllocatorGreedyRLE(allocateLeft), allocateLeft);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/GreedyReservationAgent.java"
    }
  }
}