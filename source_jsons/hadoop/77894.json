{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PathData.java",
  "functionName": "normalizeWindowsPath",
  "functionId": "normalizeWindowsPath___pathString-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
  "functionStartLine": 514,
  "functionEndLine": 547,
  "numCommitsSeen": 18,
  "timeTaken": 1637,
  "changeHistory": [
    "638801cce16fc1dc3259c541dc30a599faaddda1"
  ],
  "changeHistoryShort": {
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,34 @@\n+  private static String normalizeWindowsPath(String pathString)\n+  throws IOException\n+  {\n+    if (!Path.WINDOWS) {\n+      return pathString;\n+    }\n+\n+    boolean slashed \u003d\n+        ((pathString.length() \u003e\u003d 1) \u0026\u0026 (pathString.charAt(0) \u003d\u003d \u0027/\u0027));\n+\n+    // Is it a backslash-separated absolute path?\n+    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n+      // Forward slashes disallowed in a backslash-separated path.\n+      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n+        throw new IOException(\"Invalid path string \" + pathString);\n+      }\n+\n+      pathString \u003d pathString.replace(\u0027\\\\\u0027, \u0027/\u0027);\n+      return \"file:\" + (slashed ? \"\" : \"/\") + pathString;\n+    }\n+\n+    // Is it a forward slash-separated absolute path?\n+    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n+      return \"file:\" + (slashed ? \"\" : \"/\") + pathString;\n+    }\n+\n+    // Is it a backslash-separated relative file path (no scheme and\n+    // no drive-letter specifier)?\n+    if ((pathString.indexOf(\u0027:\u0027) \u003d\u003d -1) \u0026\u0026 (pathString.indexOf(\u0027\\\\\u0027) !\u003d -1)) {\n+      pathString \u003d pathString.replace(\u0027\\\\\u0027, \u0027/\u0027);\n+    }\n+\n+    return pathString;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String normalizeWindowsPath(String pathString)\n  throws IOException\n  {\n    if (!Path.WINDOWS) {\n      return pathString;\n    }\n\n    boolean slashed \u003d\n        ((pathString.length() \u003e\u003d 1) \u0026\u0026 (pathString.charAt(0) \u003d\u003d \u0027/\u0027));\n\n    // Is it a backslash-separated absolute path?\n    if (windowsNonUriAbsolutePath1.matcher(pathString).find()) {\n      // Forward slashes disallowed in a backslash-separated path.\n      if (pathString.indexOf(\u0027/\u0027) !\u003d -1) {\n        throw new IOException(\"Invalid path string \" + pathString);\n      }\n\n      pathString \u003d pathString.replace(\u0027\\\\\u0027, \u0027/\u0027);\n      return \"file:\" + (slashed ? \"\" : \"/\") + pathString;\n    }\n\n    // Is it a forward slash-separated absolute path?\n    if (windowsNonUriAbsolutePath2.matcher(pathString).find()) {\n      return \"file:\" + (slashed ? \"\" : \"/\") + pathString;\n    }\n\n    // Is it a backslash-separated relative file path (no scheme and\n    // no drive-letter specifier)?\n    if ((pathString.indexOf(\u0027:\u0027) \u003d\u003d -1) \u0026\u0026 (pathString.indexOf(\u0027\\\\\u0027) !\u003d -1)) {\n      pathString \u003d pathString.replace(\u0027\\\\\u0027, \u0027/\u0027);\n    }\n\n    return pathString;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java"
    }
  }
}