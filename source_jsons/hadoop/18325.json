{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExampleDriver.java",
  "functionName": "main",
  "functionId": "main___argv-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/ExampleDriver.java",
  "functionStartLine": 35,
  "functionEndLine": 81,
  "numCommitsSeen": 6,
  "timeTaken": 4652,
  "changeHistory": [
    "27e6673ec306f5b79d88de3acd723d2a8ed92a05",
    "21c14c0b026d08deecc9edf004277c55bf7bb716",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "27e6673ec306f5b79d88de3acd723d2a8ed92a05": "Ybodychange",
    "21c14c0b026d08deecc9edf004277c55bf7bb716": "Ybodychange",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "27e6673ec306f5b79d88de3acd723d2a8ed92a05": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5156. Change hadoop examples ProgramDriver to be able to run 1.x examples jar on top of YARN. This change breaks 0.23.x direct usages of ProgramDriver. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/13 11:36 PM",
      "commitName": "27e6673ec306f5b79d88de3acd723d2a8ed92a05",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/04/13 1:28 PM",
      "commitNameOld": "21c14c0b026d08deecc9edf004277c55bf7bb716",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 40.42,
      "commitsBetweenForRepo": 244,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n   public static void main(String argv[]){\n     int exitCode \u003d -1;\n     ProgramDriver pgd \u003d new ProgramDriver();\n     try {\n       pgd.addClass(\"wordcount\", WordCount.class, \n                    \"A map/reduce program that counts the words in the input files.\");\n       pgd.addClass(\"wordmean\", WordMean.class,\n                    \"A map/reduce program that counts the average length of the words in the input files.\");\n       pgd.addClass(\"wordmedian\", WordMedian.class,\n                    \"A map/reduce program that counts the median length of the words in the input files.\");\n       pgd.addClass(\"wordstandarddeviation\", WordStandardDeviation.class,\n                    \"A map/reduce program that counts the standard deviation of the length of the words in the input files.\");\n       pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                    \"An Aggregate based map/reduce program that counts the words in the input files.\");\n       pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                    \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n       pgd.addClass(\"grep\", Grep.class, \n                    \"A map/reduce program that counts the matches of a regex in the input.\");\n       pgd.addClass(\"randomwriter\", RandomWriter.class, \n                    \"A map/reduce program that writes 10GB of random data per node.\");\n       pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n       \"A map/reduce program that writes 10GB of random textual data per node.\");\n       pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n \n       pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n       pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n       pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n \n       pgd.addClass(\"pentomino\", DistributedPentomino.class,\n       \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n       pgd.addClass(\"secondarysort\", SecondarySort.class,\n                    \"An example defining a secondary sort to the reduce.\");\n       pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n       pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n       pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n       pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n       pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n       pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n       pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n-      exitCode \u003d pgd.driver(argv);\n+      exitCode \u003d pgd.run(argv);\n     }\n     catch(Throwable e){\n       e.printStackTrace();\n     }\n     \n     System.exit(exitCode);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]){\n    int exitCode \u003d -1;\n    ProgramDriver pgd \u003d new ProgramDriver();\n    try {\n      pgd.addClass(\"wordcount\", WordCount.class, \n                   \"A map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"wordmean\", WordMean.class,\n                   \"A map/reduce program that counts the average length of the words in the input files.\");\n      pgd.addClass(\"wordmedian\", WordMedian.class,\n                   \"A map/reduce program that counts the median length of the words in the input files.\");\n      pgd.addClass(\"wordstandarddeviation\", WordStandardDeviation.class,\n                   \"A map/reduce program that counts the standard deviation of the length of the words in the input files.\");\n      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n      pgd.addClass(\"grep\", Grep.class, \n                   \"A map/reduce program that counts the matches of a regex in the input.\");\n      pgd.addClass(\"randomwriter\", RandomWriter.class, \n                   \"A map/reduce program that writes 10GB of random data per node.\");\n      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n      \"A map/reduce program that writes 10GB of random textual data per node.\");\n      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n\n      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n\n      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n      pgd.addClass(\"secondarysort\", SecondarySort.class,\n                   \"An example defining a secondary sort to the reduce.\");\n      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n      exitCode \u003d pgd.run(argv);\n    }\n    catch(Throwable e){\n      e.printStackTrace();\n    }\n    \n    System.exit(exitCode);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/ExampleDriver.java",
      "extendedDetails": {}
    },
    "21c14c0b026d08deecc9edf004277c55bf7bb716": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4981. Add WordMean, WordMedian, WordStandardDeviation to ExamplesDriver. Contributed by Plamen Jeliazkov.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467076 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 1:28 PM",
      "commitName": "21c14c0b026d08deecc9edf004277c55bf7bb716",
      "commitAuthor": "Konstantin Shvachko",
      "commitDateOld": "18/11/11 5:24 PM",
      "commitNameOld": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 509.79,
      "commitsBetweenForRepo": 2989,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,47 @@\n   public static void main(String argv[]){\n     int exitCode \u003d -1;\n     ProgramDriver pgd \u003d new ProgramDriver();\n     try {\n       pgd.addClass(\"wordcount\", WordCount.class, \n                    \"A map/reduce program that counts the words in the input files.\");\n+      pgd.addClass(\"wordmean\", WordMean.class,\n+                   \"A map/reduce program that counts the average length of the words in the input files.\");\n+      pgd.addClass(\"wordmedian\", WordMedian.class,\n+                   \"A map/reduce program that counts the median length of the words in the input files.\");\n+      pgd.addClass(\"wordstandarddeviation\", WordStandardDeviation.class,\n+                   \"A map/reduce program that counts the standard deviation of the length of the words in the input files.\");\n       pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                    \"An Aggregate based map/reduce program that counts the words in the input files.\");\n       pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                    \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n       pgd.addClass(\"grep\", Grep.class, \n                    \"A map/reduce program that counts the matches of a regex in the input.\");\n       pgd.addClass(\"randomwriter\", RandomWriter.class, \n                    \"A map/reduce program that writes 10GB of random data per node.\");\n       pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n       \"A map/reduce program that writes 10GB of random textual data per node.\");\n       pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n \n       pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n       pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n       pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n \n       pgd.addClass(\"pentomino\", DistributedPentomino.class,\n       \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n       pgd.addClass(\"secondarysort\", SecondarySort.class,\n                    \"An example defining a secondary sort to the reduce.\");\n       pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n       pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n       pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n       pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n       pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n       pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n       pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n       exitCode \u003d pgd.driver(argv);\n     }\n     catch(Throwable e){\n       e.printStackTrace();\n     }\n     \n     System.exit(exitCode);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]){\n    int exitCode \u003d -1;\n    ProgramDriver pgd \u003d new ProgramDriver();\n    try {\n      pgd.addClass(\"wordcount\", WordCount.class, \n                   \"A map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"wordmean\", WordMean.class,\n                   \"A map/reduce program that counts the average length of the words in the input files.\");\n      pgd.addClass(\"wordmedian\", WordMedian.class,\n                   \"A map/reduce program that counts the median length of the words in the input files.\");\n      pgd.addClass(\"wordstandarddeviation\", WordStandardDeviation.class,\n                   \"A map/reduce program that counts the standard deviation of the length of the words in the input files.\");\n      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n      pgd.addClass(\"grep\", Grep.class, \n                   \"A map/reduce program that counts the matches of a regex in the input.\");\n      pgd.addClass(\"randomwriter\", RandomWriter.class, \n                   \"A map/reduce program that writes 10GB of random data per node.\");\n      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n      \"A map/reduce program that writes 10GB of random textual data per node.\");\n      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n\n      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n\n      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n      pgd.addClass(\"secondarysort\", SecondarySort.class,\n                   \"An example defining a secondary sort to the reduce.\");\n      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n      exitCode \u003d pgd.driver(argv);\n    }\n    catch(Throwable e){\n      e.printStackTrace();\n    }\n    \n    System.exit(exitCode);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/ExampleDriver.java",
      "extendedDetails": {}
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String argv[]){\n    int exitCode \u003d -1;\n    ProgramDriver pgd \u003d new ProgramDriver();\n    try {\n      pgd.addClass(\"wordcount\", WordCount.class, \n                   \"A map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n      pgd.addClass(\"grep\", Grep.class, \n                   \"A map/reduce program that counts the matches of a regex in the input.\");\n      pgd.addClass(\"randomwriter\", RandomWriter.class, \n                   \"A map/reduce program that writes 10GB of random data per node.\");\n      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n      \"A map/reduce program that writes 10GB of random textual data per node.\");\n      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n\n      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n\n      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n      pgd.addClass(\"secondarysort\", SecondarySort.class,\n                   \"An example defining a secondary sort to the reduce.\");\n      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n      exitCode \u003d pgd.driver(argv);\n    }\n    catch(Throwable e){\n      e.printStackTrace();\n    }\n    \n    System.exit(exitCode);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/ExampleDriver.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/ExampleDriver.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/ExampleDriver.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String argv[]){\n    int exitCode \u003d -1;\n    ProgramDriver pgd \u003d new ProgramDriver();\n    try {\n      pgd.addClass(\"wordcount\", WordCount.class, \n                   \"A map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n      pgd.addClass(\"grep\", Grep.class, \n                   \"A map/reduce program that counts the matches of a regex in the input.\");\n      pgd.addClass(\"randomwriter\", RandomWriter.class, \n                   \"A map/reduce program that writes 10GB of random data per node.\");\n      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n      \"A map/reduce program that writes 10GB of random textual data per node.\");\n      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n\n      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n\n      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n      pgd.addClass(\"secondarysort\", SecondarySort.class,\n                   \"An example defining a secondary sort to the reduce.\");\n      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n      exitCode \u003d pgd.driver(argv);\n    }\n    catch(Throwable e){\n      e.printStackTrace();\n    }\n    \n    System.exit(exitCode);\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/ExampleDriver.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/ExampleDriver.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/ExampleDriver.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String argv[]){\n    int exitCode \u003d -1;\n    ProgramDriver pgd \u003d new ProgramDriver();\n    try {\n      pgd.addClass(\"wordcount\", WordCount.class, \n                   \"A map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n      pgd.addClass(\"grep\", Grep.class, \n                   \"A map/reduce program that counts the matches of a regex in the input.\");\n      pgd.addClass(\"randomwriter\", RandomWriter.class, \n                   \"A map/reduce program that writes 10GB of random data per node.\");\n      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n      \"A map/reduce program that writes 10GB of random textual data per node.\");\n      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n\n      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n\n      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n      pgd.addClass(\"secondarysort\", SecondarySort.class,\n                   \"An example defining a secondary sort to the reduce.\");\n      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n      exitCode \u003d pgd.driver(argv);\n    }\n    catch(Throwable e){\n      e.printStackTrace();\n    }\n    \n    System.exit(exitCode);\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/ExampleDriver.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/ExampleDriver.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/ExampleDriver.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,41 @@\n+  public static void main(String argv[]){\n+    int exitCode \u003d -1;\n+    ProgramDriver pgd \u003d new ProgramDriver();\n+    try {\n+      pgd.addClass(\"wordcount\", WordCount.class, \n+                   \"A map/reduce program that counts the words in the input files.\");\n+      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n+                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n+      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n+                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n+      pgd.addClass(\"grep\", Grep.class, \n+                   \"A map/reduce program that counts the matches of a regex in the input.\");\n+      pgd.addClass(\"randomwriter\", RandomWriter.class, \n+                   \"A map/reduce program that writes 10GB of random data per node.\");\n+      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n+      \"A map/reduce program that writes 10GB of random textual data per node.\");\n+      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n+\n+      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n+      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n+      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n+\n+      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n+      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n+      pgd.addClass(\"secondarysort\", SecondarySort.class,\n+                   \"An example defining a secondary sort to the reduce.\");\n+      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n+      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n+      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n+      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n+      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n+      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n+      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n+      exitCode \u003d pgd.driver(argv);\n+    }\n+    catch(Throwable e){\n+      e.printStackTrace();\n+    }\n+    \n+    System.exit(exitCode);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]){\n    int exitCode \u003d -1;\n    ProgramDriver pgd \u003d new ProgramDriver();\n    try {\n      pgd.addClass(\"wordcount\", WordCount.class, \n                   \"A map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordcount\", AggregateWordCount.class, \n                   \"An Aggregate based map/reduce program that counts the words in the input files.\");\n      pgd.addClass(\"aggregatewordhist\", AggregateWordHistogram.class, \n                   \"An Aggregate based map/reduce program that computes the histogram of the words in the input files.\");\n      pgd.addClass(\"grep\", Grep.class, \n                   \"A map/reduce program that counts the matches of a regex in the input.\");\n      pgd.addClass(\"randomwriter\", RandomWriter.class, \n                   \"A map/reduce program that writes 10GB of random data per node.\");\n      pgd.addClass(\"randomtextwriter\", RandomTextWriter.class, \n      \"A map/reduce program that writes 10GB of random textual data per node.\");\n      pgd.addClass(\"sort\", Sort.class, \"A map/reduce program that sorts the data written by the random writer.\");\n\n      pgd.addClass(\"pi\", QuasiMonteCarlo.class, QuasiMonteCarlo.DESCRIPTION);\n      pgd.addClass(\"bbp\", BaileyBorweinPlouffe.class, BaileyBorweinPlouffe.DESCRIPTION);\n      pgd.addClass(\"distbbp\", DistBbp.class, DistBbp.DESCRIPTION);\n\n      pgd.addClass(\"pentomino\", DistributedPentomino.class,\n      \"A map/reduce tile laying program to find solutions to pentomino problems.\");\n      pgd.addClass(\"secondarysort\", SecondarySort.class,\n                   \"An example defining a secondary sort to the reduce.\");\n      pgd.addClass(\"sudoku\", Sudoku.class, \"A sudoku solver.\");\n      pgd.addClass(\"join\", Join.class, \"A job that effects a join over sorted, equally partitioned datasets\");\n      pgd.addClass(\"multifilewc\", MultiFileWordCount.class, \"A job that counts words from several files.\");\n      pgd.addClass(\"dbcount\", DBCountPageView.class, \"An example job that count the pageview counts from a database.\");\n      pgd.addClass(\"teragen\", TeraGen.class, \"Generate data for the terasort\");\n      pgd.addClass(\"terasort\", TeraSort.class, \"Run the terasort\");\n      pgd.addClass(\"teravalidate\", TeraValidate.class, \"Checking results of terasort\");\n      exitCode \u003d pgd.driver(argv);\n    }\n    catch(Throwable e){\n      e.printStackTrace();\n    }\n    \n    System.exit(exitCode);\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/ExampleDriver.java"
    }
  }
}