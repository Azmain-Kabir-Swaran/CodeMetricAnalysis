{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodesListManager.java",
  "functionName": "isUntrackedNode",
  "functionId": "isUntrackedNode___hostName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
  "functionStartLine": 605,
  "functionEndLine": 615,
  "numCommitsSeen": 33,
  "timeTaken": 1984,
  "changeHistory": [
    "d87a63a9019d74a1c338c724e050952843a153e5",
    "feb90ffcca536e7deac50976b8a8774450fe089f",
    "d0da13229cf692579c8c9db47a93f6c6255392c8"
  ],
  "changeHistoryShort": {
    "d87a63a9019d74a1c338c724e050952843a153e5": "Ybodychange",
    "feb90ffcca536e7deac50976b8a8774450fe089f": "Ybodychange",
    "d0da13229cf692579c8c9db47a93f6c6255392c8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d87a63a9019d74a1c338c724e050952843a153e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14412. HostsFileReader#getHostDetails is very expensive on large clusters. Contributed by Jason Lowe.\n",
      "commitDate": "16/05/17 7:57 PM",
      "commitName": "d87a63a9019d74a1c338c724e050952843a153e5",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "04/11/16 3:20 PM",
      "commitNameOld": "6bb741ff0ef208a8628bc64d6537999d4cd67955",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 193.19,
      "commitsBetweenForRepo": 1086,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public boolean isUntrackedNode(String hostName) {\n     String ip \u003d resolver.resolve(hostName);\n \n-    Set\u003cString\u003e hostsList \u003d new HashSet\u003cString\u003e();\n-    Set\u003cString\u003e excludeList \u003d new HashSet\u003cString\u003e();\n-    hostsReader.getHostDetails(hostsList, excludeList);\n+    HostDetails hostDetails \u003d hostsReader.getHostDetails();\n+    Set\u003cString\u003e hostsList \u003d hostDetails.getIncludedHosts();\n+    Set\u003cString\u003e excludeList \u003d hostDetails.getExcludedHosts();\n \n     return !hostsList.isEmpty() \u0026\u0026 !hostsList.contains(hostName)\n         \u0026\u0026 !hostsList.contains(ip) \u0026\u0026 !excludeList.contains(hostName)\n         \u0026\u0026 !excludeList.contains(ip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isUntrackedNode(String hostName) {\n    String ip \u003d resolver.resolve(hostName);\n\n    HostDetails hostDetails \u003d hostsReader.getHostDetails();\n    Set\u003cString\u003e hostsList \u003d hostDetails.getIncludedHosts();\n    Set\u003cString\u003e excludeList \u003d hostDetails.getExcludedHosts();\n\n    return !hostsList.isEmpty() \u0026\u0026 !hostsList.contains(hostName)\n        \u0026\u0026 !hostsList.contains(ip) \u0026\u0026 !excludeList.contains(hostName)\n        \u0026\u0026 !excludeList.contains(ip);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "feb90ffcca536e7deac50976b8a8774450fe089f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4002. Make ResourceTrackerService#nodeHeartbeat more concurrent. Contributed by Rohith Sharma K S \u0026 Zhiguo Hong\n",
      "commitDate": "19/05/16 1:01 PM",
      "commitName": "feb90ffcca536e7deac50976b8a8774450fe089f",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/05/16 7:07 AM",
      "commitNameOld": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 14.25,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   public boolean isUntrackedNode(String hostName) {\n-    boolean untracked;\n     String ip \u003d resolver.resolve(hostName);\n \n-    synchronized (hostsReader) {\n-      Set\u003cString\u003e hostsList \u003d hostsReader.getHosts();\n-      Set\u003cString\u003e excludeList \u003d hostsReader.getExcludedHosts();\n-      untracked \u003d !hostsList.isEmpty() \u0026\u0026\n-          !hostsList.contains(hostName) \u0026\u0026 !hostsList.contains(ip) \u0026\u0026\n-          !excludeList.contains(hostName) \u0026\u0026 !excludeList.contains(ip);\n-    }\n-    return untracked;\n+    Set\u003cString\u003e hostsList \u003d new HashSet\u003cString\u003e();\n+    Set\u003cString\u003e excludeList \u003d new HashSet\u003cString\u003e();\n+    hostsReader.getHostDetails(hostsList, excludeList);\n+\n+    return !hostsList.isEmpty() \u0026\u0026 !hostsList.contains(hostName)\n+        \u0026\u0026 !hostsList.contains(ip) \u0026\u0026 !excludeList.contains(hostName)\n+        \u0026\u0026 !excludeList.contains(ip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isUntrackedNode(String hostName) {\n    String ip \u003d resolver.resolve(hostName);\n\n    Set\u003cString\u003e hostsList \u003d new HashSet\u003cString\u003e();\n    Set\u003cString\u003e excludeList \u003d new HashSet\u003cString\u003e();\n    hostsReader.getHostDetails(hostsList, excludeList);\n\n    return !hostsList.isEmpty() \u0026\u0026 !hostsList.contains(hostName)\n        \u0026\u0026 !hostsList.contains(ip) \u0026\u0026 !excludeList.contains(hostName)\n        \u0026\u0026 !excludeList.contains(ip);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "d0da13229cf692579c8c9db47a93f6c6255392c8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/05/16 7:07 AM",
      "commitName": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,13 @@\n+  public boolean isUntrackedNode(String hostName) {\n+    boolean untracked;\n+    String ip \u003d resolver.resolve(hostName);\n+\n+    synchronized (hostsReader) {\n+      Set\u003cString\u003e hostsList \u003d hostsReader.getHosts();\n+      Set\u003cString\u003e excludeList \u003d hostsReader.getExcludedHosts();\n+      untracked \u003d !hostsList.isEmpty() \u0026\u0026\n+          !hostsList.contains(hostName) \u0026\u0026 !hostsList.contains(ip) \u0026\u0026\n+          !excludeList.contains(hostName) \u0026\u0026 !excludeList.contains(ip);\n+    }\n+    return untracked;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isUntrackedNode(String hostName) {\n    boolean untracked;\n    String ip \u003d resolver.resolve(hostName);\n\n    synchronized (hostsReader) {\n      Set\u003cString\u003e hostsList \u003d hostsReader.getHosts();\n      Set\u003cString\u003e excludeList \u003d hostsReader.getExcludedHosts();\n      untracked \u003d !hostsList.isEmpty() \u0026\u0026\n          !hostsList.contains(hostName) \u0026\u0026 !hostsList.contains(ip) \u0026\u0026\n          !excludeList.contains(hostName) \u0026\u0026 !excludeList.contains(ip);\n    }\n    return untracked;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java"
    }
  }
}