{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "clearAllPendingReduceRequests",
  "functionId": "clearAllPendingReduceRequests",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 597,
  "functionEndLine": 599,
  "numCommitsSeen": 82,
  "timeTaken": 1931,
  "changeHistory": [
    "8d48266720dcf0e71cfd87fef18b60a53aa1bef9",
    "4aa9b3e75ca86917125e56e1b438668273a5d87f"
  ],
  "changeHistoryShort": {
    "8d48266720dcf0e71cfd87fef18b60a53aa1bef9": "Ybodychange",
    "4aa9b3e75ca86917125e56e1b438668273a5d87f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8d48266720dcf0e71cfd87fef18b60a53aa1bef9": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6514. Fixed MapReduce ApplicationMaster to properly updated resources ask after ramping down of all reducers avoiding job hangs. Contributed by Varun Saxena and Wangda Tan.\n",
      "commitDate": "05/05/16 7:03 PM",
      "commitName": "8d48266720dcf0e71cfd87fef18b60a53aa1bef9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/04/16 11:00 AM",
      "commitNameOld": "8b2880c0b62102fc5c8b6962752f72cb2c416a01",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 21.34,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,3 @@\n   private void clearAllPendingReduceRequests() {\n-    LOG.info(\"Ramping down all scheduled reduces:\"\n-        + scheduledRequests.reduces.size());\n-    for (ContainerRequest req : scheduledRequests.reduces.values()) {\n-      pendingReduces.add(req);\n-    }\n-    scheduledRequests.reduces.clear();\n+    rampDownReduces(Integer.MAX_VALUE);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void clearAllPendingReduceRequests() {\n    rampDownReduces(Integer.MAX_VALUE);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "4aa9b3e75ca86917125e56e1b438668273a5d87f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6302. Incorrect headroom can lead to a deadlock between map and reduce allocations. (kasha)\n",
      "commitDate": "09/10/15 7:37 AM",
      "commitName": "4aa9b3e75ca86917125e56e1b438668273a5d87f",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,8 @@\n+  private void clearAllPendingReduceRequests() {\n+    LOG.info(\"Ramping down all scheduled reduces:\"\n+        + scheduledRequests.reduces.size());\n+    for (ContainerRequest req : scheduledRequests.reduces.values()) {\n+      pendingReduces.add(req);\n+    }\n+    scheduledRequests.reduces.clear();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void clearAllPendingReduceRequests() {\n    LOG.info(\"Ramping down all scheduled reduces:\"\n        + scheduledRequests.reduces.size());\n    for (ContainerRequest req : scheduledRequests.reduces.values()) {\n      pendingReduces.add(req);\n    }\n    scheduledRequests.reduces.clear();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}