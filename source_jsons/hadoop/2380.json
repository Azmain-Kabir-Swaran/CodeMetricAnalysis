{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___resp-GetEditsFromTxidResponseProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 858,
  "functionEndLine": 964,
  "numCommitsSeen": 226,
  "timeTaken": 6892,
  "changeHistory": [
    "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "979c9ca2ca89e99dc7165abfa29c78d66de43d9a",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
    "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
    "75a326aaff8c92349701d9b3473c3070b8c2be44",
    "6104520369045dfaa4b543cbad21236ed322249b",
    "faa4455be512e070fa420084be8d1be5c72f3b08"
  ],
  "changeHistoryShort": {
    "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymovefromfile",
    "979c9ca2ca89e99dc7165abfa29c78d66de43d9a": "Ybodychange",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Ybodychange",
    "6e13fc62e1f284f22fd0089f06ce281198bc7c2a": "Ybodychange",
    "75a326aaff8c92349701d9b3473c3070b8c2be44": "Ymultichange(Yreturntypechange,Ybodychange)",
    "6104520369045dfaa4b543cbad21236ed322249b": "Ybodychange",
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13956. iNotify should include information to identify a file as either replicated or erasure coded. Contributed by Hrishikesh Gadre.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "10/10/18 10:23 AM",
      "commitName": "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313",
      "commitAuthor": "Hrishikesh Gadre",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 59.3,
      "commitsBetweenForRepo": 512,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,103 +1,107 @@\n   public static EventBatchList convert(GetEditsFromTxidResponseProto resp)\n       throws IOException {\n     final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n     final long firstTxid \u003d list.getFirstTxid();\n     final long lastTxid \u003d list.getLastTxid();\n \n     List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n     if (list.getEventsList().size() \u003e 0) {\n       throw new IOException(\"Can\u0027t handle old inotify server response.\");\n     }\n     for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n       long txid \u003d bp.getTxid();\n       if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n         throw new IOException(\"Error converting TxidResponseProto: got a \" +\n             \"transaction id \" + txid + \" that was outside the range of [\" +\n             firstTxid + \", \" + lastTxid + \"].\");\n       }\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       for (InotifyProtos.EventProto p : bp.getEventsList()) {\n         switch (p.getType()) {\n         case EVENT_CLOSE:\n           InotifyProtos.CloseEventProto close \u003d\n               InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n           events.add(new Event.CloseEvent(close.getPath(),\n               close.getFileSize(), close.getTimestamp()));\n           break;\n         case EVENT_CREATE:\n           InotifyProtos.CreateEventProto create \u003d\n               InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n-          events.add(new Event.CreateEvent.Builder()\n-              .iNodeType(createTypeConvert(create.getType()))\n-              .path(create.getPath())\n-              .ctime(create.getCtime())\n-              .ownerName(create.getOwnerName())\n-              .groupName(create.getGroupName())\n-              .perms(convert(create.getPerms()))\n-              .replication(create.getReplication())\n-              .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n-                  create.getSymlinkTarget())\n-              .defaultBlockSize(create.getDefaultBlockSize())\n-              .overwrite(create.getOverwrite()).build());\n+          Event.CreateEvent.Builder builder \u003d new Event.CreateEvent.Builder()\n+                  .iNodeType(createTypeConvert(create.getType()))\n+                  .path(create.getPath())\n+                  .ctime(create.getCtime())\n+                  .ownerName(create.getOwnerName())\n+                  .groupName(create.getGroupName())\n+                  .perms(convert(create.getPerms()))\n+                  .replication(create.getReplication())\n+                  .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n+                          create.getSymlinkTarget())\n+                  .defaultBlockSize(create.getDefaultBlockSize())\n+                  .overwrite(create.getOverwrite());\n+          if (create.hasErasureCoded()) {\n+            builder.erasureCoded(create.getErasureCoded());\n+          }\n+          events.add(builder.build());\n           break;\n         case EVENT_METADATA:\n           InotifyProtos.MetadataUpdateEventProto meta \u003d\n               InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n           events.add(new Event.MetadataUpdateEvent.Builder()\n               .path(meta.getPath())\n               .metadataType(metadataUpdateTypeConvert(meta.getType()))\n               .mtime(meta.getMtime())\n               .atime(meta.getAtime())\n               .replication(meta.getReplication())\n               .ownerName(\n                   meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n               .groupName(\n                   meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n               .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n               .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                   meta.getAclsList()))\n               .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                   meta.getXAttrsList()))\n               .xAttrsRemoved(meta.getXAttrsRemoved())\n               .build());\n           break;\n         case EVENT_RENAME:\n           InotifyProtos.RenameEventProto rename \u003d\n               InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n           events.add(new Event.RenameEvent.Builder()\n               .srcPath(rename.getSrcPath())\n               .dstPath(rename.getDestPath())\n               .timestamp(rename.getTimestamp())\n               .build());\n           break;\n         case EVENT_APPEND:\n           InotifyProtos.AppendEventProto append \u003d\n               InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n           events.add(new Event.AppendEvent.Builder().path(append.getPath())\n               .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n               .build());\n           break;\n         case EVENT_UNLINK:\n           InotifyProtos.UnlinkEventProto unlink \u003d\n               InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n           events.add(new Event.UnlinkEvent.Builder()\n               .path(unlink.getPath())\n               .timestamp(unlink.getTimestamp())\n               .build());\n           break;\n         case EVENT_TRUNCATE:\n           InotifyProtos.TruncateEventProto truncate \u003d\n               InotifyProtos.TruncateEventProto.parseFrom(p.getContents());\n           events.add(new Event.TruncateEvent(truncate.getPath(),\n               truncate.getFileSize(), truncate.getTimestamp()));\n           break;\n         default:\n           throw new RuntimeException(\"Unexpected inotify event type: \" +\n               p.getType());\n         }\n       }\n       batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n     }\n     return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp)\n      throws IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n        case EVENT_CLOSE:\n          InotifyProtos.CloseEventProto close \u003d\n              InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n          events.add(new Event.CloseEvent(close.getPath(),\n              close.getFileSize(), close.getTimestamp()));\n          break;\n        case EVENT_CREATE:\n          InotifyProtos.CreateEventProto create \u003d\n              InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n          Event.CreateEvent.Builder builder \u003d new Event.CreateEvent.Builder()\n                  .iNodeType(createTypeConvert(create.getType()))\n                  .path(create.getPath())\n                  .ctime(create.getCtime())\n                  .ownerName(create.getOwnerName())\n                  .groupName(create.getGroupName())\n                  .perms(convert(create.getPerms()))\n                  .replication(create.getReplication())\n                  .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                          create.getSymlinkTarget())\n                  .defaultBlockSize(create.getDefaultBlockSize())\n                  .overwrite(create.getOverwrite());\n          if (create.hasErasureCoded()) {\n            builder.erasureCoded(create.getErasureCoded());\n          }\n          events.add(builder.build());\n          break;\n        case EVENT_METADATA:\n          InotifyProtos.MetadataUpdateEventProto meta \u003d\n              InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n          events.add(new Event.MetadataUpdateEvent.Builder()\n              .path(meta.getPath())\n              .metadataType(metadataUpdateTypeConvert(meta.getType()))\n              .mtime(meta.getMtime())\n              .atime(meta.getAtime())\n              .replication(meta.getReplication())\n              .ownerName(\n                  meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n              .groupName(\n                  meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n              .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n              .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                  meta.getAclsList()))\n              .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                  meta.getXAttrsList()))\n              .xAttrsRemoved(meta.getXAttrsRemoved())\n              .build());\n          break;\n        case EVENT_RENAME:\n          InotifyProtos.RenameEventProto rename \u003d\n              InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n          events.add(new Event.RenameEvent.Builder()\n              .srcPath(rename.getSrcPath())\n              .dstPath(rename.getDestPath())\n              .timestamp(rename.getTimestamp())\n              .build());\n          break;\n        case EVENT_APPEND:\n          InotifyProtos.AppendEventProto append \u003d\n              InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n          events.add(new Event.AppendEvent.Builder().path(append.getPath())\n              .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n              .build());\n          break;\n        case EVENT_UNLINK:\n          InotifyProtos.UnlinkEventProto unlink \u003d\n              InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n          events.add(new Event.UnlinkEvent.Builder()\n              .path(unlink.getPath())\n              .timestamp(unlink.getTimestamp())\n              .build());\n          break;\n        case EVENT_TRUNCATE:\n          InotifyProtos.TruncateEventProto truncate \u003d\n              InotifyProtos.TruncateEventProto.parseFrom(p.getContents());\n          events.add(new Event.TruncateEvent(truncate.getPath(),\n              truncate.getFileSize(), truncate.getTimestamp()));\n          break;\n        default:\n          throw new RuntimeException(\"Unexpected inotify event type: \" +\n              p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/09/15 5:51 PM",
      "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n          case EVENT_CLOSE:\n            InotifyProtos.CloseEventProto close \u003d\n                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n            events.add(new Event.CloseEvent(close.getPath(),\n                close.getFileSize(), close.getTimestamp()));\n            break;\n          case EVENT_CREATE:\n            InotifyProtos.CreateEventProto create \u003d\n                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n            events.add(new Event.CreateEvent.Builder()\n                .iNodeType(createTypeConvert(create.getType()))\n                .path(create.getPath())\n                .ctime(create.getCtime())\n                .ownerName(create.getOwnerName())\n                .groupName(create.getGroupName())\n                .perms(convert(create.getPerms()))\n                .replication(create.getReplication())\n                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                    create.getSymlinkTarget())\n                .defaultBlockSize(create.getDefaultBlockSize())\n                .overwrite(create.getOverwrite()).build());\n            break;\n          case EVENT_METADATA:\n            InotifyProtos.MetadataUpdateEventProto meta \u003d\n                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n            events.add(new Event.MetadataUpdateEvent.Builder()\n                .path(meta.getPath())\n                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                .mtime(meta.getMtime())\n                .atime(meta.getAtime())\n                .replication(meta.getReplication())\n                .ownerName(\n                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                .groupName(\n                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                    meta.getAclsList()))\n                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                    meta.getXAttrsList()))\n                .xAttrsRemoved(meta.getXAttrsRemoved())\n                .build());\n            break;\n          case EVENT_RENAME:\n            InotifyProtos.RenameEventProto rename \u003d\n                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n            events.add(new Event.RenameEvent.Builder()\n                  .srcPath(rename.getSrcPath())\n                  .dstPath(rename.getDestPath())\n                  .timestamp(rename.getTimestamp())\n                  .build());\n            break;\n          case EVENT_APPEND:\n            InotifyProtos.AppendEventProto append \u003d\n                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n            events.add(new Event.AppendEvent.Builder().path(append.getPath())\n                .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n                .build());\n            break;\n          case EVENT_UNLINK:\n            InotifyProtos.UnlinkEventProto unlink \u003d\n                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n            events.add(new Event.UnlinkEvent.Builder()\n                  .path(unlink.getPath())\n                  .timestamp(unlink.getTimestamp())\n                  .build());\n            break;\n          case EVENT_TRUNCATE:\n            InotifyProtos.TruncateEventProto truncate \u003d\n                InotifyProtos.TruncateEventProto.parseFrom(p.getContents());\n            events.add(new Event.TruncateEvent(truncate.getPath(),\n                truncate.getFileSize(), truncate.getTimestamp()));\n            break;\n          default:\n            throw new RuntimeException(\"Unexpected inotify event type: \" +\n                p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
        "oldMethodName": "convert",
        "newMethodName": "convert"
      }
    },
    "979c9ca2ca89e99dc7165abfa29c78d66de43d9a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8742. Inotify: Support event for OP_TRUNCATE. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "14/07/15 12:42 PM",
      "commitName": "979c9ca2ca89e99dc7165abfa29c78d66de43d9a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "12/06/15 11:17 AM",
      "commitNameOld": "12b5b06c063d93e6c683c9b6fac9a96912f59e59",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 32.06,
      "commitsBetweenForRepo": 208,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,103 @@\n   public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n     IOException {\n     final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n     final long firstTxid \u003d list.getFirstTxid();\n     final long lastTxid \u003d list.getLastTxid();\n \n     List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n     if (list.getEventsList().size() \u003e 0) {\n       throw new IOException(\"Can\u0027t handle old inotify server response.\");\n     }\n     for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n       long txid \u003d bp.getTxid();\n       if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n         throw new IOException(\"Error converting TxidResponseProto: got a \" +\n             \"transaction id \" + txid + \" that was outside the range of [\" +\n             firstTxid + \", \" + lastTxid + \"].\");\n       }\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       for (InotifyProtos.EventProto p : bp.getEventsList()) {\n         switch (p.getType()) {\n           case EVENT_CLOSE:\n             InotifyProtos.CloseEventProto close \u003d\n                 InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n             events.add(new Event.CloseEvent(close.getPath(),\n                 close.getFileSize(), close.getTimestamp()));\n             break;\n           case EVENT_CREATE:\n             InotifyProtos.CreateEventProto create \u003d\n                 InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n             events.add(new Event.CreateEvent.Builder()\n                 .iNodeType(createTypeConvert(create.getType()))\n                 .path(create.getPath())\n                 .ctime(create.getCtime())\n                 .ownerName(create.getOwnerName())\n                 .groupName(create.getGroupName())\n                 .perms(convert(create.getPerms()))\n                 .replication(create.getReplication())\n                 .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                     create.getSymlinkTarget())\n                 .defaultBlockSize(create.getDefaultBlockSize())\n                 .overwrite(create.getOverwrite()).build());\n             break;\n           case EVENT_METADATA:\n             InotifyProtos.MetadataUpdateEventProto meta \u003d\n                 InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n             events.add(new Event.MetadataUpdateEvent.Builder()\n                 .path(meta.getPath())\n                 .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                 .mtime(meta.getMtime())\n                 .atime(meta.getAtime())\n                 .replication(meta.getReplication())\n                 .ownerName(\n                     meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                 .groupName(\n                     meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                 .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                 .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                     meta.getAclsList()))\n                 .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                     meta.getXAttrsList()))\n                 .xAttrsRemoved(meta.getXAttrsRemoved())\n                 .build());\n             break;\n           case EVENT_RENAME:\n             InotifyProtos.RenameEventProto rename \u003d\n                 InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n             events.add(new Event.RenameEvent.Builder()\n                   .srcPath(rename.getSrcPath())\n                   .dstPath(rename.getDestPath())\n                   .timestamp(rename.getTimestamp())\n                   .build());\n             break;\n           case EVENT_APPEND:\n             InotifyProtos.AppendEventProto append \u003d\n                 InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n             events.add(new Event.AppendEvent.Builder().path(append.getPath())\n                 .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n                 .build());\n             break;\n           case EVENT_UNLINK:\n             InotifyProtos.UnlinkEventProto unlink \u003d\n                 InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n             events.add(new Event.UnlinkEvent.Builder()\n                   .path(unlink.getPath())\n                   .timestamp(unlink.getTimestamp())\n                   .build());\n             break;\n+          case EVENT_TRUNCATE:\n+            InotifyProtos.TruncateEventProto truncate \u003d\n+                InotifyProtos.TruncateEventProto.parseFrom(p.getContents());\n+            events.add(new Event.TruncateEvent(truncate.getPath(),\n+                truncate.getFileSize(), truncate.getTimestamp()));\n+            break;\n           default:\n             throw new RuntimeException(\"Unexpected inotify event type: \" +\n                 p.getType());\n         }\n       }\n       batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n     }\n     return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n          case EVENT_CLOSE:\n            InotifyProtos.CloseEventProto close \u003d\n                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n            events.add(new Event.CloseEvent(close.getPath(),\n                close.getFileSize(), close.getTimestamp()));\n            break;\n          case EVENT_CREATE:\n            InotifyProtos.CreateEventProto create \u003d\n                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n            events.add(new Event.CreateEvent.Builder()\n                .iNodeType(createTypeConvert(create.getType()))\n                .path(create.getPath())\n                .ctime(create.getCtime())\n                .ownerName(create.getOwnerName())\n                .groupName(create.getGroupName())\n                .perms(convert(create.getPerms()))\n                .replication(create.getReplication())\n                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                    create.getSymlinkTarget())\n                .defaultBlockSize(create.getDefaultBlockSize())\n                .overwrite(create.getOverwrite()).build());\n            break;\n          case EVENT_METADATA:\n            InotifyProtos.MetadataUpdateEventProto meta \u003d\n                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n            events.add(new Event.MetadataUpdateEvent.Builder()\n                .path(meta.getPath())\n                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                .mtime(meta.getMtime())\n                .atime(meta.getAtime())\n                .replication(meta.getReplication())\n                .ownerName(\n                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                .groupName(\n                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                    meta.getAclsList()))\n                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                    meta.getXAttrsList()))\n                .xAttrsRemoved(meta.getXAttrsRemoved())\n                .build());\n            break;\n          case EVENT_RENAME:\n            InotifyProtos.RenameEventProto rename \u003d\n                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n            events.add(new Event.RenameEvent.Builder()\n                  .srcPath(rename.getSrcPath())\n                  .dstPath(rename.getDestPath())\n                  .timestamp(rename.getTimestamp())\n                  .build());\n            break;\n          case EVENT_APPEND:\n            InotifyProtos.AppendEventProto append \u003d\n                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n            events.add(new Event.AppendEvent.Builder().path(append.getPath())\n                .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n                .build());\n            break;\n          case EVENT_UNLINK:\n            InotifyProtos.UnlinkEventProto unlink \u003d\n                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n            events.add(new Event.UnlinkEvent.Builder()\n                  .path(unlink.getPath())\n                  .timestamp(unlink.getTimestamp())\n                  .build());\n            break;\n          case EVENT_TRUNCATE:\n            InotifyProtos.TruncateEventProto truncate \u003d\n                InotifyProtos.TruncateEventProto.parseFrom(p.getContents());\n            events.add(new Event.TruncateEvent(truncate.getPath(),\n                truncate.getFileSize(), truncate.getTimestamp()));\n            break;\n          default:\n            throw new RuntimeException(\"Unexpected inotify event type: \" +\n                p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "13/01/15 12:24 AM",
      "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 14.52,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,97 @@\n   public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n     IOException {\n     final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n     final long firstTxid \u003d list.getFirstTxid();\n     final long lastTxid \u003d list.getLastTxid();\n \n     List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n     if (list.getEventsList().size() \u003e 0) {\n       throw new IOException(\"Can\u0027t handle old inotify server response.\");\n     }\n     for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n       long txid \u003d bp.getTxid();\n       if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n         throw new IOException(\"Error converting TxidResponseProto: got a \" +\n             \"transaction id \" + txid + \" that was outside the range of [\" +\n             firstTxid + \", \" + lastTxid + \"].\");\n       }\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       for (InotifyProtos.EventProto p : bp.getEventsList()) {\n         switch (p.getType()) {\n           case EVENT_CLOSE:\n             InotifyProtos.CloseEventProto close \u003d\n                 InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n             events.add(new Event.CloseEvent(close.getPath(),\n                 close.getFileSize(), close.getTimestamp()));\n             break;\n           case EVENT_CREATE:\n             InotifyProtos.CreateEventProto create \u003d\n                 InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n             events.add(new Event.CreateEvent.Builder()\n                 .iNodeType(createTypeConvert(create.getType()))\n                 .path(create.getPath())\n                 .ctime(create.getCtime())\n                 .ownerName(create.getOwnerName())\n                 .groupName(create.getGroupName())\n                 .perms(convert(create.getPerms()))\n                 .replication(create.getReplication())\n                 .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                     create.getSymlinkTarget())\n                 .defaultBlockSize(create.getDefaultBlockSize())\n                 .overwrite(create.getOverwrite()).build());\n             break;\n           case EVENT_METADATA:\n             InotifyProtos.MetadataUpdateEventProto meta \u003d\n                 InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n             events.add(new Event.MetadataUpdateEvent.Builder()\n                 .path(meta.getPath())\n                 .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                 .mtime(meta.getMtime())\n                 .atime(meta.getAtime())\n                 .replication(meta.getReplication())\n                 .ownerName(\n                     meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                 .groupName(\n                     meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                 .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                 .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                     meta.getAclsList()))\n                 .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                     meta.getXAttrsList()))\n                 .xAttrsRemoved(meta.getXAttrsRemoved())\n                 .build());\n             break;\n           case EVENT_RENAME:\n             InotifyProtos.RenameEventProto rename \u003d\n                 InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n             events.add(new Event.RenameEvent.Builder()\n                   .srcPath(rename.getSrcPath())\n                   .dstPath(rename.getDestPath())\n                   .timestamp(rename.getTimestamp())\n                   .build());\n             break;\n           case EVENT_APPEND:\n-            InotifyProtos.AppendEventProto reopen \u003d\n+            InotifyProtos.AppendEventProto append \u003d\n                 InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n-            events.add(new Event.AppendEvent.Builder()\n-                  .path(reopen.getPath())\n-                  .build());\n+            events.add(new Event.AppendEvent.Builder().path(append.getPath())\n+                .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n+                .build());\n             break;\n           case EVENT_UNLINK:\n             InotifyProtos.UnlinkEventProto unlink \u003d\n                 InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n             events.add(new Event.UnlinkEvent.Builder()\n                   .path(unlink.getPath())\n                   .timestamp(unlink.getTimestamp())\n                   .build());\n             break;\n           default:\n             throw new RuntimeException(\"Unexpected inotify event type: \" +\n                 p.getType());\n         }\n       }\n       batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n     }\n     return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n          case EVENT_CLOSE:\n            InotifyProtos.CloseEventProto close \u003d\n                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n            events.add(new Event.CloseEvent(close.getPath(),\n                close.getFileSize(), close.getTimestamp()));\n            break;\n          case EVENT_CREATE:\n            InotifyProtos.CreateEventProto create \u003d\n                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n            events.add(new Event.CreateEvent.Builder()\n                .iNodeType(createTypeConvert(create.getType()))\n                .path(create.getPath())\n                .ctime(create.getCtime())\n                .ownerName(create.getOwnerName())\n                .groupName(create.getGroupName())\n                .perms(convert(create.getPerms()))\n                .replication(create.getReplication())\n                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                    create.getSymlinkTarget())\n                .defaultBlockSize(create.getDefaultBlockSize())\n                .overwrite(create.getOverwrite()).build());\n            break;\n          case EVENT_METADATA:\n            InotifyProtos.MetadataUpdateEventProto meta \u003d\n                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n            events.add(new Event.MetadataUpdateEvent.Builder()\n                .path(meta.getPath())\n                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                .mtime(meta.getMtime())\n                .atime(meta.getAtime())\n                .replication(meta.getReplication())\n                .ownerName(\n                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                .groupName(\n                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                    meta.getAclsList()))\n                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                    meta.getXAttrsList()))\n                .xAttrsRemoved(meta.getXAttrsRemoved())\n                .build());\n            break;\n          case EVENT_RENAME:\n            InotifyProtos.RenameEventProto rename \u003d\n                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n            events.add(new Event.RenameEvent.Builder()\n                  .srcPath(rename.getSrcPath())\n                  .dstPath(rename.getDestPath())\n                  .timestamp(rename.getTimestamp())\n                  .build());\n            break;\n          case EVENT_APPEND:\n            InotifyProtos.AppendEventProto append \u003d\n                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n            events.add(new Event.AppendEvent.Builder().path(append.getPath())\n                .newBlock(append.hasNewBlock() \u0026\u0026 append.getNewBlock())\n                .build());\n            break;\n          case EVENT_UNLINK:\n            InotifyProtos.UnlinkEventProto unlink \u003d\n                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n            events.add(new Event.UnlinkEvent.Builder()\n                  .path(unlink.getPath())\n                  .timestamp(unlink.getTimestamp())\n                  .build());\n            break;\n          default:\n            throw new RuntimeException(\"Unexpected inotify event type: \" +\n                p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "6e13fc62e1f284f22fd0089f06ce281198bc7c2a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7513. HDFS inotify: add defaultBlockSize to CreateEvent (cmccabe)\n",
      "commitDate": "15/12/14 10:30 AM",
      "commitName": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "08/12/14 10:23 AM",
      "commitNameOld": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 7.01,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,89 +1,97 @@\n   public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n     IOException {\n     final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n     final long firstTxid \u003d list.getFirstTxid();\n     final long lastTxid \u003d list.getLastTxid();\n \n     List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n     if (list.getEventsList().size() \u003e 0) {\n       throw new IOException(\"Can\u0027t handle old inotify server response.\");\n     }\n     for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n       long txid \u003d bp.getTxid();\n       if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n         throw new IOException(\"Error converting TxidResponseProto: got a \" +\n             \"transaction id \" + txid + \" that was outside the range of [\" +\n             firstTxid + \", \" + lastTxid + \"].\");\n       }\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       for (InotifyProtos.EventProto p : bp.getEventsList()) {\n         switch (p.getType()) {\n           case EVENT_CLOSE:\n             InotifyProtos.CloseEventProto close \u003d\n                 InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n             events.add(new Event.CloseEvent(close.getPath(),\n                 close.getFileSize(), close.getTimestamp()));\n             break;\n           case EVENT_CREATE:\n             InotifyProtos.CreateEventProto create \u003d\n                 InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n             events.add(new Event.CreateEvent.Builder()\n                 .iNodeType(createTypeConvert(create.getType()))\n                 .path(create.getPath())\n                 .ctime(create.getCtime())\n                 .ownerName(create.getOwnerName())\n                 .groupName(create.getGroupName())\n                 .perms(convert(create.getPerms()))\n                 .replication(create.getReplication())\n                 .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                     create.getSymlinkTarget())\n+                .defaultBlockSize(create.getDefaultBlockSize())\n                 .overwrite(create.getOverwrite()).build());\n             break;\n           case EVENT_METADATA:\n             InotifyProtos.MetadataUpdateEventProto meta \u003d\n                 InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n             events.add(new Event.MetadataUpdateEvent.Builder()\n                 .path(meta.getPath())\n                 .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                 .mtime(meta.getMtime())\n                 .atime(meta.getAtime())\n                 .replication(meta.getReplication())\n                 .ownerName(\n                     meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                 .groupName(\n                     meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                 .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                 .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                     meta.getAclsList()))\n                 .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                     meta.getXAttrsList()))\n                 .xAttrsRemoved(meta.getXAttrsRemoved())\n                 .build());\n             break;\n           case EVENT_RENAME:\n             InotifyProtos.RenameEventProto rename \u003d\n                 InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n-            events.add(new Event.RenameEvent(rename.getSrcPath(),\n-                rename.getDestPath(), rename.getTimestamp()));\n+            events.add(new Event.RenameEvent.Builder()\n+                  .srcPath(rename.getSrcPath())\n+                  .dstPath(rename.getDestPath())\n+                  .timestamp(rename.getTimestamp())\n+                  .build());\n             break;\n           case EVENT_APPEND:\n             InotifyProtos.AppendEventProto reopen \u003d\n                 InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n-            events.add(new Event.AppendEvent(reopen.getPath()));\n+            events.add(new Event.AppendEvent.Builder()\n+                  .path(reopen.getPath())\n+                  .build());\n             break;\n           case EVENT_UNLINK:\n             InotifyProtos.UnlinkEventProto unlink \u003d\n                 InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n-            events.add(new Event.UnlinkEvent(unlink.getPath(),\n-                unlink.getTimestamp()));\n+            events.add(new Event.UnlinkEvent.Builder()\n+                  .path(unlink.getPath())\n+                  .timestamp(unlink.getTimestamp())\n+                  .build());\n             break;\n           default:\n             throw new RuntimeException(\"Unexpected inotify event type: \" +\n                 p.getType());\n         }\n       }\n       batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n     }\n     return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n          case EVENT_CLOSE:\n            InotifyProtos.CloseEventProto close \u003d\n                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n            events.add(new Event.CloseEvent(close.getPath(),\n                close.getFileSize(), close.getTimestamp()));\n            break;\n          case EVENT_CREATE:\n            InotifyProtos.CreateEventProto create \u003d\n                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n            events.add(new Event.CreateEvent.Builder()\n                .iNodeType(createTypeConvert(create.getType()))\n                .path(create.getPath())\n                .ctime(create.getCtime())\n                .ownerName(create.getOwnerName())\n                .groupName(create.getGroupName())\n                .perms(convert(create.getPerms()))\n                .replication(create.getReplication())\n                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                    create.getSymlinkTarget())\n                .defaultBlockSize(create.getDefaultBlockSize())\n                .overwrite(create.getOverwrite()).build());\n            break;\n          case EVENT_METADATA:\n            InotifyProtos.MetadataUpdateEventProto meta \u003d\n                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n            events.add(new Event.MetadataUpdateEvent.Builder()\n                .path(meta.getPath())\n                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                .mtime(meta.getMtime())\n                .atime(meta.getAtime())\n                .replication(meta.getReplication())\n                .ownerName(\n                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                .groupName(\n                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                    meta.getAclsList()))\n                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                    meta.getXAttrsList()))\n                .xAttrsRemoved(meta.getXAttrsRemoved())\n                .build());\n            break;\n          case EVENT_RENAME:\n            InotifyProtos.RenameEventProto rename \u003d\n                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n            events.add(new Event.RenameEvent.Builder()\n                  .srcPath(rename.getSrcPath())\n                  .dstPath(rename.getDestPath())\n                  .timestamp(rename.getTimestamp())\n                  .build());\n            break;\n          case EVENT_APPEND:\n            InotifyProtos.AppendEventProto reopen \u003d\n                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n            events.add(new Event.AppendEvent.Builder()\n                  .path(reopen.getPath())\n                  .build());\n            break;\n          case EVENT_UNLINK:\n            InotifyProtos.UnlinkEventProto unlink \u003d\n                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n            events.add(new Event.UnlinkEvent.Builder()\n                  .path(unlink.getPath())\n                  .timestamp(unlink.getTimestamp())\n                  .build());\n            break;\n          default:\n            throw new RuntimeException(\"Unexpected inotify event type: \" +\n                p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "75a326aaff8c92349701d9b3473c3070b8c2be44": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
      "commitDate": "02/12/14 5:15 PM",
      "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
          "commitDate": "02/12/14 5:15 PM",
          "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "28/10/14 6:11 AM",
          "commitNameOld": "58c0bb9ed9f4a2491395b63c68046562a73526c9",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 35.5,
          "commitsBetweenForRepo": 298,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,71 +1,89 @@\n-  public static EventsList convert(GetEditsFromTxidResponseProto resp) throws\n+  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n     IOException {\n-    List\u003cEvent\u003e events \u003d Lists.newArrayList();\n-    for (InotifyProtos.EventProto p : resp.getEventsList().getEventsList()) {\n-      switch(p.getType()) {\n-      case EVENT_CLOSE:\n-        InotifyProtos.CloseEventProto close \u003d\n-            InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n-        events.add(new Event.CloseEvent(close.getPath(), close.getFileSize(),\n-            close.getTimestamp()));\n-        break;\n-      case EVENT_CREATE:\n-        InotifyProtos.CreateEventProto create \u003d\n-            InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n-        events.add(new Event.CreateEvent.Builder()\n-            .iNodeType(createTypeConvert(create.getType()))\n-            .path(create.getPath())\n-            .ctime(create.getCtime())\n-            .ownerName(create.getOwnerName())\n-            .groupName(create.getGroupName())\n-            .perms(convert(create.getPerms()))\n-            .replication(create.getReplication())\n-            .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n-            create.getSymlinkTarget())\n-            .overwrite(create.getOverwrite()).build());\n-        break;\n-      case EVENT_METADATA:\n-        InotifyProtos.MetadataUpdateEventProto meta \u003d\n-            InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n-        events.add(new Event.MetadataUpdateEvent.Builder()\n-            .path(meta.getPath())\n-            .metadataType(metadataUpdateTypeConvert(meta.getType()))\n-            .mtime(meta.getMtime())\n-            .atime(meta.getAtime())\n-            .replication(meta.getReplication())\n-            .ownerName(\n-                meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n-            .groupName(\n-                meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n-            .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n-            .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n-                meta.getAclsList()))\n-            .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n-                meta.getXAttrsList()))\n-            .xAttrsRemoved(meta.getXAttrsRemoved())\n-            .build());\n-        break;\n-      case EVENT_RENAME:\n-        InotifyProtos.RenameEventProto rename \u003d\n-            InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n-        events.add(new Event.RenameEvent(rename.getSrcPath(), rename.getDestPath(),\n-            rename.getTimestamp()));\n-        break;\n-      case EVENT_APPEND:\n-        InotifyProtos.AppendEventProto reopen \u003d\n-            InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n-        events.add(new Event.AppendEvent(reopen.getPath()));\n-        break;\n-      case EVENT_UNLINK:\n-        InotifyProtos.UnlinkEventProto unlink \u003d\n-            InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n-        events.add(new Event.UnlinkEvent(unlink.getPath(), unlink.getTimestamp()));\n-        break;\n-      default:\n-        throw new RuntimeException(\"Unexpected inotify event type: \" +\n-            p.getType());\n-      }\n+    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n+    final long firstTxid \u003d list.getFirstTxid();\n+    final long lastTxid \u003d list.getLastTxid();\n+\n+    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n+    if (list.getEventsList().size() \u003e 0) {\n+      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n     }\n-    return new EventsList(events, resp.getEventsList().getFirstTxid(),\n+    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n+      long txid \u003d bp.getTxid();\n+      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n+        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n+            \"transaction id \" + txid + \" that was outside the range of [\" +\n+            firstTxid + \", \" + lastTxid + \"].\");\n+      }\n+      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n+      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n+        switch (p.getType()) {\n+          case EVENT_CLOSE:\n+            InotifyProtos.CloseEventProto close \u003d\n+                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n+            events.add(new Event.CloseEvent(close.getPath(),\n+                close.getFileSize(), close.getTimestamp()));\n+            break;\n+          case EVENT_CREATE:\n+            InotifyProtos.CreateEventProto create \u003d\n+                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n+            events.add(new Event.CreateEvent.Builder()\n+                .iNodeType(createTypeConvert(create.getType()))\n+                .path(create.getPath())\n+                .ctime(create.getCtime())\n+                .ownerName(create.getOwnerName())\n+                .groupName(create.getGroupName())\n+                .perms(convert(create.getPerms()))\n+                .replication(create.getReplication())\n+                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n+                    create.getSymlinkTarget())\n+                .overwrite(create.getOverwrite()).build());\n+            break;\n+          case EVENT_METADATA:\n+            InotifyProtos.MetadataUpdateEventProto meta \u003d\n+                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n+            events.add(new Event.MetadataUpdateEvent.Builder()\n+                .path(meta.getPath())\n+                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n+                .mtime(meta.getMtime())\n+                .atime(meta.getAtime())\n+                .replication(meta.getReplication())\n+                .ownerName(\n+                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n+                .groupName(\n+                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n+                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n+                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n+                    meta.getAclsList()))\n+                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n+                    meta.getXAttrsList()))\n+                .xAttrsRemoved(meta.getXAttrsRemoved())\n+                .build());\n+            break;\n+          case EVENT_RENAME:\n+            InotifyProtos.RenameEventProto rename \u003d\n+                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n+            events.add(new Event.RenameEvent(rename.getSrcPath(),\n+                rename.getDestPath(), rename.getTimestamp()));\n+            break;\n+          case EVENT_APPEND:\n+            InotifyProtos.AppendEventProto reopen \u003d\n+                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n+            events.add(new Event.AppendEvent(reopen.getPath()));\n+            break;\n+          case EVENT_UNLINK:\n+            InotifyProtos.UnlinkEventProto unlink \u003d\n+                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n+            events.add(new Event.UnlinkEvent(unlink.getPath(),\n+                unlink.getTimestamp()));\n+            break;\n+          default:\n+            throw new RuntimeException(\"Unexpected inotify event type: \" +\n+                p.getType());\n+        }\n+      }\n+      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n+    }\n+    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n          case EVENT_CLOSE:\n            InotifyProtos.CloseEventProto close \u003d\n                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n            events.add(new Event.CloseEvent(close.getPath(),\n                close.getFileSize(), close.getTimestamp()));\n            break;\n          case EVENT_CREATE:\n            InotifyProtos.CreateEventProto create \u003d\n                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n            events.add(new Event.CreateEvent.Builder()\n                .iNodeType(createTypeConvert(create.getType()))\n                .path(create.getPath())\n                .ctime(create.getCtime())\n                .ownerName(create.getOwnerName())\n                .groupName(create.getGroupName())\n                .perms(convert(create.getPerms()))\n                .replication(create.getReplication())\n                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                    create.getSymlinkTarget())\n                .overwrite(create.getOverwrite()).build());\n            break;\n          case EVENT_METADATA:\n            InotifyProtos.MetadataUpdateEventProto meta \u003d\n                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n            events.add(new Event.MetadataUpdateEvent.Builder()\n                .path(meta.getPath())\n                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                .mtime(meta.getMtime())\n                .atime(meta.getAtime())\n                .replication(meta.getReplication())\n                .ownerName(\n                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                .groupName(\n                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                    meta.getAclsList()))\n                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                    meta.getXAttrsList()))\n                .xAttrsRemoved(meta.getXAttrsRemoved())\n                .build());\n            break;\n          case EVENT_RENAME:\n            InotifyProtos.RenameEventProto rename \u003d\n                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n            events.add(new Event.RenameEvent(rename.getSrcPath(),\n                rename.getDestPath(), rename.getTimestamp()));\n            break;\n          case EVENT_APPEND:\n            InotifyProtos.AppendEventProto reopen \u003d\n                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n            events.add(new Event.AppendEvent(reopen.getPath()));\n            break;\n          case EVENT_UNLINK:\n            InotifyProtos.UnlinkEventProto unlink \u003d\n                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n            events.add(new Event.UnlinkEvent(unlink.getPath(),\n                unlink.getTimestamp()));\n            break;\n          default:\n            throw new RuntimeException(\"Unexpected inotify event type: \" +\n                p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "EventsList",
            "newValue": "EventBatchList"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
          "commitDate": "02/12/14 5:15 PM",
          "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "28/10/14 6:11 AM",
          "commitNameOld": "58c0bb9ed9f4a2491395b63c68046562a73526c9",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 35.5,
          "commitsBetweenForRepo": 298,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,71 +1,89 @@\n-  public static EventsList convert(GetEditsFromTxidResponseProto resp) throws\n+  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n     IOException {\n-    List\u003cEvent\u003e events \u003d Lists.newArrayList();\n-    for (InotifyProtos.EventProto p : resp.getEventsList().getEventsList()) {\n-      switch(p.getType()) {\n-      case EVENT_CLOSE:\n-        InotifyProtos.CloseEventProto close \u003d\n-            InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n-        events.add(new Event.CloseEvent(close.getPath(), close.getFileSize(),\n-            close.getTimestamp()));\n-        break;\n-      case EVENT_CREATE:\n-        InotifyProtos.CreateEventProto create \u003d\n-            InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n-        events.add(new Event.CreateEvent.Builder()\n-            .iNodeType(createTypeConvert(create.getType()))\n-            .path(create.getPath())\n-            .ctime(create.getCtime())\n-            .ownerName(create.getOwnerName())\n-            .groupName(create.getGroupName())\n-            .perms(convert(create.getPerms()))\n-            .replication(create.getReplication())\n-            .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n-            create.getSymlinkTarget())\n-            .overwrite(create.getOverwrite()).build());\n-        break;\n-      case EVENT_METADATA:\n-        InotifyProtos.MetadataUpdateEventProto meta \u003d\n-            InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n-        events.add(new Event.MetadataUpdateEvent.Builder()\n-            .path(meta.getPath())\n-            .metadataType(metadataUpdateTypeConvert(meta.getType()))\n-            .mtime(meta.getMtime())\n-            .atime(meta.getAtime())\n-            .replication(meta.getReplication())\n-            .ownerName(\n-                meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n-            .groupName(\n-                meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n-            .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n-            .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n-                meta.getAclsList()))\n-            .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n-                meta.getXAttrsList()))\n-            .xAttrsRemoved(meta.getXAttrsRemoved())\n-            .build());\n-        break;\n-      case EVENT_RENAME:\n-        InotifyProtos.RenameEventProto rename \u003d\n-            InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n-        events.add(new Event.RenameEvent(rename.getSrcPath(), rename.getDestPath(),\n-            rename.getTimestamp()));\n-        break;\n-      case EVENT_APPEND:\n-        InotifyProtos.AppendEventProto reopen \u003d\n-            InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n-        events.add(new Event.AppendEvent(reopen.getPath()));\n-        break;\n-      case EVENT_UNLINK:\n-        InotifyProtos.UnlinkEventProto unlink \u003d\n-            InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n-        events.add(new Event.UnlinkEvent(unlink.getPath(), unlink.getTimestamp()));\n-        break;\n-      default:\n-        throw new RuntimeException(\"Unexpected inotify event type: \" +\n-            p.getType());\n-      }\n+    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n+    final long firstTxid \u003d list.getFirstTxid();\n+    final long lastTxid \u003d list.getLastTxid();\n+\n+    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n+    if (list.getEventsList().size() \u003e 0) {\n+      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n     }\n-    return new EventsList(events, resp.getEventsList().getFirstTxid(),\n+    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n+      long txid \u003d bp.getTxid();\n+      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n+        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n+            \"transaction id \" + txid + \" that was outside the range of [\" +\n+            firstTxid + \", \" + lastTxid + \"].\");\n+      }\n+      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n+      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n+        switch (p.getType()) {\n+          case EVENT_CLOSE:\n+            InotifyProtos.CloseEventProto close \u003d\n+                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n+            events.add(new Event.CloseEvent(close.getPath(),\n+                close.getFileSize(), close.getTimestamp()));\n+            break;\n+          case EVENT_CREATE:\n+            InotifyProtos.CreateEventProto create \u003d\n+                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n+            events.add(new Event.CreateEvent.Builder()\n+                .iNodeType(createTypeConvert(create.getType()))\n+                .path(create.getPath())\n+                .ctime(create.getCtime())\n+                .ownerName(create.getOwnerName())\n+                .groupName(create.getGroupName())\n+                .perms(convert(create.getPerms()))\n+                .replication(create.getReplication())\n+                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n+                    create.getSymlinkTarget())\n+                .overwrite(create.getOverwrite()).build());\n+            break;\n+          case EVENT_METADATA:\n+            InotifyProtos.MetadataUpdateEventProto meta \u003d\n+                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n+            events.add(new Event.MetadataUpdateEvent.Builder()\n+                .path(meta.getPath())\n+                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n+                .mtime(meta.getMtime())\n+                .atime(meta.getAtime())\n+                .replication(meta.getReplication())\n+                .ownerName(\n+                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n+                .groupName(\n+                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n+                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n+                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n+                    meta.getAclsList()))\n+                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n+                    meta.getXAttrsList()))\n+                .xAttrsRemoved(meta.getXAttrsRemoved())\n+                .build());\n+            break;\n+          case EVENT_RENAME:\n+            InotifyProtos.RenameEventProto rename \u003d\n+                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n+            events.add(new Event.RenameEvent(rename.getSrcPath(),\n+                rename.getDestPath(), rename.getTimestamp()));\n+            break;\n+          case EVENT_APPEND:\n+            InotifyProtos.AppendEventProto reopen \u003d\n+                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n+            events.add(new Event.AppendEvent(reopen.getPath()));\n+            break;\n+          case EVENT_UNLINK:\n+            InotifyProtos.UnlinkEventProto unlink \u003d\n+                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n+            events.add(new Event.UnlinkEvent(unlink.getPath(),\n+                unlink.getTimestamp()));\n+            break;\n+          default:\n+            throw new RuntimeException(\"Unexpected inotify event type: \" +\n+                p.getType());\n+        }\n+      }\n+      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n+    }\n+    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    final InotifyProtos.EventsListProto list \u003d resp.getEventsList();\n    final long firstTxid \u003d list.getFirstTxid();\n    final long lastTxid \u003d list.getLastTxid();\n\n    List\u003cEventBatch\u003e batches \u003d Lists.newArrayList();\n    if (list.getEventsList().size() \u003e 0) {\n      throw new IOException(\"Can\u0027t handle old inotify server response.\");\n    }\n    for (InotifyProtos.EventBatchProto bp : list.getBatchList()) {\n      long txid \u003d bp.getTxid();\n      if ((txid !\u003d -1) \u0026\u0026 ((txid \u003c firstTxid) || (txid \u003e lastTxid))) {\n        throw new IOException(\"Error converting TxidResponseProto: got a \" +\n            \"transaction id \" + txid + \" that was outside the range of [\" +\n            firstTxid + \", \" + lastTxid + \"].\");\n      }\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      for (InotifyProtos.EventProto p : bp.getEventsList()) {\n        switch (p.getType()) {\n          case EVENT_CLOSE:\n            InotifyProtos.CloseEventProto close \u003d\n                InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n            events.add(new Event.CloseEvent(close.getPath(),\n                close.getFileSize(), close.getTimestamp()));\n            break;\n          case EVENT_CREATE:\n            InotifyProtos.CreateEventProto create \u003d\n                InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n            events.add(new Event.CreateEvent.Builder()\n                .iNodeType(createTypeConvert(create.getType()))\n                .path(create.getPath())\n                .ctime(create.getCtime())\n                .ownerName(create.getOwnerName())\n                .groupName(create.getGroupName())\n                .perms(convert(create.getPerms()))\n                .replication(create.getReplication())\n                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n                    create.getSymlinkTarget())\n                .overwrite(create.getOverwrite()).build());\n            break;\n          case EVENT_METADATA:\n            InotifyProtos.MetadataUpdateEventProto meta \u003d\n                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n            events.add(new Event.MetadataUpdateEvent.Builder()\n                .path(meta.getPath())\n                .metadataType(metadataUpdateTypeConvert(meta.getType()))\n                .mtime(meta.getMtime())\n                .atime(meta.getAtime())\n                .replication(meta.getReplication())\n                .ownerName(\n                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n                .groupName(\n                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                    meta.getAclsList()))\n                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                    meta.getXAttrsList()))\n                .xAttrsRemoved(meta.getXAttrsRemoved())\n                .build());\n            break;\n          case EVENT_RENAME:\n            InotifyProtos.RenameEventProto rename \u003d\n                InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n            events.add(new Event.RenameEvent(rename.getSrcPath(),\n                rename.getDestPath(), rename.getTimestamp()));\n            break;\n          case EVENT_APPEND:\n            InotifyProtos.AppendEventProto reopen \u003d\n                InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n            events.add(new Event.AppendEvent(reopen.getPath()));\n            break;\n          case EVENT_UNLINK:\n            InotifyProtos.UnlinkEventProto unlink \u003d\n                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n            events.add(new Event.UnlinkEvent(unlink.getPath(),\n                unlink.getTimestamp()));\n            break;\n          default:\n            throw new RuntimeException(\"Unexpected inotify event type: \" +\n                p.getType());\n        }\n      }\n      batches.add(new EventBatch(txid, events.toArray(new Event[0])));\n    }\n    return new EventBatchList(batches, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "6104520369045dfaa4b543cbad21236ed322249b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6886. Use single editlog record for creating file + overwrite. Contributed by Yi Liu.\n",
      "commitDate": "04/09/14 6:54 PM",
      "commitName": "6104520369045dfaa4b543cbad21236ed322249b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "02/09/14 2:02 PM",
      "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,70 +1,71 @@\n   public static EventsList convert(GetEditsFromTxidResponseProto resp) throws\n     IOException {\n     List\u003cEvent\u003e events \u003d Lists.newArrayList();\n     for (InotifyProtos.EventProto p : resp.getEventsList().getEventsList()) {\n       switch(p.getType()) {\n       case EVENT_CLOSE:\n         InotifyProtos.CloseEventProto close \u003d\n             InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n         events.add(new Event.CloseEvent(close.getPath(), close.getFileSize(),\n             close.getTimestamp()));\n         break;\n       case EVENT_CREATE:\n         InotifyProtos.CreateEventProto create \u003d\n             InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n         events.add(new Event.CreateEvent.Builder()\n             .iNodeType(createTypeConvert(create.getType()))\n             .path(create.getPath())\n             .ctime(create.getCtime())\n             .ownerName(create.getOwnerName())\n             .groupName(create.getGroupName())\n             .perms(convert(create.getPerms()))\n             .replication(create.getReplication())\n             .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n-            create.getSymlinkTarget()).build());\n+            create.getSymlinkTarget())\n+            .overwrite(create.getOverwrite()).build());\n         break;\n       case EVENT_METADATA:\n         InotifyProtos.MetadataUpdateEventProto meta \u003d\n             InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n         events.add(new Event.MetadataUpdateEvent.Builder()\n             .path(meta.getPath())\n             .metadataType(metadataUpdateTypeConvert(meta.getType()))\n             .mtime(meta.getMtime())\n             .atime(meta.getAtime())\n             .replication(meta.getReplication())\n             .ownerName(\n                 meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n             .groupName(\n                 meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n             .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n             .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                 meta.getAclsList()))\n             .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                 meta.getXAttrsList()))\n             .xAttrsRemoved(meta.getXAttrsRemoved())\n             .build());\n         break;\n       case EVENT_RENAME:\n         InotifyProtos.RenameEventProto rename \u003d\n             InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n         events.add(new Event.RenameEvent(rename.getSrcPath(), rename.getDestPath(),\n             rename.getTimestamp()));\n         break;\n       case EVENT_APPEND:\n         InotifyProtos.AppendEventProto reopen \u003d\n             InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n         events.add(new Event.AppendEvent(reopen.getPath()));\n         break;\n       case EVENT_UNLINK:\n         InotifyProtos.UnlinkEventProto unlink \u003d\n             InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n         events.add(new Event.UnlinkEvent(unlink.getPath(), unlink.getTimestamp()));\n         break;\n       default:\n         throw new RuntimeException(\"Unexpected inotify event type: \" +\n             p.getType());\n       }\n     }\n     return new EventsList(events, resp.getEventsList().getFirstTxid(),\n         resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventsList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    List\u003cEvent\u003e events \u003d Lists.newArrayList();\n    for (InotifyProtos.EventProto p : resp.getEventsList().getEventsList()) {\n      switch(p.getType()) {\n      case EVENT_CLOSE:\n        InotifyProtos.CloseEventProto close \u003d\n            InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n        events.add(new Event.CloseEvent(close.getPath(), close.getFileSize(),\n            close.getTimestamp()));\n        break;\n      case EVENT_CREATE:\n        InotifyProtos.CreateEventProto create \u003d\n            InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n        events.add(new Event.CreateEvent.Builder()\n            .iNodeType(createTypeConvert(create.getType()))\n            .path(create.getPath())\n            .ctime(create.getCtime())\n            .ownerName(create.getOwnerName())\n            .groupName(create.getGroupName())\n            .perms(convert(create.getPerms()))\n            .replication(create.getReplication())\n            .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n            create.getSymlinkTarget())\n            .overwrite(create.getOverwrite()).build());\n        break;\n      case EVENT_METADATA:\n        InotifyProtos.MetadataUpdateEventProto meta \u003d\n            InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n        events.add(new Event.MetadataUpdateEvent.Builder()\n            .path(meta.getPath())\n            .metadataType(metadataUpdateTypeConvert(meta.getType()))\n            .mtime(meta.getMtime())\n            .atime(meta.getAtime())\n            .replication(meta.getReplication())\n            .ownerName(\n                meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n            .groupName(\n                meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n            .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n            .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                meta.getAclsList()))\n            .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                meta.getXAttrsList()))\n            .xAttrsRemoved(meta.getXAttrsRemoved())\n            .build());\n        break;\n      case EVENT_RENAME:\n        InotifyProtos.RenameEventProto rename \u003d\n            InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n        events.add(new Event.RenameEvent(rename.getSrcPath(), rename.getDestPath(),\n            rename.getTimestamp()));\n        break;\n      case EVENT_APPEND:\n        InotifyProtos.AppendEventProto reopen \u003d\n            InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n        events.add(new Event.AppendEvent(reopen.getPath()));\n        break;\n      case EVENT_UNLINK:\n        InotifyProtos.UnlinkEventProto unlink \u003d\n            InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n        events.add(new Event.UnlinkEvent(unlink.getPath(), unlink.getTimestamp()));\n        break;\n      default:\n        throw new RuntimeException(\"Unexpected inotify event type: \" +\n            p.getType());\n      }\n    }\n    return new EventsList(events, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,70 @@\n+  public static EventsList convert(GetEditsFromTxidResponseProto resp) throws\n+    IOException {\n+    List\u003cEvent\u003e events \u003d Lists.newArrayList();\n+    for (InotifyProtos.EventProto p : resp.getEventsList().getEventsList()) {\n+      switch(p.getType()) {\n+      case EVENT_CLOSE:\n+        InotifyProtos.CloseEventProto close \u003d\n+            InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n+        events.add(new Event.CloseEvent(close.getPath(), close.getFileSize(),\n+            close.getTimestamp()));\n+        break;\n+      case EVENT_CREATE:\n+        InotifyProtos.CreateEventProto create \u003d\n+            InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n+        events.add(new Event.CreateEvent.Builder()\n+            .iNodeType(createTypeConvert(create.getType()))\n+            .path(create.getPath())\n+            .ctime(create.getCtime())\n+            .ownerName(create.getOwnerName())\n+            .groupName(create.getGroupName())\n+            .perms(convert(create.getPerms()))\n+            .replication(create.getReplication())\n+            .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n+            create.getSymlinkTarget()).build());\n+        break;\n+      case EVENT_METADATA:\n+        InotifyProtos.MetadataUpdateEventProto meta \u003d\n+            InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n+        events.add(new Event.MetadataUpdateEvent.Builder()\n+            .path(meta.getPath())\n+            .metadataType(metadataUpdateTypeConvert(meta.getType()))\n+            .mtime(meta.getMtime())\n+            .atime(meta.getAtime())\n+            .replication(meta.getReplication())\n+            .ownerName(\n+                meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n+            .groupName(\n+                meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n+            .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n+            .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n+                meta.getAclsList()))\n+            .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n+                meta.getXAttrsList()))\n+            .xAttrsRemoved(meta.getXAttrsRemoved())\n+            .build());\n+        break;\n+      case EVENT_RENAME:\n+        InotifyProtos.RenameEventProto rename \u003d\n+            InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n+        events.add(new Event.RenameEvent(rename.getSrcPath(), rename.getDestPath(),\n+            rename.getTimestamp()));\n+        break;\n+      case EVENT_APPEND:\n+        InotifyProtos.AppendEventProto reopen \u003d\n+            InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n+        events.add(new Event.AppendEvent(reopen.getPath()));\n+        break;\n+      case EVENT_UNLINK:\n+        InotifyProtos.UnlinkEventProto unlink \u003d\n+            InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n+        events.add(new Event.UnlinkEvent(unlink.getPath(), unlink.getTimestamp()));\n+        break;\n+      default:\n+        throw new RuntimeException(\"Unexpected inotify event type: \" +\n+            p.getType());\n+      }\n+    }\n+    return new EventsList(events, resp.getEventsList().getFirstTxid(),\n+        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventsList convert(GetEditsFromTxidResponseProto resp) throws\n    IOException {\n    List\u003cEvent\u003e events \u003d Lists.newArrayList();\n    for (InotifyProtos.EventProto p : resp.getEventsList().getEventsList()) {\n      switch(p.getType()) {\n      case EVENT_CLOSE:\n        InotifyProtos.CloseEventProto close \u003d\n            InotifyProtos.CloseEventProto.parseFrom(p.getContents());\n        events.add(new Event.CloseEvent(close.getPath(), close.getFileSize(),\n            close.getTimestamp()));\n        break;\n      case EVENT_CREATE:\n        InotifyProtos.CreateEventProto create \u003d\n            InotifyProtos.CreateEventProto.parseFrom(p.getContents());\n        events.add(new Event.CreateEvent.Builder()\n            .iNodeType(createTypeConvert(create.getType()))\n            .path(create.getPath())\n            .ctime(create.getCtime())\n            .ownerName(create.getOwnerName())\n            .groupName(create.getGroupName())\n            .perms(convert(create.getPerms()))\n            .replication(create.getReplication())\n            .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :\n            create.getSymlinkTarget()).build());\n        break;\n      case EVENT_METADATA:\n        InotifyProtos.MetadataUpdateEventProto meta \u003d\n            InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());\n        events.add(new Event.MetadataUpdateEvent.Builder()\n            .path(meta.getPath())\n            .metadataType(metadataUpdateTypeConvert(meta.getType()))\n            .mtime(meta.getMtime())\n            .atime(meta.getAtime())\n            .replication(meta.getReplication())\n            .ownerName(\n                meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())\n            .groupName(\n                meta.getGroupName().isEmpty() ? null : meta.getGroupName())\n            .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)\n            .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(\n                meta.getAclsList()))\n            .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(\n                meta.getXAttrsList()))\n            .xAttrsRemoved(meta.getXAttrsRemoved())\n            .build());\n        break;\n      case EVENT_RENAME:\n        InotifyProtos.RenameEventProto rename \u003d\n            InotifyProtos.RenameEventProto.parseFrom(p.getContents());\n        events.add(new Event.RenameEvent(rename.getSrcPath(), rename.getDestPath(),\n            rename.getTimestamp()));\n        break;\n      case EVENT_APPEND:\n        InotifyProtos.AppendEventProto reopen \u003d\n            InotifyProtos.AppendEventProto.parseFrom(p.getContents());\n        events.add(new Event.AppendEvent(reopen.getPath()));\n        break;\n      case EVENT_UNLINK:\n        InotifyProtos.UnlinkEventProto unlink \u003d\n            InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());\n        events.add(new Event.UnlinkEvent(unlink.getPath(), unlink.getTimestamp()));\n        break;\n      default:\n        throw new RuntimeException(\"Unexpected inotify event type: \" +\n            p.getType());\n      }\n    }\n    return new EventsList(events, resp.getEventsList().getFirstTxid(),\n        resp.getEventsList().getLastTxid(), resp.getEventsList().getSyncTxid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}