{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNodeResourceChecker.java",
  "functionName": "getVolumesLowOnSpace",
  "functionId": "getVolumesLowOnSpace",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
  "functionStartLine": 192,
  "functionEndLine": 201,
  "numCommitsSeen": 13,
  "timeTaken": 4463,
  "changeHistory": [
    "a27adf3de4ea88a80401fc7157c5e39747230c2a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "a27adf3de4ea88a80401fc7157c5e39747230c2a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a27adf3de4ea88a80401fc7157c5e39747230c2a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2430. The number of failed or low-resource volumes the NN can tolerate should be configurable. Contributed by Aaron T. Myers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211650 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/11 1:47 PM",
      "commitName": "a27adf3de4ea88a80401fc7157c5e39747230c2a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "05/12/11 12:10 PM",
      "commitNameOld": "d18e5b38447273b95d975c703df25fe5f679e006",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,10 @@\n   Collection\u003cString\u003e getVolumesLowOnSpace() throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Going to check the following volumes disk space: \" + volumes);\n     }\n     Collection\u003cString\u003e lowVolumes \u003d new ArrayList\u003cString\u003e();\n-    for (DF volume : volumes.values()) {\n-      long availableSpace \u003d volume.getAvailable();\n-      String fileSystem \u003d volume.getFilesystem();\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \" + availableSpace);\n-      }\n-      if (availableSpace \u003c duReserved) {\n-        LOG.warn(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \"\n-            + availableSpace +\n-            \", which is below the configured reserved amount \" + duReserved);\n-        lowVolumes.add(volume.getFilesystem());\n-      }\n+    for (CheckedVolume volume : volumes.values()) {\n+      lowVolumes.add(volume.getVolume());\n     }\n     return lowVolumes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Collection\u003cString\u003e getVolumesLowOnSpace() throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Going to check the following volumes disk space: \" + volumes);\n    }\n    Collection\u003cString\u003e lowVolumes \u003d new ArrayList\u003cString\u003e();\n    for (CheckedVolume volume : volumes.values()) {\n      lowVolumes.add(volume.getVolume());\n    }\n    return lowVolumes;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  Collection\u003cString\u003e getVolumesLowOnSpace() throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Going to check the following volumes disk space: \" + volumes);\n    }\n    Collection\u003cString\u003e lowVolumes \u003d new ArrayList\u003cString\u003e();\n    for (DF volume : volumes.values()) {\n      long availableSpace \u003d volume.getAvailable();\n      String fileSystem \u003d volume.getFilesystem();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \" + availableSpace);\n      }\n      if (availableSpace \u003c duReserved) {\n        LOG.warn(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \"\n            + availableSpace +\n            \", which is below the configured reserved amount \" + duReserved);\n        lowVolumes.add(volume.getFilesystem());\n      }\n    }\n    return lowVolumes;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  Collection\u003cString\u003e getVolumesLowOnSpace() throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Going to check the following volumes disk space: \" + volumes);\n    }\n    Collection\u003cString\u003e lowVolumes \u003d new ArrayList\u003cString\u003e();\n    for (DF volume : volumes.values()) {\n      long availableSpace \u003d volume.getAvailable();\n      String fileSystem \u003d volume.getFilesystem();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \" + availableSpace);\n      }\n      if (availableSpace \u003c duReserved) {\n        LOG.warn(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \"\n            + availableSpace +\n            \", which is below the configured reserved amount \" + duReserved);\n        lowVolumes.add(volume.getFilesystem());\n      }\n    }\n    return lowVolumes;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  Collection\u003cString\u003e getVolumesLowOnSpace() throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Going to check the following volumes disk space: \" + volumes);\n+    }\n+    Collection\u003cString\u003e lowVolumes \u003d new ArrayList\u003cString\u003e();\n+    for (DF volume : volumes.values()) {\n+      long availableSpace \u003d volume.getAvailable();\n+      String fileSystem \u003d volume.getFilesystem();\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \" + availableSpace);\n+      }\n+      if (availableSpace \u003c duReserved) {\n+        LOG.warn(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \"\n+            + availableSpace +\n+            \", which is below the configured reserved amount \" + duReserved);\n+        lowVolumes.add(volume.getFilesystem());\n+      }\n+    }\n+    return lowVolumes;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Collection\u003cString\u003e getVolumesLowOnSpace() throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Going to check the following volumes disk space: \" + volumes);\n    }\n    Collection\u003cString\u003e lowVolumes \u003d new ArrayList\u003cString\u003e();\n    for (DF volume : volumes.values()) {\n      long availableSpace \u003d volume.getAvailable();\n      String fileSystem \u003d volume.getFilesystem();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \" + availableSpace);\n      }\n      if (availableSpace \u003c duReserved) {\n        LOG.warn(\"Space available on volume \u0027\" + fileSystem + \"\u0027 is \"\n            + availableSpace +\n            \", which is below the configured reserved amount \" + duReserved);\n        lowVolumes.add(volume.getFilesystem());\n      }\n    }\n    return lowVolumes;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourceChecker.java"
    }
  }
}