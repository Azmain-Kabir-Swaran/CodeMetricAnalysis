{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollector.java",
  "functionName": "aggregateEntities",
  "functionId": "aggregateEntities___entities-TimelineEntities__resultEntityId-String__resultEntityType-String__needsGroupIdInResult-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
  "functionStartLine": 251,
  "functionEndLine": 263,
  "numCommitsSeen": 18,
  "timeTaken": 705,
  "changeHistory": [
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21"
  ],
  "changeHistoryShort": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3816. [Aggregation] App-level aggregation and accumulation for YARN system metrics (Li Lu via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "39cce4e629aadb7fadf1fb14a23108f55b59eb21",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  public static TimelineEntity aggregateEntities(\n+      TimelineEntities entities, String resultEntityId,\n+      String resultEntityType, boolean needsGroupIdInResult) {\n+    ConcurrentMap\u003cString, AggregationStatusTable\u003e aggregationGroups\n+        \u003d new ConcurrentHashMap\u003c\u003e();\n+    updateAggregateStatus(entities, aggregationGroups, null);\n+    if (needsGroupIdInResult) {\n+      return aggregate(aggregationGroups, resultEntityId, resultEntityType);\n+    } else {\n+      return aggregateWithoutGroupId(\n+          aggregationGroups, resultEntityId, resultEntityType);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static TimelineEntity aggregateEntities(\n      TimelineEntities entities, String resultEntityId,\n      String resultEntityType, boolean needsGroupIdInResult) {\n    ConcurrentMap\u003cString, AggregationStatusTable\u003e aggregationGroups\n        \u003d new ConcurrentHashMap\u003c\u003e();\n    updateAggregateStatus(entities, aggregationGroups, null);\n    if (needsGroupIdInResult) {\n      return aggregate(aggregationGroups, resultEntityId, resultEntityType);\n    } else {\n      return aggregateWithoutGroupId(\n          aggregationGroups, resultEntityId, resultEntityType);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java"
    }
  }
}