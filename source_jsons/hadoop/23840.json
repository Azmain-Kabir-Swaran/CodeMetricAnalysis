{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryServerLeveldbStateStoreService.java",
  "functionName": "checkVersion",
  "functionId": "checkVersion",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerLeveldbStateStoreService.java",
  "functionStartLine": 353,
  "functionEndLine": 367,
  "numCommitsSeen": 3,
  "timeTaken": 470,
  "changeHistory": [
    "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf"
  ],
  "changeHistoryShort": {
    "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6141. History server leveldb recovery store. Contributed by Jason Lowe\n",
      "commitDate": "26/01/15 8:28 AM",
      "commitName": "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,15 @@\n+  private void checkVersion() throws IOException {\n+    Version loadedVersion \u003d loadVersion();\n+    LOG.info(\"Loaded state version info \" + loadedVersion);\n+    if (loadedVersion.equals(getCurrentVersion())) {\n+      return;\n+    }\n+    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n+      LOG.info(\"Storing state version info \" + getCurrentVersion());\n+      storeVersion();\n+    } else {\n+      throw new IOException(\n+        \"Incompatible version for state: expecting state version \"\n+            + getCurrentVersion() + \", but loading version \" + loadedVersion);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkVersion() throws IOException {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded state version info \" + loadedVersion);\n    if (loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing state version info \" + getCurrentVersion());\n      storeVersion();\n    } else {\n      throw new IOException(\n        \"Incompatible version for state: expecting state version \"\n            + getCurrentVersion() + \", but loading version \" + loadedVersion);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerLeveldbStateStoreService.java"
    }
  }
}