{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KerberosName.java",
  "functionName": "apply",
  "functionId": "apply___params-String[]__ruleMechanism-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
  "functionStartLine": 329,
  "functionEndLine": 355,
  "numCommitsSeen": 32,
  "timeTaken": 2777,
  "changeHistory": [
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
    "d0edd37269bb40290b409d583bcf3b70897c13e0",
    "be38e530bb23b134758e29c9101f98cf4e1d2c38",
    "829a2e4d271f05afb209ddc834cd4a0e85492eda",
    "dca7350a36f051c50078a94ce4d784f53162033a",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af"
  ],
  "changeHistoryShort": {
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "d0edd37269bb40290b409d583bcf3b70897c13e0": "Ybodychange",
    "be38e530bb23b134758e29c9101f98cf4e1d2c38": "Ybodychange",
    "829a2e4d271f05afb209ddc834cd4a0e85492eda": "Ybodychange",
    "dca7350a36f051c50078a94ce4d784f53162033a": "Ybodychange",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-15996.  Improved Kerberos username mapping strategy in Hadoop.\n               Contributed by Bolke de Bruin\n",
      "commitDate": "04/01/19 2:54 PM",
      "commitName": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15996.  Improved Kerberos username mapping strategy in Hadoop.\n               Contributed by Bolke de Bruin\n",
          "commitDate": "04/01/19 2:54 PM",
          "commitName": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "29/11/18 9:52 AM",
          "commitNameOld": "d0edd37269bb40290b409d583bcf3b70897c13e0",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 36.21,
          "commitsBetweenForRepo": 207,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-    String apply(String[] params) throws IOException {\n+    String apply(String[] params, String ruleMechanism) throws IOException {\n       String result \u003d null;\n       if (isDefault) {\n         if (getDefaultRealm().equals(params[0])) {\n           result \u003d params[1];\n         }\n       } else if (params.length - 1 \u003d\u003d numOfComponents) {\n         String base \u003d replaceParameters(format, params);\n         if (match \u003d\u003d null || match.matcher(base).matches()) {\n           if (fromPattern \u003d\u003d null) {\n             result \u003d base;\n           } else {\n             result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n           }\n         }\n       }\n-      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n+      if (result !\u003d null\n+              \u0026\u0026 nonSimplePattern.matcher(result).find()\n+              \u0026\u0026 ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {\n         throw new NoMatchingRule(\"Non-simple name \" + result +\n                                  \" after auth_to_local rule \" + this);\n       }\n       if (toLowerCase \u0026\u0026 result !\u003d null) {\n         result \u003d result.toLowerCase(Locale.ENGLISH);\n       }\n       return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    String apply(String[] params, String ruleMechanism) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (getDefaultRealm().equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null\n              \u0026\u0026 nonSimplePattern.matcher(result).find()\n              \u0026\u0026 ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      if (toLowerCase \u0026\u0026 result !\u003d null) {\n        result \u003d result.toLowerCase(Locale.ENGLISH);\n      }\n      return result;\n    }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
          "extendedDetails": {
            "oldValue": "[params-String[]]",
            "newValue": "[params-String[], ruleMechanism-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15996.  Improved Kerberos username mapping strategy in Hadoop.\n               Contributed by Bolke de Bruin\n",
          "commitDate": "04/01/19 2:54 PM",
          "commitName": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "29/11/18 9:52 AM",
          "commitNameOld": "d0edd37269bb40290b409d583bcf3b70897c13e0",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 36.21,
          "commitsBetweenForRepo": 207,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-    String apply(String[] params) throws IOException {\n+    String apply(String[] params, String ruleMechanism) throws IOException {\n       String result \u003d null;\n       if (isDefault) {\n         if (getDefaultRealm().equals(params[0])) {\n           result \u003d params[1];\n         }\n       } else if (params.length - 1 \u003d\u003d numOfComponents) {\n         String base \u003d replaceParameters(format, params);\n         if (match \u003d\u003d null || match.matcher(base).matches()) {\n           if (fromPattern \u003d\u003d null) {\n             result \u003d base;\n           } else {\n             result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n           }\n         }\n       }\n-      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n+      if (result !\u003d null\n+              \u0026\u0026 nonSimplePattern.matcher(result).find()\n+              \u0026\u0026 ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {\n         throw new NoMatchingRule(\"Non-simple name \" + result +\n                                  \" after auth_to_local rule \" + this);\n       }\n       if (toLowerCase \u0026\u0026 result !\u003d null) {\n         result \u003d result.toLowerCase(Locale.ENGLISH);\n       }\n       return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    String apply(String[] params, String ruleMechanism) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (getDefaultRealm().equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null\n              \u0026\u0026 nonSimplePattern.matcher(result).find()\n              \u0026\u0026 ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      if (toLowerCase \u0026\u0026 result !\u003d null) {\n        result \u003d result.toLowerCase(Locale.ENGLISH);\n      }\n      return result;\n    }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
          "extendedDetails": {}
        }
      ]
    },
    "d0edd37269bb40290b409d583bcf3b70897c13e0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15959. Revert \"HADOOP-12751. While using kerberos Hadoop incorrectly assumes names with \u0027@\u0027 to be non-simple\"\n\nThis reverts commit 829a2e4d271f05afb209ddc834cd4a0e85492eda.\n",
      "commitDate": "29/11/18 9:52 AM",
      "commitName": "d0edd37269bb40290b409d583bcf3b70897c13e0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "22/05/17 1:40 AM",
      "commitNameOld": "b6f66b0da1cc77f4e61118404a008b4bd7e1a752",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 556.38,
      "commitsBetweenForRepo": 4717,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     String apply(String[] params) throws IOException {\n       String result \u003d null;\n       if (isDefault) {\n         if (getDefaultRealm().equals(params[0])) {\n           result \u003d params[1];\n         }\n       } else if (params.length - 1 \u003d\u003d numOfComponents) {\n         String base \u003d replaceParameters(format, params);\n         if (match \u003d\u003d null || match.matcher(base).matches()) {\n           if (fromPattern \u003d\u003d null) {\n             result \u003d base;\n           } else {\n             result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n           }\n         }\n       }\n       if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n-        LOG.info(\"Non-simple name {} after auth_to_local rule {}\",\n-            result, this);\n+        throw new NoMatchingRule(\"Non-simple name \" + result +\n+                                 \" after auth_to_local rule \" + this);\n       }\n       if (toLowerCase \u0026\u0026 result !\u003d null) {\n         result \u003d result.toLowerCase(Locale.ENGLISH);\n       }\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (getDefaultRealm().equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      if (toLowerCase \u0026\u0026 result !\u003d null) {\n        result \u003d result.toLowerCase(Locale.ENGLISH);\n      }\n      return result;\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "be38e530bb23b134758e29c9101f98cf4e1d2c38": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9888. KerberosName static initialization gets default realm, which is unneeded in non-secure deployment. (Dmytro Kabakchei via aw)\n",
      "commitDate": "28/06/16 7:22 AM",
      "commitName": "be38e530bb23b134758e29c9101f98cf4e1d2c38",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "10/05/16 1:32 PM",
      "commitNameOld": "829a2e4d271f05afb209ddc834cd4a0e85492eda",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 48.74,
      "commitsBetweenForRepo": 369,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     String apply(String[] params) throws IOException {\n       String result \u003d null;\n       if (isDefault) {\n-        if (defaultRealm.equals(params[0])) {\n+        if (getDefaultRealm().equals(params[0])) {\n           result \u003d params[1];\n         }\n       } else if (params.length - 1 \u003d\u003d numOfComponents) {\n         String base \u003d replaceParameters(format, params);\n         if (match \u003d\u003d null || match.matcher(base).matches()) {\n           if (fromPattern \u003d\u003d null) {\n             result \u003d base;\n           } else {\n             result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n           }\n         }\n       }\n       if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n         LOG.info(\"Non-simple name {} after auth_to_local rule {}\",\n             result, this);\n       }\n       if (toLowerCase \u0026\u0026 result !\u003d null) {\n         result \u003d result.toLowerCase(Locale.ENGLISH);\n       }\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (getDefaultRealm().equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        LOG.info(\"Non-simple name {} after auth_to_local rule {}\",\n            result, this);\n      }\n      if (toLowerCase \u0026\u0026 result !\u003d null) {\n        result \u003d result.toLowerCase(Locale.ENGLISH);\n      }\n      return result;\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "829a2e4d271f05afb209ddc834cd4a0e85492eda": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12751. While using kerberos Hadoop incorrectly assumes names with \u0027@\u0027 to be non-simple. (Bolke de Bruin via stevel).\n",
      "commitDate": "10/05/16 1:32 PM",
      "commitName": "829a2e4d271f05afb209ddc834cd4a0e85492eda",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "04/03/16 9:48 AM",
      "commitNameOld": "3e8099a45a4cfd4c5c0e3dce4370514cb2c90da9",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 67.11,
      "commitsBetweenForRepo": 386,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     String apply(String[] params) throws IOException {\n       String result \u003d null;\n       if (isDefault) {\n         if (defaultRealm.equals(params[0])) {\n           result \u003d params[1];\n         }\n       } else if (params.length - 1 \u003d\u003d numOfComponents) {\n         String base \u003d replaceParameters(format, params);\n         if (match \u003d\u003d null || match.matcher(base).matches()) {\n           if (fromPattern \u003d\u003d null) {\n             result \u003d base;\n           } else {\n             result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n           }\n         }\n       }\n       if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n-        throw new NoMatchingRule(\"Non-simple name \" + result +\n-                                 \" after auth_to_local rule \" + this);\n+        LOG.info(\"Non-simple name {} after auth_to_local rule {}\",\n+            result, this);\n       }\n       if (toLowerCase \u0026\u0026 result !\u003d null) {\n         result \u003d result.toLowerCase(Locale.ENGLISH);\n       }\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (defaultRealm.equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        LOG.info(\"Non-simple name {} after auth_to_local rule {}\",\n            result, this);\n      }\n      if (toLowerCase \u0026\u0026 result !\u003d null) {\n        result \u003d result.toLowerCase(Locale.ENGLISH);\n      }\n      return result;\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "dca7350a36f051c50078a94ce4d784f53162033a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10566. Add toLowerCase support to auth_to_local rules for service name. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593105 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/05/14 11:20 AM",
      "commitName": "dca7350a36f051c50078a94ce4d784f53162033a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/03/13 6:46 AM",
      "commitNameOld": "7eb7b3b723c524ece8ef2247943eb631fefcfe41",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 415.19,
      "commitsBetweenForRepo": 2734,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n     String apply(String[] params) throws IOException {\n       String result \u003d null;\n       if (isDefault) {\n         if (defaultRealm.equals(params[0])) {\n           result \u003d params[1];\n         }\n       } else if (params.length - 1 \u003d\u003d numOfComponents) {\n         String base \u003d replaceParameters(format, params);\n         if (match \u003d\u003d null || match.matcher(base).matches()) {\n           if (fromPattern \u003d\u003d null) {\n             result \u003d base;\n           } else {\n             result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n           }\n         }\n       }\n       if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n         throw new NoMatchingRule(\"Non-simple name \" + result +\n                                  \" after auth_to_local rule \" + this);\n       }\n+      if (toLowerCase \u0026\u0026 result !\u003d null) {\n+        result \u003d result.toLowerCase(Locale.ENGLISH);\n+      }\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (defaultRealm.equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      if (toLowerCase \u0026\u0026 result !\u003d null) {\n        result \u003d result.toLowerCase(Locale.ENGLISH);\n      }\n      return result;\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7579. Rename package names from alfredo to auth.  Contributed by Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 3:40 PM",
      "commitName": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/08/11 2:18 PM",
      "commitNameOld": "4f1a0e36fab1f18e6e2c5fcc72cd9a7634967fcd",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (defaultRealm.equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      return result;\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (defaultRealm.equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      return result;\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
      }
    },
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7119. add Kerberos HTTP SPNEGO authentication support to Hadoop JT/NN/DN/TT web-consoles. (Alejandro Abdelnur via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 3:31 PM",
      "commitName": "a0f120ce68dddb0cb31b64c89f3224313f3cb5af",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,22 @@\n+    String apply(String[] params) throws IOException {\n+      String result \u003d null;\n+      if (isDefault) {\n+        if (defaultRealm.equals(params[0])) {\n+          result \u003d params[1];\n+        }\n+      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n+        String base \u003d replaceParameters(format, params);\n+        if (match \u003d\u003d null || match.matcher(base).matches()) {\n+          if (fromPattern \u003d\u003d null) {\n+            result \u003d base;\n+          } else {\n+            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n+          }\n+        }\n+      }\n+      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n+        throw new NoMatchingRule(\"Non-simple name \" + result +\n+                                 \" after auth_to_local rule \" + this);\n+      }\n+      return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    String apply(String[] params) throws IOException {\n      String result \u003d null;\n      if (isDefault) {\n        if (defaultRealm.equals(params[0])) {\n          result \u003d params[1];\n        }\n      } else if (params.length - 1 \u003d\u003d numOfComponents) {\n        String base \u003d replaceParameters(format, params);\n        if (match \u003d\u003d null || match.matcher(base).matches()) {\n          if (fromPattern \u003d\u003d null) {\n            result \u003d base;\n          } else {\n            result \u003d replaceSubstitution(base, fromPattern, toPattern,  repeat);\n          }\n        }\n      }\n      if (result !\u003d null \u0026\u0026 nonSimplePattern.matcher(result).find()) {\n        throw new NoMatchingRule(\"Non-simple name \" + result +\n                                 \" after auth_to_local rule \" + this);\n      }\n      return result;\n    }",
      "path": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
    }
  }
}