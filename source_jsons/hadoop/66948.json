{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZombieJob.java",
  "functionName": "getTaskInfo",
  "functionId": "getTaskInfo___loggedTask-LoggedTask",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
  "functionStartLine": 640,
  "functionEndLine": 697,
  "numCommitsSeen": 10,
  "timeTaken": 4835,
  "changeHistory": [
    "de69d6e81128470dd5d2fd865d4b3a79188f740b",
    "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07",
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Ybodychange",
    "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07": "Ybodychange",
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "21/03/12 2:42 AM",
      "commitNameOld": "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07",
      "commitAuthorOld": "Ravi Gummadi",
      "daysBetweenCommits": 1856.8,
      "commitsBetweenForRepo": 12901,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,58 @@\n   private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n     if (loggedTask \u003d\u003d null) {\n-      return new TaskInfo(0, 0, 0, 0, 0);\n+      return new TaskInfo(0, 0, 0, 0, 0, 0);\n     }\n     List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n \n     long inputBytes \u003d -1;\n     long inputRecords \u003d -1;\n     long outputBytes \u003d -1;\n     long outputRecords \u003d -1;\n     long heapMegabytes \u003d -1;\n     ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n \n     Values type \u003d loggedTask.getTaskType();\n     if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n       throw new IllegalArgumentException(\n           \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n               + \" for task \u003d \" + loggedTask.getTaskID());\n     }\n \n     for (LoggedTaskAttempt attempt : attempts) {\n       attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n       // ignore bad attempts or unsuccessful attempts.\n       if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n         continue;\n       }\n \n       if (type \u003d\u003d Values.MAP) {\n         inputBytes \u003d attempt.getHdfsBytesRead();\n         inputRecords \u003d attempt.getMapInputRecords();\n         outputBytes \u003d\n             (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                 .getHdfsBytesWritten();\n         outputRecords \u003d attempt.getMapOutputRecords();\n         heapMegabytes \u003d\n             (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                 .getHeapMegabytes();\n       } else {\n         inputBytes \u003d attempt.getReduceShuffleBytes();\n         inputRecords \u003d attempt.getReduceInputRecords();\n         outputBytes \u003d attempt.getHdfsBytesWritten();\n         outputRecords \u003d attempt.getReduceOutputRecords();\n         heapMegabytes \u003d\n             (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                 .getHeapMegabytes();\n       }\n       // set the resource usage metrics\n       metrics \u003d attempt.getResourceUsageMetrics();\n       break;\n     }\n \n+    //note: hardcoding vCores, as they are not collected\n     TaskInfo taskInfo \u003d\n         new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n-            (int) outputRecords, (int) heapMegabytes,\n+            (int) outputRecords, (int) heapMegabytes, 1,\n             metrics);\n     return taskInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n    if (loggedTask \u003d\u003d null) {\n      return new TaskInfo(0, 0, 0, 0, 0, 0);\n    }\n    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n\n    long inputBytes \u003d -1;\n    long inputRecords \u003d -1;\n    long outputBytes \u003d -1;\n    long outputRecords \u003d -1;\n    long heapMegabytes \u003d -1;\n    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n\n    Values type \u003d loggedTask.getTaskType();\n    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n      throw new IllegalArgumentException(\n          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n              + \" for task \u003d \" + loggedTask.getTaskID());\n    }\n\n    for (LoggedTaskAttempt attempt : attempts) {\n      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n      // ignore bad attempts or unsuccessful attempts.\n      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n        continue;\n      }\n\n      if (type \u003d\u003d Values.MAP) {\n        inputBytes \u003d attempt.getHdfsBytesRead();\n        inputRecords \u003d attempt.getMapInputRecords();\n        outputBytes \u003d\n            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                .getHdfsBytesWritten();\n        outputRecords \u003d attempt.getMapOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                .getHeapMegabytes();\n      } else {\n        inputBytes \u003d attempt.getReduceShuffleBytes();\n        inputRecords \u003d attempt.getReduceInputRecords();\n        outputBytes \u003d attempt.getHdfsBytesWritten();\n        outputRecords \u003d attempt.getReduceOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                .getHeapMegabytes();\n      }\n      // set the resource usage metrics\n      metrics \u003d attempt.getResourceUsageMetrics();\n      break;\n    }\n\n    //note: hardcoding vCores, as they are not collected\n    TaskInfo taskInfo \u003d\n        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n            (int) outputRecords, (int) heapMegabytes, 1,\n            metrics);\n    return taskInfo;\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {}
    },
    "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3953. [Gridmix] Gridmix throws NPE and does not simulate a job if the trace contains null taskStatus for a task.(ravigummadi)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303330 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/12 2:42 AM",
      "commitName": "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07",
      "commitAuthor": "Ravi Gummadi",
      "commitDateOld": "08/02/12 2:15 AM",
      "commitNameOld": "e5060d3bbb0e457f4148bb32d594e39422e65414",
      "commitAuthorOld": "Amar Kamat",
      "daysBetweenCommits": 41.98,
      "commitsBetweenForRepo": 293,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,57 @@\n   private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n+    if (loggedTask \u003d\u003d null) {\n+      return new TaskInfo(0, 0, 0, 0, 0);\n+    }\n     List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n \n     long inputBytes \u003d -1;\n     long inputRecords \u003d -1;\n     long outputBytes \u003d -1;\n     long outputRecords \u003d -1;\n     long heapMegabytes \u003d -1;\n     ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n \n     Values type \u003d loggedTask.getTaskType();\n     if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n       throw new IllegalArgumentException(\n           \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n               + \" for task \u003d \" + loggedTask.getTaskID());\n     }\n \n     for (LoggedTaskAttempt attempt : attempts) {\n       attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n       // ignore bad attempts or unsuccessful attempts.\n       if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n         continue;\n       }\n \n       if (type \u003d\u003d Values.MAP) {\n         inputBytes \u003d attempt.getHdfsBytesRead();\n         inputRecords \u003d attempt.getMapInputRecords();\n         outputBytes \u003d\n             (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                 .getHdfsBytesWritten();\n         outputRecords \u003d attempt.getMapOutputRecords();\n         heapMegabytes \u003d\n             (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                 .getHeapMegabytes();\n       } else {\n         inputBytes \u003d attempt.getReduceShuffleBytes();\n         inputRecords \u003d attempt.getReduceInputRecords();\n         outputBytes \u003d attempt.getHdfsBytesWritten();\n         outputRecords \u003d attempt.getReduceOutputRecords();\n         heapMegabytes \u003d\n             (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                 .getHeapMegabytes();\n       }\n       // set the resource usage metrics\n       metrics \u003d attempt.getResourceUsageMetrics();\n       break;\n     }\n \n     TaskInfo taskInfo \u003d\n         new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n             (int) outputRecords, (int) heapMegabytes,\n             metrics);\n     return taskInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n    if (loggedTask \u003d\u003d null) {\n      return new TaskInfo(0, 0, 0, 0, 0);\n    }\n    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n\n    long inputBytes \u003d -1;\n    long inputRecords \u003d -1;\n    long outputBytes \u003d -1;\n    long outputRecords \u003d -1;\n    long heapMegabytes \u003d -1;\n    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n\n    Values type \u003d loggedTask.getTaskType();\n    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n      throw new IllegalArgumentException(\n          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n              + \" for task \u003d \" + loggedTask.getTaskID());\n    }\n\n    for (LoggedTaskAttempt attempt : attempts) {\n      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n      // ignore bad attempts or unsuccessful attempts.\n      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n        continue;\n      }\n\n      if (type \u003d\u003d Values.MAP) {\n        inputBytes \u003d attempt.getHdfsBytesRead();\n        inputRecords \u003d attempt.getMapInputRecords();\n        outputBytes \u003d\n            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                .getHdfsBytesWritten();\n        outputRecords \u003d attempt.getMapOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                .getHeapMegabytes();\n      } else {\n        inputBytes \u003d attempt.getReduceShuffleBytes();\n        inputRecords \u003d attempt.getReduceInputRecords();\n        outputBytes \u003d attempt.getHdfsBytesWritten();\n        outputRecords \u003d attempt.getReduceOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                .getHeapMegabytes();\n      }\n      // set the resource usage metrics\n      metrics \u003d attempt.getResourceUsageMetrics();\n      break;\n    }\n\n    TaskInfo taskInfo \u003d\n        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n            (int) outputRecords, (int) heapMegabytes,\n            metrics);\n    return taskInfo;\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {}
    },
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n\n    long inputBytes \u003d -1;\n    long inputRecords \u003d -1;\n    long outputBytes \u003d -1;\n    long outputRecords \u003d -1;\n    long heapMegabytes \u003d -1;\n    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n\n    Values type \u003d loggedTask.getTaskType();\n    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n      throw new IllegalArgumentException(\n          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n              + \" for task \u003d \" + loggedTask.getTaskID());\n    }\n\n    for (LoggedTaskAttempt attempt : attempts) {\n      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n      // ignore bad attempts or unsuccessful attempts.\n      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n        continue;\n      }\n\n      if (type \u003d\u003d Values.MAP) {\n        inputBytes \u003d attempt.getHdfsBytesRead();\n        inputRecords \u003d attempt.getMapInputRecords();\n        outputBytes \u003d\n            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                .getHdfsBytesWritten();\n        outputRecords \u003d attempt.getMapOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                .getHeapMegabytes();\n      } else {\n        inputBytes \u003d attempt.getReduceShuffleBytes();\n        inputRecords \u003d attempt.getReduceInputRecords();\n        outputBytes \u003d attempt.getHdfsBytesWritten();\n        outputRecords \u003d attempt.getReduceOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                .getHeapMegabytes();\n      }\n      // set the resource usage metrics\n      metrics \u003d attempt.getResourceUsageMetrics();\n      break;\n    }\n\n    TaskInfo taskInfo \u003d\n        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n            (int) outputRecords, (int) heapMegabytes,\n            metrics);\n    return taskInfo;\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n\n    long inputBytes \u003d -1;\n    long inputRecords \u003d -1;\n    long outputBytes \u003d -1;\n    long outputRecords \u003d -1;\n    long heapMegabytes \u003d -1;\n    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n\n    Values type \u003d loggedTask.getTaskType();\n    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n      throw new IllegalArgumentException(\n          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n              + \" for task \u003d \" + loggedTask.getTaskID());\n    }\n\n    for (LoggedTaskAttempt attempt : attempts) {\n      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n      // ignore bad attempts or unsuccessful attempts.\n      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n        continue;\n      }\n\n      if (type \u003d\u003d Values.MAP) {\n        inputBytes \u003d attempt.getHdfsBytesRead();\n        inputRecords \u003d attempt.getMapInputRecords();\n        outputBytes \u003d\n            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                .getHdfsBytesWritten();\n        outputRecords \u003d attempt.getMapOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                .getHeapMegabytes();\n      } else {\n        inputBytes \u003d attempt.getReduceShuffleBytes();\n        inputRecords \u003d attempt.getReduceInputRecords();\n        outputBytes \u003d attempt.getHdfsBytesWritten();\n        outputRecords \u003d attempt.getReduceOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                .getHeapMegabytes();\n      }\n      // set the resource usage metrics\n      metrics \u003d attempt.getResourceUsageMetrics();\n      break;\n    }\n\n    TaskInfo taskInfo \u003d\n        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n            (int) outputRecords, (int) heapMegabytes,\n            metrics);\n    return taskInfo;\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n\n    long inputBytes \u003d -1;\n    long inputRecords \u003d -1;\n    long outputBytes \u003d -1;\n    long outputRecords \u003d -1;\n    long heapMegabytes \u003d -1;\n    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n\n    Values type \u003d loggedTask.getTaskType();\n    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n      throw new IllegalArgumentException(\n          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n              + \" for task \u003d \" + loggedTask.getTaskID());\n    }\n\n    for (LoggedTaskAttempt attempt : attempts) {\n      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n      // ignore bad attempts or unsuccessful attempts.\n      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n        continue;\n      }\n\n      if (type \u003d\u003d Values.MAP) {\n        inputBytes \u003d attempt.getHdfsBytesRead();\n        inputRecords \u003d attempt.getMapInputRecords();\n        outputBytes \u003d\n            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                .getHdfsBytesWritten();\n        outputRecords \u003d attempt.getMapOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                .getHeapMegabytes();\n      } else {\n        inputBytes \u003d attempt.getReduceShuffleBytes();\n        inputRecords \u003d attempt.getReduceInputRecords();\n        outputBytes \u003d attempt.getHdfsBytesWritten();\n        outputRecords \u003d attempt.getReduceOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                .getHeapMegabytes();\n      }\n      // set the resource usage metrics\n      metrics \u003d attempt.getResourceUsageMetrics();\n      break;\n    }\n\n    TaskInfo taskInfo \u003d\n        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n            (int) outputRecords, (int) heapMegabytes,\n            metrics);\n    return taskInfo;\n  }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,54 @@\n+  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n+    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n+\n+    long inputBytes \u003d -1;\n+    long inputRecords \u003d -1;\n+    long outputBytes \u003d -1;\n+    long outputRecords \u003d -1;\n+    long heapMegabytes \u003d -1;\n+    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n+\n+    Values type \u003d loggedTask.getTaskType();\n+    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n+      throw new IllegalArgumentException(\n+          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n+              + \" for task \u003d \" + loggedTask.getTaskID());\n+    }\n+\n+    for (LoggedTaskAttempt attempt : attempts) {\n+      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n+      // ignore bad attempts or unsuccessful attempts.\n+      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n+        continue;\n+      }\n+\n+      if (type \u003d\u003d Values.MAP) {\n+        inputBytes \u003d attempt.getHdfsBytesRead();\n+        inputRecords \u003d attempt.getMapInputRecords();\n+        outputBytes \u003d\n+            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n+                .getHdfsBytesWritten();\n+        outputRecords \u003d attempt.getMapOutputRecords();\n+        heapMegabytes \u003d\n+            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n+                .getHeapMegabytes();\n+      } else {\n+        inputBytes \u003d attempt.getReduceShuffleBytes();\n+        inputRecords \u003d attempt.getReduceInputRecords();\n+        outputBytes \u003d attempt.getHdfsBytesWritten();\n+        outputRecords \u003d attempt.getReduceOutputRecords();\n+        heapMegabytes \u003d\n+            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n+                .getHeapMegabytes();\n+      }\n+      // set the resource usage metrics\n+      metrics \u003d attempt.getResourceUsageMetrics();\n+      break;\n+    }\n+\n+    TaskInfo taskInfo \u003d\n+        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n+            (int) outputRecords, (int) heapMegabytes,\n+            metrics);\n+    return taskInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskInfo getTaskInfo(LoggedTask loggedTask) {\n    List\u003cLoggedTaskAttempt\u003e attempts \u003d loggedTask.getAttempts();\n\n    long inputBytes \u003d -1;\n    long inputRecords \u003d -1;\n    long outputBytes \u003d -1;\n    long outputRecords \u003d -1;\n    long heapMegabytes \u003d -1;\n    ResourceUsageMetrics metrics \u003d new ResourceUsageMetrics();\n\n    Values type \u003d loggedTask.getTaskType();\n    if ((type !\u003d Values.MAP) \u0026\u0026 (type !\u003d Values.REDUCE)) {\n      throw new IllegalArgumentException(\n          \"getTaskInfo only supports MAP or REDUCE tasks: \" + type.toString()\n              + \" for task \u003d \" + loggedTask.getTaskID());\n    }\n\n    for (LoggedTaskAttempt attempt : attempts) {\n      attempt \u003d sanitizeLoggedTaskAttempt(attempt);\n      // ignore bad attempts or unsuccessful attempts.\n      if ((attempt \u003d\u003d null) || (attempt.getResult() !\u003d Values.SUCCESS)) {\n        continue;\n      }\n\n      if (type \u003d\u003d Values.MAP) {\n        inputBytes \u003d attempt.getHdfsBytesRead();\n        inputRecords \u003d attempt.getMapInputRecords();\n        outputBytes \u003d\n            (job.getTotalReduces() \u003e 0) ? attempt.getMapOutputBytes() : attempt\n                .getHdfsBytesWritten();\n        outputRecords \u003d attempt.getMapOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobMapMB() \u003e 0) ? job.getJobMapMB() : job\n                .getHeapMegabytes();\n      } else {\n        inputBytes \u003d attempt.getReduceShuffleBytes();\n        inputRecords \u003d attempt.getReduceInputRecords();\n        outputBytes \u003d attempt.getHdfsBytesWritten();\n        outputRecords \u003d attempt.getReduceOutputRecords();\n        heapMegabytes \u003d\n            (job.getJobReduceMB() \u003e 0) ? job.getJobReduceMB() : job\n                .getHeapMegabytes();\n      }\n      // set the resource usage metrics\n      metrics \u003d attempt.getResourceUsageMetrics();\n      break;\n    }\n\n    TaskInfo taskInfo \u003d\n        new TaskInfo(inputBytes, (int) inputRecords, outputBytes,\n            (int) outputRecords, (int) heapMegabytes,\n            metrics);\n    return taskInfo;\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
    }
  }
}