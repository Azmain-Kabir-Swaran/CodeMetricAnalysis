{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStreamer.java",
  "functionName": "continueRetryingOrThrow",
  "functionId": "continueRetryingOrThrow",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
  "functionStartLine": 127,
  "functionEndLine": 141,
  "numCommitsSeen": 35,
  "timeTaken": 1915,
  "changeHistory": [
    "3ae652f82110a52bf239f3c1849b48981558eb19"
  ],
  "changeHistoryShort": {
    "3ae652f82110a52bf239f3c1849b48981558eb19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ae652f82110a52bf239f3c1849b48981558eb19": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10609. Uncaught InvalidEncryptionKeyException during pipeline recovery may abort downstream applications. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "26/09/16 1:11 PM",
      "commitName": "3ae652f82110a52bf239f3c1849b48981558eb19",
      "commitAuthor": "Wei-Chiu Chuang",
      "diff": "@@ -0,0 +1,15 @@\n+    boolean continueRetryingOrThrow() throws InvalidEncryptionKeyException {\n+      if (fetchEncryptionKeyTimes \u003e\u003d 2) {\n+        // hit the same exception twice connecting to the node, so\n+        // throw the exception and exclude the node.\n+        throw lastException;\n+      }\n+      // Don\u0027t exclude this node just yet.\n+      // Try again with a new encryption key.\n+      LOG.info(\"Will fetch a new encryption key and retry, \"\n+          + \"encryption key was invalid when connecting to \"\n+          + this.src + \": \", lastException);\n+      // The encryption key used is invalid.\n+      dfsClient.clearDataEncryptionKey();\n+      return true;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    boolean continueRetryingOrThrow() throws InvalidEncryptionKeyException {\n      if (fetchEncryptionKeyTimes \u003e\u003d 2) {\n        // hit the same exception twice connecting to the node, so\n        // throw the exception and exclude the node.\n        throw lastException;\n      }\n      // Don\u0027t exclude this node just yet.\n      // Try again with a new encryption key.\n      LOG.info(\"Will fetch a new encryption key and retry, \"\n          + \"encryption key was invalid when connecting to \"\n          + this.src + \": \", lastException);\n      // The encryption key used is invalid.\n      dfsClient.clearDataEncryptionKey();\n      return true;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
    }
  }
}