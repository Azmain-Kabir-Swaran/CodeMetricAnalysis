{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerShellWebSocket.java",
  "functionName": "onConnect",
  "functionId": "onConnect___session-Session",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
  "functionStartLine": 100,
  "functionEndLine": 138,
  "numCommitsSeen": 7,
  "timeTaken": 3736,
  "changeHistory": [
    "a6e9d27c2957fc9ffeb019963995792692aa27df",
    "c5c73182e5adab2299bfb27886bfd3ecc229009c",
    "ca90b2480ecb9a627914e7a463b6293024ad6e4d",
    "72e7c6a489858ea48e94dc015752de620f8d6da1",
    "49824ed260d31350d9b836a4c31319e2b3501dd0",
    "1f9c4f32e842529be5980e395587f135452372bb",
    "347ea385817766a5c418017009728cd8b9959776"
  ],
  "changeHistoryShort": {
    "a6e9d27c2957fc9ffeb019963995792692aa27df": "Ybodychange",
    "c5c73182e5adab2299bfb27886bfd3ecc229009c": "Ybodychange",
    "ca90b2480ecb9a627914e7a463b6293024ad6e4d": "Ybodychange",
    "72e7c6a489858ea48e94dc015752de620f8d6da1": "Ybodychange",
    "49824ed260d31350d9b836a4c31319e2b3501dd0": "Ybodychange",
    "1f9c4f32e842529be5980e395587f135452372bb": "Ybodychange",
    "347ea385817766a5c418017009728cd8b9959776": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a6e9d27c2957fc9ffeb019963995792692aa27df": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9117. Add a check for insecure setup for container terminal. Contributed by Eric Yang\n",
      "commitDate": "18/12/18 12:49 PM",
      "commitName": "a6e9d27c2957fc9ffeb019963995792692aa27df",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "18/12/18 10:06 AM",
      "commitNameOld": "c5c73182e5adab2299bfb27886bfd3ecc229009c",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,39 @@\n   public void onConnect(Session session) {\n     try {\n       URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n       String command \u003d \"bash\";\n       String[] containerPath \u003d containerURI.getPath().split(\"/\");\n       String cId \u003d containerPath[2];\n       if (containerPath.length\u003d\u003d4) {\n         for (ShellContainerCommand c : ShellContainerCommand.values()) {\n           if (c.name().equalsIgnoreCase(containerPath[3])) {\n             command \u003d containerPath[3].toLowerCase();\n           }\n         }\n       }\n       Container container \u003d nmContext.getContainers().get(ContainerId\n           .fromString(cId));\n       if (!checkAuthorization(session, container)) {\n         session.close(1008, \"Forbidden\");\n         return;\n       }\n+      if (checkInsecureSetup()) {\n+        session.close(1003, \"Nonsecure mode is unsupported.\");\n+        return;\n+      }\n       LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n       LOG.info(\n           \"Making interactive connection to running docker container with ID: \"\n               + cId);\n       ContainerExecContext execContext \u003d new ContainerExecContext\n           .Builder()\n           .setContainer(container)\n           .setNMLocalPath(nmContext.getLocalDirsHandler())\n           .setShell(command)\n           .build();\n       pair \u003d exec.execContainer(execContext);\n     } catch (Exception e) {\n       LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String command \u003d \"bash\";\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      if (containerPath.length\u003d\u003d4) {\n        for (ShellContainerCommand c : ShellContainerCommand.values()) {\n          if (c.name().equalsIgnoreCase(containerPath[3])) {\n            command \u003d containerPath[3].toLowerCase();\n          }\n        }\n      }\n      Container container \u003d nmContext.getContainers().get(ContainerId\n          .fromString(cId));\n      if (!checkAuthorization(session, container)) {\n        session.close(1008, \"Forbidden\");\n        return;\n      }\n      if (checkInsecureSetup()) {\n        session.close(1003, \"Nonsecure mode is unsupported.\");\n        return;\n      }\n      LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(container)\n          .setNMLocalPath(nmContext.getLocalDirsHandler())\n          .setShell(command)\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
      "extendedDetails": {}
    },
    "c5c73182e5adab2299bfb27886bfd3ecc229009c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9072. Send exit command to terminate docker exec on connection close. Contributed by Eric Yang\n",
      "commitDate": "18/12/18 10:06 AM",
      "commitName": "c5c73182e5adab2299bfb27886bfd3ecc229009c",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "14/12/18 2:08 PM",
      "commitNameOld": "ca90b2480ecb9a627914e7a463b6293024ad6e4d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 3.83,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n   public void onConnect(Session session) {\n     try {\n       URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n       String command \u003d \"bash\";\n       String[] containerPath \u003d containerURI.getPath().split(\"/\");\n       String cId \u003d containerPath[2];\n       if (containerPath.length\u003d\u003d4) {\n         for (ShellContainerCommand c : ShellContainerCommand.values()) {\n           if (c.name().equalsIgnoreCase(containerPath[3])) {\n             command \u003d containerPath[3].toLowerCase();\n           }\n         }\n       }\n       Container container \u003d nmContext.getContainers().get(ContainerId\n           .fromString(cId));\n       if (!checkAuthorization(session, container)) {\n         session.close(1008, \"Forbidden\");\n+        return;\n       }\n       LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n       LOG.info(\n           \"Making interactive connection to running docker container with ID: \"\n               + cId);\n       ContainerExecContext execContext \u003d new ContainerExecContext\n           .Builder()\n           .setContainer(container)\n           .setNMLocalPath(nmContext.getLocalDirsHandler())\n           .setShell(command)\n           .build();\n       pair \u003d exec.execContainer(execContext);\n     } catch (Exception e) {\n       LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String command \u003d \"bash\";\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      if (containerPath.length\u003d\u003d4) {\n        for (ShellContainerCommand c : ShellContainerCommand.values()) {\n          if (c.name().equalsIgnoreCase(containerPath[3])) {\n            command \u003d containerPath[3].toLowerCase();\n          }\n        }\n      }\n      Container container \u003d nmContext.getContainers().get(ContainerId\n          .fromString(cId));\n      if (!checkAuthorization(session, container)) {\n        session.close(1008, \"Forbidden\");\n        return;\n      }\n      LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(container)\n          .setNMLocalPath(nmContext.getLocalDirsHandler())\n          .setShell(command)\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
      "extendedDetails": {}
    },
    "ca90b2480ecb9a627914e7a463b6293024ad6e4d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9032. Support sh shell for interactive container shell at command line. Contributed by Eric Yang\n",
      "commitDate": "14/12/18 2:08 PM",
      "commitName": "ca90b2480ecb9a627914e7a463b6293024ad6e4d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "12/12/18 6:18 PM",
      "commitNameOld": "72e7c6a489858ea48e94dc015752de620f8d6da1",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 1.83,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,34 @@\n   public void onConnect(Session session) {\n     try {\n       URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n+      String command \u003d \"bash\";\n       String[] containerPath \u003d containerURI.getPath().split(\"/\");\n       String cId \u003d containerPath[2];\n+      if (containerPath.length\u003d\u003d4) {\n+        for (ShellContainerCommand c : ShellContainerCommand.values()) {\n+          if (c.name().equalsIgnoreCase(containerPath[3])) {\n+            command \u003d containerPath[3].toLowerCase();\n+          }\n+        }\n+      }\n       Container container \u003d nmContext.getContainers().get(ContainerId\n           .fromString(cId));\n       if (!checkAuthorization(session, container)) {\n         session.close(1008, \"Forbidden\");\n       }\n       LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n       LOG.info(\n           \"Making interactive connection to running docker container with ID: \"\n               + cId);\n       ContainerExecContext execContext \u003d new ContainerExecContext\n           .Builder()\n           .setContainer(container)\n           .setNMLocalPath(nmContext.getLocalDirsHandler())\n+          .setShell(command)\n           .build();\n       pair \u003d exec.execContainer(execContext);\n     } catch (Exception e) {\n       LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String command \u003d \"bash\";\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      if (containerPath.length\u003d\u003d4) {\n        for (ShellContainerCommand c : ShellContainerCommand.values()) {\n          if (c.name().equalsIgnoreCase(containerPath[3])) {\n            command \u003d containerPath[3].toLowerCase();\n          }\n        }\n      }\n      Container container \u003d nmContext.getContainers().get(ContainerId\n          .fromString(cId));\n      if (!checkAuthorization(session, container)) {\n        session.close(1008, \"Forbidden\");\n      }\n      LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(container)\n          .setNMLocalPath(nmContext.getLocalDirsHandler())\n          .setShell(command)\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
      "extendedDetails": {}
    },
    "72e7c6a489858ea48e94dc015752de620f8d6da1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8962. Add ability to use interactive shell with normal yarn container. Contributed by Eric Yang\n",
      "commitDate": "12/12/18 6:18 PM",
      "commitName": "72e7c6a489858ea48e94dc015752de620f8d6da1",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "20/11/18 11:12 AM",
      "commitNameOld": "49824ed260d31350d9b836a4c31319e2b3501dd0",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 22.3,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public void onConnect(Session session) {\n     try {\n       URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n       String[] containerPath \u003d containerURI.getPath().split(\"/\");\n       String cId \u003d containerPath[2];\n       Container container \u003d nmContext.getContainers().get(ContainerId\n           .fromString(cId));\n       if (!checkAuthorization(session, container)) {\n         session.close(1008, \"Forbidden\");\n       }\n       LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n       LOG.info(\n           \"Making interactive connection to running docker container with ID: \"\n               + cId);\n       ContainerExecContext execContext \u003d new ContainerExecContext\n           .Builder()\n           .setContainer(container)\n+          .setNMLocalPath(nmContext.getLocalDirsHandler())\n           .build();\n       pair \u003d exec.execContainer(execContext);\n     } catch (Exception e) {\n       LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      Container container \u003d nmContext.getContainers().get(ContainerId\n          .fromString(cId));\n      if (!checkAuthorization(session, container)) {\n        session.close(1008, \"Forbidden\");\n      }\n      LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(container)\n          .setNMLocalPath(nmContext.getLocalDirsHandler())\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
      "extendedDetails": {}
    },
    "49824ed260d31350d9b836a4c31319e2b3501dd0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8838. Check that container user is same as websocket user for interactive shell. Contributed by Eric Yang\n",
      "commitDate": "20/11/18 11:12 AM",
      "commitName": "49824ed260d31350d9b836a4c31319e2b3501dd0",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "12/11/18 10:42 AM",
      "commitNameOld": "1f9c4f32e842529be5980e395587f135452372bb",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 8.02,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   public void onConnect(Session session) {\n-    LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n-\n     try {\n       URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n       String[] containerPath \u003d containerURI.getPath().split(\"/\");\n       String cId \u003d containerPath[2];\n       Container container \u003d nmContext.getContainers().get(ContainerId\n           .fromString(cId));\n+      if (!checkAuthorization(session, container)) {\n+        session.close(1008, \"Forbidden\");\n+      }\n+      LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n       LOG.info(\n           \"Making interactive connection to running docker container with ID: \"\n               + cId);\n       ContainerExecContext execContext \u003d new ContainerExecContext\n           .Builder()\n           .setContainer(container)\n           .build();\n       pair \u003d exec.execContainer(execContext);\n     } catch (Exception e) {\n       LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      Container container \u003d nmContext.getContainers().get(ContainerId\n          .fromString(cId));\n      if (!checkAuthorization(session, container)) {\n        session.close(1008, \"Forbidden\");\n      }\n      LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(container)\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
      "extendedDetails": {}
    },
    "1f9c4f32e842529be5980e395587f135452372bb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8776. Implement Container Exec feature in LinuxContainerExecutor. Contributed by Eric Yang\n",
      "commitDate": "12/11/18 10:42 AM",
      "commitName": "1f9c4f32e842529be5980e395587f135452372bb",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "08/10/18 10:56 AM",
      "commitNameOld": "347ea385817766a5c418017009728cd8b9959776",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 35.03,
      "commitsBetweenForRepo": 335,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public void onConnect(Session session) {\n     LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n \n     try {\n       URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n       String[] containerPath \u003d containerURI.getPath().split(\"/\");\n       String cId \u003d containerPath[2];\n+      Container container \u003d nmContext.getContainers().get(ContainerId\n+          .fromString(cId));\n       LOG.info(\n           \"Making interactive connection to running docker container with ID: \"\n               + cId);\n       ContainerExecContext execContext \u003d new ContainerExecContext\n           .Builder()\n-          .setContainer(cId)\n+          .setContainer(container)\n           .build();\n       pair \u003d exec.execContainer(execContext);\n     } catch (Exception e) {\n       LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      Container container \u003d nmContext.getContainers().get(ContainerId\n          .fromString(cId));\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(container)\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java",
      "extendedDetails": {}
    },
    "347ea385817766a5c418017009728cd8b9959776": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8763.  Added node manager websocket API for accessing containers.\n            Contributed by Zian Chen\n",
      "commitDate": "08/10/18 10:56 AM",
      "commitName": "347ea385817766a5c418017009728cd8b9959776",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,20 @@\n+  public void onConnect(Session session) {\n+    LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n+\n+    try {\n+      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n+      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n+      String cId \u003d containerPath[2];\n+      LOG.info(\n+          \"Making interactive connection to running docker container with ID: \"\n+              + cId);\n+      ContainerExecContext execContext \u003d new ContainerExecContext\n+          .Builder()\n+          .setContainer(cId)\n+          .build();\n+      pair \u003d exec.execContainer(execContext);\n+    } catch (Exception e) {\n+      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void onConnect(Session session) {\n    LOG.info(session.getRemoteAddress().getHostString() + \" connected!\");\n\n    try {\n      URI containerURI \u003d session.getUpgradeRequest().getRequestURI();\n      String[] containerPath \u003d containerURI.getPath().split(\"/\");\n      String cId \u003d containerPath[2];\n      LOG.info(\n          \"Making interactive connection to running docker container with ID: \"\n              + cId);\n      ContainerExecContext execContext \u003d new ContainerExecContext\n          .Builder()\n          .setContainer(cId)\n          .build();\n      pair \u003d exec.execContainer(execContext);\n    } catch (Exception e) {\n      LOG.error(\"Failed to establish WebSocket connection with Client\", e);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerShellWebSocket.java"
    }
  }
}