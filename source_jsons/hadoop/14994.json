{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageViewer.java",
  "functionName": "go",
  "functionId": "go",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewer.java",
  "functionStartLine": 122,
  "functionEndLine": 151,
  "numCommitsSeen": 12,
  "timeTaken": 3276,
  "changeHistory": [
    "7a3188d054481b9bd563e337901e93476303ce7f",
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
    "14384f5b5142a98a10ce4bffadeb13e89bda9365",
    "97f58955a6045b373ab73653bf26ab5922b00cf3"
  ],
  "changeHistoryShort": {
    "7a3188d054481b9bd563e337901e93476303ce7f": "Ybodychange",
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568": "Ybodychange",
    "14384f5b5142a98a10ce4bffadeb13e89bda9365": "Ybodychange",
    "97f58955a6045b373ab73653bf26ab5922b00cf3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a3188d054481b9bd563e337901e93476303ce7f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16282. Avoid FileStream to improve performance. Contributed by Ayush Saxena.\n",
      "commitDate": "02/05/19 12:58 PM",
      "commitName": "7a3188d054481b9bd563e337901e93476303ce7f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 237.92,
      "commitsBetweenForRepo": 1864,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void go() throws IOException  {\n     DataInputStream in \u003d null;\n     PositionTrackingInputStream tracker \u003d null;\n     ImageLoader fsip \u003d null;\n     boolean done \u003d false;\n     try {\n       tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n-               new FileInputStream(new File(inputFile))));\n+          Files.newInputStream(Paths.get(inputFile))));\n       in \u003d new DataInputStream(tracker);\n \n       int imageVersionFile \u003d findImageVersion(in);\n \n       fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n \n       if(fsip \u003d\u003d null) \n         throw new IOException(\"No image processor to read version \" +\n             imageVersionFile + \" is available.\");\n       fsip.loadImage(in, processor, skipBlocks);\n       done \u003d true;\n     } finally {\n       if (!done) {\n         if (tracker !\u003d null) {\n           LOG.error(\"image loading failed at offset \" + tracker.getPos());\n         } else {\n           LOG.error(\"Failed to load image file.\");\n         }\n       }\n       IOUtils.cleanupWithLogger(LOG, in, tracker);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void go() throws IOException  {\n    DataInputStream in \u003d null;\n    PositionTrackingInputStream tracker \u003d null;\n    ImageLoader fsip \u003d null;\n    boolean done \u003d false;\n    try {\n      tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n          Files.newInputStream(Paths.get(inputFile))));\n      in \u003d new DataInputStream(tracker);\n\n      int imageVersionFile \u003d findImageVersion(in);\n\n      fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n\n      if(fsip \u003d\u003d null) \n        throw new IOException(\"No image processor to read version \" +\n            imageVersionFile + \" is available.\");\n      fsip.loadImage(in, processor, skipBlocks);\n      done \u003d true;\n    } finally {\n      if (!done) {\n        if (tracker !\u003d null) {\n          LOG.error(\"image loading failed at offset \" + tracker.getPos());\n        } else {\n          LOG.error(\"Failed to load image file.\");\n        }\n      }\n      IOUtils.cleanupWithLogger(LOG, in, tracker);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewer.java",
      "extendedDetails": {}
    },
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13695. Move logging to slf4j in HDFS package. Contributed by Ian Pickering.\n",
      "commitDate": "06/09/18 2:48 PM",
      "commitName": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "06/06/17 10:42 PM",
      "commitNameOld": "5ec71639cf41858c687781445b8360d50cad5b55",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 456.67,
      "commitsBetweenForRepo": 3847,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void go() throws IOException  {\n     DataInputStream in \u003d null;\n     PositionTrackingInputStream tracker \u003d null;\n     ImageLoader fsip \u003d null;\n     boolean done \u003d false;\n     try {\n       tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n                new FileInputStream(new File(inputFile))));\n       in \u003d new DataInputStream(tracker);\n \n       int imageVersionFile \u003d findImageVersion(in);\n \n       fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n \n       if(fsip \u003d\u003d null) \n         throw new IOException(\"No image processor to read version \" +\n             imageVersionFile + \" is available.\");\n       fsip.loadImage(in, processor, skipBlocks);\n       done \u003d true;\n     } finally {\n       if (!done) {\n         if (tracker !\u003d null) {\n           LOG.error(\"image loading failed at offset \" + tracker.getPos());\n         } else {\n           LOG.error(\"Failed to load image file.\");\n         }\n       }\n-      IOUtils.cleanup(LOG, in, tracker);\n+      IOUtils.cleanupWithLogger(LOG, in, tracker);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void go() throws IOException  {\n    DataInputStream in \u003d null;\n    PositionTrackingInputStream tracker \u003d null;\n    ImageLoader fsip \u003d null;\n    boolean done \u003d false;\n    try {\n      tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n               new FileInputStream(new File(inputFile))));\n      in \u003d new DataInputStream(tracker);\n\n      int imageVersionFile \u003d findImageVersion(in);\n\n      fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n\n      if(fsip \u003d\u003d null) \n        throw new IOException(\"No image processor to read version \" +\n            imageVersionFile + \" is available.\");\n      fsip.loadImage(in, processor, skipBlocks);\n      done \u003d true;\n    } finally {\n      if (!done) {\n        if (tracker !\u003d null) {\n          LOG.error(\"image loading failed at offset \" + tracker.getPos());\n        } else {\n          LOG.error(\"Failed to load image file.\");\n        }\n      }\n      IOUtils.cleanupWithLogger(LOG, in, tracker);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewer.java",
      "extendedDetails": {}
    },
    "14384f5b5142a98a10ce4bffadeb13e89bda9365": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8111. NPE thrown when invalid FSImage filename given for \u0027hdfs oiv_legacy\u0027 cmd ( Contributed by surendra singh lilhore )\n",
      "commitDate": "13/04/15 4:46 AM",
      "commitName": "14384f5b5142a98a10ce4bffadeb13e89bda9365",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "08/09/14 1:15 PM",
      "commitNameOld": "d989ac04449dc33da5e2c32a7f24d59cc92de536",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 216.65,
      "commitsBetweenForRepo": 1848,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,30 @@\n   public void go() throws IOException  {\n     DataInputStream in \u003d null;\n     PositionTrackingInputStream tracker \u003d null;\n     ImageLoader fsip \u003d null;\n     boolean done \u003d false;\n     try {\n       tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n                new FileInputStream(new File(inputFile))));\n       in \u003d new DataInputStream(tracker);\n \n       int imageVersionFile \u003d findImageVersion(in);\n \n       fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n \n       if(fsip \u003d\u003d null) \n         throw new IOException(\"No image processor to read version \" +\n             imageVersionFile + \" is available.\");\n       fsip.loadImage(in, processor, skipBlocks);\n       done \u003d true;\n     } finally {\n       if (!done) {\n-        LOG.error(\"image loading failed at offset \" + tracker.getPos());\n+        if (tracker !\u003d null) {\n+          LOG.error(\"image loading failed at offset \" + tracker.getPos());\n+        } else {\n+          LOG.error(\"Failed to load image file.\");\n+        }\n       }\n       IOUtils.cleanup(LOG, in, tracker);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void go() throws IOException  {\n    DataInputStream in \u003d null;\n    PositionTrackingInputStream tracker \u003d null;\n    ImageLoader fsip \u003d null;\n    boolean done \u003d false;\n    try {\n      tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n               new FileInputStream(new File(inputFile))));\n      in \u003d new DataInputStream(tracker);\n\n      int imageVersionFile \u003d findImageVersion(in);\n\n      fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n\n      if(fsip \u003d\u003d null) \n        throw new IOException(\"No image processor to read version \" +\n            imageVersionFile + \" is available.\");\n      fsip.loadImage(in, processor, skipBlocks);\n      done \u003d true;\n    } finally {\n      if (!done) {\n        if (tracker !\u003d null) {\n          LOG.error(\"image loading failed at offset \" + tracker.getPos());\n        } else {\n          LOG.error(\"Failed to load image file.\");\n        }\n      }\n      IOUtils.cleanup(LOG, in, tracker);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewer.java",
      "extendedDetails": {}
    },
    "97f58955a6045b373ab73653bf26ab5922b00cf3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6293. Issues with OIV processing PB-based fsimages. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 6:15 PM",
      "commitName": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,26 @@\n+  public void go() throws IOException  {\n+    DataInputStream in \u003d null;\n+    PositionTrackingInputStream tracker \u003d null;\n+    ImageLoader fsip \u003d null;\n+    boolean done \u003d false;\n+    try {\n+      tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n+               new FileInputStream(new File(inputFile))));\n+      in \u003d new DataInputStream(tracker);\n+\n+      int imageVersionFile \u003d findImageVersion(in);\n+\n+      fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n+\n+      if(fsip \u003d\u003d null) \n+        throw new IOException(\"No image processor to read version \" +\n+            imageVersionFile + \" is available.\");\n+      fsip.loadImage(in, processor, skipBlocks);\n+      done \u003d true;\n+    } finally {\n+      if (!done) {\n+        LOG.error(\"image loading failed at offset \" + tracker.getPos());\n+      }\n+      IOUtils.cleanup(LOG, in, tracker);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void go() throws IOException  {\n    DataInputStream in \u003d null;\n    PositionTrackingInputStream tracker \u003d null;\n    ImageLoader fsip \u003d null;\n    boolean done \u003d false;\n    try {\n      tracker \u003d new PositionTrackingInputStream(new BufferedInputStream(\n               new FileInputStream(new File(inputFile))));\n      in \u003d new DataInputStream(tracker);\n\n      int imageVersionFile \u003d findImageVersion(in);\n\n      fsip \u003d ImageLoader.LoaderFactory.getLoader(imageVersionFile);\n\n      if(fsip \u003d\u003d null) \n        throw new IOException(\"No image processor to read version \" +\n            imageVersionFile + \" is available.\");\n      fsip.loadImage(in, processor, skipBlocks);\n      done \u003d true;\n    } finally {\n      if (!done) {\n        LOG.error(\"image loading failed at offset \" + tracker.getPos());\n      }\n      IOUtils.cleanup(LOG, in, tracker);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewer.java"
    }
  }
}