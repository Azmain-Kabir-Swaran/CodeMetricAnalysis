{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DockerProviderService.java",
  "functionName": "checkUseEntryPoint",
  "functionId": "checkUseEntryPoint___compLaunchContext-ContainerLaunchService.ComponentLaunchContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/docker/DockerProviderService.java",
  "functionStartLine": 62,
  "functionEndLine": 75,
  "numCommitsSeen": 14,
  "timeTaken": 1421,
  "changeHistory": [
    "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
    "31998643a51f1e08f723f18dc5476ac1512d5b81"
  ],
  "changeHistoryShort": {
    "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7": "Ymultichange(Yparameterchange,Ybodychange)",
    "31998643a51f1e08f723f18dc5476ac1512d5b81": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8160.  Support upgrade of service that use docker containers.\n            Contributed by Chandni Singh\n",
      "commitDate": "14/08/18 8:36 AM",
      "commitName": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8160.  Support upgrade of service that use docker containers.\n            Contributed by Chandni Singh\n",
          "commitDate": "14/08/18 8:36 AM",
          "commitName": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "12/06/18 8:35 AM",
          "commitNameOld": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 63.0,
          "commitsBetweenForRepo": 452,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  private boolean checkUseEntryPoint(Component component) {\n+  private boolean checkUseEntryPoint(\n+      ContainerLaunchService.ComponentLaunchContext compLaunchContext) {\n     boolean overrideDisable \u003d false;\n     String overrideDisableKey \u003d Environment.\n         YARN_CONTAINER_RUNTIME_DOCKER_RUN_OVERRIDE_DISABLE.\n             name();\n-    String overrideDisableValue \u003d (component\n-        .getConfiguration().getEnv(overrideDisableKey) !\u003d null) ?\n-            component.getConfiguration().getEnv(overrideDisableKey) :\n-                System.getenv(overrideDisableKey);\n+    String overrideDisableValue \u003d (\n+        compLaunchContext.getConfiguration().getEnv(overrideDisableKey)\n+            !\u003d null) ?\n+            compLaunchContext.getConfiguration().getEnv(\n+                overrideDisableKey) : System.getenv(overrideDisableKey);\n     overrideDisable \u003d Boolean.parseBoolean(overrideDisableValue);\n     return overrideDisable;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkUseEntryPoint(\n      ContainerLaunchService.ComponentLaunchContext compLaunchContext) {\n    boolean overrideDisable \u003d false;\n    String overrideDisableKey \u003d Environment.\n        YARN_CONTAINER_RUNTIME_DOCKER_RUN_OVERRIDE_DISABLE.\n            name();\n    String overrideDisableValue \u003d (\n        compLaunchContext.getConfiguration().getEnv(overrideDisableKey)\n            !\u003d null) ?\n            compLaunchContext.getConfiguration().getEnv(\n                overrideDisableKey) : System.getenv(overrideDisableKey);\n    overrideDisable \u003d Boolean.parseBoolean(overrideDisableValue);\n    return overrideDisable;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/docker/DockerProviderService.java",
          "extendedDetails": {
            "oldValue": "[component-Component]",
            "newValue": "[compLaunchContext-ContainerLaunchService.ComponentLaunchContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8160.  Support upgrade of service that use docker containers.\n            Contributed by Chandni Singh\n",
          "commitDate": "14/08/18 8:36 AM",
          "commitName": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "12/06/18 8:35 AM",
          "commitNameOld": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 63.0,
          "commitsBetweenForRepo": 452,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  private boolean checkUseEntryPoint(Component component) {\n+  private boolean checkUseEntryPoint(\n+      ContainerLaunchService.ComponentLaunchContext compLaunchContext) {\n     boolean overrideDisable \u003d false;\n     String overrideDisableKey \u003d Environment.\n         YARN_CONTAINER_RUNTIME_DOCKER_RUN_OVERRIDE_DISABLE.\n             name();\n-    String overrideDisableValue \u003d (component\n-        .getConfiguration().getEnv(overrideDisableKey) !\u003d null) ?\n-            component.getConfiguration().getEnv(overrideDisableKey) :\n-                System.getenv(overrideDisableKey);\n+    String overrideDisableValue \u003d (\n+        compLaunchContext.getConfiguration().getEnv(overrideDisableKey)\n+            !\u003d null) ?\n+            compLaunchContext.getConfiguration().getEnv(\n+                overrideDisableKey) : System.getenv(overrideDisableKey);\n     overrideDisable \u003d Boolean.parseBoolean(overrideDisableValue);\n     return overrideDisable;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkUseEntryPoint(\n      ContainerLaunchService.ComponentLaunchContext compLaunchContext) {\n    boolean overrideDisable \u003d false;\n    String overrideDisableKey \u003d Environment.\n        YARN_CONTAINER_RUNTIME_DOCKER_RUN_OVERRIDE_DISABLE.\n            name();\n    String overrideDisableValue \u003d (\n        compLaunchContext.getConfiguration().getEnv(overrideDisableKey)\n            !\u003d null) ?\n            compLaunchContext.getConfiguration().getEnv(\n                overrideDisableKey) : System.getenv(overrideDisableKey);\n    overrideDisable \u003d Boolean.parseBoolean(overrideDisableValue);\n    return overrideDisable;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/docker/DockerProviderService.java",
          "extendedDetails": {}
        }
      ]
    },
    "31998643a51f1e08f723f18dc5476ac1512d5b81": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8342. Enable untrusted docker image to run with launch command. Contributed by Eric Yang\n",
      "commitDate": "02/06/18 2:46 PM",
      "commitName": "31998643a51f1e08f723f18dc5476ac1512d5b81",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,12 @@\n+  private boolean checkUseEntryPoint(Component component) {\n+    boolean overrideDisable \u003d false;\n+    String overrideDisableKey \u003d Environment.\n+        YARN_CONTAINER_RUNTIME_DOCKER_RUN_OVERRIDE_DISABLE.\n+            name();\n+    String overrideDisableValue \u003d (component\n+        .getConfiguration().getEnv(overrideDisableKey) !\u003d null) ?\n+            component.getConfiguration().getEnv(overrideDisableKey) :\n+                System.getenv(overrideDisableKey);\n+    overrideDisable \u003d Boolean.parseBoolean(overrideDisableValue);\n+    return overrideDisable;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkUseEntryPoint(Component component) {\n    boolean overrideDisable \u003d false;\n    String overrideDisableKey \u003d Environment.\n        YARN_CONTAINER_RUNTIME_DOCKER_RUN_OVERRIDE_DISABLE.\n            name();\n    String overrideDisableValue \u003d (component\n        .getConfiguration().getEnv(overrideDisableKey) !\u003d null) ?\n            component.getConfiguration().getEnv(overrideDisableKey) :\n                System.getenv(overrideDisableKey);\n    overrideDisable \u003d Boolean.parseBoolean(overrideDisableValue);\n    return overrideDisable;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/docker/DockerProviderService.java"
    }
  }
}