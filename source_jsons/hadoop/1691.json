{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Sender.java",
  "functionName": "transferBlock",
  "functionId": "transferBlock___blk-ExtendedBlock(modifiers-final)__blockToken-Token__BlockTokenIdentifier__(modifiers-final)__clientName-String(modifiers-final)__targets-DatanodeInfo[](modifiers-final)__targetStorageTypes-StorageType[](modifiers-final)__targetStorageIds-String[](modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
  "functionStartLine": 174,
  "functionEndLine": 191,
  "numCommitsSeen": 54,
  "timeTaken": 6838,
  "changeHistory": [
    "a3954ccab148bddc290cb96528e63ff19799bcc9",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
    "25b0e8471ed744578b2d8e3f0debe5477b268e54",
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "a3954ccab148bddc290cb96528e63ff19799bcc9": "Ymultichange(Yparameterchange,Ybodychange)",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": "Ymultichange(Yfilerename,Ybodychange)",
    "25b0e8471ed744578b2d8e3f0debe5477b268e54": "Ymultichange(Yparameterchange,Ybodychange)",
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "2f48fae72aa52e6ec42264cad24fab36b6a426c2": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange,Yparametermetachange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3954ccab148bddc290cb96528e63ff19799bcc9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-9807. Add an optional StorageID to writes. Contributed by Ewan Higgs\n",
      "commitDate": "05/05/17 12:01 PM",
      "commitName": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthor": "Chris Douglas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9807. Add an optional StorageID to writes. Contributed by Ewan Higgs\n",
          "commitDate": "05/05/17 12:01 PM",
          "commitName": "a3954ccab148bddc290cb96528e63ff19799bcc9",
          "commitAuthor": "Chris Douglas",
          "commitDateOld": "24/06/16 2:39 AM",
          "commitNameOld": "e6cb07520f935efde3e881de8f84ee7f6e0a746f",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 315.39,
          "commitsBetweenForRepo": 2062,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n       final DatanodeInfo[] targets,\n-      final StorageType[] targetStorageTypes) throws IOException {\n+      final StorageType[] targetStorageTypes,\n+      final String[] targetStorageIds) throws IOException {\n \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n         .setHeader(DataTransferProtoUtil.buildClientHeader(\n             blk, clientName, blockToken))\n         .addAllTargets(PBHelperClient.convert(targets))\n         .addAllTargetStorageTypes(\n             PBHelperClient.convertStorageTypes(targetStorageTypes))\n+        .addAllTargetStorageIds(Arrays.asList(targetStorageIds))\n         .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets,\n      final StorageType[] targetStorageTypes,\n      final String[] targetStorageIds) throws IOException {\n\n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n        .setHeader(DataTransferProtoUtil.buildClientHeader(\n            blk, clientName, blockToken))\n        .addAllTargets(PBHelperClient.convert(targets))\n        .addAllTargetStorageTypes(\n            PBHelperClient.convertStorageTypes(targetStorageTypes))\n        .addAllTargetStorageIds(Arrays.asList(targetStorageIds))\n        .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), clientName-String(modifiers-final), targets-DatanodeInfo[](modifiers-final), targetStorageTypes-StorageType[](modifiers-final)]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), clientName-String(modifiers-final), targets-DatanodeInfo[](modifiers-final), targetStorageTypes-StorageType[](modifiers-final), targetStorageIds-String[](modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9807. Add an optional StorageID to writes. Contributed by Ewan Higgs\n",
          "commitDate": "05/05/17 12:01 PM",
          "commitName": "a3954ccab148bddc290cb96528e63ff19799bcc9",
          "commitAuthor": "Chris Douglas",
          "commitDateOld": "24/06/16 2:39 AM",
          "commitNameOld": "e6cb07520f935efde3e881de8f84ee7f6e0a746f",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 315.39,
          "commitsBetweenForRepo": 2062,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n       final DatanodeInfo[] targets,\n-      final StorageType[] targetStorageTypes) throws IOException {\n+      final StorageType[] targetStorageTypes,\n+      final String[] targetStorageIds) throws IOException {\n \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n         .setHeader(DataTransferProtoUtil.buildClientHeader(\n             blk, clientName, blockToken))\n         .addAllTargets(PBHelperClient.convert(targets))\n         .addAllTargetStorageTypes(\n             PBHelperClient.convertStorageTypes(targetStorageTypes))\n+        .addAllTargetStorageIds(Arrays.asList(targetStorageIds))\n         .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets,\n      final StorageType[] targetStorageTypes,\n      final String[] targetStorageIds) throws IOException {\n\n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n        .setHeader(DataTransferProtoUtil.buildClientHeader(\n            blk, clientName, blockToken))\n        .addAllTargets(PBHelperClient.convert(targets))\n        .addAllTargetStorageTypes(\n            PBHelperClient.convertStorageTypes(targetStorageTypes))\n        .addAllTargetStorageIds(Arrays.asList(targetStorageIds))\n        .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "22/08/15 1:31 PM",
      "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "22/08/15 1:31 PM",
          "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "22/08/15 12:39 AM",
          "commitNameOld": "61bf9cae6f3882c6e9a9222f59457b9be91e3018",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n       final DatanodeInfo[] targets,\n       final StorageType[] targetStorageTypes) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n           blk, clientName, blockToken))\n-      .addAllTargets(PBHelper.convert(targets))\n-      .addAllTargetStorageTypes(PBHelper.convertStorageTypes(targetStorageTypes))\n+      .addAllTargets(PBHelperClient.convert(targets))\n+      .addAllTargetStorageTypes(PBHelperClient.convertStorageTypes(targetStorageTypes))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets,\n      final StorageType[] targetStorageTypes) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(PBHelperClient.convert(targets))\n      .addAllTargetStorageTypes(PBHelperClient.convertStorageTypes(targetStorageTypes))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "22/08/15 1:31 PM",
          "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "22/08/15 12:39 AM",
          "commitNameOld": "61bf9cae6f3882c6e9a9222f59457b9be91e3018",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n       final DatanodeInfo[] targets,\n       final StorageType[] targetStorageTypes) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n           blk, clientName, blockToken))\n-      .addAllTargets(PBHelper.convert(targets))\n-      .addAllTargetStorageTypes(PBHelper.convertStorageTypes(targetStorageTypes))\n+      .addAllTargets(PBHelperClient.convert(targets))\n+      .addAllTargetStorageTypes(PBHelperClient.convertStorageTypes(targetStorageTypes))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets,\n      final StorageType[] targetStorageTypes) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(PBHelperClient.convert(targets))\n      .addAllTargetStorageTypes(PBHelperClient.convertStorageTypes(targetStorageTypes))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "25b0e8471ed744578b2d8e3f0debe5477b268e54": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6702. Change DFSClient to pass the StorageType from the namenode to datanodes and change datanode to write block replicas using the specified storage type.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612493 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/14 12:41 AM",
      "commitName": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6702. Change DFSClient to pass the StorageType from the namenode to datanodes and change datanode to write block replicas using the specified storage type.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612493 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/07/14 12:41 AM",
          "commitName": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/14 10:09 PM",
          "commitNameOld": "f93d99990a9a02ce693cd74466c2e5f127c1f560",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 111.11,
          "commitsBetweenForRepo": 679,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n-      final DatanodeInfo[] targets) throws IOException {\n+      final DatanodeInfo[] targets,\n+      final StorageType[] targetStorageTypes) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n           blk, clientName, blockToken))\n       .addAllTargets(PBHelper.convert(targets))\n+      .addAllTargetStorageTypes(PBHelper.convertStorageTypes(targetStorageTypes))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets,\n      final StorageType[] targetStorageTypes) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(PBHelper.convert(targets))\n      .addAllTargetStorageTypes(PBHelper.convertStorageTypes(targetStorageTypes))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), clientName-String(modifiers-final), targets-DatanodeInfo[](modifiers-final)]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), clientName-String(modifiers-final), targets-DatanodeInfo[](modifiers-final), targetStorageTypes-StorageType[](modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6702. Change DFSClient to pass the StorageType from the namenode to datanodes and change datanode to write block replicas using the specified storage type.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612493 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/07/14 12:41 AM",
          "commitName": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/14 10:09 PM",
          "commitNameOld": "f93d99990a9a02ce693cd74466c2e5f127c1f560",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 111.11,
          "commitsBetweenForRepo": 679,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n-      final DatanodeInfo[] targets) throws IOException {\n+      final DatanodeInfo[] targets,\n+      final StorageType[] targetStorageTypes) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n           blk, clientName, blockToken))\n       .addAllTargets(PBHelper.convert(targets))\n+      .addAllTargetStorageTypes(PBHelper.convertStorageTypes(targetStorageTypes))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets,\n      final StorageType[] targetStorageTypes) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(PBHelper.convert(targets))\n      .addAllTargetStorageTypes(PBHelper.convertStorageTypes(targetStorageTypes))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4363. Combine PBHelper and HdfsProtoUtil and remove redundant methods. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431088 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 1:20 PM",
      "commitName": "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "31/10/11 10:17 PM",
      "commitNameOld": "1c940637b14eee777a65d153d0d712a1aea3866c",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 435.67,
      "commitsBetweenForRepo": 2616,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void transferBlock(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       final String clientName,\n       final DatanodeInfo[] targets) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n           blk, clientName, blockToken))\n-      .addAllTargets(toProtos(targets, 0))\n+      .addAllTargets(PBHelper.convert(targets))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(PBHelper.convert(targets))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java"
      }
    },
    "2f48fae72aa52e6ec42264cad24fab36b6a426c2": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/06/11 4:57 PM",
      "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n-      String client, DatanodeInfo[] targets,\n-      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n+  public void transferBlock(final ExtendedBlock blk,\n+      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n+      final String clientName,\n+      final DatanodeInfo[] targets) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n-          blk, client, blockToken))\n+          blk, clientName, blockToken))\n       .addAllTargets(toProtos(targets, 0))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "opTransferBlock",
            "newValue": "transferBlock"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n-      String client, DatanodeInfo[] targets,\n-      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n+  public void transferBlock(final ExtendedBlock blk,\n+      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n+      final String clientName,\n+      final DatanodeInfo[] targets) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n-          blk, client, blockToken))\n+          blk, clientName, blockToken))\n       .addAllTargets(toProtos(targets, 0))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[out-DataOutputStream, blk-ExtendedBlock, client-String, targets-DatanodeInfo[], blockToken-Token\u003cBlockTokenIdentifier\u003e]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), clientName-String(modifiers-final), targets-DatanodeInfo[](modifiers-final)]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n-      String client, DatanodeInfo[] targets,\n-      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n+  public void transferBlock(final ExtendedBlock blk,\n+      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n+      final String clientName,\n+      final DatanodeInfo[] targets) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n-          blk, client, blockToken))\n+          blk, clientName, blockToken))\n       .addAllTargets(toProtos(targets, 0))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n-      String client, DatanodeInfo[] targets,\n-      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n+  public void transferBlock(final ExtendedBlock blk,\n+      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n+      final String clientName,\n+      final DatanodeInfo[] targets) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n-          blk, client, blockToken))\n+          blk, clientName, blockToken))\n       .addAllTargets(toProtos(targets, 0))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n-      String client, DatanodeInfo[] targets,\n-      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n+  public void transferBlock(final ExtendedBlock blk,\n+      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n+      final String clientName,\n+      final DatanodeInfo[] targets) throws IOException {\n     \n     OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n       .setHeader(DataTransferProtoUtil.buildClientHeader(\n-          blk, client, blockToken))\n+          blk, clientName, blockToken))\n       .addAllTargets(toProtos(targets, 0))\n       .build();\n \n     send(out, Op.TRANSFER_BLOCK, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferBlock(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      final String clientName,\n      final DatanodeInfo[] targets) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, clientName, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[out-DataOutputStream, blk-ExtendedBlock, client-String, targets-DatanodeInfo[], blockToken-Token\u003cBlockTokenIdentifier\u003e]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), clientName-String(modifiers-final), targets-DatanodeInfo[](modifiers-final)]"
          }
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,12 @@\n+  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n+      String client, DatanodeInfo[] targets,\n+      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n+    \n+    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n+      .setHeader(DataTransferProtoUtil.buildClientHeader(\n+          blk, client, blockToken))\n+      .addAllTargets(toProtos(targets, 0))\n+      .build();\n+\n+    send(out, Op.TRANSFER_BLOCK, proto);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void opTransferBlock(DataOutputStream out, ExtendedBlock blk,\n      String client, DatanodeInfo[] targets,\n      Token\u003cBlockTokenIdentifier\u003e blockToken) throws IOException {\n    \n    OpTransferBlockProto proto \u003d OpTransferBlockProto.newBuilder()\n      .setHeader(DataTransferProtoUtil.buildClientHeader(\n          blk, client, blockToken))\n      .addAllTargets(toProtos(targets, 0))\n      .build();\n\n    send(out, Op.TRANSFER_BLOCK, proto);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java"
    }
  }
}