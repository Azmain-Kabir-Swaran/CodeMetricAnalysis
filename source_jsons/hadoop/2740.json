{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObserverReadProxyProvider.java",
  "functionName": "close",
  "functionId": "close",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
  "functionStartLine": 533,
  "functionEndLine": 533,
  "numCommitsSeen": 24,
  "timeTaken": 866,
  "changeHistory": [
    "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847",
    "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a"
  ],
  "changeHistoryShort": {
    "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847": "Ybodychange",
    "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13779. [SBN read] Implement proper failover and observer failure handling logic for for ObserverReadProxyProvider. Contributed by Erik Krogen.\n",
      "commitDate": "24/12/18 9:34 AM",
      "commitName": "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "24/12/18 9:34 AM",
      "commitNameOld": "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n   public synchronized void close() throws IOException {\n-    failoverProxy.close();\n     for (ProxyInfo\u003cT\u003e pi : nameNodeProxies) {\n       if (pi.proxy !\u003d null) {\n         if (pi.proxy instanceof Closeable) {\n           ((Closeable)pi.proxy).close();\n         } else {\n           RPC.stopProxy(pi.proxy);\n         }\n+        // Set to null to avoid the failoverProxy having to re-do the close\n+        // if it is sharing a proxy instance\n+        pi.proxy \u003d null;\n       }\n     }\n+    failoverProxy.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    for (ProxyInfo\u003cT\u003e pi : nameNodeProxies) {\n      if (pi.proxy !\u003d null) {\n        if (pi.proxy instanceof Closeable) {\n          ((Closeable)pi.proxy).close();\n        } else {\n          RPC.stopProxy(pi.proxy);\n        }\n        // Set to null to avoid the failoverProxy having to re-do the close\n        // if it is sharing a proxy instance\n        pi.proxy \u003d null;\n      }\n    }\n    failoverProxy.close();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
      "extendedDetails": {}
    },
    "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13782. ObserverReadProxyProvider should work with IPFailoverProxyProvider. Contributed by Konstantin Shvachko.",
      "commitDate": "24/12/18 9:34 AM",
      "commitName": "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a",
      "commitAuthor": "Konstantin V Shvachko",
      "diff": "@@ -0,0 +1,12 @@\n+  public synchronized void close() throws IOException {\n+    failoverProxy.close();\n+    for (ProxyInfo\u003cT\u003e pi : nameNodeProxies) {\n+      if (pi.proxy !\u003d null) {\n+        if (pi.proxy instanceof Closeable) {\n+          ((Closeable)pi.proxy).close();\n+        } else {\n+          RPC.stopProxy(pi.proxy);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    failoverProxy.close();\n    for (ProxyInfo\u003cT\u003e pi : nameNodeProxies) {\n      if (pi.proxy !\u003d null) {\n        if (pi.proxy instanceof Closeable) {\n          ((Closeable)pi.proxy).close();\n        } else {\n          RPC.stopProxy(pi.proxy);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java"
    }
  }
}