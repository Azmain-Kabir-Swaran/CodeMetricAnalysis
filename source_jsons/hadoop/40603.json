{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerPlacementProcessor.java",
  "functionName": "allocate",
  "functionId": "allocate___appAttemptId-ApplicationAttemptId__request-AllocateRequest__response-AllocateResponse",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/SchedulerPlacementProcessor.java",
  "functionStartLine": 38,
  "functionEndLine": 54,
  "numCommitsSeen": 1,
  "timeTaken": 1201,
  "changeHistory": [
    "0b489e564ce5a50324a530e29c18aa8a75276c50"
  ],
  "changeHistoryShort": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7920. Simplify configuration for PlacementConstraints. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 2:23 PM",
      "commitName": "0b489e564ce5a50324a530e29c18aa8a75276c50",
      "commitAuthor": "Konstantinos Karanasos",
      "diff": "@@ -0,0 +1,17 @@\n+  public void allocate(ApplicationAttemptId appAttemptId,\n+      AllocateRequest request, AllocateResponse response) throws YarnException {\n+    if (request.getSchedulingRequests() !\u003d null\n+        \u0026\u0026 !request.getSchedulingRequests().isEmpty()) {\n+      if (!(scheduler instanceof CapacityScheduler)) {\n+        String message \u003d \"Found non empty SchedulingRequest of \"\n+            + \"AllocateRequest for application\u003d\" + appAttemptId.toString()\n+            + \", however the configured scheduler\u003d\"\n+            + scheduler.getClass().getCanonicalName()\n+            + \" cannot handle placement constraints, rejecting this \"\n+            + \"allocate operation\";\n+        LOG.warn(message);\n+        throw new YarnException(message);\n+      }\n+    }\n+    nextAMSProcessor.allocate(appAttemptId, request, response);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocate(ApplicationAttemptId appAttemptId,\n      AllocateRequest request, AllocateResponse response) throws YarnException {\n    if (request.getSchedulingRequests() !\u003d null\n        \u0026\u0026 !request.getSchedulingRequests().isEmpty()) {\n      if (!(scheduler instanceof CapacityScheduler)) {\n        String message \u003d \"Found non empty SchedulingRequest of \"\n            + \"AllocateRequest for application\u003d\" + appAttemptId.toString()\n            + \", however the configured scheduler\u003d\"\n            + scheduler.getClass().getCanonicalName()\n            + \" cannot handle placement constraints, rejecting this \"\n            + \"allocate operation\";\n        LOG.warn(message);\n        throw new YarnException(message);\n      }\n    }\n    nextAMSProcessor.allocate(appAttemptId, request, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/SchedulerPlacementProcessor.java"
    }
  }
}