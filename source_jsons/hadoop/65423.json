{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3Guard.java",
  "functionName": "listChildrenWithTtl",
  "functionId": "listChildrenWithTtl___ms-MetadataStore__path-Path__timeProvider-ITtlTimeProvider(annotations-@Nullable)__allowAuthoritative-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
  "functionStartLine": 952,
  "functionEndLine": 977,
  "numCommitsSeen": 54,
  "timeTaken": 4435,
  "changeHistory": [
    "ea25f4de236611d388e14a710ebe5d6872c421b6",
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
    "046b8768af8a07a9e10ce43f538d6ac16e7fa5f3"
  ],
  "changeHistoryShort": {
    "ea25f4de236611d388e14a710ebe5d6872c421b6": "Ymultichange(Yparameterchange,Ybodychange)",
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c": "Ymultichange(Ybodychange,Yparametermetachange)",
    "046b8768af8a07a9e10ce43f538d6ac16e7fa5f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ea25f4de236611d388e14a710ebe5d6872c421b6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16709. S3Guard: Make authoritative mode exclusive for metadata - don\u0027t check for expiry for authoritative paths (#1721). Contributed by Gabor Bota.\n\n",
      "commitDate": "26/11/19 7:36 AM",
      "commitName": "ea25f4de236611d388e14a710ebe5d6872c421b6",
      "commitAuthor": "Gabor Bota",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16709. S3Guard: Make authoritative mode exclusive for metadata - don\u0027t check for expiry for authoritative paths (#1721). Contributed by Gabor Bota.\n\n",
          "commitDate": "26/11/19 7:36 AM",
          "commitName": "ea25f4de236611d388e14a710ebe5d6872c421b6",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "04/11/19 3:55 AM",
          "commitNameOld": "dca19fc3aa509949daf29bc902b2f74760407fc4",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 22.15,
          "commitsBetweenForRepo": 93,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,26 @@\n   public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n-      Path path, @Nullable ITtlTimeProvider timeProvider)\n+      Path path,\n+      @Nullable ITtlTimeProvider timeProvider,\n+      boolean allowAuthoritative)\n       throws IOException {\n     DirListingMetadata dlm \u003d ms.listChildren(path);\n \n     if (timeProvider \u003d\u003d null) {\n       LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n       return dlm;\n     }\n \n-    long ttl \u003d timeProvider.getMetadataTtl();\n-\n-    if (dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n-        \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n-      dlm.setAuthoritative(false);\n+    if (allowAuthoritative) {\n+      LOG.debug(\"allowAuthoritative is true, returning pathMetadata as is\");\n+      return dlm;\n     }\n+\n+    // filter expired entries\n+    if (dlm !\u003d null) {\n+      dlm.removeExpiredEntriesFromListing(\n+          timeProvider.getMetadataTtl(),\n+          timeProvider.getNow());\n+    }\n+\n     return dlm;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n      Path path,\n      @Nullable ITtlTimeProvider timeProvider,\n      boolean allowAuthoritative)\n      throws IOException {\n    DirListingMetadata dlm \u003d ms.listChildren(path);\n\n    if (timeProvider \u003d\u003d null) {\n      LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n      return dlm;\n    }\n\n    if (allowAuthoritative) {\n      LOG.debug(\"allowAuthoritative is true, returning pathMetadata as is\");\n      return dlm;\n    }\n\n    // filter expired entries\n    if (dlm !\u003d null) {\n      dlm.removeExpiredEntriesFromListing(\n          timeProvider.getMetadataTtl(),\n          timeProvider.getNow());\n    }\n\n    return dlm;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "[ms-MetadataStore, path-Path, timeProvider-ITtlTimeProvider(annotations-@Nullable)]",
            "newValue": "[ms-MetadataStore, path-Path, timeProvider-ITtlTimeProvider(annotations-@Nullable), allowAuthoritative-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16709. S3Guard: Make authoritative mode exclusive for metadata - don\u0027t check for expiry for authoritative paths (#1721). Contributed by Gabor Bota.\n\n",
          "commitDate": "26/11/19 7:36 AM",
          "commitName": "ea25f4de236611d388e14a710ebe5d6872c421b6",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "04/11/19 3:55 AM",
          "commitNameOld": "dca19fc3aa509949daf29bc902b2f74760407fc4",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 22.15,
          "commitsBetweenForRepo": 93,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,26 @@\n   public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n-      Path path, @Nullable ITtlTimeProvider timeProvider)\n+      Path path,\n+      @Nullable ITtlTimeProvider timeProvider,\n+      boolean allowAuthoritative)\n       throws IOException {\n     DirListingMetadata dlm \u003d ms.listChildren(path);\n \n     if (timeProvider \u003d\u003d null) {\n       LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n       return dlm;\n     }\n \n-    long ttl \u003d timeProvider.getMetadataTtl();\n-\n-    if (dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n-        \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n-      dlm.setAuthoritative(false);\n+    if (allowAuthoritative) {\n+      LOG.debug(\"allowAuthoritative is true, returning pathMetadata as is\");\n+      return dlm;\n     }\n+\n+    // filter expired entries\n+    if (dlm !\u003d null) {\n+      dlm.removeExpiredEntriesFromListing(\n+          timeProvider.getMetadataTtl(),\n+          timeProvider.getNow());\n+    }\n+\n     return dlm;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n      Path path,\n      @Nullable ITtlTimeProvider timeProvider,\n      boolean allowAuthoritative)\n      throws IOException {\n    DirListingMetadata dlm \u003d ms.listChildren(path);\n\n    if (timeProvider \u003d\u003d null) {\n      LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n      return dlm;\n    }\n\n    if (allowAuthoritative) {\n      LOG.debug(\"allowAuthoritative is true, returning pathMetadata as is\");\n      return dlm;\n    }\n\n    // filter expired entries\n    if (dlm !\u003d null) {\n      dlm.removeExpiredEntriesFromListing(\n          timeProvider.getMetadataTtl(),\n          timeProvider.getNow());\n    }\n\n    return dlm;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {}
        }
      ]
    },
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
      "commitDate": "16/06/19 9:05 AM",
      "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
      "commitAuthor": "Gabor Bota",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
          "commitDate": "16/06/19 9:05 AM",
          "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "19/05/19 2:29 PM",
          "commitNameOld": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 27.77,
          "commitsBetweenForRepo": 198,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,18 @@\n   public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n-      Path path, ITtlTimeProvider timeProvider)\n+      Path path, @Nullable ITtlTimeProvider timeProvider)\n       throws IOException {\n-    long ttl \u003d timeProvider.getAuthoritativeDirTtl();\n-\n     DirListingMetadata dlm \u003d ms.listChildren(path);\n \n-    if(dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n+    if (timeProvider \u003d\u003d null) {\n+      LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n+      return dlm;\n+    }\n+\n+    long ttl \u003d timeProvider.getMetadataTtl();\n+\n+    if (dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n         \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n       dlm.setAuthoritative(false);\n     }\n     return dlm;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n      Path path, @Nullable ITtlTimeProvider timeProvider)\n      throws IOException {\n    DirListingMetadata dlm \u003d ms.listChildren(path);\n\n    if (timeProvider \u003d\u003d null) {\n      LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n      return dlm;\n    }\n\n    long ttl \u003d timeProvider.getMetadataTtl();\n\n    if (dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n        \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n      dlm.setAuthoritative(false);\n    }\n    return dlm;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
          "commitDate": "16/06/19 9:05 AM",
          "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "19/05/19 2:29 PM",
          "commitNameOld": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 27.77,
          "commitsBetweenForRepo": 198,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,18 @@\n   public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n-      Path path, ITtlTimeProvider timeProvider)\n+      Path path, @Nullable ITtlTimeProvider timeProvider)\n       throws IOException {\n-    long ttl \u003d timeProvider.getAuthoritativeDirTtl();\n-\n     DirListingMetadata dlm \u003d ms.listChildren(path);\n \n-    if(dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n+    if (timeProvider \u003d\u003d null) {\n+      LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n+      return dlm;\n+    }\n+\n+    long ttl \u003d timeProvider.getMetadataTtl();\n+\n+    if (dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n         \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n       dlm.setAuthoritative(false);\n     }\n     return dlm;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n      Path path, @Nullable ITtlTimeProvider timeProvider)\n      throws IOException {\n    DirListingMetadata dlm \u003d ms.listChildren(path);\n\n    if (timeProvider \u003d\u003d null) {\n      LOG.debug(\"timeProvider is null, returning DirListingMetadata as is\");\n      return dlm;\n    }\n\n    long ttl \u003d timeProvider.getMetadataTtl();\n\n    if (dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n        \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n      dlm.setAuthoritative(false);\n    }\n    return dlm;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "[ms-MetadataStore, path-Path, timeProvider-ITtlTimeProvider]",
            "newValue": "[ms-MetadataStore, path-Path, timeProvider-ITtlTimeProvider(annotations-@Nullable)]"
          }
        }
      ]
    },
    "046b8768af8a07a9e10ce43f538d6ac16e7fa5f3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15621 S3Guard: Implement time-based (TTL) expiry for Authoritative Directory Listing. Contributed by Gabor Bota\n",
      "commitDate": "02/10/18 9:22 PM",
      "commitName": "046b8768af8a07a9e10ce43f538d6ac16e7fa5f3",
      "commitAuthor": "Aaron Fabbri",
      "diff": "@@ -0,0 +1,13 @@\n+  public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n+      Path path, ITtlTimeProvider timeProvider)\n+      throws IOException {\n+    long ttl \u003d timeProvider.getAuthoritativeDirTtl();\n+\n+    DirListingMetadata dlm \u003d ms.listChildren(path);\n+\n+    if(dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n+        \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n+      dlm.setAuthoritative(false);\n+    }\n+    return dlm;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static DirListingMetadata listChildrenWithTtl(MetadataStore ms,\n      Path path, ITtlTimeProvider timeProvider)\n      throws IOException {\n    long ttl \u003d timeProvider.getAuthoritativeDirTtl();\n\n    DirListingMetadata dlm \u003d ms.listChildren(path);\n\n    if(dlm !\u003d null \u0026\u0026 dlm.isAuthoritative()\n        \u0026\u0026 dlm.isExpired(ttl, timeProvider.getNow())) {\n      dlm.setAuthoritative(false);\n    }\n    return dlm;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java"
    }
  }
}