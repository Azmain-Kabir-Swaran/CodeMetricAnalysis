{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IntraQueueCandidatesSelector.java",
  "functionName": "compare",
  "functionId": "compare___ta1-TempAppPerPartition__ta2-TempAppPerPartition",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
  "functionStartLine": 85,
  "functionEndLine": 104,
  "numCommitsSeen": 46,
  "timeTaken": 5796,
  "changeHistory": [
    "7c343669baf660df3b70d58987d6e68aec54d6fa",
    "c583ab02c730be0a63d974039a78f2dc67dc2db6",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "60e4116bf1d00afed91010e57357fe54057e4e39",
    "3122daa80261b466e309e88d88d1e2c030525e3f",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "7c343669baf660df3b70d58987d6e68aec54d6fa": "Ybodychange",
    "c583ab02c730be0a63d974039a78f2dc67dc2db6": "Ymultichange(Yparameterchange,Ybodychange)",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ybodychange",
    "60e4116bf1d00afed91010e57357fe54057e4e39": "Ymovefromfile",
    "3122daa80261b466e309e88d88d1e2c030525e3f": "Ybodychange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7c343669baf660df3b70d58987d6e68aec54d6fa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4781. Support intra-queue preemption for fairness ordering policy. Contributed by Eric Payne.\n",
      "commitDate": "28/05/18 4:02 AM",
      "commitName": "7c343669baf660df3b70d58987d6e68aec54d6fa",
      "commitAuthor": "Sunil G",
      "commitDateOld": "25/05/18 9:06 AM",
      "commitNameOld": "8d5509c68156faaa6641f4e747fc9ff80adccf88",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 2.79,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,20 @@\n     public int compare(TempAppPerPartition ta1, TempAppPerPartition ta2) {\n-      Priority p1 \u003d Priority.newInstance(ta1.getPriority());\n-      Priority p2 \u003d Priority.newInstance(ta2.getPriority());\n-\n-      if (!p1.equals(p2)) {\n-        return p1.compareTo(p2);\n+      if (ta1.getUser().equals(ta2.getUser())) {\n+        AbstractComparatorOrderingPolicy\u003cFiCaSchedulerApp\u003e acop \u003d\n+            (AbstractComparatorOrderingPolicy\u003cFiCaSchedulerApp\u003e)\n+            ta1.getFiCaSchedulerApp().getCSLeafQueue().getOrderingPolicy();\n+        return acop.getComparator()\n+                  .compare(ta1.getFiCaSchedulerApp(), ta2.getFiCaSchedulerApp());\n+      } else {\n+        Resource usedByUser1 \u003d ta1.getTempUserPerPartition().getUsedDeductAM();\n+        Resource usedByUser2 \u003d ta2.getTempUserPerPartition().getUsedDeductAM();\n+        if (Resources.equals(usedByUser1, usedByUser2)) {\n+          return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n+        }\n+        if (Resources.lessThan(rc, clusterRes, usedByUser1, usedByUser2)) {\n+          return -1;\n+        } else {\n+          return 1;\n+        }\n       }\n-      return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int compare(TempAppPerPartition ta1, TempAppPerPartition ta2) {\n      if (ta1.getUser().equals(ta2.getUser())) {\n        AbstractComparatorOrderingPolicy\u003cFiCaSchedulerApp\u003e acop \u003d\n            (AbstractComparatorOrderingPolicy\u003cFiCaSchedulerApp\u003e)\n            ta1.getFiCaSchedulerApp().getCSLeafQueue().getOrderingPolicy();\n        return acop.getComparator()\n                  .compare(ta1.getFiCaSchedulerApp(), ta2.getFiCaSchedulerApp());\n      } else {\n        Resource usedByUser1 \u003d ta1.getTempUserPerPartition().getUsedDeductAM();\n        Resource usedByUser2 \u003d ta2.getTempUserPerPartition().getUsedDeductAM();\n        if (Resources.equals(usedByUser1, usedByUser2)) {\n          return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n        }\n        if (Resources.lessThan(rc, clusterRes, usedByUser1, usedByUser2)) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
      "extendedDetails": {}
    },
    "c583ab02c730be0a63d974039a78f2dc67dc2db6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2113. Add cross-user preemption within CapacityScheduler\u0027s leaf-queue. (Sunil G via wangda)\n\nChange-Id: I9b19f69788068be05b3295247cdd7b972f8a573c\n",
      "commitDate": "22/05/17 2:26 PM",
      "commitName": "c583ab02c730be0a63d974039a78f2dc67dc2db6",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2113. Add cross-user preemption within CapacityScheduler\u0027s leaf-queue. (Sunil G via wangda)\n\nChange-Id: I9b19f69788068be05b3295247cdd7b972f8a573c\n",
          "commitDate": "22/05/17 2:26 PM",
          "commitName": "c583ab02c730be0a63d974039a78f2dc67dc2db6",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "08/03/17 2:46 PM",
          "commitNameOld": "d7762a55113a529abd6f4ecb8e6d9b0a84b56e08",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 74.94,
          "commitsBetweenForRepo": 417,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n-      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n-      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n+    public int compare(TempAppPerPartition ta1, TempAppPerPartition ta2) {\n+      Priority p1 \u003d Priority.newInstance(ta1.getPriority());\n+      Priority p2 \u003d Priority.newInstance(ta2.getPriority());\n \n       if (!p1.equals(p2)) {\n         return p1.compareTo(p2);\n       }\n-      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n+      return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(TempAppPerPartition ta1, TempAppPerPartition ta2) {\n      Priority p1 \u003d Priority.newInstance(ta1.getPriority());\n      Priority p2 \u003d Priority.newInstance(ta2.getPriority());\n\n      if (!p1.equals(p2)) {\n        return p1.compareTo(p2);\n      }\n      return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
          "extendedDetails": {
            "oldValue": "[tq1-TempAppPerPartition, tq2-TempAppPerPartition]",
            "newValue": "[ta1-TempAppPerPartition, ta2-TempAppPerPartition]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2113. Add cross-user preemption within CapacityScheduler\u0027s leaf-queue. (Sunil G via wangda)\n\nChange-Id: I9b19f69788068be05b3295247cdd7b972f8a573c\n",
          "commitDate": "22/05/17 2:26 PM",
          "commitName": "c583ab02c730be0a63d974039a78f2dc67dc2db6",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "08/03/17 2:46 PM",
          "commitNameOld": "d7762a55113a529abd6f4ecb8e6d9b0a84b56e08",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 74.94,
          "commitsBetweenForRepo": 417,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n-      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n-      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n+    public int compare(TempAppPerPartition ta1, TempAppPerPartition ta2) {\n+      Priority p1 \u003d Priority.newInstance(ta1.getPriority());\n+      Priority p2 \u003d Priority.newInstance(ta2.getPriority());\n \n       if (!p1.equals(p2)) {\n         return p1.compareTo(p2);\n       }\n-      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n+      return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(TempAppPerPartition ta1, TempAppPerPartition ta2) {\n      Priority p1 \u003d Priority.newInstance(ta1.getPriority());\n      Priority p2 \u003d Priority.newInstance(ta2.getPriority());\n\n      if (!p1.equals(p2)) {\n        return p1.compareTo(p2);\n      }\n      return ta1.getApplicationId().compareTo(ta2.getApplicationId());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
          "extendedDetails": {}
        }
      ]
    },
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
          "commitDate": "31/10/16 3:18 PM",
          "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "31/10/16 2:47 PM",
          "commitNameOld": "773c60bd7bd00651dc3016799b424b9bd2233eb3",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-      public int compare(RMContainer a, RMContainer b) {\n-        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n-                .compareTo(a.getAllocatedSchedulerKey());\n-        if (schedKeyComp !\u003d 0) {\n-          return schedKeyComp;\n-        }\n-        return b.getContainerId().compareTo(a.getContainerId());\n-      }\n\\ No newline at end of file\n+    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n+      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n+      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n+\n+      if (!p1.equals(p2)) {\n+        return p1.compareTo(p2);\n+      }\n+      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n\n      if (!p1.equals(p2)) {\n        return p1.compareTo(p2);\n      }\n      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
            "oldMethodName": "compare",
            "newMethodName": "compare"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
          "commitDate": "31/10/16 3:18 PM",
          "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "31/10/16 2:47 PM",
          "commitNameOld": "773c60bd7bd00651dc3016799b424b9bd2233eb3",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-      public int compare(RMContainer a, RMContainer b) {\n-        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n-                .compareTo(a.getAllocatedSchedulerKey());\n-        if (schedKeyComp !\u003d 0) {\n-          return schedKeyComp;\n-        }\n-        return b.getContainerId().compareTo(a.getContainerId());\n-      }\n\\ No newline at end of file\n+    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n+      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n+      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n+\n+      if (!p1.equals(p2)) {\n+        return p1.compareTo(p2);\n+      }\n+      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n\n      if (!p1.equals(p2)) {\n        return p1.compareTo(p2);\n      }\n      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
          "commitDate": "31/10/16 3:18 PM",
          "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "31/10/16 2:47 PM",
          "commitNameOld": "773c60bd7bd00651dc3016799b424b9bd2233eb3",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-      public int compare(RMContainer a, RMContainer b) {\n-        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n-                .compareTo(a.getAllocatedSchedulerKey());\n-        if (schedKeyComp !\u003d 0) {\n-          return schedKeyComp;\n-        }\n-        return b.getContainerId().compareTo(a.getContainerId());\n-      }\n\\ No newline at end of file\n+    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n+      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n+      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n+\n+      if (!p1.equals(p2)) {\n+        return p1.compareTo(p2);\n+      }\n+      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(TempAppPerPartition tq1, TempAppPerPartition tq2) {\n      Priority p1 \u003d Priority.newInstance(tq1.getPriority());\n      Priority p2 \u003d Priority.newInstance(tq2.getPriority());\n\n      if (!p1.equals(p2)) {\n        return p1.compareTo(p2);\n      }\n      return tq1.getApplicationId().compareTo(tq2.getApplicationId());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java",
          "extendedDetails": {
            "oldValue": "[a-RMContainer, b-RMContainer]",
            "newValue": "[tq1-TempAppPerPartition, tq2-TempAppPerPartition]"
          }
        }
      ]
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 82.08,
      "commitsBetweenForRepo": 671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,8 @@\n       public int compare(RMContainer a, RMContainer b) {\n-        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n-            .resourcemanager.resource.Priority.Comparator();\n-        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n-            a.getContainer().getPriority());\n-        if (priorityComp !\u003d 0) {\n-          return priorityComp;\n+        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n+                .compareTo(a.getAllocatedSchedulerKey());\n+        if (schedKeyComp !\u003d 0) {\n+          return schedKeyComp;\n         }\n         return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        int schedKeyComp \u003d b.getAllocatedSchedulerKey()\n                .compareTo(a.getAllocatedSchedulerKey());\n        if (schedKeyComp !\u003d 0) {\n          return schedKeyComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
      "extendedDetails": {}
    },
    "60e4116bf1d00afed91010e57357fe54057e4e39": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
      "commitDate": "30/03/16 12:43 PM",
      "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/03/16 11:22 PM",
      "commitNameOld": "09d63d5a192b5d6b172f94ff6c94da348fd49ea6",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n       public int compare(RMContainer a, RMContainer b) {\n         Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n             .resourcemanager.resource.Priority.Comparator();\n         int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n-                                     a.getContainer().getPriority());\n+            a.getContainer().getPriority());\n         if (priorityComp !\u003d 0) {\n           return priorityComp;\n         }\n         return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n            .resourcemanager.resource.Priority.Comparator();\n        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n            a.getContainer().getPriority());\n        if (priorityComp !\u003d 0) {\n          return priorityComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java",
        "oldMethodName": "compare",
        "newMethodName": "compare"
      }
    },
    "3122daa80261b466e309e88d88d1e2c030525e3f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2229. Changed the integer field of ContainerId to be long type. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "12/09/14 10:33 AM",
      "commitName": "3122daa80261b466e309e88d88d1e2c030525e3f",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/07/14 6:54 PM",
      "commitNameOld": "03a25d2cc1a2fb124d00edf874d67e329c65a5e6",
      "commitAuthorOld": "Mayank Bansal",
      "daysBetweenCommits": 72.65,
      "commitsBetweenForRepo": 597,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n       public int compare(RMContainer a, RMContainer b) {\n         Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n             .resourcemanager.resource.Priority.Comparator();\n         int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n                                      a.getContainer().getPriority());\n         if (priorityComp !\u003d 0) {\n           return priorityComp;\n         }\n-        return b.getContainerId().getId() -\n-               a.getContainerId().getId();\n+        return b.getContainerId().compareTo(a.getContainerId());\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n            .resourcemanager.resource.Priority.Comparator();\n        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n                                     a.getContainer().getPriority());\n        if (priorityComp !\u003d 0) {\n          return priorityComp;\n        }\n        return b.getContainerId().compareTo(a.getContainerId());\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,11 @@\n+      public int compare(RMContainer a, RMContainer b) {\n+        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n+            .resourcemanager.resource.Priority.Comparator();\n+        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n+                                     a.getContainer().getPriority());\n+        if (priorityComp !\u003d 0) {\n+          return priorityComp;\n+        }\n+        return b.getContainerId().getId() -\n+               a.getContainerId().getId();\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(RMContainer a, RMContainer b) {\n        Comparator\u003cPriority\u003e c \u003d new org.apache.hadoop.yarn.server\n            .resourcemanager.resource.Priority.Comparator();\n        int priorityComp \u003d c.compare(b.getContainer().getPriority(),\n                                     a.getContainer().getPriority());\n        if (priorityComp !\u003d 0) {\n          return priorityComp;\n        }\n        return b.getContainerId().getId() -\n               a.getContainerId().getId();\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java"
    }
  }
}