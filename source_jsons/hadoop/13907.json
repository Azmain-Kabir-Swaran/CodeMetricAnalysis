{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "checkRedundancy",
  "functionId": "checkRedundancy___bc-BlockCollection",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 4652,
  "functionEndLine": 4664,
  "numCommitsSeen": 935,
  "timeTaken": 24194,
  "changeHistory": [
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
    "8c84a2a93c22a93b4ff46dd917f6efb995675fbd",
    "5865fe2bf01284993572ea60b3ec3bf8b4492818",
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
    "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b",
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
    "5411dc559d5f73e4153e76fdff94a26869c17a37",
    "2a987243423eb5c7e191de2ba969b7591a441c70",
    "745d04be59accf80feda0ad38efcc74ba362f2ca",
    "6e3fcffe291faec40fa9214f4880a35a952836c4",
    "b008348dbf9bdd5070930be5d182116c5d370f6b",
    "a38a37c63417a3b19dcdf98251af196c9d7b8c31",
    "6d5da9484185ca9f585195d6da069b9cd5be4044",
    "f8f5887209a7d8e53c0a77abef275cbcaf1f7a5b",
    "75cdb5bb4965161021df47376cccf058bf413f3b",
    "3ced5ea06698fa781f76c5e7d4440f54ce5fcad3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": "Ybodychange",
    "8c84a2a93c22a93b4ff46dd917f6efb995675fbd": "Ymultichange(Yrename,Ybodychange)",
    "5865fe2bf01284993572ea60b3ec3bf8b4492818": "Ybodychange",
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5": "Ybodychange",
    "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b": "Ybodychange",
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba": "Ybodychange",
    "5411dc559d5f73e4153e76fdff94a26869c17a37": "Ybodychange",
    "2a987243423eb5c7e191de2ba969b7591a441c70": "Ybodychange",
    "745d04be59accf80feda0ad38efcc74ba362f2ca": "Ybodychange",
    "6e3fcffe291faec40fa9214f4880a35a952836c4": "Ybodychange",
    "b008348dbf9bdd5070930be5d182116c5d370f6b": "Ybodychange",
    "a38a37c63417a3b19dcdf98251af196c9d7b8c31": "Ybodychange",
    "6d5da9484185ca9f585195d6da069b9cd5be4044": "Ybodychange",
    "f8f5887209a7d8e53c0a77abef275cbcaf1f7a5b": "Ybodychange",
    "75cdb5bb4965161021df47376cccf058bf413f3b": "Ymultichange(Yparameterchange,Ybodychange)",
    "3ced5ea06698fa781f76c5e7d4440f54ce5fcad3": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange)",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange)",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9390. Block management for maintenance states.\n",
      "commitDate": "17/10/16 5:45 PM",
      "commitName": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "14/10/16 6:13 PM",
      "commitNameOld": "391ce535a739dc92cb90017d759217265a4fd969",
      "commitAuthorOld": "Vinitha Reddy Gankidi",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n   public void checkRedundancy(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedRedundancyNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReconstruction.getNumReplicas(block);\n-      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n+      if (!hasEnoughEffectiveReplicas(block, n, pending)) {\n         neededReconstruction.add(block, n.liveReplicas() + pending,\n-            n.readOnlyReplicas(),\n-            n.decommissionedAndDecommissioning(), expected);\n+            n.readOnlyReplicas(), n.outOfServiceReplicas(), expected);\n       } else if (shouldProcessExtraRedundancy(n, expected)) {\n         processExtraRedundancyBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkRedundancy(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedRedundancyNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReconstruction.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending)) {\n        neededReconstruction.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(), n.outOfServiceReplicas(), expected);\n      } else if (shouldProcessExtraRedundancy(n, expected)) {\n        processExtraRedundancyBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "8c84a2a93c22a93b4ff46dd917f6efb995675fbd": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-10236. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-3]. Contributed by Rakesh R.\n",
      "commitDate": "26/05/16 4:50 PM",
      "commitName": "8c84a2a93c22a93b4ff46dd917f6efb995675fbd",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-10236. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-3]. Contributed by Rakesh R.\n",
          "commitDate": "26/05/16 4:50 PM",
          "commitName": "8c84a2a93c22a93b4ff46dd917f6efb995675fbd",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "28/04/16 10:44 AM",
          "commitNameOld": "6243eabb48390fffada2418ade5adf9e0766afbe",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 28.25,
          "commitsBetweenForRepo": 196,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void checkReplication(BlockCollection bc) {\n+  public void checkRedundancy(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n-      short expected \u003d getExpectedReplicaNum(block);\n+      short expected \u003d getExpectedRedundancyNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReconstruction.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n         neededReconstruction.add(block, n.liveReplicas() + pending,\n             n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (shouldProcessExtraRedundancy(n, expected)) {\n         processExtraRedundancyBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkRedundancy(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedRedundancyNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReconstruction.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReconstruction.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (shouldProcessExtraRedundancy(n, expected)) {\n        processExtraRedundancyBlock(block, expected, null, null);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "checkReplication",
            "newValue": "checkRedundancy"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10236. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-3]. Contributed by Rakesh R.\n",
          "commitDate": "26/05/16 4:50 PM",
          "commitName": "8c84a2a93c22a93b4ff46dd917f6efb995675fbd",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "28/04/16 10:44 AM",
          "commitNameOld": "6243eabb48390fffada2418ade5adf9e0766afbe",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 28.25,
          "commitsBetweenForRepo": 196,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void checkReplication(BlockCollection bc) {\n+  public void checkRedundancy(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n-      short expected \u003d getExpectedReplicaNum(block);\n+      short expected \u003d getExpectedRedundancyNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReconstruction.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n         neededReconstruction.add(block, n.liveReplicas() + pending,\n             n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (shouldProcessExtraRedundancy(n, expected)) {\n         processExtraRedundancyBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkRedundancy(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedRedundancyNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReconstruction.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReconstruction.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (shouldProcessExtraRedundancy(n, expected)) {\n        processExtraRedundancyBlock(block, expected, null, null);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "5865fe2bf01284993572ea60b3ec3bf8b4492818": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9869. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-2]. Contributed by Rakesh R.\n",
      "commitDate": "25/04/16 10:01 PM",
      "commitName": "5865fe2bf01284993572ea60b3ec3bf8b4492818",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "17/04/16 6:28 PM",
      "commitNameOld": "67523ffcf491f4f2db5335899c00a174d0caaa9b",
      "commitAuthorOld": "Walter Su",
      "daysBetweenCommits": 8.15,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void checkReplication(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedReplicaNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n-      final int pending \u003d pendingReplications.getNumReplicas(block);\n+      final int pending \u003d pendingReconstruction.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n         neededReconstruction.add(block, n.liveReplicas() + pending,\n             n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (shouldProcessExtraRedundancy(n, expected)) {\n         processExtraRedundancyBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReconstruction.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReconstruction.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (shouldProcessExtraRedundancy(n, expected)) {\n        processExtraRedundancyBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9857. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-1]. Contributed by Rakesh R.\n",
      "commitDate": "16/03/16 4:53 PM",
      "commitName": "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "10/03/16 7:03 PM",
      "commitNameOld": "e01c6ea688e62f25c4310e771a0cd85b53a5fb87",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 5.87,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void checkReplication(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedReplicaNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReplications.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n-        neededReplications.add(block, n.liveReplicas() + pending,\n+        neededReconstruction.add(block, n.liveReplicas() + pending,\n             n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n-      } else if (shouldProcessOverReplicated(n, expected)) {\n-        processOverReplicatedBlock(block, expected, null, null);\n+      } else if (shouldProcessExtraRedundancy(n, expected)) {\n+        processExtraRedundancyBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReplications.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReconstruction.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (shouldProcessExtraRedundancy(n, expected)) {\n        processExtraRedundancyBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9876. shouldProcessOverReplicated should not count number of pending replicas. Contributed by Jing Zhao.\n",
      "commitDate": "01/03/16 6:41 PM",
      "commitName": "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "28/02/16 2:54 PM",
      "commitNameOld": "408f2c807bbaaaa37ce1b69a5dfa9d76ed427d6e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.16,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void checkReplication(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedReplicaNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReplications.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n         neededReplications.add(block, n.liveReplicas() + pending,\n             n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n-      } else if (shouldProcessOverReplicated(n, 0, expected)) {\n+      } else if (shouldProcessOverReplicated(n, expected)) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReplications.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReplications.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (shouldProcessOverReplicated(n, expected)) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9837. BlockManager#countNodes should be able to detect duplicated internal blocks. Contributed by Jing Zhao.\n",
      "commitDate": "24/02/16 3:13 PM",
      "commitName": "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "20/02/16 11:19 PM",
      "commitNameOld": "d5abd293a890a8a1da48a166a291ae1c5644ad57",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 3.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void checkReplication(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedReplicaNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReplications.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n         neededReplications.add(block, n.liveReplicas() + pending,\n             n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n-      } else if (n.liveReplicas() \u003e expected) {\n+      } else if (shouldProcessOverReplicated(n, 0, expected)) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReplications.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReplications.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (shouldProcessOverReplicated(n, 0, expected)) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "5411dc559d5f73e4153e76fdff94a26869c17a37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9205. Do not schedule corrupt blocks for replication.  (szetszwo)\n",
      "commitDate": "15/10/15 3:07 AM",
      "commitName": "5411dc559d5f73e4153e76fdff94a26869c17a37",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "14/10/15 4:17 PM",
      "commitNameOld": "be7a0add8b6561d3c566237cc0370b06e7f32bb4",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public void checkReplication(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedReplicaNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n       final int pending \u003d pendingReplications.getNumReplicas(block);\n       if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n         neededReplications.add(block, n.liveReplicas() + pending,\n+            n.readOnlyReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReplications.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReplications.add(block, n.liveReplicas() + pending,\n            n.readOnlyReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "2a987243423eb5c7e191de2ba969b7591a441c70": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1172. Blocks in newly completed files are considered under-replicated too quickly. Contributed by Masatake Iwasaki.\n",
      "commitDate": "13/10/15 11:00 PM",
      "commitName": "2a987243423eb5c7e191de2ba969b7591a441c70",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "11/10/15 11:40 PM",
      "commitNameOld": "73b86a5046fe3262dde7b05be46b18575e35fd5f",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 1.97,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public void checkReplication(BlockCollection bc) {\n     for (BlockInfo block : bc.getBlocks()) {\n       short expected \u003d getExpectedReplicaNum(block);\n       final NumberReplicas n \u003d countNodes(block);\n-      if (isNeededReplication(block, n.liveReplicas())) {\n-        neededReplications.add(block, n.liveReplicas(),\n+      final int pending \u003d pendingReplications.getNumReplicas(block);\n+      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n+        neededReplications.add(block, n.liveReplicas() + pending,\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(block);\n      final NumberReplicas n \u003d countNodes(block);\n      final int pending \u003d pendingReplications.getNumReplicas(block);\n      if (!hasEnoughEffectiveReplicas(block, n, pending, expected)) {\n        neededReplications.add(block, n.liveReplicas() + pending,\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "745d04be59accf80feda0ad38efcc74ba362f2ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8823. Move replication factor into individual blocks. Contributed by Haohui Mai.\n",
      "commitDate": "22/08/15 12:09 AM",
      "commitName": "745d04be59accf80feda0ad38efcc74ba362f2ca",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/08/15 3:11 PM",
      "commitNameOld": "4e14f7982a6e57bf08deb3b266806c2b779a157d",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.37,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void checkReplication(BlockCollection bc) {\n-    final short expected \u003d bc.getPreferredBlockReplication();\n     for (BlockInfo block : bc.getBlocks()) {\n+      final short expected \u003d block.getReplication();\n       final NumberReplicas n \u003d countNodes(block);\n-      if (isNeededReplication(block, expected, n.liveReplicas())) { \n+      if (isNeededReplication(block, n.liveReplicas())) {\n         neededReplications.add(block, n.liveReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      final short expected \u003d block.getReplication();\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, n.liveReplicas())) {\n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "6e3fcffe291faec40fa9214f4880a35a952836c4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8608. Merge HDFS-7912 to trunk and branch-2 (track BlockInfo instead of Block in UnderReplicatedBlocks and PendingReplicationBlocks). Contributed by Zhe Zhang.\n",
      "commitDate": "17/06/15 8:05 AM",
      "commitName": "6e3fcffe291faec40fa9214f4880a35a952836c4",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "12/06/15 11:38 AM",
      "commitNameOld": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 4.85,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void checkReplication(BlockCollection bc) {\n     final short expected \u003d bc.getPreferredBlockReplication();\n-    for (Block block : bc.getBlocks()) {\n+    for (BlockInfo block : bc.getBlocks()) {\n       final NumberReplicas n \u003d countNodes(block);\n       if (isNeededReplication(block, expected, n.liveReplicas())) { \n         neededReplications.add(block, n.liveReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    final short expected \u003d bc.getPreferredBlockReplication();\n    for (BlockInfo block : bc.getBlocks()) {\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "b008348dbf9bdd5070930be5d182116c5d370f6b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8418. Fix the isNeededReplication calculation for Striped block in NN. Contributed by Yi Liu.\n",
      "commitDate": "26/05/15 12:02 PM",
      "commitName": "b008348dbf9bdd5070930be5d182116c5d370f6b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/05/15 12:02 PM",
      "commitNameOld": "d8ea443af0b1c8289a1dd738945831ff8be0e9c1",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void checkReplication(BlockCollection bc) {\n-    final short expected \u003d bc.getPreferredBlockReplication();\n     for (BlockInfo block : bc.getBlocks()) {\n+      short expected \u003d getExpectedReplicaNum(bc, block);\n       final NumberReplicas n \u003d countNodes(block);\n       if (isNeededReplication(block, expected, n.liveReplicas())) { \n         neededReplications.add(block, n.liveReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    for (BlockInfo block : bc.getBlocks()) {\n      short expected \u003d getExpectedReplicaNum(bc, block);\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "a38a37c63417a3b19dcdf98251af196c9d7b8c31": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7912. Erasure Coding: track BlockInfo instead of Block in UnderReplicatedBlocks and PendingReplicationBlocks. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:41 AM",
      "commitName": "a38a37c63417a3b19dcdf98251af196c9d7b8c31",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/05/15 11:32 AM",
      "commitNameOld": "f05c21285ef23b6a973d69f045b1cb46c5abc039",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void checkReplication(BlockCollection bc) {\n     final short expected \u003d bc.getPreferredBlockReplication();\n-    for (Block block : bc.getBlocks()) {\n+    for (BlockInfo block : bc.getBlocks()) {\n       final NumberReplicas n \u003d countNodes(block);\n       if (isNeededReplication(block, expected, n.liveReplicas())) { \n         neededReplications.add(block, n.liveReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    final short expected \u003d bc.getPreferredBlockReplication();\n    for (BlockInfo block : bc.getBlocks()) {\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "6d5da9484185ca9f585195d6da069b9cd5be4044": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8255. Rename getBlockReplication to getPreferredBlockReplication. (Contributed by Zhe Zhang)\n",
      "commitDate": "12/05/15 6:29 AM",
      "commitName": "6d5da9484185ca9f585195d6da069b9cd5be4044",
      "commitAuthor": "yliu",
      "commitDateOld": "08/05/15 2:36 PM",
      "commitNameOld": "2d4ae3d18bc530fa9f81ee616db8af3395705fb9",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 3.66,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void checkReplication(BlockCollection bc) {\n-    final short expected \u003d bc.getBlockReplication();\n+    final short expected \u003d bc.getPreferredBlockReplication();\n     for (Block block : bc.getBlocks()) {\n       final NumberReplicas n \u003d countNodes(block);\n       if (isNeededReplication(block, expected, n.liveReplicas())) { \n         neededReplications.add(block, n.liveReplicas(),\n             n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    final short expected \u003d bc.getPreferredBlockReplication();\n    for (Block block : bc.getBlocks()) {\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "f8f5887209a7d8e53c0a77abef275cbcaf1f7a5b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7933. fsck should also report decommissioning replicas. Contributed by Xiaoyu Yao.\n",
      "commitDate": "11/04/15 1:23 PM",
      "commitName": "f8f5887209a7d8e53c0a77abef275cbcaf1f7a5b",
      "commitAuthor": "cnauroth",
      "commitDateOld": "10/04/15 4:36 PM",
      "commitNameOld": "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.87,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void checkReplication(BlockCollection bc) {\n     final short expected \u003d bc.getBlockReplication();\n     for (Block block : bc.getBlocks()) {\n       final NumberReplicas n \u003d countNodes(block);\n       if (isNeededReplication(block, expected, n.liveReplicas())) { \n         neededReplications.add(block, n.liveReplicas(),\n-            n.decommissionedReplicas(), expected);\n+            n.decommissionedAndDecommissioning(), expected);\n       } else if (n.liveReplicas() \u003e expected) {\n         processOverReplicatedBlock(block, expected, null, null);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkReplication(BlockCollection bc) {\n    final short expected \u003d bc.getBlockReplication();\n    for (Block block : bc.getBlocks()) {\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedAndDecommissioning(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "75cdb5bb4965161021df47376cccf058bf413f3b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4099. Clean up replication code and add more javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1400986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/10/12 11:30 AM",
      "commitName": "75cdb5bb4965161021df47376cccf058bf413f3b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4099. Clean up replication code and add more javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1400986 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/10/12 11:30 AM",
          "commitName": "75cdb5bb4965161021df47376cccf058bf413f3b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "20/10/12 11:31 PM",
          "commitNameOld": "35ec20b7c63566fe0830dc1118c9d1da257939a7",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 1.5,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  public void checkReplication(Block block, short numExpectedReplicas) {\n-    // filter out containingNodes that are marked for decommission.\n-    NumberReplicas number \u003d countNodes(block);\n-    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n-      neededReplications.add(block,\n-                             number.liveReplicas(),\n-                             number.decommissionedReplicas(),\n-                             numExpectedReplicas);\n-      return;\n-    }\n-    if (number.liveReplicas() \u003e numExpectedReplicas) {\n-      processOverReplicatedBlock(block, numExpectedReplicas, null, null);\n+  public void checkReplication(BlockCollection bc) {\n+    final short expected \u003d bc.getBlockReplication();\n+    for (Block block : bc.getBlocks()) {\n+      final NumberReplicas n \u003d countNodes(block);\n+      if (isNeededReplication(block, expected, n.liveReplicas())) { \n+        neededReplications.add(block, n.liveReplicas(),\n+            n.decommissionedReplicas(), expected);\n+      } else if (n.liveReplicas() \u003e expected) {\n+        processOverReplicatedBlock(block, expected, null, null);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(BlockCollection bc) {\n    final short expected \u003d bc.getBlockReplication();\n    for (Block block : bc.getBlocks()) {\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedReplicas(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[block-Block, numExpectedReplicas-short]",
            "newValue": "[bc-BlockCollection]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4099. Clean up replication code and add more javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1400986 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/10/12 11:30 AM",
          "commitName": "75cdb5bb4965161021df47376cccf058bf413f3b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "20/10/12 11:31 PM",
          "commitNameOld": "35ec20b7c63566fe0830dc1118c9d1da257939a7",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 1.5,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  public void checkReplication(Block block, short numExpectedReplicas) {\n-    // filter out containingNodes that are marked for decommission.\n-    NumberReplicas number \u003d countNodes(block);\n-    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n-      neededReplications.add(block,\n-                             number.liveReplicas(),\n-                             number.decommissionedReplicas(),\n-                             numExpectedReplicas);\n-      return;\n-    }\n-    if (number.liveReplicas() \u003e numExpectedReplicas) {\n-      processOverReplicatedBlock(block, numExpectedReplicas, null, null);\n+  public void checkReplication(BlockCollection bc) {\n+    final short expected \u003d bc.getBlockReplication();\n+    for (Block block : bc.getBlocks()) {\n+      final NumberReplicas n \u003d countNodes(block);\n+      if (isNeededReplication(block, expected, n.liveReplicas())) { \n+        neededReplications.add(block, n.liveReplicas(),\n+            n.decommissionedReplicas(), expected);\n+      } else if (n.liveReplicas() \u003e expected) {\n+        processOverReplicatedBlock(block, expected, null, null);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(BlockCollection bc) {\n    final short expected \u003d bc.getBlockReplication();\n    for (Block block : bc.getBlocks()) {\n      final NumberReplicas n \u003d countNodes(block);\n      if (isNeededReplication(block, expected, n.liveReplicas())) { \n        neededReplications.add(block, n.liveReplicas(),\n            n.decommissionedReplicas(), expected);\n      } else if (n.liveReplicas() \u003e expected) {\n        processOverReplicatedBlock(block, expected, null, null);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "3ced5ea06698fa781f76c5e7d4440f54ce5fcad3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3119. Overreplicated block is not deleted even after the replication factor is reduced after sync follwed by closing that file. Contributed by Ashish Singhi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311380 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/12 12:11 PM",
      "commitName": "3ced5ea06698fa781f76c5e7d4440f54ce5fcad3",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3119. Overreplicated block is not deleted even after the replication factor is reduced after sync follwed by closing that file. Contributed by Ashish Singhi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311380 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/12 12:11 PM",
          "commitName": "3ced5ea06698fa781f76c5e7d4440f54ce5fcad3",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "03/04/12 7:51 PM",
          "commitNameOld": "8c0366bf103ca638b5ef9e962671f7728db4fd10",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 5.68,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n-  public void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, short numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n                              number.decommissionedReplicas(),\n                              numExpectedReplicas);\n+      return;\n+    }\n+    if (number.liveReplicas() \u003e numExpectedReplicas) {\n+      processOverReplicatedBlock(block, numExpectedReplicas, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, short numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n      return;\n    }\n    if (number.liveReplicas() \u003e numExpectedReplicas) {\n      processOverReplicatedBlock(block, numExpectedReplicas, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[block-Block, numExpectedReplicas-int]",
            "newValue": "[block-Block, numExpectedReplicas-short]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3119. Overreplicated block is not deleted even after the replication factor is reduced after sync follwed by closing that file. Contributed by Ashish Singhi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311380 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/12 12:11 PM",
          "commitName": "3ced5ea06698fa781f76c5e7d4440f54ce5fcad3",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "03/04/12 7:51 PM",
          "commitNameOld": "8c0366bf103ca638b5ef9e962671f7728db4fd10",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 5.68,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n-  public void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, short numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n                              number.decommissionedReplicas(),\n                              numExpectedReplicas);\n+      return;\n+    }\n+    if (number.liveReplicas() \u003e numExpectedReplicas) {\n+      processOverReplicatedBlock(block, numExpectedReplicas, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, short numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n      return;\n    }\n    if (number.liveReplicas() \u003e numExpectedReplicas) {\n      processOverReplicatedBlock(block, numExpectedReplicas, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas,\n+                             number.decommissionedReplicas(),\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas,\n+                             number.decommissionedReplicas(),\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas,\n+                             number.decommissionedReplicas(),\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public void checkReplication(Block block, int numExpectedReplicas) {\n+  void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas(),\n+                             number.decommissionedReplicas,\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas,\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public void checkReplication(Block block, int numExpectedReplicas) {\n+  void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas(),\n+                             number.decommissionedReplicas,\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas,\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public void checkReplication(Block block, int numExpectedReplicas) {\n+  void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas(),\n+                             number.decommissionedReplicas,\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas,\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas,\n+                             number.decommissionedReplicas(),\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas,\n+                             number.decommissionedReplicas(),\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  void checkReplication(Block block, int numExpectedReplicas) {\n+  public void checkReplication(Block block, int numExpectedReplicas) {\n     // filter out containingNodes that are marked for decommission.\n     NumberReplicas number \u003d countNodes(block);\n     if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n       neededReplications.add(block,\n                              number.liveReplicas(),\n-                             number.decommissionedReplicas,\n+                             number.decommissionedReplicas(),\n                              numExpectedReplicas);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas(),\n                             numExpectedReplicas);\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,10 @@\n+  void checkReplication(Block block, int numExpectedReplicas) {\n+    // filter out containingNodes that are marked for decommission.\n+    NumberReplicas number \u003d countNodes(block);\n+    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n+      neededReplications.add(block,\n+                             number.liveReplicas(),\n+                             number.decommissionedReplicas,\n+                             numExpectedReplicas);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void checkReplication(Block block, int numExpectedReplicas) {\n    // filter out containingNodes that are marked for decommission.\n    NumberReplicas number \u003d countNodes(block);\n    if (isNeededReplication(block, numExpectedReplicas, number.liveReplicas())) { \n      neededReplications.add(block,\n                             number.liveReplicas(),\n                             number.decommissionedReplicas,\n                             numExpectedReplicas);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java"
    }
  }
}