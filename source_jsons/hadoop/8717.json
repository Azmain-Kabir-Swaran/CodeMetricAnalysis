{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NNStorage.java",
  "functionName": "setStorageDirectories",
  "functionId": "setStorageDirectories___fsNameDirs-Collection__URI____fsEditsDirs-Collection__URI__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
  "functionStartLine": 275,
  "functionEndLine": 279,
  "numCommitsSeen": 68,
  "timeTaken": 5864,
  "changeHistory": [
    "38128baff40ee137376968f025e75827a4227ee7",
    "f87a4b40bc99e76602a75906df31747cfdbff78a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "38128baff40ee137376968f025e75827a4227ee7": "Ybodychange",
    "f87a4b40bc99e76602a75906df31747cfdbff78a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38128baff40ee137376968f025e75827a4227ee7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10425. Clean up NNStorage and TestSaveNamespace. Contributed by Andras Bokor.\n",
      "commitDate": "20/07/16 10:44 AM",
      "commitName": "38128baff40ee137376968f025e75827a4227ee7",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "18/05/16 2:13 PM",
      "commitNameOld": "010e6ac328855bad59f138b6aeaec535272f448c",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 62.85,
      "commitsBetweenForRepo": 537,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                           Collection\u003cURI\u003e fsEditsDirs)\n       throws IOException {\n-    setStorageDirectories(fsNameDirs, fsEditsDirs, new ArrayList\u003cURI\u003e());\n+    setStorageDirectories(fsNameDirs, fsEditsDirs, new ArrayList\u003c\u003e());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                          Collection\u003cURI\u003e fsEditsDirs)\n      throws IOException {\n    setStorageDirectories(fsNameDirs, fsEditsDirs, new ArrayList\u003c\u003e());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {}
    },
    "f87a4b40bc99e76602a75906df31747cfdbff78a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 1:46 PM",
      "commitName": "f87a4b40bc99e76602a75906df31747cfdbff78a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "17/10/11 1:42 PM",
      "commitNameOld": "ab7e7dfd7e557ff17f177ae445c27133d81e8b1a",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 44.04,
      "commitsBetweenForRepo": 319,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,5 @@\n   synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                           Collection\u003cURI\u003e fsEditsDirs)\n       throws IOException {\n-    this.storageDirs.clear();\n-    this.removedStorageDirs.clear();\n-\n-   // Add all name dirs with appropriate NameNodeDirType\n-    for (URI dirName : fsNameDirs) {\n-      checkSchemeConsistency(dirName);\n-      boolean isAlsoEdits \u003d false;\n-      for (URI editsDirName : fsEditsDirs) {\n-        if (editsDirName.compareTo(dirName) \u003d\u003d 0) {\n-          isAlsoEdits \u003d true;\n-          fsEditsDirs.remove(editsDirName);\n-          break;\n-        }\n-      }\n-      NameNodeDirType dirType \u003d (isAlsoEdits) ?\n-                          NameNodeDirType.IMAGE_AND_EDITS :\n-                          NameNodeDirType.IMAGE;\n-      // Add to the list of storage directories, only if the\n-      // URI is of type file://\n-      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n-          \u003d\u003d 0){\n-        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n-            dirType));\n-      }\n-    }\n-\n-    // Add edits dirs if they are different from name dirs\n-    for (URI dirName : fsEditsDirs) {\n-      checkSchemeConsistency(dirName);\n-      // Add to the list of storage directories, only if the\n-      // URI is of type file://\n-      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n-          \u003d\u003d 0)\n-        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n-                    NameNodeDirType.EDITS));\n-    }\n+    setStorageDirectories(fsNameDirs, fsEditsDirs, new ArrayList\u003cURI\u003e());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                          Collection\u003cURI\u003e fsEditsDirs)\n      throws IOException {\n    setStorageDirectories(fsNameDirs, fsEditsDirs, new ArrayList\u003cURI\u003e());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                          Collection\u003cURI\u003e fsEditsDirs)\n      throws IOException {\n    this.storageDirs.clear();\n    this.removedStorageDirs.clear();\n\n   // Add all name dirs with appropriate NameNodeDirType\n    for (URI dirName : fsNameDirs) {\n      checkSchemeConsistency(dirName);\n      boolean isAlsoEdits \u003d false;\n      for (URI editsDirName : fsEditsDirs) {\n        if (editsDirName.compareTo(dirName) \u003d\u003d 0) {\n          isAlsoEdits \u003d true;\n          fsEditsDirs.remove(editsDirName);\n          break;\n        }\n      }\n      NameNodeDirType dirType \u003d (isAlsoEdits) ?\n                          NameNodeDirType.IMAGE_AND_EDITS :\n                          NameNodeDirType.IMAGE;\n      // Add to the list of storage directories, only if the\n      // URI is of type file://\n      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n          \u003d\u003d 0){\n        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n            dirType));\n      }\n    }\n\n    // Add edits dirs if they are different from name dirs\n    for (URI dirName : fsEditsDirs) {\n      checkSchemeConsistency(dirName);\n      // Add to the list of storage directories, only if the\n      // URI is of type file://\n      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n          \u003d\u003d 0)\n        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n                    NameNodeDirType.EDITS));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                          Collection\u003cURI\u003e fsEditsDirs)\n      throws IOException {\n    this.storageDirs.clear();\n    this.removedStorageDirs.clear();\n\n   // Add all name dirs with appropriate NameNodeDirType\n    for (URI dirName : fsNameDirs) {\n      checkSchemeConsistency(dirName);\n      boolean isAlsoEdits \u003d false;\n      for (URI editsDirName : fsEditsDirs) {\n        if (editsDirName.compareTo(dirName) \u003d\u003d 0) {\n          isAlsoEdits \u003d true;\n          fsEditsDirs.remove(editsDirName);\n          break;\n        }\n      }\n      NameNodeDirType dirType \u003d (isAlsoEdits) ?\n                          NameNodeDirType.IMAGE_AND_EDITS :\n                          NameNodeDirType.IMAGE;\n      // Add to the list of storage directories, only if the\n      // URI is of type file://\n      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n          \u003d\u003d 0){\n        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n            dirType));\n      }\n    }\n\n    // Add edits dirs if they are different from name dirs\n    for (URI dirName : fsEditsDirs) {\n      checkSchemeConsistency(dirName);\n      // Add to the list of storage directories, only if the\n      // URI is of type file://\n      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n          \u003d\u003d 0)\n        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n                    NameNodeDirType.EDITS));\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,40 @@\n+  synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n+                                          Collection\u003cURI\u003e fsEditsDirs)\n+      throws IOException {\n+    this.storageDirs.clear();\n+    this.removedStorageDirs.clear();\n+\n+   // Add all name dirs with appropriate NameNodeDirType\n+    for (URI dirName : fsNameDirs) {\n+      checkSchemeConsistency(dirName);\n+      boolean isAlsoEdits \u003d false;\n+      for (URI editsDirName : fsEditsDirs) {\n+        if (editsDirName.compareTo(dirName) \u003d\u003d 0) {\n+          isAlsoEdits \u003d true;\n+          fsEditsDirs.remove(editsDirName);\n+          break;\n+        }\n+      }\n+      NameNodeDirType dirType \u003d (isAlsoEdits) ?\n+                          NameNodeDirType.IMAGE_AND_EDITS :\n+                          NameNodeDirType.IMAGE;\n+      // Add to the list of storage directories, only if the\n+      // URI is of type file://\n+      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n+          \u003d\u003d 0){\n+        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n+            dirType));\n+      }\n+    }\n+\n+    // Add edits dirs if they are different from name dirs\n+    for (URI dirName : fsEditsDirs) {\n+      checkSchemeConsistency(dirName);\n+      // Add to the list of storage directories, only if the\n+      // URI is of type file://\n+      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n+          \u003d\u003d 0)\n+        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n+                    NameNodeDirType.EDITS));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void setStorageDirectories(Collection\u003cURI\u003e fsNameDirs,\n                                          Collection\u003cURI\u003e fsEditsDirs)\n      throws IOException {\n    this.storageDirs.clear();\n    this.removedStorageDirs.clear();\n\n   // Add all name dirs with appropriate NameNodeDirType\n    for (URI dirName : fsNameDirs) {\n      checkSchemeConsistency(dirName);\n      boolean isAlsoEdits \u003d false;\n      for (URI editsDirName : fsEditsDirs) {\n        if (editsDirName.compareTo(dirName) \u003d\u003d 0) {\n          isAlsoEdits \u003d true;\n          fsEditsDirs.remove(editsDirName);\n          break;\n        }\n      }\n      NameNodeDirType dirType \u003d (isAlsoEdits) ?\n                          NameNodeDirType.IMAGE_AND_EDITS :\n                          NameNodeDirType.IMAGE;\n      // Add to the list of storage directories, only if the\n      // URI is of type file://\n      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n          \u003d\u003d 0){\n        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n            dirType));\n      }\n    }\n\n    // Add edits dirs if they are different from name dirs\n    for (URI dirName : fsEditsDirs) {\n      checkSchemeConsistency(dirName);\n      // Add to the list of storage directories, only if the\n      // URI is of type file://\n      if(dirName.getScheme().compareTo(JournalType.FILE.name().toLowerCase())\n          \u003d\u003d 0)\n        this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),\n                    NameNodeDirType.EDITS));\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java"
    }
  }
}