{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FifoComparator.java",
  "functionName": "compare",
  "functionId": "compare___r1-SchedulableEntity__r2-SchedulableEntity",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/policy/FifoComparator.java",
  "functionStartLine": 30,
  "functionEndLine": 33,
  "numCommitsSeen": 3,
  "timeTaken": 1432,
  "changeHistory": [
    "b8942be888e1f6f7049398f3d0322602a58ee312",
    "c39ca541f498712133890961598bbff50d89d68b",
    "5004e753322084e42dfda4be1d2db66677f86a1e"
  ],
  "changeHistoryShort": {
    "b8942be888e1f6f7049398f3d0322602a58ee312": "Ybodychange",
    "c39ca541f498712133890961598bbff50d89d68b": "Ybodychange",
    "5004e753322084e42dfda4be1d2db66677f86a1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b8942be888e1f6f7049398f3d0322602a58ee312": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4537. Pull out priority comparison from fifocomparator and use compound comparator for FifoOrdering policy. Contributed by Rohith Sharma K S\n",
      "commitDate": "11/01/16 4:44 PM",
      "commitName": "b8942be888e1f6f7049398f3d0322602a58ee312",
      "commitAuthor": "Jian He",
      "commitDateOld": "21/07/15 9:57 AM",
      "commitNameOld": "c39ca541f498712133890961598bbff50d89d68b",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 174.32,
      "commitsBetweenForRepo": 1147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,4 @@\n   public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n-    if (r1.getPriority() !\u003d null\n-        \u0026\u0026 !r1.getPriority().equals(r2.getPriority())) {\n-      return r1.getPriority().compareTo(r2.getPriority());\n-    }\n     int res \u003d r1.compareInputOrderTo(r2);\n     return res;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n    int res \u003d r1.compareInputOrderTo(r2);\n    return res;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/policy/FifoComparator.java",
      "extendedDetails": {}
    },
    "c39ca541f498712133890961598bbff50d89d68b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2003. Support for Application priority : Changes in RM and Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "21/07/15 9:57 AM",
      "commitName": "c39ca541f498712133890961598bbff50d89d68b",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "15/04/15 9:56 AM",
      "commitNameOld": "5004e753322084e42dfda4be1d2db66677f86a1e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 97.0,
      "commitsBetweenForRepo": 791,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,8 @@\n-    public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n-      int res \u003d r1.compareInputOrderTo(r2);\n-      return res;\n-    }\n\\ No newline at end of file\n+  public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n+    if (r1.getPriority() !\u003d null\n+        \u0026\u0026 !r1.getPriority().equals(r2.getPriority())) {\n+      return r1.getPriority().compareTo(r2.getPriority());\n+    }\n+    int res \u003d r1.compareInputOrderTo(r2);\n+    return res;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n    if (r1.getPriority() !\u003d null\n        \u0026\u0026 !r1.getPriority().equals(r2.getPriority())) {\n      return r1.getPriority().compareTo(r2.getPriority());\n    }\n    int res \u003d r1.compareInputOrderTo(r2);\n    return res;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/policy/FifoComparator.java",
      "extendedDetails": {}
    },
    "5004e753322084e42dfda4be1d2db66677f86a1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3318. Create Initial OrderingPolicy Framework and FifoOrderingPolicy. (Craig Welch via wangda)\n",
      "commitDate": "15/04/15 9:56 AM",
      "commitName": "5004e753322084e42dfda4be1d2db66677f86a1e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,4 @@\n+    public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n+      int res \u003d r1.compareInputOrderTo(r2);\n+      return res;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int compare(SchedulableEntity r1, SchedulableEntity r2) {\n      int res \u003d r1.compareInputOrderTo(r2);\n      return res;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/policy/FifoComparator.java"
    }
  }
}