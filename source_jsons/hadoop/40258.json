{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSQueueMetrics.java",
  "functionName": "getUserMetrics",
  "functionId": "getUserMetrics___userName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueMetrics.java",
  "functionStartLine": 251,
  "functionEndLine": 267,
  "numCommitsSeen": 11,
  "timeTaken": 1006,
  "changeHistory": [
    "bdd90110e6904b59746812d9a093924a65e72280"
  ],
  "changeHistoryShort": {
    "bdd90110e6904b59746812d9a093924a65e72280": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bdd90110e6904b59746812d9a093924a65e72280": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3494. Expose AM resource limit and usage in CS QueueMetrics. Contributed by Rohith Sharmaks\n",
      "commitDate": "21/04/15 8:06 PM",
      "commitName": "bdd90110e6904b59746812d9a093924a65e72280",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized QueueMetrics getUserMetrics(String userName) {\n+    if (users \u003d\u003d null) {\n+      return null;\n+    }\n+    CSQueueMetrics metrics \u003d (CSQueueMetrics) users.get(userName);\n+    if (metrics \u003d\u003d null) {\n+      metrics \u003d new CSQueueMetrics(metricsSystem, queueName, null, false, conf);\n+      users.put(userName, metrics);\n+      metricsSystem.register(\n+          sourceName(queueName).append(\",user\u003d\").append(userName).toString(),\n+          \"Metrics for user \u0027\" + userName + \"\u0027 in queue \u0027\" + queueName + \"\u0027\",\n+          ((CSQueueMetrics) metrics.tag(QUEUE_INFO, queueName)).tag(USER_INFO,\n+              userName));\n+    }\n+    return metrics;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized QueueMetrics getUserMetrics(String userName) {\n    if (users \u003d\u003d null) {\n      return null;\n    }\n    CSQueueMetrics metrics \u003d (CSQueueMetrics) users.get(userName);\n    if (metrics \u003d\u003d null) {\n      metrics \u003d new CSQueueMetrics(metricsSystem, queueName, null, false, conf);\n      users.put(userName, metrics);\n      metricsSystem.register(\n          sourceName(queueName).append(\",user\u003d\").append(userName).toString(),\n          \"Metrics for user \u0027\" + userName + \"\u0027 in queue \u0027\" + queueName + \"\u0027\",\n          ((CSQueueMetrics) metrics.tag(QUEUE_INFO, queueName)).tag(USER_INFO,\n              userName));\n    }\n    return metrics;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueMetrics.java"
    }
  }
}