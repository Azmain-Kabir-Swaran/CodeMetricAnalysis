{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImagePreTransactionalStorageInspector.java",
  "functionName": "doRecovery",
  "functionId": "doRecovery",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java",
  "functionStartLine": 198,
  "functionEndLine": 244,
  "numCommitsSeen": 15,
  "timeTaken": 2128,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    boolean doRecovery() throws IOException {\n      LOG.debug(\n        \"Performing recovery in \"+ latestNameSD + \" and \" + latestEditsSD);\n      \n      boolean needToSave \u003d false;\n      File curFile \u003d\n        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE);\n      File ckptFile \u003d\n        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE_NEW);\n\n      //\n      // If we were in the midst of a checkpoint\n      //\n      if (ckptFile.exists()) {\n        needToSave \u003d true;\n        if (NNStorage.getStorageFile(latestEditsSD, NameNodeFile.EDITS_NEW)\n              .exists()) {\n          //\n          // checkpointing migth have uploaded a new\n          // merged image, but we discard it here because we are\n          // not sure whether the entire merged image was uploaded\n          // before the namenode crashed.\n          //\n          if (!ckptFile.delete()) {\n            throw new IOException(\"Unable to delete \" + ckptFile);\n          }\n        } else {\n          //\n          // checkpointing was in progress when the namenode\n          // shutdown. The fsimage.ckpt was created and the edits.new\n          // file was moved to edits. We complete that checkpoint by\n          // moving fsimage.new to fsimage. There is no need to \n          // update the fstime file here. renameTo fails on Windows\n          // if the destination file already exists.\n          //\n          if (!ckptFile.renameTo(curFile)) {\n            if (!curFile.delete())\n              LOG.warn(\"Unable to delete dir \" + curFile + \" before rename\");\n            if (!ckptFile.renameTo(curFile)) {\n              throw new IOException(\"Unable to rename \" + ckptFile +\n                                    \" to \" + curFile);\n            }\n          }\n        }\n      }\n      return needToSave;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    boolean doRecovery() throws IOException {\n      LOG.debug(\n        \"Performing recovery in \"+ latestNameSD + \" and \" + latestEditsSD);\n      \n      boolean needToSave \u003d false;\n      File curFile \u003d\n        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE);\n      File ckptFile \u003d\n        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE_NEW);\n\n      //\n      // If we were in the midst of a checkpoint\n      //\n      if (ckptFile.exists()) {\n        needToSave \u003d true;\n        if (NNStorage.getStorageFile(latestEditsSD, NameNodeFile.EDITS_NEW)\n              .exists()) {\n          //\n          // checkpointing migth have uploaded a new\n          // merged image, but we discard it here because we are\n          // not sure whether the entire merged image was uploaded\n          // before the namenode crashed.\n          //\n          if (!ckptFile.delete()) {\n            throw new IOException(\"Unable to delete \" + ckptFile);\n          }\n        } else {\n          //\n          // checkpointing was in progress when the namenode\n          // shutdown. The fsimage.ckpt was created and the edits.new\n          // file was moved to edits. We complete that checkpoint by\n          // moving fsimage.new to fsimage. There is no need to \n          // update the fstime file here. renameTo fails on Windows\n          // if the destination file already exists.\n          //\n          if (!ckptFile.renameTo(curFile)) {\n            if (!curFile.delete())\n              LOG.warn(\"Unable to delete dir \" + curFile + \" before rename\");\n            if (!ckptFile.renameTo(curFile)) {\n              throw new IOException(\"Unable to rename \" + ckptFile +\n                                    \" to \" + curFile);\n            }\n          }\n        }\n      }\n      return needToSave;\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,47 @@\n+    boolean doRecovery() throws IOException {\n+      LOG.debug(\n+        \"Performing recovery in \"+ latestNameSD + \" and \" + latestEditsSD);\n+      \n+      boolean needToSave \u003d false;\n+      File curFile \u003d\n+        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE);\n+      File ckptFile \u003d\n+        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE_NEW);\n+\n+      //\n+      // If we were in the midst of a checkpoint\n+      //\n+      if (ckptFile.exists()) {\n+        needToSave \u003d true;\n+        if (NNStorage.getStorageFile(latestEditsSD, NameNodeFile.EDITS_NEW)\n+              .exists()) {\n+          //\n+          // checkpointing migth have uploaded a new\n+          // merged image, but we discard it here because we are\n+          // not sure whether the entire merged image was uploaded\n+          // before the namenode crashed.\n+          //\n+          if (!ckptFile.delete()) {\n+            throw new IOException(\"Unable to delete \" + ckptFile);\n+          }\n+        } else {\n+          //\n+          // checkpointing was in progress when the namenode\n+          // shutdown. The fsimage.ckpt was created and the edits.new\n+          // file was moved to edits. We complete that checkpoint by\n+          // moving fsimage.new to fsimage. There is no need to \n+          // update the fstime file here. renameTo fails on Windows\n+          // if the destination file already exists.\n+          //\n+          if (!ckptFile.renameTo(curFile)) {\n+            if (!curFile.delete())\n+              LOG.warn(\"Unable to delete dir \" + curFile + \" before rename\");\n+            if (!ckptFile.renameTo(curFile)) {\n+              throw new IOException(\"Unable to rename \" + ckptFile +\n+                                    \" to \" + curFile);\n+            }\n+          }\n+        }\n+      }\n+      return needToSave;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    boolean doRecovery() throws IOException {\n      LOG.debug(\n        \"Performing recovery in \"+ latestNameSD + \" and \" + latestEditsSD);\n      \n      boolean needToSave \u003d false;\n      File curFile \u003d\n        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE);\n      File ckptFile \u003d\n        NNStorage.getStorageFile(latestNameSD, NameNodeFile.IMAGE_NEW);\n\n      //\n      // If we were in the midst of a checkpoint\n      //\n      if (ckptFile.exists()) {\n        needToSave \u003d true;\n        if (NNStorage.getStorageFile(latestEditsSD, NameNodeFile.EDITS_NEW)\n              .exists()) {\n          //\n          // checkpointing migth have uploaded a new\n          // merged image, but we discard it here because we are\n          // not sure whether the entire merged image was uploaded\n          // before the namenode crashed.\n          //\n          if (!ckptFile.delete()) {\n            throw new IOException(\"Unable to delete \" + ckptFile);\n          }\n        } else {\n          //\n          // checkpointing was in progress when the namenode\n          // shutdown. The fsimage.ckpt was created and the edits.new\n          // file was moved to edits. We complete that checkpoint by\n          // moving fsimage.new to fsimage. There is no need to \n          // update the fstime file here. renameTo fails on Windows\n          // if the destination file already exists.\n          //\n          if (!ckptFile.renameTo(curFile)) {\n            if (!curFile.delete())\n              LOG.warn(\"Unable to delete dir \" + curFile + \" before rename\");\n            if (!ckptFile.renameTo(curFile)) {\n              throw new IOException(\"Unable to rename \" + ckptFile +\n                                    \" to \" + curFile);\n            }\n          }\n        }\n      }\n      return needToSave;\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImagePreTransactionalStorageInspector.java"
    }
  }
}