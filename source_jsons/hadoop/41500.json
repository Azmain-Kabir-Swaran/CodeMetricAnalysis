{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "checkAccess",
  "functionId": "checkAccess___callerUGI-UserGroupInformation__acl-QueueACL__queueName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1612,
  "functionEndLine": 1626,
  "numCommitsSeen": 226,
  "timeTaken": 5991,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030": "Ybodychange",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ymultichange(Ymodifierchange,Ybodychange)",
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n       QueueACL acl, String queueName) {\n     readLock.lock();\n     try {\n       FSQueue queue \u003d getQueueManager().getQueue(queueName);\n       if (queue \u003d\u003d null) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n-              + queueName);\n-        }\n+        LOG.debug(\"ACL not found for queue access-type {} for queue {}\",\n+            acl, queueName);\n         return false;\n       }\n       return queue.hasAccess(acl, callerUGI);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      QueueACL acl, String queueName) {\n    readLock.lock();\n    try {\n      FSQueue queue \u003d getQueueManager().getQueue(queueName);\n      if (queue \u003d\u003d null) {\n        LOG.debug(\"ACL not found for queue access-type {} for queue {}\",\n            acl, queueName);\n        return false;\n      }\n      return queue.hasAccess(acl, callerUGI);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7133. Clean up lock-try order in fair scheduler. (Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "24/07/18 12:46 PM",
      "commitName": "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "11/06/18 11:12 AM",
      "commitNameOld": "c190ac2be88e574b3322cdc73a7c0af0cef708b2",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 43.07,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public boolean checkAccess(UserGroupInformation callerUGI,\n       QueueACL acl, String queueName) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       FSQueue queue \u003d getQueueManager().getQueue(queueName);\n       if (queue \u003d\u003d null) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n               + queueName);\n         }\n         return false;\n       }\n       return queue.hasAccess(acl, callerUGI);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      QueueACL acl, String queueName) {\n    readLock.lock();\n    try {\n      FSQueue queue \u003d getQueueManager().getQueue(queueName);\n      if (queue \u003d\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n              + queueName);\n        }\n        return false;\n      }\n      return queue.hasAccess(acl, callerUGI);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "03/10/16 6:03 AM",
          "commitNameOld": "0da54e8848764c71a31473516d23ada582013f8c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.47,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  public synchronized boolean checkAccess(UserGroupInformation callerUGI,\n+  public boolean checkAccess(UserGroupInformation callerUGI,\n       QueueACL acl, String queueName) {\n-    FSQueue queue \u003d getQueueManager().getQueue(queueName);\n-    if (queue \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"ACL not found for queue access-type \" + acl\n-            + \" for queue \" + queueName);\n+    try {\n+      readLock.lock();\n+      FSQueue queue \u003d getQueueManager().getQueue(queueName);\n+      if (queue \u003d\u003d null) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n+              + queueName);\n+        }\n+        return false;\n       }\n-      return false;\n+      return queue.hasAccess(acl, callerUGI);\n+    } finally {\n+      readLock.unlock();\n     }\n-    return queue.hasAccess(acl, callerUGI);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      QueueACL acl, String queueName) {\n    try {\n      readLock.lock();\n      FSQueue queue \u003d getQueueManager().getQueue(queueName);\n      if (queue \u003d\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n              + queueName);\n        }\n        return false;\n      }\n      return queue.hasAccess(acl, callerUGI);\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "03/10/16 6:03 AM",
          "commitNameOld": "0da54e8848764c71a31473516d23ada582013f8c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.47,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  public synchronized boolean checkAccess(UserGroupInformation callerUGI,\n+  public boolean checkAccess(UserGroupInformation callerUGI,\n       QueueACL acl, String queueName) {\n-    FSQueue queue \u003d getQueueManager().getQueue(queueName);\n-    if (queue \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"ACL not found for queue access-type \" + acl\n-            + \" for queue \" + queueName);\n+    try {\n+      readLock.lock();\n+      FSQueue queue \u003d getQueueManager().getQueue(queueName);\n+      if (queue \u003d\u003d null) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n+              + queueName);\n+        }\n+        return false;\n       }\n-      return false;\n+      return queue.hasAccess(acl, callerUGI);\n+    } finally {\n+      readLock.unlock();\n     }\n-    return queue.hasAccess(acl, callerUGI);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      QueueACL acl, String queueName) {\n    try {\n      readLock.lock();\n      FSQueue queue \u003d getQueueManager().getQueue(queueName);\n      if (queue \u003d\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"ACL not found for queue access-type \" + acl + \" for queue \"\n              + queueName);\n        }\n        return false;\n      }\n      return queue.hasAccess(acl, callerUGI);\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889": {
      "type": "Yintroduced",
      "commitMessage": "YARN-899. Added back queue level administrator-acls so that there is no regression w.r.t 1.x. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/13 1:21 AM",
      "commitName": "1c5b49eeafc2253d4fa92456e6ccf0f35290c889",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  public synchronized boolean checkAccess(UserGroupInformation callerUGI,\n+      QueueACL acl, String queueName) {\n+    FSQueue queue \u003d getQueueManager().getQueue(queueName);\n+    if (queue \u003d\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"ACL not found for queue access-type \" + acl\n+            + \" for queue \" + queueName);\n+      }\n+      return false;\n+    }\n+    return queue.hasAccess(acl, callerUGI);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean checkAccess(UserGroupInformation callerUGI,\n      QueueACL acl, String queueName) {\n    FSQueue queue \u003d getQueueManager().getQueue(queueName);\n    if (queue \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"ACL not found for queue access-type \" + acl\n            + \" for queue \" + queueName);\n      }\n      return false;\n    }\n    return queue.hasAccess(acl, callerUGI);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}