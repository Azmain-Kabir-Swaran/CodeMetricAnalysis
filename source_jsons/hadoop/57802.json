{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HamletGen.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet2/HamletGen.java",
  "functionStartLine": 424,
  "functionEndLine": 448,
  "numCommitsSeen": 1,
  "timeTaken": 1799,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,25 @@\n+  public static void main(String[] args) throws Exception {\n+    CommandLine cmd \u003d new GnuParser().parse(opts, args);\n+    if (cmd.hasOption(\"help\")) {\n+      new HelpFormatter().printHelp(\"Usage: hbgen [OPTIONS]\", opts);\n+      return;\n+    }\n+    // defaults\n+    Class\u003c?\u003e specClass \u003d HamletSpec.class;\n+    Class\u003c?\u003e implClass \u003d HamletImpl.class;\n+    String outputClass \u003d \"HamletTmp\";\n+    String outputPackage \u003d implClass.getPackage().getName();\n+    if (cmd.hasOption(\"spec-class\")) {\n+      specClass \u003d Class.forName(cmd.getOptionValue(\"spec-class\"));\n+    }\n+    if (cmd.hasOption(\"impl-class\")) {\n+      implClass \u003d Class.forName(cmd.getOptionValue(\"impl-class\"));\n+    }\n+    if (cmd.hasOption(\"output-class\")) {\n+      outputClass \u003d cmd.getOptionValue(\"output-class\");\n+    }\n+    if (cmd.hasOption(\"output-package\")) {\n+      outputPackage \u003d cmd.getOptionValue(\"output-package\");\n+    }\n+    new HamletGen().generate(specClass, implClass, outputClass, outputPackage);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) throws Exception {\n    CommandLine cmd \u003d new GnuParser().parse(opts, args);\n    if (cmd.hasOption(\"help\")) {\n      new HelpFormatter().printHelp(\"Usage: hbgen [OPTIONS]\", opts);\n      return;\n    }\n    // defaults\n    Class\u003c?\u003e specClass \u003d HamletSpec.class;\n    Class\u003c?\u003e implClass \u003d HamletImpl.class;\n    String outputClass \u003d \"HamletTmp\";\n    String outputPackage \u003d implClass.getPackage().getName();\n    if (cmd.hasOption(\"spec-class\")) {\n      specClass \u003d Class.forName(cmd.getOptionValue(\"spec-class\"));\n    }\n    if (cmd.hasOption(\"impl-class\")) {\n      implClass \u003d Class.forName(cmd.getOptionValue(\"impl-class\"));\n    }\n    if (cmd.hasOption(\"output-class\")) {\n      outputClass \u003d cmd.getOptionValue(\"output-class\");\n    }\n    if (cmd.hasOption(\"output-package\")) {\n      outputPackage \u003d cmd.getOptionValue(\"output-package\");\n    }\n    new HamletGen().generate(specClass, implClass, outputClass, outputPackage);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet2/HamletGen.java"
    }
  }
}