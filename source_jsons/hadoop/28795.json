{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpportunisticContainerAllocator.java",
  "functionName": "normalizeCapability",
  "functionId": "normalizeCapability___appParams-AllocationParams__ask-ResourceRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java",
  "functionStartLine": 444,
  "functionEndLine": 449,
  "numCommitsSeen": 26,
  "timeTaken": 3302,
  "changeHistory": [
    "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b"
  ],
  "changeHistoryShort": {
    "82c9e061017c32e633e0b0cbb7978749a6df4fb2": "Ymultichange(Ymovefromfile,Yparameterchange)",
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Yparameterchange",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82c9e061017c32e633e0b0cbb7978749a6df4fb2": {
      "type": "Ymultichange(Ymovefromfile,Yparameterchange)",
      "commitMessage": "YARN-5457. Refactor DistributedScheduling framework to pull out common functionality. (asuresh)\n",
      "commitDate": "09/08/16 12:42 AM",
      "commitName": "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5457. Refactor DistributedScheduling framework to pull out common functionality. (asuresh)\n",
          "commitDate": "09/08/16 12:42 AM",
          "commitName": "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "08/08/16 5:54 PM",
          "commitNameOld": "8f9b61852bf6600b65e49875fec172bac9e0a85d",
          "commitAuthorOld": "Masatake Iwasaki",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  private Resource normalizeCapability(DistributedSchedulerParams appParams,\n+  private Resource normalizeCapability(AllocationParams appParams,\n       ResourceRequest ask) {\n     return Resources.normalize(RESOURCE_CALCULATOR,\n         ask.getCapability(), appParams.minResource, appParams.maxResource,\n         appParams.incrementResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource normalizeCapability(AllocationParams appParams,\n      ResourceRequest ask) {\n    return Resources.normalize(RESOURCE_CALCULATOR,\n        ask.getCapability(), appParams.minResource, appParams.maxResource,\n        appParams.incrementResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/OpportunisticContainerAllocator.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java",
            "oldMethodName": "normalizeCapability",
            "newMethodName": "normalizeCapability"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5457. Refactor DistributedScheduling framework to pull out common functionality. (asuresh)\n",
          "commitDate": "09/08/16 12:42 AM",
          "commitName": "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "08/08/16 5:54 PM",
          "commitNameOld": "8f9b61852bf6600b65e49875fec172bac9e0a85d",
          "commitAuthorOld": "Masatake Iwasaki",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  private Resource normalizeCapability(DistributedSchedulerParams appParams,\n+  private Resource normalizeCapability(AllocationParams appParams,\n       ResourceRequest ask) {\n     return Resources.normalize(RESOURCE_CALCULATOR,\n         ask.getCapability(), appParams.minResource, appParams.maxResource,\n         appParams.incrementResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource normalizeCapability(AllocationParams appParams,\n      ResourceRequest ask) {\n    return Resources.normalize(RESOURCE_CALCULATOR,\n        ask.getCapability(), appParams.minResource, appParams.maxResource,\n        appParams.incrementResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[appParams-DistributedSchedulerParams, ask-ResourceRequest]",
            "newValue": "[appParams-AllocationParams, ask-ResourceRequest]"
          }
        }
      ]
    },
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "27/05/16 2:06 PM",
      "commitNameOld": "aa975bc7811fc7c52b814ad9635bff8c2d34655b",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 64.9,
      "commitsBetweenForRepo": 536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  private Resource normalizeCapability(DistSchedulerParams appParams,\n+  private Resource normalizeCapability(DistributedSchedulerParams appParams,\n       ResourceRequest ask) {\n     return Resources.normalize(RESOURCE_CALCULATOR,\n         ask.getCapability(), appParams.minResource, appParams.maxResource,\n         appParams.incrementResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource normalizeCapability(DistributedSchedulerParams appParams,\n      ResourceRequest ask) {\n    return Resources.normalize(RESOURCE_CALCULATOR,\n        ask.getCapability(), appParams.minResource, appParams.maxResource,\n        appParams.incrementResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/OpportunisticContainerAllocator.java",
      "extendedDetails": {
        "oldValue": "[appParams-DistSchedulerParams, ask-ResourceRequest]",
        "newValue": "[appParams-DistributedSchedulerParams, ask-ResourceRequest]"
      }
    },
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2885. Create AMRMProxy request interceptor and ContainerAllocator to distribute OPPORTUNISTIC containers to appropriate Nodes (asuresh)\n\n(cherry picked from commit 2bf025278a318b0452fdc9ece4427b4c42124e39)\n",
      "commitDate": "24/04/16 10:38 PM",
      "commitName": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,6 @@\n+  private Resource normalizeCapability(DistSchedulerParams appParams,\n+      ResourceRequest ask) {\n+    return Resources.normalize(RESOURCE_CALCULATOR,\n+        ask.getCapability(), appParams.minResource, appParams.maxResource,\n+        appParams.incrementResource);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource normalizeCapability(DistSchedulerParams appParams,\n      ResourceRequest ask) {\n    return Resources.normalize(RESOURCE_CALCULATOR,\n        ask.getCapability(), appParams.minResource, appParams.maxResource,\n        appParams.incrementResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/OpportunisticContainerAllocator.java"
    }
  }
}