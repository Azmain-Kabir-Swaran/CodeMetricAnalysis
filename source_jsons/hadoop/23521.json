{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryFileManager.java",
  "functionName": "getFileInfo",
  "functionId": "getFileInfo___jobId-JobId",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
  "functionStartLine": 1073,
  "functionEndLine": 1092,
  "numCommitsSeen": 45,
  "timeTaken": 1748,
  "changeHistory": [
    "7d04a96027ad75877b41b7cd8f67455dd13159d7",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f"
  ],
  "changeHistoryShort": {
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/04/12 6:59 PM",
      "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/04/12 6:59 PM",
          "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "10/04/12 11:11 AM",
          "commitNameOld": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 7.32,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  public MetaInfo getMetaInfo(JobId jobId) throws IOException {\n-    // MetaInfo available in cache.\n-    MetaInfo metaInfo \u003d null;\n-    if (jobListCache.containsKey(jobId)) {\n-      metaInfo \u003d jobListCache.get(jobId);\n+  public HistoryFileInfo getFileInfo(JobId jobId) throws IOException {\n+    // FileInfo available in cache.\n+    HistoryFileInfo fileInfo \u003d jobListCache.get(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n-\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n-    }\n-\n-    // MetaInfo not available. Check intermediate directory for meta info.\n-    metaInfo \u003d scanIntermediateForJob(jobId);\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n+    // OK so scan the intermediate to be sure we did not lose it that way\n+    scanIntermediateDirectory();\n+    fileInfo \u003d jobListCache.get(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n \n     // Intermediate directory does not contain job. Search through older ones.\n-    metaInfo \u003d scanOldDirsForJob(jobId);\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n+    fileInfo \u003d scanOldDirsForJob(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HistoryFileInfo getFileInfo(JobId jobId) throws IOException {\n    // FileInfo available in cache.\n    HistoryFileInfo fileInfo \u003d jobListCache.get(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n    // OK so scan the intermediate to be sure we did not lose it that way\n    scanIntermediateDirectory();\n    fileInfo \u003d jobListCache.get(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n\n    // Intermediate directory does not contain job. Search through older ones.\n    fileInfo \u003d scanOldDirsForJob(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n    return null;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {
            "oldValue": "getMetaInfo",
            "newValue": "getFileInfo"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/04/12 6:59 PM",
          "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "10/04/12 11:11 AM",
          "commitNameOld": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 7.32,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  public MetaInfo getMetaInfo(JobId jobId) throws IOException {\n-    // MetaInfo available in cache.\n-    MetaInfo metaInfo \u003d null;\n-    if (jobListCache.containsKey(jobId)) {\n-      metaInfo \u003d jobListCache.get(jobId);\n+  public HistoryFileInfo getFileInfo(JobId jobId) throws IOException {\n+    // FileInfo available in cache.\n+    HistoryFileInfo fileInfo \u003d jobListCache.get(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n-\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n-    }\n-\n-    // MetaInfo not available. Check intermediate directory for meta info.\n-    metaInfo \u003d scanIntermediateForJob(jobId);\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n+    // OK so scan the intermediate to be sure we did not lose it that way\n+    scanIntermediateDirectory();\n+    fileInfo \u003d jobListCache.get(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n \n     // Intermediate directory does not contain job. Search through older ones.\n-    metaInfo \u003d scanOldDirsForJob(jobId);\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n+    fileInfo \u003d scanOldDirsForJob(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HistoryFileInfo getFileInfo(JobId jobId) throws IOException {\n    // FileInfo available in cache.\n    HistoryFileInfo fileInfo \u003d jobListCache.get(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n    // OK so scan the intermediate to be sure we did not lose it that way\n    scanIntermediateDirectory();\n    fileInfo \u003d jobListCache.get(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n\n    // Intermediate directory does not contain job. Search through older ones.\n    fileInfo \u003d scanOldDirsForJob(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n    return null;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {
            "oldValue": "MetaInfo",
            "newValue": "HistoryFileInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/04/12 6:59 PM",
          "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "10/04/12 11:11 AM",
          "commitNameOld": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 7.32,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  public MetaInfo getMetaInfo(JobId jobId) throws IOException {\n-    // MetaInfo available in cache.\n-    MetaInfo metaInfo \u003d null;\n-    if (jobListCache.containsKey(jobId)) {\n-      metaInfo \u003d jobListCache.get(jobId);\n+  public HistoryFileInfo getFileInfo(JobId jobId) throws IOException {\n+    // FileInfo available in cache.\n+    HistoryFileInfo fileInfo \u003d jobListCache.get(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n-\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n-    }\n-\n-    // MetaInfo not available. Check intermediate directory for meta info.\n-    metaInfo \u003d scanIntermediateForJob(jobId);\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n+    // OK so scan the intermediate to be sure we did not lose it that way\n+    scanIntermediateDirectory();\n+    fileInfo \u003d jobListCache.get(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n \n     // Intermediate directory does not contain job. Search through older ones.\n-    metaInfo \u003d scanOldDirsForJob(jobId);\n-    if (metaInfo !\u003d null) {\n-      return metaInfo;\n+    fileInfo \u003d scanOldDirsForJob(jobId);\n+    if (fileInfo !\u003d null) {\n+      return fileInfo;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HistoryFileInfo getFileInfo(JobId jobId) throws IOException {\n    // FileInfo available in cache.\n    HistoryFileInfo fileInfo \u003d jobListCache.get(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n    // OK so scan the intermediate to be sure we did not lose it that way\n    scanIntermediateDirectory();\n    fileInfo \u003d jobListCache.get(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n\n    // Intermediate directory does not contain job. Search through older ones.\n    fileInfo \u003d scanOldDirsForJob(jobId);\n    if (fileInfo !\u003d null) {\n      return fileInfo;\n    }\n    return null;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 11:11 AM",
      "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,24 @@\n+  public MetaInfo getMetaInfo(JobId jobId) throws IOException {\n+    // MetaInfo available in cache.\n+    MetaInfo metaInfo \u003d null;\n+    if (jobListCache.containsKey(jobId)) {\n+      metaInfo \u003d jobListCache.get(jobId);\n+    }\n+\n+    if (metaInfo !\u003d null) {\n+      return metaInfo;\n+    }\n+\n+    // MetaInfo not available. Check intermediate directory for meta info.\n+    metaInfo \u003d scanIntermediateForJob(jobId);\n+    if (metaInfo !\u003d null) {\n+      return metaInfo;\n+    }\n+\n+    // Intermediate directory does not contain job. Search through older ones.\n+    metaInfo \u003d scanOldDirsForJob(jobId);\n+    if (metaInfo !\u003d null) {\n+      return metaInfo;\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public MetaInfo getMetaInfo(JobId jobId) throws IOException {\n    // MetaInfo available in cache.\n    MetaInfo metaInfo \u003d null;\n    if (jobListCache.containsKey(jobId)) {\n      metaInfo \u003d jobListCache.get(jobId);\n    }\n\n    if (metaInfo !\u003d null) {\n      return metaInfo;\n    }\n\n    // MetaInfo not available. Check intermediate directory for meta info.\n    metaInfo \u003d scanIntermediateForJob(jobId);\n    if (metaInfo !\u003d null) {\n      return metaInfo;\n    }\n\n    // Intermediate directory does not contain job. Search through older ones.\n    metaInfo \u003d scanOldDirsForJob(jobId);\n    if (metaInfo !\u003d null) {\n      return metaInfo;\n    }\n    return null;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java"
    }
  }
}