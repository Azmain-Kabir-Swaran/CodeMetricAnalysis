{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPreemptionThread.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
  "functionStartLine": 282,
  "functionEndLine": 291,
  "numCommitsSeen": 14,
  "timeTaken": 1621,
  "changeHistory": [
    "c3375175d616e0380560f89d491b6b9753a8f3e1",
    "10468529a9b858bd945e7ecb063c9c1438efa474"
  ],
  "changeHistoryShort": {
    "c3375175d616e0380560f89d491b6b9753a8f3e1": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c3375175d616e0380560f89d491b6b9753a8f3e1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6432. FairScheduler: Reserve preempted resources for corresponding applications. (Miklos Szegedi via kasha)\n",
      "commitDate": "12/04/17 2:21 PM",
      "commitName": "c3375175d616e0380560f89d491b6b9753a8f3e1",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "26/02/17 8:16 PM",
      "commitNameOld": "815d53506fb0c5ca029c993d6b094db2ac0ca6eb",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 44.71,
      "commitsBetweenForRepo": 287,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,10 @@\n     public void run() {\n       for (RMContainer container : containers) {\n         ContainerStatus status \u003d SchedulerUtils.createPreemptedContainerStatus(\n             container.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER);\n \n         LOG.info(\"Killing container \" + container);\n         scheduler.completedContainer(\n             container, status, RMContainerEventType.KILL);\n-\n-        FSSchedulerNode containerNode \u003d (FSSchedulerNode)\n-            scheduler.getNodeTracker().getNode(container.getAllocatedNode());\n-        containerNode.removeContainerForPreemption(container);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      for (RMContainer container : containers) {\n        ContainerStatus status \u003d SchedulerUtils.createPreemptedContainerStatus(\n            container.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER);\n\n        LOG.info(\"Killing container \" + container);\n        scheduler.completedContainer(\n            container, status, RMContainerEventType.KILL);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,14 @@\n+    public void run() {\n+      for (RMContainer container : containers) {\n+        ContainerStatus status \u003d SchedulerUtils.createPreemptedContainerStatus(\n+            container.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER);\n+\n+        LOG.info(\"Killing container \" + container);\n+        scheduler.completedContainer(\n+            container, status, RMContainerEventType.KILL);\n+\n+        FSSchedulerNode containerNode \u003d (FSSchedulerNode)\n+            scheduler.getNodeTracker().getNode(container.getAllocatedNode());\n+        containerNode.removeContainerForPreemption(container);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      for (RMContainer container : containers) {\n        ContainerStatus status \u003d SchedulerUtils.createPreemptedContainerStatus(\n            container.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER);\n\n        LOG.info(\"Killing container \" + container);\n        scheduler.completedContainer(\n            container, status, RMContainerEventType.KILL);\n\n        FSSchedulerNode containerNode \u003d (FSSchedulerNode)\n            scheduler.getNodeTracker().getNode(container.getAllocatedNode());\n        containerNode.removeContainerForPreemption(container);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java"
    }
  }
}