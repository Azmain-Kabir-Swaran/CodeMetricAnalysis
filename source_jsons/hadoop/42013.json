{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "loadDelegationTokenFromNode",
  "functionId": "loadDelegationTokenFromNode___rmState-RMState__path-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 668,
  "functionEndLine": 687,
  "numCommitsSeen": 77,
  "timeTaken": 2352,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "d8863fc16fa3cbcdda5b99f79386c43e4fae5917",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "d8863fc16fa3cbcdda5b99f79386c43e4fae5917": "Ybodychange",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   private void loadDelegationTokenFromNode(RMState rmState, String path)\n       throws Exception {\n     byte[] data \u003d getData(path);\n     if (data \u003d\u003d null) {\n       LOG.warn(\"Content of \" + path + \" is broken.\");\n     } else {\n       ByteArrayInputStream is \u003d new ByteArrayInputStream(data);\n       try (DataInputStream fsIn \u003d new DataInputStream(is)) {\n         RMDelegationTokenIdentifierData identifierData \u003d\n             RMStateStoreUtils.readRMDelegationTokenIdentifierData(fsIn);\n         RMDelegationTokenIdentifier identifier \u003d\n             identifierData.getTokenIdentifier();\n         long renewDate \u003d identifierData.getRenewDate();\n         rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n             renewDate);\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Loaded RMDelegationTokenIdentifier: \" + identifier\n-              + \" renewDate\u003d\" + renewDate);\n-        }\n+        LOG.debug(\"Loaded RMDelegationTokenIdentifier: {} renewDate\u003d{}\",\n+            identifier, renewDate);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadDelegationTokenFromNode(RMState rmState, String path)\n      throws Exception {\n    byte[] data \u003d getData(path);\n    if (data \u003d\u003d null) {\n      LOG.warn(\"Content of \" + path + \" is broken.\");\n    } else {\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(data);\n      try (DataInputStream fsIn \u003d new DataInputStream(is)) {\n        RMDelegationTokenIdentifierData identifierData \u003d\n            RMStateStoreUtils.readRMDelegationTokenIdentifierData(fsIn);\n        RMDelegationTokenIdentifier identifier \u003d\n            identifierData.getTokenIdentifier();\n        long renewDate \u003d identifierData.getRenewDate();\n        rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n            renewDate);\n        LOG.debug(\"Loaded RMDelegationTokenIdentifier: {} renewDate\u003d{}\",\n            identifier, renewDate);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "d8863fc16fa3cbcdda5b99f79386c43e4fae5917": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5594. Handle old RMDelegationToken format when recovering RM (rkanter)\n",
      "commitDate": "04/12/17 1:14 PM",
      "commitName": "d8863fc16fa3cbcdda5b99f79386c43e4fae5917",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "08/11/17 8:00 AM",
      "commitNameOld": "a9c70b0e84dab0c41e480a0dc0cb1a22efdc64ee",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 26.22,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   private void loadDelegationTokenFromNode(RMState rmState, String path)\n       throws Exception {\n     byte[] data \u003d getData(path);\n     if (data \u003d\u003d null) {\n       LOG.warn(\"Content of \" + path + \" is broken.\");\n     } else {\n       ByteArrayInputStream is \u003d new ByteArrayInputStream(data);\n       try (DataInputStream fsIn \u003d new DataInputStream(is)) {\n         RMDelegationTokenIdentifierData identifierData \u003d\n-            new RMDelegationTokenIdentifierData();\n-        identifierData.readFields(fsIn);\n+            RMStateStoreUtils.readRMDelegationTokenIdentifierData(fsIn);\n         RMDelegationTokenIdentifier identifier \u003d\n             identifierData.getTokenIdentifier();\n         long renewDate \u003d identifierData.getRenewDate();\n         rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n             renewDate);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Loaded RMDelegationTokenIdentifier: \" + identifier\n               + \" renewDate\u003d\" + renewDate);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadDelegationTokenFromNode(RMState rmState, String path)\n      throws Exception {\n    byte[] data \u003d getData(path);\n    if (data \u003d\u003d null) {\n      LOG.warn(\"Content of \" + path + \" is broken.\");\n    } else {\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(data);\n      try (DataInputStream fsIn \u003d new DataInputStream(is)) {\n        RMDelegationTokenIdentifierData identifierData \u003d\n            RMStateStoreUtils.readRMDelegationTokenIdentifierData(fsIn);\n        RMDelegationTokenIdentifier identifier \u003d\n            identifierData.getTokenIdentifier();\n        long renewDate \u003d identifierData.getRenewDate();\n        rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n            renewDate);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loaded RMDelegationTokenIdentifier: \" + identifier\n              + \" renewDate\u003d\" + renewDate);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,23 @@\n+  private void loadDelegationTokenFromNode(RMState rmState, String path)\n+      throws Exception {\n+    byte[] data \u003d getData(path);\n+    if (data \u003d\u003d null) {\n+      LOG.warn(\"Content of \" + path + \" is broken.\");\n+    } else {\n+      ByteArrayInputStream is \u003d new ByteArrayInputStream(data);\n+      try (DataInputStream fsIn \u003d new DataInputStream(is)) {\n+        RMDelegationTokenIdentifierData identifierData \u003d\n+            new RMDelegationTokenIdentifierData();\n+        identifierData.readFields(fsIn);\n+        RMDelegationTokenIdentifier identifier \u003d\n+            identifierData.getTokenIdentifier();\n+        long renewDate \u003d identifierData.getRenewDate();\n+        rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n+            renewDate);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Loaded RMDelegationTokenIdentifier: \" + identifier\n+              + \" renewDate\u003d\" + renewDate);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadDelegationTokenFromNode(RMState rmState, String path)\n      throws Exception {\n    byte[] data \u003d getData(path);\n    if (data \u003d\u003d null) {\n      LOG.warn(\"Content of \" + path + \" is broken.\");\n    } else {\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(data);\n      try (DataInputStream fsIn \u003d new DataInputStream(is)) {\n        RMDelegationTokenIdentifierData identifierData \u003d\n            new RMDelegationTokenIdentifierData();\n        identifierData.readFields(fsIn);\n        RMDelegationTokenIdentifier identifier \u003d\n            identifierData.getTokenIdentifier();\n        long renewDate \u003d identifierData.getRenewDate();\n        rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n            renewDate);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loaded RMDelegationTokenIdentifier: \" + identifier\n              + \" renewDate\u003d\" + renewDate);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}