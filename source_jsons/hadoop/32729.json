{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeStatusUpdaterImpl.java",
  "functionName": "validate",
  "functionId": "validate___nodeLabels-Set__NodeLabel__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
  "functionStartLine": 1241,
  "functionEndLine": 1260,
  "numCommitsSeen": 227,
  "timeTaken": 4847,
  "changeHistory": [
    "f659485ee83f3f34e3717631983adfc8fa1e53dc",
    "2f7712be09d5b68978547f95b1be2352cdd46266",
    "fc07464d1a48b0413da5e921614430e41263fdb7"
  ],
  "changeHistoryShort": {
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "2f7712be09d5b68978547f95b1be2352cdd46266": "Ybodychange",
    "fc07464d1a48b0413da5e921614430e41263fdb7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
      "commitDate": "20/12/18 6:56 PM",
      "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
          "commitDate": "20/12/18 6:56 PM",
          "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "13/09/18 7:21 AM",
          "commitNameOld": "39c1ea1ed454b6c61f0985fc951f20913ed964fb",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 98.52,
          "commitsBetweenForRepo": 824,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n+    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n         throws IOException {\n-      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n+      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n       boolean hasInvalidLabel \u003d false;\n-      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n+      StringBuilder errorMsg \u003d new StringBuilder();\n       while (iterator.hasNext()) {\n         try {\n           NodeLabelUtil\n               .checkAndThrowLabelName(iterator.next().getName());\n         } catch (IOException e) {\n           errorMsg.append(e.getMessage());\n           errorMsg.append(\" , \");\n           hasInvalidLabel \u003d true;\n         }\n       }\n       if (hasInvalidLabel) {\n         LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n         throw new IOException(errorMsg.toString());\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n        throws IOException {\n      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n      boolean hasInvalidLabel \u003d false;\n      StringBuilder errorMsg \u003d new StringBuilder();\n      while (iterator.hasNext()) {\n        try {\n          NodeLabelUtil\n              .checkAndThrowLabelName(iterator.next().getName());\n        } catch (IOException e) {\n          errorMsg.append(e.getMessage());\n          errorMsg.append(\" , \");\n          hasInvalidLabel \u003d true;\n        }\n      }\n      if (hasInvalidLabel) {\n        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n        throw new IOException(errorMsg.toString());\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "validateNodeLabels",
            "newValue": "validate"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
          "commitDate": "20/12/18 6:56 PM",
          "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "13/09/18 7:21 AM",
          "commitNameOld": "39c1ea1ed454b6c61f0985fc951f20913ed964fb",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 98.52,
          "commitsBetweenForRepo": 824,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n+    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n         throws IOException {\n-      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n+      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n       boolean hasInvalidLabel \u003d false;\n-      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n+      StringBuilder errorMsg \u003d new StringBuilder();\n       while (iterator.hasNext()) {\n         try {\n           NodeLabelUtil\n               .checkAndThrowLabelName(iterator.next().getName());\n         } catch (IOException e) {\n           errorMsg.append(e.getMessage());\n           errorMsg.append(\" , \");\n           hasInvalidLabel \u003d true;\n         }\n       }\n       if (hasInvalidLabel) {\n         LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n         throw new IOException(errorMsg.toString());\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n        throws IOException {\n      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n      boolean hasInvalidLabel \u003d false;\n      StringBuilder errorMsg \u003d new StringBuilder();\n      while (iterator.hasNext()) {\n        try {\n          NodeLabelUtil\n              .checkAndThrowLabelName(iterator.next().getName());\n        } catch (IOException e) {\n          errorMsg.append(e.getMessage());\n          errorMsg.append(\" , \");\n          hasInvalidLabel \u003d true;\n        }\n      }\n      if (hasInvalidLabel) {\n        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n        throw new IOException(errorMsg.toString());\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[nodeLabelsForHeartbeat-Set\u003cNodeLabel\u003e]",
            "newValue": "[nodeLabels-Set\u003cNodeLabel\u003e]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
          "commitDate": "20/12/18 6:56 PM",
          "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "13/09/18 7:21 AM",
          "commitNameOld": "39c1ea1ed454b6c61f0985fc951f20913ed964fb",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 98.52,
          "commitsBetweenForRepo": 824,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n+    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n         throws IOException {\n-      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n+      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n       boolean hasInvalidLabel \u003d false;\n-      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n+      StringBuilder errorMsg \u003d new StringBuilder();\n       while (iterator.hasNext()) {\n         try {\n           NodeLabelUtil\n               .checkAndThrowLabelName(iterator.next().getName());\n         } catch (IOException e) {\n           errorMsg.append(e.getMessage());\n           errorMsg.append(\" , \");\n           hasInvalidLabel \u003d true;\n         }\n       }\n       if (hasInvalidLabel) {\n         LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n         throw new IOException(errorMsg.toString());\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n        throws IOException {\n      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n      boolean hasInvalidLabel \u003d false;\n      StringBuilder errorMsg \u003d new StringBuilder();\n      while (iterator.hasNext()) {\n        try {\n          NodeLabelUtil\n              .checkAndThrowLabelName(iterator.next().getName());\n        } catch (IOException e) {\n          errorMsg.append(e.getMessage());\n          errorMsg.append(\" , \");\n          hasInvalidLabel \u003d true;\n        }\n      }\n      if (hasInvalidLabel) {\n        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n        throw new IOException(errorMsg.toString());\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
          "commitDate": "20/12/18 6:56 PM",
          "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "13/09/18 7:21 AM",
          "commitNameOld": "39c1ea1ed454b6c61f0985fc951f20913ed964fb",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 98.52,
          "commitsBetweenForRepo": 824,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n+    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n         throws IOException {\n-      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n+      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n       boolean hasInvalidLabel \u003d false;\n-      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n+      StringBuilder errorMsg \u003d new StringBuilder();\n       while (iterator.hasNext()) {\n         try {\n           NodeLabelUtil\n               .checkAndThrowLabelName(iterator.next().getName());\n         } catch (IOException e) {\n           errorMsg.append(e.getMessage());\n           errorMsg.append(\" , \");\n           hasInvalidLabel \u003d true;\n         }\n       }\n       if (hasInvalidLabel) {\n         LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n         throw new IOException(errorMsg.toString());\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void validate(Set\u003cNodeLabel\u003e nodeLabels)\n        throws IOException {\n      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabels.iterator();\n      boolean hasInvalidLabel \u003d false;\n      StringBuilder errorMsg \u003d new StringBuilder();\n      while (iterator.hasNext()) {\n        try {\n          NodeLabelUtil\n              .checkAndThrowLabelName(iterator.next().getName());\n        } catch (IOException e) {\n          errorMsg.append(e.getMessage());\n          errorMsg.append(\" , \");\n          hasInvalidLabel \u003d true;\n        }\n      }\n      if (hasInvalidLabel) {\n        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n        throw new IOException(errorMsg.toString());\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "2f7712be09d5b68978547f95b1be2352cdd46266": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6858. Attribute Manager to store and provide node attributes in RM. Contributed by Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "2f7712be09d5b68978547f95b1be2352cdd46266",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n         throws IOException {\n       Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n       boolean hasInvalidLabel \u003d false;\n       StringBuilder errorMsg \u003d new StringBuilder(\"\");\n       while (iterator.hasNext()) {\n         try {\n-          CommonNodeLabelsManager\n+          NodeLabelUtil\n               .checkAndThrowLabelName(iterator.next().getName());\n         } catch (IOException e) {\n           errorMsg.append(e.getMessage());\n           errorMsg.append(\" , \");\n           hasInvalidLabel \u003d true;\n         }\n       }\n       if (hasInvalidLabel) {\n         LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n         throw new IOException(errorMsg.toString());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n        throws IOException {\n      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n      boolean hasInvalidLabel \u003d false;\n      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n      while (iterator.hasNext()) {\n        try {\n          NodeLabelUtil\n              .checkAndThrowLabelName(iterator.next().getName());\n        } catch (IOException e) {\n          errorMsg.append(e.getMessage());\n          errorMsg.append(\" , \");\n          hasInvalidLabel \u003d true;\n        }\n      }\n      if (hasInvalidLabel) {\n        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n        throw new IOException(errorMsg.toString());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "fc07464d1a48b0413da5e921614430e41263fdb7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2923. Support configuration based NodeLabelsProvider Service in Distributed Node Label Configuration Setup. (Naganarasimha G R)\n",
      "commitDate": "20/08/15 11:51 AM",
      "commitName": "fc07464d1a48b0413da5e921614430e41263fdb7",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,20 @@\n+    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n+        throws IOException {\n+      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n+      boolean hasInvalidLabel \u003d false;\n+      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n+      while (iterator.hasNext()) {\n+        try {\n+          CommonNodeLabelsManager\n+              .checkAndThrowLabelName(iterator.next().getName());\n+        } catch (IOException e) {\n+          errorMsg.append(e.getMessage());\n+          errorMsg.append(\" , \");\n+          hasInvalidLabel \u003d true;\n+        }\n+      }\n+      if (hasInvalidLabel) {\n+        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n+        throw new IOException(errorMsg.toString());\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNodeLabels(Set\u003cNodeLabel\u003e nodeLabelsForHeartbeat)\n        throws IOException {\n      Iterator\u003cNodeLabel\u003e iterator \u003d nodeLabelsForHeartbeat.iterator();\n      boolean hasInvalidLabel \u003d false;\n      StringBuilder errorMsg \u003d new StringBuilder(\"\");\n      while (iterator.hasNext()) {\n        try {\n          CommonNodeLabelsManager\n              .checkAndThrowLabelName(iterator.next().getName());\n        } catch (IOException e) {\n          errorMsg.append(e.getMessage());\n          errorMsg.append(\" , \");\n          hasInvalidLabel \u003d true;\n        }\n      }\n      if (hasInvalidLabel) {\n        LOG.error(\"Invalid Node Label(s) from Provider : \" + errorMsg);\n        throw new IOException(errorMsg.toString());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
    }
  }
}