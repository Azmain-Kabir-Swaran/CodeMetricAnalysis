{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptorREST.java",
  "functionName": "createNewApplication",
  "functionId": "createNewApplication___hsr-HttpServletRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
  "functionStartLine": 268,
  "functionEndLine": 329,
  "numCommitsSeen": 20,
  "timeTaken": 1717,
  "changeHistory": [
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d"
  ],
  "changeHistoryShort": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ybodychange",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,62 @@\n   public Response createNewApplication(HttpServletRequest hsr)\n       throws AuthorizationException, IOException, InterruptedException {\n \n     long startTime \u003d clock.getTime();\n \n     Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive;\n     try {\n       subClustersActive \u003d federationFacade.getSubClusters(true);\n     } catch (YarnException e) {\n       routerMetrics.incrAppsFailedCreated();\n       return Response.status(Status.INTERNAL_SERVER_ERROR)\n           .entity(e.getLocalizedMessage()).build();\n     }\n \n     List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n \n     for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n \n       SubClusterId subClusterId;\n       try {\n         subClusterId \u003d getRandomActiveSubCluster(subClustersActive, blacklist);\n       } catch (YarnException e) {\n         routerMetrics.incrAppsFailedCreated();\n         return Response.status(Status.SERVICE_UNAVAILABLE)\n             .entity(e.getLocalizedMessage()).build();\n       }\n \n-      LOG.debug(\n-          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n+      LOG.debug(\"getNewApplication try #{} on SubCluster {}\", i, subClusterId);\n \n       DefaultRequestInterceptorREST interceptor \u003d\n           getOrCreateInterceptorForSubCluster(subClusterId,\n               subClustersActive.get(subClusterId).getRMWebServiceAddress());\n       Response response \u003d null;\n       try {\n         response \u003d interceptor.createNewApplication(hsr);\n       } catch (Exception e) {\n-        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n-            + subClusterId.getId(), e);\n+        LOG.warn(\"Unable to create a new ApplicationId in SubCluster {}\",\n+            subClusterId.getId(), e);\n       }\n \n-      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 200) {\n+      if (response !\u003d null \u0026\u0026\n+          response.getStatus() \u003d\u003d HttpServletResponse.SC_OK) {\n \n         long stopTime \u003d clock.getTime();\n         routerMetrics.succeededAppsCreated(stopTime - startTime);\n \n         return response;\n       } else {\n         // Empty response from the ResourceManager.\n         // Blacklist this subcluster for this request.\n         blacklist.add(subClusterId);\n       }\n     }\n \n     String errMsg \u003d \"Fail to create a new application.\";\n     LOG.error(errMsg);\n     routerMetrics.incrAppsFailedCreated();\n-    return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errMsg).build();\n+    return Response\n+        .status(Status.INTERNAL_SERVER_ERROR)\n+        .entity(errMsg)\n+        .build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response createNewApplication(HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n\n    long startTime \u003d clock.getTime();\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive;\n    try {\n      subClustersActive \u003d federationFacade.getSubClusters(true);\n    } catch (YarnException e) {\n      routerMetrics.incrAppsFailedCreated();\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(e.getLocalizedMessage()).build();\n    }\n\n    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n\n      SubClusterId subClusterId;\n      try {\n        subClusterId \u003d getRandomActiveSubCluster(subClustersActive, blacklist);\n      } catch (YarnException e) {\n        routerMetrics.incrAppsFailedCreated();\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n\n      LOG.debug(\"getNewApplication try #{} on SubCluster {}\", i, subClusterId);\n\n      DefaultRequestInterceptorREST interceptor \u003d\n          getOrCreateInterceptorForSubCluster(subClusterId,\n              subClustersActive.get(subClusterId).getRMWebServiceAddress());\n      Response response \u003d null;\n      try {\n        response \u003d interceptor.createNewApplication(hsr);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to create a new ApplicationId in SubCluster {}\",\n            subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null \u0026\u0026\n          response.getStatus() \u003d\u003d HttpServletResponse.SC_OK) {\n\n        long stopTime \u003d clock.getTime();\n        routerMetrics.succeededAppsCreated(stopTime - startTime);\n\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        blacklist.add(subClusterId);\n      }\n    }\n\n    String errMsg \u003d \"Fail to create a new application.\";\n    LOG.error(errMsg);\n    routerMetrics.incrAppsFailedCreated();\n    return Response\n        .status(Status.INTERNAL_SERVER_ERROR)\n        .entity(errMsg)\n        .build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "11/08/17 3:58 PM",
      "commitNameOld": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 10.29,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,59 @@\n   public Response createNewApplication(HttpServletRequest hsr)\n       throws AuthorizationException, IOException, InterruptedException {\n+\n+    long startTime \u003d clock.getTime();\n+\n     Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive;\n     try {\n       subClustersActive \u003d federationFacade.getSubClusters(true);\n     } catch (YarnException e) {\n+      routerMetrics.incrAppsFailedCreated();\n       return Response.status(Status.INTERNAL_SERVER_ERROR)\n           .entity(e.getLocalizedMessage()).build();\n     }\n \n     List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n \n     for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n \n       SubClusterId subClusterId;\n       try {\n         subClusterId \u003d getRandomActiveSubCluster(subClustersActive, blacklist);\n       } catch (YarnException e) {\n+        routerMetrics.incrAppsFailedCreated();\n         return Response.status(Status.SERVICE_UNAVAILABLE)\n             .entity(e.getLocalizedMessage()).build();\n       }\n \n       LOG.debug(\n           \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n \n       DefaultRequestInterceptorREST interceptor \u003d\n           getOrCreateInterceptorForSubCluster(subClusterId,\n               subClustersActive.get(subClusterId).getRMWebServiceAddress());\n       Response response \u003d null;\n       try {\n         response \u003d interceptor.createNewApplication(hsr);\n       } catch (Exception e) {\n         LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n             + subClusterId.getId(), e);\n       }\n \n       if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 200) {\n+\n+        long stopTime \u003d clock.getTime();\n+        routerMetrics.succeededAppsCreated(stopTime - startTime);\n+\n         return response;\n       } else {\n         // Empty response from the ResourceManager.\n         // Blacklist this subcluster for this request.\n         blacklist.add(subClusterId);\n       }\n     }\n \n     String errMsg \u003d \"Fail to create a new application.\";\n     LOG.error(errMsg);\n+    routerMetrics.incrAppsFailedCreated();\n     return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errMsg).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response createNewApplication(HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n\n    long startTime \u003d clock.getTime();\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive;\n    try {\n      subClustersActive \u003d federationFacade.getSubClusters(true);\n    } catch (YarnException e) {\n      routerMetrics.incrAppsFailedCreated();\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(e.getLocalizedMessage()).build();\n    }\n\n    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n\n      SubClusterId subClusterId;\n      try {\n        subClusterId \u003d getRandomActiveSubCluster(subClustersActive, blacklist);\n      } catch (YarnException e) {\n        routerMetrics.incrAppsFailedCreated();\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n\n      LOG.debug(\n          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n\n      DefaultRequestInterceptorREST interceptor \u003d\n          getOrCreateInterceptorForSubCluster(subClusterId,\n              subClustersActive.get(subClusterId).getRMWebServiceAddress());\n      Response response \u003d null;\n      try {\n        response \u003d interceptor.createNewApplication(hsr);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n            + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 200) {\n\n        long stopTime \u003d clock.getTime();\n        routerMetrics.succeededAppsCreated(stopTime - startTime);\n\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        blacklist.add(subClusterId);\n      }\n    }\n\n    String errMsg \u003d \"Fail to create a new application.\";\n    LOG.error(errMsg);\n    routerMetrics.incrAppsFailedCreated();\n    return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errMsg).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6896. Federation: routing REST invocations transparently to multiple RMs (part 1 - basic execution). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "11/08/17 3:58 PM",
      "commitName": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,49 @@\n+  public Response createNewApplication(HttpServletRequest hsr)\n+      throws AuthorizationException, IOException, InterruptedException {\n+    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive;\n+    try {\n+      subClustersActive \u003d federationFacade.getSubClusters(true);\n+    } catch (YarnException e) {\n+      return Response.status(Status.INTERNAL_SERVER_ERROR)\n+          .entity(e.getLocalizedMessage()).build();\n+    }\n+\n+    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n+\n+    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n+\n+      SubClusterId subClusterId;\n+      try {\n+        subClusterId \u003d getRandomActiveSubCluster(subClustersActive, blacklist);\n+      } catch (YarnException e) {\n+        return Response.status(Status.SERVICE_UNAVAILABLE)\n+            .entity(e.getLocalizedMessage()).build();\n+      }\n+\n+      LOG.debug(\n+          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n+\n+      DefaultRequestInterceptorREST interceptor \u003d\n+          getOrCreateInterceptorForSubCluster(subClusterId,\n+              subClustersActive.get(subClusterId).getRMWebServiceAddress());\n+      Response response \u003d null;\n+      try {\n+        response \u003d interceptor.createNewApplication(hsr);\n+      } catch (Exception e) {\n+        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n+            + subClusterId.getId(), e);\n+      }\n+\n+      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 200) {\n+        return response;\n+      } else {\n+        // Empty response from the ResourceManager.\n+        // Blacklist this subcluster for this request.\n+        blacklist.add(subClusterId);\n+      }\n+    }\n+\n+    String errMsg \u003d \"Fail to create a new application.\";\n+    LOG.error(errMsg);\n+    return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errMsg).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response createNewApplication(HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive;\n    try {\n      subClustersActive \u003d federationFacade.getSubClusters(true);\n    } catch (YarnException e) {\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(e.getLocalizedMessage()).build();\n    }\n\n    List\u003cSubClusterId\u003e blacklist \u003d new ArrayList\u003cSubClusterId\u003e();\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n\n      SubClusterId subClusterId;\n      try {\n        subClusterId \u003d getRandomActiveSubCluster(subClustersActive, blacklist);\n      } catch (YarnException e) {\n        return Response.status(Status.SERVICE_UNAVAILABLE)\n            .entity(e.getLocalizedMessage()).build();\n      }\n\n      LOG.debug(\n          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n\n      DefaultRequestInterceptorREST interceptor \u003d\n          getOrCreateInterceptorForSubCluster(subClusterId,\n              subClustersActive.get(subClusterId).getRMWebServiceAddress());\n      Response response \u003d null;\n      try {\n        response \u003d interceptor.createNewApplication(hsr);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n            + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null \u0026\u0026 response.getStatus() \u003d\u003d 200) {\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        blacklist.add(subClusterId);\n      }\n    }\n\n    String errMsg \u003d \"Fail to create a new application.\";\n    LOG.error(errMsg);\n    return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errMsg).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java"
    }
  }
}