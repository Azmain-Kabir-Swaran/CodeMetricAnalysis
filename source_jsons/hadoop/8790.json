{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeaseManager.java",
  "functionName": "call",
  "functionId": "call",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
  "functionStartLine": 240,
  "functionEndLine": 256,
  "numCommitsSeen": 51,
  "timeTaken": 1833,
  "changeHistory": [
    "20e3ae260b40cd6ef657b2a629a02219d68f162f"
  ],
  "changeHistoryShort": {
    "20e3ae260b40cd6ef657b2a629a02219d68f162f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "20e3ae260b40cd6ef657b2a629a02219d68f162f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11402. HDFS Snapshots should capture point-in-time copies of OPEN files. (Manoj Govindassamy via Yongjun Zhang)\n",
      "commitDate": "21/04/17 8:35 PM",
      "commitName": "20e3ae260b40cd6ef657b2a629a02219d68f162f",
      "commitAuthor": "Yongjun Zhang",
      "diff": "@@ -0,0 +1,17 @@\n+        public List\u003cINodesInPath\u003e call() {\n+          List\u003cINodesInPath\u003e iNodesInPaths \u003d Lists.newArrayList();\n+          for (int idx \u003d startIdx; idx \u003c inodeCount; idx +\u003d workerCount) {\n+            INode inode \u003d inodes[idx];\n+            if (!inode.isFile()) {\n+              continue;\n+            }\n+            INodesInPath inodesInPath \u003d INodesInPath.fromINode(\n+                fsnamesystem.getFSDirectory().getRoot(), inode.asFile());\n+            if (ancestorDir !\u003d null \u0026\u0026\n+                !inodesInPath.isDescendant(ancestorDir)) {\n+              continue;\n+            }\n+            iNodesInPaths.add(inodesInPath);\n+          }\n+          return iNodesInPaths;\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public List\u003cINodesInPath\u003e call() {\n          List\u003cINodesInPath\u003e iNodesInPaths \u003d Lists.newArrayList();\n          for (int idx \u003d startIdx; idx \u003c inodeCount; idx +\u003d workerCount) {\n            INode inode \u003d inodes[idx];\n            if (!inode.isFile()) {\n              continue;\n            }\n            INodesInPath inodesInPath \u003d INodesInPath.fromINode(\n                fsnamesystem.getFSDirectory().getRoot(), inode.asFile());\n            if (ancestorDir !\u003d null \u0026\u0026\n                !inodesInPath.isDescendant(ancestorDir)) {\n              continue;\n            }\n            iNodesInPaths.add(inodesInPath);\n          }\n          return iNodesInPaths;\n        }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java"
    }
  }
}