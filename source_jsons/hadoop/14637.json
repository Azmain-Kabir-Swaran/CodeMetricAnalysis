{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSNetworkTopology.java",
  "functionName": "chooseRandomWithStorageType",
  "functionId": "chooseRandomWithStorageType___scope-String(modifiers-final)__excludedNodes-Collection__Node__(modifiers-final)__type-StorageType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSNetworkTopology.java",
  "functionStartLine": 69,
  "functionEndLine": 83,
  "numCommitsSeen": 11,
  "timeTaken": 890,
  "changeHistory": [
    "9832ae0ed8853d29072c9ea7031cd2373e6b16f9"
  ],
  "changeHistoryShort": {
    "9832ae0ed8853d29072c9ea7031cd2373e6b16f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9832ae0ed8853d29072c9ea7031cd2373e6b16f9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11482. Add storage type demand to into DFSNetworkTopology#chooseRandom. Contributed by Chen Liang.\n",
      "commitDate": "13/03/17 5:30 PM",
      "commitName": "9832ae0ed8853d29072c9ea7031cd2373e6b16f9",
      "commitAuthor": "Chen Liang",
      "diff": "@@ -0,0 +1,15 @@\n+  public Node chooseRandomWithStorageType(final String scope,\n+      final Collection\u003cNode\u003e excludedNodes, StorageType type) {\n+    netlock.readLock().lock();\n+    try {\n+      if (scope.startsWith(\"~\")) {\n+        return chooseRandomWithStorageType(\n+            NodeBase.ROOT, scope.substring(1), excludedNodes, type);\n+      } else {\n+        return chooseRandomWithStorageType(\n+            scope, null, excludedNodes, type);\n+      }\n+    } finally {\n+      netlock.readLock().unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Node chooseRandomWithStorageType(final String scope,\n      final Collection\u003cNode\u003e excludedNodes, StorageType type) {\n    netlock.readLock().lock();\n    try {\n      if (scope.startsWith(\"~\")) {\n        return chooseRandomWithStorageType(\n            NodeBase.ROOT, scope.substring(1), excludedNodes, type);\n      } else {\n        return chooseRandomWithStorageType(\n            scope, null, excludedNodes, type);\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSNetworkTopology.java"
    }
  }
}