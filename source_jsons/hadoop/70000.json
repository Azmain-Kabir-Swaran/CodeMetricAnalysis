{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystemStore.java",
  "functionName": "authorityParts",
  "functionId": "authorityParts___uri-URI",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
  "functionStartLine": 214,
  "functionEndLine": 236,
  "numCommitsSeen": 48,
  "timeTaken": 1534,
  "changeHistory": [
    "e5593cbd8323399359b3e8da46bd58e8364cbf22"
  ],
  "changeHistoryShort": {
    "e5593cbd8323399359b3e8da46bd58e8364cbf22": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5593cbd8323399359b3e8da46bd58e8364cbf22": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
      "commitAuthor": "Thomas Marquardt",
      "diff": "@@ -0,0 +1,23 @@\n+  private String[] authorityParts(URI uri) throws InvalidUriAuthorityException, InvalidUriException {\n+    final String authority \u003d uri.getRawAuthority();\n+    if (null \u003d\u003d authority) {\n+      throw new InvalidUriAuthorityException(uri.toString());\n+    }\n+\n+    if (!authority.contains(AbfsHttpConstants.AZURE_DISTRIBUTED_FILE_SYSTEM_AUTHORITY_DELIMITER)) {\n+      throw new InvalidUriAuthorityException(uri.toString());\n+    }\n+\n+    final String[] authorityParts \u003d authority.split(AbfsHttpConstants.AZURE_DISTRIBUTED_FILE_SYSTEM_AUTHORITY_DELIMITER, 2);\n+\n+    if (authorityParts.length \u003c 2 || authorityParts[0] !\u003d null\n+        \u0026\u0026 authorityParts[0].isEmpty()) {\n+      final String errMsg \u003d String\n+              .format(\"\u0027%s\u0027 has a malformed authority, expected container name. \"\n+                      + \"Authority takes the form \"\n+                      + FileSystemUriSchemes.ABFS_SCHEME + \"://[\u003ccontainer name\u003e@]\u003caccount name\u003e\",\n+                      uri.toString());\n+      throw new InvalidUriException(errMsg);\n+    }\n+    return authorityParts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String[] authorityParts(URI uri) throws InvalidUriAuthorityException, InvalidUriException {\n    final String authority \u003d uri.getRawAuthority();\n    if (null \u003d\u003d authority) {\n      throw new InvalidUriAuthorityException(uri.toString());\n    }\n\n    if (!authority.contains(AbfsHttpConstants.AZURE_DISTRIBUTED_FILE_SYSTEM_AUTHORITY_DELIMITER)) {\n      throw new InvalidUriAuthorityException(uri.toString());\n    }\n\n    final String[] authorityParts \u003d authority.split(AbfsHttpConstants.AZURE_DISTRIBUTED_FILE_SYSTEM_AUTHORITY_DELIMITER, 2);\n\n    if (authorityParts.length \u003c 2 || authorityParts[0] !\u003d null\n        \u0026\u0026 authorityParts[0].isEmpty()) {\n      final String errMsg \u003d String\n              .format(\"\u0027%s\u0027 has a malformed authority, expected container name. \"\n                      + \"Authority takes the form \"\n                      + FileSystemUriSchemes.ABFS_SCHEME + \"://[\u003ccontainer name\u003e@]\u003caccount name\u003e\",\n                      uri.toString());\n      throw new InvalidUriException(errMsg);\n    }\n    return authorityParts;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java"
    }
  }
}