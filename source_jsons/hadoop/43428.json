{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComponentInstance.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
  "functionStartLine": 1100,
  "functionEndLine": 1113,
  "numCommitsSeen": 35,
  "timeTaken": 3547,
  "changeHistory": [
    "a33ef4fd311784dc15401eb54c82e78528c4f961",
    "0ff94563b9b62d0426d475dc0f84152b68f1ff0d",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "a33ef4fd311784dc15401eb54c82e78528c4f961": "Ybodychange",
    "0ff94563b9b62d0426d475dc0f84152b68f1ff0d": "Ybodychange",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a33ef4fd311784dc15401eb54c82e78528c4f961": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8867. Added resource localization status to YARN service status call.\n           Contributed by Chandni Singh\n",
      "commitDate": "24/01/19 3:43 PM",
      "commitName": "a33ef4fd311784dc15401eb54c82e78528c4f961",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/01/19 5:23 PM",
      "commitNameOld": "824dfa3b099a09f18db6b0a3285eb4379ab72c2d",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,14 @@\n-    @Override public void run() {\n-      ContainerStatus status \u003d null;\n+    public void run() {\n+      List\u003corg.apache.hadoop.yarn.api.records.LocalizationStatus\u003e\n+          statusesFromNM \u003d null;\n       try {\n-        status \u003d nmClient.getContainerStatus(containerId, nodeId);\n-      } catch (Exception e) {\n-        if (e instanceof YarnException) {\n-          throw new YarnRuntimeException(\n-              instance.compInstanceId + \" Failed to get container status on \"\n-                  + nodeId + \" , cancelling.\", e);\n-        }\n-        LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n-            + nodeId + \", will try again\", e);\n-        return;\n+        statusesFromNM \u003d nmClient.getLocalizationStatuses(containerId,\n+            nodeId);\n+      } catch (YarnException | IOException e) {\n+        LOG.error(\"{} Failed to get localization statuses for {} {} \",\n+            instance.compInstanceId, nodeId, containerId, e);\n       }\n-      if (ServiceUtils.isEmpty(status.getIPs()) || ServiceUtils\n-          .isUnset(status.getHost())) {\n-        return;\n-      }\n-      instance.updateContainerStatus(status);\n-      if (cancelOnSuccess) {\n-        LOG.info(\n-            instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n-                + status.getHost() + \", cancel container status retriever\");\n-        instance.containerStatusFuture.cancel(false);\n+      if (statusesFromNM !\u003d null \u0026\u0026 !statusesFromNM.isEmpty()) {\n+        instance.updateLocalizationStatuses(statusesFromNM);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      List\u003corg.apache.hadoop.yarn.api.records.LocalizationStatus\u003e\n          statusesFromNM \u003d null;\n      try {\n        statusesFromNM \u003d nmClient.getLocalizationStatuses(containerId,\n            nodeId);\n      } catch (YarnException | IOException e) {\n        LOG.error(\"{} Failed to get localization statuses for {} {} \",\n            instance.compInstanceId, nodeId, containerId, e);\n      }\n      if (statusesFromNM !\u003d null \u0026\u0026 !statusesFromNM.isEmpty()) {\n        instance.updateLocalizationStatuses(statusesFromNM);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "0ff94563b9b62d0426d475dc0f84152b68f1ff0d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8265.  Improve DNS handling on docker IP changes.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "11/05/18 10:37 PM",
      "commitName": "0ff94563b9b62d0426d475dc0f84152b68f1ff0d",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "11/05/18 12:49 PM",
      "commitNameOld": "ca612e353fc3e3766868ec0816de035e48b1f5b4",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     @Override public void run() {\n       ContainerStatus status \u003d null;\n       try {\n         status \u003d nmClient.getContainerStatus(containerId, nodeId);\n       } catch (Exception e) {\n         if (e instanceof YarnException) {\n           throw new YarnRuntimeException(\n               instance.compInstanceId + \" Failed to get container status on \"\n                   + nodeId + \" , cancelling.\", e);\n         }\n         LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n             + nodeId + \", will try again\", e);\n         return;\n       }\n       if (ServiceUtils.isEmpty(status.getIPs()) || ServiceUtils\n           .isUnset(status.getHost())) {\n         return;\n       }\n       instance.updateContainerStatus(status);\n-      LOG.info(\n-          instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n-              + status.getHost() + \", cancel container status retriever\");\n-      instance.containerStatusFuture.cancel(false);\n+      if (cancelOnSuccess) {\n+        LOG.info(\n+            instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n+                + status.getHost() + \", cancel container status retriever\");\n+        instance.containerStatusFuture.cancel(false);\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    @Override public void run() {\n      ContainerStatus status \u003d null;\n      try {\n        status \u003d nmClient.getContainerStatus(containerId, nodeId);\n      } catch (Exception e) {\n        if (e instanceof YarnException) {\n          throw new YarnRuntimeException(\n              instance.compInstanceId + \" Failed to get container status on \"\n                  + nodeId + \" , cancelling.\", e);\n        }\n        LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n            + nodeId + \", will try again\", e);\n        return;\n      }\n      if (ServiceUtils.isEmpty(status.getIPs()) || ServiceUtils\n          .isUnset(status.getHost())) {\n        return;\n      }\n      instance.updateContainerStatus(status);\n      if (cancelOnSuccess) {\n        LOG.info(\n            instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n                + status.getHost() + \", cancel container status retriever\");\n        instance.containerStatusFuture.cancel(false);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     @Override public void run() {\n       ContainerStatus status \u003d null;\n       try {\n         status \u003d nmClient.getContainerStatus(containerId, nodeId);\n       } catch (Exception e) {\n         if (e instanceof YarnException) {\n           throw new YarnRuntimeException(\n               instance.compInstanceId + \" Failed to get container status on \"\n                   + nodeId + \" , cancelling.\", e);\n         }\n         LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n             + nodeId + \", will try again\", e);\n         return;\n       }\n-      if (SliderUtils.isEmpty(status.getIPs()) || SliderUtils\n+      if (ServiceUtils.isEmpty(status.getIPs()) || ServiceUtils\n           .isUnset(status.getHost())) {\n         return;\n       }\n       instance.updateContainerStatus(status);\n       LOG.info(\n           instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n               + status.getHost() + \", cancel container status retriever\");\n       instance.containerStatusFuture.cancel(false);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    @Override public void run() {\n      ContainerStatus status \u003d null;\n      try {\n        status \u003d nmClient.getContainerStatus(containerId, nodeId);\n      } catch (Exception e) {\n        if (e instanceof YarnException) {\n          throw new YarnRuntimeException(\n              instance.compInstanceId + \" Failed to get container status on \"\n                  + nodeId + \" , cancelling.\", e);\n        }\n        LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n            + nodeId + \", will try again\", e);\n        return;\n      }\n      if (ServiceUtils.isEmpty(status.getIPs()) || ServiceUtils\n          .isUnset(status.getHost())) {\n        return;\n      }\n      instance.updateContainerStatus(status);\n      LOG.info(\n          instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", cancel container status retriever\");\n      instance.containerStatusFuture.cancel(false);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    @Override public void run() {\n      ContainerStatus status \u003d null;\n      try {\n        status \u003d nmClient.getContainerStatus(containerId, nodeId);\n      } catch (Exception e) {\n        if (e instanceof YarnException) {\n          throw new YarnRuntimeException(\n              instance.compInstanceId + \" Failed to get container status on \"\n                  + nodeId + \" , cancelling.\", e);\n        }\n        LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n            + nodeId + \", will try again\", e);\n        return;\n      }\n      if (SliderUtils.isEmpty(status.getIPs()) || SliderUtils\n          .isUnset(status.getHost())) {\n        return;\n      }\n      instance.updateContainerStatus(status);\n      LOG.info(\n          instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", cancel container status retriever\");\n      instance.containerStatusFuture.cancel(false);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,24 @@\n+    @Override public void run() {\n+      ContainerStatus status \u003d null;\n+      try {\n+        status \u003d nmClient.getContainerStatus(containerId, nodeId);\n+      } catch (Exception e) {\n+        if (e instanceof YarnException) {\n+          throw new YarnRuntimeException(\n+              instance.compInstanceId + \" Failed to get container status on \"\n+                  + nodeId + \" , cancelling.\", e);\n+        }\n+        LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n+            + nodeId + \", will try again\", e);\n+        return;\n+      }\n+      if (SliderUtils.isEmpty(status.getIPs()) || SliderUtils\n+          .isUnset(status.getHost())) {\n+        return;\n+      }\n+      instance.updateContainerStatus(status);\n+      LOG.info(\n+          instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n+              + status.getHost() + \", cancel container status retriever\");\n+      instance.containerStatusFuture.cancel(false);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    @Override public void run() {\n      ContainerStatus status \u003d null;\n      try {\n        status \u003d nmClient.getContainerStatus(containerId, nodeId);\n      } catch (Exception e) {\n        if (e instanceof YarnException) {\n          throw new YarnRuntimeException(\n              instance.compInstanceId + \" Failed to get container status on \"\n                  + nodeId + \" , cancelling.\", e);\n        }\n        LOG.error(instance.compInstanceId + \" Failed to get container status on \"\n            + nodeId + \", will try again\", e);\n        return;\n      }\n      if (SliderUtils.isEmpty(status.getIPs()) || SliderUtils\n          .isUnset(status.getHost())) {\n        return;\n      }\n      instance.updateContainerStatus(status);\n      LOG.info(\n          instance.compInstanceId + \" IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", cancel container status retriever\");\n      instance.containerStatusFuture.cancel(false);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java"
    }
  }
}