{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKUtil.java",
  "functionName": "parseACLs",
  "functionId": "parseACLs___aclString-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ZKUtil.java",
  "functionStartLine": 95,
  "functionEndLine": 122,
  "numCommitsSeen": 5,
  "timeTaken": 1052,
  "changeHistory": [
    "82fc0f1855cd187adc99c6643e0ad35c82678a2c",
    "30e1b3bba856b2379a0dc1e7450512427d39c5d7"
  ],
  "changeHistoryShort": {
    "82fc0f1855cd187adc99c6643e0ad35c82678a2c": "Ymultichange(Yfilerename,Yexceptionschange)",
    "30e1b3bba856b2379a0dc1e7450512427d39c5d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82fc0f1855cd187adc99c6643e0ad35c82678a2c": {
      "type": "Ymultichange(Yfilerename,Yexceptionschange)",
      "commitMessage": "Adding and removing files missed for HADOOP-9906\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1518306 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/08/13 11:03 AM",
      "commitName": "82fc0f1855cd187adc99c6643e0ad35c82678a2c",
      "commitAuthor": "Sanford Ryza",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Adding and removing files missed for HADOOP-9906\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1518306 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/08/13 11:03 AM",
          "commitName": "82fc0f1855cd187adc99c6643e0ad35c82678a2c",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "28/08/13 10:54 AM",
          "commitNameOld": "f3c0074030864a0f1da2e4c2376798585cf13db0",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,28 @@\n-  public static List\u003cACL\u003e parseACLs(String aclString) {\n+  public static List\u003cACL\u003e parseACLs(String aclString) throws\n+      BadAclFormatException {\n     List\u003cACL\u003e acl \u003d Lists.newArrayList();\n     if (aclString \u003d\u003d null) {\n       return acl;\n     }\n     \n     List\u003cString\u003e aclComps \u003d Lists.newArrayList(\n         Splitter.on(\u0027,\u0027).omitEmptyStrings().trimResults()\n         .split(aclString));\n     for (String a : aclComps) {\n       // from ZooKeeperMain private method\n       int firstColon \u003d a.indexOf(\u0027:\u0027);\n       int lastColon \u003d a.lastIndexOf(\u0027:\u0027);\n       if (firstColon \u003d\u003d -1 || lastColon \u003d\u003d -1 || firstColon \u003d\u003d lastColon) {\n         throw new BadAclFormatException(\n             \"ACL \u0027\" + a + \"\u0027 not of expected form scheme:id:perm\");\n       }\n \n       ACL newAcl \u003d new ACL();\n       newAcl.setId(new Id(a.substring(0, firstColon), a.substring(\n           firstColon + 1, lastColon)));\n       newAcl.setPerms(getPermFromString(a.substring(lastColon + 1)));\n       acl.add(newAcl);\n     }\n     \n     return acl;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cACL\u003e parseACLs(String aclString) throws\n      BadAclFormatException {\n    List\u003cACL\u003e acl \u003d Lists.newArrayList();\n    if (aclString \u003d\u003d null) {\n      return acl;\n    }\n    \n    List\u003cString\u003e aclComps \u003d Lists.newArrayList(\n        Splitter.on(\u0027,\u0027).omitEmptyStrings().trimResults()\n        .split(aclString));\n    for (String a : aclComps) {\n      // from ZooKeeperMain private method\n      int firstColon \u003d a.indexOf(\u0027:\u0027);\n      int lastColon \u003d a.lastIndexOf(\u0027:\u0027);\n      if (firstColon \u003d\u003d -1 || lastColon \u003d\u003d -1 || firstColon \u003d\u003d lastColon) {\n        throw new BadAclFormatException(\n            \"ACL \u0027\" + a + \"\u0027 not of expected form scheme:id:perm\");\n      }\n\n      ACL newAcl \u003d new ACL();\n      newAcl.setId(new Id(a.substring(0, firstColon), a.substring(\n          firstColon + 1, lastColon)));\n      newAcl.setPerms(getPermFromString(a.substring(lastColon + 1)));\n      acl.add(newAcl);\n    }\n    \n    return acl;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ZKUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAZKUtil.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ZKUtil.java"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Adding and removing files missed for HADOOP-9906\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1518306 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/08/13 11:03 AM",
          "commitName": "82fc0f1855cd187adc99c6643e0ad35c82678a2c",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "28/08/13 10:54 AM",
          "commitNameOld": "f3c0074030864a0f1da2e4c2376798585cf13db0",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,28 @@\n-  public static List\u003cACL\u003e parseACLs(String aclString) {\n+  public static List\u003cACL\u003e parseACLs(String aclString) throws\n+      BadAclFormatException {\n     List\u003cACL\u003e acl \u003d Lists.newArrayList();\n     if (aclString \u003d\u003d null) {\n       return acl;\n     }\n     \n     List\u003cString\u003e aclComps \u003d Lists.newArrayList(\n         Splitter.on(\u0027,\u0027).omitEmptyStrings().trimResults()\n         .split(aclString));\n     for (String a : aclComps) {\n       // from ZooKeeperMain private method\n       int firstColon \u003d a.indexOf(\u0027:\u0027);\n       int lastColon \u003d a.lastIndexOf(\u0027:\u0027);\n       if (firstColon \u003d\u003d -1 || lastColon \u003d\u003d -1 || firstColon \u003d\u003d lastColon) {\n         throw new BadAclFormatException(\n             \"ACL \u0027\" + a + \"\u0027 not of expected form scheme:id:perm\");\n       }\n \n       ACL newAcl \u003d new ACL();\n       newAcl.setId(new Id(a.substring(0, firstColon), a.substring(\n           firstColon + 1, lastColon)));\n       newAcl.setPerms(getPermFromString(a.substring(lastColon + 1)));\n       acl.add(newAcl);\n     }\n     \n     return acl;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cACL\u003e parseACLs(String aclString) throws\n      BadAclFormatException {\n    List\u003cACL\u003e acl \u003d Lists.newArrayList();\n    if (aclString \u003d\u003d null) {\n      return acl;\n    }\n    \n    List\u003cString\u003e aclComps \u003d Lists.newArrayList(\n        Splitter.on(\u0027,\u0027).omitEmptyStrings().trimResults()\n        .split(aclString));\n    for (String a : aclComps) {\n      // from ZooKeeperMain private method\n      int firstColon \u003d a.indexOf(\u0027:\u0027);\n      int lastColon \u003d a.lastIndexOf(\u0027:\u0027);\n      if (firstColon \u003d\u003d -1 || lastColon \u003d\u003d -1 || firstColon \u003d\u003d lastColon) {\n        throw new BadAclFormatException(\n            \"ACL \u0027\" + a + \"\u0027 not of expected form scheme:id:perm\");\n      }\n\n      ACL newAcl \u003d new ACL();\n      newAcl.setId(new Id(a.substring(0, firstColon), a.substring(\n          firstColon + 1, lastColon)));\n      newAcl.setPerms(getPermFromString(a.substring(lastColon + 1)));\n      acl.add(newAcl);\n    }\n    \n    return acl;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ZKUtil.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[BadAclFormatException]"
          }
        }
      ]
    },
    "30e1b3bba856b2379a0dc1e7450512427d39c5d7": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8215. Security support for ZK Failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1309185 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/12 4:37 PM",
      "commitName": "30e1b3bba856b2379a0dc1e7450512427d39c5d7",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,27 @@\n+  public static List\u003cACL\u003e parseACLs(String aclString) {\n+    List\u003cACL\u003e acl \u003d Lists.newArrayList();\n+    if (aclString \u003d\u003d null) {\n+      return acl;\n+    }\n+    \n+    List\u003cString\u003e aclComps \u003d Lists.newArrayList(\n+        Splitter.on(\u0027,\u0027).omitEmptyStrings().trimResults()\n+        .split(aclString));\n+    for (String a : aclComps) {\n+      // from ZooKeeperMain private method\n+      int firstColon \u003d a.indexOf(\u0027:\u0027);\n+      int lastColon \u003d a.lastIndexOf(\u0027:\u0027);\n+      if (firstColon \u003d\u003d -1 || lastColon \u003d\u003d -1 || firstColon \u003d\u003d lastColon) {\n+        throw new BadAclFormatException(\n+            \"ACL \u0027\" + a + \"\u0027 not of expected form scheme:id:perm\");\n+      }\n+\n+      ACL newAcl \u003d new ACL();\n+      newAcl.setId(new Id(a.substring(0, firstColon), a.substring(\n+          firstColon + 1, lastColon)));\n+      newAcl.setPerms(getPermFromString(a.substring(lastColon + 1)));\n+      acl.add(newAcl);\n+    }\n+    \n+    return acl;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cACL\u003e parseACLs(String aclString) {\n    List\u003cACL\u003e acl \u003d Lists.newArrayList();\n    if (aclString \u003d\u003d null) {\n      return acl;\n    }\n    \n    List\u003cString\u003e aclComps \u003d Lists.newArrayList(\n        Splitter.on(\u0027,\u0027).omitEmptyStrings().trimResults()\n        .split(aclString));\n    for (String a : aclComps) {\n      // from ZooKeeperMain private method\n      int firstColon \u003d a.indexOf(\u0027:\u0027);\n      int lastColon \u003d a.lastIndexOf(\u0027:\u0027);\n      if (firstColon \u003d\u003d -1 || lastColon \u003d\u003d -1 || firstColon \u003d\u003d lastColon) {\n        throw new BadAclFormatException(\n            \"ACL \u0027\" + a + \"\u0027 not of expected form scheme:id:perm\");\n      }\n\n      ACL newAcl \u003d new ACL();\n      newAcl.setId(new Id(a.substring(0, firstColon), a.substring(\n          firstColon + 1, lastColon)));\n      newAcl.setPerms(getPermFromString(a.substring(lastColon + 1)));\n      acl.add(newAcl);\n    }\n    \n    return acl;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAZKUtil.java"
    }
  }
}