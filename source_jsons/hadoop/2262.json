{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "setQuota",
  "functionId": "setQuota___src-String__namespaceQuota-long__storagespaceQuota-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 2552,
  "functionEndLine": 2579,
  "numCommitsSeen": 526,
  "timeTaken": 12579,
  "changeHistory": [
    "9fe5828f05accc6746cb08a43916f7557dac533a",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "892ade689f9bcce76daae8f66fc00a49bee8548e",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "e16f4b7f70b8675760cf5aaa471dfe29d48041e6",
    "c8d72907ff5a4cb9ce1effca8ad9b69689d11d1d",
    "f2231cebcddc80f0b753c4a7cb45ee4040846951",
    "8de80ff71234f8fb005f297f1ce6d4755633d5e4",
    "c4ccbe62c0857261b197a68c1e03a02e92f21a38",
    "2116d0520e528c44fa280f2a5b28594c6d6fc28a",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9fe5828f05accc6746cb08a43916f7557dac533a": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "892ade689f9bcce76daae8f66fc00a49bee8548e": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "e16f4b7f70b8675760cf5aaa471dfe29d48041e6": "Ybodychange",
    "c8d72907ff5a4cb9ce1effca8ad9b69689d11d1d": "Ybodychange",
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": "Ymultichange(Yparameterchange,Ybodychange)",
    "8de80ff71234f8fb005f297f1ce6d4755633d5e4": "Ybodychange",
    "c4ccbe62c0857261b197a68c1e03a02e92f21a38": "Ybodychange",
    "2116d0520e528c44fa280f2a5b28594c6d6fc28a": "Ybodychange",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fe5828f05accc6746cb08a43916f7557dac533a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10242. Cannot create space quota of zero. Contributed by Takashi Ohnishi.\n",
      "commitDate": "16/05/16 11:53 PM",
      "commitName": "9fe5828f05accc6746cb08a43916f7557dac533a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "30/03/16 1:37 PM",
      "commitNameOld": "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 47.43,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n     checkOpen();\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026\n           namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n           namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n-        (storagespaceQuota \u003c\u003d 0 \u0026\u0026\n+        (storagespaceQuota \u003c 0 \u0026\u0026\n             storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n             storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n           namespaceQuota + \" and \" +\n           storagespaceQuota);\n \n     }\n     try (TraceScope ignored \u003d newPathTraceScope(\"setQuota\", src)) {\n       // Pass null as storage type for traditional namespace/storagespace quota.\n       namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n     } catch (RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n           FileNotFoundException.class,\n           NSQuotaExceededException.class,\n           DSQuotaExceededException.class,\n           QuotaByStorageTypeExceededException.class,\n           UnresolvedPathException.class,\n           SnapshotAccessControlException.class);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    checkOpen();\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c 0 \u0026\u0026\n            storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n            storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n          namespaceQuota + \" and \" +\n          storagespaceQuota);\n\n    }\n    try (TraceScope ignored \u003d newPathTraceScope(\"setQuota\", src)) {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch (RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n          FileNotFoundException.class,\n          NSQuotaExceededException.class,\n          DSQuotaExceededException.class,\n          QuotaByStorageTypeExceededException.class,\n          UnresolvedPathException.class,\n          SnapshotAccessControlException.class);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/09/15 8:39 AM",
      "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.12,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n     checkOpen();\n     // sanity check\n-    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n-         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n-        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n-         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n+    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026\n+          namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n+        (storagespaceQuota \u003c\u003d 0 \u0026\u0026\n+            storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+            storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n-                                         namespaceQuota + \" and \" +\n-                                         storagespaceQuota);\n-                                         \n+          namespaceQuota + \" and \" +\n+          storagespaceQuota);\n+\n     }\n-    TraceScope scope \u003d newPathTraceScope(\"setQuota\", src);\n-    try {\n+    try (TraceScope ignored \u003d newPathTraceScope(\"setQuota\", src)) {\n       // Pass null as storage type for traditional namespace/storagespace quota.\n       namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n-    } catch(RemoteException re) {\n+    } catch (RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n-                                     FileNotFoundException.class,\n-                                     NSQuotaExceededException.class,\n-                                     DSQuotaExceededException.class,\n-                                     QuotaByStorageTypeExceededException.class,\n-                                     UnresolvedPathException.class,\n-                                     SnapshotAccessControlException.class);\n-    } finally {\n-      scope.close();\n+          FileNotFoundException.class,\n+          NSQuotaExceededException.class,\n+          DSQuotaExceededException.class,\n+          QuotaByStorageTypeExceededException.class,\n+          UnresolvedPathException.class,\n+          SnapshotAccessControlException.class);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    checkOpen();\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026\n            storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n            storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n          namespaceQuota + \" and \" +\n          storagespaceQuota);\n\n    }\n    try (TraceScope ignored \u003d newPathTraceScope(\"setQuota\", src)) {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch (RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n          FileNotFoundException.class,\n          NSQuotaExceededException.class,\n          DSQuotaExceededException.class,\n          QuotaByStorageTypeExceededException.class,\n          UnresolvedPathException.class,\n          SnapshotAccessControlException.class);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "892ade689f9bcce76daae8f66fc00a49bee8548e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9080. Update htrace version to 4.0.1 (cmccabe)\n",
      "commitDate": "28/09/15 7:42 AM",
      "commitName": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "26/09/15 11:08 AM",
      "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.86,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n     checkOpen();\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n         (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" +\n                                          storagespaceQuota);\n                                          \n     }\n-    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n+    TraceScope scope \u003d newPathTraceScope(\"setQuota\", src);\n     try {\n       // Pass null as storage type for traditional namespace/storagespace quota.\n       namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      QuotaByStorageTypeExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    checkOpen();\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" +\n                                         storagespaceQuota);\n                                         \n    }\n    TraceScope scope \u003d newPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     QuotaByStorageTypeExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    checkOpen();\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" +\n                                         storagespaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     QuotaByStorageTypeExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "e16f4b7f70b8675760cf5aaa471dfe29d48041e6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8332. DFS client API calls should check filesystem closed. Contributed by Rakesh R.\n",
      "commitDate": "07/05/15 11:56 PM",
      "commitName": "e16f4b7f70b8675760cf5aaa471dfe29d48041e6",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "05/05/15 3:41 PM",
      "commitNameOld": "4da8490b512a33a255ed27309860859388d7c168",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.34,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n+    checkOpen();\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n         (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" +\n                                          storagespaceQuota);\n                                          \n     }\n     TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n     try {\n       // Pass null as storage type for traditional namespace/storagespace quota.\n       namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      QuotaByStorageTypeExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    checkOpen();\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" +\n                                         storagespaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     QuotaByStorageTypeExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "c8d72907ff5a4cb9ce1effca8ad9b69689d11d1d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8231. StackTrace displayed at client while QuotaByStorageType exceeds (Contributed by J.Andreina and Xiaoyu Yao)\n",
      "commitDate": "24/04/15 12:21 AM",
      "commitName": "c8d72907ff5a4cb9ce1effca8ad9b69689d11d1d",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "23/04/15 5:33 PM",
      "commitNameOld": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.28,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n         (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" +\n                                          storagespaceQuota);\n                                          \n     }\n     TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n     try {\n       // Pass null as storage type for traditional namespace/storagespace quota.\n       namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n+                                     QuotaByStorageTypeExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" +\n                                         storagespaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     QuotaByStorageTypeExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
      "commitDate": "13/02/15 9:01 PM",
      "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
          "commitDate": "13/02/15 9:01 PM",
          "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "11/02/15 11:08 PM",
          "commitNameOld": "89a544928083501625bc69f96b530040228f0a5f",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 1.91,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n+  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n-        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n-         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n+        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n-                                         namespaceQuota + \" and \" + \n-                                         diskspaceQuota);\n+                                         namespaceQuota + \" and \" +\n+                                         storagespaceQuota);\n                                          \n     }\n     TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n     try {\n-      // Pass null as storage type for traditional space/namespace quota.\n-      namenode.setQuota(src, namespaceQuota, diskspaceQuota, null);\n+      // Pass null as storage type for traditional namespace/storagespace quota.\n+      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" +\n                                         storagespaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "[src-String, namespaceQuota-long, diskspaceQuota-long]",
            "newValue": "[src-String, namespaceQuota-long, storagespaceQuota-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
          "commitDate": "13/02/15 9:01 PM",
          "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "11/02/15 11:08 PM",
          "commitNameOld": "89a544928083501625bc69f96b530040228f0a5f",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 1.91,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n+  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n       throws IOException {\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n-        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n-         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n+        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n-                                         namespaceQuota + \" and \" + \n-                                         diskspaceQuota);\n+                                         namespaceQuota + \" and \" +\n+                                         storagespaceQuota);\n                                          \n     }\n     TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n     try {\n-      // Pass null as storage type for traditional space/namespace quota.\n-      namenode.setQuota(src, namespaceQuota, diskspaceQuota, null);\n+      // Pass null as storage type for traditional namespace/storagespace quota.\n+      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void setQuota(String src, long namespaceQuota, long storagespaceQuota)\n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (storagespaceQuota \u003c\u003d 0 \u0026\u0026 storagespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         storagespaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" +\n                                         storagespaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional namespace/storagespace quota.\n      namenode.setQuota(src, namespaceQuota, storagespaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "8de80ff71234f8fb005f297f1ce6d4755633d5e4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7720. Quota by Storage Type API, tools and ClientNameNode Protocol changes. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "06/02/15 5:01 PM",
      "commitName": "8de80ff71234f8fb005f297f1ce6d4755633d5e4",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "30/01/15 4:01 PM",
      "commitNameOld": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 7.04,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n       throws IOException {\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n         (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" + \n                                          diskspaceQuota);\n                                          \n     }\n     TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n     try {\n-      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n+      // Pass null as storage type for traditional space/namespace quota.\n+      namenode.setQuota(src, namespaceQuota, diskspaceQuota, null);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      // Pass null as storage type for traditional space/namespace quota.\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota, null);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "c4ccbe62c0857261b197a68c1e03a02e92f21a38": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7189. Add trace spans for DFSClient metadata operations. (Colin P. McCabe via yliu)\n",
      "commitDate": "15/01/15 8:23 AM",
      "commitName": "c4ccbe62c0857261b197a68c1e03a02e92f21a38",
      "commitAuthor": "yliu",
      "commitDateOld": "12/01/15 10:50 PM",
      "commitNameOld": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
      "commitAuthorOld": "Plamen Jeliazkov",
      "daysBetweenCommits": 2.4,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n       throws IOException {\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n         (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" + \n                                          diskspaceQuota);\n                                          \n     }\n+    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n     try {\n       namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      UnresolvedPathException.class,\n                                      SnapshotAccessControlException.class);\n+    } finally {\n+      scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    TraceScope scope \u003d getPathTraceScope(\"setQuota\", src);\n    try {\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "2116d0520e528c44fa280f2a5b28594c6d6fc28a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4148. Disallow write/modify operations on files and directories in a snapshot. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1409023 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/11/12 3:26 PM",
      "commitName": "2116d0520e528c44fa280f2a5b28594c6d6fc28a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "29/10/12 7:09 AM",
      "commitNameOld": "564adec5b5d5264897572f68d9e19a916f887c0d",
      "commitAuthorOld": "",
      "daysBetweenCommits": 15.39,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n       throws IOException {\n     // sanity check\n     if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n         (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n          diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" + \n                                          diskspaceQuota);\n                                          \n     }\n     try {\n       namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n-                                     UnresolvedPathException.class);\n+                                     UnresolvedPathException.class,\n+                                     SnapshotAccessControlException.class);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    try {\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class,\n                                     SnapshotAccessControlException.class);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1620. Rename HdfsConstants -\u003e HdfsServerConstants, FSConstants -\u003e HdfsConstants. (Harsh J Chouraria via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/11 12:30 PM",
      "commitName": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 10.8,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n       throws IOException {\n     // sanity check\n-    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n-         namespaceQuota !\u003d FSConstants.QUOTA_RESET) ||\n-        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n-         diskspaceQuota !\u003d FSConstants.QUOTA_RESET)) {\n+    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n+        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n       throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                          namespaceQuota + \" and \" + \n                                          diskspaceQuota);\n                                          \n     }\n     try {\n       namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n     } catch(RemoteException re) {\n       throw re.unwrapRemoteException(AccessControlException.class,\n                                      FileNotFoundException.class,\n                                      NSQuotaExceededException.class,\n                                      DSQuotaExceededException.class,\n                                      UnresolvedPathException.class);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d HdfsConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d HdfsConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    try {\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d FSConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d FSConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    try {\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d FSConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d FSConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    try {\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,22 @@\n+  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n+      throws IOException {\n+    // sanity check\n+    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n+         namespaceQuota !\u003d FSConstants.QUOTA_RESET) ||\n+        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n+         diskspaceQuota !\u003d FSConstants.QUOTA_RESET)) {\n+      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n+                                         namespaceQuota + \" and \" + \n+                                         diskspaceQuota);\n+                                         \n+    }\n+    try {\n+      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n+    } catch(RemoteException re) {\n+      throw re.unwrapRemoteException(AccessControlException.class,\n+                                     FileNotFoundException.class,\n+                                     NSQuotaExceededException.class,\n+                                     DSQuotaExceededException.class,\n+                                     UnresolvedPathException.class);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuota(String src, long namespaceQuota, long diskspaceQuota) \n      throws IOException {\n    // sanity check\n    if ((namespaceQuota \u003c\u003d 0 \u0026\u0026 namespaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n         namespaceQuota !\u003d FSConstants.QUOTA_RESET) ||\n        (diskspaceQuota \u003c\u003d 0 \u0026\u0026 diskspaceQuota !\u003d FSConstants.QUOTA_DONT_SET \u0026\u0026\n         diskspaceQuota !\u003d FSConstants.QUOTA_RESET)) {\n      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n                                         namespaceQuota + \" and \" + \n                                         diskspaceQuota);\n                                         \n    }\n    try {\n      namenode.setQuota(src, namespaceQuota, diskspaceQuota);\n    } catch(RemoteException re) {\n      throw re.unwrapRemoteException(AccessControlException.class,\n                                     FileNotFoundException.class,\n                                     NSQuotaExceededException.class,\n                                     DSQuotaExceededException.class,\n                                     UnresolvedPathException.class);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}