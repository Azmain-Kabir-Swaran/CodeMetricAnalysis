{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationService.java",
  "functionName": "renameAppLogDir",
  "functionId": "renameAppLogDir___logDir-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
  "functionStartLine": 1503,
  "functionEndLine": 1517,
  "numCommitsSeen": 88,
  "timeTaken": 1900,
  "changeHistory": [
    "7146359bfd436a76585fb1f3ea93716795308cec"
  ],
  "changeHistoryShort": {
    "7146359bfd436a76585fb1f3ea93716795308cec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7146359bfd436a76585fb1f3ea93716795308cec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5027. NM should clean up app log dirs after NM restart. Contributed by sandflee\n",
      "commitDate": "28/10/16 8:48 AM",
      "commitName": "7146359bfd436a76585fb1f3ea93716795308cec",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,15 @@\n+  private void renameAppLogDir(String logDir) throws IOException {\n+    long currentTimeStamp \u003d System.currentTimeMillis();\n+    RemoteIterator\u003cFileStatus\u003e fileStatuses \u003d\n+        lfs.listStatus(new Path(logDir));\n+    if (fileStatuses !\u003d null) {\n+      while (fileStatuses.hasNext()) {\n+        FileStatus fileStatus \u003d fileStatuses.next();\n+        String appName \u003d fileStatus.getPath().getName();\n+        if (appName.matches(\"^application_\\\\d+_\\\\d+$\")) {\n+          lfs.rename(new Path(logDir, appName),\n+              new Path(logDir, appName + \"_DEL_\" + currentTimeStamp));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void renameAppLogDir(String logDir) throws IOException {\n    long currentTimeStamp \u003d System.currentTimeMillis();\n    RemoteIterator\u003cFileStatus\u003e fileStatuses \u003d\n        lfs.listStatus(new Path(logDir));\n    if (fileStatuses !\u003d null) {\n      while (fileStatuses.hasNext()) {\n        FileStatus fileStatus \u003d fileStatuses.next();\n        String appName \u003d fileStatus.getPath().getName();\n        if (appName.matches(\"^application_\\\\d+_\\\\d+$\")) {\n          lfs.rename(new Path(logDir, appName),\n              new Path(logDir, appName + \"_DEL_\" + currentTimeStamp));\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
    }
  }
}