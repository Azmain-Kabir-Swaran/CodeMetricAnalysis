{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineStorageUtils.java",
  "functionName": "matchEventFilters",
  "functionId": "matchEventFilters___entity-TimelineEntity__eventFilters-TimelineFilterList",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java",
  "functionStartLine": 218,
  "functionEndLine": 221,
  "numCommitsSeen": 17,
  "timeTaken": 1636,
  "changeHistory": [
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
    "b51d0fef56a59b15489f5b932025718b4e9613d2"
  ],
  "changeHistoryShort": {
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "b51d0fef56a59b15489f5b932025718b4e9613d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9bdd455dced15c84430ea0a0a59410df924f02a7",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,4 @@\n-  public static boolean matchEventFilters(Set\u003cTimelineEvent\u003e entityEvents,\n-      Set\u003cString\u003e eventFilters) {\n-    Set\u003cString\u003e eventIds \u003d new HashSet\u003cString\u003e();\n-    for (TimelineEvent event : entityEvents) {\n-      eventIds.add(event.getId());\n-    }\n-    for (String eventFilter : eventFilters) {\n-      if (!eventIds.contains(eventFilter)) {\n-        return false;\n-      }\n-    }\n-    return true;\n+  public static boolean matchEventFilters(TimelineEntity entity,\n+      TimelineFilterList eventFilters) throws IOException {\n+    return matchFilters(entity, eventFilters, TimelineEntityFiltersType.EVENT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean matchEventFilters(TimelineEntity entity,\n      TimelineFilterList eventFilters) throws IOException {\n    return matchFilters(entity, eventFilters, TimelineEntityFiltersType.EVENT);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java",
          "extendedDetails": {
            "oldValue": "[entityEvents-Set\u003cTimelineEvent\u003e, eventFilters-Set\u003cString\u003e]",
            "newValue": "[entity-TimelineEntity, eventFilters-TimelineFilterList]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9bdd455dced15c84430ea0a0a59410df924f02a7",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,4 @@\n-  public static boolean matchEventFilters(Set\u003cTimelineEvent\u003e entityEvents,\n-      Set\u003cString\u003e eventFilters) {\n-    Set\u003cString\u003e eventIds \u003d new HashSet\u003cString\u003e();\n-    for (TimelineEvent event : entityEvents) {\n-      eventIds.add(event.getId());\n-    }\n-    for (String eventFilter : eventFilters) {\n-      if (!eventIds.contains(eventFilter)) {\n-        return false;\n-      }\n-    }\n-    return true;\n+  public static boolean matchEventFilters(TimelineEntity entity,\n+      TimelineFilterList eventFilters) throws IOException {\n+    return matchFilters(entity, eventFilters, TimelineEntityFiltersType.EVENT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean matchEventFilters(TimelineEntity entity,\n      TimelineFilterList eventFilters) throws IOException {\n    return matchFilters(entity, eventFilters, TimelineEntityFiltersType.EVENT);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9bdd455dced15c84430ea0a0a59410df924f02a7",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,4 @@\n-  public static boolean matchEventFilters(Set\u003cTimelineEvent\u003e entityEvents,\n-      Set\u003cString\u003e eventFilters) {\n-    Set\u003cString\u003e eventIds \u003d new HashSet\u003cString\u003e();\n-    for (TimelineEvent event : entityEvents) {\n-      eventIds.add(event.getId());\n-    }\n-    for (String eventFilter : eventFilters) {\n-      if (!eventIds.contains(eventFilter)) {\n-        return false;\n-      }\n-    }\n-    return true;\n+  public static boolean matchEventFilters(TimelineEntity entity,\n+      TimelineFilterList eventFilters) throws IOException {\n+    return matchFilters(entity, eventFilters, TimelineEntityFiltersType.EVENT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean matchEventFilters(TimelineEntity entity,\n      TimelineFilterList eventFilters) throws IOException {\n    return matchFilters(entity, eventFilters, TimelineEntityFiltersType.EVENT);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "b51d0fef56a59b15489f5b932025718b4e9613d2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4178. [storage implementation] app id as string in row keys can cause incorrect ordering (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "b51d0fef56a59b15489f5b932025718b4e9613d2",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  public static boolean matchEventFilters(Set\u003cTimelineEvent\u003e entityEvents,\n+      Set\u003cString\u003e eventFilters) {\n+    Set\u003cString\u003e eventIds \u003d new HashSet\u003cString\u003e();\n+    for (TimelineEvent event : entityEvents) {\n+      eventIds.add(event.getId());\n+    }\n+    for (String eventFilter : eventFilters) {\n+      if (!eventIds.contains(eventFilter)) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean matchEventFilters(Set\u003cTimelineEvent\u003e entityEvents,\n      Set\u003cString\u003e eventFilters) {\n    Set\u003cString\u003e eventIds \u003d new HashSet\u003cString\u003e();\n    for (TimelineEvent event : entityEvents) {\n      eventIds.add(event.getId());\n    }\n    for (String eventFilter : eventFilters) {\n      if (!eventIds.contains(eventFilter)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java"
    }
  }
}