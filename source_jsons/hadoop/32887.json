{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainersLauncher.java",
  "functionName": "cleanup",
  "functionId": "cleanup___event-ContainersLauncherEvent__containerId-ContainerId__async-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainersLauncher.java",
  "functionStartLine": 221,
  "functionEndLine": 246,
  "numCommitsSeen": 24,
  "timeTaken": 1249,
  "changeHistory": [
    "e815fd9c49e80b9200dd8852abe74fe219ad9110"
  ],
  "changeHistoryShort": {
    "e815fd9c49e80b9200dd8852abe74fe219ad9110": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e815fd9c49e80b9200dd8852abe74fe219ad9110": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9126.  Fix container clean up for reinitialization.\n            Contributed by Chandni Singh\n",
      "commitDate": "19/12/18 11:55 AM",
      "commitName": "e815fd9c49e80b9200dd8852abe74fe219ad9110",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,26 @@\n+  void cleanup(ContainersLauncherEvent event, ContainerId containerId,\n+      boolean async) {\n+    ContainerLaunch existingLaunch \u003d running.remove(containerId);\n+    if (existingLaunch \u003d\u003d null) {\n+      // Container not launched.\n+      // triggering KILLING to CONTAINER_CLEANEDUP_AFTER_KILL transition.\n+      dispatcher.getEventHandler().handle(\n+          new ContainerExitEvent(containerId,\n+              ContainerEventType.CONTAINER_KILLED_ON_REQUEST,\n+              Shell.WINDOWS ?\n+                  ContainerExecutor.ExitCode.FORCE_KILLED.getExitCode() :\n+                  ContainerExecutor.ExitCode.TERMINATED.getExitCode(),\n+              \"Container terminated before launch.\"));\n+      return;\n+    }\n+\n+    // Cleanup a container whether it is running/killed/completed, so that\n+    // no sub-processes are alive.\n+    ContainerCleanup cleanup \u003d new ContainerCleanup(context, getConfig(),\n+        dispatcher, exec, event.getContainer(), existingLaunch);\n+    if (async) {\n+      containerLauncher.submit(cleanup);\n+    } else {\n+      cleanup.run();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void cleanup(ContainersLauncherEvent event, ContainerId containerId,\n      boolean async) {\n    ContainerLaunch existingLaunch \u003d running.remove(containerId);\n    if (existingLaunch \u003d\u003d null) {\n      // Container not launched.\n      // triggering KILLING to CONTAINER_CLEANEDUP_AFTER_KILL transition.\n      dispatcher.getEventHandler().handle(\n          new ContainerExitEvent(containerId,\n              ContainerEventType.CONTAINER_KILLED_ON_REQUEST,\n              Shell.WINDOWS ?\n                  ContainerExecutor.ExitCode.FORCE_KILLED.getExitCode() :\n                  ContainerExecutor.ExitCode.TERMINATED.getExitCode(),\n              \"Container terminated before launch.\"));\n      return;\n    }\n\n    // Cleanup a container whether it is running/killed/completed, so that\n    // no sub-processes are alive.\n    ContainerCleanup cleanup \u003d new ContainerCleanup(context, getConfig(),\n        dispatcher, exec, event.getContainer(), existingLaunch);\n    if (async) {\n      containerLauncher.submit(cleanup);\n    } else {\n      cleanup.run();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainersLauncher.java"
    }
  }
}