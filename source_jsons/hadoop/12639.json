{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExternalSPSFilePathCollector.java",
  "functionName": "checkProcessingQueuesFree",
  "functionId": "checkProcessingQueuesFree",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSFilePathCollector.java",
  "functionStartLine": 121,
  "functionEndLine": 135,
  "numCommitsSeen": 5,
  "timeTaken": 1724,
  "changeHistory": [
    "8467ec24fb74f30371d5a13e893fc56309ee9372",
    "3159b39cf8ef704835325263154fb1a1cecc109d"
  ],
  "changeHistoryShort": {
    "8467ec24fb74f30371d5a13e893fc56309ee9372": "Yfilerename",
    "3159b39cf8ef704835325263154fb1a1cecc109d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8467ec24fb74f30371d5a13e893fc56309ee9372": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "8467ec24fb74f30371d5a13e893fc56309ee9372",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void checkProcessingQueuesFree() {\n    int remainingCapacity \u003d remainingCapacity();\n    // wait for queue to be free\n    while (remainingCapacity \u003c\u003d 0) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Waiting for storageMovementNeeded queue to be free!\");\n      }\n      try {\n        Thread.sleep(5000);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n      remainingCapacity \u003d remainingCapacity();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSFilePathCollector.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSFileIDCollector.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSFilePathCollector.java"
      }
    },
    "3159b39cf8ef704835325263154fb1a1cecc109d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13025. [SPS]: Implement a mechanism to scan the files for external SPS. Contributed by Uma Maheswara Rao G.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "3159b39cf8ef704835325263154fb1a1cecc109d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,15 @@\n+  private void checkProcessingQueuesFree() {\n+    int remainingCapacity \u003d remainingCapacity();\n+    // wait for queue to be free\n+    while (remainingCapacity \u003c\u003d 0) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Waiting for storageMovementNeeded queue to be free!\");\n+      }\n+      try {\n+        Thread.sleep(5000);\n+      } catch (InterruptedException e) {\n+        Thread.currentThread().interrupt();\n+      }\n+      remainingCapacity \u003d remainingCapacity();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkProcessingQueuesFree() {\n    int remainingCapacity \u003d remainingCapacity();\n    // wait for queue to be free\n    while (remainingCapacity \u003c\u003d 0) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Waiting for storageMovementNeeded queue to be free!\");\n      }\n      try {\n        Thread.sleep(5000);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n      remainingCapacity \u003d remainingCapacity();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSFileIDCollector.java"
    }
  }
}