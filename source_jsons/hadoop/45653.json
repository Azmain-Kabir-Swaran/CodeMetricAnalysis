{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AggregatedLogFormat.java",
  "functionName": "readContainerMetaDataAndSkipData",
  "functionId": "readContainerMetaDataAndSkipData___valueStream-DataInputStream",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
  "functionStartLine": 998,
  "functionEndLine": 1013,
  "numCommitsSeen": 80,
  "timeTaken": 3874,
  "changeHistory": [
    "8528d85a68c0e6ea71026df4d3026e7edc206b2d",
    "eb471632349deac4b62f8dec853c8ceb64c9617a",
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835"
  ],
  "changeHistoryShort": {
    "8528d85a68c0e6ea71026df4d3026e7edc206b2d": "Yparameterchange",
    "eb471632349deac4b62f8dec853c8ceb64c9617a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8528d85a68c0e6ea71026df4d3026e7edc206b2d": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-6099. Improve webservice to list aggregated log files. Contributed by Xuan Gong.\n",
      "commitDate": "24/01/17 3:26 PM",
      "commitName": "8528d85a68c0e6ea71026df4d3026e7edc206b2d",
      "commitAuthor": "Junping Du",
      "commitDateOld": "21/10/16 1:31 PM",
      "commitNameOld": "23d7d53a41c6a59efa4093ae563c45af911005d4",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 95.12,
      "commitsBetweenForRepo": 613,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public static Pair\u003cString, String\u003e readContainerMetaDataAndSkipData(\n-        DataInputStream valueStream, PrintStream out) throws IOException {\n+        DataInputStream valueStream) throws IOException {\n \n       String fileType \u003d valueStream.readUTF();\n       String fileLengthStr \u003d valueStream.readUTF();\n       long fileLength \u003d Long.parseLong(fileLengthStr);\n       Pair\u003cString, String\u003e logMeta \u003d new Pair\u003cString, String\u003e(\n           fileType, fileLengthStr);\n       long totalSkipped \u003d 0;\n       long currSkipped \u003d 0;\n       while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n         currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n         totalSkipped +\u003d currSkipped;\n       }\n       return logMeta;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Pair\u003cString, String\u003e readContainerMetaDataAndSkipData(\n        DataInputStream valueStream) throws IOException {\n\n      String fileType \u003d valueStream.readUTF();\n      String fileLengthStr \u003d valueStream.readUTF();\n      long fileLength \u003d Long.parseLong(fileLengthStr);\n      Pair\u003cString, String\u003e logMeta \u003d new Pair\u003cString, String\u003e(\n          fileType, fileLengthStr);\n      long totalSkipped \u003d 0;\n      long currSkipped \u003d 0;\n      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n        totalSkipped +\u003d currSkipped;\n      }\n      return logMeta;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {
        "oldValue": "[valueStream-DataInputStream, out-PrintStream]",
        "newValue": "[valueStream-DataInputStream]"
      }
    },
    "eb471632349deac4b62f8dec853c8ceb64c9617a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-5200. Enhanced \"yarn logs\" to be able to get a list of containers whose logs are aggregated via a \"show_container_log_info\" option. Contributed by Xuan Gong.\n",
      "commitDate": "13/07/16 10:54 AM",
      "commitName": "eb471632349deac4b62f8dec853c8ceb64c9617a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5200. Enhanced \"yarn logs\" to be able to get a list of containers whose logs are aggregated via a \"show_container_log_info\" option. Contributed by Xuan Gong.\n",
          "commitDate": "13/07/16 10:54 AM",
          "commitName": "eb471632349deac4b62f8dec853c8ceb64c9617a",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/06/16 8:24 AM",
          "commitNameOld": "c35fa4a0e57b99415e284c7c2f3b1a0bebc610c2",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 26.1,
          "commitsBetweenForRepo": 296,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,16 @@\n-    public static String readContainerMetaDataAndSkipData(\n+    public static Pair\u003cString, String\u003e readContainerMetaDataAndSkipData(\n         DataInputStream valueStream, PrintStream out) throws IOException {\n \n       String fileType \u003d valueStream.readUTF();\n       String fileLengthStr \u003d valueStream.readUTF();\n       long fileLength \u003d Long.parseLong(fileLengthStr);\n-      if (out !\u003d null) {\n-        out.print(\"LogType:\");\n-        out.println(fileType);\n-        out.print(\"LogLength:\");\n-        out.println(fileLengthStr);\n-      }\n+      Pair\u003cString, String\u003e logMeta \u003d new Pair\u003cString, String\u003e(\n+          fileType, fileLengthStr);\n       long totalSkipped \u003d 0;\n       long currSkipped \u003d 0;\n       while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n         currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n         totalSkipped +\u003d currSkipped;\n       }\n-      return fileType;\n+      return logMeta;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Pair\u003cString, String\u003e readContainerMetaDataAndSkipData(\n        DataInputStream valueStream, PrintStream out) throws IOException {\n\n      String fileType \u003d valueStream.readUTF();\n      String fileLengthStr \u003d valueStream.readUTF();\n      long fileLength \u003d Long.parseLong(fileLengthStr);\n      Pair\u003cString, String\u003e logMeta \u003d new Pair\u003cString, String\u003e(\n          fileType, fileLengthStr);\n      long totalSkipped \u003d 0;\n      long currSkipped \u003d 0;\n      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n        totalSkipped +\u003d currSkipped;\n      }\n      return logMeta;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "Pair\u003cString,String\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5200. Enhanced \"yarn logs\" to be able to get a list of containers whose logs are aggregated via a \"show_container_log_info\" option. Contributed by Xuan Gong.\n",
          "commitDate": "13/07/16 10:54 AM",
          "commitName": "eb471632349deac4b62f8dec853c8ceb64c9617a",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/06/16 8:24 AM",
          "commitNameOld": "c35fa4a0e57b99415e284c7c2f3b1a0bebc610c2",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 26.1,
          "commitsBetweenForRepo": 296,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,16 @@\n-    public static String readContainerMetaDataAndSkipData(\n+    public static Pair\u003cString, String\u003e readContainerMetaDataAndSkipData(\n         DataInputStream valueStream, PrintStream out) throws IOException {\n \n       String fileType \u003d valueStream.readUTF();\n       String fileLengthStr \u003d valueStream.readUTF();\n       long fileLength \u003d Long.parseLong(fileLengthStr);\n-      if (out !\u003d null) {\n-        out.print(\"LogType:\");\n-        out.println(fileType);\n-        out.print(\"LogLength:\");\n-        out.println(fileLengthStr);\n-      }\n+      Pair\u003cString, String\u003e logMeta \u003d new Pair\u003cString, String\u003e(\n+          fileType, fileLengthStr);\n       long totalSkipped \u003d 0;\n       long currSkipped \u003d 0;\n       while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n         currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n         totalSkipped +\u003d currSkipped;\n       }\n-      return fileType;\n+      return logMeta;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Pair\u003cString, String\u003e readContainerMetaDataAndSkipData(\n        DataInputStream valueStream, PrintStream out) throws IOException {\n\n      String fileType \u003d valueStream.readUTF();\n      String fileLengthStr \u003d valueStream.readUTF();\n      long fileLength \u003d Long.parseLong(fileLengthStr);\n      Pair\u003cString, String\u003e logMeta \u003d new Pair\u003cString, String\u003e(\n          fileType, fileLengthStr);\n      long totalSkipped \u003d 0;\n      long currSkipped \u003d 0;\n      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n        totalSkipped +\u003d currSkipped;\n      }\n      return logMeta;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
          "extendedDetails": {}
        }
      ]
    },
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
      "commitDate": "26/05/16 11:49 PM",
      "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
          "commitDate": "26/05/16 11:49 PM",
          "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
          "commitAuthor": "Xuan",
          "commitDateOld": "25/05/16 10:25 AM",
          "commitNameOld": "e07519b8dbb96d73c48e910a4de12563c5c2f8aa",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 1.56,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-    public static void readContainerMetaDataAndSkipData(\n+    public static String readContainerMetaDataAndSkipData(\n         DataInputStream valueStream, PrintStream out) throws IOException {\n \n       String fileType \u003d valueStream.readUTF();\n       String fileLengthStr \u003d valueStream.readUTF();\n       long fileLength \u003d Long.parseLong(fileLengthStr);\n-      out.print(\"LogType:\");\n-      out.println(fileType);\n-      out.print(\"LogLength:\");\n-      out.println(fileLengthStr);\n-\n+      if (out !\u003d null) {\n+        out.print(\"LogType:\");\n+        out.println(fileType);\n+        out.print(\"LogLength:\");\n+        out.println(fileLengthStr);\n+      }\n       long totalSkipped \u003d 0;\n       long currSkipped \u003d 0;\n       while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n         currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n         totalSkipped +\u003d currSkipped;\n       }\n+      return fileType;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static String readContainerMetaDataAndSkipData(\n        DataInputStream valueStream, PrintStream out) throws IOException {\n\n      String fileType \u003d valueStream.readUTF();\n      String fileLengthStr \u003d valueStream.readUTF();\n      long fileLength \u003d Long.parseLong(fileLengthStr);\n      if (out !\u003d null) {\n        out.print(\"LogType:\");\n        out.println(fileType);\n        out.print(\"LogLength:\");\n        out.println(fileLengthStr);\n      }\n      long totalSkipped \u003d 0;\n      long currSkipped \u003d 0;\n      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n        totalSkipped +\u003d currSkipped;\n      }\n      return fileType;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "String"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
          "commitDate": "26/05/16 11:49 PM",
          "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
          "commitAuthor": "Xuan",
          "commitDateOld": "25/05/16 10:25 AM",
          "commitNameOld": "e07519b8dbb96d73c48e910a4de12563c5c2f8aa",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 1.56,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-    public static void readContainerMetaDataAndSkipData(\n+    public static String readContainerMetaDataAndSkipData(\n         DataInputStream valueStream, PrintStream out) throws IOException {\n \n       String fileType \u003d valueStream.readUTF();\n       String fileLengthStr \u003d valueStream.readUTF();\n       long fileLength \u003d Long.parseLong(fileLengthStr);\n-      out.print(\"LogType:\");\n-      out.println(fileType);\n-      out.print(\"LogLength:\");\n-      out.println(fileLengthStr);\n-\n+      if (out !\u003d null) {\n+        out.print(\"LogType:\");\n+        out.println(fileType);\n+        out.print(\"LogLength:\");\n+        out.println(fileLengthStr);\n+      }\n       long totalSkipped \u003d 0;\n       long currSkipped \u003d 0;\n       while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n         currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n         totalSkipped +\u003d currSkipped;\n       }\n+      return fileType;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static String readContainerMetaDataAndSkipData(\n        DataInputStream valueStream, PrintStream out) throws IOException {\n\n      String fileType \u003d valueStream.readUTF();\n      String fileLengthStr \u003d valueStream.readUTF();\n      long fileLength \u003d Long.parseLong(fileLengthStr);\n      if (out !\u003d null) {\n        out.print(\"LogType:\");\n        out.println(fileType);\n        out.print(\"LogLength:\");\n        out.println(fileLengthStr);\n      }\n      long totalSkipped \u003d 0;\n      long currSkipped \u003d 0;\n      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n        totalSkipped +\u003d currSkipped;\n      }\n      return fileType;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4905. Improved \"yarn logs\" command-line to optionally show log metadata also. Contributed by Xuan Gong.\n",
      "commitDate": "04/05/16 2:16 PM",
      "commitName": "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+    public static void readContainerMetaDataAndSkipData(\n+        DataInputStream valueStream, PrintStream out) throws IOException {\n+\n+      String fileType \u003d valueStream.readUTF();\n+      String fileLengthStr \u003d valueStream.readUTF();\n+      long fileLength \u003d Long.parseLong(fileLengthStr);\n+      out.print(\"LogType:\");\n+      out.println(fileType);\n+      out.print(\"LogLength:\");\n+      out.println(fileLengthStr);\n+\n+      long totalSkipped \u003d 0;\n+      long currSkipped \u003d 0;\n+      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n+        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n+        totalSkipped +\u003d currSkipped;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static void readContainerMetaDataAndSkipData(\n        DataInputStream valueStream, PrintStream out) throws IOException {\n\n      String fileType \u003d valueStream.readUTF();\n      String fileLengthStr \u003d valueStream.readUTF();\n      long fileLength \u003d Long.parseLong(fileLengthStr);\n      out.print(\"LogType:\");\n      out.println(fileType);\n      out.print(\"LogLength:\");\n      out.println(fileLengthStr);\n\n      long totalSkipped \u003d 0;\n      long currSkipped \u003d 0;\n      while (currSkipped !\u003d -1 \u0026\u0026 totalSkipped \u003c fileLength) {\n        currSkipped \u003d valueStream.skip(fileLength - totalSkipped);\n        totalSkipped +\u003d currSkipped;\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java"
    }
  }
}