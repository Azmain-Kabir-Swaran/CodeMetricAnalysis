{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceCommitRequest.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/ResourceCommitRequest.java",
  "functionStartLine": 150,
  "functionEndLine": 163,
  "numCommitsSeen": 1,
  "timeTaken": 1801,
  "changeHistory": [
    "de3b4aac561258ad242a3c5ed1c919428893fd4c"
  ],
  "changeHistoryShort": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,14 @@\n+  public String toString() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(\"New \" + getClass().getName() + \":\" + \"\\n\");\n+    if (null !\u003d containersToAllocate \u0026\u0026 !containersToAllocate.isEmpty()) {\n+      sb.append(\"\\t ALLOCATED\u003d\" + containersToAllocate.toString());\n+    }\n+    if (null !\u003d containersToReserve \u0026\u0026 !containersToReserve.isEmpty()) {\n+      sb.append(\"\\t RESERVED\u003d\" + containersToReserve.toString());\n+    }\n+    if (null !\u003d toReleaseContainers \u0026\u0026 !toReleaseContainers.isEmpty()) {\n+      sb.append(\"\\t RELEASED\u003d\" + toReleaseContainers.toString());\n+    }\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"New \" + getClass().getName() + \":\" + \"\\n\");\n    if (null !\u003d containersToAllocate \u0026\u0026 !containersToAllocate.isEmpty()) {\n      sb.append(\"\\t ALLOCATED\u003d\" + containersToAllocate.toString());\n    }\n    if (null !\u003d containersToReserve \u0026\u0026 !containersToReserve.isEmpty()) {\n      sb.append(\"\\t RESERVED\u003d\" + containersToReserve.toString());\n    }\n    if (null !\u003d toReleaseContainers \u0026\u0026 !toReleaseContainers.isEmpty()) {\n      sb.append(\"\\t RELEASED\u003d\" + toReleaseContainers.toString());\n    }\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/ResourceCommitRequest.java"
    }
  }
}