{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProportionalCapacityPreemptionPolicy.java",
  "functionName": "logToCSV",
  "functionId": "logToCSV___leafQueueNames-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
  "functionStartLine": 639,
  "functionEndLine": 652,
  "numCommitsSeen": 61,
  "timeTaken": 2457,
  "changeHistory": [
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
    "c6e29a9f069f71bd77fcff2111def4a60676b4ba",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51": "Ymultichange(Yparameterchange,Ybodychange)",
    "c6e29a9f069f71bd77fcff2111def4a60676b4ba": "Ybodychange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2498. Respect labels in preemption policy of capacity scheduler for inter-queue preemption. Contributed by Wangda Tan\n",
      "commitDate": "24/04/15 5:03 PM",
      "commitName": "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2498. Respect labels in preemption policy of capacity scheduler for inter-queue preemption. Contributed by Wangda Tan\n",
          "commitDate": "24/04/15 5:03 PM",
          "commitName": "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
          "commitAuthor": "Jian He",
          "commitDateOld": "20/04/15 5:12 PM",
          "commitNameOld": "44872b76fcc0ddfbc7b0a4e54eef50fe8708e0f5",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 3.99,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n-  private void logToCSV(List\u003cTempQueue\u003e unorderedqueues){\n-    List\u003cTempQueue\u003e queues \u003d new ArrayList\u003cTempQueue\u003e(unorderedqueues);\n-    Collections.sort(queues, new Comparator\u003cTempQueue\u003e(){\n-      @Override\n-      public int compare(TempQueue o1, TempQueue o2) {\n-        return o1.queueName.compareTo(o2.queueName);\n-      }});\n+  private void logToCSV(List\u003cString\u003e leafQueueNames){\n+    Collections.sort(leafQueueNames);\n     String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(queueState);\n-    for (TempQueue tq : queues) {\n+\n+    for (String queueName : leafQueueNames) {\n+      TempQueuePerPartition tq \u003d\n+          getQueueByPartition(queueName, RMNodeLabelsManager.NO_LABEL);\n       sb.append(\", \");\n       tq.appendLogString(sb);\n     }\n     LOG.debug(sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void logToCSV(List\u003cString\u003e leafQueueNames){\n    Collections.sort(leafQueueNames);\n    String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(queueState);\n\n    for (String queueName : leafQueueNames) {\n      TempQueuePerPartition tq \u003d\n          getQueueByPartition(queueName, RMNodeLabelsManager.NO_LABEL);\n      sb.append(\", \");\n      tq.appendLogString(sb);\n    }\n    LOG.debug(sb.toString());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
          "extendedDetails": {
            "oldValue": "[unorderedqueues-List\u003cTempQueue\u003e]",
            "newValue": "[leafQueueNames-List\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2498. Respect labels in preemption policy of capacity scheduler for inter-queue preemption. Contributed by Wangda Tan\n",
          "commitDate": "24/04/15 5:03 PM",
          "commitName": "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
          "commitAuthor": "Jian He",
          "commitDateOld": "20/04/15 5:12 PM",
          "commitNameOld": "44872b76fcc0ddfbc7b0a4e54eef50fe8708e0f5",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 3.99,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n-  private void logToCSV(List\u003cTempQueue\u003e unorderedqueues){\n-    List\u003cTempQueue\u003e queues \u003d new ArrayList\u003cTempQueue\u003e(unorderedqueues);\n-    Collections.sort(queues, new Comparator\u003cTempQueue\u003e(){\n-      @Override\n-      public int compare(TempQueue o1, TempQueue o2) {\n-        return o1.queueName.compareTo(o2.queueName);\n-      }});\n+  private void logToCSV(List\u003cString\u003e leafQueueNames){\n+    Collections.sort(leafQueueNames);\n     String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(queueState);\n-    for (TempQueue tq : queues) {\n+\n+    for (String queueName : leafQueueNames) {\n+      TempQueuePerPartition tq \u003d\n+          getQueueByPartition(queueName, RMNodeLabelsManager.NO_LABEL);\n       sb.append(\", \");\n       tq.appendLogString(sb);\n     }\n     LOG.debug(sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void logToCSV(List\u003cString\u003e leafQueueNames){\n    Collections.sort(leafQueueNames);\n    String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(queueState);\n\n    for (String queueName : leafQueueNames) {\n      TempQueuePerPartition tq \u003d\n          getQueueByPartition(queueName, RMNodeLabelsManager.NO_LABEL);\n      sb.append(\", \");\n      tq.appendLogString(sb);\n    }\n    LOG.debug(sb.toString());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "c6e29a9f069f71bd77fcff2111def4a60676b4ba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2125. Changed ProportionalCapacityPreemptionPolicy to log CSV in debug level. Contributed by Wangda Tan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 11:31 AM",
      "commitName": "c6e29a9f069f71bd77fcff2111def4a60676b4ba",
      "commitAuthor": "Jian He",
      "commitDateOld": "11/06/14 10:30 AM",
      "commitNameOld": "710a8693e57235d283e704c983722079c8fd6f38",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void logToCSV(List\u003cTempQueue\u003e unorderedqueues){\n     List\u003cTempQueue\u003e queues \u003d new ArrayList\u003cTempQueue\u003e(unorderedqueues);\n     Collections.sort(queues, new Comparator\u003cTempQueue\u003e(){\n       @Override\n       public int compare(TempQueue o1, TempQueue o2) {\n         return o1.queueName.compareTo(o2.queueName);\n       }});\n     String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(queueState);\n     for (TempQueue tq : queues) {\n       sb.append(\", \");\n       tq.appendLogString(sb);\n     }\n-    LOG.info(sb.toString());\n+    LOG.debug(sb.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logToCSV(List\u003cTempQueue\u003e unorderedqueues){\n    List\u003cTempQueue\u003e queues \u003d new ArrayList\u003cTempQueue\u003e(unorderedqueues);\n    Collections.sort(queues, new Comparator\u003cTempQueue\u003e(){\n      @Override\n      public int compare(TempQueue o1, TempQueue o2) {\n        return o1.queueName.compareTo(o2.queueName);\n      }});\n    String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(queueState);\n    for (TempQueue tq : queues) {\n      sb.append(\", \");\n      tq.appendLogString(sb);\n    }\n    LOG.debug(sb.toString());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,16 @@\n+  private void logToCSV(List\u003cTempQueue\u003e unorderedqueues){\n+    List\u003cTempQueue\u003e queues \u003d new ArrayList\u003cTempQueue\u003e(unorderedqueues);\n+    Collections.sort(queues, new Comparator\u003cTempQueue\u003e(){\n+      @Override\n+      public int compare(TempQueue o1, TempQueue o2) {\n+        return o1.queueName.compareTo(o2.queueName);\n+      }});\n+    String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(queueState);\n+    for (TempQueue tq : queues) {\n+      sb.append(\", \");\n+      tq.appendLogString(sb);\n+    }\n+    LOG.info(sb.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void logToCSV(List\u003cTempQueue\u003e unorderedqueues){\n    List\u003cTempQueue\u003e queues \u003d new ArrayList\u003cTempQueue\u003e(unorderedqueues);\n    Collections.sort(queues, new Comparator\u003cTempQueue\u003e(){\n      @Override\n      public int compare(TempQueue o1, TempQueue o2) {\n        return o1.queueName.compareTo(o2.queueName);\n      }});\n    String queueState \u003d \" QUEUESTATE: \" + clock.getTime();\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(queueState);\n    for (TempQueue tq : queues) {\n      sb.append(\", \");\n      tq.appendLogString(sb);\n    }\n    LOG.info(sb.toString());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java"
    }
  }
}