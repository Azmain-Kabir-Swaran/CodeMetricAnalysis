{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "stop",
  "functionId": "stop",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
  "functionStartLine": 1352,
  "functionEndLine": 1379,
  "numCommitsSeen": 159,
  "timeTaken": 5323,
  "changeHistory": [
    "9192f71e21847ad86bc9ff23847d8957dfe8ae58",
    "0edb0c51dc2c4ae2f353e260f01912e28033d70f",
    "9e96ac666d783376a8cdea9c3cc84098c5bdcb56",
    "8d2d3eb7bb938cc06ea3cc74040cfe0be13a2ba8",
    "fb6b38d67d8b997eca498fc5010b037e3081ace7",
    "a038ec6ceb3b02e5a82c99fb023ecf90865d5f69",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "9192f71e21847ad86bc9ff23847d8957dfe8ae58": "Ybodychange",
    "0edb0c51dc2c4ae2f353e260f01912e28033d70f": "Ybodychange",
    "9e96ac666d783376a8cdea9c3cc84098c5bdcb56": "Ybodychange",
    "8d2d3eb7bb938cc06ea3cc74040cfe0be13a2ba8": "Ybodychange",
    "fb6b38d67d8b997eca498fc5010b037e3081ace7": "Ybodychange",
    "a038ec6ceb3b02e5a82c99fb023ecf90865d5f69": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9192f71e21847ad86bc9ff23847d8957dfe8ae58": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16127. In ipc.Client, put a new connection could happen after stop.\n",
      "commitDate": "26/02/19 3:14 PM",
      "commitName": "9192f71e21847ad86bc9ff23847d8957dfe8ae58",
      "commitAuthor": "Tsz Wo Nicholas Sze",
      "commitDateOld": "25/02/19 1:15 PM",
      "commitNameOld": "0edb0c51dc2c4ae2f353e260f01912e28033d70f",
      "commitAuthorOld": "Tsz Wo Nicholas Sze",
      "daysBetweenCommits": 1.08,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public void stop() {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Stopping client\");\n     }\n-\n-    if (!running.compareAndSet(true, false)) {\n-      return;\n+    synchronized (putLock) { // synchronized to avoid put after stop\n+      if (!running.compareAndSet(true, false)) {\n+        return;\n+      }\n     }\n-    \n+\n     // wake up all connections\n     for (Connection conn : connections.values()) {\n       conn.interrupt();\n       conn.interruptConnectingThread();\n     }\n     \n     // wait until all connections are closed\n-    while (!connections.isEmpty()) {\n-      try {\n-        Thread.sleep(STOP_SLEEP_TIME_MS);\n-      } catch (InterruptedException e) {\n+    synchronized (emptyCondition) {\n+      // synchronized the loop to guarantee wait must be notified.\n+      while (!connections.isEmpty()) {\n+        try {\n+          emptyCondition.wait();\n+        } catch (InterruptedException e) {\n+        }\n       }\n     }\n-    \n     clientExcecutorFactory.unrefAndCleanup();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n    synchronized (putLock) { // synchronized to avoid put after stop\n      if (!running.compareAndSet(true, false)) {\n        return;\n      }\n    }\n\n    // wake up all connections\n    for (Connection conn : connections.values()) {\n      conn.interrupt();\n      conn.interruptConnectingThread();\n    }\n    \n    // wait until all connections are closed\n    synchronized (emptyCondition) {\n      // synchronized the loop to guarantee wait must be notified.\n      while (!connections.isEmpty()) {\n        try {\n          emptyCondition.wait();\n        } catch (InterruptedException e) {\n        }\n      }\n    }\n    clientExcecutorFactory.unrefAndCleanup();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "0edb0c51dc2c4ae2f353e260f01912e28033d70f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16126. ipc.Client.stop() may sleep too long to wait for all connections.\n",
      "commitDate": "25/02/19 1:15 PM",
      "commitName": "0edb0c51dc2c4ae2f353e260f01912e28033d70f",
      "commitAuthor": "Tsz Wo Nicholas Sze",
      "commitDateOld": "29/01/19 3:43 PM",
      "commitNameOld": "d1714c20e9309754397588c9b29818b9a74a80d8",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 26.9,
      "commitsBetweenForRepo": 216,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void stop() {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Stopping client\");\n     }\n \n     if (!running.compareAndSet(true, false)) {\n       return;\n     }\n     \n     // wake up all connections\n     for (Connection conn : connections.values()) {\n       conn.interrupt();\n       conn.interruptConnectingThread();\n     }\n     \n     // wait until all connections are closed\n     while (!connections.isEmpty()) {\n       try {\n-        Thread.sleep(100);\n+        Thread.sleep(STOP_SLEEP_TIME_MS);\n       } catch (InterruptedException e) {\n       }\n     }\n     \n     clientExcecutorFactory.unrefAndCleanup();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    for (Connection conn : connections.values()) {\n      conn.interrupt();\n      conn.interruptConnectingThread();\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(STOP_SLEEP_TIME_MS);\n      } catch (InterruptedException e) {\n      }\n    }\n    \n    clientExcecutorFactory.unrefAndCleanup();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "9e96ac666d783376a8cdea9c3cc84098c5bdcb56": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10219. ipc.Client.setupIOstreams() needs to check for ClientCache.stopClient requested shutdowns.\nContributed by Kihwal Lee and Lukas Majercak.\n",
      "commitDate": "04/09/18 8:46 AM",
      "commitName": "9e96ac666d783376a8cdea9c3cc84098c5bdcb56",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "01/08/18 12:32 PM",
      "commitNameOld": "f2e29acbfa0b7e1fcecbdcf3e791c96114b456a5",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 33.84,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public void stop() {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Stopping client\");\n     }\n \n     if (!running.compareAndSet(true, false)) {\n       return;\n     }\n     \n     // wake up all connections\n     for (Connection conn : connections.values()) {\n       conn.interrupt();\n+      conn.interruptConnectingThread();\n     }\n     \n     // wait until all connections are closed\n     while (!connections.isEmpty()) {\n       try {\n         Thread.sleep(100);\n       } catch (InterruptedException e) {\n       }\n     }\n     \n     clientExcecutorFactory.unrefAndCleanup();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    for (Connection conn : connections.values()) {\n      conn.interrupt();\n      conn.interruptConnectingThread();\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n    \n    clientExcecutorFactory.unrefAndCleanup();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "8d2d3eb7bb938cc06ea3cc74040cfe0be13a2ba8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12475. Replace guava Cache with ConcurrentHashMap for caching Connection in ipc Client (Walter Su via sjlee)\n",
      "commitDate": "15/10/15 11:43 AM",
      "commitName": "8d2d3eb7bb938cc06ea3cc74040cfe0be13a2ba8",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "28/09/15 7:42 AM",
      "commitNameOld": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 17.17,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void stop() {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Stopping client\");\n     }\n \n     if (!running.compareAndSet(true, false)) {\n       return;\n     }\n     \n     // wake up all connections\n-    for (Connection conn : connections.asMap().values()) {\n+    for (Connection conn : connections.values()) {\n       conn.interrupt();\n     }\n     \n     // wait until all connections are closed\n-    while (connections.size() \u003e 0) {\n+    while (!connections.isEmpty()) {\n       try {\n         Thread.sleep(100);\n       } catch (InterruptedException e) {\n       }\n     }\n     \n     clientExcecutorFactory.unrefAndCleanup();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    for (Connection conn : connections.values()) {\n      conn.interrupt();\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n    \n    clientExcecutorFactory.unrefAndCleanup();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "fb6b38d67d8b997eca498fc5010b037e3081ace7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11772. RPC Invoker relies on static ClientCache which has synchronized(this) blocks. Contributed by Haohui Mai.\n",
      "commitDate": "20/05/15 8:10 PM",
      "commitName": "fb6b38d67d8b997eca498fc5010b037e3081ace7",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/05/15 2:11 AM",
      "commitNameOld": "d4a2830b63f0819979b592f4ea6ea3abd5885b71",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   public void stop() {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Stopping client\");\n     }\n \n     if (!running.compareAndSet(true, false)) {\n       return;\n     }\n     \n     // wake up all connections\n-    synchronized (connections) {\n-      for (Connection conn : connections.values()) {\n-        conn.interrupt();\n-      }\n+    for (Connection conn : connections.asMap().values()) {\n+      conn.interrupt();\n     }\n     \n     // wait until all connections are closed\n-    while (!connections.isEmpty()) {\n+    while (connections.size() \u003e 0) {\n       try {\n         Thread.sleep(100);\n       } catch (InterruptedException e) {\n       }\n     }\n     \n     clientExcecutorFactory.unrefAndCleanup();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    for (Connection conn : connections.asMap().values()) {\n      conn.interrupt();\n    }\n    \n    // wait until all connections are closed\n    while (connections.size() \u003e 0) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n    \n    clientExcecutorFactory.unrefAndCleanup();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "a038ec6ceb3b02e5a82c99fb023ecf90865d5f69": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9703.  org.apache.hadoop.ipc.Client leaks threads on stop (Tsuyoshi OZAWA via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/13 2:36 PM",
      "commitName": "a038ec6ceb3b02e5a82c99fb023ecf90865d5f69",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "11/07/13 11:02 AM",
      "commitNameOld": "7f42befa70960b58d435d01a99df674a2ee56765",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.15,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   public void stop() {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Stopping client\");\n     }\n \n     if (!running.compareAndSet(true, false)) {\n       return;\n     }\n     \n     // wake up all connections\n     synchronized (connections) {\n       for (Connection conn : connections.values()) {\n         conn.interrupt();\n       }\n     }\n     \n     // wait until all connections are closed\n     while (!connections.isEmpty()) {\n       try {\n         Thread.sleep(100);\n       } catch (InterruptedException e) {\n       }\n     }\n+    \n+    clientExcecutorFactory.unrefAndCleanup();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    synchronized (connections) {\n      for (Connection conn : connections.values()) {\n        conn.interrupt();\n      }\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n    \n    clientExcecutorFactory.unrefAndCleanup();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    synchronized (connections) {\n      for (Connection conn : connections.values()) {\n        conn.interrupt();\n      }\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    synchronized (connections) {\n      for (Connection conn : connections.values()) {\n        conn.interrupt();\n      }\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    synchronized (connections) {\n      for (Connection conn : connections.values()) {\n        conn.interrupt();\n      }\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/Client.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/Client.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+  public void stop() {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Stopping client\");\n+    }\n+\n+    if (!running.compareAndSet(true, false)) {\n+      return;\n+    }\n+    \n+    // wake up all connections\n+    synchronized (connections) {\n+      for (Connection conn : connections.values()) {\n+        conn.interrupt();\n+      }\n+    }\n+    \n+    // wait until all connections are closed\n+    while (!connections.isEmpty()) {\n+      try {\n+        Thread.sleep(100);\n+      } catch (InterruptedException e) {\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Stopping client\");\n    }\n\n    if (!running.compareAndSet(true, false)) {\n      return;\n    }\n    \n    // wake up all connections\n    synchronized (connections) {\n      for (Connection conn : connections.values()) {\n        conn.interrupt();\n      }\n    }\n    \n    // wait until all connections are closed\n    while (!connections.isEmpty()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/ipc/Client.java"
    }
  }
}