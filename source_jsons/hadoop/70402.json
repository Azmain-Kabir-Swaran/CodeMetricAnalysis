{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "access",
  "functionId": "access___path-Path__mode-FsAction",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 3713,
  "functionEndLine": 3745,
  "numCommitsSeen": 66,
  "timeTaken": 1250,
  "changeHistory": [
    "9fcc3a1fc8cab873034f5c308ceb2d5671a954e8"
  ],
  "changeHistoryShort": {
    "9fcc3a1fc8cab873034f5c308ceb2d5671a954e8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fcc3a1fc8cab873034f5c308ceb2d5671a954e8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14935. Azure: POSIX permissions are taking effect in access() method even when authorization is enabled.\nContributed by Santhosh G Nayak\n",
      "commitDate": "16/10/17 8:01 AM",
      "commitName": "9fcc3a1fc8cab873034f5c308ceb2d5671a954e8",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,33 @@\n+  public void access(Path path, FsAction mode) throws IOException {\n+    if (azureAuthorization \u0026\u0026 authorizer !\u003d null) {\n+      try {\n+        // Required to check the existence of the path.\n+        getFileStatus(path);\n+        switch (mode) {\n+        case READ:\n+        case READ_EXECUTE:\n+          performAuthCheck(path, WasbAuthorizationOperations.READ, \"access\", path);\n+          break;\n+        case WRITE:\n+        case WRITE_EXECUTE:\n+          performAuthCheck(path, WasbAuthorizationOperations.WRITE, \"access\",\n+              path);\n+          break;\n+        case READ_WRITE:\n+        case ALL:\n+          performAuthCheck(path, WasbAuthorizationOperations.READ, \"access\", path);\n+          performAuthCheck(path, WasbAuthorizationOperations.WRITE, \"access\",\n+              path);\n+          break;\n+        case EXECUTE:\n+        case NONE:\n+        default:\n+          break;\n+        }\n+      } catch (WasbAuthorizationException wae){\n+        throw new AccessControlException(wae);\n+      }\n+    } else {\n+      super.access(path, mode);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void access(Path path, FsAction mode) throws IOException {\n    if (azureAuthorization \u0026\u0026 authorizer !\u003d null) {\n      try {\n        // Required to check the existence of the path.\n        getFileStatus(path);\n        switch (mode) {\n        case READ:\n        case READ_EXECUTE:\n          performAuthCheck(path, WasbAuthorizationOperations.READ, \"access\", path);\n          break;\n        case WRITE:\n        case WRITE_EXECUTE:\n          performAuthCheck(path, WasbAuthorizationOperations.WRITE, \"access\",\n              path);\n          break;\n        case READ_WRITE:\n        case ALL:\n          performAuthCheck(path, WasbAuthorizationOperations.READ, \"access\", path);\n          performAuthCheck(path, WasbAuthorizationOperations.WRITE, \"access\",\n              path);\n          break;\n        case EXECUTE:\n        case NONE:\n        default:\n          break;\n        }\n      } catch (WasbAuthorizationException wae){\n        throw new AccessControlException(wae);\n      }\n    } else {\n      super.access(path, mode);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}