{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HSAdmin.java",
  "functionName": "getGroups",
  "functionId": "getGroups___usernames-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java",
  "functionStartLine": 167,
  "functionEndLine": 196,
  "numCommitsSeen": 6,
  "timeTaken": 543,
  "changeHistory": [
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b"
  ],
  "changeHistoryShort": {
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5265. History server admin service to refresh user and superuser group mappings. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504645 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 1:41 PM",
      "commitName": "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,30 @@\n+  private int getGroups(String[] usernames) throws IOException {\n+    // Get groups users belongs to\n+    if (usernames.length \u003d\u003d 0) {\n+      usernames \u003d new String[] { UserGroupInformation.getCurrentUser()\n+          .getUserName() };\n+    }\n+\n+    // Get the current configuration\n+    Configuration conf \u003d getConf();\n+\n+    InetSocketAddress address \u003d conf.getSocketAddr(\n+        JHAdminConfig.JHS_ADMIN_ADDRESS,\n+        JHAdminConfig.DEFAULT_JHS_ADMIN_ADDRESS,\n+        JHAdminConfig.DEFAULT_JHS_ADMIN_PORT);\n+\n+    GetUserMappingsProtocol getUserMappingProtocol \u003d HSProxies.createProxy(\n+        conf, address, GetUserMappingsProtocol.class,\n+        UserGroupInformation.getCurrentUser());\n+    for (String username : usernames) {\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(username + \" :\");\n+      for (String group : getUserMappingProtocol.getGroupsForUser(username)) {\n+        sb.append(\" \");\n+        sb.append(group);\n+      }\n+      System.out.println(sb);\n+    }\n+\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getGroups(String[] usernames) throws IOException {\n    // Get groups users belongs to\n    if (usernames.length \u003d\u003d 0) {\n      usernames \u003d new String[] { UserGroupInformation.getCurrentUser()\n          .getUserName() };\n    }\n\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    InetSocketAddress address \u003d conf.getSocketAddr(\n        JHAdminConfig.JHS_ADMIN_ADDRESS,\n        JHAdminConfig.DEFAULT_JHS_ADMIN_ADDRESS,\n        JHAdminConfig.DEFAULT_JHS_ADMIN_PORT);\n\n    GetUserMappingsProtocol getUserMappingProtocol \u003d HSProxies.createProxy(\n        conf, address, GetUserMappingsProtocol.class,\n        UserGroupInformation.getCurrentUser());\n    for (String username : usernames) {\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(username + \" :\");\n      for (String group : getUserMappingProtocol.getGroupsForUser(username)) {\n        sb.append(\" \");\n        sb.append(group);\n      }\n      System.out.println(sb);\n    }\n\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java"
    }
  }
}