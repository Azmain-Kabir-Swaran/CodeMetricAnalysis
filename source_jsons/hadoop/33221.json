{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VEDeviceDiscoverer.java",
  "functionName": "toDevice",
  "functionId": "toDevice___p-Path__counter-MutableInt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nec/VEDeviceDiscoverer.java",
  "functionStartLine": 68,
  "functionEndLine": 101,
  "numCommitsSeen": 1,
  "timeTaken": 594,
  "changeHistory": [
    "062eb605ac9d8341e39bd6feca059be535c7d6c5"
  ],
  "changeHistoryShort": {
    "062eb605ac9d8341e39bd6feca059be535c7d6c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "062eb605ac9d8341e39bd6feca059be535c7d6c5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9477. Implement VE discovery using libudev. Contributed by Peter Bacsko.\n",
      "commitDate": "26/06/19 8:53 AM",
      "commitName": "062eb605ac9d8341e39bd6feca059be535c7d6c5",
      "commitAuthor": "Zhankun Tang",
      "diff": "@@ -0,0 +1,34 @@\n+  private Device toDevice(Path p, MutableInt counter) {\n+    CommandExecutor executor \u003d\n+        commandExecutorProvider.apply(\n+            new String[]{\"stat\", \"-L\", \"-c\", \"%t:%T:%F\", p.toString()});\n+\n+    try {\n+      LOG.info(\"Checking device file: {}\", p);\n+      executor.execute();\n+      String statOutput \u003d executor.getOutput();\n+      String[] stat \u003d statOutput.trim().split(\":\");\n+\n+      int major \u003d Integer.parseInt(stat[0], 16);\n+      int minor \u003d Integer.parseInt(stat[1], 16);\n+      char devType \u003d getDevType(p, stat[2]);\n+      int deviceNumber \u003d makeDev(major, minor);\n+      LOG.info(\"Device: major: {}, minor: {}, devNo: {}, type: {}\",\n+          major, minor, deviceNumber, devType);\n+      String sysPath \u003d udev.getSysPath(deviceNumber, devType);\n+      LOG.info(\"Device syspath: {}\", sysPath);\n+      String deviceState \u003d getDeviceState(sysPath);\n+\n+      Device.Builder builder \u003d Device.Builder.newInstance();\n+      builder.setId(counter.getAndIncrement())\n+        .setMajorNumber(major)\n+        .setMinorNumber(minor)\n+        .setHealthy(STATE_ONLINE.equalsIgnoreCase(deviceState))\n+        .setStatus(deviceState)\n+        .setDevPath(p.toAbsolutePath().toString());\n+\n+      return builder.build();\n+    } catch (IOException e) {\n+      throw new UncheckedIOException(\"Cannot execute stat command\", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Device toDevice(Path p, MutableInt counter) {\n    CommandExecutor executor \u003d\n        commandExecutorProvider.apply(\n            new String[]{\"stat\", \"-L\", \"-c\", \"%t:%T:%F\", p.toString()});\n\n    try {\n      LOG.info(\"Checking device file: {}\", p);\n      executor.execute();\n      String statOutput \u003d executor.getOutput();\n      String[] stat \u003d statOutput.trim().split(\":\");\n\n      int major \u003d Integer.parseInt(stat[0], 16);\n      int minor \u003d Integer.parseInt(stat[1], 16);\n      char devType \u003d getDevType(p, stat[2]);\n      int deviceNumber \u003d makeDev(major, minor);\n      LOG.info(\"Device: major: {}, minor: {}, devNo: {}, type: {}\",\n          major, minor, deviceNumber, devType);\n      String sysPath \u003d udev.getSysPath(deviceNumber, devType);\n      LOG.info(\"Device syspath: {}\", sysPath);\n      String deviceState \u003d getDeviceState(sysPath);\n\n      Device.Builder builder \u003d Device.Builder.newInstance();\n      builder.setId(counter.getAndIncrement())\n        .setMajorNumber(major)\n        .setMinorNumber(minor)\n        .setHealthy(STATE_ONLINE.equalsIgnoreCase(deviceState))\n        .setStatus(deviceState)\n        .setDevPath(p.toAbsolutePath().toString());\n\n      return builder.build();\n    } catch (IOException e) {\n      throw new UncheckedIOException(\"Cannot execute stat command\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nec/VEDeviceDiscoverer.java"
    }
  }
}