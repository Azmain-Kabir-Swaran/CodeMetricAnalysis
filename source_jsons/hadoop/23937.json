{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompletedTask.java",
  "functionName": "constructTaskReport",
  "functionId": "constructTaskReport",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTask.java",
  "functionStartLine": 120,
  "functionEndLine": 144,
  "numCommitsSeen": 7,
  "timeTaken": 1254,
  "changeHistory": [
    "d0e0ba8010b72f58ddede5303f2b88404263d4bf",
    "c63811790ac41e044de8b6e6f823c1d251303d1a",
    "b897d6c35a0036ab8b6a73f8dc76064f351b612d",
    "7475e836dc2bdd29142eaf210262fba354b745ed"
  ],
  "changeHistoryShort": {
    "d0e0ba8010b72f58ddede5303f2b88404263d4bf": "Ybodychange",
    "c63811790ac41e044de8b6e6f823c1d251303d1a": "Ybodychange",
    "b897d6c35a0036ab8b6a73f8dc76064f351b612d": "Ybodychange",
    "7475e836dc2bdd29142eaf210262fba354b745ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0e0ba8010b72f58ddede5303f2b88404263d4bf": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6394. Speed up Task processing loop in HsTasksBlock#render(). Contributed by Ray Chiang\n",
      "commitDate": "31/07/15 11:17 AM",
      "commitName": "d0e0ba8010b72f58ddede5303f2b88404263d4bf",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "17/10/12 7:58 AM",
      "commitNameOld": "c63811790ac41e044de8b6e6f823c1d251303d1a",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 1017.14,
      "commitsBetweenForRepo": 7244,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private void constructTaskReport() {\n     loadAllTaskAttempts();\n     this.report \u003d Records.newRecord(TaskReport.class);\n     report.setTaskId(taskId);\n     long minLaunchTime \u003d Long.MAX_VALUE;\n     for(TaskAttempt attempt: attempts.values()) {\n       minLaunchTime \u003d Math.min(minLaunchTime, attempt.getLaunchTime());\n     }\n     minLaunchTime \u003d minLaunchTime \u003d\u003d Long.MAX_VALUE ? -1 : minLaunchTime;\n     report.setStartTime(minLaunchTime);\n     report.setFinishTime(taskInfo.getFinishTime());\n     report.setTaskState(getState());\n     report.setProgress(getProgress());\n     Counters counters \u003d getCounters();\n     if (counters \u003d\u003d null) {\n       counters \u003d EMPTY_COUNTERS;\n     }\n-    report.setCounters(TypeConverter.toYarn(counters));\n+    report.setRawCounters(counters);\n     if (successfulAttempt !\u003d null) {\n       report.setSuccessfulAttempt(successfulAttempt);\n     }\n     report.addAllDiagnostics(reportDiagnostics);\n     report\n         .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructTaskReport() {\n    loadAllTaskAttempts();\n    this.report \u003d Records.newRecord(TaskReport.class);\n    report.setTaskId(taskId);\n    long minLaunchTime \u003d Long.MAX_VALUE;\n    for(TaskAttempt attempt: attempts.values()) {\n      minLaunchTime \u003d Math.min(minLaunchTime, attempt.getLaunchTime());\n    }\n    minLaunchTime \u003d minLaunchTime \u003d\u003d Long.MAX_VALUE ? -1 : minLaunchTime;\n    report.setStartTime(minLaunchTime);\n    report.setFinishTime(taskInfo.getFinishTime());\n    report.setTaskState(getState());\n    report.setProgress(getProgress());\n    Counters counters \u003d getCounters();\n    if (counters \u003d\u003d null) {\n      counters \u003d EMPTY_COUNTERS;\n    }\n    report.setRawCounters(counters);\n    if (successfulAttempt !\u003d null) {\n      report.setSuccessfulAttempt(successfulAttempt);\n    }\n    report.addAllDiagnostics(reportDiagnostics);\n    report\n        .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTask.java",
      "extendedDetails": {}
    },
    "c63811790ac41e044de8b6e6f823c1d251303d1a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4721. Task startup time in JHS is same as job startup time. (Ravi Prakash via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1399289 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/10/12 7:58 AM",
      "commitName": "c63811790ac41e044de8b6e6f823c1d251303d1a",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "28/09/12 3:17 PM",
      "commitNameOld": "b897d6c35a0036ab8b6a73f8dc76064f351b612d",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 18.69,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   private void constructTaskReport() {\n     loadAllTaskAttempts();\n     this.report \u003d Records.newRecord(TaskReport.class);\n     report.setTaskId(taskId);\n-    report.setStartTime(taskInfo.getStartTime());\n+    long minLaunchTime \u003d Long.MAX_VALUE;\n+    for(TaskAttempt attempt: attempts.values()) {\n+      minLaunchTime \u003d Math.min(minLaunchTime, attempt.getLaunchTime());\n+    }\n+    minLaunchTime \u003d minLaunchTime \u003d\u003d Long.MAX_VALUE ? -1 : minLaunchTime;\n+    report.setStartTime(minLaunchTime);\n     report.setFinishTime(taskInfo.getFinishTime());\n     report.setTaskState(getState());\n     report.setProgress(getProgress());\n     Counters counters \u003d getCounters();\n     if (counters \u003d\u003d null) {\n       counters \u003d EMPTY_COUNTERS;\n     }\n     report.setCounters(TypeConverter.toYarn(counters));\n     if (successfulAttempt !\u003d null) {\n       report.setSuccessfulAttempt(successfulAttempt);\n     }\n     report.addAllDiagnostics(reportDiagnostics);\n     report\n         .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructTaskReport() {\n    loadAllTaskAttempts();\n    this.report \u003d Records.newRecord(TaskReport.class);\n    report.setTaskId(taskId);\n    long minLaunchTime \u003d Long.MAX_VALUE;\n    for(TaskAttempt attempt: attempts.values()) {\n      minLaunchTime \u003d Math.min(minLaunchTime, attempt.getLaunchTime());\n    }\n    minLaunchTime \u003d minLaunchTime \u003d\u003d Long.MAX_VALUE ? -1 : minLaunchTime;\n    report.setStartTime(minLaunchTime);\n    report.setFinishTime(taskInfo.getFinishTime());\n    report.setTaskState(getState());\n    report.setProgress(getProgress());\n    Counters counters \u003d getCounters();\n    if (counters \u003d\u003d null) {\n      counters \u003d EMPTY_COUNTERS;\n    }\n    report.setCounters(TypeConverter.toYarn(counters));\n    if (successfulAttempt !\u003d null) {\n      report.setSuccessfulAttempt(successfulAttempt);\n    }\n    report.addAllDiagnostics(reportDiagnostics);\n    report\n        .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTask.java",
      "extendedDetails": {}
    },
    "b897d6c35a0036ab8b6a73f8dc76064f351b612d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4689. JobClient.getMapTaskReports on failed job results in NPE (jlowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391679 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/12 3:17 PM",
      "commitName": "b897d6c35a0036ab8b6a73f8dc76064f351b612d",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "27/02/12 4:32 PM",
      "commitNameOld": "7475e836dc2bdd29142eaf210262fba354b745ed",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 213.91,
      "commitsBetweenForRepo": 1294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,20 @@\n   private void constructTaskReport() {\n     loadAllTaskAttempts();\n     this.report \u003d Records.newRecord(TaskReport.class);\n     report.setTaskId(taskId);\n     report.setStartTime(taskInfo.getStartTime());\n     report.setFinishTime(taskInfo.getFinishTime());\n     report.setTaskState(getState());\n     report.setProgress(getProgress());\n-    report.setCounters(TypeConverter.toYarn(getCounters()));\n+    Counters counters \u003d getCounters();\n+    if (counters \u003d\u003d null) {\n+      counters \u003d EMPTY_COUNTERS;\n+    }\n+    report.setCounters(TypeConverter.toYarn(counters));\n     if (successfulAttempt !\u003d null) {\n       report.setSuccessfulAttempt(successfulAttempt);\n     }\n     report.addAllDiagnostics(reportDiagnostics);\n     report\n         .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructTaskReport() {\n    loadAllTaskAttempts();\n    this.report \u003d Records.newRecord(TaskReport.class);\n    report.setTaskId(taskId);\n    report.setStartTime(taskInfo.getStartTime());\n    report.setFinishTime(taskInfo.getFinishTime());\n    report.setTaskState(getState());\n    report.setProgress(getProgress());\n    Counters counters \u003d getCounters();\n    if (counters \u003d\u003d null) {\n      counters \u003d EMPTY_COUNTERS;\n    }\n    report.setCounters(TypeConverter.toYarn(counters));\n    if (successfulAttempt !\u003d null) {\n      report.setSuccessfulAttempt(successfulAttempt);\n    }\n    report.addAllDiagnostics(reportDiagnostics);\n    report\n        .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTask.java",
      "extendedDetails": {}
    },
    "7475e836dc2bdd29142eaf210262fba354b745ed": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3901. Modified JobHistory records in YARN to lazily load job and task reports so as to improve UI response times. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294417 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/12 4:32 PM",
      "commitName": "7475e836dc2bdd29142eaf210262fba354b745ed",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  private void constructTaskReport() {\n+    loadAllTaskAttempts();\n+    this.report \u003d Records.newRecord(TaskReport.class);\n+    report.setTaskId(taskId);\n+    report.setStartTime(taskInfo.getStartTime());\n+    report.setFinishTime(taskInfo.getFinishTime());\n+    report.setTaskState(getState());\n+    report.setProgress(getProgress());\n+    report.setCounters(TypeConverter.toYarn(getCounters()));\n+    if (successfulAttempt !\u003d null) {\n+      report.setSuccessfulAttempt(successfulAttempt);\n+    }\n+    report.addAllDiagnostics(reportDiagnostics);\n+    report\n+        .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructTaskReport() {\n    loadAllTaskAttempts();\n    this.report \u003d Records.newRecord(TaskReport.class);\n    report.setTaskId(taskId);\n    report.setStartTime(taskInfo.getStartTime());\n    report.setFinishTime(taskInfo.getFinishTime());\n    report.setTaskState(getState());\n    report.setProgress(getProgress());\n    report.setCounters(TypeConverter.toYarn(getCounters()));\n    if (successfulAttempt !\u003d null) {\n      report.setSuccessfulAttempt(successfulAttempt);\n    }\n    report.addAllDiagnostics(reportDiagnostics);\n    report\n        .addAllRunningAttempts(new ArrayList\u003cTaskAttemptId\u003e(attempts.keySet()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTask.java"
    }
  }
}