{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtilClient.java",
  "functionName": "getNNAddress",
  "functionId": "getNNAddress___filesystemURI-URI",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
  "functionStartLine": 778,
  "functionEndLine": 793,
  "numCommitsSeen": 215,
  "timeTaken": 7741,
  "changeHistory": [
    "9eee97508f350ed4629abb04e7781514ffa04070",
    "8b4f497af85b49519da2e05e8269db6c4e9d621f",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
    "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9eee97508f350ed4629abb04e7781514ffa04070": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
    "8b4f497af85b49519da2e05e8269db6c4e9d621f": "Ymodifierchange",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": "Ybodychange",
    "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9eee97508f350ed4629abb04e7781514ffa04070": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
      "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "17/09/15 2:18 PM",
      "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "17/09/15 2:18 PM",
          "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/09/15 11:17 AM",
          "commitNameOld": "3f82f582e51c514cc0f052c828c2f58c6e8927ad",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static InetSocketAddress getAddress(URI filesystemURI) {\n+  public static InetSocketAddress getNNAddress(URI filesystemURI) {\n     String authority \u003d filesystemURI.getAuthority();\n     if (authority \u003d\u003d null) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n     }\n     if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n         filesystemURI.getScheme())) {\n       throw new IllegalArgumentException(String.format(\n-          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n-          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n-          HdfsConstants.HDFS_URI_SCHEME));\n+          \"Invalid URI for NameNode address (check %s): \" +\n+          \"%s is not of scheme \u0027%s\u0027.\", FileSystem.FS_DEFAULT_NAME_KEY,\n+          filesystemURI.toString(), HdfsConstants.HDFS_URI_SCHEME));\n     }\n-    return getAddress(authority);\n+    return getNNAddress(authority);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static InetSocketAddress getNNAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): \" +\n          \"%s is not of scheme \u0027%s\u0027.\", FileSystem.FS_DEFAULT_NAME_KEY,\n          filesystemURI.toString(), HdfsConstants.HDFS_URI_SCHEME));\n    }\n    return getNNAddress(authority);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
            "oldMethodName": "getAddress",
            "newMethodName": "getNNAddress"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "17/09/15 2:18 PM",
          "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/09/15 11:17 AM",
          "commitNameOld": "3f82f582e51c514cc0f052c828c2f58c6e8927ad",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static InetSocketAddress getAddress(URI filesystemURI) {\n+  public static InetSocketAddress getNNAddress(URI filesystemURI) {\n     String authority \u003d filesystemURI.getAuthority();\n     if (authority \u003d\u003d null) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n     }\n     if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n         filesystemURI.getScheme())) {\n       throw new IllegalArgumentException(String.format(\n-          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n-          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n-          HdfsConstants.HDFS_URI_SCHEME));\n+          \"Invalid URI for NameNode address (check %s): \" +\n+          \"%s is not of scheme \u0027%s\u0027.\", FileSystem.FS_DEFAULT_NAME_KEY,\n+          filesystemURI.toString(), HdfsConstants.HDFS_URI_SCHEME));\n     }\n-    return getAddress(authority);\n+    return getNNAddress(authority);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static InetSocketAddress getNNAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): \" +\n          \"%s is not of scheme \u0027%s\u0027.\", FileSystem.FS_DEFAULT_NAME_KEY,\n          filesystemURI.toString(), HdfsConstants.HDFS_URI_SCHEME));\n    }\n    return getNNAddress(authority);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "17/09/15 2:18 PM",
          "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/09/15 11:17 AM",
          "commitNameOld": "3f82f582e51c514cc0f052c828c2f58c6e8927ad",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static InetSocketAddress getAddress(URI filesystemURI) {\n+  public static InetSocketAddress getNNAddress(URI filesystemURI) {\n     String authority \u003d filesystemURI.getAuthority();\n     if (authority \u003d\u003d null) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n     }\n     if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n         filesystemURI.getScheme())) {\n       throw new IllegalArgumentException(String.format(\n-          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n-          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n-          HdfsConstants.HDFS_URI_SCHEME));\n+          \"Invalid URI for NameNode address (check %s): \" +\n+          \"%s is not of scheme \u0027%s\u0027.\", FileSystem.FS_DEFAULT_NAME_KEY,\n+          filesystemURI.toString(), HdfsConstants.HDFS_URI_SCHEME));\n     }\n-    return getAddress(authority);\n+    return getNNAddress(authority);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static InetSocketAddress getNNAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): \" +\n          \"%s is not of scheme \u0027%s\u0027.\", FileSystem.FS_DEFAULT_NAME_KEY,\n          filesystemURI.toString(), HdfsConstants.HDFS_URI_SCHEME));\n    }\n    return getNNAddress(authority);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {
            "oldValue": "getAddress",
            "newValue": "getNNAddress"
          }
        }
      ]
    },
    "8b4f497af85b49519da2e05e8269db6c4e9d621f": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-1973. HA: HDFS clients must handle namenode failover and switch over to the new active namenode. (atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1179896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/10/11 4:26 PM",
      "commitName": "8b4f497af85b49519da2e05e8269db6c4e9d621f",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "28/09/11 5:42 PM",
      "commitNameOld": "ab0402bc1def44e3d52eea517f4132c460bd5f87",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  static InetSocketAddress getAddress(URI filesystemURI) {\n+  public static InetSocketAddress getAddress(URI filesystemURI) {\n     String authority \u003d filesystemURI.getAuthority();\n     if (authority \u003d\u003d null) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n     }\n     if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n         filesystemURI.getScheme())) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n           HdfsConstants.HDFS_URI_SCHEME));\n     }\n     return getAddress(authority);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress getAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n          HdfsConstants.HDFS_URI_SCHEME));\n    }\n    return getAddress(authority);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1620. Rename HdfsConstants -\u003e HdfsServerConstants, FSConstants -\u003e HdfsConstants. (Harsh J Chouraria via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/11 12:30 PM",
      "commitName": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "29/08/11 9:02 PM",
      "commitNameOld": "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.64,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   static InetSocketAddress getAddress(URI filesystemURI) {\n     String authority \u003d filesystemURI.getAuthority();\n     if (authority \u003d\u003d null) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n     }\n-    if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n+    if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n         filesystemURI.getScheme())) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n-          FSConstants.HDFS_URI_SCHEME));\n+          HdfsConstants.HDFS_URI_SCHEME));\n     }\n     return getAddress(authority);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static InetSocketAddress getAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n          HdfsConstants.HDFS_URI_SCHEME));\n    }\n    return getAddress(authority);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-1217.  Change some NameNode methods from public to package private.  Constributed by Laxman\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163081 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/08/11 9:02 PM",
      "commitName": "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/08/11 9:46 PM",
      "commitNameOld": "73451ed2d9fb5eb228d80ad5f3be302a60496527",
      "commitAuthorOld": "Hairong Kuang",
      "daysBetweenCommits": 3.97,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  public static InetSocketAddress getAddress(URI filesystemURI) {\n+  static InetSocketAddress getAddress(URI filesystemURI) {\n     String authority \u003d filesystemURI.getAuthority();\n     if (authority \u003d\u003d null) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n     }\n     if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n         filesystemURI.getScheme())) {\n       throw new IllegalArgumentException(String.format(\n           \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n           FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n           FSConstants.HDFS_URI_SCHEME));\n     }\n     return getAddress(authority);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static InetSocketAddress getAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n          FSConstants.HDFS_URI_SCHEME));\n    }\n    return getAddress(authority);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldValue": "[public, static]",
        "newValue": "[static]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static InetSocketAddress getAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n          FSConstants.HDFS_URI_SCHEME));\n    }\n    return getAddress(authority);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static InetSocketAddress getAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n          FSConstants.HDFS_URI_SCHEME));\n    }\n    return getAddress(authority);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+  public static InetSocketAddress getAddress(URI filesystemURI) {\n+    String authority \u003d filesystemURI.getAuthority();\n+    if (authority \u003d\u003d null) {\n+      throw new IllegalArgumentException(String.format(\n+          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n+          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n+    }\n+    if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n+        filesystemURI.getScheme())) {\n+      throw new IllegalArgumentException(String.format(\n+          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n+          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n+          FSConstants.HDFS_URI_SCHEME));\n+    }\n+    return getAddress(authority);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress getAddress(URI filesystemURI) {\n    String authority \u003d filesystemURI.getAuthority();\n    if (authority \u003d\u003d null) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s has no authority.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString()));\n    }\n    if (!FSConstants.HDFS_URI_SCHEME.equalsIgnoreCase(\n        filesystemURI.getScheme())) {\n      throw new IllegalArgumentException(String.format(\n          \"Invalid URI for NameNode address (check %s): %s is not of scheme \u0027%s\u0027.\",\n          FileSystem.FS_DEFAULT_NAME_KEY, filesystemURI.toString(),\n          FSConstants.HDFS_URI_SCHEME));\n    }\n    return getAddress(authority);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
    }
  }
}