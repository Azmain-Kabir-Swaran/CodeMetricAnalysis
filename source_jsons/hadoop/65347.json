{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileStatus.java",
  "functionName": "fromFileStatus",
  "functionId": "fromFileStatus___source-FileStatus__isEmptyDirectory-Tristate__eTag-String__versionId-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileStatus.java",
  "functionStartLine": 137,
  "functionEndLine": 147,
  "numCommitsSeen": 19,
  "timeTaken": 3188,
  "changeHistory": [
    "a36274d69947648dbe82721220cc5240ec5d396d",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "a36274d69947648dbe82721220cc5240ec5d396d": "Ymultichange(Yparameterchange,Ybodychange)",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "03/04/19 1:23 PM",
          "commitNameOld": "366186d9990ef9059b6ac9a19ad24310d6f36d04",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 46.05,
          "commitsBetweenForRepo": 252,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n   public static S3AFileStatus fromFileStatus(FileStatus source,\n-      Tristate isEmptyDirectory) {\n+      Tristate isEmptyDirectory, String eTag, String versionId) {\n     if (source.isDirectory()) {\n       return new S3AFileStatus(isEmptyDirectory, source.getPath(),\n           source.getOwner());\n     } else {\n       return new S3AFileStatus(source.getLen(), source.getModificationTime(),\n-          source.getPath(), source.getBlockSize(), source.getOwner());\n+          source.getPath(), source.getBlockSize(), source.getOwner(),\n+          eTag, versionId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static S3AFileStatus fromFileStatus(FileStatus source,\n      Tristate isEmptyDirectory, String eTag, String versionId) {\n    if (source.isDirectory()) {\n      return new S3AFileStatus(isEmptyDirectory, source.getPath(),\n          source.getOwner());\n    } else {\n      return new S3AFileStatus(source.getLen(), source.getModificationTime(),\n          source.getPath(), source.getBlockSize(), source.getOwner(),\n          eTag, versionId);\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileStatus.java",
          "extendedDetails": {
            "oldValue": "[source-FileStatus, isEmptyDirectory-Tristate]",
            "newValue": "[source-FileStatus, isEmptyDirectory-Tristate, eTag-String, versionId-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "03/04/19 1:23 PM",
          "commitNameOld": "366186d9990ef9059b6ac9a19ad24310d6f36d04",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 46.05,
          "commitsBetweenForRepo": 252,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n   public static S3AFileStatus fromFileStatus(FileStatus source,\n-      Tristate isEmptyDirectory) {\n+      Tristate isEmptyDirectory, String eTag, String versionId) {\n     if (source.isDirectory()) {\n       return new S3AFileStatus(isEmptyDirectory, source.getPath(),\n           source.getOwner());\n     } else {\n       return new S3AFileStatus(source.getLen(), source.getModificationTime(),\n-          source.getPath(), source.getBlockSize(), source.getOwner());\n+          source.getPath(), source.getBlockSize(), source.getOwner(),\n+          eTag, versionId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static S3AFileStatus fromFileStatus(FileStatus source,\n      Tristate isEmptyDirectory, String eTag, String versionId) {\n    if (source.isDirectory()) {\n      return new S3AFileStatus(isEmptyDirectory, source.getPath(),\n          source.getOwner());\n    } else {\n      return new S3AFileStatus(source.getLen(), source.getModificationTime(),\n          source.getPath(), source.getBlockSize(), source.getOwner(),\n          eTag, versionId);\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,10 @@\n+  public static S3AFileStatus fromFileStatus(FileStatus source,\n+      Tristate isEmptyDirectory) {\n+    if (source.isDirectory()) {\n+      return new S3AFileStatus(isEmptyDirectory, source.getPath(),\n+          source.getOwner());\n+    } else {\n+      return new S3AFileStatus(source.getLen(), source.getModificationTime(),\n+          source.getPath(), source.getBlockSize(), source.getOwner());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static S3AFileStatus fromFileStatus(FileStatus source,\n      Tristate isEmptyDirectory) {\n    if (source.isDirectory()) {\n      return new S3AFileStatus(isEmptyDirectory, source.getPath(),\n          source.getOwner());\n    } else {\n      return new S3AFileStatus(source.getLen(), source.getModificationTime(),\n          source.getPath(), source.getBlockSize(), source.getOwner());\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileStatus.java"
    }
  }
}