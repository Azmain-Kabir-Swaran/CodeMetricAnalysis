{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OverrideRecordReader.java",
  "functionName": "fillJoinCollector",
  "functionId": "fillJoinCollector___iterkey-K",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java",
  "functionStartLine": 66,
  "functionEndLine": 95,
  "numCommitsSeen": 4,
  "timeTaken": 4130,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void fillJoinCollector(K iterkey) throws IOException {\n    final PriorityQueue\u003cComposableRecordReader\u003cK,?\u003e\u003e q \u003d getRecordReaderQueue();\n    if (!q.isEmpty()) {\n      int highpos \u003d -1;\n      ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e list \u003d\n        new ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e(kids.length);\n      q.peek().key(iterkey);\n      final WritableComparator cmp \u003d getComparator();\n      while (0 \u003d\u003d cmp.compare(q.peek().key(), iterkey)) {\n        ComposableRecordReader\u003cK,?\u003e t \u003d q.poll();\n        if (-1 \u003d\u003d highpos || list.get(highpos).id() \u003c t.id()) {\n          highpos \u003d list.size();\n        }\n        list.add(t);\n        if (q.isEmpty())\n          break;\n      }\n      ComposableRecordReader\u003cK,?\u003e t \u003d list.remove(highpos);\n      t.accept(jc, iterkey);\n      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n        rr.skip(iterkey);\n      }\n      list.add(t);\n      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n        if (rr.hasNext()) {\n          q.add(rr);\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void fillJoinCollector(K iterkey) throws IOException {\n    final PriorityQueue\u003cComposableRecordReader\u003cK,?\u003e\u003e q \u003d getRecordReaderQueue();\n    if (!q.isEmpty()) {\n      int highpos \u003d -1;\n      ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e list \u003d\n        new ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e(kids.length);\n      q.peek().key(iterkey);\n      final WritableComparator cmp \u003d getComparator();\n      while (0 \u003d\u003d cmp.compare(q.peek().key(), iterkey)) {\n        ComposableRecordReader\u003cK,?\u003e t \u003d q.poll();\n        if (-1 \u003d\u003d highpos || list.get(highpos).id() \u003c t.id()) {\n          highpos \u003d list.size();\n        }\n        list.add(t);\n        if (q.isEmpty())\n          break;\n      }\n      ComposableRecordReader\u003cK,?\u003e t \u003d list.remove(highpos);\n      t.accept(jc, iterkey);\n      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n        rr.skip(iterkey);\n      }\n      list.add(t);\n      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n        if (rr.hasNext()) {\n          q.add(rr);\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,30 @@\n+  protected void fillJoinCollector(K iterkey) throws IOException {\n+    final PriorityQueue\u003cComposableRecordReader\u003cK,?\u003e\u003e q \u003d getRecordReaderQueue();\n+    if (!q.isEmpty()) {\n+      int highpos \u003d -1;\n+      ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e list \u003d\n+        new ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e(kids.length);\n+      q.peek().key(iterkey);\n+      final WritableComparator cmp \u003d getComparator();\n+      while (0 \u003d\u003d cmp.compare(q.peek().key(), iterkey)) {\n+        ComposableRecordReader\u003cK,?\u003e t \u003d q.poll();\n+        if (-1 \u003d\u003d highpos || list.get(highpos).id() \u003c t.id()) {\n+          highpos \u003d list.size();\n+        }\n+        list.add(t);\n+        if (q.isEmpty())\n+          break;\n+      }\n+      ComposableRecordReader\u003cK,?\u003e t \u003d list.remove(highpos);\n+      t.accept(jc, iterkey);\n+      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n+        rr.skip(iterkey);\n+      }\n+      list.add(t);\n+      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n+        if (rr.hasNext()) {\n+          q.add(rr);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void fillJoinCollector(K iterkey) throws IOException {\n    final PriorityQueue\u003cComposableRecordReader\u003cK,?\u003e\u003e q \u003d getRecordReaderQueue();\n    if (!q.isEmpty()) {\n      int highpos \u003d -1;\n      ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e list \u003d\n        new ArrayList\u003cComposableRecordReader\u003cK,?\u003e\u003e(kids.length);\n      q.peek().key(iterkey);\n      final WritableComparator cmp \u003d getComparator();\n      while (0 \u003d\u003d cmp.compare(q.peek().key(), iterkey)) {\n        ComposableRecordReader\u003cK,?\u003e t \u003d q.poll();\n        if (-1 \u003d\u003d highpos || list.get(highpos).id() \u003c t.id()) {\n          highpos \u003d list.size();\n        }\n        list.add(t);\n        if (q.isEmpty())\n          break;\n      }\n      ComposableRecordReader\u003cK,?\u003e t \u003d list.remove(highpos);\n      t.accept(jc, iterkey);\n      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n        rr.skip(iterkey);\n      }\n      list.add(t);\n      for (ComposableRecordReader\u003cK,?\u003e rr : list) {\n        if (rr.hasNext()) {\n          q.add(rr);\n        }\n      }\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/join/OverrideRecordReader.java"
    }
  }
}