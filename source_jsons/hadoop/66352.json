{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSchedulerMetrics.java",
  "functionName": "getVirtualCores",
  "functionId": "getVirtualCores___schedulable-Schedulable__metric-Metric",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java",
  "functionStartLine": 93,
  "functionEndLine": 112,
  "numCommitsSeen": 7,
  "timeTaken": 1430,
  "changeHistory": [
    "cc938e99ec0904824c8072184eff75619fcaf040"
  ],
  "changeHistoryShort": {
    "cc938e99ec0904824c8072184eff75619fcaf040": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc938e99ec0904824c8072184eff75619fcaf040": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6326. Shouldn\u0027t use AppAttemptIds to fetch applications while AM Simulator tracks app in SLS (yufeigu via rkanter)\n",
      "commitDate": "21/03/17 3:21 PM",
      "commitName": "cc938e99ec0904824c8072184eff75619fcaf040",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,20 @@\n+  private int getVirtualCores(Schedulable schedulable, Metric metric) {\n+    if (schedulable !\u003d null) {\n+      switch (metric) {\n+      case DEMAND:\n+        return schedulable.getDemand().getVirtualCores();\n+      case USAGE:\n+        return schedulable.getResourceUsage().getVirtualCores();\n+      case MINSHARE:\n+        return schedulable.getMinShare().getVirtualCores();\n+      case MAXSHARE:\n+        return schedulable.getMaxShare().getVirtualCores();\n+      case FAIRSHARE:\n+        return schedulable.getFairShare().getVirtualCores();\n+      default:\n+        return 0;\n+      }\n+    }\n+\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getVirtualCores(Schedulable schedulable, Metric metric) {\n    if (schedulable !\u003d null) {\n      switch (metric) {\n      case DEMAND:\n        return schedulable.getDemand().getVirtualCores();\n      case USAGE:\n        return schedulable.getResourceUsage().getVirtualCores();\n      case MINSHARE:\n        return schedulable.getMinShare().getVirtualCores();\n      case MAXSHARE:\n        return schedulable.getMaxShare().getVirtualCores();\n      case FAIRSHARE:\n        return schedulable.getFairShare().getVirtualCores();\n      default:\n        return 0;\n      }\n    }\n\n    return 0;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java"
    }
  }
}