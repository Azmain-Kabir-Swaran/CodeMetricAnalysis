{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DumpS3GuardDynamoTable.java",
  "functionName": "row",
  "functionId": "row___quotes-long__columns-Object",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DumpS3GuardDynamoTable.java",
  "functionStartLine": 685,
  "functionEndLine": 705,
  "numCommitsSeen": 2,
  "timeTaken": 1125,
  "changeHistory": [
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0"
  ],
  "changeHistoryShort": {
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16384: S3A: Avoid inconsistencies between DDB and S3.\n\nContributed by Steve Loughran\n\nContains\n\n- HADOOP-16397. Hadoop S3Guard Prune command to support a -tombstone option.\n- HADOOP-16406. ITestDynamoDBMetadataStore.testProvisionTable times out intermittently\n\nThis patch doesn\u0027t fix the underlying problem but it\n\n* changes some tests to clean up better\n* does a lot more in logging operations in against DDB, if enabled\n* adds an entry point to dump the state of the metastore and s3 tables (precursor to fsck)\n* adds a purge entry point to help clean up after a test run has got a store into a mess\n* s3guard prune command adds -tombstone option to only clear tombstones\n\nThe outcome is that tests should pass consistently and if problems occur we have better diagnostics.\n\nChange-Id: I3eca3f5529d7f6fec398c0ff0472919f08f054eb\n",
      "commitDate": "12/07/19 5:02 AM",
      "commitName": "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,21 @@\n+    public CsvFile row(long quotes, Object... columns) {\n+      checkNotNull(out);\n+      for (int i \u003d 0; i \u003c columns.length; i++) {\n+        if (i !\u003d 0) {\n+          out.write(separator);\n+        }\n+        boolean toQuote \u003d (quotes \u0026 1) \u003d\u003d 1;\n+        // unsigned right shift to make next column flag @ position 0\n+        quotes \u003d quotes \u003e\u003e\u003e 1;\n+        if (toQuote) {\n+          out.write(quote);\n+        }\n+        Object column \u003d columns[i];\n+        out.write(column !\u003d null ? column.toString() : \"\");\n+        if (toQuote) {\n+          out.write(quote);\n+        }\n+      }\n+      out.write(eol);\n+      return this;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public CsvFile row(long quotes, Object... columns) {\n      checkNotNull(out);\n      for (int i \u003d 0; i \u003c columns.length; i++) {\n        if (i !\u003d 0) {\n          out.write(separator);\n        }\n        boolean toQuote \u003d (quotes \u0026 1) \u003d\u003d 1;\n        // unsigned right shift to make next column flag @ position 0\n        quotes \u003d quotes \u003e\u003e\u003e 1;\n        if (toQuote) {\n          out.write(quote);\n        }\n        Object column \u003d columns[i];\n        out.write(column !\u003d null ? column.toString() : \"\");\n        if (toQuote) {\n          out.write(quote);\n        }\n      }\n      out.write(eol);\n      return this;\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DumpS3GuardDynamoTable.java"
    }
  }
}