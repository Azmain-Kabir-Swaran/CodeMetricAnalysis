{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpensslCipher.java",
  "functionName": "tokenizeTransformation",
  "functionId": "tokenizeTransformation___transformation-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslCipher.java",
  "functionStartLine": 144,
  "functionEndLine": 168,
  "numCommitsSeen": 7,
  "timeTaken": 615,
  "changeHistory": [
    "d90671137e005e05b3f41ee1f66387dee95b609a"
  ],
  "changeHistoryShort": {
    "d90671137e005e05b3f41ee1f66387dee95b609a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d90671137e005e05b3f41ee1f66387dee95b609a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10803. Update OpensslCipher#getInstance to accept CipherSuite#name format. (yliu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1609403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/14 11:27 PM",
      "commitName": "d90671137e005e05b3f41ee1f66387dee95b609a",
      "commitAuthor": "Yi Liu",
      "diff": "@@ -0,0 +1,25 @@\n+  private static Transform tokenizeTransformation(String transformation) \n+      throws NoSuchAlgorithmException {\n+    if (transformation \u003d\u003d null) {\n+      throw new NoSuchAlgorithmException(\"No transformation given.\");\n+    }\n+    \n+    /*\n+     * Array containing the components of a Cipher transformation:\n+     * \n+     * index 0: algorithm (e.g., AES)\n+     * index 1: mode (e.g., CTR)\n+     * index 2: padding (e.g., NoPadding)\n+     */\n+    String[] parts \u003d new String[3];\n+    int count \u003d 0;\n+    StringTokenizer parser \u003d new StringTokenizer(transformation, \"/\");\n+    while (parser.hasMoreTokens() \u0026\u0026 count \u003c 3) {\n+      parts[count++] \u003d parser.nextToken().trim();\n+    }\n+    if (count !\u003d 3 || parser.hasMoreTokens()) {\n+      throw new NoSuchAlgorithmException(\"Invalid transformation format: \" + \n+          transformation);\n+    }\n+    return new Transform(parts[0], parts[1], parts[2]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Transform tokenizeTransformation(String transformation) \n      throws NoSuchAlgorithmException {\n    if (transformation \u003d\u003d null) {\n      throw new NoSuchAlgorithmException(\"No transformation given.\");\n    }\n    \n    /*\n     * Array containing the components of a Cipher transformation:\n     * \n     * index 0: algorithm (e.g., AES)\n     * index 1: mode (e.g., CTR)\n     * index 2: padding (e.g., NoPadding)\n     */\n    String[] parts \u003d new String[3];\n    int count \u003d 0;\n    StringTokenizer parser \u003d new StringTokenizer(transformation, \"/\");\n    while (parser.hasMoreTokens() \u0026\u0026 count \u003c 3) {\n      parts[count++] \u003d parser.nextToken().trim();\n    }\n    if (count !\u003d 3 || parser.hasMoreTokens()) {\n      throw new NoSuchAlgorithmException(\"Invalid transformation format: \" + \n          transformation);\n    }\n    return new Transform(parts[0], parts[1], parts[2]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslCipher.java"
    }
  }
}