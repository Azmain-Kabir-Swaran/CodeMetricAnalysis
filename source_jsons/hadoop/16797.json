{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamenodeHeartbeatService.java",
  "functionName": "updateState",
  "functionId": "updateState",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
  "functionStartLine": 218,
  "functionEndLine": 246,
  "numCommitsSeen": 14,
  "timeTaken": 1692,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "d8c81073320320a019fb3868be4f06f46aebea43"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "d8c81073320320a019fb3868be4f06f46aebea43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateState() {\n    NamenodeStatusReport report \u003d getNamenodeStatusReport();\n    if (!report.registrationValid()) {\n      // Not operational\n      LOG.error(\"Namenode is not operational: {}\", getNamenodeDesc());\n    } else if (report.haStateValid()) {\n      // block and HA status available\n      LOG.debug(\"Received service state: {} from HA namenode: {}\",\n          report.getState(), getNamenodeDesc());\n    } else if (localTarget \u003d\u003d null) {\n      // block info available, HA status not expected\n      LOG.debug(\n          \"Reporting non-HA namenode as operational: \" + getNamenodeDesc());\n    } else {\n      // block info available, HA status should be available, but was not\n      // fetched do nothing and let the current state stand\n      return;\n    }\n    try {\n      if (!resolver.registerNamenode(report)) {\n        LOG.warn(\"Cannot register namenode {}\", report);\n      }\n    } catch (IOException e) {\n      LOG.info(\"Cannot register namenode in the State Store\");\n    } catch (Exception ex) {\n      LOG.error(\"Unhandled exception updating NN registration for {}\",\n          getNamenodeDesc(), ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java"
      }
    },
    "d8c81073320320a019fb3868be4f06f46aebea43": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11826. Federation Namenode Heartbeat. Contributed by Inigo Goiri.\n\n(cherry picked from commit 928f8dab52191e733984d37f47b69719ccf11313)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "d8c81073320320a019fb3868be4f06f46aebea43",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,29 @@\n+  private void updateState() {\n+    NamenodeStatusReport report \u003d getNamenodeStatusReport();\n+    if (!report.registrationValid()) {\n+      // Not operational\n+      LOG.error(\"Namenode is not operational: {}\", getNamenodeDesc());\n+    } else if (report.haStateValid()) {\n+      // block and HA status available\n+      LOG.debug(\"Received service state: {} from HA namenode: {}\",\n+          report.getState(), getNamenodeDesc());\n+    } else if (localTarget \u003d\u003d null) {\n+      // block info available, HA status not expected\n+      LOG.debug(\n+          \"Reporting non-HA namenode as operational: \" + getNamenodeDesc());\n+    } else {\n+      // block info available, HA status should be available, but was not\n+      // fetched do nothing and let the current state stand\n+      return;\n+    }\n+    try {\n+      if (!resolver.registerNamenode(report)) {\n+        LOG.warn(\"Cannot register namenode {}\", report);\n+      }\n+    } catch (IOException e) {\n+      LOG.info(\"Cannot register namenode in the State Store\");\n+    } catch (Exception ex) {\n+      LOG.error(\"Unhandled exception updating NN registration for {}\",\n+          getNamenodeDesc(), ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateState() {\n    NamenodeStatusReport report \u003d getNamenodeStatusReport();\n    if (!report.registrationValid()) {\n      // Not operational\n      LOG.error(\"Namenode is not operational: {}\", getNamenodeDesc());\n    } else if (report.haStateValid()) {\n      // block and HA status available\n      LOG.debug(\"Received service state: {} from HA namenode: {}\",\n          report.getState(), getNamenodeDesc());\n    } else if (localTarget \u003d\u003d null) {\n      // block info available, HA status not expected\n      LOG.debug(\n          \"Reporting non-HA namenode as operational: \" + getNamenodeDesc());\n    } else {\n      // block info available, HA status should be available, but was not\n      // fetched do nothing and let the current state stand\n      return;\n    }\n    try {\n      if (!resolver.registerNamenode(report)) {\n        LOG.warn(\"Cannot register namenode {}\", report);\n      }\n    } catch (IOException e) {\n      LOG.info(\"Cannot register namenode in the State Store\");\n    } catch (Exception ex) {\n      LOG.error(\"Unhandled exception updating NN registration for {}\",\n          getNamenodeDesc(), ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java"
    }
  }
}