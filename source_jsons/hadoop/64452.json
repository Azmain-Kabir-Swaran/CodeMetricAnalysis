{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AInputStream.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
  "functionStartLine": 680,
  "functionEndLine": 701,
  "numCommitsSeen": 28,
  "timeTaken": 2116,
  "changeHistory": [
    "2382f63fc0bb4108f3f3c542b4be7c04fbedd7c4",
    "6fa229891e06eea62cb9634efde755f40247e816",
    "4ee3543625c77c06d566fe81644d21c607d6d74d",
    "27c4e90efce04e1b1302f668b5eb22412e00d033",
    "b9e3eff62a7415d8666656a75db69ff3e43f8e7e"
  ],
  "changeHistoryShort": {
    "2382f63fc0bb4108f3f3c542b4be7c04fbedd7c4": "Ybodychange",
    "6fa229891e06eea62cb9634efde755f40247e816": "Ybodychange",
    "4ee3543625c77c06d566fe81644d21c607d6d74d": "Ybodychange",
    "27c4e90efce04e1b1302f668b5eb22412e00d033": "Ybodychange",
    "b9e3eff62a7415d8666656a75db69ff3e43f8e7e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2382f63fc0bb4108f3f3c542b4be7c04fbedd7c4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14747. S3AInputStream to implement CanUnbuffer.\n\nAuthor:    Sahil Takiar \u003cstakiar@cloudera.com\u003e\n",
      "commitDate": "12/04/19 6:12 PM",
      "commitName": "2382f63fc0bb4108f3f3c542b4be7c04fbedd7c4",
      "commitAuthor": "Sahil Takiar",
      "commitDateOld": "13/03/19 1:37 PM",
      "commitNameOld": "6fa229891e06eea62cb9634efde755f40247e816",
      "commitAuthorOld": "Ben Roling",
      "daysBetweenCommits": 30.19,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public String toString() {\n     String s \u003d streamStatistics.toString();\n     synchronized (this) {\n       final StringBuilder sb \u003d new StringBuilder(\n           \"S3AInputStream{\");\n       sb.append(uri);\n       sb.append(\" wrappedStream\u003d\")\n-          .append(wrappedStream !\u003d null ? \"open\" : \"closed\");\n+          .append(isObjectStreamOpen() ? \"open\" : \"closed\");\n       sb.append(\" read policy\u003d\").append(inputPolicy);\n       sb.append(\" pos\u003d\").append(pos);\n       sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n       sb.append(\" contentLength\u003d\").append(contentLength);\n       sb.append(\" contentRangeStart\u003d\").append(contentRangeStart);\n       sb.append(\" contentRangeFinish\u003d\").append(contentRangeFinish);\n       sb.append(\" remainingInCurrentRequest\u003d\")\n           .append(remainingInCurrentRequest());\n       sb.append(changeTracker);\n       sb.append(\u0027\\n\u0027).append(s);\n       sb.append(\u0027}\u0027);\n       return sb.toString();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    String s \u003d streamStatistics.toString();\n    synchronized (this) {\n      final StringBuilder sb \u003d new StringBuilder(\n          \"S3AInputStream{\");\n      sb.append(uri);\n      sb.append(\" wrappedStream\u003d\")\n          .append(isObjectStreamOpen() ? \"open\" : \"closed\");\n      sb.append(\" read policy\u003d\").append(inputPolicy);\n      sb.append(\" pos\u003d\").append(pos);\n      sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n      sb.append(\" contentLength\u003d\").append(contentLength);\n      sb.append(\" contentRangeStart\u003d\").append(contentRangeStart);\n      sb.append(\" contentRangeFinish\u003d\").append(contentRangeFinish);\n      sb.append(\" remainingInCurrentRequest\u003d\")\n          .append(remainingInCurrentRequest());\n      sb.append(changeTracker);\n      sb.append(\u0027\\n\u0027).append(s);\n      sb.append(\u0027}\u0027);\n      return sb.toString();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "6fa229891e06eea62cb9634efde755f40247e816": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15625. S3A input stream to use etags/version number to detect changed source files.\n\nAuthor: Ben Roling \u003cben.roling@gmail.com\u003e\n\nInitial patch from Brahma Reddy Battula.\n",
      "commitDate": "13/03/19 1:37 PM",
      "commitName": "6fa229891e06eea62cb9634efde755f40247e816",
      "commitAuthor": "Ben Roling",
      "commitDateOld": "09/03/19 8:00 AM",
      "commitNameOld": "0cbe9ad8c23d3fd2ac8ac423b6d2df68de720981",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 4.19,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   public String toString() {\n     String s \u003d streamStatistics.toString();\n     synchronized (this) {\n       final StringBuilder sb \u003d new StringBuilder(\n           \"S3AInputStream{\");\n       sb.append(uri);\n       sb.append(\" wrappedStream\u003d\")\n           .append(wrappedStream !\u003d null ? \"open\" : \"closed\");\n       sb.append(\" read policy\u003d\").append(inputPolicy);\n       sb.append(\" pos\u003d\").append(pos);\n       sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n       sb.append(\" contentLength\u003d\").append(contentLength);\n       sb.append(\" contentRangeStart\u003d\").append(contentRangeStart);\n       sb.append(\" contentRangeFinish\u003d\").append(contentRangeFinish);\n       sb.append(\" remainingInCurrentRequest\u003d\")\n           .append(remainingInCurrentRequest());\n+      sb.append(changeTracker);\n       sb.append(\u0027\\n\u0027).append(s);\n       sb.append(\u0027}\u0027);\n       return sb.toString();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    String s \u003d streamStatistics.toString();\n    synchronized (this) {\n      final StringBuilder sb \u003d new StringBuilder(\n          \"S3AInputStream{\");\n      sb.append(uri);\n      sb.append(\" wrappedStream\u003d\")\n          .append(wrappedStream !\u003d null ? \"open\" : \"closed\");\n      sb.append(\" read policy\u003d\").append(inputPolicy);\n      sb.append(\" pos\u003d\").append(pos);\n      sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n      sb.append(\" contentLength\u003d\").append(contentLength);\n      sb.append(\" contentRangeStart\u003d\").append(contentRangeStart);\n      sb.append(\" contentRangeFinish\u003d\").append(contentRangeFinish);\n      sb.append(\" remainingInCurrentRequest\u003d\")\n          .append(remainingInCurrentRequest());\n      sb.append(changeTracker);\n      sb.append(\u0027\\n\u0027).append(s);\n      sb.append(\u0027}\u0027);\n      return sb.toString();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "4ee3543625c77c06d566fe81644d21c607d6d74d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13203 S3A: Support fadvise \"random\" mode for high performance readPositioned() reads. Contributed by Rajesh Balamohan and stevel.\n",
      "commitDate": "22/06/16 7:45 AM",
      "commitName": "4ee3543625c77c06d566fe81644d21c607d6d74d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "21/05/16 8:39 AM",
      "commitNameOld": "39ec1515a205952eda7e171408a8b83eceb4abde",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 31.96,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,21 @@\n   public String toString() {\n-    final StringBuilder sb \u003d new StringBuilder(\n-        \"S3AInputStream{\");\n-    sb.append(uri);\n-    sb.append(\" pos\u003d\").append(pos);\n-    sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n-    sb.append(\" contentLength\u003d\").append(contentLength);\n-    sb.append(\" \").append(streamStatistics.toString());\n-    sb.append(\u0027}\u0027);\n-    return sb.toString();\n+    String s \u003d streamStatistics.toString();\n+    synchronized (this) {\n+      final StringBuilder sb \u003d new StringBuilder(\n+          \"S3AInputStream{\");\n+      sb.append(uri);\n+      sb.append(\" wrappedStream\u003d\")\n+          .append(wrappedStream !\u003d null ? \"open\" : \"closed\");\n+      sb.append(\" read policy\u003d\").append(inputPolicy);\n+      sb.append(\" pos\u003d\").append(pos);\n+      sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n+      sb.append(\" contentLength\u003d\").append(contentLength);\n+      sb.append(\" contentRangeStart\u003d\").append(contentRangeStart);\n+      sb.append(\" contentRangeFinish\u003d\").append(contentRangeFinish);\n+      sb.append(\" remainingInCurrentRequest\u003d\")\n+          .append(remainingInCurrentRequest());\n+      sb.append(\u0027\\n\u0027).append(s);\n+      sb.append(\u0027}\u0027);\n+      return sb.toString();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    String s \u003d streamStatistics.toString();\n    synchronized (this) {\n      final StringBuilder sb \u003d new StringBuilder(\n          \"S3AInputStream{\");\n      sb.append(uri);\n      sb.append(\" wrappedStream\u003d\")\n          .append(wrappedStream !\u003d null ? \"open\" : \"closed\");\n      sb.append(\" read policy\u003d\").append(inputPolicy);\n      sb.append(\" pos\u003d\").append(pos);\n      sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n      sb.append(\" contentLength\u003d\").append(contentLength);\n      sb.append(\" contentRangeStart\u003d\").append(contentRangeStart);\n      sb.append(\" contentRangeFinish\u003d\").append(contentRangeFinish);\n      sb.append(\" remainingInCurrentRequest\u003d\")\n          .append(remainingInCurrentRequest());\n      sb.append(\u0027\\n\u0027).append(s);\n      sb.append(\u0027}\u0027);\n      return sb.toString();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "27c4e90efce04e1b1302f668b5eb22412e00d033": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13028 add low level counter metrics for S3A; use in read performance tests. contributed by: stevel\npatch includes\nHADOOP-12844 Recover when S3A fails on IOException in read()\nHADOOP-13058 S3A FS fails during init against a read-only FS if multipart purge\nHADOOP-13047 S3a Forward seek in stream length to be configurable\n",
      "commitDate": "12/05/16 11:24 AM",
      "commitName": "27c4e90efce04e1b1302f668b5eb22412e00d033",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "09/04/16 3:25 AM",
      "commitNameOld": "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 33.33,
      "commitsBetweenForRepo": 203,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AInputStream{\");\n     sb.append(uri);\n     sb.append(\" pos\u003d\").append(pos);\n     sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n     sb.append(\" contentLength\u003d\").append(contentLength);\n+    sb.append(\" \").append(streamStatistics.toString());\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AInputStream{\");\n    sb.append(uri);\n    sb.append(\" pos\u003d\").append(pos);\n    sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n    sb.append(\" contentLength\u003d\").append(contentLength);\n    sb.append(\" \").append(streamStatistics.toString());\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "b9e3eff62a7415d8666656a75db69ff3e43f8e7e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12444 Support lazy seek in S3AInputStream. Rajesh Balamohan via stevel\n",
      "commitDate": "09/04/16 3:25 AM",
      "commitName": "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,10 @@\n+  public String toString() {\n+    final StringBuilder sb \u003d new StringBuilder(\n+        \"S3AInputStream{\");\n+    sb.append(uri);\n+    sb.append(\" pos\u003d\").append(pos);\n+    sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n+    sb.append(\" contentLength\u003d\").append(contentLength);\n+    sb.append(\u0027}\u0027);\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AInputStream{\");\n    sb.append(uri);\n    sb.append(\" pos\u003d\").append(pos);\n    sb.append(\" nextReadPos\u003d\").append(nextReadPos);\n    sb.append(\" contentLength\u003d\").append(contentLength);\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java"
    }
  }
}