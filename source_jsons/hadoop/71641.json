{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegistryDNS.java",
  "functionName": "createPrimaryQuery",
  "functionId": "createPrimaryQuery___query-Message",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
  "functionStartLine": 1209,
  "functionEndLine": 1228,
  "numCommitsSeen": 15,
  "timeTaken": 1401,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "f934f62fc71b4776e88f86d4254de0ea12147511"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "f934f62fc71b4776e88f86d4254de0ea12147511": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Message createPrimaryQuery(Message query)\n      throws NameTooLongException, TextParseException {\n    Name name \u003d query.getQuestion().getName();\n    if (name.labels() \u003e 0 \u0026\u0026 name.labels() \u003c\u003d 2) {\n      // short relative or absolute name.  this code may not be necessary -\n      // OS resolution utilities probably append the search paths defined\n      // in resolv.conf prior to the lookup\n      int id \u003d query.getHeader().getID();\n      String queryName \u003d name.getLabelString(0);\n      Name qualifiedName \u003d Name.concatenate(Name.fromString(queryName),\n          Name.fromString(domainName));\n      LOG.info(\"Received query {}.  Forwarding query {}\", name, qualifiedName);\n      Record question \u003d Record.newRecord(qualifiedName,\n          query.getQuestion().getType(),\n          query.getQuestion().getDClass());\n      query \u003d Message.newQuery(question);\n      query.getHeader().setID(id);\n    }\n    return query;\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
      }
    },
    "f934f62fc71b4776e88f86d4254de0ea12147511": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5218. Initial core change for DNS for YARN. Contributed by Jonathan Maron\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  private Message createPrimaryQuery(Message query)\n+      throws NameTooLongException, TextParseException {\n+    Name name \u003d query.getQuestion().getName();\n+    if (name.labels() \u003e 0 \u0026\u0026 name.labels() \u003c\u003d 2) {\n+      // short relative or absolute name.  this code may not be necessary -\n+      // OS resolution utilities probably append the search paths defined\n+      // in resolv.conf prior to the lookup\n+      int id \u003d query.getHeader().getID();\n+      String queryName \u003d name.getLabelString(0);\n+      Name qualifiedName \u003d Name.concatenate(Name.fromString(queryName),\n+          Name.fromString(domainName));\n+      LOG.info(\"Received query {}.  Forwarding query {}\", name, qualifiedName);\n+      Record question \u003d Record.newRecord(qualifiedName,\n+          query.getQuestion().getType(),\n+          query.getQuestion().getDClass());\n+      query \u003d Message.newQuery(question);\n+      query.getHeader().setID(id);\n+    }\n+    return query;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Message createPrimaryQuery(Message query)\n      throws NameTooLongException, TextParseException {\n    Name name \u003d query.getQuestion().getName();\n    if (name.labels() \u003e 0 \u0026\u0026 name.labels() \u003c\u003d 2) {\n      // short relative or absolute name.  this code may not be necessary -\n      // OS resolution utilities probably append the search paths defined\n      // in resolv.conf prior to the lookup\n      int id \u003d query.getHeader().getID();\n      String queryName \u003d name.getLabelString(0);\n      Name qualifiedName \u003d Name.concatenate(Name.fromString(queryName),\n          Name.fromString(domainName));\n      LOG.info(\"Received query {}.  Forwarding query {}\", name, qualifiedName);\n      Record question \u003d Record.newRecord(qualifiedName,\n          query.getQuestion().getType(),\n          query.getQuestion().getDClass());\n      query \u003d Message.newQuery(question);\n      query.getHeader().setID(id);\n    }\n    return query;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
    }
  }
}