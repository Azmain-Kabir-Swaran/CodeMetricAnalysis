{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Parser.java",
  "functionName": "getSplits",
  "functionId": "getSplits___job-JobConf__numSplits-int",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/Parser.java",
  "functionStartLine": 376,
  "functionEndLine": 399,
  "numCommitsSeen": 4,
  "timeTaken": 4298,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public InputSplit[] getSplits(JobConf job, int numSplits)\n        throws IOException {\n      InputSplit[][] splits \u003d new InputSplit[kids.size()][];\n      for (int i \u003d 0; i \u003c kids.size(); ++i) {\n        final InputSplit[] tmp \u003d kids.get(i).getSplits(job, numSplits);\n        if (null \u003d\u003d tmp) {\n          throw new IOException(\"Error gathering splits from child RReader\");\n        }\n        if (i \u003e 0 \u0026\u0026 splits[i-1].length !\u003d tmp.length) {\n          throw new IOException(\"Inconsistent split cardinality from child \" +\n              i + \" (\" + splits[i-1].length + \"/\" + tmp.length + \")\");\n        }\n        splits[i] \u003d tmp;\n      }\n      final int size \u003d splits[0].length;\n      CompositeInputSplit[] ret \u003d new CompositeInputSplit[size];\n      for (int i \u003d 0; i \u003c size; ++i) {\n        ret[i] \u003d new CompositeInputSplit(splits.length);\n        for (int j \u003d 0; j \u003c splits.length; ++j) {\n          ret[i].add(splits[j][i]);\n        }\n      }\n      return ret;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/Parser.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/Parser.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/Parser.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public InputSplit[] getSplits(JobConf job, int numSplits)\n        throws IOException {\n      InputSplit[][] splits \u003d new InputSplit[kids.size()][];\n      for (int i \u003d 0; i \u003c kids.size(); ++i) {\n        final InputSplit[] tmp \u003d kids.get(i).getSplits(job, numSplits);\n        if (null \u003d\u003d tmp) {\n          throw new IOException(\"Error gathering splits from child RReader\");\n        }\n        if (i \u003e 0 \u0026\u0026 splits[i-1].length !\u003d tmp.length) {\n          throw new IOException(\"Inconsistent split cardinality from child \" +\n              i + \" (\" + splits[i-1].length + \"/\" + tmp.length + \")\");\n        }\n        splits[i] \u003d tmp;\n      }\n      final int size \u003d splits[0].length;\n      CompositeInputSplit[] ret \u003d new CompositeInputSplit[size];\n      for (int i \u003d 0; i \u003c size; ++i) {\n        ret[i] \u003d new CompositeInputSplit(splits.length);\n        for (int j \u003d 0; j \u003c splits.length; ++j) {\n          ret[i].add(splits[j][i]);\n        }\n      }\n      return ret;\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/Parser.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/join/Parser.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/join/Parser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,24 @@\n+    public InputSplit[] getSplits(JobConf job, int numSplits)\n+        throws IOException {\n+      InputSplit[][] splits \u003d new InputSplit[kids.size()][];\n+      for (int i \u003d 0; i \u003c kids.size(); ++i) {\n+        final InputSplit[] tmp \u003d kids.get(i).getSplits(job, numSplits);\n+        if (null \u003d\u003d tmp) {\n+          throw new IOException(\"Error gathering splits from child RReader\");\n+        }\n+        if (i \u003e 0 \u0026\u0026 splits[i-1].length !\u003d tmp.length) {\n+          throw new IOException(\"Inconsistent split cardinality from child \" +\n+              i + \" (\" + splits[i-1].length + \"/\" + tmp.length + \")\");\n+        }\n+        splits[i] \u003d tmp;\n+      }\n+      final int size \u003d splits[0].length;\n+      CompositeInputSplit[] ret \u003d new CompositeInputSplit[size];\n+      for (int i \u003d 0; i \u003c size; ++i) {\n+        ret[i] \u003d new CompositeInputSplit(splits.length);\n+        for (int j \u003d 0; j \u003c splits.length; ++j) {\n+          ret[i].add(splits[j][i]);\n+        }\n+      }\n+      return ret;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public InputSplit[] getSplits(JobConf job, int numSplits)\n        throws IOException {\n      InputSplit[][] splits \u003d new InputSplit[kids.size()][];\n      for (int i \u003d 0; i \u003c kids.size(); ++i) {\n        final InputSplit[] tmp \u003d kids.get(i).getSplits(job, numSplits);\n        if (null \u003d\u003d tmp) {\n          throw new IOException(\"Error gathering splits from child RReader\");\n        }\n        if (i \u003e 0 \u0026\u0026 splits[i-1].length !\u003d tmp.length) {\n          throw new IOException(\"Inconsistent split cardinality from child \" +\n              i + \" (\" + splits[i-1].length + \"/\" + tmp.length + \")\");\n        }\n        splits[i] \u003d tmp;\n      }\n      final int size \u003d splits[0].length;\n      CompositeInputSplit[] ret \u003d new CompositeInputSplit[size];\n      for (int i \u003d 0; i \u003c size; ++i) {\n        ret[i] \u003d new CompositeInputSplit(splits.length);\n        for (int j \u003d 0; j \u003c splits.length; ++j) {\n          ret[i].add(splits[j][i]);\n        }\n      }\n      return ret;\n    }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/join/Parser.java"
    }
  }
}