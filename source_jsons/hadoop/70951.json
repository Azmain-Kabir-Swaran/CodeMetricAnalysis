{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSBlockOutputStream.java",
  "functionName": "write",
  "functionId": "write___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSBlockOutputStream.java",
  "functionStartLine": 139,
  "functionEndLine": 150,
  "numCommitsSeen": 6,
  "timeTaken": 964,
  "changeHistory": [
    "0857f116b754d83d3c540cd6f989087af24fef27",
    "6542d17ea460ec222137c4b275b13daf15d3fca3"
  ],
  "changeHistoryShort": {
    "0857f116b754d83d3c540cd6f989087af24fef27": "Ybodychange",
    "6542d17ea460ec222137c4b275b13daf15d3fca3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0857f116b754d83d3c540cd6f989087af24fef27": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15607. AliyunOSS: fix duplicated partNumber issue in AliyunOSSBlockOutputStream. Contributed by Jinhu Wu.\n",
      "commitDate": "29/07/18 7:53 PM",
      "commitName": "0857f116b754d83d3c540cd6f989087af24fef27",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "30/03/18 5:23 AM",
      "commitNameOld": "6542d17ea460ec222137c4b275b13daf15d3fca3",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 121.6,
      "commitsBetweenForRepo": 1341,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,12 @@\n   public synchronized void write(byte[] b, int off, int len)\n       throws IOException {\n     if (closed) {\n       throw new IOException(\"Stream closed.\");\n     }\n-    try {\n-      blockStream.write(b, off, len);\n-      blockWritten +\u003d len;\n-      if (blockWritten \u003e\u003d blockSize) {\n-        uploadCurrentPart();\n-        blockWritten \u003d 0L;\n-      }\n-    } finally {\n-      for (File tFile: blockFiles) {\n-        if (tFile.exists() \u0026\u0026 !tFile.delete()) {\n-          LOG.warn(\"Failed to delete temporary file {}\", tFile);\n-        }\n-      }\n+    blockStream.write(b, off, len);\n+    blockWritten +\u003d len;\n+    if (blockWritten \u003e\u003d blockSize) {\n+      uploadCurrentPart();\n+      blockWritten \u003d 0L;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void write(byte[] b, int off, int len)\n      throws IOException {\n    if (closed) {\n      throw new IOException(\"Stream closed.\");\n    }\n    blockStream.write(b, off, len);\n    blockWritten +\u003d len;\n    if (blockWritten \u003e\u003d blockSize) {\n      uploadCurrentPart();\n      blockWritten \u003d 0L;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSBlockOutputStream.java",
      "extendedDetails": {}
    },
    "6542d17ea460ec222137c4b275b13daf15d3fca3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14999. AliyunOSS: provide one asynchronous multi-part based uploading mechanism. Contributed by Genmao Yu.\n",
      "commitDate": "30/03/18 5:23 AM",
      "commitName": "6542d17ea460ec222137c4b275b13daf15d3fca3",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,20 @@\n+  public synchronized void write(byte[] b, int off, int len)\n+      throws IOException {\n+    if (closed) {\n+      throw new IOException(\"Stream closed.\");\n+    }\n+    try {\n+      blockStream.write(b, off, len);\n+      blockWritten +\u003d len;\n+      if (blockWritten \u003e\u003d blockSize) {\n+        uploadCurrentPart();\n+        blockWritten \u003d 0L;\n+      }\n+    } finally {\n+      for (File tFile: blockFiles) {\n+        if (tFile.exists() \u0026\u0026 !tFile.delete()) {\n+          LOG.warn(\"Failed to delete temporary file {}\", tFile);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void write(byte[] b, int off, int len)\n      throws IOException {\n    if (closed) {\n      throw new IOException(\"Stream closed.\");\n    }\n    try {\n      blockStream.write(b, off, len);\n      blockWritten +\u003d len;\n      if (blockWritten \u003e\u003d blockSize) {\n        uploadCurrentPart();\n        blockWritten \u003d 0L;\n      }\n    } finally {\n      for (File tFile: blockFiles) {\n        if (tFile.exists() \u0026\u0026 !tFile.delete()) {\n          LOG.warn(\"Failed to delete temporary file {}\", tFile);\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSBlockOutputStream.java"
    }
  }
}