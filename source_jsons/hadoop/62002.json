{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMasterServiceUtils.java",
  "functionName": "addToUpdateContainerErrors",
  "functionId": "addToUpdateContainerErrors___allocateResponse-AllocateResponse__updateContainerErrors-List__UpdateContainerError__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/ams/ApplicationMasterServiceUtils.java",
  "functionStartLine": 43,
  "functionEndLine": 53,
  "numCommitsSeen": 84,
  "timeTaken": 3452,
  "changeHistory": [
    "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0",
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8"
  ],
  "changeHistoryShort": {
    "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6776. Refactor ApplicaitonMasterService to move actual processing logic to a separate class. (asuresh)\n",
      "commitDate": "10/07/17 2:34 PM",
      "commitName": "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6776. Refactor ApplicaitonMasterService to move actual processing logic to a separate class. (asuresh)\n",
          "commitDate": "10/07/17 2:34 PM",
          "commitName": "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "10/07/17 3:53 AM",
          "commitNameOld": "09653ea098a17fddcf111b0da289085915c351d1",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  protected void addToUpdateContainerErrors(AllocateResponse allocateResponse,\n+  public static void addToUpdateContainerErrors(\n+      AllocateResponse allocateResponse,\n       List\u003cUpdateContainerError\u003e updateContainerErrors) {\n     if (!updateContainerErrors.isEmpty()) {\n       if (allocateResponse.getUpdateErrors() !\u003d null\n           \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n-        updateContainerErrors \u003d new ArrayList\u003c\u003e(updateContainerErrors);\n         updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n       }\n       allocateResponse.setUpdateErrors(updateContainerErrors);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void addToUpdateContainerErrors(\n      AllocateResponse allocateResponse,\n      List\u003cUpdateContainerError\u003e updateContainerErrors) {\n    if (!updateContainerErrors.isEmpty()) {\n      if (allocateResponse.getUpdateErrors() !\u003d null\n          \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n        updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n      }\n      allocateResponse.setUpdateErrors(updateContainerErrors);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/ams/ApplicationMasterServiceUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/ams/ApplicationMasterServiceUtils.java",
            "oldMethodName": "addToUpdateContainerErrors",
            "newMethodName": "addToUpdateContainerErrors"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6776. Refactor ApplicaitonMasterService to move actual processing logic to a separate class. (asuresh)\n",
          "commitDate": "10/07/17 2:34 PM",
          "commitName": "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "10/07/17 3:53 AM",
          "commitNameOld": "09653ea098a17fddcf111b0da289085915c351d1",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  protected void addToUpdateContainerErrors(AllocateResponse allocateResponse,\n+  public static void addToUpdateContainerErrors(\n+      AllocateResponse allocateResponse,\n       List\u003cUpdateContainerError\u003e updateContainerErrors) {\n     if (!updateContainerErrors.isEmpty()) {\n       if (allocateResponse.getUpdateErrors() !\u003d null\n           \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n-        updateContainerErrors \u003d new ArrayList\u003c\u003e(updateContainerErrors);\n         updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n       }\n       allocateResponse.setUpdateErrors(updateContainerErrors);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void addToUpdateContainerErrors(\n      AllocateResponse allocateResponse,\n      List\u003cUpdateContainerError\u003e updateContainerErrors) {\n    if (!updateContainerErrors.isEmpty()) {\n      if (allocateResponse.getUpdateErrors() !\u003d null\n          \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n        updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n      }\n      allocateResponse.setUpdateErrors(updateContainerErrors);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/ams/ApplicationMasterServiceUtils.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6776. Refactor ApplicaitonMasterService to move actual processing logic to a separate class. (asuresh)\n",
          "commitDate": "10/07/17 2:34 PM",
          "commitName": "5496a34c0cb2b1a83cfa6b0aba5a77b05ff2d8f0",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "10/07/17 3:53 AM",
          "commitNameOld": "09653ea098a17fddcf111b0da289085915c351d1",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  protected void addToUpdateContainerErrors(AllocateResponse allocateResponse,\n+  public static void addToUpdateContainerErrors(\n+      AllocateResponse allocateResponse,\n       List\u003cUpdateContainerError\u003e updateContainerErrors) {\n     if (!updateContainerErrors.isEmpty()) {\n       if (allocateResponse.getUpdateErrors() !\u003d null\n           \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n-        updateContainerErrors \u003d new ArrayList\u003c\u003e(updateContainerErrors);\n         updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n       }\n       allocateResponse.setUpdateErrors(updateContainerErrors);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void addToUpdateContainerErrors(\n      AllocateResponse allocateResponse,\n      List\u003cUpdateContainerError\u003e updateContainerErrors) {\n    if (!updateContainerErrors.isEmpty()) {\n      if (allocateResponse.getUpdateErrors() !\u003d null\n          \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n        updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n      }\n      allocateResponse.setUpdateErrors(updateContainerErrors);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/ams/ApplicationMasterServiceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5938. Refactoring OpportunisticContainerAllocator to use SchedulerRequestKey instead of Priority and other misc fixes (asuresh)\n",
      "commitDate": "27/12/16 12:40 PM",
      "commitName": "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,11 @@\n+  protected void addToUpdateContainerErrors(AllocateResponse allocateResponse,\n+      List\u003cUpdateContainerError\u003e updateContainerErrors) {\n+    if (!updateContainerErrors.isEmpty()) {\n+      if (allocateResponse.getUpdateErrors() !\u003d null\n+          \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n+        updateContainerErrors \u003d new ArrayList\u003c\u003e(updateContainerErrors);\n+        updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n+      }\n+      allocateResponse.setUpdateErrors(updateContainerErrors);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addToUpdateContainerErrors(AllocateResponse allocateResponse,\n      List\u003cUpdateContainerError\u003e updateContainerErrors) {\n    if (!updateContainerErrors.isEmpty()) {\n      if (allocateResponse.getUpdateErrors() !\u003d null\n          \u0026\u0026 !allocateResponse.getUpdateErrors().isEmpty()) {\n        updateContainerErrors \u003d new ArrayList\u003c\u003e(updateContainerErrors);\n        updateContainerErrors.addAll(allocateResponse.getUpdateErrors());\n      }\n      allocateResponse.setUpdateErrors(updateContainerErrors);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
    }
  }
}