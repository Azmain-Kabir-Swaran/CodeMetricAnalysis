{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "deleteBlockPool",
  "functionId": "deleteBlockPool___bpid-String__force-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 3004,
  "functionEndLine": 3030,
  "numCommitsSeen": 230,
  "timeTaken": 11339,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c",
    "3b173d95171d01ab55042b1162569d1cf14a8d43",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "9e31bf675dd92183a9a74a66b7caf1a080581d65",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ymultichange(Ymodifierchange,Ybodychange)",
    "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1": "Ybodychange",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": "Ybodychange",
    "3b173d95171d01ab55042b1162569d1cf14a8d43": "Ybodychange",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "9e31bf675dd92183a9a74a66b7caf1a080581d65": "Ybodychange",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n-    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n       List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n       if (!force) {\n         for (FsVolumeImpl volume : curVolumes) {\n           try (FsVolumeReference ref \u003d volume.obtainReference()) {\n             if (!volume.isBPDirEmpty(bpid)) {\n               LOG.warn(bpid\n                   + \" has some block files, cannot delete unless forced\");\n               throw new IOException(\"Cannot delete block pool, \"\n                   + \"it contains some block files\");\n             }\n           } catch (ClosedChannelException e) {\n             // ignore.\n           }\n         }\n       }\n       for (FsVolumeImpl volume : curVolumes) {\n         try (FsVolumeReference ref \u003d volume.obtainReference()) {\n           volume.deleteBPDirectories(bpid, force);\n         } catch (ClosedChannelException e) {\n           // ignore.\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n      List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n      if (!force) {\n        for (FsVolumeImpl volume : curVolumes) {\n          try (FsVolumeReference ref \u003d volume.obtainReference()) {\n            if (!volume.isBPDirEmpty(bpid)) {\n              LOG.warn(bpid\n                  + \" has some block files, cannot delete unless forced\");\n              throw new IOException(\"Cannot delete block pool, \"\n                  + \"it contains some block files\");\n            }\n          } catch (ClosedChannelException e) {\n            // ignore.\n          }\n        }\n      }\n      for (FsVolumeImpl volume : curVolumes) {\n        try (FsVolumeReference ref \u003d volume.obtainReference()) {\n          volume.deleteBPDirectories(bpid, force);\n        } catch (ClosedChannelException e) {\n          // ignore.\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,27 @@\n-  public synchronized void deleteBlockPool(String bpid, boolean force)\n+  public void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n-    List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n-    if (!force) {\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n+      if (!force) {\n+        for (FsVolumeImpl volume : curVolumes) {\n+          try (FsVolumeReference ref \u003d volume.obtainReference()) {\n+            if (!volume.isBPDirEmpty(bpid)) {\n+              LOG.warn(bpid\n+                  + \" has some block files, cannot delete unless forced\");\n+              throw new IOException(\"Cannot delete block pool, \"\n+                  + \"it contains some block files\");\n+            }\n+          } catch (ClosedChannelException e) {\n+            // ignore.\n+          }\n+        }\n+      }\n       for (FsVolumeImpl volume : curVolumes) {\n         try (FsVolumeReference ref \u003d volume.obtainReference()) {\n-          if (!volume.isBPDirEmpty(bpid)) {\n-            LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n-            throw new IOException(\"Cannot delete block pool, \"\n-                + \"it contains some block files\");\n-          }\n+          volume.deleteBPDirectories(bpid, force);\n         } catch (ClosedChannelException e) {\n           // ignore.\n         }\n       }\n     }\n-    for (FsVolumeImpl volume : curVolumes) {\n-      try (FsVolumeReference ref \u003d volume.obtainReference()) {\n-        volume.deleteBPDirectories(bpid, force);\n-      } catch (ClosedChannelException e) {\n-        // ignore.\n-      }\n-    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n      if (!force) {\n        for (FsVolumeImpl volume : curVolumes) {\n          try (FsVolumeReference ref \u003d volume.obtainReference()) {\n            if (!volume.isBPDirEmpty(bpid)) {\n              LOG.warn(bpid\n                  + \" has some block files, cannot delete unless forced\");\n              throw new IOException(\"Cannot delete block pool, \"\n                  + \"it contains some block files\");\n            }\n          } catch (ClosedChannelException e) {\n            // ignore.\n          }\n        }\n      }\n      for (FsVolumeImpl volume : curVolumes) {\n        try (FsVolumeReference ref \u003d volume.obtainReference()) {\n          volume.deleteBPDirectories(bpid, force);\n        } catch (ClosedChannelException e) {\n          // ignore.\n        }\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,27 @@\n-  public synchronized void deleteBlockPool(String bpid, boolean force)\n+  public void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n-    List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n-    if (!force) {\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n+      if (!force) {\n+        for (FsVolumeImpl volume : curVolumes) {\n+          try (FsVolumeReference ref \u003d volume.obtainReference()) {\n+            if (!volume.isBPDirEmpty(bpid)) {\n+              LOG.warn(bpid\n+                  + \" has some block files, cannot delete unless forced\");\n+              throw new IOException(\"Cannot delete block pool, \"\n+                  + \"it contains some block files\");\n+            }\n+          } catch (ClosedChannelException e) {\n+            // ignore.\n+          }\n+        }\n+      }\n       for (FsVolumeImpl volume : curVolumes) {\n         try (FsVolumeReference ref \u003d volume.obtainReference()) {\n-          if (!volume.isBPDirEmpty(bpid)) {\n-            LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n-            throw new IOException(\"Cannot delete block pool, \"\n-                + \"it contains some block files\");\n-          }\n+          volume.deleteBPDirectories(bpid, force);\n         } catch (ClosedChannelException e) {\n           // ignore.\n         }\n       }\n     }\n-    for (FsVolumeImpl volume : curVolumes) {\n-      try (FsVolumeReference ref \u003d volume.obtainReference()) {\n-        volume.deleteBPDirectories(bpid, force);\n-      } catch (ClosedChannelException e) {\n-        // ignore.\n-      }\n-    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n      if (!force) {\n        for (FsVolumeImpl volume : curVolumes) {\n          try (FsVolumeReference ref \u003d volume.obtainReference()) {\n            if (!volume.isBPDirEmpty(bpid)) {\n              LOG.warn(bpid\n                  + \" has some block files, cannot delete unless forced\");\n              throw new IOException(\"Cannot delete block pool, \"\n                  + \"it contains some block files\");\n            }\n          } catch (ClosedChannelException e) {\n            // ignore.\n          }\n        }\n      }\n      for (FsVolumeImpl volume : curVolumes) {\n        try (FsVolumeReference ref \u003d volume.obtainReference()) {\n          volume.deleteBPDirectories(bpid, force);\n        } catch (ClosedChannelException e) {\n          // ignore.\n        }\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7758. Retire FsDatasetSpi#getVolumes() and use FsDatasetSpi#getVolumeRefs() instead (Lei (Eddy) Xu via Colin P. McCabe)\n",
      "commitDate": "05/05/15 11:08 AM",
      "commitName": "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.05,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n-    List\u003cFsVolumeImpl\u003e curVolumes \u003d getVolumes();\n+    List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n     if (!force) {\n       for (FsVolumeImpl volume : curVolumes) {\n         try (FsVolumeReference ref \u003d volume.obtainReference()) {\n           if (!volume.isBPDirEmpty(bpid)) {\n             LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n             throw new IOException(\"Cannot delete block pool, \"\n                 + \"it contains some block files\");\n           }\n         } catch (ClosedChannelException e) {\n           // ignore.\n         }\n       }\n     }\n     for (FsVolumeImpl volume : curVolumes) {\n       try (FsVolumeReference ref \u003d volume.obtainReference()) {\n         volume.deleteBPDirectories(bpid, force);\n       } catch (ClosedChannelException e) {\n         // ignore.\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    List\u003cFsVolumeImpl\u003e curVolumes \u003d volumes.getVolumes();\n    if (!force) {\n      for (FsVolumeImpl volume : curVolumes) {\n        try (FsVolumeReference ref \u003d volume.obtainReference()) {\n          if (!volume.isBPDirEmpty(bpid)) {\n            LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n            throw new IOException(\"Cannot delete block pool, \"\n                + \"it contains some block files\");\n          }\n        } catch (ClosedChannelException e) {\n          // ignore.\n        }\n      }\n    }\n    for (FsVolumeImpl volume : curVolumes) {\n      try (FsVolumeReference ref \u003d volume.obtainReference()) {\n        volume.deleteBPDirectories(bpid, force);\n      } catch (ClosedChannelException e) {\n        // ignore.\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
      "commitDate": "20/01/15 7:05 PM",
      "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "13/01/15 12:24 AM",
      "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 7.78,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,24 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n     List\u003cFsVolumeImpl\u003e curVolumes \u003d getVolumes();\n     if (!force) {\n       for (FsVolumeImpl volume : curVolumes) {\n-        if (!volume.isBPDirEmpty(bpid)) {\n-          LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n-          throw new IOException(\"Cannot delete block pool, \"\n-              + \"it contains some block files\");\n+        try (FsVolumeReference ref \u003d volume.obtainReference()) {\n+          if (!volume.isBPDirEmpty(bpid)) {\n+            LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n+            throw new IOException(\"Cannot delete block pool, \"\n+                + \"it contains some block files\");\n+          }\n+        } catch (ClosedChannelException e) {\n+          // ignore.\n         }\n       }\n     }\n     for (FsVolumeImpl volume : curVolumes) {\n-      volume.deleteBPDirectories(bpid, force);\n+      try (FsVolumeReference ref \u003d volume.obtainReference()) {\n+        volume.deleteBPDirectories(bpid, force);\n+      } catch (ClosedChannelException e) {\n+        // ignore.\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    List\u003cFsVolumeImpl\u003e curVolumes \u003d getVolumes();\n    if (!force) {\n      for (FsVolumeImpl volume : curVolumes) {\n        try (FsVolumeReference ref \u003d volume.obtainReference()) {\n          if (!volume.isBPDirEmpty(bpid)) {\n            LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n            throw new IOException(\"Cannot delete block pool, \"\n                + \"it contains some block files\");\n          }\n        } catch (ClosedChannelException e) {\n          // ignore.\n        }\n      }\n    }\n    for (FsVolumeImpl volume : curVolumes) {\n      try (FsVolumeReference ref \u003d volume.obtainReference()) {\n        volume.deleteBPDirectories(bpid, force);\n      } catch (ClosedChannelException e) {\n        // ignore.\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "3b173d95171d01ab55042b1162569d1cf14a8d43": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7531. Improve the concurrent access on FsVolumeList (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "17/12/14 4:41 PM",
      "commitName": "3b173d95171d01ab55042b1162569d1cf14a8d43",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.17,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n+    List\u003cFsVolumeImpl\u003e curVolumes \u003d getVolumes();\n     if (!force) {\n-      for (FsVolumeImpl volume : volumes.volumes) {\n+      for (FsVolumeImpl volume : curVolumes) {\n         if (!volume.isBPDirEmpty(bpid)) {\n           LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n           throw new IOException(\"Cannot delete block pool, \"\n               + \"it contains some block files\");\n         }\n       }\n     }\n-    for (FsVolumeImpl volume : volumes.volumes) {\n+    for (FsVolumeImpl volume : curVolumes) {\n       volume.deleteBPDirectories(bpid, force);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    List\u003cFsVolumeImpl\u003e curVolumes \u003d getVolumes();\n    if (!force) {\n      for (FsVolumeImpl volume : curVolumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FsVolumeImpl volume : curVolumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n     if (!force) {\n-      for (FSVolume volume : volumes.volumes) {\n+      for (FsVolumeImpl volume : volumes.volumes) {\n         if (!volume.isBPDirEmpty(bpid)) {\n-          DataNode.LOG.warn(bpid\n-              + \" has some block files, cannot delete unless forced\");\n+          LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n           throw new IOException(\"Cannot delete block pool, \"\n               + \"it contains some block files\");\n         }\n       }\n     }\n-    for (FSVolume volume : volumes.volumes) {\n+    for (FsVolumeImpl volume : volumes.volumes) {\n       volume.deleteBPDirectories(bpid, force);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FsVolumeImpl volume : volumes.volumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FsVolumeImpl volume : volumes.volumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
            "oldMethodName": "deleteBlockPool",
            "newMethodName": "deleteBlockPool"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n     if (!force) {\n-      for (FSVolume volume : volumes.volumes) {\n+      for (FsVolumeImpl volume : volumes.volumes) {\n         if (!volume.isBPDirEmpty(bpid)) {\n-          DataNode.LOG.warn(bpid\n-              + \" has some block files, cannot delete unless forced\");\n+          LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n           throw new IOException(\"Cannot delete block pool, \"\n               + \"it contains some block files\");\n         }\n       }\n     }\n-    for (FSVolume volume : volumes.volumes) {\n+    for (FsVolumeImpl volume : volumes.volumes) {\n       volume.deleteBPDirectories(bpid, force);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FsVolumeImpl volume : volumes.volumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          LOG.warn(bpid + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FsVolumeImpl volume : volumes.volumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e31bf675dd92183a9a74a66b7caf1a080581d65": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3021. Use generic type to declare FSDatasetInterface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295929 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/03/12 1:58 PM",
      "commitName": "9e31bf675dd92183a9a74a66b7caf1a080581d65",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "22/02/12 9:47 AM",
      "commitNameOld": "efbc58f30c8e8d9f26c6a82d32d53716fb2b222a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 8.17,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n     if (!force) {\n-      for (FSVolumeInterface volume : volumes.volumes) {\n-        if (!((FSVolume)volume).isBPDirEmpty(bpid)) {\n+      for (FSVolume volume : volumes.volumes) {\n+        if (!volume.isBPDirEmpty(bpid)) {\n           DataNode.LOG.warn(bpid\n               + \" has some block files, cannot delete unless forced\");\n           throw new IOException(\"Cannot delete block pool, \"\n               + \"it contains some block files\");\n         }\n       }\n     }\n-    for (FSVolumeInterface volume : volumes.volumes) {\n-      ((FSVolume)volume).deleteBPDirectories(bpid, force);\n+    for (FSVolume volume : volumes.volumes) {\n+      volume.deleteBPDirectories(bpid, force);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FSVolume volume : volumes.volumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          DataNode.LOG.warn(bpid\n              + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FSVolume volume : volumes.volumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {}
    },
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2887. FSVolume, is a part of FSDatasetInterface implementation, should not be referred outside FSDataset.  A new FSVolumeInterface is defined.  The BlockVolumeChoosingPolicy.chooseVolume(..) method signature is also updated.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/02/12 12:58 PM",
      "commitName": "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "02/02/12 11:26 PM",
      "commitNameOld": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.56,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public synchronized void deleteBlockPool(String bpid, boolean force)\n       throws IOException {\n     if (!force) {\n-      for (FSVolume volume : volumes.volumes) {\n-        if (!volume.isBPDirEmpty(bpid)) {\n+      for (FSVolumeInterface volume : volumes.volumes) {\n+        if (!((FSVolume)volume).isBPDirEmpty(bpid)) {\n           DataNode.LOG.warn(bpid\n               + \" has some block files, cannot delete unless forced\");\n           throw new IOException(\"Cannot delete block pool, \"\n               + \"it contains some block files\");\n         }\n       }\n     }\n-    for (FSVolume volume : volumes.volumes) {\n-      volume.deleteBPDirectories(bpid, force);\n+    for (FSVolumeInterface volume : volumes.volumes) {\n+      ((FSVolume)volume).deleteBPDirectories(bpid, force);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FSVolumeInterface volume : volumes.volumes) {\n        if (!((FSVolume)volume).isBPDirEmpty(bpid)) {\n          DataNode.LOG.warn(bpid\n              + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FSVolumeInterface volume : volumes.volumes) {\n      ((FSVolume)volume).deleteBPDirectories(bpid, force);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FSVolume volume : volumes.volumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          DataNode.LOG.warn(bpid\n              + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FSVolume volume : volumes.volumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FSVolume volume : volumes.volumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          DataNode.LOG.warn(bpid\n              + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FSVolume volume : volumes.volumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized void deleteBlockPool(String bpid, boolean force)\n+      throws IOException {\n+    if (!force) {\n+      for (FSVolume volume : volumes.volumes) {\n+        if (!volume.isBPDirEmpty(bpid)) {\n+          DataNode.LOG.warn(bpid\n+              + \" has some block files, cannot delete unless forced\");\n+          throw new IOException(\"Cannot delete block pool, \"\n+              + \"it contains some block files\");\n+        }\n+      }\n+    }\n+    for (FSVolume volume : volumes.volumes) {\n+      volume.deleteBPDirectories(bpid, force);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteBlockPool(String bpid, boolean force)\n      throws IOException {\n    if (!force) {\n      for (FSVolume volume : volumes.volumes) {\n        if (!volume.isBPDirEmpty(bpid)) {\n          DataNode.LOG.warn(bpid\n              + \" has some block files, cannot delete unless forced\");\n          throw new IOException(\"Cannot delete block pool, \"\n              + \"it contains some block files\");\n        }\n      }\n    }\n    for (FSVolume volume : volumes.volumes) {\n      volume.deleteBPDirectories(bpid, force);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}