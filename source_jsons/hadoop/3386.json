{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenAspect.java",
  "functionName": "getInstance",
  "functionId": "getInstance___token-Token__?____conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
  "functionStartLine": 72,
  "functionEndLine": 85,
  "numCommitsSeen": 15,
  "timeTaken": 1880,
  "changeHistory": [
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "aa4a045925649949b2eaa5b7238edbd742cbcf9a",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
    "fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e",
    "1c211f6749d2bd4113801aa39ca85ab731d2ef56"
  ],
  "changeHistoryShort": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ybodychange",
    "aa4a045925649949b2eaa5b7238edbd742cbcf9a": "Ybodychange",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": "Ybodychange",
    "fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e": "Ybodychange",
    "1c211f6749d2bd4113801aa39ca85ab731d2ef56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n                                                 Configuration conf)\n            throws IOException {\n      final URI uri;\n      final String scheme \u003d getSchemeByKind(token.getKind());\n      if (HAUtilClient.isTokenForLogicalUri(token)) {\n        uri \u003d HAUtilClient.getServiceUriFromToken(scheme, token);\n      } else {\n        final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr\n                (token);\n        uri \u003d URI.create(scheme + \"://\" + NetUtils.getHostPortString(address));\n      }\n      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java"
      }
    },
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "20/04/15 12:36 AM",
      "commitNameOld": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n                                                  Configuration conf)\n             throws IOException {\n       final URI uri;\n       final String scheme \u003d getSchemeByKind(token.getKind());\n-      if (HAUtil.isTokenForLogicalUri(token)) {\n-        uri \u003d HAUtil.getServiceUriFromToken(scheme, token);\n+      if (HAUtilClient.isTokenForLogicalUri(token)) {\n+        uri \u003d HAUtilClient.getServiceUriFromToken(scheme, token);\n       } else {\n         final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr\n                 (token);\n         uri \u003d URI.create(scheme + \"://\" + NetUtils.getHostPortString(address));\n       }\n       return (TokenManagementDelegator) FileSystem.get(uri, conf);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n                                                 Configuration conf)\n            throws IOException {\n      final URI uri;\n      final String scheme \u003d getSchemeByKind(token.getKind());\n      if (HAUtilClient.isTokenForLogicalUri(token)) {\n        uri \u003d HAUtilClient.getServiceUriFromToken(scheme, token);\n      } else {\n        final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr\n                (token);\n        uri \u003d URI.create(scheme + \"://\" + NetUtils.getHostPortString(address));\n      }\n      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
      "extendedDetails": {}
    },
    "aa4a045925649949b2eaa5b7238edbd742cbcf9a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6127. WebHDFS tokens cannot be renewed in HA setup. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579546 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/03/14 11:47 PM",
      "commitName": "aa4a045925649949b2eaa5b7238edbd742cbcf9a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/02/14 10:39 AM",
      "commitNameOld": "5c381ade4e6b6428b316c41ad5f5bc145829473d",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 19.51,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,14 @@\n     private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n-        Configuration conf) throws IOException {\n-      final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n-      Text kind \u003d token.getKind();\n+                                                 Configuration conf)\n+            throws IOException {\n       final URI uri;\n-\n-      if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n-        uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n-      } else if (kind.equals(HsftpFileSystem.TOKEN_KIND)) {\n-        uri \u003d DFSUtil.createUri(HsftpFileSystem.SCHEME, address);\n-      } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n-        uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n-      } else if (kind.equals(SWebHdfsFileSystem.TOKEN_KIND)) {\n-        uri \u003d DFSUtil.createUri(SWebHdfsFileSystem.SCHEME, address);\n+      final String scheme \u003d getSchemeByKind(token.getKind());\n+      if (HAUtil.isTokenForLogicalUri(token)) {\n+        uri \u003d HAUtil.getServiceUriFromToken(scheme, token);\n       } else {\n-        throw new IllegalArgumentException(\"Unsupported scheme\");\n+        final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr\n+                (token);\n+        uri \u003d URI.create(scheme + \"://\" + NetUtils.getHostPortString(address));\n       }\n       return (TokenManagementDelegator) FileSystem.get(uri, conf);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n                                                 Configuration conf)\n            throws IOException {\n      final URI uri;\n      final String scheme \u003d getSchemeByKind(token.getKind());\n      if (HAUtil.isTokenForLogicalUri(token)) {\n        uri \u003d HAUtil.getServiceUriFromToken(scheme, token);\n      } else {\n        final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr\n                (token);\n        uri \u003d URI.create(scheme + \"://\" + NetUtils.getHostPortString(address));\n      }\n      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
      "extendedDetails": {}
    },
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3987. Support webhdfs over HTTPS. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543962 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/11/13 1:51 PM",
      "commitName": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "15/11/13 5:00 PM",
      "commitNameOld": "fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n     private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n         Configuration conf) throws IOException {\n       final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n       Text kind \u003d token.getKind();\n       final URI uri;\n \n       if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n         uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n       } else if (kind.equals(HsftpFileSystem.TOKEN_KIND)) {\n         uri \u003d DFSUtil.createUri(HsftpFileSystem.SCHEME, address);\n       } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n         uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n+      } else if (kind.equals(SWebHdfsFileSystem.TOKEN_KIND)) {\n+        uri \u003d DFSUtil.createUri(SWebHdfsFileSystem.SCHEME, address);\n       } else {\n         throw new IllegalArgumentException(\"Unsupported scheme\");\n       }\n       return (TokenManagementDelegator) FileSystem.get(uri, conf);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n        Configuration conf) throws IOException {\n      final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n      Text kind \u003d token.getKind();\n      final URI uri;\n\n      if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n      } else if (kind.equals(HsftpFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(HsftpFileSystem.SCHEME, address);\n      } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n      } else if (kind.equals(SWebHdfsFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(SWebHdfsFileSystem.SCHEME, address);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported scheme\");\n      }\n      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
      "extendedDetails": {}
    },
    "fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5502. Fix HTTPS support in HsftpFileSystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542438 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/11/13 5:00 PM",
      "commitName": "fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "14/11/13 6:11 PM",
      "commitNameOld": "620890fcc0fb8680a3ad282b0b7b969277deb766",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n     private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n         Configuration conf) throws IOException {\n       final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n       Text kind \u003d token.getKind();\n       final URI uri;\n+\n       if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n         uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n+      } else if (kind.equals(HsftpFileSystem.TOKEN_KIND)) {\n+        uri \u003d DFSUtil.createUri(HsftpFileSystem.SCHEME, address);\n       } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n         uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n       } else {\n         throw new IllegalArgumentException(\"Unsupported scheme\");\n       }\n       return (TokenManagementDelegator) FileSystem.get(uri, conf);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n        Configuration conf) throws IOException {\n      final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n      Text kind \u003d token.getKind();\n      final URI uri;\n\n      if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n      } else if (kind.equals(HsftpFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(HsftpFileSystem.SCHEME, address);\n      } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported scheme\");\n      }\n      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
      "extendedDetails": {}
    },
    "1c211f6749d2bd4113801aa39ca85ab731d2ef56": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5440. Extract the logic of handling delegation tokens in HftpFileSystem to the TokenAspect class. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541665 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/11/13 11:25 AM",
      "commitName": "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,14 @@\n+    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n+        Configuration conf) throws IOException {\n+      final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n+      Text kind \u003d token.getKind();\n+      final URI uri;\n+      if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n+        uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n+      } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n+        uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n+      } else {\n+        throw new IllegalArgumentException(\"Unsupported scheme\");\n+      }\n+      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private TokenManagementDelegator getInstance(Token\u003c?\u003e token,\n        Configuration conf) throws IOException {\n      final InetSocketAddress address \u003d SecurityUtil.getTokenServiceAddr(token);\n      Text kind \u003d token.getKind();\n      final URI uri;\n      if (kind.equals(HftpFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(HftpFileSystem.SCHEME, address);\n      } else if (kind.equals(WebHdfsFileSystem.TOKEN_KIND)) {\n        uri \u003d DFSUtil.createUri(WebHdfsFileSystem.SCHEME, address);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported scheme\");\n      }\n      return (TokenManagementDelegator) FileSystem.get(uri, conf);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java"
    }
  }
}