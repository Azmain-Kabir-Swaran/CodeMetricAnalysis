{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineServiceV1Publisher.java",
  "functionName": "appCreated",
  "functionId": "appCreated___app-RMApp__createdTime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
  "functionStartLine": 74,
  "functionEndLine": 122,
  "numCommitsSeen": 14,
  "timeTaken": 1922,
  "changeHistory": [
    "1634de0fc1430d86b7688d16259a81462fba482f",
    "a926f895c11cd69cf2117c3b970304f3f1f53d92",
    "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
    "34f02f07d5bf9fbfa1d07d1b219225c298539105",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4"
  ],
  "changeHistoryShort": {
    "1634de0fc1430d86b7688d16259a81462fba482f": "Ybodychange",
    "a926f895c11cd69cf2117c3b970304f3f1f53d92": "Ybodychange",
    "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d": "Ybodychange",
    "34f02f07d5bf9fbfa1d07d1b219225c298539105": "Ybodychange",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1634de0fc1430d86b7688d16259a81462fba482f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8205. Application State is not updated to ATS if AM launching is delayed. Contributed by Rohith Sharma K S.\n",
      "commitDate": "26/04/18 9:56 PM",
      "commitName": "1634de0fc1430d86b7688d16259a81462fba482f",
      "commitAuthor": "Sunil G",
      "commitDateOld": "22/11/16 1:19 AM",
      "commitNameOld": "a926f895c11cd69cf2117c3b970304f3f1f53d92",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 520.82,
      "commitsBetweenForRepo": 3941,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,49 @@\n   public void appCreated(RMApp app, long createdTime) {\n     TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n     entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n         app.getApplicationType());\n     entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n     entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n         app.getQueue());\n     entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n         app.getSubmitTime());\n     entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n         app.getApplicationTags());\n     entityInfo.put(\n         ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n         app.getApplicationSubmissionContext().getUnmanagedAM());\n     entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n         app.getApplicationPriority().getPriority());\n     entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n         app.getAmNodeLabelExpression());\n     entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n         app.getAppNodeLabelExpression());\n     if (app.getCallerContext() !\u003d null) {\n       if (app.getCallerContext().getContext() !\u003d null) {\n         entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n             app.getCallerContext().getContext());\n       }\n       if (app.getCallerContext().getSignature() !\u003d null) {\n         entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n             app.getCallerContext().getSignature());\n       }\n     }\n \n     ContainerLaunchContext amContainerSpec \u003d\n         app.getApplicationSubmissionContext().getAMContainerSpec();\n     entityInfo.put(ApplicationMetricsConstants.AM_CONTAINER_LAUNCH_COMMAND,\n         amContainerSpec.getCommands());\n+    entityInfo.put(ApplicationMetricsConstants.STATE_EVENT_INFO,\n+        RMServerUtils.createApplicationState(app.getState()).toString());\n \n     entity.setOtherInfo(entityInfo);\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appCreated(RMApp app, long createdTime) {\n    TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n    entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n        app.getApplicationType());\n    entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n    entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n        app.getQueue());\n    entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n        app.getSubmitTime());\n    entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n        app.getApplicationTags());\n    entityInfo.put(\n        ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n        app.getApplicationSubmissionContext().getUnmanagedAM());\n    entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n        app.getApplicationPriority().getPriority());\n    entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n        app.getAmNodeLabelExpression());\n    entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n        app.getAppNodeLabelExpression());\n    if (app.getCallerContext() !\u003d null) {\n      if (app.getCallerContext().getContext() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n            app.getCallerContext().getContext());\n      }\n      if (app.getCallerContext().getSignature() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n            app.getCallerContext().getSignature());\n      }\n    }\n\n    ContainerLaunchContext amContainerSpec \u003d\n        app.getApplicationSubmissionContext().getAMContainerSpec();\n    entityInfo.put(ApplicationMetricsConstants.AM_CONTAINER_LAUNCH_COMMAND,\n        amContainerSpec.getCommands());\n    entityInfo.put(ApplicationMetricsConstants.STATE_EVENT_INFO,\n        RMServerUtils.createApplicationState(app.getState()).toString());\n\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "a926f895c11cd69cf2117c3b970304f3f1f53d92": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5865. Retrospect updateApplicationPriority api to handle state store exception in align with YARN-5611. Contributed by Sunil G.\n",
      "commitDate": "22/11/16 1:19 AM",
      "commitName": "a926f895c11cd69cf2117c3b970304f3f1f53d92",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "10/11/16 2:35 PM",
      "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 11.45,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n   public void appCreated(RMApp app, long createdTime) {\n     TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n     entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n         app.getApplicationType());\n     entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n     entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n         app.getQueue());\n     entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n         app.getSubmitTime());\n     entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n         app.getApplicationTags());\n     entityInfo.put(\n         ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n         app.getApplicationSubmissionContext().getUnmanagedAM());\n     entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n-        app.getApplicationSubmissionContext().getPriority().getPriority());\n+        app.getApplicationPriority().getPriority());\n     entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n         app.getAmNodeLabelExpression());\n     entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n         app.getAppNodeLabelExpression());\n     if (app.getCallerContext() !\u003d null) {\n       if (app.getCallerContext().getContext() !\u003d null) {\n         entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n             app.getCallerContext().getContext());\n       }\n       if (app.getCallerContext().getSignature() !\u003d null) {\n         entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n             app.getCallerContext().getSignature());\n       }\n     }\n \n     ContainerLaunchContext amContainerSpec \u003d\n         app.getApplicationSubmissionContext().getAMContainerSpec();\n     entityInfo.put(ApplicationMetricsConstants.AM_CONTAINER_LAUNCH_COMMAND,\n         amContainerSpec.getCommands());\n \n     entity.setOtherInfo(entityInfo);\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appCreated(RMApp app, long createdTime) {\n    TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n    entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n        app.getApplicationType());\n    entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n    entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n        app.getQueue());\n    entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n        app.getSubmitTime());\n    entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n        app.getApplicationTags());\n    entityInfo.put(\n        ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n        app.getApplicationSubmissionContext().getUnmanagedAM());\n    entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n        app.getApplicationPriority().getPriority());\n    entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n        app.getAmNodeLabelExpression());\n    entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n        app.getAppNodeLabelExpression());\n    if (app.getCallerContext() !\u003d null) {\n      if (app.getCallerContext().getContext() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n            app.getCallerContext().getContext());\n      }\n      if (app.getCallerContext().getSignature() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n            app.getCallerContext().getSignature());\n      }\n    }\n\n    ContainerLaunchContext amContainerSpec \u003d\n        app.getApplicationSubmissionContext().getAMContainerSpec();\n    entityInfo.put(ApplicationMetricsConstants.AM_CONTAINER_LAUNCH_COMMAND,\n        amContainerSpec.getCommands());\n\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5599. Publish AM launch command to ATS (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "28/09/16 3:40 AM",
      "commitName": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "6cf6ab7b780de2b0c2c9ea730e1f366965a0d682",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 79.79,
      "commitsBetweenForRepo": 506,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,47 @@\n   public void appCreated(RMApp app, long createdTime) {\n     TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n     entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n         app.getApplicationType());\n     entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n     entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n         app.getQueue());\n     entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n         app.getSubmitTime());\n     entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n         app.getApplicationTags());\n     entityInfo.put(\n         ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n         app.getApplicationSubmissionContext().getUnmanagedAM());\n     entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n         app.getApplicationSubmissionContext().getPriority().getPriority());\n     entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n         app.getAmNodeLabelExpression());\n     entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n         app.getAppNodeLabelExpression());\n     if (app.getCallerContext() !\u003d null) {\n       if (app.getCallerContext().getContext() !\u003d null) {\n         entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n             app.getCallerContext().getContext());\n       }\n       if (app.getCallerContext().getSignature() !\u003d null) {\n         entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n             app.getCallerContext().getSignature());\n       }\n     }\n \n+    ContainerLaunchContext amContainerSpec \u003d\n+        app.getApplicationSubmissionContext().getAMContainerSpec();\n+    entityInfo.put(ApplicationMetricsConstants.AM_CONTAINER_LAUNCH_COMMAND,\n+        amContainerSpec.getCommands());\n+\n     entity.setOtherInfo(entityInfo);\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appCreated(RMApp app, long createdTime) {\n    TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n    entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n        app.getApplicationType());\n    entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n    entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n        app.getQueue());\n    entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n        app.getSubmitTime());\n    entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n        app.getApplicationTags());\n    entityInfo.put(\n        ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n        app.getApplicationSubmissionContext().getUnmanagedAM());\n    entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n        app.getApplicationSubmissionContext().getPriority().getPriority());\n    entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n        app.getAmNodeLabelExpression());\n    entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n        app.getAppNodeLabelExpression());\n    if (app.getCallerContext() !\u003d null) {\n      if (app.getCallerContext().getContext() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n            app.getCallerContext().getContext());\n      }\n      if (app.getCallerContext().getSignature() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n            app.getCallerContext().getSignature());\n      }\n    }\n\n    ContainerLaunchContext amContainerSpec \u003d\n        app.getApplicationSubmissionContext().getAMContainerSpec();\n    entityInfo.put(ApplicationMetricsConstants.AM_CONTAINER_LAUNCH_COMMAND,\n        amContainerSpec.getCommands());\n\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "34f02f07d5bf9fbfa1d07d1b219225c298539105": {
      "type": "Ybodychange",
      "commitMessage": "Rebase to latest trunk\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "34f02f07d5bf9fbfa1d07d1b219225c298539105",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,42 @@\n   public void appCreated(RMApp app, long createdTime) {\n     TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n     entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n         app.getApplicationType());\n     entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n     entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n         app.getQueue());\n     entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n         app.getSubmitTime());\n     entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n         app.getApplicationTags());\n     entityInfo.put(\n         ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n         app.getApplicationSubmissionContext().getUnmanagedAM());\n     entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n         app.getApplicationSubmissionContext().getPriority().getPriority());\n     entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n         app.getAmNodeLabelExpression());\n     entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n         app.getAppNodeLabelExpression());\n+    if (app.getCallerContext() !\u003d null) {\n+      if (app.getCallerContext().getContext() !\u003d null) {\n+        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n+            app.getCallerContext().getContext());\n+      }\n+      if (app.getCallerContext().getSignature() !\u003d null) {\n+        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n+            app.getCallerContext().getSignature());\n+      }\n+    }\n+\n     entity.setOtherInfo(entityInfo);\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appCreated(RMApp app, long createdTime) {\n    TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n    entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n        app.getApplicationType());\n    entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n    entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n        app.getQueue());\n    entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n        app.getSubmitTime());\n    entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n        app.getApplicationTags());\n    entityInfo.put(\n        ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n        app.getApplicationSubmissionContext().getUnmanagedAM());\n    entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n        app.getApplicationSubmissionContext().getPriority().getPriority());\n    entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n        app.getAmNodeLabelExpression());\n    entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n        app.getAppNodeLabelExpression());\n    if (app.getCallerContext() !\u003d null) {\n      if (app.getCallerContext().getContext() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_CONTEXT,\n            app.getCallerContext().getContext());\n      }\n      if (app.getCallerContext().getSignature() !\u003d null) {\n        entityInfo.put(ApplicationMetricsConstants.YARN_APP_CALLER_SIGNATURE,\n            app.getCallerContext().getSignature());\n      }\n    }\n\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,31 @@\n+  public void appCreated(RMApp app, long createdTime) {\n+    TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n+    entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n+        app.getApplicationType());\n+    entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n+    entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n+        app.getQueue());\n+    entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n+        app.getSubmitTime());\n+    entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n+        app.getApplicationTags());\n+    entityInfo.put(\n+        ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n+        app.getApplicationSubmissionContext().getUnmanagedAM());\n+    entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n+        app.getApplicationSubmissionContext().getPriority().getPriority());\n+    entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n+        app.getAmNodeLabelExpression());\n+    entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n+        app.getAppNodeLabelExpression());\n+    entity.setOtherInfo(entityInfo);\n+    TimelineEvent tEvent \u003d new TimelineEvent();\n+    tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n+    tEvent.setTimestamp(createdTime);\n+\n+    entity.addEvent(tEvent);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void appCreated(RMApp app, long createdTime) {\n    TimelineEntity entity \u003d createApplicationEntity(app.getApplicationId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO, app.getName());\n    entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,\n        app.getApplicationType());\n    entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO, app.getUser());\n    entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,\n        app.getQueue());\n    entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,\n        app.getSubmitTime());\n    entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,\n        app.getApplicationTags());\n    entityInfo.put(\n        ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,\n        app.getApplicationSubmissionContext().getUnmanagedAM());\n    entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,\n        app.getApplicationSubmissionContext().getPriority().getPriority());\n    entityInfo.put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,\n        app.getAmNodeLabelExpression());\n    entityInfo.put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,\n        app.getAppNodeLabelExpression());\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, app.getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java"
    }
  }
}