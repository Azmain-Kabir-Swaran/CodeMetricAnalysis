{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "fetchDatanodes",
  "functionId": "fetchDatanodes___live-List__DatanodeDescriptor__(modifiers-final)__dead-List__DatanodeDescriptor__(modifiers-final)__removeDecommissionNode-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 1381,
  "functionEndLine": 1411,
  "numCommitsSeen": 192,
  "timeTaken": 4633,
  "changeHistory": [
    "24d1cf9ac681fadaf2a3614a24b06327d5d5f53e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "371f4a59059322000a40eb4bdf5386b96b626ece",
    "969a263188f7015261719fe45fa1505121ebb80e"
  ],
  "changeHistoryShort": {
    "24d1cf9ac681fadaf2a3614a24b06327d5d5f53e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "371f4a59059322000a40eb4bdf5386b96b626ece": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "969a263188f7015261719fe45fa1505121ebb80e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "24d1cf9ac681fadaf2a3614a24b06327d5d5f53e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5693. Few NN metrics data points were collected via JMX when NN is under heavy load. Contributed by Ming Ma.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589620 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/14 12:24 AM",
      "commitName": "24d1cf9ac681fadaf2a3614a24b06327d5d5f53e",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "23/04/14 1:13 PM",
      "commitNameOld": "876fd8ab7913a259ff9f69c16cc2d9af46ad3f9b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.47,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,31 @@\n   public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n       final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n     if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n     }\n \n-    namesystem.readLock();\n-    try {\n-      final List\u003cDatanodeDescriptor\u003e results \u003d\n-          getDatanodeListForReport(DatanodeReportType.ALL);    \n-      for(DatanodeDescriptor node : results) {\n-        if (isDatanodeDead(node)) {\n-          if (dead !\u003d null) {\n-            dead.add(node);\n-          }\n-        } else {\n-          if (live !\u003d null) {\n-            live.add(node);\n-          }\n+    // There is no need to take namesystem reader lock as\n+    // getDatanodeListForReport will synchronize on datanodeMap\n+    final List\u003cDatanodeDescriptor\u003e results \u003d\n+        getDatanodeListForReport(DatanodeReportType.ALL);\n+    for(DatanodeDescriptor node : results) {\n+      if (isDatanodeDead(node)) {\n+        if (dead !\u003d null) {\n+          dead.add(node);\n+        }\n+      } else {\n+        if (live !\u003d null) {\n+          live.add(node);\n         }\n       }\n-    } finally {\n-      namesystem.readUnlock();\n     }\n     \n     if (removeDecommissionNode) {\n       if (live !\u003d null) {\n         removeDecomNodeFromList(live);\n       }\n       if (dead !\u003d null) {\n         removeDecomNodeFromList(dead);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n    }\n\n    // There is no need to take namesystem reader lock as\n    // getDatanodeListForReport will synchronize on datanodeMap\n    final List\u003cDatanodeDescriptor\u003e results \u003d\n        getDatanodeListForReport(DatanodeReportType.ALL);\n    for(DatanodeDescriptor node : results) {\n      if (isDatanodeDead(node)) {\n        if (dead !\u003d null) {\n          dead.add(node);\n        }\n      } else {\n        if (live !\u003d null) {\n          live.add(node);\n        }\n      }\n    }\n    \n    if (removeDecommissionNode) {\n      if (live !\u003d null) {\n        removeDecomNodeFromList(live);\n      }\n      if (dead !\u003d null) {\n        removeDecomNodeFromList(dead);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n    }\n\n    namesystem.readLock();\n    try {\n      final List\u003cDatanodeDescriptor\u003e results \u003d\n          getDatanodeListForReport(DatanodeReportType.ALL);    \n      for(DatanodeDescriptor node : results) {\n        if (isDatanodeDead(node)) {\n          if (dead !\u003d null) {\n            dead.add(node);\n          }\n        } else {\n          if (live !\u003d null) {\n            live.add(node);\n          }\n        }\n      }\n    } finally {\n      namesystem.readUnlock();\n    }\n    \n    if (removeDecommissionNode) {\n      if (live !\u003d null) {\n        removeDecomNodeFromList(live);\n      }\n      if (dead !\u003d null) {\n        removeDecomNodeFromList(dead);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n    }\n\n    namesystem.readLock();\n    try {\n      final List\u003cDatanodeDescriptor\u003e results \u003d\n          getDatanodeListForReport(DatanodeReportType.ALL);    \n      for(DatanodeDescriptor node : results) {\n        if (isDatanodeDead(node)) {\n          if (dead !\u003d null) {\n            dead.add(node);\n          }\n        } else {\n          if (live !\u003d null) {\n            live.add(node);\n          }\n        }\n      }\n    } finally {\n      namesystem.readUnlock();\n    }\n    \n    if (removeDecommissionNode) {\n      if (live !\u003d null) {\n        removeDecomNodeFromList(live);\n      }\n      if (dead !\u003d null) {\n        removeDecomNodeFromList(dead);\n      }\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
      }
    },
    "371f4a59059322000a40eb4bdf5386b96b626ece": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/11 3:06 AM",
      "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,34 @@\n-  public void fetchDatanodess(final List\u003cDatanodeDescriptor\u003e live, \n-      final List\u003cDatanodeDescriptor\u003e dead) {\n-    final List\u003cDatanodeDescriptor\u003e results \u003d\n-        getDatanodeListForReport(DatanodeReportType.ALL);    \n-    for(DatanodeDescriptor node : results) {\n-      if (isDatanodeDead(node))\n-        dead.add(node);\n-      else\n-        live.add(node);\n+  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n+      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n+    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n+      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n+    }\n+\n+    namesystem.readLock();\n+    try {\n+      final List\u003cDatanodeDescriptor\u003e results \u003d\n+          getDatanodeListForReport(DatanodeReportType.ALL);    \n+      for(DatanodeDescriptor node : results) {\n+        if (isDatanodeDead(node)) {\n+          if (dead !\u003d null) {\n+            dead.add(node);\n+          }\n+        } else {\n+          if (live !\u003d null) {\n+            live.add(node);\n+          }\n+        }\n+      }\n+    } finally {\n+      namesystem.readUnlock();\n+    }\n+    \n+    if (removeDecommissionNode) {\n+      if (live !\u003d null) {\n+        removeDecomNodeFromList(live);\n+      }\n+      if (dead !\u003d null) {\n+        removeDecomNodeFromList(dead);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n    }\n\n    namesystem.readLock();\n    try {\n      final List\u003cDatanodeDescriptor\u003e results \u003d\n          getDatanodeListForReport(DatanodeReportType.ALL);    \n      for(DatanodeDescriptor node : results) {\n        if (isDatanodeDead(node)) {\n          if (dead !\u003d null) {\n            dead.add(node);\n          }\n        } else {\n          if (live !\u003d null) {\n            live.add(node);\n          }\n        }\n      }\n    } finally {\n      namesystem.readUnlock();\n    }\n    \n    if (removeDecommissionNode) {\n      if (live !\u003d null) {\n        removeDecomNodeFromList(live);\n      }\n      if (dead !\u003d null) {\n        removeDecomNodeFromList(dead);\n      }\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {
            "oldValue": "fetchDatanodess",
            "newValue": "fetchDatanodes"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,34 @@\n-  public void fetchDatanodess(final List\u003cDatanodeDescriptor\u003e live, \n-      final List\u003cDatanodeDescriptor\u003e dead) {\n-    final List\u003cDatanodeDescriptor\u003e results \u003d\n-        getDatanodeListForReport(DatanodeReportType.ALL);    \n-    for(DatanodeDescriptor node : results) {\n-      if (isDatanodeDead(node))\n-        dead.add(node);\n-      else\n-        live.add(node);\n+  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n+      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n+    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n+      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n+    }\n+\n+    namesystem.readLock();\n+    try {\n+      final List\u003cDatanodeDescriptor\u003e results \u003d\n+          getDatanodeListForReport(DatanodeReportType.ALL);    \n+      for(DatanodeDescriptor node : results) {\n+        if (isDatanodeDead(node)) {\n+          if (dead !\u003d null) {\n+            dead.add(node);\n+          }\n+        } else {\n+          if (live !\u003d null) {\n+            live.add(node);\n+          }\n+        }\n+      }\n+    } finally {\n+      namesystem.readUnlock();\n+    }\n+    \n+    if (removeDecommissionNode) {\n+      if (live !\u003d null) {\n+        removeDecomNodeFromList(live);\n+      }\n+      if (dead !\u003d null) {\n+        removeDecomNodeFromList(dead);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n    }\n\n    namesystem.readLock();\n    try {\n      final List\u003cDatanodeDescriptor\u003e results \u003d\n          getDatanodeListForReport(DatanodeReportType.ALL);    \n      for(DatanodeDescriptor node : results) {\n        if (isDatanodeDead(node)) {\n          if (dead !\u003d null) {\n            dead.add(node);\n          }\n        } else {\n          if (live !\u003d null) {\n            live.add(node);\n          }\n        }\n      }\n    } finally {\n      namesystem.readUnlock();\n    }\n    \n    if (removeDecommissionNode) {\n      if (live !\u003d null) {\n        removeDecomNodeFromList(live);\n      }\n      if (dead !\u003d null) {\n        removeDecomNodeFromList(dead);\n      }\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {
            "oldValue": "[live-List\u003cDatanodeDescriptor\u003e(modifiers-final), dead-List\u003cDatanodeDescriptor\u003e(modifiers-final)]",
            "newValue": "[live-List\u003cDatanodeDescriptor\u003e(modifiers-final), dead-List\u003cDatanodeDescriptor\u003e(modifiers-final), removeDecommissionNode-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,34 @@\n-  public void fetchDatanodess(final List\u003cDatanodeDescriptor\u003e live, \n-      final List\u003cDatanodeDescriptor\u003e dead) {\n-    final List\u003cDatanodeDescriptor\u003e results \u003d\n-        getDatanodeListForReport(DatanodeReportType.ALL);    \n-    for(DatanodeDescriptor node : results) {\n-      if (isDatanodeDead(node))\n-        dead.add(node);\n-      else\n-        live.add(node);\n+  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n+      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n+    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n+      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n+    }\n+\n+    namesystem.readLock();\n+    try {\n+      final List\u003cDatanodeDescriptor\u003e results \u003d\n+          getDatanodeListForReport(DatanodeReportType.ALL);    \n+      for(DatanodeDescriptor node : results) {\n+        if (isDatanodeDead(node)) {\n+          if (dead !\u003d null) {\n+            dead.add(node);\n+          }\n+        } else {\n+          if (live !\u003d null) {\n+            live.add(node);\n+          }\n+        }\n+      }\n+    } finally {\n+      namesystem.readUnlock();\n+    }\n+    \n+    if (removeDecommissionNode) {\n+      if (live !\u003d null) {\n+        removeDecomNodeFromList(live);\n+      }\n+      if (dead !\u003d null) {\n+        removeDecomNodeFromList(dead);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void fetchDatanodes(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead, final boolean removeDecommissionNode) {\n    if (live \u003d\u003d null \u0026\u0026 dead \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Both live and dead lists are null\");\n    }\n\n    namesystem.readLock();\n    try {\n      final List\u003cDatanodeDescriptor\u003e results \u003d\n          getDatanodeListForReport(DatanodeReportType.ALL);    \n      for(DatanodeDescriptor node : results) {\n        if (isDatanodeDead(node)) {\n          if (dead !\u003d null) {\n            dead.add(node);\n          }\n        } else {\n          if (live !\u003d null) {\n            live.add(node);\n          }\n        }\n      }\n    } finally {\n      namesystem.readUnlock();\n    }\n    \n    if (removeDecommissionNode) {\n      if (live !\u003d null) {\n        removeDecomNodeFromList(live);\n      }\n      if (dead !\u003d null) {\n        removeDecomNodeFromList(dead);\n      }\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "969a263188f7015261719fe45fa1505121ebb80e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2191.  Move datanodeMap from FSNamesystem to DatanodeManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151339 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/11 10:46 PM",
      "commitName": "969a263188f7015261719fe45fa1505121ebb80e",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,11 @@\n+  public void fetchDatanodess(final List\u003cDatanodeDescriptor\u003e live, \n+      final List\u003cDatanodeDescriptor\u003e dead) {\n+    final List\u003cDatanodeDescriptor\u003e results \u003d\n+        getDatanodeListForReport(DatanodeReportType.ALL);    \n+    for(DatanodeDescriptor node : results) {\n+      if (isDatanodeDead(node))\n+        dead.add(node);\n+      else\n+        live.add(node);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void fetchDatanodess(final List\u003cDatanodeDescriptor\u003e live, \n      final List\u003cDatanodeDescriptor\u003e dead) {\n    final List\u003cDatanodeDescriptor\u003e results \u003d\n        getDatanodeListForReport(DatanodeReportType.ALL);    \n    for(DatanodeDescriptor node : results) {\n      if (isDatanodeDead(node))\n        dead.add(node);\n      else\n        live.add(node);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
    }
  }
}