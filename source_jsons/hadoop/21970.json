{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CryptoUtils.java",
  "functionName": "wrapIfNecessary",
  "functionId": "wrapIfNecessary___conf-Configuration__out-FSDataOutputStream",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/CryptoUtils.java",
  "functionStartLine": 111,
  "functionEndLine": 114,
  "numCommitsSeen": 7,
  "timeTaken": 1514,
  "changeHistory": [
    "9f192cc5ac4a6145e2eeaecba0a754d31e601898",
    "6b710a42e00acca405e085724c89cda016cf7442",
    "95986dd2fb4527c43fa4c088c61fb7b4bd794d23"
  ],
  "changeHistoryShort": {
    "9f192cc5ac4a6145e2eeaecba0a754d31e601898": "Ybodychange",
    "6b710a42e00acca405e085724c89cda016cf7442": "Ybodychange",
    "95986dd2fb4527c43fa4c088c61fb7b4bd794d23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9f192cc5ac4a6145e2eeaecba0a754d31e601898": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6628. Potential memory leak in CryptoOutputStream. Contributed by Mariappan Asokan\n",
      "commitDate": "09/09/16 11:12 AM",
      "commitName": "9f192cc5ac4a6145e2eeaecba0a754d31e601898",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "14/05/15 4:07 PM",
      "commitNameOld": "6b710a42e00acca405e085724c89cda016cf7442",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 483.8,
      "commitsBetweenForRepo": 3503,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,4 @@\n   public static FSDataOutputStream wrapIfNecessary(Configuration conf,\n       FSDataOutputStream out) throws IOException {\n-    if (isEncryptedSpillEnabled(conf)) {\n-      out.write(ByteBuffer.allocate(8).putLong(out.getPos()).array());\n-      byte[] iv \u003d createIV(conf);\n-      out.write(iv);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"IV written to Stream [\"\n-            + Base64.encodeBase64URLSafeString(iv) + \"]\");\n-      }\n-      return new CryptoFSDataOutputStream(out, CryptoCodec.getInstance(conf),\n-          getBufferSize(conf), getEncryptionKey(), iv);\n-    } else {\n-      return out;\n-    }\n+    return wrapIfNecessary(conf, out, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSDataOutputStream wrapIfNecessary(Configuration conf,\n      FSDataOutputStream out) throws IOException {\n    return wrapIfNecessary(conf, out, true);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/CryptoUtils.java",
      "extendedDetails": {}
    },
    "6b710a42e00acca405e085724c89cda016cf7442": {
      "type": "Ybodychange",
      "commitMessage": "Fixing MR intermediate spills. Contributed by Arun Suresh.\n",
      "commitDate": "14/05/15 4:07 PM",
      "commitName": "6b710a42e00acca405e085724c89cda016cf7442",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 72.58,
      "commitsBetweenForRepo": 717,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public static FSDataOutputStream wrapIfNecessary(Configuration conf,\n       FSDataOutputStream out) throws IOException {\n-    if (isShuffleEncrypted(conf)) {\n+    if (isEncryptedSpillEnabled(conf)) {\n       out.write(ByteBuffer.allocate(8).putLong(out.getPos()).array());\n       byte[] iv \u003d createIV(conf);\n       out.write(iv);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"IV written to Stream [\"\n             + Base64.encodeBase64URLSafeString(iv) + \"]\");\n       }\n       return new CryptoFSDataOutputStream(out, CryptoCodec.getInstance(conf),\n           getBufferSize(conf), getEncryptionKey(), iv);\n     } else {\n       return out;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSDataOutputStream wrapIfNecessary(Configuration conf,\n      FSDataOutputStream out) throws IOException {\n    if (isEncryptedSpillEnabled(conf)) {\n      out.write(ByteBuffer.allocate(8).putLong(out.getPos()).array());\n      byte[] iv \u003d createIV(conf);\n      out.write(iv);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"IV written to Stream [\"\n            + Base64.encodeBase64URLSafeString(iv) + \"]\");\n      }\n      return new CryptoFSDataOutputStream(out, CryptoCodec.getInstance(conf),\n          getBufferSize(conf), getEncryptionKey(), iv);\n    } else {\n      return out;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/CryptoUtils.java",
      "extendedDetails": {}
    },
    "95986dd2fb4527c43fa4c088c61fb7b4bd794d23": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5890. Support for encrypting Intermediate data and spills in local filesystem. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1609597 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/14 5:43 PM",
      "commitName": "95986dd2fb4527c43fa4c088c61fb7b4bd794d23",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,16 @@\n+  public static FSDataOutputStream wrapIfNecessary(Configuration conf,\n+      FSDataOutputStream out) throws IOException {\n+    if (isShuffleEncrypted(conf)) {\n+      out.write(ByteBuffer.allocate(8).putLong(out.getPos()).array());\n+      byte[] iv \u003d createIV(conf);\n+      out.write(iv);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"IV written to Stream [\"\n+            + Base64.encodeBase64URLSafeString(iv) + \"]\");\n+      }\n+      return new CryptoFSDataOutputStream(out, CryptoCodec.getInstance(conf),\n+          getBufferSize(conf), getEncryptionKey(), iv);\n+    } else {\n+      return out;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSDataOutputStream wrapIfNecessary(Configuration conf,\n      FSDataOutputStream out) throws IOException {\n    if (isShuffleEncrypted(conf)) {\n      out.write(ByteBuffer.allocate(8).putLong(out.getPos()).array());\n      byte[] iv \u003d createIV(conf);\n      out.write(iv);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"IV written to Stream [\"\n            + Base64.encodeBase64URLSafeString(iv) + \"]\");\n      }\n      return new CryptoFSDataOutputStream(out, CryptoCodec.getInstance(conf),\n          getBufferSize(conf), getEncryptionKey(), iv);\n    } else {\n      return out;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/CryptoUtils.java"
    }
  }
}