{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractMapWritable.java",
  "functionName": "addToMap",
  "functionId": "addToMap___clazz-Class__?____id-byte",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
  "functionStartLine": 68,
  "functionEndLine": 85,
  "numCommitsSeen": 13,
  "timeTaken": 1247,
  "changeHistory": [
    "274d9b2ac48547b8d466e5006c233576c1aa7591",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "274d9b2ac48547b8d466e5006c233576c1aa7591": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "274d9b2ac48547b8d466e5006c233576c1aa7591": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/14 11:07 AM",
      "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/14 11:07 AM",
          "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/02/13 6:07 AM",
          "commitNameOld": "c01827aa488b5d4e5314c4a20dea1b0e5ea29c5a",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 404.17,
          "commitsBetweenForRepo": 2639,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private synchronized void addToMap(Class clazz, byte id) {\n+  private synchronized void addToMap(Class\u003c?\u003e clazz, byte id) {\n     if (classToIdMap.containsKey(clazz)) {\n       byte b \u003d classToIdMap.get(clazz);\n       if (b !\u003d id) {\n         throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n           \" already registered but maps to \" + b + \" and not \" + id);\n       }\n     }\n     if (idToClassMap.containsKey(id)) {\n-      Class c \u003d idToClassMap.get(id);\n+      Class\u003c?\u003e c \u003d idToClassMap.get(id);\n       if (!c.equals(clazz)) {\n         throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n             c.getName() + \" and not \" + clazz.getName());\n       }\n     }\n     classToIdMap.put(clazz, id);\n     idToClassMap.put(id, clazz);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void addToMap(Class\u003c?\u003e clazz, byte id) {\n    if (classToIdMap.containsKey(clazz)) {\n      byte b \u003d classToIdMap.get(clazz);\n      if (b !\u003d id) {\n        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n          \" already registered but maps to \" + b + \" and not \" + id);\n      }\n    }\n    if (idToClassMap.containsKey(id)) {\n      Class\u003c?\u003e c \u003d idToClassMap.get(id);\n      if (!c.equals(clazz)) {\n        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n            c.getName() + \" and not \" + clazz.getName());\n      }\n    }\n    classToIdMap.put(clazz, id);\n    idToClassMap.put(id, clazz);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
          "extendedDetails": {
            "oldValue": "[clazz-Class, id-byte]",
            "newValue": "[clazz-Class\u003c?\u003e, id-byte]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/14 11:07 AM",
          "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/02/13 6:07 AM",
          "commitNameOld": "c01827aa488b5d4e5314c4a20dea1b0e5ea29c5a",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 404.17,
          "commitsBetweenForRepo": 2639,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private synchronized void addToMap(Class clazz, byte id) {\n+  private synchronized void addToMap(Class\u003c?\u003e clazz, byte id) {\n     if (classToIdMap.containsKey(clazz)) {\n       byte b \u003d classToIdMap.get(clazz);\n       if (b !\u003d id) {\n         throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n           \" already registered but maps to \" + b + \" and not \" + id);\n       }\n     }\n     if (idToClassMap.containsKey(id)) {\n-      Class c \u003d idToClassMap.get(id);\n+      Class\u003c?\u003e c \u003d idToClassMap.get(id);\n       if (!c.equals(clazz)) {\n         throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n             c.getName() + \" and not \" + clazz.getName());\n       }\n     }\n     classToIdMap.put(clazz, id);\n     idToClassMap.put(id, clazz);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void addToMap(Class\u003c?\u003e clazz, byte id) {\n    if (classToIdMap.containsKey(clazz)) {\n      byte b \u003d classToIdMap.get(clazz);\n      if (b !\u003d id) {\n        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n          \" already registered but maps to \" + b + \" and not \" + id);\n      }\n    }\n    if (idToClassMap.containsKey(id)) {\n      Class\u003c?\u003e c \u003d idToClassMap.get(id);\n      if (!c.equals(clazz)) {\n        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n            c.getName() + \" and not \" + clazz.getName());\n      }\n    }\n    classToIdMap.put(clazz, id);\n    idToClassMap.put(id, clazz);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addToMap(Class clazz, byte id) {\n    if (classToIdMap.containsKey(clazz)) {\n      byte b \u003d classToIdMap.get(clazz);\n      if (b !\u003d id) {\n        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n          \" already registered but maps to \" + b + \" and not \" + id);\n      }\n    }\n    if (idToClassMap.containsKey(id)) {\n      Class c \u003d idToClassMap.get(id);\n      if (!c.equals(clazz)) {\n        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n            c.getName() + \" and not \" + clazz.getName());\n      }\n    }\n    classToIdMap.put(clazz, id);\n    idToClassMap.put(id, clazz);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addToMap(Class clazz, byte id) {\n    if (classToIdMap.containsKey(clazz)) {\n      byte b \u003d classToIdMap.get(clazz);\n      if (b !\u003d id) {\n        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n          \" already registered but maps to \" + b + \" and not \" + id);\n      }\n    }\n    if (idToClassMap.containsKey(id)) {\n      Class c \u003d idToClassMap.get(id);\n      if (!c.equals(clazz)) {\n        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n            c.getName() + \" and not \" + clazz.getName());\n      }\n    }\n    classToIdMap.put(clazz, id);\n    idToClassMap.put(id, clazz);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/AbstractMapWritable.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addToMap(Class clazz, byte id) {\n    if (classToIdMap.containsKey(clazz)) {\n      byte b \u003d classToIdMap.get(clazz);\n      if (b !\u003d id) {\n        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n          \" already registered but maps to \" + b + \" and not \" + id);\n      }\n    }\n    if (idToClassMap.containsKey(id)) {\n      Class c \u003d idToClassMap.get(id);\n      if (!c.equals(clazz)) {\n        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n            c.getName() + \" and not \" + clazz.getName());\n      }\n    }\n    classToIdMap.put(clazz, id);\n    idToClassMap.put(id, clazz);\n  }",
      "path": "common/src/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/AbstractMapWritable.java",
        "newPath": "common/src/java/org/apache/hadoop/io/AbstractMapWritable.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,18 @@\n+  private synchronized void addToMap(Class clazz, byte id) {\n+    if (classToIdMap.containsKey(clazz)) {\n+      byte b \u003d classToIdMap.get(clazz);\n+      if (b !\u003d id) {\n+        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n+          \" already registered but maps to \" + b + \" and not \" + id);\n+      }\n+    }\n+    if (idToClassMap.containsKey(id)) {\n+      Class c \u003d idToClassMap.get(id);\n+      if (!c.equals(clazz)) {\n+        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n+            c.getName() + \" and not \" + clazz.getName());\n+      }\n+    }\n+    classToIdMap.put(clazz, id);\n+    idToClassMap.put(id, clazz);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addToMap(Class clazz, byte id) {\n    if (classToIdMap.containsKey(clazz)) {\n      byte b \u003d classToIdMap.get(clazz);\n      if (b !\u003d id) {\n        throw new IllegalArgumentException (\"Class \" + clazz.getName() +\n          \" already registered but maps to \" + b + \" and not \" + id);\n      }\n    }\n    if (idToClassMap.containsKey(id)) {\n      Class c \u003d idToClassMap.get(id);\n      if (!c.equals(clazz)) {\n        throw new IllegalArgumentException(\"Id \" + id + \" exists but maps to \" +\n            c.getName() + \" and not \" + clazz.getName());\n      }\n    }\n    classToIdMap.put(clazz, id);\n    idToClassMap.put(id, clazz);\n  }",
      "path": "src/java/org/apache/hadoop/io/AbstractMapWritable.java"
    }
  }
}