{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagerImpl.java",
  "functionName": "waitForRecoveredContainers",
  "functionId": "waitForRecoveredContainers",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
  "functionStartLine": 513,
  "functionEndLine": 533,
  "numCommitsSeen": 139,
  "timeTaken": 3086,
  "changeHistory": [
    "c2febdcbaa12078db42403fe8fd74180fb58a84b"
  ],
  "changeHistoryShort": {
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,21 @@\n+  private void waitForRecoveredContainers() throws InterruptedException {\n+    final int sleepMsec \u003d 100;\n+    int waitIterations \u003d 100;\n+    List\u003cContainerId\u003e newContainers \u003d new ArrayList\u003cContainerId\u003e();\n+    while (--waitIterations \u003e\u003d 0) {\n+      newContainers.clear();\n+      for (Container container : context.getContainers().values()) {\n+        if (container.getContainerState() \u003d\u003d org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.NEW) {\n+          newContainers.add(container.getContainerId());\n+        }\n+      }\n+      if (newContainers.isEmpty()) {\n+        break;\n+      }\n+      LOG.info(\"Waiting for containers: \" + newContainers);\n+      Thread.sleep(sleepMsec);\n+    }\n+    if (waitIterations \u003c 0) {\n+      LOG.warn(\"Timeout waiting for recovered containers\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void waitForRecoveredContainers() throws InterruptedException {\n    final int sleepMsec \u003d 100;\n    int waitIterations \u003d 100;\n    List\u003cContainerId\u003e newContainers \u003d new ArrayList\u003cContainerId\u003e();\n    while (--waitIterations \u003e\u003d 0) {\n      newContainers.clear();\n      for (Container container : context.getContainers().values()) {\n        if (container.getContainerState() \u003d\u003d org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.NEW) {\n          newContainers.add(container.getContainerId());\n        }\n      }\n      if (newContainers.isEmpty()) {\n        break;\n      }\n      LOG.info(\"Waiting for containers: \" + newContainers);\n      Thread.sleep(sleepMsec);\n    }\n    if (waitIterations \u003c 0) {\n      LOG.warn(\"Timeout waiting for recovered containers\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}