{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSACLs.java",
  "functionName": "loadACLs",
  "functionId": "loadACLs",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
  "functionStartLine": 220,
  "functionEndLine": 227,
  "numCommitsSeen": 14,
  "timeTaken": 693,
  "changeHistory": [
    "d9a03e272adbf3e9fde501610400f18fb4f6b865",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "d9a03e272adbf3e9fde501610400f18fb4f6b865": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d9a03e272adbf3e9fde501610400f18fb4f6b865": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10863. KMS should have a blacklist for decrypting EEKs. (asuresh via tucu)\n",
      "commitDate": "03/09/14 3:08 PM",
      "commitName": "d9a03e272adbf3e9fde501610400f18fb4f6b865",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "14/08/14 10:03 PM",
      "commitNameOld": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 19.71,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   private Configuration loadACLs() {\n     LOG.debug(\"Loading ACLs file\");\n     lastReload \u003d System.currentTimeMillis();\n     Configuration conf \u003d KMSConfiguration.getACLsConf();\n     // triggering the resource loading.\n-    conf.get(Type.CREATE.getConfigKey());\n+    conf.get(Type.CREATE.getAclConfigKey());\n     return conf;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Configuration loadACLs() {\n    LOG.debug(\"Loading ACLs file\");\n    lastReload \u003d System.currentTimeMillis();\n    Configuration conf \u003d KMSConfiguration.getACLsConf();\n    // triggering the resource loading.\n    conf.get(Type.CREATE.getAclConfigKey());\n    return conf;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,8 @@\n+  private Configuration loadACLs() {\n+    LOG.debug(\"Loading ACLs file\");\n+    lastReload \u003d System.currentTimeMillis();\n+    Configuration conf \u003d KMSConfiguration.getACLsConf();\n+    // triggering the resource loading.\n+    conf.get(Type.CREATE.getConfigKey());\n+    return conf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Configuration loadACLs() {\n    LOG.debug(\"Loading ACLs file\");\n    lastReload \u003d System.currentTimeMillis();\n    Configuration conf \u003d KMSConfiguration.getACLsConf();\n    // triggering the resource loading.\n    conf.get(Type.CREATE.getConfigKey());\n    return conf;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java"
    }
  }
}