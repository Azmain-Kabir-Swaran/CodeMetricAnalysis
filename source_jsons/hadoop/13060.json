{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPlacementPolicyWithNodeGroup.java",
  "functionName": "addDependentNodesToExcludedNodes",
  "functionId": "addDependentNodesToExcludedNodes___chosenNode-DatanodeDescriptor__excludedNodes-Set__Node__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyWithNodeGroup.java",
  "functionStartLine": 304,
  "functionEndLine": 325,
  "numCommitsSeen": 23,
  "timeTaken": 1496,
  "changeHistory": [
    "b2f65c276da2c4420a0974a7e2d75e081abf5d63"
  ],
  "changeHistoryShort": {
    "b2f65c276da2c4420a0974a7e2d75e081abf5d63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2f65c276da2c4420a0974a7e2d75e081abf5d63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5168. Add cross node dependency support to BlockPlacementPolicy.  Contributed by Nikola Vujic\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592179 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/14 4:02 AM",
      "commitName": "b2f65c276da2c4420a0974a7e2d75e081abf5d63",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,22 @@\n+  private int addDependentNodesToExcludedNodes(DatanodeDescriptor chosenNode,\n+      Set\u003cNode\u003e excludedNodes) {\n+    if (this.host2datanodeMap \u003d\u003d null) {\n+      return 0;\n+    }\n+    int countOfExcludedNodes \u003d 0;\n+    for(String hostname : chosenNode.getDependentHostNames()) {\n+      DatanodeDescriptor node \u003d\n+          this.host2datanodeMap.getDataNodeByHostName(hostname);\n+      if(node!\u003dnull) {\n+        if (excludedNodes.add(node)) {\n+          countOfExcludedNodes++;\n+        }\n+      } else {\n+        LOG.warn(\"Not able to find datanode \" + hostname\n+            + \" which has dependency with datanode \"\n+            + chosenNode.getHostName());\n+      }\n+    }\n+    \n+    return countOfExcludedNodes;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int addDependentNodesToExcludedNodes(DatanodeDescriptor chosenNode,\n      Set\u003cNode\u003e excludedNodes) {\n    if (this.host2datanodeMap \u003d\u003d null) {\n      return 0;\n    }\n    int countOfExcludedNodes \u003d 0;\n    for(String hostname : chosenNode.getDependentHostNames()) {\n      DatanodeDescriptor node \u003d\n          this.host2datanodeMap.getDataNodeByHostName(hostname);\n      if(node!\u003dnull) {\n        if (excludedNodes.add(node)) {\n          countOfExcludedNodes++;\n        }\n      } else {\n        LOG.warn(\"Not able to find datanode \" + hostname\n            + \" which has dependency with datanode \"\n            + chosenNode.getHostName());\n      }\n    }\n    \n    return countOfExcludedNodes;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyWithNodeGroup.java"
    }
  }
}