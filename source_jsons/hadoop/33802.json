{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DockerLinuxContainerRuntime.java",
  "functionName": "addDockerClientConfigToRunCommand",
  "functionId": "addDockerClientConfigToRunCommand___ctx-ContainerRuntimeContext__dockerRunCommand-DockerRunCommand",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
  "functionStartLine": 1368,
  "functionEndLine": 1399,
  "numCommitsSeen": 91,
  "timeTaken": 1999,
  "changeHistory": [
    "4827e9a9085b306bc379cb6e0b1fe4b92326edcd",
    "eb2449d5398e9ac869bc088e10d838a7f13deac0"
  ],
  "changeHistoryShort": {
    "4827e9a9085b306bc379cb6e0b1fe4b92326edcd": "Ybodychange",
    "eb2449d5398e9ac869bc088e10d838a7f13deac0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4827e9a9085b306bc379cb6e0b1fe4b92326edcd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8329. Docker client configuration can still be set incorrectly. Contributed by Shane Kumpf\n",
      "commitDate": "29/05/18 12:43 PM",
      "commitName": "4827e9a9085b306bc379cb6e0b1fe4b92326edcd",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "24/05/18 8:30 AM",
      "commitNameOld": "1388de18ad51434569589a8f5b0b05c38fe02ab3",
      "commitAuthorOld": "Shane Kumpf",
      "daysBetweenCommits": 5.18,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   private void addDockerClientConfigToRunCommand(ContainerRuntimeContext ctx,\n       DockerRunCommand dockerRunCommand) throws ContainerExecutionException {\n     ByteBuffer tokens \u003d ctx.getContainer().getLaunchContext().getTokens();\n     Credentials credentials;\n     if (tokens !\u003d null) {\n       tokens.rewind();\n       if (tokens.hasRemaining()) {\n         try {\n           credentials \u003d DockerClientConfigHandler\n               .getCredentialsFromTokensByteBuffer(tokens);\n         } catch (IOException e) {\n           throw new ContainerExecutionException(\"Unable to read tokens.\");\n         }\n         if (credentials.numberOfTokens() \u003e 0) {\n           Path nmPrivateDir \u003d\n               ctx.getExecutionAttribute(NM_PRIVATE_CONTAINER_SCRIPT_PATH)\n                   .getParent();\n           File dockerConfigPath \u003d new File(nmPrivateDir + \"/config.json\");\n           try {\n-            DockerClientConfigHandler\n-                .writeDockerCredentialsToPath(dockerConfigPath, credentials);\n+            if (DockerClientConfigHandler\n+                .writeDockerCredentialsToPath(dockerConfigPath, credentials)) {\n+              dockerRunCommand.setClientConfigDir(dockerConfigPath.getParent());\n+            }\n           } catch (IOException e) {\n             throw new ContainerExecutionException(\n                 \"Unable to write Docker client credentials to \"\n                     + dockerConfigPath);\n           }\n-          dockerRunCommand.setClientConfigDir(dockerConfigPath.getParent());\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addDockerClientConfigToRunCommand(ContainerRuntimeContext ctx,\n      DockerRunCommand dockerRunCommand) throws ContainerExecutionException {\n    ByteBuffer tokens \u003d ctx.getContainer().getLaunchContext().getTokens();\n    Credentials credentials;\n    if (tokens !\u003d null) {\n      tokens.rewind();\n      if (tokens.hasRemaining()) {\n        try {\n          credentials \u003d DockerClientConfigHandler\n              .getCredentialsFromTokensByteBuffer(tokens);\n        } catch (IOException e) {\n          throw new ContainerExecutionException(\"Unable to read tokens.\");\n        }\n        if (credentials.numberOfTokens() \u003e 0) {\n          Path nmPrivateDir \u003d\n              ctx.getExecutionAttribute(NM_PRIVATE_CONTAINER_SCRIPT_PATH)\n                  .getParent();\n          File dockerConfigPath \u003d new File(nmPrivateDir + \"/config.json\");\n          try {\n            if (DockerClientConfigHandler\n                .writeDockerCredentialsToPath(dockerConfigPath, credentials)) {\n              dockerRunCommand.setClientConfigDir(dockerConfigPath.getParent());\n            }\n          } catch (IOException e) {\n            throw new ContainerExecutionException(\n                \"Unable to write Docker client credentials to \"\n                    + dockerConfigPath);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "eb2449d5398e9ac869bc088e10d838a7f13deac0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5428. Allow for specifying the docker client configuration directory. Contributed by Shane Kumpf\n",
      "commitDate": "08/02/18 11:35 AM",
      "commitName": "eb2449d5398e9ac869bc088e10d838a7f13deac0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,31 @@\n+  private void addDockerClientConfigToRunCommand(ContainerRuntimeContext ctx,\n+      DockerRunCommand dockerRunCommand) throws ContainerExecutionException {\n+    ByteBuffer tokens \u003d ctx.getContainer().getLaunchContext().getTokens();\n+    Credentials credentials;\n+    if (tokens !\u003d null) {\n+      tokens.rewind();\n+      if (tokens.hasRemaining()) {\n+        try {\n+          credentials \u003d DockerClientConfigHandler\n+              .getCredentialsFromTokensByteBuffer(tokens);\n+        } catch (IOException e) {\n+          throw new ContainerExecutionException(\"Unable to read tokens.\");\n+        }\n+        if (credentials.numberOfTokens() \u003e 0) {\n+          Path nmPrivateDir \u003d\n+              ctx.getExecutionAttribute(NM_PRIVATE_CONTAINER_SCRIPT_PATH)\n+                  .getParent();\n+          File dockerConfigPath \u003d new File(nmPrivateDir + \"/config.json\");\n+          try {\n+            DockerClientConfigHandler\n+                .writeDockerCredentialsToPath(dockerConfigPath, credentials);\n+          } catch (IOException e) {\n+            throw new ContainerExecutionException(\n+                \"Unable to write Docker client credentials to \"\n+                    + dockerConfigPath);\n+          }\n+          dockerRunCommand.setClientConfigDir(dockerConfigPath.getParent());\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addDockerClientConfigToRunCommand(ContainerRuntimeContext ctx,\n      DockerRunCommand dockerRunCommand) throws ContainerExecutionException {\n    ByteBuffer tokens \u003d ctx.getContainer().getLaunchContext().getTokens();\n    Credentials credentials;\n    if (tokens !\u003d null) {\n      tokens.rewind();\n      if (tokens.hasRemaining()) {\n        try {\n          credentials \u003d DockerClientConfigHandler\n              .getCredentialsFromTokensByteBuffer(tokens);\n        } catch (IOException e) {\n          throw new ContainerExecutionException(\"Unable to read tokens.\");\n        }\n        if (credentials.numberOfTokens() \u003e 0) {\n          Path nmPrivateDir \u003d\n              ctx.getExecutionAttribute(NM_PRIVATE_CONTAINER_SCRIPT_PATH)\n                  .getParent();\n          File dockerConfigPath \u003d new File(nmPrivateDir + \"/config.json\");\n          try {\n            DockerClientConfigHandler\n                .writeDockerCredentialsToPath(dockerConfigPath, credentials);\n          } catch (IOException e) {\n            throw new ContainerExecutionException(\n                \"Unable to write Docker client credentials to \"\n                    + dockerConfigPath);\n          }\n          dockerRunCommand.setClientConfigDir(dockerConfigPath.getParent());\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}