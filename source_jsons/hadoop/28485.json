{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebServices.java",
  "functionName": "getAppAttempts",
  "functionId": "getAppAttempts___req-HttpServletRequest__res-HttpServletResponse__appId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java",
  "functionStartLine": 262,
  "functionEndLine": 297,
  "numCommitsSeen": 22,
  "timeTaken": 2427,
  "changeHistory": [
    "722ee841948db1f246f0056acec9a1ac464fe1f9",
    "e2a02702178db60150cc0c2253d48b8532a474c2",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a",
    "c05b581a5522eed499d3ba16af9fa6dc694563f6",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "722ee841948db1f246f0056acec9a1ac464fe1f9": "Ybodychange",
    "e2a02702178db60150cc0c2253d48b8532a474c2": "Ybodychange",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": "Ybodychange",
    "c05b581a5522eed499d3ba16af9fa6dc694563f6": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "722ee841948db1f246f0056acec9a1ac464fe1f9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7163. RMContext need not to be injected to webapp and other Always Running services. Contributed by Rohith Sharma K S.\n",
      "commitDate": "10/09/17 9:58 PM",
      "commitName": "722ee841948db1f246f0056acec9a1ac464fe1f9",
      "commitAuthor": "Sunil G",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 453.29,
      "commitsBetweenForRepo": 2971,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,36 @@\n   public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n       HttpServletResponse res, String appId) {\n     UserGroupInformation callerUGI \u003d getUser(req);\n     final ApplicationId id \u003d parseApplicationId(appId);\n     Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n     try {\n       if (callerUGI \u003d\u003d null) {\n         GetApplicationAttemptsRequest request \u003d\n             GetApplicationAttemptsRequest.newInstance(id);\n         appAttemptReports \u003d\n-            appBaseProt.getApplicationAttempts(request)\n-              .getApplicationAttemptList();\n+            getApplicationAttemptsReport(request);\n       } else {\n         appAttemptReports \u003d callerUGI.doAs(\n             new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n           @Override\n           public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n             GetApplicationAttemptsRequest request \u003d\n                 GetApplicationAttemptsRequest.newInstance(id);\n-            return appBaseProt.getApplicationAttempts(request)\n-                  .getApplicationAttemptList();\n+            return getApplicationAttemptsReport(request);\n           }\n         });\n       }\n     } catch (Exception e) {\n       rewrapAndThrowException(e);\n     }\n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     if (appAttemptReports \u003d\u003d null) {\n       return appAttemptsInfo;\n     }\n     for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n       AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n       appAttemptsInfo.add(appAttemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n      HttpServletResponse res, String appId) {\n    UserGroupInformation callerUGI \u003d getUser(req);\n    final ApplicationId id \u003d parseApplicationId(appId);\n    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n    try {\n      if (callerUGI \u003d\u003d null) {\n        GetApplicationAttemptsRequest request \u003d\n            GetApplicationAttemptsRequest.newInstance(id);\n        appAttemptReports \u003d\n            getApplicationAttemptsReport(request);\n      } else {\n        appAttemptReports \u003d callerUGI.doAs(\n            new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n          @Override\n          public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n            GetApplicationAttemptsRequest request \u003d\n                GetApplicationAttemptsRequest.newInstance(id);\n            return getApplicationAttemptsReport(request);\n          }\n        });\n      }\n    } catch (Exception e) {\n      rewrapAndThrowException(e);\n    }\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    if (appAttemptReports \u003d\u003d null) {\n      return appAttemptsInfo;\n    }\n    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n      appAttemptsInfo.add(appAttemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java",
      "extendedDetails": {}
    },
    "e2a02702178db60150cc0c2253d48b8532a474c2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4151. Fix findbugs errors in hadoop-yarn-server-common module. (Meng Ding via wangda)\n",
      "commitDate": "14/09/15 4:00 PM",
      "commitName": "e2a02702178db60150cc0c2253d48b8532a474c2",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/06/15 11:14 PM",
      "commitNameOld": "8d0ef3163287d811381e94cc0101dbc9847ee2db",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 97.7,
      "commitsBetweenForRepo": 563,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,38 @@\n   public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n       HttpServletResponse res, String appId) {\n     UserGroupInformation callerUGI \u003d getUser(req);\n     final ApplicationId id \u003d parseApplicationId(appId);\n     Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n     try {\n       if (callerUGI \u003d\u003d null) {\n         GetApplicationAttemptsRequest request \u003d\n             GetApplicationAttemptsRequest.newInstance(id);\n         appAttemptReports \u003d\n             appBaseProt.getApplicationAttempts(request)\n               .getApplicationAttemptList();\n       } else {\n         appAttemptReports \u003d callerUGI.doAs(\n             new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n           @Override\n           public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n             GetApplicationAttemptsRequest request \u003d\n                 GetApplicationAttemptsRequest.newInstance(id);\n             return appBaseProt.getApplicationAttempts(request)\n                   .getApplicationAttemptList();\n           }\n         });\n       }\n     } catch (Exception e) {\n       rewrapAndThrowException(e);\n     }\n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n+    if (appAttemptReports \u003d\u003d null) {\n+      return appAttemptsInfo;\n+    }\n     for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n       AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n       appAttemptsInfo.add(appAttemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n      HttpServletResponse res, String appId) {\n    UserGroupInformation callerUGI \u003d getUser(req);\n    final ApplicationId id \u003d parseApplicationId(appId);\n    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n    try {\n      if (callerUGI \u003d\u003d null) {\n        GetApplicationAttemptsRequest request \u003d\n            GetApplicationAttemptsRequest.newInstance(id);\n        appAttemptReports \u003d\n            appBaseProt.getApplicationAttempts(request)\n              .getApplicationAttemptList();\n      } else {\n        appAttemptReports \u003d callerUGI.doAs(\n            new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n          @Override\n          public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n            GetApplicationAttemptsRequest request \u003d\n                GetApplicationAttemptsRequest.newInstance(id);\n            return appBaseProt.getApplicationAttempts(request)\n                  .getApplicationAttemptList();\n          }\n        });\n      }\n    } catch (Exception e) {\n      rewrapAndThrowException(e);\n    }\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    if (appAttemptReports \u003d\u003d null) {\n      return appAttemptsInfo;\n    }\n    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n      appAttemptsInfo.add(appAttemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java",
      "extendedDetails": {}
    },
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
      "commitDate": "05/03/15 9:20 PM",
      "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n   public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n       HttpServletResponse res, String appId) {\n     UserGroupInformation callerUGI \u003d getUser(req);\n     final ApplicationId id \u003d parseApplicationId(appId);\n     Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n     try {\n       if (callerUGI \u003d\u003d null) {\n-        appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n+        GetApplicationAttemptsRequest request \u003d\n+            GetApplicationAttemptsRequest.newInstance(id);\n+        appAttemptReports \u003d\n+            appBaseProt.getApplicationAttempts(request)\n+              .getApplicationAttemptList();\n       } else {\n         appAttemptReports \u003d callerUGI.doAs(\n             new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n           @Override\n           public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n-            return appContext.getApplicationAttempts(id).values();\n+            GetApplicationAttemptsRequest request \u003d\n+                GetApplicationAttemptsRequest.newInstance(id);\n+            return appBaseProt.getApplicationAttempts(request)\n+                  .getApplicationAttemptList();\n           }\n         });\n       }\n     } catch (Exception e) {\n       rewrapAndThrowException(e);\n     }\n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n       AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n       appAttemptsInfo.add(appAttemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n      HttpServletResponse res, String appId) {\n    UserGroupInformation callerUGI \u003d getUser(req);\n    final ApplicationId id \u003d parseApplicationId(appId);\n    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n    try {\n      if (callerUGI \u003d\u003d null) {\n        GetApplicationAttemptsRequest request \u003d\n            GetApplicationAttemptsRequest.newInstance(id);\n        appAttemptReports \u003d\n            appBaseProt.getApplicationAttempts(request)\n              .getApplicationAttemptList();\n      } else {\n        appAttemptReports \u003d callerUGI.doAs(\n            new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n          @Override\n          public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n            GetApplicationAttemptsRequest request \u003d\n                GetApplicationAttemptsRequest.newInstance(id);\n            return appBaseProt.getApplicationAttempts(request)\n                  .getApplicationAttemptList();\n          }\n        });\n      }\n    } catch (Exception e) {\n      rewrapAndThrowException(e);\n    }\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n      appAttemptsInfo.add(appAttemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java",
      "extendedDetails": {}
    },
    "c05b581a5522eed499d3ba16af9fa6dc694563f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2591. Fixed AHSWebServices to return FORBIDDEN(403) if the request user doesn\u0027t have access to the history data. Contributed by Zhijie Shen\n",
      "commitDate": "27/10/14 10:45 AM",
      "commitName": "c05b581a5522eed499d3ba16af9fa6dc694563f6",
      "commitAuthor": "Jian He",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 45.65,
      "commitsBetweenForRepo": 445,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n       HttpServletResponse res, String appId) {\n     UserGroupInformation callerUGI \u003d getUser(req);\n     final ApplicationId id \u003d parseApplicationId(appId);\n     Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n     try {\n       if (callerUGI \u003d\u003d null) {\n         appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n       } else {\n         appAttemptReports \u003d callerUGI.doAs(\n             new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n           @Override\n           public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n             return appContext.getApplicationAttempts(id).values();\n           }\n         });\n       }\n     } catch (Exception e) {\n-      throw new WebApplicationException(e);\n+      rewrapAndThrowException(e);\n     }\n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n       AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n       appAttemptsInfo.add(appAttemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n      HttpServletResponse res, String appId) {\n    UserGroupInformation callerUGI \u003d getUser(req);\n    final ApplicationId id \u003d parseApplicationId(appId);\n    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n    try {\n      if (callerUGI \u003d\u003d null) {\n        appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n      } else {\n        appAttemptReports \u003d callerUGI.doAs(\n            new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n          @Override\n          public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n            return appContext.getApplicationAttempts(id).values();\n          }\n        });\n      }\n    } catch (Exception e) {\n      rewrapAndThrowException(e);\n    }\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n      appAttemptsInfo.add(appAttemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "commitDateOld": "25/01/14 8:51 PM",
      "commitNameOld": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 228.88,
      "commitsBetweenForRepo": 1735,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,28 @@\n   public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n       HttpServletResponse res, String appId) {\n-    ApplicationId id \u003d parseApplicationId(appId);\n+    UserGroupInformation callerUGI \u003d getUser(req);\n+    final ApplicationId id \u003d parseApplicationId(appId);\n     Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n     try {\n-      appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n-    } catch (IOException e) {\n+      if (callerUGI \u003d\u003d null) {\n+        appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n+      } else {\n+        appAttemptReports \u003d callerUGI.doAs(\n+            new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n+          @Override\n+          public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n+            return appContext.getApplicationAttempts(id).values();\n+          }\n+        });\n+      }\n+    } catch (Exception e) {\n       throw new WebApplicationException(e);\n     }\n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n       AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n       appAttemptsInfo.add(appAttemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n      HttpServletResponse res, String appId) {\n    UserGroupInformation callerUGI \u003d getUser(req);\n    final ApplicationId id \u003d parseApplicationId(appId);\n    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n    try {\n      if (callerUGI \u003d\u003d null) {\n        appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n      } else {\n        appAttemptReports \u003d callerUGI.doAs(\n            new PrivilegedExceptionAction\u003cCollection\u003cApplicationAttemptReport\u003e\u003e () {\n          @Override\n          public Collection\u003cApplicationAttemptReport\u003e run() throws Exception {\n            return appContext.getApplicationAttempts(id).values();\n          }\n        });\n      }\n    } catch (Exception e) {\n      throw new WebApplicationException(e);\n    }\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n      appAttemptsInfo.add(appAttemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n+      HttpServletResponse res, String appId) {\n+    ApplicationId id \u003d parseApplicationId(appId);\n+    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n+    try {\n+      appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n+    } catch (IOException e) {\n+      throw new WebApplicationException(e);\n+    }\n+    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n+    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n+      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n+      appAttemptsInfo.add(appAttemptInfo);\n+    }\n+\n+    return appAttemptsInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(HttpServletRequest req,\n      HttpServletResponse res, String appId) {\n    ApplicationId id \u003d parseApplicationId(appId);\n    Collection\u003cApplicationAttemptReport\u003e appAttemptReports \u003d null;\n    try {\n      appAttemptReports \u003d appContext.getApplicationAttempts(id).values();\n    } catch (IOException e) {\n      throw new WebApplicationException(e);\n    }\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (ApplicationAttemptReport appAttemptReport : appAttemptReports) {\n      AppAttemptInfo appAttemptInfo \u003d new AppAttemptInfo(appAttemptReport);\n      appAttemptsInfo.add(appAttemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebServices.java"
    }
  }
}