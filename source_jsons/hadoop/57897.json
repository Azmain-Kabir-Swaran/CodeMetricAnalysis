{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebApp.java",
  "functionName": "configureServlets",
  "functionId": "configureServlets",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
  "functionStartLine": 159,
  "functionEndLine": 170,
  "numCommitsSeen": 16,
  "timeTaken": 7738,
  "changeHistory": [
    "5a58bfee30a662b1b556048504f66f9cf00d182a",
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
    "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "c415dee2b7300cd9dc76e474110bdab41b7a076b",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "87b969c83541c6719abcc1dabc38dc41704876ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "5a58bfee30a662b1b556048504f66f9cf00d182a": "Ybodychange",
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb": "Ybodychange",
    "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "c415dee2b7300cd9dc76e474110bdab41b7a076b": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "87b969c83541c6719abcc1dabc38dc41704876ee": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5a58bfee30a662b1b556048504f66f9cf00d182a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4591. YARN Web UIs should provide a robots.txt. (Sidharta Seethana via wangda)\n",
      "commitDate": "20/09/16 5:20 PM",
      "commitName": "5a58bfee30a662b1b556048504f66f9cf00d182a",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "13/03/14 7:39 PM",
      "commitNameOld": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 921.9,
      "commitsBetweenForRepo": 7083,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public void configureServlets() {\n     setup();\n \n-    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n+    serve(\"/\", \"/__stop\", RobotsTextPage.ROBOTS_TXT_PATH)\n+        .with(Dispatcher.class);\n \n     for (String path : this.servePathSpecs) {\n       serve(path).with(Dispatcher.class);\n     }\n \n     configureWebAppServlets();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n\n    serve(\"/\", \"/__stop\", RobotsTextPage.ROBOTS_TXT_PATH)\n        .with(Dispatcher.class);\n\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n\n    configureWebAppServlets();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {}
    },
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1658. Modified web-app framework to let standby RMs redirect web-service calls to the active RM. Contributed by Cindy Li.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 7:39 PM",
      "commitName": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/03/14 8:34 PM",
      "commitNameOld": "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public void configureServlets() {\n     setup();\n \n     serve(\"/\", \"/__stop\").with(Dispatcher.class);\n \n     for (String path : this.servePathSpecs) {\n       serve(path).with(Dispatcher.class);\n     }\n \n-    configureRSServlets();\n+    configureWebAppServlets();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n\n    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n\n    configureWebAppServlets();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {}
    },
    "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1525. Web UI should redirect to active RM when HA is enabled. (Cindy Li via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/14 8:34 PM",
      "commitName": "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "27/01/14 11:32 PM",
      "commitNameOld": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 37.88,
      "commitsBetweenForRepo": 370,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,11 @@\n   public void configureServlets() {\n     setup();\n \n     serve(\"/\", \"/__stop\").with(Dispatcher.class);\n \n     for (String path : this.servePathSpecs) {\n       serve(path).with(Dispatcher.class);\n     }\n \n-    // Add in the web services filters/serves if app has them.\n-    // Using Jersey/guice integration module. If user has web services\n-    // they must have also bound a default one in their webapp code.\n-    if (this.wsName !\u003d null) {\n-      // There seems to be an issue with the guice/jersey integration\n-      // where we have to list the stuff we don\u0027t want it to serve\n-      // through the guicecontainer. In this case its everything except\n-      // the the web services api prefix. We can\u0027t just change the filter\n-      // from /* below - that doesn\u0027t work.\n-      String regex \u003d \"(?!/\" + this.wsName + \")\";\n-      serveRegex(regex).with(DefaultWrapperServlet.class);\n-\n-      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n-      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n-      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n-      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n-      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n-      filter(\"/*\").through(GuiceContainer.class, params);\n-    }\n-\n+    configureRSServlets();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n\n    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n\n    configureRSServlets();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void configureServlets() {\n    setup();\n\n    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n\n    // Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.\n    if (this.wsName !\u003d null) {\n      // There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don\u0027t want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can\u0027t just change the filter\n      // from /* below - that doesn\u0027t work.\n      String regex \u003d \"(?!/\" + this.wsName + \")\";\n      serveRegex(regex).with(DefaultWrapperServlet.class);\n\n      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n      filter(\"/*\").through(GuiceContainer.class, params);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java"
      }
    },
    "c415dee2b7300cd9dc76e474110bdab41b7a076b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3691. webservices add support to compress response. (Thomas Graves via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1234989 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/01/12 1:15 PM",
      "commitName": "c415dee2b7300cd9dc76e474110bdab41b7a076b",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 40.92,
      "commitsBetweenForRepo": 170,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   public void configureServlets() {\n     setup();\n \n     serve(\"/\", \"/__stop\").with(Dispatcher.class);\n \n     for (String path : this.servePathSpecs) {\n       serve(path).with(Dispatcher.class);\n     }\n \n     // Add in the web services filters/serves if app has them.\n     // Using Jersey/guice integration module. If user has web services\n     // they must have also bound a default one in their webapp code.\n     if (this.wsName !\u003d null) {\n       // There seems to be an issue with the guice/jersey integration\n       // where we have to list the stuff we don\u0027t want it to serve\n       // through the guicecontainer. In this case its everything except\n       // the the web services api prefix. We can\u0027t just change the filter\n       // from /* below - that doesn\u0027t work.\n       String regex \u003d \"(?!/\" + this.wsName + \")\";\n       serveRegex(regex).with(DefaultWrapperServlet.class);\n \n       Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n       params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n       params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n       params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n+      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n+      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n       filter(\"/*\").through(GuiceContainer.class, params);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n\n    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n\n    // Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.\n    if (this.wsName !\u003d null) {\n      // There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don\u0027t want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can\u0027t just change the filter\n      // from /* below - that doesn\u0027t work.\n      String regex \u003d \"(?!/\" + this.wsName + \")\";\n      serveRegex(regex).with(DefaultWrapperServlet.class);\n\n      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n      filter(\"/*\").through(GuiceContainer.class, params);\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/09/11 10:03 AM",
      "commitNameOld": "87b969c83541c6719abcc1dabc38dc41704876ee",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 77.25,
      "commitsBetweenForRepo": 552,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,29 @@\n   public void configureServlets() {\n     setup();\n+\n     serve(\"/\", \"/__stop\").with(Dispatcher.class);\n+\n     for (String path : this.servePathSpecs) {\n       serve(path).with(Dispatcher.class);\n     }\n+\n+    // Add in the web services filters/serves if app has them.\n+    // Using Jersey/guice integration module. If user has web services\n+    // they must have also bound a default one in their webapp code.\n+    if (this.wsName !\u003d null) {\n+      // There seems to be an issue with the guice/jersey integration\n+      // where we have to list the stuff we don\u0027t want it to serve\n+      // through the guicecontainer. In this case its everything except\n+      // the the web services api prefix. We can\u0027t just change the filter\n+      // from /* below - that doesn\u0027t work.\n+      String regex \u003d \"(?!/\" + this.wsName + \")\";\n+      serveRegex(regex).with(DefaultWrapperServlet.class);\n+\n+      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n+      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n+      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n+      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n+      filter(\"/*\").through(GuiceContainer.class, params);\n+    }\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n\n    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n\n    // Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.\n    if (this.wsName !\u003d null) {\n      // There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don\u0027t want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can\u0027t just change the filter\n      // from /* below - that doesn\u0027t work.\n      String regex \u003d \"(?!/\" + this.wsName + \")\";\n      serveRegex(regex).with(DefaultWrapperServlet.class);\n\n      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n      filter(\"/*\").through(GuiceContainer.class, params);\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {}
    },
    "87b969c83541c6719abcc1dabc38dc41704876ee": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2999. Fix YARN webapp framework to properly filter servlet paths. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176469 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 10:03 AM",
      "commitName": "87b969c83541c6719abcc1dabc38dc41704876ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 33.7,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,7 @@\n   public void configureServlets() {\n     setup();\n-    serve(\"/\", \"/__stop\", StringHelper.join(\u0027/\u0027, name, \u0027*\u0027)).with(Dispatcher.class);\n+    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n+    for (String path : this.servePathSpecs) {\n+      serve(path).with(Dispatcher.class);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n    serve(\"/\", \"/__stop\").with(Dispatcher.class);\n    for (String path : this.servePathSpecs) {\n      serve(path).with(Dispatcher.class);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void configureServlets() {\n    setup();\n    serve(\"/\", \"/__stop\", StringHelper.join(\u0027/\u0027, name, \u0027*\u0027)).with(Dispatcher.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,4 @@\n+  public void configureServlets() {\n+    setup();\n+    serve(\"/\", \"/__stop\", StringHelper.join(\u0027/\u0027, name, \u0027*\u0027)).with(Dispatcher.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void configureServlets() {\n    setup();\n    serve(\"/\", \"/__stop\", StringHelper.join(\u0027/\u0027, name, \u0027*\u0027)).with(Dispatcher.class);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java"
    }
  }
}