{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LoggedTaskAttempt.java",
  "functionName": "deepCompare",
  "functionId": "deepCompare___comparand-DeepCompare__loc-TreePath",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
  "functionStartLine": 728,
  "functionEndLine": 771,
  "numCommitsSeen": 15,
  "timeTaken": 4792,
  "changeHistory": [
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "a238f931ea7dce0ca620d1798156c84ff77097ff",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "a238f931ea7dce0ca620d1798156c84ff77097ff": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void deepCompare(DeepCompare comparand, TreePath loc)\n      throws DeepInequalityException {\n    if (!(comparand instanceof LoggedTaskAttempt)) {\n      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n    }\n\n    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n\n    compare1(attemptID.toString(), other.attemptID.toString(), loc, \"attemptID\");\n    compare1(result, other.result, loc, \"result\");\n    compare1(startTime, other.startTime, loc, \"startTime\");\n    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n    compare1(hostName, other.hostName, loc, \"hostName\");\n\n    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n    compare1(combineInputRecords, other.combineInputRecords, loc,\n        \"combineInputRecords\");\n    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n        \"reduceInputGroups\");\n    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n        \"reduceInputRecords\");\n    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n        \"reduceShuffleBytes\");\n    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n        \"reduceOutputRecords\");\n    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n\n    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n\n    compare1(location, other.location, loc, \"location\");\n\n    compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n    compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n    compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n    compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java"
      }
    },
    "a238f931ea7dce0ca620d1798156c84ff77097ff": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/11 6:20 AM",
      "commitName": "a238f931ea7dce0ca620d1798156c84ff77097ff",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "07/11/11 8:44 PM",
      "commitNameOld": "6749d1395f8a12be817336c1194bceda83f2b95d",
      "commitAuthorOld": "Amar Kamat",
      "daysBetweenCommits": 38.4,
      "commitsBetweenForRepo": 220,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   public void deepCompare(DeepCompare comparand, TreePath loc)\n       throws DeepInequalityException {\n     if (!(comparand instanceof LoggedTaskAttempt)) {\n       throw new DeepInequalityException(\"comparand has wrong type\", loc);\n     }\n \n     LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n \n-    compare1(attemptID, other.attemptID, loc, \"attemptID\");\n+    compare1(attemptID.toString(), other.attemptID.toString(), loc, \"attemptID\");\n     compare1(result, other.result, loc, \"result\");\n     compare1(startTime, other.startTime, loc, \"startTime\");\n     compare1(finishTime, other.finishTime, loc, \"finishTime\");\n     compare1(hostName, other.hostName, loc, \"hostName\");\n \n     compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n     compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n     compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n     compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n     compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n     compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n     compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n     compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n     compare1(combineInputRecords, other.combineInputRecords, loc,\n         \"combineInputRecords\");\n     compare1(reduceInputGroups, other.reduceInputGroups, loc,\n         \"reduceInputGroups\");\n     compare1(reduceInputRecords, other.reduceInputRecords, loc,\n         \"reduceInputRecords\");\n     compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n         \"reduceShuffleBytes\");\n     compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n         \"reduceOutputRecords\");\n     compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n \n     compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n     compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n \n     compare1(location, other.location, loc, \"location\");\n \n     compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n     compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n     compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n     compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deepCompare(DeepCompare comparand, TreePath loc)\n      throws DeepInequalityException {\n    if (!(comparand instanceof LoggedTaskAttempt)) {\n      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n    }\n\n    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n\n    compare1(attemptID.toString(), other.attemptID.toString(), loc, \"attemptID\");\n    compare1(result, other.result, loc, \"result\");\n    compare1(startTime, other.startTime, loc, \"startTime\");\n    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n    compare1(hostName, other.hostName, loc, \"hostName\");\n\n    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n    compare1(combineInputRecords, other.combineInputRecords, loc,\n        \"combineInputRecords\");\n    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n        \"reduceInputGroups\");\n    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n        \"reduceInputRecords\");\n    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n        \"reduceShuffleBytes\");\n    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n        \"reduceOutputRecords\");\n    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n\n    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n\n    compare1(location, other.location, loc, \"location\");\n\n    compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n    compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n    compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n    compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void deepCompare(DeepCompare comparand, TreePath loc)\n      throws DeepInequalityException {\n    if (!(comparand instanceof LoggedTaskAttempt)) {\n      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n    }\n\n    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n\n    compare1(attemptID, other.attemptID, loc, \"attemptID\");\n    compare1(result, other.result, loc, \"result\");\n    compare1(startTime, other.startTime, loc, \"startTime\");\n    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n    compare1(hostName, other.hostName, loc, \"hostName\");\n\n    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n    compare1(combineInputRecords, other.combineInputRecords, loc,\n        \"combineInputRecords\");\n    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n        \"reduceInputGroups\");\n    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n        \"reduceInputRecords\");\n    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n        \"reduceShuffleBytes\");\n    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n        \"reduceOutputRecords\");\n    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n\n    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n\n    compare1(location, other.location, loc, \"location\");\n\n    compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n    compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n    compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n    compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void deepCompare(DeepCompare comparand, TreePath loc)\n      throws DeepInequalityException {\n    if (!(comparand instanceof LoggedTaskAttempt)) {\n      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n    }\n\n    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n\n    compare1(attemptID, other.attemptID, loc, \"attemptID\");\n    compare1(result, other.result, loc, \"result\");\n    compare1(startTime, other.startTime, loc, \"startTime\");\n    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n    compare1(hostName, other.hostName, loc, \"hostName\");\n\n    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n    compare1(combineInputRecords, other.combineInputRecords, loc,\n        \"combineInputRecords\");\n    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n        \"reduceInputGroups\");\n    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n        \"reduceInputRecords\");\n    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n        \"reduceShuffleBytes\");\n    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n        \"reduceOutputRecords\");\n    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n\n    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n\n    compare1(location, other.location, loc, \"location\");\n\n    compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n    compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n    compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n    compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n  }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java"
      }
    },
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2037. Capture intermediate progress, CPU and memory usage for tasks. Contributed by Dick King. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:05 PM",
      "commitName": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 60.96,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,44 @@\n   public void deepCompare(DeepCompare comparand, TreePath loc)\n       throws DeepInequalityException {\n     if (!(comparand instanceof LoggedTaskAttempt)) {\n       throw new DeepInequalityException(\"comparand has wrong type\", loc);\n     }\n \n     LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n \n     compare1(attemptID, other.attemptID, loc, \"attemptID\");\n     compare1(result, other.result, loc, \"result\");\n     compare1(startTime, other.startTime, loc, \"startTime\");\n     compare1(finishTime, other.finishTime, loc, \"finishTime\");\n     compare1(hostName, other.hostName, loc, \"hostName\");\n \n     compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n     compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n     compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n     compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n     compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n     compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n     compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n     compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n     compare1(combineInputRecords, other.combineInputRecords, loc,\n         \"combineInputRecords\");\n     compare1(reduceInputGroups, other.reduceInputGroups, loc,\n         \"reduceInputGroups\");\n     compare1(reduceInputRecords, other.reduceInputRecords, loc,\n         \"reduceInputRecords\");\n     compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n         \"reduceShuffleBytes\");\n     compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n         \"reduceOutputRecords\");\n     compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n \n     compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n     compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n \n     compare1(location, other.location, loc, \"location\");\n+\n+    compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n+    compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n+    compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n+    compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deepCompare(DeepCompare comparand, TreePath loc)\n      throws DeepInequalityException {\n    if (!(comparand instanceof LoggedTaskAttempt)) {\n      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n    }\n\n    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n\n    compare1(attemptID, other.attemptID, loc, \"attemptID\");\n    compare1(result, other.result, loc, \"result\");\n    compare1(startTime, other.startTime, loc, \"startTime\");\n    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n    compare1(hostName, other.hostName, loc, \"hostName\");\n\n    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n    compare1(combineInputRecords, other.combineInputRecords, loc,\n        \"combineInputRecords\");\n    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n        \"reduceInputGroups\");\n    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n        \"reduceInputRecords\");\n    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n        \"reduceShuffleBytes\");\n    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n        \"reduceOutputRecords\");\n    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n\n    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n\n    compare1(location, other.location, loc, \"location\");\n\n    compare1(clockSplits, other.clockSplits, loc, \"clockSplits\");\n    compare1(cpuUsages, other.cpuUsages, loc, \"cpuUsages\");\n    compare1(vMemKbytes, other.vMemKbytes, loc, \"vMemKbytes\");\n    compare1(physMemKbytes, other.physMemKbytes, loc, \"physMemKbytes\");\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,39 @@\n+  public void deepCompare(DeepCompare comparand, TreePath loc)\n+      throws DeepInequalityException {\n+    if (!(comparand instanceof LoggedTaskAttempt)) {\n+      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n+    }\n+\n+    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n+\n+    compare1(attemptID, other.attemptID, loc, \"attemptID\");\n+    compare1(result, other.result, loc, \"result\");\n+    compare1(startTime, other.startTime, loc, \"startTime\");\n+    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n+    compare1(hostName, other.hostName, loc, \"hostName\");\n+\n+    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n+    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n+    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n+    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n+    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n+    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n+    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n+    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n+    compare1(combineInputRecords, other.combineInputRecords, loc,\n+        \"combineInputRecords\");\n+    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n+        \"reduceInputGroups\");\n+    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n+        \"reduceInputRecords\");\n+    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n+        \"reduceShuffleBytes\");\n+    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n+        \"reduceOutputRecords\");\n+    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n+\n+    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n+    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n+\n+    compare1(location, other.location, loc, \"location\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deepCompare(DeepCompare comparand, TreePath loc)\n      throws DeepInequalityException {\n    if (!(comparand instanceof LoggedTaskAttempt)) {\n      throw new DeepInequalityException(\"comparand has wrong type\", loc);\n    }\n\n    LoggedTaskAttempt other \u003d (LoggedTaskAttempt) comparand;\n\n    compare1(attemptID, other.attemptID, loc, \"attemptID\");\n    compare1(result, other.result, loc, \"result\");\n    compare1(startTime, other.startTime, loc, \"startTime\");\n    compare1(finishTime, other.finishTime, loc, \"finishTime\");\n    compare1(hostName, other.hostName, loc, \"hostName\");\n\n    compare1(hdfsBytesRead, other.hdfsBytesRead, loc, \"hdfsBytesRead\");\n    compare1(hdfsBytesWritten, other.hdfsBytesWritten, loc, \"hdfsBytesWritten\");\n    compare1(fileBytesRead, other.fileBytesRead, loc, \"fileBytesRead\");\n    compare1(fileBytesWritten, other.fileBytesWritten, loc, \"fileBytesWritten\");\n    compare1(mapInputBytes, other.mapInputBytes, loc, \"mapInputBytes\");\n    compare1(mapInputRecords, other.mapInputRecords, loc, \"mapInputRecords\");\n    compare1(mapOutputBytes, other.mapOutputBytes, loc, \"mapOutputBytes\");\n    compare1(mapOutputRecords, other.mapOutputRecords, loc, \"mapOutputRecords\");\n    compare1(combineInputRecords, other.combineInputRecords, loc,\n        \"combineInputRecords\");\n    compare1(reduceInputGroups, other.reduceInputGroups, loc,\n        \"reduceInputGroups\");\n    compare1(reduceInputRecords, other.reduceInputRecords, loc,\n        \"reduceInputRecords\");\n    compare1(reduceShuffleBytes, other.reduceShuffleBytes, loc,\n        \"reduceShuffleBytes\");\n    compare1(reduceOutputRecords, other.reduceOutputRecords, loc,\n        \"reduceOutputRecords\");\n    compare1(spilledRecords, other.spilledRecords, loc, \"spilledRecords\");\n\n    compare1(shuffleFinished, other.shuffleFinished, loc, \"shuffleFinished\");\n    compare1(sortFinished, other.sortFinished, loc, \"sortFinished\");\n\n    compare1(location, other.location, loc, \"location\");\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/LoggedTaskAttempt.java"
    }
  }
}