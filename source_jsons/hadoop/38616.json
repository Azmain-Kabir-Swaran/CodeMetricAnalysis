{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppSchedulingInfo.java",
  "functionName": "internalAddResourceRequests",
  "functionId": "internalAddResourceRequests___recoverPreemptedRequestForAContainer-boolean__dedupRequests-Map__SchedulerRequestKey,Map__String,ResourceRequest____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
  "functionStartLine": 313,
  "functionEndLine": 337,
  "numCommitsSeen": 80,
  "timeTaken": 2586,
  "changeHistory": [
    "38af23796971193fa529c3d08ffde8fcd6e607b6"
  ],
  "changeHistoryShort": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,25 @@\n+  private boolean internalAddResourceRequests(\n+      boolean recoverPreemptedRequestForAContainer,\n+      Map\u003cSchedulerRequestKey, Map\u003cString, ResourceRequest\u003e\u003e dedupRequests) {\n+    boolean offswitchResourcesUpdated \u003d false;\n+    for (Map.Entry\u003cSchedulerRequestKey, Map\u003cString, ResourceRequest\u003e\u003e entry :\n+    dedupRequests.entrySet()) {\n+      SchedulerRequestKey schedulerRequestKey \u003d entry.getKey();\n+      AppPlacementAllocator\u003cSchedulerNode\u003e appPlacementAllocator \u003d\n+          getAndAddAppPlacementAllocatorIfNotExist(schedulerRequestKey,\n+              applicationSchedulingEnvs.get(\n+                  ApplicationSchedulingConfig.ENV_APPLICATION_PLACEMENT_TYPE_CLASS));\n+\n+      // Update AppPlacementAllocator\n+      PendingAskUpdateResult pendingAmountChanges \u003d\n+          appPlacementAllocator.updatePendingAsk(entry.getValue().values(),\n+              recoverPreemptedRequestForAContainer);\n+\n+      if (null !\u003d pendingAmountChanges) {\n+        updatePendingResources(pendingAmountChanges, schedulerRequestKey,\n+            queue.getMetrics());\n+        offswitchResourcesUpdated \u003d true;\n+      }\n+    }\n+    return offswitchResourcesUpdated;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean internalAddResourceRequests(\n      boolean recoverPreemptedRequestForAContainer,\n      Map\u003cSchedulerRequestKey, Map\u003cString, ResourceRequest\u003e\u003e dedupRequests) {\n    boolean offswitchResourcesUpdated \u003d false;\n    for (Map.Entry\u003cSchedulerRequestKey, Map\u003cString, ResourceRequest\u003e\u003e entry :\n    dedupRequests.entrySet()) {\n      SchedulerRequestKey schedulerRequestKey \u003d entry.getKey();\n      AppPlacementAllocator\u003cSchedulerNode\u003e appPlacementAllocator \u003d\n          getAndAddAppPlacementAllocatorIfNotExist(schedulerRequestKey,\n              applicationSchedulingEnvs.get(\n                  ApplicationSchedulingConfig.ENV_APPLICATION_PLACEMENT_TYPE_CLASS));\n\n      // Update AppPlacementAllocator\n      PendingAskUpdateResult pendingAmountChanges \u003d\n          appPlacementAllocator.updatePendingAsk(entry.getValue().values(),\n              recoverPreemptedRequestForAContainer);\n\n      if (null !\u003d pendingAmountChanges) {\n        updatePendingResources(pendingAmountChanges, schedulerRequestKey,\n            queue.getMetrics());\n        offswitchResourcesUpdated \u003d true;\n      }\n    }\n    return offswitchResourcesUpdated;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
    }
  }
}