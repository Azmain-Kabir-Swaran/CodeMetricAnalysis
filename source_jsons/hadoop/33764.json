{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OCIContainerRuntime.java",
  "functionName": "mountReadOnlyPath",
  "functionId": "mountReadOnlyPath___mount-String__localizedResources-Map__Path,List__String____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
  "functionStartLine": 126,
  "functionEndLine": 146,
  "numCommitsSeen": 148,
  "timeTaken": 5249,
  "changeHistory": [
    "29465bf169a7e348a4f32265083450faf66d5631",
    "d45a0b7d73519acb78cd94ac3186bd8481f6c13e",
    "72b047715c1ae89dff3dfe76c1af91dfe255ed70"
  ],
  "changeHistoryShort": {
    "29465bf169a7e348a4f32265083450faf66d5631": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "d45a0b7d73519acb78cd94ac3186bd8481f6c13e": "Ymultichange(Yrename,Ymodifierchange)",
    "72b047715c1ae89dff3dfe76c1af91dfe255ed70": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29465bf169a7e348a4f32265083450faf66d5631": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
      "commitDate": "28/06/19 2:18 PM",
      "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  private String mountReadOnlyPath(String mount,\n+  protected String mountReadOnlyPath(String mount,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n       throws ContainerExecutionException {\n-    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n+    for (Map.Entry\u003cPath, List\u003cString\u003e\u003e resource :\n+        localizedResources.entrySet()) {\n       if (resource.getValue().contains(mount)) {\n         java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n         if (!path.isAbsolute()) {\n           throw new ContainerExecutionException(\"Mount must be absolute: \" +\n               mount);\n         }\n         if (Files.isSymbolicLink(path)) {\n           throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n               mount);\n         }\n         return path.toString();\n       }\n     }\n     throw new ContainerExecutionException(\"Mount must be a localized \" +\n         \"resource: \" + mount);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String mountReadOnlyPath(String mount,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n      throws ContainerExecutionException {\n    for (Map.Entry\u003cPath, List\u003cString\u003e\u003e resource :\n        localizedResources.entrySet()) {\n      if (resource.getValue().contains(mount)) {\n        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n        if (!path.isAbsolute()) {\n          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n              mount);\n        }\n        if (Files.isSymbolicLink(path)) {\n          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n              mount);\n        }\n        return path.toString();\n      }\n    }\n    throw new ContainerExecutionException(\"Mount must be a localized \" +\n        \"resource: \" + mount);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
            "oldMethodName": "mountReadOnlyPath",
            "newMethodName": "mountReadOnlyPath"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  private String mountReadOnlyPath(String mount,\n+  protected String mountReadOnlyPath(String mount,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n       throws ContainerExecutionException {\n-    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n+    for (Map.Entry\u003cPath, List\u003cString\u003e\u003e resource :\n+        localizedResources.entrySet()) {\n       if (resource.getValue().contains(mount)) {\n         java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n         if (!path.isAbsolute()) {\n           throw new ContainerExecutionException(\"Mount must be absolute: \" +\n               mount);\n         }\n         if (Files.isSymbolicLink(path)) {\n           throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n               mount);\n         }\n         return path.toString();\n       }\n     }\n     throw new ContainerExecutionException(\"Mount must be a localized \" +\n         \"resource: \" + mount);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String mountReadOnlyPath(String mount,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n      throws ContainerExecutionException {\n    for (Map.Entry\u003cPath, List\u003cString\u003e\u003e resource :\n        localizedResources.entrySet()) {\n      if (resource.getValue().contains(mount)) {\n        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n        if (!path.isAbsolute()) {\n          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n              mount);\n        }\n        if (Files.isSymbolicLink(path)) {\n          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n              mount);\n        }\n        return path.toString();\n      }\n    }\n    throw new ContainerExecutionException(\"Mount must be a localized \" +\n        \"resource: \" + mount);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
          "commitDate": "28/06/19 2:18 PM",
          "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/06/19 2:05 PM",
          "commitNameOld": "49c5e8ac249981b533763d1523e72872748e3f79",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  private String mountReadOnlyPath(String mount,\n+  protected String mountReadOnlyPath(String mount,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n       throws ContainerExecutionException {\n-    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n+    for (Map.Entry\u003cPath, List\u003cString\u003e\u003e resource :\n+        localizedResources.entrySet()) {\n       if (resource.getValue().contains(mount)) {\n         java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n         if (!path.isAbsolute()) {\n           throw new ContainerExecutionException(\"Mount must be absolute: \" +\n               mount);\n         }\n         if (Files.isSymbolicLink(path)) {\n           throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n               mount);\n         }\n         return path.toString();\n       }\n     }\n     throw new ContainerExecutionException(\"Mount must be a localized \" +\n         \"resource: \" + mount);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String mountReadOnlyPath(String mount,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n      throws ContainerExecutionException {\n    for (Map.Entry\u003cPath, List\u003cString\u003e\u003e resource :\n        localizedResources.entrySet()) {\n      if (resource.getValue().contains(mount)) {\n        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n        if (!path.isAbsolute()) {\n          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n              mount);\n        }\n        if (Files.isSymbolicLink(path)) {\n          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n              mount);\n        }\n        return path.toString();\n      }\n    }\n    throw new ContainerExecutionException(\"Mount must be a localized \" +\n        \"resource: \" + mount);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/OCIContainerRuntime.java",
          "extendedDetails": {}
        }
      ]
    },
    "d45a0b7d73519acb78cd94ac3186bd8481f6c13e": {
      "type": "Ymultichange(Yrename,Ymodifierchange)",
      "commitMessage": "YARN-8141.  Removed YARN_CONTAINER_RUNTIME_DOCKER_LOCAL_RESOURCE_MOUNTS flag.\n            Contributed by Chandni Singh\n",
      "commitDate": "17/05/18 2:29 PM",
      "commitName": "d45a0b7d73519acb78cd94ac3186bd8481f6c13e",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-8141.  Removed YARN_CONTAINER_RUNTIME_DOCKER_LOCAL_RESOURCE_MOUNTS flag.\n            Contributed by Chandni Singh\n",
          "commitDate": "17/05/18 2:29 PM",
          "commitName": "d45a0b7d73519acb78cd94ac3186bd8481f6c13e",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "11/05/18 4:56 PM",
          "commitNameOld": "6c8e51ca7eaaeef0626658b3c45d446a537e4dc0",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 5.9,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  protected String validateMount(String mount,\n+  private String mountReadOnlyPath(String mount,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n       throws ContainerExecutionException {\n     for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n       if (resource.getValue().contains(mount)) {\n         java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n         if (!path.isAbsolute()) {\n           throw new ContainerExecutionException(\"Mount must be absolute: \" +\n               mount);\n         }\n         if (Files.isSymbolicLink(path)) {\n           throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n               mount);\n         }\n         return path.toString();\n       }\n     }\n     throw new ContainerExecutionException(\"Mount must be a localized \" +\n         \"resource: \" + mount);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String mountReadOnlyPath(String mount,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n      throws ContainerExecutionException {\n    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n      if (resource.getValue().contains(mount)) {\n        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n        if (!path.isAbsolute()) {\n          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n              mount);\n        }\n        if (Files.isSymbolicLink(path)) {\n          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n              mount);\n        }\n        return path.toString();\n      }\n    }\n    throw new ContainerExecutionException(\"Mount must be a localized \" +\n        \"resource: \" + mount);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "validateMount",
            "newValue": "mountReadOnlyPath"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-8141.  Removed YARN_CONTAINER_RUNTIME_DOCKER_LOCAL_RESOURCE_MOUNTS flag.\n            Contributed by Chandni Singh\n",
          "commitDate": "17/05/18 2:29 PM",
          "commitName": "d45a0b7d73519acb78cd94ac3186bd8481f6c13e",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "11/05/18 4:56 PM",
          "commitNameOld": "6c8e51ca7eaaeef0626658b3c45d446a537e4dc0",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 5.9,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  protected String validateMount(String mount,\n+  private String mountReadOnlyPath(String mount,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n       throws ContainerExecutionException {\n     for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n       if (resource.getValue().contains(mount)) {\n         java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n         if (!path.isAbsolute()) {\n           throw new ContainerExecutionException(\"Mount must be absolute: \" +\n               mount);\n         }\n         if (Files.isSymbolicLink(path)) {\n           throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n               mount);\n         }\n         return path.toString();\n       }\n     }\n     throw new ContainerExecutionException(\"Mount must be a localized \" +\n         \"resource: \" + mount);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String mountReadOnlyPath(String mount,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n      throws ContainerExecutionException {\n    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n      if (resource.getValue().contains(mount)) {\n        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n        if (!path.isAbsolute()) {\n          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n              mount);\n        }\n        if (Files.isSymbolicLink(path)) {\n          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n              mount);\n        }\n        return path.toString();\n      }\n    }\n    throw new ContainerExecutionException(\"Mount must be a localized \" +\n        \"resource: \" + mount);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        }
      ]
    },
    "72b047715c1ae89dff3dfe76c1af91dfe255ed70": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4595. Add support for configurable read-only mounts when launching Docker containers. Contributed by Billie Rinaldi.\n",
      "commitDate": "05/05/16 12:31 AM",
      "commitName": "72b047715c1ae89dff3dfe76c1af91dfe255ed70",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,20 @@\n+  protected String validateMount(String mount,\n+      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n+      throws ContainerExecutionException {\n+    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n+      if (resource.getValue().contains(mount)) {\n+        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n+        if (!path.isAbsolute()) {\n+          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n+              mount);\n+        }\n+        if (Files.isSymbolicLink(path)) {\n+          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n+              mount);\n+        }\n+        return path.toString();\n+      }\n+    }\n+    throw new ContainerExecutionException(\"Mount must be a localized \" +\n+        \"resource: \" + mount);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected String validateMount(String mount,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources)\n      throws ContainerExecutionException {\n    for (Entry\u003cPath, List\u003cString\u003e\u003e resource : localizedResources.entrySet()) {\n      if (resource.getValue().contains(mount)) {\n        java.nio.file.Path path \u003d Paths.get(resource.getKey().toString());\n        if (!path.isAbsolute()) {\n          throw new ContainerExecutionException(\"Mount must be absolute: \" +\n              mount);\n        }\n        if (Files.isSymbolicLink(path)) {\n          throw new ContainerExecutionException(\"Mount cannot be a symlink: \" +\n              mount);\n        }\n        return path.toString();\n      }\n    }\n    throw new ContainerExecutionException(\"Mount must be a localized \" +\n        \"resource: \" + mount);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}