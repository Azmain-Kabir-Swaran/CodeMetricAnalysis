{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Credentials.java",
  "functionName": "writeProto",
  "functionId": "writeProto___out-DataOutput",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java",
  "functionStartLine": 365,
  "functionEndLine": 384,
  "numCommitsSeen": 25,
  "timeTaken": 1803,
  "changeHistory": [
    "edbbc03ce7d479f1b84d9209021e9d2822909cfe",
    "f19638333b11da6dcab9a964e73a49947b8390fd",
    "2753185a010e70f8d9539f42151c79177781122d"
  ],
  "changeHistoryShort": {
    "edbbc03ce7d479f1b84d9209021e9d2822909cfe": "Ybodychange",
    "f19638333b11da6dcab9a964e73a49947b8390fd": "Ymodifierchange",
    "2753185a010e70f8d9539f42151c79177781122d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "edbbc03ce7d479f1b84d9209021e9d2822909cfe": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs. Contributed by Vinayakumar B. (#1803)\n\n",
      "commitDate": "16/01/20 9:57 AM",
      "commitName": "edbbc03ce7d479f1b84d9209021e9d2822909cfe",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "02/05/19 12:58 PM",
      "commitNameOld": "7a3188d054481b9bd563e337901e93476303ce7f",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 258.92,
      "commitsBetweenForRepo": 1666,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   void writeProto(DataOutput out) throws IOException {\n     CredentialsProto.Builder storage \u003d CredentialsProto.newBuilder();\n     for (Map.Entry\u003cText, Token\u003c? extends TokenIdentifier\u003e\u003e e :\n                                                          tokenMap.entrySet()) {\n       CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n           setAliasBytes(ByteString.copyFrom(\n               e.getKey().getBytes(), 0, e.getKey().getLength())).\n-          setToken(e.getValue().toTokenProto());\n+          setToken(ProtobufHelper.protoFromToken(e.getValue()));\n       storage.addTokens(kv.build());\n     }\n \n     for(Map.Entry\u003cText, byte[]\u003e e : secretKeysMap.entrySet()) {\n       CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n           setAliasBytes(ByteString.copyFrom(\n               e.getKey().getBytes(), 0, e.getKey().getLength())).\n           setSecret(ByteString.copyFrom(e.getValue()));\n       storage.addSecrets(kv.build());\n     }\n     storage.build().writeDelimitedTo((DataOutputStream)out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void writeProto(DataOutput out) throws IOException {\n    CredentialsProto.Builder storage \u003d CredentialsProto.newBuilder();\n    for (Map.Entry\u003cText, Token\u003c? extends TokenIdentifier\u003e\u003e e :\n                                                         tokenMap.entrySet()) {\n      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n          setAliasBytes(ByteString.copyFrom(\n              e.getKey().getBytes(), 0, e.getKey().getLength())).\n          setToken(ProtobufHelper.protoFromToken(e.getValue()));\n      storage.addTokens(kv.build());\n    }\n\n    for(Map.Entry\u003cText, byte[]\u003e e : secretKeysMap.entrySet()) {\n      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n          setAliasBytes(ByteString.copyFrom(\n              e.getKey().getBytes(), 0, e.getKey().getLength())).\n          setSecret(ByteString.copyFrom(e.getValue()));\n      storage.addSecrets(kv.build());\n    }\n    storage.build().writeDelimitedTo((DataOutputStream)out);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java",
      "extendedDetails": {}
    },
    "f19638333b11da6dcab9a964e73a49947b8390fd": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-15059. Undoing the switch of Credentials to PB format as default - done via HADOOP-12563 for supporting 2.x to 3.x upgrades.\n",
      "commitDate": "08/12/17 8:00 AM",
      "commitName": "f19638333b11da6dcab9a964e73a49947b8390fd",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 143.48,
      "commitsBetweenForRepo": 1187,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  public void writeProto(DataOutput out) throws IOException {\n+  void writeProto(DataOutput out) throws IOException {\n     CredentialsProto.Builder storage \u003d CredentialsProto.newBuilder();\n     for (Map.Entry\u003cText, Token\u003c? extends TokenIdentifier\u003e\u003e e :\n                                                          tokenMap.entrySet()) {\n       CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n           setAliasBytes(ByteString.copyFrom(\n               e.getKey().getBytes(), 0, e.getKey().getLength())).\n           setToken(e.getValue().toTokenProto());\n       storage.addTokens(kv.build());\n     }\n \n     for(Map.Entry\u003cText, byte[]\u003e e : secretKeysMap.entrySet()) {\n       CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n           setAliasBytes(ByteString.copyFrom(\n               e.getKey().getBytes(), 0, e.getKey().getLength())).\n           setSecret(ByteString.copyFrom(e.getValue()));\n       storage.addSecrets(kv.build());\n     }\n     storage.build().writeDelimitedTo((DataOutputStream)out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void writeProto(DataOutput out) throws IOException {\n    CredentialsProto.Builder storage \u003d CredentialsProto.newBuilder();\n    for (Map.Entry\u003cText, Token\u003c? extends TokenIdentifier\u003e\u003e e :\n                                                         tokenMap.entrySet()) {\n      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n          setAliasBytes(ByteString.copyFrom(\n              e.getKey().getBytes(), 0, e.getKey().getLength())).\n          setToken(e.getValue().toTokenProto());\n      storage.addTokens(kv.build());\n    }\n\n    for(Map.Entry\u003cText, byte[]\u003e e : secretKeysMap.entrySet()) {\n      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n          setAliasBytes(ByteString.copyFrom(\n              e.getKey().getBytes(), 0, e.getKey().getLength())).\n          setSecret(ByteString.copyFrom(e.getValue()));\n      storage.addSecrets(kv.build());\n    }\n    storage.build().writeDelimitedTo((DataOutputStream)out);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "2753185a010e70f8d9539f42151c79177781122d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12563. Updated utility (dtutil) to create/modify token files. Contributed by Matthew Paduano\n",
      "commitDate": "29/04/16 10:32 PM",
      "commitName": "2753185a010e70f8d9539f42151c79177781122d",
      "commitAuthor": "Ravi Prakash",
      "diff": "@@ -0,0 +1,20 @@\n+  public void writeProto(DataOutput out) throws IOException {\n+    CredentialsProto.Builder storage \u003d CredentialsProto.newBuilder();\n+    for (Map.Entry\u003cText, Token\u003c? extends TokenIdentifier\u003e\u003e e :\n+                                                         tokenMap.entrySet()) {\n+      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n+          setAliasBytes(ByteString.copyFrom(\n+              e.getKey().getBytes(), 0, e.getKey().getLength())).\n+          setToken(e.getValue().toTokenProto());\n+      storage.addTokens(kv.build());\n+    }\n+\n+    for(Map.Entry\u003cText, byte[]\u003e e : secretKeysMap.entrySet()) {\n+      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n+          setAliasBytes(ByteString.copyFrom(\n+              e.getKey().getBytes(), 0, e.getKey().getLength())).\n+          setSecret(ByteString.copyFrom(e.getValue()));\n+      storage.addSecrets(kv.build());\n+    }\n+    storage.build().writeDelimitedTo((DataOutputStream)out);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeProto(DataOutput out) throws IOException {\n    CredentialsProto.Builder storage \u003d CredentialsProto.newBuilder();\n    for (Map.Entry\u003cText, Token\u003c? extends TokenIdentifier\u003e\u003e e :\n                                                         tokenMap.entrySet()) {\n      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n          setAliasBytes(ByteString.copyFrom(\n              e.getKey().getBytes(), 0, e.getKey().getLength())).\n          setToken(e.getValue().toTokenProto());\n      storage.addTokens(kv.build());\n    }\n\n    for(Map.Entry\u003cText, byte[]\u003e e : secretKeysMap.entrySet()) {\n      CredentialsKVProto.Builder kv \u003d CredentialsKVProto.newBuilder().\n          setAliasBytes(ByteString.copyFrom(\n              e.getKey().getBytes(), 0, e.getKey().getLength())).\n          setSecret(ByteString.copyFrom(e.getValue()));\n      storage.addSecrets(kv.build());\n    }\n    storage.build().writeDelimitedTo((DataOutputStream)out);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java"
    }
  }
}