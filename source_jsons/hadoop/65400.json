{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3Guard.java",
  "functionName": "dirMetaToStatuses",
  "functionId": "dirMetaToStatuses___dirMeta-DirListingMetadata",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
  "functionStartLine": 281,
  "functionEndLine": 296,
  "numCommitsSeen": 25,
  "timeTaken": 2174,
  "changeHistory": [
    "a36274d69947648dbe82721220cc5240ec5d396d",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "a36274d69947648dbe82721220cc5240ec5d396d": "Ymultichange(Yreturntypechange,Ybodychange)",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "30/04/19 3:53 AM",
          "commitNameOld": "0af4011580878566213016af0c32633eabd15100",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 19.44,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static FileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n+  public static S3AFileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n     if (dirMeta \u003d\u003d null) {\n       return EMPTY_LISTING;\n     }\n \n     Collection\u003cPathMetadata\u003e listing \u003d dirMeta.getListing();\n     List\u003cFileStatus\u003e statuses \u003d new ArrayList\u003c\u003e();\n \n     for (PathMetadata pm : listing) {\n       if (!pm.isDeleted()) {\n         statuses.add(pm.getFileStatus());\n       }\n     }\n \n-    return statuses.toArray(new FileStatus[0]);\n+    return statuses.toArray(new S3AFileStatus[0]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static S3AFileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n    if (dirMeta \u003d\u003d null) {\n      return EMPTY_LISTING;\n    }\n\n    Collection\u003cPathMetadata\u003e listing \u003d dirMeta.getListing();\n    List\u003cFileStatus\u003e statuses \u003d new ArrayList\u003c\u003e();\n\n    for (PathMetadata pm : listing) {\n      if (!pm.isDeleted()) {\n        statuses.add(pm.getFileStatus());\n      }\n    }\n\n    return statuses.toArray(new S3AFileStatus[0]);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "FileStatus[]",
            "newValue": "S3AFileStatus[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "30/04/19 3:53 AM",
          "commitNameOld": "0af4011580878566213016af0c32633eabd15100",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 19.44,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static FileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n+  public static S3AFileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n     if (dirMeta \u003d\u003d null) {\n       return EMPTY_LISTING;\n     }\n \n     Collection\u003cPathMetadata\u003e listing \u003d dirMeta.getListing();\n     List\u003cFileStatus\u003e statuses \u003d new ArrayList\u003c\u003e();\n \n     for (PathMetadata pm : listing) {\n       if (!pm.isDeleted()) {\n         statuses.add(pm.getFileStatus());\n       }\n     }\n \n-    return statuses.toArray(new FileStatus[0]);\n+    return statuses.toArray(new S3AFileStatus[0]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static S3AFileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n    if (dirMeta \u003d\u003d null) {\n      return EMPTY_LISTING;\n    }\n\n    Collection\u003cPathMetadata\u003e listing \u003d dirMeta.getListing();\n    List\u003cFileStatus\u003e statuses \u003d new ArrayList\u003c\u003e();\n\n    for (PathMetadata pm : listing) {\n      if (!pm.isDeleted()) {\n        statuses.add(pm.getFileStatus());\n      }\n    }\n\n    return statuses.toArray(new S3AFileStatus[0]);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {}
        }
      ]
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,16 @@\n+  public static FileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n+    if (dirMeta \u003d\u003d null) {\n+      return EMPTY_LISTING;\n+    }\n+\n+    Collection\u003cPathMetadata\u003e listing \u003d dirMeta.getListing();\n+    List\u003cFileStatus\u003e statuses \u003d new ArrayList\u003c\u003e();\n+\n+    for (PathMetadata pm : listing) {\n+      if (!pm.isDeleted()) {\n+        statuses.add(pm.getFileStatus());\n+      }\n+    }\n+\n+    return statuses.toArray(new FileStatus[0]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileStatus[] dirMetaToStatuses(DirListingMetadata dirMeta)  {\n    if (dirMeta \u003d\u003d null) {\n      return EMPTY_LISTING;\n    }\n\n    Collection\u003cPathMetadata\u003e listing \u003d dirMeta.getListing();\n    List\u003cFileStatus\u003e statuses \u003d new ArrayList\u003c\u003e();\n\n    for (PathMetadata pm : listing) {\n      if (!pm.isDeleted()) {\n        statuses.add(pm.getFileStatus());\n      }\n    }\n\n    return statuses.toArray(new FileStatus[0]);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java"
    }
  }
}