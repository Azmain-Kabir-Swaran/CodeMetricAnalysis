{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableRatesWithAggregation.java",
  "functionName": "init",
  "functionId": "init___protocol-Class__?__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java",
  "functionStartLine": 70,
  "functionEndLine": 80,
  "numCommitsSeen": 5,
  "timeTaken": 570,
  "changeHistory": [
    "77c13c385774c51766fe505397fa916754ac08d4"
  ],
  "changeHistoryShort": {
    "77c13c385774c51766fe505397fa916754ac08d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77c13c385774c51766fe505397fa916754ac08d4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13782. Make MutableRates metrics thread-local write, aggregate-on-read. Contributed by Erik Krogen.\n",
      "commitDate": "08/11/16 4:07 PM",
      "commitName": "77c13c385774c51766fe505397fa916754ac08d4",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,11 @@\n+  public void init(Class\u003c?\u003e protocol) {\n+    if (protocolCache.contains(protocol)) {\n+      return;\n+    }\n+    protocolCache.add(protocol);\n+    for (Method method : protocol.getDeclaredMethods()) {\n+      String name \u003d method.getName();\n+      LOG.debug(name);\n+      addMetricIfNotExists(name);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Class\u003c?\u003e protocol) {\n    if (protocolCache.contains(protocol)) {\n      return;\n    }\n    protocolCache.add(protocol);\n    for (Method method : protocol.getDeclaredMethods()) {\n      String name \u003d method.getName();\n      LOG.debug(name);\n      addMetricIfNotExists(name);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java"
    }
  }
}