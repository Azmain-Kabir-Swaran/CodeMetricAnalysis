{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "setQueueAcls",
  "functionId": "setQueueAcls___queueAcls-Map__String,Map__AccessType,AccessControlList____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1683,
  "functionEndLine": 1696,
  "numCommitsSeen": 226,
  "timeTaken": 2316,
  "changeHistory": [
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5"
  ],
  "changeHistoryShort": {
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4997. Update fair scheduler to use pluggable auth provider (Contributed by Tao Jie via Daniel Templeton)\n",
      "commitDate": "30/11/16 9:50 AM",
      "commitName": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,14 @@\n+  private void setQueueAcls(\n+      Map\u003cString, Map\u003cAccessType, AccessControlList\u003e\u003e queueAcls)\n+      throws IOException {\n+    authorizer.setPermission(allocsLoader.getDefaultPermissions(),\n+        UserGroupInformation.getCurrentUser());\n+    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n+    for (Entry\u003cString, Map\u003cAccessType, AccessControlList\u003e\u003e queueAcl : queueAcls\n+        .entrySet()) {\n+      permissions.add(new Permission(new PrivilegedEntity(EntityType.QUEUE,\n+          queueAcl.getKey()), queueAcl.getValue()));\n+    }\n+    authorizer.setPermission(permissions,\n+        UserGroupInformation.getCurrentUser());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setQueueAcls(\n      Map\u003cString, Map\u003cAccessType, AccessControlList\u003e\u003e queueAcls)\n      throws IOException {\n    authorizer.setPermission(allocsLoader.getDefaultPermissions(),\n        UserGroupInformation.getCurrentUser());\n    List\u003cPermission\u003e permissions \u003d new ArrayList\u003c\u003e();\n    for (Entry\u003cString, Map\u003cAccessType, AccessControlList\u003e\u003e queueAcl : queueAcls\n        .entrySet()) {\n      permissions.add(new Permission(new PrivilegedEntity(EntityType.QUEUE,\n          queueAcl.getKey()), queueAcl.getValue()));\n    }\n    authorizer.setPermission(permissions,\n        UserGroupInformation.getCurrentUser());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}