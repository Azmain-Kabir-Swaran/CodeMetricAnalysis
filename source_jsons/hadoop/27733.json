{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityMulticastAMRMProxyPolicy.java",
  "functionName": "getSubClusterForUnResolvedRequest",
  "functionId": "getSubClusterForUnResolvedRequest___allocationId-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
  "functionStartLine": 643,
  "functionEndLine": 658,
  "numCommitsSeen": 11,
  "timeTaken": 798,
  "changeHistory": [
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7"
  ],
  "changeHistoryShort": {
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8697. LocalityMulticastAMRMProxyPolicy should fallback to random sub-cluster when cannot resolve resource. Contributed by Botong Huang.\n",
      "commitDate": "28/08/18 4:01 PM",
      "commitName": "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "diff": "@@ -0,0 +1,16 @@\n+    private SubClusterId getSubClusterForUnResolvedRequest(long allocationId) {\n+      if (unResolvedRequestLocation.containsKey(allocationId)) {\n+        return unResolvedRequestLocation.get(allocationId);\n+      }\n+      int id \u003d rand.nextInt(activeAndEnabledSC.size());\n+      for (SubClusterId subclusterId : activeAndEnabledSC) {\n+        if (id \u003d\u003d 0) {\n+          unResolvedRequestLocation.put(allocationId, subclusterId);\n+          return subclusterId;\n+        }\n+        id--;\n+      }\n+      throw new RuntimeException(\n+          \"Should not be here. activeAndEnabledSC size \u003d \"\n+              + activeAndEnabledSC.size() + \" id \u003d \" + id);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private SubClusterId getSubClusterForUnResolvedRequest(long allocationId) {\n      if (unResolvedRequestLocation.containsKey(allocationId)) {\n        return unResolvedRequestLocation.get(allocationId);\n      }\n      int id \u003d rand.nextInt(activeAndEnabledSC.size());\n      for (SubClusterId subclusterId : activeAndEnabledSC) {\n        if (id \u003d\u003d 0) {\n          unResolvedRequestLocation.put(allocationId, subclusterId);\n          return subclusterId;\n        }\n        id--;\n      }\n      throw new RuntimeException(\n          \"Should not be here. activeAndEnabledSC size \u003d \"\n              + activeAndEnabledSC.size() + \" id \u003d \" + id);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java"
    }
  }
}