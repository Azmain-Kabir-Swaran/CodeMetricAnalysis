{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegistryDNS.java",
  "functionName": "initializeZonesFromFiles",
  "functionId": "initializeZonesFromFiles___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
  "functionStartLine": 357,
  "functionEndLine": 387,
  "numCommitsSeen": 15,
  "timeTaken": 1412,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "f934f62fc71b4776e88f86d4254de0ea12147511"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "f934f62fc71b4776e88f86d4254de0ea12147511": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void initializeZonesFromFiles(Configuration conf) throws IOException {\n    // should this be in HDFS?\n    String zonesDir \u003d conf.get(KEY_DNS_ZONES_DIR);\n    if (zonesDir !\u003d null) {\n      Iterator\u003cFile\u003e iterator \u003d FileUtils.iterateFiles(new File(zonesDir),\n          new IOFileFilter() {\n            @Override\n            public boolean accept(\n                File file) {\n              return file.getName().endsWith(\n                  ZONE_SUFFIX);\n            }\n\n            @Override\n            public boolean accept(\n                File file,\n                String s) {\n              return s.endsWith(\n                  ZONE_SUFFIX);\n            }\n          }, null);\n      while (iterator.hasNext()) {\n        File file \u003d iterator.next();\n        String name \u003d file.getName();\n        name \u003d name.substring(0, name.indexOf(ZONE_SUFFIX) + 1);\n        Zone zone \u003d new SecureableZone(Name.fromString(name),\n            file.getAbsolutePath());\n        zones.putIfAbsent(zone.getOrigin(), zone);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
      }
    },
    "f934f62fc71b4776e88f86d4254de0ea12147511": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5218. Initial core change for DNS for YARN. Contributed by Jonathan Maron\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,31 @@\n+  private void initializeZonesFromFiles(Configuration conf) throws IOException {\n+    // should this be in HDFS?\n+    String zonesDir \u003d conf.get(KEY_DNS_ZONES_DIR);\n+    if (zonesDir !\u003d null) {\n+      Iterator\u003cFile\u003e iterator \u003d FileUtils.iterateFiles(new File(zonesDir),\n+          new IOFileFilter() {\n+            @Override\n+            public boolean accept(\n+                File file) {\n+              return file.getName().endsWith(\n+                  ZONE_SUFFIX);\n+            }\n+\n+            @Override\n+            public boolean accept(\n+                File file,\n+                String s) {\n+              return s.endsWith(\n+                  ZONE_SUFFIX);\n+            }\n+          }, null);\n+      while (iterator.hasNext()) {\n+        File file \u003d iterator.next();\n+        String name \u003d file.getName();\n+        name \u003d name.substring(0, name.indexOf(ZONE_SUFFIX) + 1);\n+        Zone zone \u003d new SecureableZone(Name.fromString(name),\n+            file.getAbsolutePath());\n+        zones.putIfAbsent(zone.getOrigin(), zone);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeZonesFromFiles(Configuration conf) throws IOException {\n    // should this be in HDFS?\n    String zonesDir \u003d conf.get(KEY_DNS_ZONES_DIR);\n    if (zonesDir !\u003d null) {\n      Iterator\u003cFile\u003e iterator \u003d FileUtils.iterateFiles(new File(zonesDir),\n          new IOFileFilter() {\n            @Override\n            public boolean accept(\n                File file) {\n              return file.getName().endsWith(\n                  ZONE_SUFFIX);\n            }\n\n            @Override\n            public boolean accept(\n                File file,\n                String s) {\n              return s.endsWith(\n                  ZONE_SUFFIX);\n            }\n          }, null);\n      while (iterator.hasNext()) {\n        File file \u003d iterator.next();\n        String name \u003d file.getName();\n        name \u003d name.substring(0, name.indexOf(ZONE_SUFFIX) + 1);\n        Zone zone \u003d new SecureableZone(Name.fromString(name),\n            file.getAbsolutePath());\n        zones.putIfAbsent(zone.getOrigin(), zone);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
    }
  }
}