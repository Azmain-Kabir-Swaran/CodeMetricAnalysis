{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParentQueue.java",
  "functionName": "updateClusterResource",
  "functionId": "updateClusterResource___clusterResource-Resource__resourceLimits-ResourceLimits",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
  "functionStartLine": 898,
  "functionEndLine": 927,
  "numCommitsSeen": 130,
  "timeTaken": 7657,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "cc51607ccdf60f4ebecf7afa3e2056297ca0ac5f",
    "5e798b1a0ddceeaf54703b94052501867156e979",
    "0e065f2edead41f6f894c9d70def389af1c0f239",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "4d92aefd35d4517d9435d81bafdec0d77905a7a0",
    "ae14e5d07f1b6702a5160637438028bb03d9387e",
    "fa7a43529d529f0006c8033c2003f15b9b93f103",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
    "d573f09fb93dbb711d504620af5d73840ea063a6",
    "14dd647c556016d351f425ee956ccf800ccb9ce2",
    "453926397182078c65a4428eb5de5a90d6af6448",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1",
    "1f46b991da9b91585608a0babd3eda39485dce09",
    "6b608aad7d52b524fa94955a538e8b3524d42d93"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "cc51607ccdf60f4ebecf7afa3e2056297ca0ac5f": "Ybodychange",
    "5e798b1a0ddceeaf54703b94052501867156e979": "Ybodychange",
    "0e065f2edead41f6f894c9d70def389af1c0f239": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4d92aefd35d4517d9435d81bafdec0d77905a7a0": "Ybodychange",
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Ybodychange",
    "fa7a43529d529f0006c8033c2003f15b9b93f103": "Ybodychange",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": "Ybodychange",
    "d573f09fb93dbb711d504620af5d73840ea063a6": "Ybodychange",
    "14dd647c556016d351f425ee956ccf800ccb9ce2": "Ymultichange(Yparameterchange,Ybodychange)",
    "453926397182078c65a4428eb5de5a90d6af6448": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": "Ybodychange",
    "1f46b991da9b91585608a0babd3eda39485dce09": "Ybodychange",
    "6b608aad7d52b524fa94955a538e8b3524d42d93": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n   public void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n-\n       // Update effective capacity in all parent queue.\n       Set\u003cString\u003e configuredNodelabels \u003d csContext.getConfiguration()\n           .getConfiguredNodeLabels(getQueuePath());\n       for (String label : configuredNodelabels) {\n         calculateEffectiveResourcesAndCapacity(label, clusterResource);\n       }\n \n       // Update all children\n       for (CSQueue childQueue : childQueues) {\n         // Get ResourceLimits of child queue before assign containers\n         ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n             clusterResource, resourceLimits.getLimit(),\n             RMNodeLabelsManager.NO_LABEL);\n         childQueue.updateClusterResource(clusterResource, childLimits);\n       }\n \n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n       // Update configured capacity/max-capacity for default partition only\n       CSQueueUtils.updateConfiguredCapacityMetrics(resourceCalculator,\n           labelManager.getResourceByLabel(null, clusterResource),\n           RMNodeLabelsManager.NO_LABEL, this);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    writeLock.lock();\n    try {\n      // Update effective capacity in all parent queue.\n      Set\u003cString\u003e configuredNodelabels \u003d csContext.getConfiguration()\n          .getConfiguredNodeLabels(getQueuePath());\n      for (String label : configuredNodelabels) {\n        calculateEffectiveResourcesAndCapacity(label, clusterResource);\n      }\n\n      // Update all children\n      for (CSQueue childQueue : childQueues) {\n        // Get ResourceLimits of child queue before assign containers\n        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n            clusterResource, resourceLimits.getLimit(),\n            RMNodeLabelsManager.NO_LABEL);\n        childQueue.updateClusterResource(clusterResource, childLimits);\n      }\n\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n      // Update configured capacity/max-capacity for default partition only\n      CSQueueUtils.updateConfiguredCapacityMetrics(resourceCalculator,\n          labelManager.getResourceByLabel(null, clusterResource),\n          RMNodeLabelsManager.NO_LABEL, this);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "cc51607ccdf60f4ebecf7afa3e2056297ca0ac5f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9085. Add Guaranteed and MaxCapacity to CSQueueMetrics\n",
      "commitDate": "07/12/18 10:45 AM",
      "commitName": "cc51607ccdf60f4ebecf7afa3e2056297ca0ac5f",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "26/09/18 2:43 PM",
      "commitNameOld": "6b988d821e62d29c118e10a7213583b92c302baf",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 71.88,
      "commitsBetweenForRepo": 591,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n   public void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     try {\n       writeLock.lock();\n \n       // Update effective capacity in all parent queue.\n       Set\u003cString\u003e configuredNodelabels \u003d csContext.getConfiguration()\n           .getConfiguredNodeLabels(getQueuePath());\n       for (String label : configuredNodelabels) {\n         calculateEffectiveResourcesAndCapacity(label, clusterResource);\n       }\n \n       // Update all children\n       for (CSQueue childQueue : childQueues) {\n         // Get ResourceLimits of child queue before assign containers\n         ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n             clusterResource, resourceLimits.getLimit(),\n             RMNodeLabelsManager.NO_LABEL);\n         childQueue.updateClusterResource(clusterResource, childLimits);\n       }\n \n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n+      // Update configured capacity/max-capacity for default partition only\n+      CSQueueUtils.updateConfiguredCapacityMetrics(resourceCalculator,\n+          labelManager.getResourceByLabel(null, clusterResource),\n+          RMNodeLabelsManager.NO_LABEL, this);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    try {\n      writeLock.lock();\n\n      // Update effective capacity in all parent queue.\n      Set\u003cString\u003e configuredNodelabels \u003d csContext.getConfiguration()\n          .getConfiguredNodeLabels(getQueuePath());\n      for (String label : configuredNodelabels) {\n        calculateEffectiveResourcesAndCapacity(label, clusterResource);\n      }\n\n      // Update all children\n      for (CSQueue childQueue : childQueues) {\n        // Get ResourceLimits of child queue before assign containers\n        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n            clusterResource, resourceLimits.getLimit(),\n            RMNodeLabelsManager.NO_LABEL);\n        childQueue.updateClusterResource(clusterResource, childLimits);\n      }\n\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n      // Update configured capacity/max-capacity for default partition only\n      CSQueueUtils.updateConfiguredCapacityMetrics(resourceCalculator,\n          labelManager.getResourceByLabel(null, clusterResource),\n          RMNodeLabelsManager.NO_LABEL, this);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "5e798b1a0ddceeaf54703b94052501867156e979": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/11/17 11:25 AM",
      "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 21.31,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,27 @@\n   public void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     try {\n       writeLock.lock();\n+\n+      // Update effective capacity in all parent queue.\n+      Set\u003cString\u003e configuredNodelabels \u003d csContext.getConfiguration()\n+          .getConfiguredNodeLabels(getQueuePath());\n+      for (String label : configuredNodelabels) {\n+        calculateEffectiveResourcesAndCapacity(label, clusterResource);\n+      }\n+\n       // Update all children\n       for (CSQueue childQueue : childQueues) {\n         // Get ResourceLimits of child queue before assign containers\n         ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n             clusterResource, resourceLimits.getLimit(),\n             RMNodeLabelsManager.NO_LABEL);\n         childQueue.updateClusterResource(clusterResource, childLimits);\n       }\n \n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    try {\n      writeLock.lock();\n\n      // Update effective capacity in all parent queue.\n      Set\u003cString\u003e configuredNodelabels \u003d csContext.getConfiguration()\n          .getConfiguredNodeLabels(getQueuePath());\n      for (String label : configuredNodelabels) {\n        calculateEffectiveResourcesAndCapacity(label, clusterResource);\n      }\n\n      // Update all children\n      for (CSQueue childQueue : childQueues) {\n        // Get ResourceLimits of child queue before assign containers\n        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n            clusterResource, resourceLimits.getLimit(),\n            RMNodeLabelsManager.NO_LABEL);\n        childQueue.updateClusterResource(clusterResource, childLimits);\n      }\n\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "0e065f2edead41f6f894c9d70def389af1c0f239": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6195. Export UsedCapacity and AbsoluteUsedCapacity to JMX. Contributed by Benson Qiu\n",
      "commitDate": "11/04/17 6:44 AM",
      "commitName": "0e065f2edead41f6f894c9d70def389af1c0f239",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "04/04/17 2:39 PM",
      "commitNameOld": "3fdae0a2b66c5fb6853875b66fcf50bc96d6e2e9",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 6.67,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     try {\n       writeLock.lock();\n       // Update all children\n       for (CSQueue childQueue : childQueues) {\n         // Get ResourceLimits of child queue before assign containers\n         ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n             clusterResource, resourceLimits.getLimit(),\n             RMNodeLabelsManager.NO_LABEL);\n         childQueue.updateClusterResource(clusterResource, childLimits);\n       }\n \n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-          minimumAllocation, this, labelManager, null);\n+          this, labelManager, null);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    try {\n      writeLock.lock();\n      // Update all children\n      for (CSQueue childQueue : childQueues) {\n        // Get ResourceLimits of child queue before assign containers\n        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n            clusterResource, resourceLimits.getLimit(),\n            RMNodeLabelsManager.NO_LABEL);\n        childQueue.updateClusterResource(clusterResource, childLimits);\n      }\n\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,19 @@\n-  public synchronized void updateClusterResource(Resource clusterResource,\n+  public void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n-    // Update all children\n-    for (CSQueue childQueue : childQueues) {\n-      // Get ResourceLimits of child queue before assign containers\n-      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n-          clusterResource, resourceLimits.getLimit(),\n-          RMNodeLabelsManager.NO_LABEL);\n-      childQueue.updateClusterResource(clusterResource, childLimits);\n+    try {\n+      writeLock.lock();\n+      // Update all children\n+      for (CSQueue childQueue : childQueues) {\n+        // Get ResourceLimits of child queue before assign containers\n+        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n+            clusterResource, resourceLimits.getLimit(),\n+            RMNodeLabelsManager.NO_LABEL);\n+        childQueue.updateClusterResource(clusterResource, childLimits);\n+      }\n+\n+      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+          minimumAllocation, this, labelManager, null);\n+    } finally {\n+      writeLock.unlock();\n     }\n-    \n-    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-        minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    try {\n      writeLock.lock();\n      // Update all children\n      for (CSQueue childQueue : childQueues) {\n        // Get ResourceLimits of child queue before assign containers\n        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n            clusterResource, resourceLimits.getLimit(),\n            RMNodeLabelsManager.NO_LABEL);\n        childQueue.updateClusterResource(clusterResource, childLimits);\n      }\n\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          minimumAllocation, this, labelManager, null);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,19 @@\n-  public synchronized void updateClusterResource(Resource clusterResource,\n+  public void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n-    // Update all children\n-    for (CSQueue childQueue : childQueues) {\n-      // Get ResourceLimits of child queue before assign containers\n-      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n-          clusterResource, resourceLimits.getLimit(),\n-          RMNodeLabelsManager.NO_LABEL);\n-      childQueue.updateClusterResource(clusterResource, childLimits);\n+    try {\n+      writeLock.lock();\n+      // Update all children\n+      for (CSQueue childQueue : childQueues) {\n+        // Get ResourceLimits of child queue before assign containers\n+        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n+            clusterResource, resourceLimits.getLimit(),\n+            RMNodeLabelsManager.NO_LABEL);\n+        childQueue.updateClusterResource(clusterResource, childLimits);\n+      }\n+\n+      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+          minimumAllocation, this, labelManager, null);\n+    } finally {\n+      writeLock.unlock();\n     }\n-    \n-    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-        minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    try {\n      writeLock.lock();\n      // Update all children\n      for (CSQueue childQueue : childQueues) {\n        // Get ResourceLimits of child queue before assign containers\n        ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n            clusterResource, resourceLimits.getLimit(),\n            RMNodeLabelsManager.NO_LABEL);\n        childQueue.updateClusterResource(clusterResource, childLimits);\n      }\n\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          minimumAllocation, this, labelManager, null);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "4d92aefd35d4517d9435d81bafdec0d77905a7a0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4280. CapacityScheduler reservations may not prevent indefinite postponement on a busy cluster. Contributed by Kuhu Shukla\n",
      "commitDate": "03/08/16 11:53 AM",
      "commitName": "4d92aefd35d4517d9435d81bafdec0d77905a7a0",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 139.79,
      "commitsBetweenForRepo": 1021,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public synchronized void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       // Get ResourceLimits of child queue before assign containers\n       ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n-          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);\n+          clusterResource, resourceLimits.getLimit(),\n+          RMNodeLabelsManager.NO_LABEL);\n       childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n     CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n         minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n          clusterResource, resourceLimits.getLimit(),\n          RMNodeLabelsManager.NO_LABEL);\n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n        minimumAllocation, this, labelManager, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       // Get ResourceLimits of child queue before assign containers\n-      ResourceLimits childLimits \u003d\n-          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n+      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n+          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);\n       childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n     CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n         minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);\n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n        minimumAllocation, this, labelManager, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "fa7a43529d529f0006c8033c2003f15b9b93f103": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\"\n\nThis reverts commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913.\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 4:59 PM",
      "commitNameOld": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       // Get ResourceLimits of child queue before assign containers\n-      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n-          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);\n+      ResourceLimits childLimits \u003d\n+          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n       childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n     CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n         minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d\n          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n        minimumAllocation, this, labelManager, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": {
      "type": "Ybodychange",
      "commitMessage": "CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n",
      "commitDate": "16/03/16 4:59 PM",
      "commitName": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "28/02/16 9:35 AM",
      "commitNameOld": "f9692770a58af0ab082eb7f15da9cbdcd177605b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 17.27,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       // Get ResourceLimits of child queue before assign containers\n-      ResourceLimits childLimits \u003d\n-          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n+      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n+          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);\n       childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n     CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n         minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d getResourceLimitsOfChild(childQueue,\n          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);\n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n        minimumAllocation, this, labelManager, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "d573f09fb93dbb711d504620af5d73840ea063a6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2696. Queue sorting in CapacityScheduler should consider node label. Contributed by Wangda Tan\n",
      "commitDate": "17/04/15 1:36 PM",
      "commitName": "d573f09fb93dbb711d504620af5d73840ea063a6",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/04/15 11:45 AM",
      "commitNameOld": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n   public synchronized void updateClusterResource(Resource clusterResource,\n       ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       // Get ResourceLimits of child queue before assign containers\n       ResourceLimits childLimits \u003d\n           getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n       childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n-    // Update metrics\n-    CSQueueUtils.updateQueueStatistics(\n-        resourceCalculator, this, parent, clusterResource, minimumAllocation);\n+    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+        minimumAllocation, this, labelManager, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d\n          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n        minimumAllocation, this, labelManager, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "14dd647c556016d351f425ee956ccf800ccb9ce2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3265. Fixed a deadlock in CapacityScheduler by always passing a queue\u0027s available resource-limit from the parent queue. Contributed by Wangda Tan.\n",
      "commitDate": "02/03/15 5:52 PM",
      "commitName": "14dd647c556016d351f425ee956ccf800ccb9ce2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3265. Fixed a deadlock in CapacityScheduler by always passing a queue\u0027s available resource-limit from the parent queue. Contributed by Wangda Tan.\n",
          "commitDate": "02/03/15 5:52 PM",
          "commitName": "14dd647c556016d351f425ee956ccf800ccb9ce2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/02/15 2:58 PM",
          "commitNameOld": "18a594257e052e8f10a03e5594e6cc6901dc56be",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 18.12,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n-  public synchronized void updateClusterResource(Resource clusterResource) {\n+  public synchronized void updateClusterResource(Resource clusterResource,\n+      ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n-      childQueue.updateClusterResource(clusterResource);\n+      // Get ResourceLimits of child queue before assign containers\n+      ResourceLimits childLimits \u003d\n+          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n+      childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n     // Update metrics\n     CSQueueUtils.updateQueueStatistics(\n         resourceCalculator, this, parent, clusterResource, minimumAllocation);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d\n          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    // Update metrics\n    CSQueueUtils.updateQueueStatistics(\n        resourceCalculator, this, parent, clusterResource, minimumAllocation);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource]",
            "newValue": "[clusterResource-Resource, resourceLimits-ResourceLimits]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3265. Fixed a deadlock in CapacityScheduler by always passing a queue\u0027s available resource-limit from the parent queue. Contributed by Wangda Tan.\n",
          "commitDate": "02/03/15 5:52 PM",
          "commitName": "14dd647c556016d351f425ee956ccf800ccb9ce2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/02/15 2:58 PM",
          "commitNameOld": "18a594257e052e8f10a03e5594e6cc6901dc56be",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 18.12,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,14 @@\n-  public synchronized void updateClusterResource(Resource clusterResource) {\n+  public synchronized void updateClusterResource(Resource clusterResource,\n+      ResourceLimits resourceLimits) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n-      childQueue.updateClusterResource(clusterResource);\n+      // Get ResourceLimits of child queue before assign containers\n+      ResourceLimits childLimits \u003d\n+          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n+      childQueue.updateClusterResource(clusterResource, childLimits);\n     }\n     \n     // Update metrics\n     CSQueueUtils.updateQueueStatistics(\n         resourceCalculator, this, parent, clusterResource, minimumAllocation);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits resourceLimits) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      // Get ResourceLimits of child queue before assign containers\n      ResourceLimits childLimits \u003d\n          getResourceLimitsOfChild(childQueue, clusterResource, resourceLimits);     \n      childQueue.updateClusterResource(clusterResource, childLimits);\n    }\n    \n    // Update metrics\n    CSQueueUtils.updateQueueStatistics(\n        resourceCalculator, this, parent, clusterResource, minimumAllocation);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "453926397182078c65a4428eb5de5a90d6af6448": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2. Enhanced CapacityScheduler to account for CPU alongwith memory for multi-dimensional resource scheduling. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1430682 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/01/13 9:08 PM",
      "commitName": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/10/12 9:56 AM",
      "commitNameOld": "ab8fa651f736525c8e40229ee99859cee9c1ba33",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 69.51,
      "commitsBetweenForRepo": 290,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public synchronized void updateClusterResource(Resource clusterResource) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       childQueue.updateClusterResource(clusterResource);\n     }\n     \n     // Update metrics\n     CSQueueUtils.updateQueueStatistics(\n-        this, parent, clusterResource, minimumAllocation);\n+        resourceCalculator, this, parent, clusterResource, minimumAllocation);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      childQueue.updateClusterResource(clusterResource);\n    }\n    \n    // Update metrics\n    CSQueueUtils.updateQueueStatistics(\n        resourceCalculator, this, parent, clusterResource, minimumAllocation);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      childQueue.updateClusterResource(clusterResource);\n    }\n    \n    // Update metrics\n    CSQueueUtils.updateQueueStatistics(\n        this, parent, clusterResource, minimumAllocation);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
      }
    },
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3747. Initialize queue metrics upfront and added start/finish time to RM Web-UI. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/12 7:38 PM",
      "commitName": "c7007a8a3508a24a6f023302516fe8fbe270eab1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "27/01/12 5:32 PM",
      "commitNameOld": "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.09,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,10 @@\n   public synchronized void updateClusterResource(Resource clusterResource) {\n     // Update all children\n     for (CSQueue childQueue : childQueues) {\n       childQueue.updateClusterResource(clusterResource);\n     }\n+    \n+    // Update metrics\n+    CSQueueUtils.updateQueueStatistics(\n+        this, parent, clusterResource, minimumAllocation);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      childQueue.updateClusterResource(clusterResource);\n    }\n    \n    // Update metrics\n    CSQueueUtils.updateQueueStatistics(\n        this, parent, clusterResource, minimumAllocation);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "1f46b991da9b91585608a0babd3eda39485dce09": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166838 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 11:26 AM",
      "commitName": "1f46b991da9b91585608a0babd3eda39485dce09",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "05/09/11 12:49 PM",
      "commitNameOld": "6b608aad7d52b524fa94955a538e8b3524d42d93",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.94,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public synchronized void updateClusterResource(Resource clusterResource) {\n     // Update all children\n-    for (Queue childQueue : childQueues) {\n+    for (CSQueue childQueue : childQueues) {\n       childQueue.updateClusterResource(clusterResource);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource) {\n    // Update all children\n    for (CSQueue childQueue : childQueues) {\n      childQueue.updateClusterResource(clusterResource);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "6b608aad7d52b524fa94955a538e8b3524d42d93": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2697. Enhance CapacityScheduler to cap concurrently running applications per-queue \u0026 per-user.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/11 12:49 PM",
      "commitName": "6b608aad7d52b524fa94955a538e8b3524d42d93",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,6 @@\n+  public synchronized void updateClusterResource(Resource clusterResource) {\n+    // Update all children\n+    for (Queue childQueue : childQueues) {\n+      childQueue.updateClusterResource(clusterResource);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateClusterResource(Resource clusterResource) {\n    // Update all children\n    for (Queue childQueue : childQueues) {\n      childQueue.updateClusterResource(clusterResource);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
    }
  }
}