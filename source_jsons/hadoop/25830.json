{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "getNumHangingRequests",
  "functionId": "getNumHangingRequests___allocationDelayThresholdMs-long__requestMap-Map__TaskAttemptId,ContainerRequest__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 626,
  "functionEndLine": 638,
  "numCommitsSeen": 139,
  "timeTaken": 2688,
  "changeHistory": [
    "4aa9b3e75ca86917125e56e1b438668273a5d87f",
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698"
  ],
  "changeHistoryShort": {
    "4aa9b3e75ca86917125e56e1b438668273a5d87f": "Ymultichange(Yrename,Yparameterchange)",
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4aa9b3e75ca86917125e56e1b438668273a5d87f": {
      "type": "Ymultichange(Yrename,Yparameterchange)",
      "commitMessage": "MAPREDUCE-6302. Incorrect headroom can lead to a deadlock between map and reduce allocations. (kasha)\n",
      "commitDate": "09/10/15 7:37 AM",
      "commitName": "4aa9b3e75ca86917125e56e1b438668273a5d87f",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-6302. Incorrect headroom can lead to a deadlock between map and reduce allocations. (kasha)\n",
          "commitDate": "09/10/15 7:37 AM",
          "commitName": "4aa9b3e75ca86917125e56e1b438668273a5d87f",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "21/09/15 8:54 PM",
          "commitNameOld": "dfd807afab0fae3839c9cc5d552aa0304444f956",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 17.45,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  private int getNumOfHangingRequests(Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n+  private int getNumHangingRequests(long allocationDelayThresholdMs,\n+      Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n     if (allocationDelayThresholdMs \u003c\u003d 0)\n       return requestMap.size();\n     int hangingRequests \u003d 0;\n     long currTime \u003d clock.getTime();\n     for (ContainerRequest request: requestMap.values()) {\n       long delay \u003d currTime - request.requestTimeMs;\n       if (delay \u003e allocationDelayThresholdMs)\n         hangingRequests++;\n     }\n     return hangingRequests;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int getNumHangingRequests(long allocationDelayThresholdMs,\n      Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n    if (allocationDelayThresholdMs \u003c\u003d 0)\n      return requestMap.size();\n    int hangingRequests \u003d 0;\n    long currTime \u003d clock.getTime();\n    for (ContainerRequest request: requestMap.values()) {\n      long delay \u003d currTime - request.requestTimeMs;\n      if (delay \u003e allocationDelayThresholdMs)\n        hangingRequests++;\n    }\n    return hangingRequests;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "getNumOfHangingRequests",
            "newValue": "getNumHangingRequests"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6302. Incorrect headroom can lead to a deadlock between map and reduce allocations. (kasha)\n",
          "commitDate": "09/10/15 7:37 AM",
          "commitName": "4aa9b3e75ca86917125e56e1b438668273a5d87f",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "21/09/15 8:54 PM",
          "commitNameOld": "dfd807afab0fae3839c9cc5d552aa0304444f956",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 17.45,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  private int getNumOfHangingRequests(Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n+  private int getNumHangingRequests(long allocationDelayThresholdMs,\n+      Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n     if (allocationDelayThresholdMs \u003c\u003d 0)\n       return requestMap.size();\n     int hangingRequests \u003d 0;\n     long currTime \u003d clock.getTime();\n     for (ContainerRequest request: requestMap.values()) {\n       long delay \u003d currTime - request.requestTimeMs;\n       if (delay \u003e allocationDelayThresholdMs)\n         hangingRequests++;\n     }\n     return hangingRequests;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int getNumHangingRequests(long allocationDelayThresholdMs,\n      Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n    if (allocationDelayThresholdMs \u003c\u003d 0)\n      return requestMap.size();\n    int hangingRequests \u003d 0;\n    long currTime \u003d clock.getTime();\n    for (ContainerRequest request: requestMap.values()) {\n      long delay \u003d currTime - request.requestTimeMs;\n      if (delay \u003e allocationDelayThresholdMs)\n        hangingRequests++;\n    }\n    return hangingRequests;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[requestMap-Map\u003cTaskAttemptId,ContainerRequest\u003e]",
            "newValue": "[allocationDelayThresholdMs-long, requestMap-Map\u003cTaskAttemptId,ContainerRequest\u003e]"
          }
        }
      ]
    },
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5844. Add a configurable delay to reducer-preemption. (Maysam Yabandeh via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603957 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:22 AM",
      "commitName": "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,12 @@\n+  private int getNumOfHangingRequests(Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n+    if (allocationDelayThresholdMs \u003c\u003d 0)\n+      return requestMap.size();\n+    int hangingRequests \u003d 0;\n+    long currTime \u003d clock.getTime();\n+    for (ContainerRequest request: requestMap.values()) {\n+      long delay \u003d currTime - request.requestTimeMs;\n+      if (delay \u003e allocationDelayThresholdMs)\n+        hangingRequests++;\n+    }\n+    return hangingRequests;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getNumOfHangingRequests(Map\u003cTaskAttemptId, ContainerRequest\u003e requestMap) {\n    if (allocationDelayThresholdMs \u003c\u003d 0)\n      return requestMap.size();\n    int hangingRequests \u003d 0;\n    long currTime \u003d clock.getTime();\n    for (ContainerRequest request: requestMap.values()) {\n      long delay \u003d currTime - request.requestTimeMs;\n      if (delay \u003e allocationDelayThresholdMs)\n        hangingRequests++;\n    }\n    return hangingRequests;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}