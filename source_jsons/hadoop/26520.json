{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "createLocalResource",
  "functionId": "createLocalResource___fc-FileSystem__file-Path__fileSymlink-String__type-LocalResourceType__visibility-LocalResourceVisibility",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 843,
  "functionEndLine": 870,
  "numCommitsSeen": 231,
  "timeTaken": 9757,
  "changeHistory": [
    "e46d5bb962b0c942f993afc505b165b1cd96e51b",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "643155cbee54809e1a7febd96cbb7d8111689b38",
    "0870734787d7005d85697549eab5b6479d97d453",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e46d5bb962b0c942f993afc505b165b1cd96e51b": "Ymultichange(Yparameterchange,Ybodychange)",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "643155cbee54809e1a7febd96cbb7d8111689b38": "Ybodychange",
    "0870734787d7005d85697549eab5b6479d97d453": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e46d5bb962b0c942f993afc505b165b1cd96e51b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5951. Add support for the YARN Shared Cache.\n",
      "commitDate": "12/10/17 10:59 AM",
      "commitName": "e46d5bb962b0c942f993afc505b165b1cd96e51b",
      "commitAuthor": "Chris Trezzo",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5951. Add support for the YARN Shared Cache.\n",
          "commitDate": "12/10/17 10:59 AM",
          "commitName": "e46d5bb962b0c942f993afc505b165b1cd96e51b",
          "commitAuthor": "Chris Trezzo",
          "commitDateOld": "02/10/17 8:14 PM",
          "commitNameOld": "453d48bdfbb67ed3e66c33c4aef239c3d7bdd3bc",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 9.61,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,28 @@\n   private static LocalResource createLocalResource(FileSystem fc, Path file,\n-      LocalResourceType type, LocalResourceVisibility visibility)\n-      throws IOException {\n+      String fileSymlink, LocalResourceType type,\n+      LocalResourceVisibility visibility) throws IOException {\n     FileStatus fstat \u003d fc.getFileStatus(file);\n-    URL resourceURL \u003d URL.fromPath(fc.resolvePath(fstat.getPath()));\n+    // We need to be careful when converting from path to URL to add a fragment\n+    // so that the symlink name when localized will be correct.\n+    Path qualifiedPath \u003d fc.resolvePath(fstat.getPath());\n+    URI uriWithFragment \u003d null;\n+    boolean useFragment \u003d fileSymlink !\u003d null \u0026\u0026 !fileSymlink.equals(\"\");\n+    try {\n+      if (useFragment) {\n+        uriWithFragment \u003d new URI(qualifiedPath.toUri() + \"#\" + fileSymlink);\n+      } else {\n+        uriWithFragment \u003d qualifiedPath.toUri();\n+      }\n+    } catch (URISyntaxException e) {\n+      throw new IOException(\n+          \"Error parsing local resource path.\"\n+              + \" Path was not able to be converted to a URI: \" + qualifiedPath,\n+          e);\n+    }\n+    URL resourceURL \u003d URL.fromURI(uriWithFragment);\n     long resourceSize \u003d fstat.getLen();\n     long resourceModificationTime \u003d fstat.getModificationTime();\n \n     return LocalResource.newInstance(resourceURL, type, visibility,\n-      resourceSize, resourceModificationTime);\n+        resourceSize, resourceModificationTime, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LocalResource createLocalResource(FileSystem fc, Path file,\n      String fileSymlink, LocalResourceType type,\n      LocalResourceVisibility visibility) throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    // We need to be careful when converting from path to URL to add a fragment\n    // so that the symlink name when localized will be correct.\n    Path qualifiedPath \u003d fc.resolvePath(fstat.getPath());\n    URI uriWithFragment \u003d null;\n    boolean useFragment \u003d fileSymlink !\u003d null \u0026\u0026 !fileSymlink.equals(\"\");\n    try {\n      if (useFragment) {\n        uriWithFragment \u003d new URI(qualifiedPath.toUri() + \"#\" + fileSymlink);\n      } else {\n        uriWithFragment \u003d qualifiedPath.toUri();\n      }\n    } catch (URISyntaxException e) {\n      throw new IOException(\n          \"Error parsing local resource path.\"\n              + \" Path was not able to be converted to a URI: \" + qualifiedPath,\n          e);\n    }\n    URL resourceURL \u003d URL.fromURI(uriWithFragment);\n    long resourceSize \u003d fstat.getLen();\n    long resourceModificationTime \u003d fstat.getModificationTime();\n\n    return LocalResource.newInstance(resourceURL, type, visibility,\n        resourceSize, resourceModificationTime, false);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {
            "oldValue": "[fc-FileSystem, file-Path, type-LocalResourceType, visibility-LocalResourceVisibility]",
            "newValue": "[fc-FileSystem, file-Path, fileSymlink-String, type-LocalResourceType, visibility-LocalResourceVisibility]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5951. Add support for the YARN Shared Cache.\n",
          "commitDate": "12/10/17 10:59 AM",
          "commitName": "e46d5bb962b0c942f993afc505b165b1cd96e51b",
          "commitAuthor": "Chris Trezzo",
          "commitDateOld": "02/10/17 8:14 PM",
          "commitNameOld": "453d48bdfbb67ed3e66c33c4aef239c3d7bdd3bc",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 9.61,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,28 @@\n   private static LocalResource createLocalResource(FileSystem fc, Path file,\n-      LocalResourceType type, LocalResourceVisibility visibility)\n-      throws IOException {\n+      String fileSymlink, LocalResourceType type,\n+      LocalResourceVisibility visibility) throws IOException {\n     FileStatus fstat \u003d fc.getFileStatus(file);\n-    URL resourceURL \u003d URL.fromPath(fc.resolvePath(fstat.getPath()));\n+    // We need to be careful when converting from path to URL to add a fragment\n+    // so that the symlink name when localized will be correct.\n+    Path qualifiedPath \u003d fc.resolvePath(fstat.getPath());\n+    URI uriWithFragment \u003d null;\n+    boolean useFragment \u003d fileSymlink !\u003d null \u0026\u0026 !fileSymlink.equals(\"\");\n+    try {\n+      if (useFragment) {\n+        uriWithFragment \u003d new URI(qualifiedPath.toUri() + \"#\" + fileSymlink);\n+      } else {\n+        uriWithFragment \u003d qualifiedPath.toUri();\n+      }\n+    } catch (URISyntaxException e) {\n+      throw new IOException(\n+          \"Error parsing local resource path.\"\n+              + \" Path was not able to be converted to a URI: \" + qualifiedPath,\n+          e);\n+    }\n+    URL resourceURL \u003d URL.fromURI(uriWithFragment);\n     long resourceSize \u003d fstat.getLen();\n     long resourceModificationTime \u003d fstat.getModificationTime();\n \n     return LocalResource.newInstance(resourceURL, type, visibility,\n-      resourceSize, resourceModificationTime);\n+        resourceSize, resourceModificationTime, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LocalResource createLocalResource(FileSystem fc, Path file,\n      String fileSymlink, LocalResourceType type,\n      LocalResourceVisibility visibility) throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    // We need to be careful when converting from path to URL to add a fragment\n    // so that the symlink name when localized will be correct.\n    Path qualifiedPath \u003d fc.resolvePath(fstat.getPath());\n    URI uriWithFragment \u003d null;\n    boolean useFragment \u003d fileSymlink !\u003d null \u0026\u0026 !fileSymlink.equals(\"\");\n    try {\n      if (useFragment) {\n        uriWithFragment \u003d new URI(qualifiedPath.toUri() + \"#\" + fileSymlink);\n      } else {\n        uriWithFragment \u003d qualifiedPath.toUri();\n      }\n    } catch (URISyntaxException e) {\n      throw new IOException(\n          \"Error parsing local resource path.\"\n              + \" Path was not able to be converted to a URI: \" + qualifiedPath,\n          e);\n    }\n    URL resourceURL \u003d URL.fromURI(uriWithFragment);\n    long resourceSize \u003d fstat.getLen();\n    long resourceModificationTime \u003d fstat.getModificationTime();\n\n    return LocalResource.newInstance(resourceURL, type, visibility,\n        resourceSize, resourceModificationTime, false);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "06/06/16 2:30 PM",
      "commitNameOld": "4a1cedc010d3fa1d8ef3f2773ca12acadfee5ba5",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 8.02,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n   private static LocalResource createLocalResource(FileSystem fc, Path file,\n       LocalResourceType type, LocalResourceVisibility visibility)\n       throws IOException {\n     FileStatus fstat \u003d fc.getFileStatus(file);\n-    URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n-        .getPath()));\n+    URL resourceURL \u003d URL.fromPath(fc.resolvePath(fstat.getPath()));\n     long resourceSize \u003d fstat.getLen();\n     long resourceModificationTime \u003d fstat.getModificationTime();\n \n     return LocalResource.newInstance(resourceURL, type, visibility,\n       resourceSize, resourceModificationTime);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static LocalResource createLocalResource(FileSystem fc, Path file,\n      LocalResourceType type, LocalResourceVisibility visibility)\n      throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    URL resourceURL \u003d URL.fromPath(fc.resolvePath(fstat.getPath()));\n    long resourceSize \u003d fstat.getLen();\n    long resourceModificationTime \u003d fstat.getModificationTime();\n\n    return LocalResource.newInstance(resourceURL, type, visibility,\n      resourceSize, resourceModificationTime);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "643155cbee54809e1a7febd96cbb7d8111689b38": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5270. Migrated MR app from using BuilderUtil factory methods to individual record factory methods. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1486271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/05/13 6:46 PM",
      "commitName": "643155cbee54809e1a7febd96cbb7d8111689b38",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/13 8:22 PM",
      "commitNameOld": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private static LocalResource createLocalResource(FileSystem fc, Path file,\n       LocalResourceType type, LocalResourceVisibility visibility)\n       throws IOException {\n     FileStatus fstat \u003d fc.getFileStatus(file);\n     URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n         .getPath()));\n     long resourceSize \u003d fstat.getLen();\n     long resourceModificationTime \u003d fstat.getModificationTime();\n \n-    return BuilderUtils.newLocalResource(resourceURL, type, visibility,\n-        resourceSize, resourceModificationTime);\n+    return LocalResource.newInstance(resourceURL, type, visibility,\n+      resourceSize, resourceModificationTime);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static LocalResource createLocalResource(FileSystem fc, Path file,\n      LocalResourceType type, LocalResourceVisibility visibility)\n      throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n        .getPath()));\n    long resourceSize \u003d fstat.getLen();\n    long resourceModificationTime \u003d fstat.getModificationTime();\n\n    return LocalResource.newInstance(resourceURL, type, visibility,\n      resourceSize, resourceModificationTime);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "0870734787d7005d85697549eab5b6479d97d453": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3566. Fixed MR AM to construct CLC only once across all tasks. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227422 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/12 5:29 PM",
      "commitName": "0870734787d7005d85697549eab5b6479d97d453",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3566. Fixed MR AM to construct CLC only once across all tasks. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227422 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/01/12 5:29 PM",
          "commitName": "0870734787d7005d85697549eab5b6479d97d453",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "22/12/11 2:34 PM",
          "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 13.12,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  private static LocalResource createLocalResource(FileSystem fc,\n-      RecordFactory recordFactory, Path file, LocalResourceType type,\n-      LocalResourceVisibility visibility) throws IOException {\n+  private static LocalResource createLocalResource(FileSystem fc, Path file,\n+      LocalResourceType type, LocalResourceVisibility visibility)\n+      throws IOException {\n     FileStatus fstat \u003d fc.getFileStatus(file);\n-    LocalResource resource \u003d\n-        recordFactory.newRecordInstance(LocalResource.class);\n-    resource.setResource(ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n-        .getPath())));\n-    resource.setType(type);\n-    resource.setVisibility(visibility);\n-    resource.setSize(fstat.getLen());\n-    resource.setTimestamp(fstat.getModificationTime());\n-    return resource;\n+    URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n+        .getPath()));\n+    long resourceSize \u003d fstat.getLen();\n+    long resourceModificationTime \u003d fstat.getModificationTime();\n+\n+    return BuilderUtils.newLocalResource(resourceURL, type, visibility,\n+        resourceSize, resourceModificationTime);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LocalResource createLocalResource(FileSystem fc, Path file,\n      LocalResourceType type, LocalResourceVisibility visibility)\n      throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n        .getPath()));\n    long resourceSize \u003d fstat.getLen();\n    long resourceModificationTime \u003d fstat.getModificationTime();\n\n    return BuilderUtils.newLocalResource(resourceURL, type, visibility,\n        resourceSize, resourceModificationTime);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {
            "oldValue": "[fc-FileSystem, recordFactory-RecordFactory, file-Path, type-LocalResourceType, visibility-LocalResourceVisibility]",
            "newValue": "[fc-FileSystem, file-Path, type-LocalResourceType, visibility-LocalResourceVisibility]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3566. Fixed MR AM to construct CLC only once across all tasks. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227422 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/01/12 5:29 PM",
          "commitName": "0870734787d7005d85697549eab5b6479d97d453",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "22/12/11 2:34 PM",
          "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 13.12,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  private static LocalResource createLocalResource(FileSystem fc,\n-      RecordFactory recordFactory, Path file, LocalResourceType type,\n-      LocalResourceVisibility visibility) throws IOException {\n+  private static LocalResource createLocalResource(FileSystem fc, Path file,\n+      LocalResourceType type, LocalResourceVisibility visibility)\n+      throws IOException {\n     FileStatus fstat \u003d fc.getFileStatus(file);\n-    LocalResource resource \u003d\n-        recordFactory.newRecordInstance(LocalResource.class);\n-    resource.setResource(ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n-        .getPath())));\n-    resource.setType(type);\n-    resource.setVisibility(visibility);\n-    resource.setSize(fstat.getLen());\n-    resource.setTimestamp(fstat.getModificationTime());\n-    return resource;\n+    URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n+        .getPath()));\n+    long resourceSize \u003d fstat.getLen();\n+    long resourceModificationTime \u003d fstat.getModificationTime();\n+\n+    return BuilderUtils.newLocalResource(resourceURL, type, visibility,\n+        resourceSize, resourceModificationTime);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LocalResource createLocalResource(FileSystem fc, Path file,\n      LocalResourceType type, LocalResourceVisibility visibility)\n      throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    URL resourceURL \u003d ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n        .getPath()));\n    long resourceSize \u003d fstat.getLen();\n    long resourceModificationTime \u003d fstat.getModificationTime();\n\n    return BuilderUtils.newLocalResource(resourceURL, type, visibility,\n        resourceSize, resourceModificationTime);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static LocalResource createLocalResource(FileSystem fc,\n      RecordFactory recordFactory, Path file, LocalResourceType type,\n      LocalResourceVisibility visibility) throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    LocalResource resource \u003d\n        recordFactory.newRecordInstance(LocalResource.class);\n    resource.setResource(ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n        .getPath())));\n    resource.setType(type);\n    resource.setVisibility(visibility);\n    resource.setSize(fstat.getLen());\n    resource.setTimestamp(fstat.getModificationTime());\n    return resource;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  private static LocalResource createLocalResource(FileSystem fc,\n+      RecordFactory recordFactory, Path file, LocalResourceType type,\n+      LocalResourceVisibility visibility) throws IOException {\n+    FileStatus fstat \u003d fc.getFileStatus(file);\n+    LocalResource resource \u003d\n+        recordFactory.newRecordInstance(LocalResource.class);\n+    resource.setResource(ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n+        .getPath())));\n+    resource.setType(type);\n+    resource.setVisibility(visibility);\n+    resource.setSize(fstat.getLen());\n+    resource.setTimestamp(fstat.getModificationTime());\n+    return resource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static LocalResource createLocalResource(FileSystem fc,\n      RecordFactory recordFactory, Path file, LocalResourceType type,\n      LocalResourceVisibility visibility) throws IOException {\n    FileStatus fstat \u003d fc.getFileStatus(file);\n    LocalResource resource \u003d\n        recordFactory.newRecordInstance(LocalResource.class);\n    resource.setResource(ConverterUtils.getYarnUrlFromPath(fc.resolvePath(fstat\n        .getPath())));\n    resource.setType(type);\n    resource.setVisibility(visibility);\n    resource.setSize(fstat.getLen());\n    resource.setTimestamp(fstat.getModificationTime());\n    return resource;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}