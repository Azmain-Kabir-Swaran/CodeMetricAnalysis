{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DebugAdmin.java",
  "functionName": "run",
  "functionId": "run___argv-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DebugAdmin.java",
  "functionStartLine": 430,
  "functionEndLine": 451,
  "numCommitsSeen": 7,
  "timeTaken": 656,
  "changeHistory": [
    "7b026c50f1be399987d23e06b4ecfbffc51dc7b5"
  ],
  "changeHistoryShort": {
    "7b026c50f1be399987d23e06b4ecfbffc51dc7b5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b026c50f1be399987d23e06b4ecfbffc51dc7b5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6917. Add an hdfs debug command to validate blocks, call recoverlease, etc. (cmccabe)\n",
      "commitDate": "31/10/14 1:15 PM",
      "commitName": "7b026c50f1be399987d23e06b4ecfbffc51dc7b5",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,22 @@\n+  public int run(String[] argv) {\n+    LinkedList\u003cString\u003e args \u003d new LinkedList\u003cString\u003e();\n+    for (int j \u003d 0; j \u003c argv.length; ++j) {\n+      args.add(argv[j]);\n+    }\n+    DebugCommand command \u003d popCommand(args);\n+    if (command \u003d\u003d null) {\n+      printUsage();\n+      return 0;\n+    }\n+    try {\n+      return command.run(args);\n+    } catch (IOException e) {\n+      System.err.println(\"IOException: \" +\n+          StringUtils.stringifyException(e));\n+      return 1;\n+    } catch (RuntimeException e) {\n+      System.err.println(\"RuntimeException: \" +\n+          StringUtils.stringifyException(e));\n+      return 1;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) {\n    LinkedList\u003cString\u003e args \u003d new LinkedList\u003cString\u003e();\n    for (int j \u003d 0; j \u003c argv.length; ++j) {\n      args.add(argv[j]);\n    }\n    DebugCommand command \u003d popCommand(args);\n    if (command \u003d\u003d null) {\n      printUsage();\n      return 0;\n    }\n    try {\n      return command.run(args);\n    } catch (IOException e) {\n      System.err.println(\"IOException: \" +\n          StringUtils.stringifyException(e));\n      return 1;\n    } catch (RuntimeException e) {\n      System.err.println(\"RuntimeException: \" +\n          StringUtils.stringifyException(e));\n      return 1;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DebugAdmin.java"
    }
  }
}