{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GpuResourceHandlerImpl.java",
  "functionName": "bootstrap",
  "functionId": "bootstrap___configuration-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/gpu/GpuResourceHandlerImpl.java",
  "functionStartLine": 71,
  "functionEndLine": 97,
  "numCommitsSeen": 13,
  "timeTaken": 3076,
  "changeHistory": [
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
    "5e91ebd91a405e1585ef02b8fbf03f10d1398adf",
    "95fbbfed75dd309b5d56032ece64996165572287",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd"
  ],
  "changeHistoryShort": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": "Ybodychange",
    "5e91ebd91a405e1585ef02b8fbf03f10d1398adf": "Ybodychange",
    "95fbbfed75dd309b5d56032ece64996165572287": "Ybodychange",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": "Ybodychange",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko\n",
      "commitDate": "21/08/19 7:44 AM",
      "commitName": "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "16/08/19 12:13 AM",
      "commitNameOld": "2216ec54e58e24ff09620fc2efa2f1733391d0c3",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 5.31,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n       throws ResourceHandlerException {\n     List\u003cGpuDevice\u003e usableGpus;\n     try {\n       usableGpus \u003d gpuDiscoverer.getGpusUsableByYarn();\n       if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n         String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n             + \"any usable GPU devices, please double check configuration!\";\n         LOG.error(message);\n-        throw new ResourceHandlerException(message);\n+        throwIfNecessary(new ResourceHandlerException(message),\n+            configuration);\n       }\n     } catch (YarnException e) {\n       LOG.error(\"Exception when trying to get usable GPU device\", e);\n       throw new ResourceHandlerException(e);\n     }\n \n     for (GpuDevice gpu : usableGpus) {\n       gpuAllocator.addGpu(gpu);\n     }\n \n     // And initialize cgroups\n     this.cGroupsHandler.initializeCGroupController(\n         CGroupsHandler.CGroupController.DEVICES);\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    List\u003cGpuDevice\u003e usableGpus;\n    try {\n      usableGpus \u003d gpuDiscoverer.getGpusUsableByYarn();\n      if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n        String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n            + \"any usable GPU devices, please double check configuration!\";\n        LOG.error(message);\n        throwIfNecessary(new ResourceHandlerException(message),\n            configuration);\n      }\n    } catch (YarnException e) {\n      LOG.error(\"Exception when trying to get usable GPU device\", e);\n      throw new ResourceHandlerException(e);\n    }\n\n    for (GpuDevice gpu : usableGpus) {\n      gpuAllocator.addGpu(gpu);\n    }\n\n    // And initialize cgroups\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/gpu/GpuResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "5e91ebd91a405e1585ef02b8fbf03f10d1398adf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9121. Replace GpuDiscoverer.getInstance() to a readable object for easy access control. Contributed by Szilard Nemeth.\n",
      "commitDate": "24/02/19 10:00 PM",
      "commitName": "5e91ebd91a405e1585ef02b8fbf03f10d1398adf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "22/02/19 6:52 AM",
      "commitNameOld": "95fbbfed75dd309b5d56032ece64996165572287",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 2.63,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n       throws ResourceHandlerException {\n     List\u003cGpuDevice\u003e usableGpus;\n     try {\n-      usableGpus \u003d GpuDiscoverer.getInstance().getGpusUsableByYarn();\n+      usableGpus \u003d gpuDiscoverer.getGpusUsableByYarn();\n       if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n         String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n             + \"any usable GPU devices, please double check configuration!\";\n         LOG.error(message);\n         throw new ResourceHandlerException(message);\n       }\n     } catch (YarnException e) {\n       LOG.error(\"Exception when trying to get usable GPU device\", e);\n       throw new ResourceHandlerException(e);\n     }\n \n     for (GpuDevice gpu : usableGpus) {\n       gpuAllocator.addGpu(gpu);\n     }\n \n     // And initialize cgroups\n     this.cGroupsHandler.initializeCGroupController(\n         CGroupsHandler.CGroupController.DEVICES);\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    List\u003cGpuDevice\u003e usableGpus;\n    try {\n      usableGpus \u003d gpuDiscoverer.getGpusUsableByYarn();\n      if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n        String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n            + \"any usable GPU devices, please double check configuration!\";\n        LOG.error(message);\n        throw new ResourceHandlerException(message);\n      }\n    } catch (YarnException e) {\n      LOG.error(\"Exception when trying to get usable GPU device\", e);\n      throw new ResourceHandlerException(e);\n    }\n\n    for (GpuDevice gpu : usableGpus) {\n      gpuAllocator.addGpu(gpu);\n    }\n\n    // And initialize cgroups\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/gpu/GpuResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "95fbbfed75dd309b5d56032ece64996165572287": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9118. Handle exceptions with parsing user defined GPU devices in GpuDiscoverer. Contributed by Szilard Nemeth.\n",
      "commitDate": "22/02/19 6:52 AM",
      "commitName": "95fbbfed75dd309b5d56032ece64996165572287",
      "commitAuthor": "Sunil G",
      "commitDateOld": "10/12/18 11:12 AM",
      "commitNameOld": "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 73.82,
      "commitsBetweenForRepo": 515,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n       throws ResourceHandlerException {\n     List\u003cGpuDevice\u003e usableGpus;\n     try {\n-      usableGpus \u003d GpuDiscoverer.getInstance()\n-          .getGpusUsableByYarn();\n+      usableGpus \u003d GpuDiscoverer.getInstance().getGpusUsableByYarn();\n       if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n         String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n-            + \"any usable GPU devices, please double check configuration.\";\n+            + \"any usable GPU devices, please double check configuration!\";\n         LOG.error(message);\n         throw new ResourceHandlerException(message);\n       }\n     } catch (YarnException e) {\n       LOG.error(\"Exception when trying to get usable GPU device\", e);\n       throw new ResourceHandlerException(e);\n     }\n \n     for (GpuDevice gpu : usableGpus) {\n       gpuAllocator.addGpu(gpu);\n     }\n \n     // And initialize cgroups\n     this.cGroupsHandler.initializeCGroupController(\n         CGroupsHandler.CGroupController.DEVICES);\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    List\u003cGpuDevice\u003e usableGpus;\n    try {\n      usableGpus \u003d GpuDiscoverer.getInstance().getGpusUsableByYarn();\n      if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n        String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n            + \"any usable GPU devices, please double check configuration!\";\n        LOG.error(message);\n        throw new ResourceHandlerException(message);\n      }\n    } catch (YarnException e) {\n      LOG.error(\"Exception when trying to get usable GPU device\", e);\n      throw new ResourceHandlerException(e);\n    }\n\n    for (GpuDevice gpu : usableGpus) {\n      gpuAllocator.addGpu(gpu);\n    }\n\n    // And initialize cgroups\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/gpu/GpuResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
      "commitDate": "28/10/17 10:38 PM",
      "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthor": "Sunil G",
      "commitDateOld": "11/10/17 11:14 AM",
      "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 17.48,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,27 @@\n   public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n       throws ResourceHandlerException {\n-    List\u003cInteger\u003e minorNumbersOfUsableGpus;\n+    List\u003cGpuDevice\u003e usableGpus;\n     try {\n-      minorNumbersOfUsableGpus \u003d GpuDiscoverer.getInstance()\n-          .getMinorNumbersOfGpusUsableByYarn();\n+      usableGpus \u003d GpuDiscoverer.getInstance()\n+          .getGpusUsableByYarn();\n+      if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n+        String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n+            + \"any usable GPU devices, please double check configuration.\";\n+        LOG.error(message);\n+        throw new ResourceHandlerException(message);\n+      }\n     } catch (YarnException e) {\n       LOG.error(\"Exception when trying to get usable GPU device\", e);\n       throw new ResourceHandlerException(e);\n     }\n \n-    for (int minorNumber : minorNumbersOfUsableGpus) {\n-      gpuAllocator.addGpu(minorNumber);\n+    for (GpuDevice gpu : usableGpus) {\n+      gpuAllocator.addGpu(gpu);\n     }\n \n     // And initialize cgroups\n     this.cGroupsHandler.initializeCGroupController(\n         CGroupsHandler.CGroupController.DEVICES);\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    List\u003cGpuDevice\u003e usableGpus;\n    try {\n      usableGpus \u003d GpuDiscoverer.getInstance()\n          .getGpusUsableByYarn();\n      if (usableGpus \u003d\u003d null || usableGpus.isEmpty()) {\n        String message \u003d \"GPU is enabled on the NodeManager, but couldn\u0027t find \"\n            + \"any usable GPU devices, please double check configuration.\";\n        LOG.error(message);\n        throw new ResourceHandlerException(message);\n      }\n    } catch (YarnException e) {\n      LOG.error(\"Exception when trying to get usable GPU device\", e);\n      throw new ResourceHandlerException(e);\n    }\n\n    for (GpuDevice gpu : usableGpus) {\n      gpuAllocator.addGpu(gpu);\n    }\n\n    // And initialize cgroups\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/gpu/GpuResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6620. Add support in NodeManager to isolate GPU devices by using CGroups. Contributed by Wangda Tan.\n",
      "commitDate": "11/10/17 11:14 AM",
      "commitName": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,21 @@\n+  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n+      throws ResourceHandlerException {\n+    List\u003cInteger\u003e minorNumbersOfUsableGpus;\n+    try {\n+      minorNumbersOfUsableGpus \u003d GpuDiscoverer.getInstance()\n+          .getMinorNumbersOfGpusUsableByYarn();\n+    } catch (YarnException e) {\n+      LOG.error(\"Exception when trying to get usable GPU device\", e);\n+      throw new ResourceHandlerException(e);\n+    }\n+\n+    for (int minorNumber : minorNumbersOfUsableGpus) {\n+      gpuAllocator.addGpu(minorNumber);\n+    }\n+\n+    // And initialize cgroups\n+    this.cGroupsHandler.initializeCGroupController(\n+        CGroupsHandler.CGroupController.DEVICES);\n+\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    List\u003cInteger\u003e minorNumbersOfUsableGpus;\n    try {\n      minorNumbersOfUsableGpus \u003d GpuDiscoverer.getInstance()\n          .getMinorNumbersOfGpusUsableByYarn();\n    } catch (YarnException e) {\n      LOG.error(\"Exception when trying to get usable GPU device\", e);\n      throw new ResourceHandlerException(e);\n    }\n\n    for (int minorNumber : minorNumbersOfUsableGpus) {\n      gpuAllocator.addGpu(minorNumber);\n    }\n\n    // And initialize cgroups\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/gpu/GpuResourceHandlerImpl.java"
    }
  }
}