{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "getAdditionalDatanode",
  "functionId": "getAdditionalDatanode___src-String(modifiers-final)__fileId-long(modifiers-final)__blk-ExtendedBlock(modifiers-final)__existings-DatanodeInfo[](modifiers-final)__existingStorageIDs-String[](modifiers-final)__excludes-DatanodeInfo[](modifiers-final)__numAdditionalNodes-int(modifiers-final)__clientName-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 493,
  "functionEndLine": 515,
  "numCommitsSeen": 40,
  "timeTaken": 2096,
  "changeHistory": [
    "48cb58390655b87506fb8b620e4aafd11e38bb34",
    "6425ed27ea638da75f656204d6df4adad1d91fe1"
  ],
  "changeHistoryShort": {
    "48cb58390655b87506fb8b620e4aafd11e38bb34": "Ybodychange",
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "48cb58390655b87506fb8b620e4aafd11e38bb34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14710. RBF: Improve some RPC performance by using previous block. Contributed by xuzq.\n",
      "commitDate": "28/08/19 10:48 AM",
      "commitName": "48cb58390655b87506fb8b620e4aafd11e38bb34",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "23/08/19 8:17 PM",
      "commitNameOld": "d2225c8ca8f9bdc5cef7266697518394d8763c88",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 4.6,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,23 @@\n   public LocatedBlock getAdditionalDatanode(final String src, final long fileId,\n       final ExtendedBlock blk, final DatanodeInfo[] existings,\n       final String[] existingStorageIDs, final DatanodeInfo[] excludes,\n       final int numAdditionalNodes, final String clientName)\n       throws IOException {\n     rpcServer.checkOperation(NameNode.OperationCategory.READ);\n \n-    final List\u003cRemoteLocation\u003e locations \u003d\n-        rpcServer.getLocationsForPath(src, false);\n     RemoteMethod method \u003d new RemoteMethod(\"getAdditionalDatanode\",\n         new Class\u003c?\u003e[] {String.class, long.class, ExtendedBlock.class,\n             DatanodeInfo[].class, String[].class,\n             DatanodeInfo[].class, int.class, String.class},\n         new RemoteParam(), fileId, blk, existings, existingStorageIDs, excludes,\n         numAdditionalNodes, clientName);\n+\n+    if (blk !\u003d null) {\n+      return rpcClient.invokeSingle(blk, method, LocatedBlock.class);\n+    }\n+\n+    final List\u003cRemoteLocation\u003e locations \u003d\n+        rpcServer.getLocationsForPath(src, false);\n     return rpcClient.invokeSequential(\n         locations, method, LocatedBlock.class, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock getAdditionalDatanode(final String src, final long fileId,\n      final ExtendedBlock blk, final DatanodeInfo[] existings,\n      final String[] existingStorageIDs, final DatanodeInfo[] excludes,\n      final int numAdditionalNodes, final String clientName)\n      throws IOException {\n    rpcServer.checkOperation(NameNode.OperationCategory.READ);\n\n    RemoteMethod method \u003d new RemoteMethod(\"getAdditionalDatanode\",\n        new Class\u003c?\u003e[] {String.class, long.class, ExtendedBlock.class,\n            DatanodeInfo[].class, String[].class,\n            DatanodeInfo[].class, int.class, String.class},\n        new RemoteParam(), fileId, blk, existings, existingStorageIDs, excludes,\n        numAdditionalNodes, clientName);\n\n    if (blk !\u003d null) {\n      return rpcClient.invokeSingle(blk, method, LocatedBlock.class);\n    }\n\n    final List\u003cRemoteLocation\u003e locations \u003d\n        rpcServer.getLocationsForPath(src, false);\n    return rpcClient.invokeSequential(\n        locations, method, LocatedBlock.class, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "diff": "@@ -0,0 +1,18 @@\n+  public LocatedBlock getAdditionalDatanode(final String src, final long fileId,\n+      final ExtendedBlock blk, final DatanodeInfo[] existings,\n+      final String[] existingStorageIDs, final DatanodeInfo[] excludes,\n+      final int numAdditionalNodes, final String clientName)\n+      throws IOException {\n+    rpcServer.checkOperation(NameNode.OperationCategory.READ);\n+\n+    final List\u003cRemoteLocation\u003e locations \u003d\n+        rpcServer.getLocationsForPath(src, false);\n+    RemoteMethod method \u003d new RemoteMethod(\"getAdditionalDatanode\",\n+        new Class\u003c?\u003e[] {String.class, long.class, ExtendedBlock.class,\n+            DatanodeInfo[].class, String[].class,\n+            DatanodeInfo[].class, int.class, String.class},\n+        new RemoteParam(), fileId, blk, existings, existingStorageIDs, excludes,\n+        numAdditionalNodes, clientName);\n+    return rpcClient.invokeSequential(\n+        locations, method, LocatedBlock.class, null);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock getAdditionalDatanode(final String src, final long fileId,\n      final ExtendedBlock blk, final DatanodeInfo[] existings,\n      final String[] existingStorageIDs, final DatanodeInfo[] excludes,\n      final int numAdditionalNodes, final String clientName)\n      throws IOException {\n    rpcServer.checkOperation(NameNode.OperationCategory.READ);\n\n    final List\u003cRemoteLocation\u003e locations \u003d\n        rpcServer.getLocationsForPath(src, false);\n    RemoteMethod method \u003d new RemoteMethod(\"getAdditionalDatanode\",\n        new Class\u003c?\u003e[] {String.class, long.class, ExtendedBlock.class,\n            DatanodeInfo[].class, String[].class,\n            DatanodeInfo[].class, int.class, String.class},\n        new RemoteParam(), fileId, blk, existings, existingStorageIDs, excludes,\n        numAdditionalNodes, clientName);\n    return rpcClient.invokeSequential(\n        locations, method, LocatedBlock.class, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java"
    }
  }
}