{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BuilderUtils.java",
  "functionName": "newNodeReport",
  "functionId": "newNodeReport___nodeId-NodeId__nodeState-NodeState__httpAddress-String__rackName-String__used-Resource__capability-Resource__numContainers-int__healthReport-String__lastHealthReportTime-long__nodeLabels-Set__String____containersUtilization-ResourceUtilization__nodeUtilization-ResourceUtilization__decommissioningTimeout-Integer__nodeUpdateType-NodeUpdateType__attrs-Set__NodeAttribute__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
  "functionStartLine": 206,
  "functionEndLine": 229,
  "numCommitsSeen": 135,
  "timeTaken": 4453,
  "changeHistory": [
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4"
  ],
  "changeHistoryShort": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Ymultichange(Yparameterchange,Ybodychange)",
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2": "Ymultichange(Yparameterchange,Ybodychange)",
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "21/06/18 6:24 PM",
          "commitNameOld": "99948565cb5d5706241d7a8fc591e1617c499e03",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 82.38,
          "commitsBetweenForRepo": 596,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n   public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n       String httpAddress, String rackName, Resource used, Resource capability,\n       int numContainers, String healthReport, long lastHealthReportTime,\n       Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n       ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n-      NodeUpdateType nodeUpdateType) {\n+      NodeUpdateType nodeUpdateType, Set\u003cNodeAttribute\u003e attrs) {\n     NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n     nodeReport.setNodeId(nodeId);\n     nodeReport.setNodeState(nodeState);\n     nodeReport.setHttpAddress(httpAddress);\n     nodeReport.setRackName(rackName);\n     nodeReport.setUsed(used);\n     nodeReport.setCapability(capability);\n     nodeReport.setNumContainers(numContainers);\n     nodeReport.setHealthReport(healthReport);\n     nodeReport.setLastHealthReportTime(lastHealthReportTime);\n     nodeReport.setNodeLabels(nodeLabels);\n     nodeReport.setAggregatedContainersUtilization(containersUtilization);\n     nodeReport.setNodeUtilization(nodeUtilization);\n     nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n     nodeReport.setNodeUpdateType(nodeUpdateType);\n+    nodeReport.setNodeAttributes(attrs);\n     return nodeReport;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n      String httpAddress, String rackName, Resource used, Resource capability,\n      int numContainers, String healthReport, long lastHealthReportTime,\n      Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n      NodeUpdateType nodeUpdateType, Set\u003cNodeAttribute\u003e attrs) {\n    NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n    nodeReport.setNodeId(nodeId);\n    nodeReport.setNodeState(nodeState);\n    nodeReport.setHttpAddress(httpAddress);\n    nodeReport.setRackName(rackName);\n    nodeReport.setUsed(used);\n    nodeReport.setCapability(capability);\n    nodeReport.setNumContainers(numContainers);\n    nodeReport.setHealthReport(healthReport);\n    nodeReport.setLastHealthReportTime(lastHealthReportTime);\n    nodeReport.setNodeLabels(nodeLabels);\n    nodeReport.setAggregatedContainersUtilization(containersUtilization);\n    nodeReport.setNodeUtilization(nodeUtilization);\n    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n    nodeReport.setNodeUpdateType(nodeUpdateType);\n    nodeReport.setNodeAttributes(attrs);\n    return nodeReport;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[nodeId-NodeId, nodeState-NodeState, httpAddress-String, rackName-String, used-Resource, capability-Resource, numContainers-int, healthReport-String, lastHealthReportTime-long, nodeLabels-Set\u003cString\u003e, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization, decommissioningTimeout-Integer, nodeUpdateType-NodeUpdateType]",
            "newValue": "[nodeId-NodeId, nodeState-NodeState, httpAddress-String, rackName-String, used-Resource, capability-Resource, numContainers-int, healthReport-String, lastHealthReportTime-long, nodeLabels-Set\u003cString\u003e, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization, decommissioningTimeout-Integer, nodeUpdateType-NodeUpdateType, attrs-Set\u003cNodeAttribute\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "21/06/18 6:24 PM",
          "commitNameOld": "99948565cb5d5706241d7a8fc591e1617c499e03",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 82.38,
          "commitsBetweenForRepo": 596,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n   public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n       String httpAddress, String rackName, Resource used, Resource capability,\n       int numContainers, String healthReport, long lastHealthReportTime,\n       Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n       ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n-      NodeUpdateType nodeUpdateType) {\n+      NodeUpdateType nodeUpdateType, Set\u003cNodeAttribute\u003e attrs) {\n     NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n     nodeReport.setNodeId(nodeId);\n     nodeReport.setNodeState(nodeState);\n     nodeReport.setHttpAddress(httpAddress);\n     nodeReport.setRackName(rackName);\n     nodeReport.setUsed(used);\n     nodeReport.setCapability(capability);\n     nodeReport.setNumContainers(numContainers);\n     nodeReport.setHealthReport(healthReport);\n     nodeReport.setLastHealthReportTime(lastHealthReportTime);\n     nodeReport.setNodeLabels(nodeLabels);\n     nodeReport.setAggregatedContainersUtilization(containersUtilization);\n     nodeReport.setNodeUtilization(nodeUtilization);\n     nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n     nodeReport.setNodeUpdateType(nodeUpdateType);\n+    nodeReport.setNodeAttributes(attrs);\n     return nodeReport;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n      String httpAddress, String rackName, Resource used, Resource capability,\n      int numContainers, String healthReport, long lastHealthReportTime,\n      Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n      NodeUpdateType nodeUpdateType, Set\u003cNodeAttribute\u003e attrs) {\n    NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n    nodeReport.setNodeId(nodeId);\n    nodeReport.setNodeState(nodeState);\n    nodeReport.setHttpAddress(httpAddress);\n    nodeReport.setRackName(rackName);\n    nodeReport.setUsed(used);\n    nodeReport.setCapability(capability);\n    nodeReport.setNumContainers(numContainers);\n    nodeReport.setHealthReport(healthReport);\n    nodeReport.setLastHealthReportTime(lastHealthReportTime);\n    nodeReport.setNodeLabels(nodeLabels);\n    nodeReport.setAggregatedContainersUtilization(containersUtilization);\n    nodeReport.setNodeUtilization(nodeUtilization);\n    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n    nodeReport.setNodeUpdateType(nodeUpdateType);\n    nodeReport.setNodeAttributes(attrs);\n    return nodeReport;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6483. Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned to the AM. (Juan Rodriguez Hortala via asuresh)\n",
      "commitDate": "22/11/17 7:18 PM",
      "commitName": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6483. Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned to the AM. (Juan Rodriguez Hortala via asuresh)\n",
          "commitDate": "22/11/17 7:18 PM",
          "commitName": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "09/10/17 8:36 PM",
          "commitNameOld": "5cfbad68c0ef6e70d248d4989f9889576d5fcf7e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 43.99,
          "commitsBetweenForRepo": 363,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n   public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n       String httpAddress, String rackName, Resource used, Resource capability,\n       int numContainers, String healthReport, long lastHealthReportTime,\n       Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n-      ResourceUtilization nodeUtilization) {\n+      ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n+      NodeUpdateType nodeUpdateType) {\n     NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n     nodeReport.setNodeId(nodeId);\n     nodeReport.setNodeState(nodeState);\n     nodeReport.setHttpAddress(httpAddress);\n     nodeReport.setRackName(rackName);\n     nodeReport.setUsed(used);\n     nodeReport.setCapability(capability);\n     nodeReport.setNumContainers(numContainers);\n     nodeReport.setHealthReport(healthReport);\n     nodeReport.setLastHealthReportTime(lastHealthReportTime);\n     nodeReport.setNodeLabels(nodeLabels);\n     nodeReport.setAggregatedContainersUtilization(containersUtilization);\n     nodeReport.setNodeUtilization(nodeUtilization);\n+    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n+    nodeReport.setNodeUpdateType(nodeUpdateType);\n     return nodeReport;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n      String httpAddress, String rackName, Resource used, Resource capability,\n      int numContainers, String healthReport, long lastHealthReportTime,\n      Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n      NodeUpdateType nodeUpdateType) {\n    NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n    nodeReport.setNodeId(nodeId);\n    nodeReport.setNodeState(nodeState);\n    nodeReport.setHttpAddress(httpAddress);\n    nodeReport.setRackName(rackName);\n    nodeReport.setUsed(used);\n    nodeReport.setCapability(capability);\n    nodeReport.setNumContainers(numContainers);\n    nodeReport.setHealthReport(healthReport);\n    nodeReport.setLastHealthReportTime(lastHealthReportTime);\n    nodeReport.setNodeLabels(nodeLabels);\n    nodeReport.setAggregatedContainersUtilization(containersUtilization);\n    nodeReport.setNodeUtilization(nodeUtilization);\n    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n    nodeReport.setNodeUpdateType(nodeUpdateType);\n    return nodeReport;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[nodeId-NodeId, nodeState-NodeState, httpAddress-String, rackName-String, used-Resource, capability-Resource, numContainers-int, healthReport-String, lastHealthReportTime-long, nodeLabels-Set\u003cString\u003e, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization]",
            "newValue": "[nodeId-NodeId, nodeState-NodeState, httpAddress-String, rackName-String, used-Resource, capability-Resource, numContainers-int, healthReport-String, lastHealthReportTime-long, nodeLabels-Set\u003cString\u003e, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization, decommissioningTimeout-Integer, nodeUpdateType-NodeUpdateType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6483. Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned to the AM. (Juan Rodriguez Hortala via asuresh)\n",
          "commitDate": "22/11/17 7:18 PM",
          "commitName": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "09/10/17 8:36 PM",
          "commitNameOld": "5cfbad68c0ef6e70d248d4989f9889576d5fcf7e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 43.99,
          "commitsBetweenForRepo": 363,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n   public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n       String httpAddress, String rackName, Resource used, Resource capability,\n       int numContainers, String healthReport, long lastHealthReportTime,\n       Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n-      ResourceUtilization nodeUtilization) {\n+      ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n+      NodeUpdateType nodeUpdateType) {\n     NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n     nodeReport.setNodeId(nodeId);\n     nodeReport.setNodeState(nodeState);\n     nodeReport.setHttpAddress(httpAddress);\n     nodeReport.setRackName(rackName);\n     nodeReport.setUsed(used);\n     nodeReport.setCapability(capability);\n     nodeReport.setNumContainers(numContainers);\n     nodeReport.setHealthReport(healthReport);\n     nodeReport.setLastHealthReportTime(lastHealthReportTime);\n     nodeReport.setNodeLabels(nodeLabels);\n     nodeReport.setAggregatedContainersUtilization(containersUtilization);\n     nodeReport.setNodeUtilization(nodeUtilization);\n+    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n+    nodeReport.setNodeUpdateType(nodeUpdateType);\n     return nodeReport;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n      String httpAddress, String rackName, Resource used, Resource capability,\n      int numContainers, String healthReport, long lastHealthReportTime,\n      Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization, Integer decommissioningTimeout,\n      NodeUpdateType nodeUpdateType) {\n    NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n    nodeReport.setNodeId(nodeId);\n    nodeReport.setNodeState(nodeState);\n    nodeReport.setHttpAddress(httpAddress);\n    nodeReport.setRackName(rackName);\n    nodeReport.setUsed(used);\n    nodeReport.setCapability(capability);\n    nodeReport.setNumContainers(numContainers);\n    nodeReport.setHealthReport(healthReport);\n    nodeReport.setLastHealthReportTime(lastHealthReportTime);\n    nodeReport.setNodeLabels(nodeLabels);\n    nodeReport.setAggregatedContainersUtilization(containersUtilization);\n    nodeReport.setNodeUtilization(nodeUtilization);\n    nodeReport.setDecommissioningTimeout(decommissioningTimeout);\n    nodeReport.setNodeUpdateType(nodeUpdateType);\n    return nodeReport;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4293. ResourceUtilization should be a part of yarn node CLI. (Sunil G via wangda)\n",
      "commitDate": "16/12/15 1:18 PM",
      "commitName": "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,20 @@\n+  public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n+      String httpAddress, String rackName, Resource used, Resource capability,\n+      int numContainers, String healthReport, long lastHealthReportTime,\n+      Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n+      ResourceUtilization nodeUtilization) {\n+    NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n+    nodeReport.setNodeId(nodeId);\n+    nodeReport.setNodeState(nodeState);\n+    nodeReport.setHttpAddress(httpAddress);\n+    nodeReport.setRackName(rackName);\n+    nodeReport.setUsed(used);\n+    nodeReport.setCapability(capability);\n+    nodeReport.setNumContainers(numContainers);\n+    nodeReport.setHealthReport(healthReport);\n+    nodeReport.setLastHealthReportTime(lastHealthReportTime);\n+    nodeReport.setNodeLabels(nodeLabels);\n+    nodeReport.setAggregatedContainersUtilization(containersUtilization);\n+    nodeReport.setNodeUtilization(nodeUtilization);\n+    return nodeReport;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NodeReport newNodeReport(NodeId nodeId, NodeState nodeState,\n      String httpAddress, String rackName, Resource used, Resource capability,\n      int numContainers, String healthReport, long lastHealthReportTime,\n      Set\u003cString\u003e nodeLabels, ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization) {\n    NodeReport nodeReport \u003d recordFactory.newRecordInstance(NodeReport.class);\n    nodeReport.setNodeId(nodeId);\n    nodeReport.setNodeState(nodeState);\n    nodeReport.setHttpAddress(httpAddress);\n    nodeReport.setRackName(rackName);\n    nodeReport.setUsed(used);\n    nodeReport.setCapability(capability);\n    nodeReport.setNumContainers(numContainers);\n    nodeReport.setHealthReport(healthReport);\n    nodeReport.setLastHealthReportTime(lastHealthReportTime);\n    nodeReport.setNodeLabels(nodeLabels);\n    nodeReport.setAggregatedContainersUtilization(containersUtilization);\n    nodeReport.setNodeUtilization(nodeUtilization);\n    return nodeReport;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java"
    }
  }
}