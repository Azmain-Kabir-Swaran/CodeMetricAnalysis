{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCpOptions.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
  "functionStartLine": 414,
  "functionEndLine": 444,
  "numCommitsSeen": 36,
  "timeTaken": 5621,
  "changeHistory": [
    "19a001826f6ab9ac2caa92b66864f62218557beb",
    "ee3115f488ce8e44bffac15af9c646190bf67b88",
    "de804e53b9d20a2df75a4c7252bf83ed52011488",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30",
    "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "bf3fb585aaf2b179836e139c041fc87920a3c886",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "422c73a8657d8699920f7db13d4be200e16c4272",
    "18c7e582839ea0b550463569b18b5827d23f8849",
    "ba1c9d484a8d6a18b4b7365c49d09635d24e579a",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6",
    "041b8326a1511b721958792a6b94ecfe27d7a1fb",
    "640a097533e0883bf49504673228d5a327089b44",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "19a001826f6ab9ac2caa92b66864f62218557beb": "Ybodychange",
    "ee3115f488ce8e44bffac15af9c646190bf67b88": "Ybodychange",
    "de804e53b9d20a2df75a4c7252bf83ed52011488": "Ybodychange",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": "Ybodychange",
    "b4adc8392c1314d6d6fbdd00f2afb306ef20a650": "Ybodychange",
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ybodychange",
    "bf3fb585aaf2b179836e139c041fc87920a3c886": "Ybodychange",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": "Ybodychange",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": "Ybodychange",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ybodychange",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ybodychange",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ybodychange",
    "422c73a8657d8699920f7db13d4be200e16c4272": "Ybodychange",
    "18c7e582839ea0b550463569b18b5827d23f8849": "Ybodychange",
    "ba1c9d484a8d6a18b4b7365c49d09635d24e579a": "Ybodychange",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": "Ybodychange",
    "041b8326a1511b721958792a6b94ecfe27d7a1fb": "Ybodychange",
    "640a097533e0883bf49504673228d5a327089b44": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19a001826f6ab9ac2caa92b66864f62218557beb": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9913. DistCp to add -useTrash to move deleted files to Trash.\"\n\nReverting due to test failures if ~/.Trash not present during test setup.\n\nThis reverts commit ee3115f488ce8e44bffac15af9c646190bf67b88.\n\nChange-Id: Icbeeb261570b9131ff99d765ac0945c335b26658\n",
      "commitDate": "17/07/19 5:13 AM",
      "commitName": "19a001826f6ab9ac2caa92b66864f62218557beb",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/19 3:50 AM",
      "commitNameOld": "ee3115f488ce8e44bffac15af9c646190bf67b88",
      "commitAuthorOld": "Shen Yinjie",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,31 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n-        \", deleteUseTrash\u003d\" + deleteUseTrash +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \", copyBufferSize\u003d\" + copyBufferSize +\n         \", verboseLog\u003d\" + verboseLog +\n         \", directWrite\u003d\" + directWrite +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \", copyBufferSize\u003d\" + copyBufferSize +\n        \", verboseLog\u003d\" + verboseLog +\n        \", directWrite\u003d\" + directWrite +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ee3115f488ce8e44bffac15af9c646190bf67b88": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9913. DistCp to add -useTrash to move deleted files to Trash.\n\nContributed by Shen Yinjie.\n\nChange-Id: I03ac7d22ab1054f8e5de4aa7552909c734438f4a\n",
      "commitDate": "17/07/19 3:50 AM",
      "commitName": "ee3115f488ce8e44bffac15af9c646190bf67b88",
      "commitAuthor": "Shen Yinjie",
      "commitDateOld": "07/02/19 2:07 AM",
      "commitNameOld": "de804e53b9d20a2df75a4c7252bf83ed52011488",
      "commitAuthorOld": "Andrew Olson",
      "daysBetweenCommits": 160.03,
      "commitsBetweenForRepo": 1184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n+        \", deleteUseTrash\u003d\" + deleteUseTrash +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \", copyBufferSize\u003d\" + copyBufferSize +\n         \", verboseLog\u003d\" + verboseLog +\n         \", directWrite\u003d\" + directWrite +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", deleteUseTrash\u003d\" + deleteUseTrash +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \", copyBufferSize\u003d\" + copyBufferSize +\n        \", verboseLog\u003d\" + verboseLog +\n        \", directWrite\u003d\" + directWrite +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "de804e53b9d20a2df75a4c7252bf83ed52011488": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15281. Distcp to add no-rename copy option.\n\nContributed by Andrew Olson.\n",
      "commitDate": "07/02/19 2:07 AM",
      "commitName": "de804e53b9d20a2df75a4c7252bf83ed52011488",
      "commitAuthor": "Andrew Olson",
      "commitDateOld": "10/07/18 2:43 AM",
      "commitNameOld": "ca8b80bf59c0570bb9172208d3a6c993a6854514",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 212.02,
      "commitsBetweenForRepo": 1660,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \", copyBufferSize\u003d\" + copyBufferSize +\n         \", verboseLog\u003d\" + verboseLog +\n+        \", directWrite\u003d\" + directWrite +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \", copyBufferSize\u003d\" + copyBufferSize +\n        \", verboseLog\u003d\" + verboseLog +\n        \", directWrite\u003d\" + directWrite +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
      "commitDate": "05/09/17 11:34 PM",
      "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "18/05/17 3:35 PM",
      "commitNameOld": "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 110.33,
      "commitsBetweenForRepo": 692,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \", copyBufferSize\u003d\" + copyBufferSize +\n+        \", verboseLog\u003d\" + verboseLog +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \", copyBufferSize\u003d\" + copyBufferSize +\n        \", verboseLog\u003d\" + verboseLog +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "b4adc8392c1314d6d6fbdd00f2afb306ef20a650": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14407. DistCp - Introduce a configurable copy buffer size. (Omkar Aradhya K S via Yongjun Zhang)\n",
      "commitDate": "18/05/17 3:35 PM",
      "commitName": "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "31/03/17 8:04 PM",
      "commitNameOld": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 47.81,
      "commitsBetweenForRepo": 260,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \", blocksPerChunk\u003d\" + blocksPerChunk +\n+        \", copyBufferSize\u003d\" + copyBufferSize +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \", copyBufferSize\u003d\" + copyBufferSize +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.1,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,28 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n-        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n-        \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "bf3fb585aaf2b179836e139c041fc87920a3c886": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n+        \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:01 PM",
      "commitNameOld": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n-        \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
      "commitDate": "30/03/17 5:01 PM",
      "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "19/10/16 5:37 PM",
      "commitNameOld": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 161.97,
      "commitsBetweenForRepo": 997,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n         \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n+        \", blocksPerChunk\u003d\" + blocksPerChunk +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \", blocksPerChunk\u003d\" + blocksPerChunk +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 10:47 PM",
      "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n+        \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 11:04 AM",
      "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n-        \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "12/09/16 8:26 AM",
      "commitNameOld": "9faccd104672dfef123735ca8ada178fc3a6196f",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 35.11,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", append\u003d\" + append +\n         \", useDiff\u003d\" + useDiff +\n+        \", useRdiff\u003d\" + useRdiff +\n         \", fromSnapshot\u003d\" + fromSnapshot +\n         \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", useRdiff\u003d\" + useRdiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "422c73a8657d8699920f7db13d4be200e16c4272": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13034. Log message about input options in distcp lacks some items (Takashi Ohnishi via aw)\n",
      "commitDate": "28/06/16 7:21 AM",
      "commitName": "422c73a8657d8699920f7db13d4be200e16c4272",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/05/16 3:46 PM",
      "commitNameOld": "03788d3015c962eac1a35fa5df39356e8b84731c",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 41.65,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n+        \", append\u003d\" + append +\n+        \", useDiff\u003d\" + useDiff +\n+        \", fromSnapshot\u003d\" + fromSnapshot +\n+        \", toSnapshot\u003d\" + toSnapshot +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", append\u003d\" + append +\n        \", useDiff\u003d\" + useDiff +\n        \", fromSnapshot\u003d\" + fromSnapshot +\n        \", toSnapshot\u003d\" + toSnapshot +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "18c7e582839ea0b550463569b18b5827d23f8849": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9640. Remove hsftp from DistCp in trunk. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "27/03/16 11:32 PM",
      "commitName": "18c7e582839ea0b550463569b18b5827d23f8849",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/02/16 10:17 AM",
      "commitNameOld": "ba1c9d484a8d6a18b4b7365c49d09635d24e579a",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 37.51,
      "commitsBetweenForRepo": 213,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", overwrite\u003d\" + overwrite +\n         \", skipCRC\u003d\" + skipCRC +\n         \", blocking\u003d\" + blocking +\n         \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n         \", mapBandwidth\u003d\" + mapBandwidth +\n-        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", preserveStatus\u003d\" + preserveStatus +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", atomicWorkPath\u003d\" + atomicWorkPath +\n         \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ba1c9d484a8d6a18b4b7365c49d09635d24e579a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9764. DistCp doesn\u0027t print value for several arguments including -numListstatusThreads. (Wei-Chiu Chuang via Yongjun Zhang)\n",
      "commitDate": "19/02/16 10:17 AM",
      "commitName": "ba1c9d484a8d6a18b4b7365c49d09635d24e579a",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "20/08/15 8:02 AM",
      "commitNameOld": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 183.14,
      "commitsBetweenForRepo": 1253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,25 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n+        \", overwrite\u003d\" + overwrite +\n+        \", skipCRC\u003d\" + skipCRC +\n+        \", blocking\u003d\" + blocking +\n+        \", numListstatusThreads\u003d\" + numListstatusThreads +\n         \", maxMaps\u003d\" + maxMaps +\n+        \", mapBandwidth\u003d\" + mapBandwidth +\n         \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n+        \", preserveStatus\u003d\" + preserveStatus +\n+        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n+        \", atomicWorkPath\u003d\" + atomicWorkPath +\n+        \", logPath\u003d\" + logPath +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n-        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", overwrite\u003d\" + overwrite +\n        \", skipCRC\u003d\" + skipCRC +\n        \", blocking\u003d\" + blocking +\n        \", numListstatusThreads\u003d\" + numListstatusThreads +\n        \", maxMaps\u003d\" + maxMaps +\n        \", mapBandwidth\u003d\" + mapBandwidth +\n        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", preserveStatus\u003d\" + preserveStatus +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", atomicWorkPath\u003d\" + atomicWorkPath +\n        \", logPath\u003d\" + logPath +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-1540. Support file exclusion list in distcp. Contributed by Rich Haase.\n",
      "commitDate": "18/05/15 1:24 PM",
      "commitName": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "21/04/15 4:49 PM",
      "commitNameOld": "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 26.86,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", maxMaps\u003d\" + maxMaps +\n         \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n         \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n+        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", maxMaps\u003d\" + maxMaps +\n        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \", filtersFile\u003d\u0027\" + filtersFile + \u0027\\\u0027\u0027 +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "041b8326a1511b721958792a6b94ecfe27d7a1fb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6007. Add support to distcp to preserve raw.* namespace extended attributes. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1616657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 6:32 PM",
      "commitName": "041b8326a1511b721958792a6b94ecfe27d7a1fb",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "06/06/14 7:45 AM",
      "commitNameOld": "f81c7b0252839ae0dcd92fe2dc626ff9f87cd2c9",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 62.45,
      "commitsBetweenForRepo": 482,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", maxMaps\u003d\" + maxMaps +\n         \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n         \", targetPathExists\u003d\" + targetPathExists +\n+        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", maxMaps\u003d\" + maxMaps +\n        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \", preserveRawXattrs\u003d\" + preserveRawXattrs +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "640a097533e0883bf49504673228d5a327089b44": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10459. distcp V2 doesn\u0027t preserve root dir\u0027s attributes when -p is specified. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 5:32 PM",
      "commitName": "640a097533e0883bf49504673228d5a327089b44",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "30/01/14 3:53 PM",
      "commitNameOld": "067d52b98c1d17a73b142bb53acc8aaa9c041f38",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 62.03,
      "commitsBetweenForRepo": 542,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public String toString() {\n     return \"DistCpOptions{\" +\n         \"atomicCommit\u003d\" + atomicCommit +\n         \", syncFolder\u003d\" + syncFolder +\n         \", deleteMissing\u003d\" + deleteMissing +\n         \", ignoreFailures\u003d\" + ignoreFailures +\n         \", maxMaps\u003d\" + maxMaps +\n         \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n         \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n         \", sourceFileListing\u003d\" + sourceFileListing +\n         \", sourcePaths\u003d\" + sourcePaths +\n         \", targetPath\u003d\" + targetPath +\n+        \", targetPathExists\u003d\" + targetPathExists +\n         \u0027}\u0027;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", maxMaps\u003d\" + maxMaps +\n        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \", targetPathExists\u003d\" + targetPathExists +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,14 @@\n+  public String toString() {\n+    return \"DistCpOptions{\" +\n+        \"atomicCommit\u003d\" + atomicCommit +\n+        \", syncFolder\u003d\" + syncFolder +\n+        \", deleteMissing\u003d\" + deleteMissing +\n+        \", ignoreFailures\u003d\" + ignoreFailures +\n+        \", maxMaps\u003d\" + maxMaps +\n+        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n+        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n+        \", sourceFileListing\u003d\" + sourceFileListing +\n+        \", sourcePaths\u003d\" + sourcePaths +\n+        \", targetPath\u003d\" + targetPath +\n+        \u0027}\u0027;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"DistCpOptions{\" +\n        \"atomicCommit\u003d\" + atomicCommit +\n        \", syncFolder\u003d\" + syncFolder +\n        \", deleteMissing\u003d\" + deleteMissing +\n        \", ignoreFailures\u003d\" + ignoreFailures +\n        \", maxMaps\u003d\" + maxMaps +\n        \", sslConfigurationFile\u003d\u0027\" + sslConfigurationFile + \u0027\\\u0027\u0027 +\n        \", copyStrategy\u003d\u0027\" + copyStrategy + \u0027\\\u0027\u0027 +\n        \", sourceFileListing\u003d\" + sourceFileListing +\n        \", sourcePaths\u003d\" + sourcePaths +\n        \", targetPath\u003d\" + targetPath +\n        \u0027}\u0027;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java"
    }
  }
}