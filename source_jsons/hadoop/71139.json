{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "getAMClassPathEnv",
  "functionId": "getAMClassPathEnv",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/Client.java",
  "functionStartLine": 684,
  "functionEndLine": 709,
  "numCommitsSeen": 7,
  "timeTaken": 567,
  "changeHistory": [
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,26 @@\n+  private String getAMClassPathEnv() {\n+    // Add AppMaster.jar location to classpath\n+    // At some point we should not be required to add\n+    // the hadoop specific classpaths to the env.\n+    // It should be provided out of the box.\n+    // For now setting all required classpaths including\n+    // the classpath to \".\" for the application jar\n+    StringBuilder classPathEnv \u003d new StringBuilder(Environment.CLASSPATH.$())\n+        .append(ApplicationConstants.CLASS_PATH_SEPARATOR).append(\"./\")\n+        .append(DynoConstants.DYNO_DEPENDENCIES.getResourcePath()).append(\"/*\");\n+    for (String c : getConf().getStrings(\n+        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n+        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {\n+      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);\n+      classPathEnv.append(c.trim());\n+    }\n+    classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR)\n+        .append(\"./log4j.properties\");\n+\n+    // add the runtime classpath needed for tests to work\n+    if (getConf().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n+      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);\n+      classPathEnv.append(System.getProperty(\"java.class.path\"));\n+    }\n+    return classPathEnv.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAMClassPathEnv() {\n    // Add AppMaster.jar location to classpath\n    // At some point we should not be required to add\n    // the hadoop specific classpaths to the env.\n    // It should be provided out of the box.\n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv \u003d new StringBuilder(Environment.CLASSPATH.$())\n        .append(ApplicationConstants.CLASS_PATH_SEPARATOR).append(\"./\")\n        .append(DynoConstants.DYNO_DEPENDENCIES.getResourcePath()).append(\"/*\");\n    for (String c : getConf().getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR)\n        .append(\"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (getConf().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n    return classPathEnv.toString();\n  }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/Client.java"
    }
  }
}