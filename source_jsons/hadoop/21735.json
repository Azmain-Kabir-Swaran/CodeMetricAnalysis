{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCounters.java",
  "functionName": "write",
  "functionId": "write___out-DataOutput",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
  "functionStartLine": 260,
  "functionEndLine": 282,
  "numCommitsSeen": 17,
  "timeTaken": 1429,
  "changeHistory": [
    "35f12b955647651940ef43982552e635ec006caf",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "24676e8c2ef48e67265d33c053badb31aecad616"
  ],
  "changeHistoryShort": {
    "35f12b955647651940ef43982552e635ec006caf": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "24676e8c2ef48e67265d33c053badb31aecad616": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35f12b955647651940ef43982552e635ec006caf": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3697. Support binary compatibility for Counters after MAPREDUCE-901.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241319 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 5:41 PM",
      "commitName": "35f12b955647651940ef43982552e635ec006caf",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/01/12 10:30 AM",
      "commitNameOld": "05efddf28e90f4cd4e92b1fdfd94a9ef88235da4",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 6.3,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void write(DataOutput out) throws IOException {\n     WritableUtils.writeVInt(out, groupFactory.version());\n     WritableUtils.writeVInt(out, fgroups.size());  // framework groups first\n     for (G group : fgroups.values()) {\n-      if (group instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n+      if (group.getUnderlyingGroup() instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n         WritableUtils.writeVInt(out, GroupType.FRAMEWORK.ordinal());\n         WritableUtils.writeVInt(out, getFrameworkGroupId(group.getName()));\n         group.write(out);\n-      } else if (group instanceof FileSystemCounterGroup\u003c?\u003e) {\n+      } else if (group.getUnderlyingGroup() instanceof FileSystemCounterGroup\u003c?\u003e) {\n         WritableUtils.writeVInt(out, GroupType.FILESYSTEM.ordinal());\n         group.write(out);\n       }\n     }\n     if (writeAllCounters) {\n       WritableUtils.writeVInt(out, groups.size());\n       for (G group : groups.values()) {\n         Text.writeString(out, group.getName());\n         group.write(out);\n       }\n     } else {\n       WritableUtils.writeVInt(out, 0);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    WritableUtils.writeVInt(out, groupFactory.version());\n    WritableUtils.writeVInt(out, fgroups.size());  // framework groups first\n    for (G group : fgroups.values()) {\n      if (group.getUnderlyingGroup() instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FRAMEWORK.ordinal());\n        WritableUtils.writeVInt(out, getFrameworkGroupId(group.getName()));\n        group.write(out);\n      } else if (group.getUnderlyingGroup() instanceof FileSystemCounterGroup\u003c?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FILESYSTEM.ordinal());\n        group.write(out);\n      }\n    }\n    if (writeAllCounters) {\n      WritableUtils.writeVInt(out, groups.size());\n      for (G group : groups.values()) {\n        Text.writeString(out, group.getName());\n        group.write(out);\n      }\n    } else {\n      WritableUtils.writeVInt(out, 0);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    WritableUtils.writeVInt(out, groupFactory.version());\n    WritableUtils.writeVInt(out, fgroups.size());  // framework groups first\n    for (G group : fgroups.values()) {\n      if (group instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FRAMEWORK.ordinal());\n        WritableUtils.writeVInt(out, getFrameworkGroupId(group.getName()));\n        group.write(out);\n      } else if (group instanceof FileSystemCounterGroup\u003c?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FILESYSTEM.ordinal());\n        group.write(out);\n      }\n    }\n    if (writeAllCounters) {\n      WritableUtils.writeVInt(out, groups.size());\n      for (G group : groups.values()) {\n        Text.writeString(out, group.getName());\n        group.write(out);\n      }\n    } else {\n      WritableUtils.writeVInt(out, 0);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    WritableUtils.writeVInt(out, groupFactory.version());\n    WritableUtils.writeVInt(out, fgroups.size());  // framework groups first\n    for (G group : fgroups.values()) {\n      if (group instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FRAMEWORK.ordinal());\n        WritableUtils.writeVInt(out, getFrameworkGroupId(group.getName()));\n        group.write(out);\n      } else if (group instanceof FileSystemCounterGroup\u003c?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FILESYSTEM.ordinal());\n        group.write(out);\n      }\n    }\n    if (writeAllCounters) {\n      WritableUtils.writeVInt(out, groups.size());\n      for (G group : groups.values()) {\n        Text.writeString(out, group.getName());\n        group.write(out);\n      }\n    } else {\n      WritableUtils.writeVInt(out, 0);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java"
      }
    },
    "24676e8c2ef48e67265d33c053badb31aecad616": {
      "type": "Yintroduced",
      "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 4:25 PM",
      "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,23 @@\n+  public synchronized void write(DataOutput out) throws IOException {\n+    WritableUtils.writeVInt(out, groupFactory.version());\n+    WritableUtils.writeVInt(out, fgroups.size());  // framework groups first\n+    for (G group : fgroups.values()) {\n+      if (group instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n+        WritableUtils.writeVInt(out, GroupType.FRAMEWORK.ordinal());\n+        WritableUtils.writeVInt(out, getFrameworkGroupId(group.getName()));\n+        group.write(out);\n+      } else if (group instanceof FileSystemCounterGroup\u003c?\u003e) {\n+        WritableUtils.writeVInt(out, GroupType.FILESYSTEM.ordinal());\n+        group.write(out);\n+      }\n+    }\n+    if (writeAllCounters) {\n+      WritableUtils.writeVInt(out, groups.size());\n+      for (G group : groups.values()) {\n+        Text.writeString(out, group.getName());\n+        group.write(out);\n+      }\n+    } else {\n+      WritableUtils.writeVInt(out, 0);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    WritableUtils.writeVInt(out, groupFactory.version());\n    WritableUtils.writeVInt(out, fgroups.size());  // framework groups first\n    for (G group : fgroups.values()) {\n      if (group instanceof FrameworkCounterGroup\u003c?, ?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FRAMEWORK.ordinal());\n        WritableUtils.writeVInt(out, getFrameworkGroupId(group.getName()));\n        group.write(out);\n      } else if (group instanceof FileSystemCounterGroup\u003c?\u003e) {\n        WritableUtils.writeVInt(out, GroupType.FILESYSTEM.ordinal());\n        group.write(out);\n      }\n    }\n    if (writeAllCounters) {\n      WritableUtils.writeVInt(out, groups.size());\n      for (G group : groups.values()) {\n        Text.writeString(out, group.getName());\n        group.write(out);\n      }\n    } else {\n      WritableUtils.writeVInt(out, 0);\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java"
    }
  }
}