{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSchedulerConfiguration.java",
  "functionName": "getResourcePercentage",
  "functionId": "getResourcePercentage___val-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
  "functionStartLine": 658,
  "functionEndLine": 676,
  "numCommitsSeen": 48,
  "timeTaken": 5278,
  "changeHistory": [
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
    "9edc74f64a31450af3c55c0dadf352862e4b359d",
    "39ad98903a5f042573b97a2e5438bc57af7cc7a1",
    "17262470246232d0f0651d627a4961e55b1efe6a",
    "f4fb6695a3a8f66d45001efe89f9950320c6a1e4",
    "99292adcefdc6b8f280b8e100605fb39f755c38a"
  ],
  "changeHistoryShort": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": "Ybodychange",
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": "Ybodychange",
    "9edc74f64a31450af3c55c0dadf352862e4b359d": "Ybodychange",
    "39ad98903a5f042573b97a2e5438bc57af7cc7a1": "Ybodychange",
    "17262470246232d0f0651d627a4961e55b1efe6a": "Ybodychange",
    "f4fb6695a3a8f66d45001efe89f9950320c6a1e4": "Ybodychange",
    "99292adcefdc6b8f280b8e100605fb39f755c38a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
      "commitDate": "21/08/19 8:01 AM",
      "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 169.41,
      "commitsBetweenForRepo": 1280,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private static double[] getResourcePercentage(\n-      String val) throws AllocationConfigurationException {\n+  private static double[] getResourcePercentage(String val)\n+      throws AllocationConfigurationException {\n     int numberOfKnownResourceTypes \u003d ResourceUtils\n         .getNumberOfCountableResourceTypes();\n     double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n-    String[] strings \u003d val.split(\",\");\n+    String[] values \u003d val.split(\",\");\n \n-    if (strings.length \u003d\u003d 1) {\n-      double percentage \u003d findPercentage(strings[0], \"\");\n+    if (values.length \u003d\u003d 1) {\n+      double percentage \u003d findPercentage(values, \"\");\n       for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n         resourcePercentage[i] \u003d percentage;\n       }\n     } else {\n-      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n-      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n+      resourcePercentage[0] \u003d findPercentage(values, \"memory\");\n+      resourcePercentage[1] \u003d findPercentage(values, \"cpu\");\n     }\n \n     return resourcePercentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(String val)\n      throws AllocationConfigurationException {\n    int numberOfKnownResourceTypes \u003d ResourceUtils\n        .getNumberOfCountableResourceTypes();\n    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n    String[] values \u003d val.split(\",\");\n\n    if (values.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(values, \"\");\n      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n        resourcePercentage[i] \u003d percentage;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(values, \"memory\");\n      resourcePercentage[1] \u003d findPercentage(values, \"cpu\");\n    }\n\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9037. [CSI] Ignore volume resource in resource calculators based on tags. Contributed by Sunil Govindan.\n",
      "commitDate": "07/01/19 10:30 PM",
      "commitName": "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "10/12/18 11:06 AM",
      "commitNameOld": "64411a6ff74ef87756aae12224ff9c25f7e2a143",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 28.48,
      "commitsBetweenForRepo": 178,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private static double[] getResourcePercentage(\n       String val) throws AllocationConfigurationException {\n     int numberOfKnownResourceTypes \u003d ResourceUtils\n-        .getNumberOfKnownResourceTypes();\n+        .getNumberOfCountableResourceTypes();\n     double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n     String[] strings \u003d val.split(\",\");\n \n     if (strings.length \u003d\u003d 1) {\n       double percentage \u003d findPercentage(strings[0], \"\");\n       for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n         resourcePercentage[i] \u003d percentage;\n       }\n     } else {\n       resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n       resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n     }\n \n     return resourcePercentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(\n      String val) throws AllocationConfigurationException {\n    int numberOfKnownResourceTypes \u003d ResourceUtils\n        .getNumberOfCountableResourceTypes();\n    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n    String[] strings \u003d val.split(\",\");\n\n    if (strings.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(strings[0], \"\");\n      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n        resourcePercentage[i] \u003d percentage;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n    }\n\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "9edc74f64a31450af3c55c0dadf352862e4b359d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7556. Fair scheduler configuration should allow resource types in the minResources and maxResources properties. (Daniel Templeton and Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "06/07/18 11:03 AM",
      "commitName": "9edc74f64a31450af3c55c0dadf352862e4b359d",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/07/18 12:22 PM",
      "commitNameOld": "39ad98903a5f042573b97a2e5438bc57af7cc7a1",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   private static double[] getResourcePercentage(\n       String val) throws AllocationConfigurationException {\n     int numberOfKnownResourceTypes \u003d ResourceUtils\n         .getNumberOfKnownResourceTypes();\n     double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n     String[] strings \u003d val.split(\",\");\n+\n     if (strings.length \u003d\u003d 1) {\n       double percentage \u003d findPercentage(strings[0], \"\");\n       for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n-        resourcePercentage[i] \u003d percentage/100;\n+        resourcePercentage[i] \u003d percentage;\n       }\n     } else {\n-      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n-      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n+      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n+      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n     }\n+\n     return resourcePercentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(\n      String val) throws AllocationConfigurationException {\n    int numberOfKnownResourceTypes \u003d ResourceUtils\n        .getNumberOfKnownResourceTypes();\n    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n    String[] strings \u003d val.split(\",\");\n\n    if (strings.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(strings[0], \"\");\n      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n        resourcePercentage[i] \u003d percentage;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n    }\n\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "39ad98903a5f042573b97a2e5438bc57af7cc7a1": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Merge branch \u0027trunk\u0027 of https://git-wip-us.apache.org/repos/asf/hadoop into trunk\"\n\nThis reverts commit c163d1797ade0f47d35b4a44381b8ef1dfec5b60, reversing\nchanges made to 0d9804dcef2eab5ebf84667d9ca49bb035d9a731.\n",
      "commitDate": "05/07/18 12:22 PM",
      "commitName": "39ad98903a5f042573b97a2e5438bc57af7cc7a1",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "05/07/18 10:42 AM",
      "commitNameOld": "17262470246232d0f0651d627a4961e55b1efe6a",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   private static double[] getResourcePercentage(\n       String val) throws AllocationConfigurationException {\n     int numberOfKnownResourceTypes \u003d ResourceUtils\n         .getNumberOfKnownResourceTypes();\n     double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n     String[] strings \u003d val.split(\",\");\n-\n     if (strings.length \u003d\u003d 1) {\n       double percentage \u003d findPercentage(strings[0], \"\");\n       for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n-        resourcePercentage[i] \u003d percentage;\n+        resourcePercentage[i] \u003d percentage/100;\n       }\n     } else {\n-      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n-      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n+      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n+      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n     }\n-\n     return resourcePercentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(\n      String val) throws AllocationConfigurationException {\n    int numberOfKnownResourceTypes \u003d ResourceUtils\n        .getNumberOfKnownResourceTypes();\n    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n    String[] strings \u003d val.split(\",\");\n    if (strings.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(strings[0], \"\");\n      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n        resourcePercentage[i] \u003d percentage/100;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n    }\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "17262470246232d0f0651d627a4961e55b1efe6a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7556. Fair scheduler configuration should allow resource types in the minResources and maxResources properties. (Daniel Templeton and Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "05/07/18 10:42 AM",
      "commitName": "17262470246232d0f0651d627a4961e55b1efe6a",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "22/01/18 10:30 AM",
      "commitNameOld": "22ee6f77e5affbb308287f465ae8d145fc73ff60",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 163.97,
      "commitsBetweenForRepo": 1759,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   private static double[] getResourcePercentage(\n       String val) throws AllocationConfigurationException {\n     int numberOfKnownResourceTypes \u003d ResourceUtils\n         .getNumberOfKnownResourceTypes();\n     double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n     String[] strings \u003d val.split(\",\");\n+\n     if (strings.length \u003d\u003d 1) {\n       double percentage \u003d findPercentage(strings[0], \"\");\n       for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n-        resourcePercentage[i] \u003d percentage/100;\n+        resourcePercentage[i] \u003d percentage;\n       }\n     } else {\n-      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n-      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n+      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n+      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n     }\n+\n     return resourcePercentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(\n      String val) throws AllocationConfigurationException {\n    int numberOfKnownResourceTypes \u003d ResourceUtils\n        .getNumberOfKnownResourceTypes();\n    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n    String[] strings \u003d val.split(\",\");\n\n    if (strings.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(strings[0], \"\");\n      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n        resourcePercentage[i] \u003d percentage;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(val, \"memory\");\n      resourcePercentage[1] \u003d findPercentage(val, \"cpu\");\n    }\n\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "f4fb6695a3a8f66d45001efe89f9950320c6a1e4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7180. Remove class ResourceType. Contributed by Sunil G.\n",
      "commitDate": "13/10/17 2:47 AM",
      "commitName": "f4fb6695a3a8f66d45001efe89f9950320c6a1e4",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "05/10/17 11:51 PM",
      "commitNameOld": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 7.12,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   private static double[] getResourcePercentage(\n       String val) throws AllocationConfigurationException {\n-    double[] resourcePercentage \u003d new double[ResourceType.values().length];\n+    int numberOfKnownResourceTypes \u003d ResourceUtils\n+        .getNumberOfKnownResourceTypes();\n+    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n     String[] strings \u003d val.split(\",\");\n     if (strings.length \u003d\u003d 1) {\n       double percentage \u003d findPercentage(strings[0], \"\");\n-      for (int i \u003d 0; i \u003c ResourceType.values().length; i++) {\n+      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n         resourcePercentage[i] \u003d percentage/100;\n       }\n     } else {\n       resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n       resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n     }\n     return resourcePercentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(\n      String val) throws AllocationConfigurationException {\n    int numberOfKnownResourceTypes \u003d ResourceUtils\n        .getNumberOfKnownResourceTypes();\n    double[] resourcePercentage \u003d new double[numberOfKnownResourceTypes];\n    String[] strings \u003d val.split(\",\");\n    if (strings.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(strings[0], \"\");\n      for (int i \u003d 0; i \u003c numberOfKnownResourceTypes; i++) {\n        resourcePercentage[i] \u003d percentage/100;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n    }\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "99292adcefdc6b8f280b8e100605fb39f755c38a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)\n",
      "commitDate": "05/10/17 11:51 PM",
      "commitName": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,15 @@\n+  private static double[] getResourcePercentage(\n+      String val) throws AllocationConfigurationException {\n+    double[] resourcePercentage \u003d new double[ResourceType.values().length];\n+    String[] strings \u003d val.split(\",\");\n+    if (strings.length \u003d\u003d 1) {\n+      double percentage \u003d findPercentage(strings[0], \"\");\n+      for (int i \u003d 0; i \u003c ResourceType.values().length; i++) {\n+        resourcePercentage[i] \u003d percentage/100;\n+      }\n+    } else {\n+      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n+      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n+    }\n+    return resourcePercentage;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static double[] getResourcePercentage(\n      String val) throws AllocationConfigurationException {\n    double[] resourcePercentage \u003d new double[ResourceType.values().length];\n    String[] strings \u003d val.split(\",\");\n    if (strings.length \u003d\u003d 1) {\n      double percentage \u003d findPercentage(strings[0], \"\");\n      for (int i \u003d 0; i \u003c ResourceType.values().length; i++) {\n        resourcePercentage[i] \u003d percentage/100;\n      }\n    } else {\n      resourcePercentage[0] \u003d findPercentage(val, \"memory\")/100;\n      resourcePercentage[1] \u003d findPercentage(val, \"cpu\")/100;\n    }\n    return resourcePercentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java"
    }
  }
}