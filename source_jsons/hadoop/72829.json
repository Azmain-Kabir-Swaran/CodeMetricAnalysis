{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyProvider.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java",
  "functionStartLine": 391,
  "functionEndLine": 398,
  "numCommitsSeen": 29,
  "timeTaken": 1202,
  "changeHistory": [
    "b7e67db37238e775150180ff4de65da27a99e282",
    "43342670db29dbc757460c9dac18bab79ccb5310",
    "350ab4d2466117124c8563114cdb9eb83fa37a02",
    "77306291643838ed7b57b99d6497553314a525f2"
  ],
  "changeHistoryShort": {
    "b7e67db37238e775150180ff4de65da27a99e282": "Ybodychange",
    "43342670db29dbc757460c9dac18bab79ccb5310": "Ybodychange",
    "350ab4d2466117124c8563114cdb9eb83fa37a02": "Ybodychange",
    "77306291643838ed7b57b99d6497553314a525f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b7e67db37238e775150180ff4de65da27a99e282": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10936. Change default KeyProvider bitlength to 128. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/08/14 7:32 PM",
      "commitName": "b7e67db37238e775150180ff4de65da27a99e282",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/07/14 5:24 PM",
      "commitNameOld": "43342670db29dbc757460c9dac18bab79ccb5310",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 24.09,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,8 @@\n     public String toString() {\n-      final StringBuilder metaSB \u003d new StringBuilder();\n-      metaSB.append(\"cipher: \").append(cipher).append(\", \");\n-      metaSB.append(\"length: \").append(bitLength).append(\", \");\n-      metaSB.append(\"description: \").append(description).append(\", \");\n-      metaSB.append(\"created: \").append(created).append(\", \");\n-      metaSB.append(\"version: \").append(versions).append(\", \");\n-      metaSB.append(\"attributes: \");\n-      if ((attributes !\u003d null) \u0026\u0026 !attributes.isEmpty()) {\n-        for (Map.Entry\u003cString, String\u003e attribute : attributes.entrySet()) {\n-          metaSB.append(\"[\");\n-          metaSB.append(attribute.getKey());\n-          metaSB.append(\"\u003d\");\n-          metaSB.append(attribute.getValue());\n-          metaSB.append(\"], \");\n-        }\n-        metaSB.deleteCharAt(metaSB.length() - 2);  // remove last \u0027, \u0027\n-      } else {\n-        metaSB.append(\"null\");\n-      }\n-      return metaSB.toString();\n+      return \"Options{\" +\n+          \"cipher\u003d\u0027\" + cipher + \u0027\\\u0027\u0027 +\n+          \", bitLength\u003d\" + bitLength +\n+          \", description\u003d\u0027\" + description + \u0027\\\u0027\u0027 +\n+          \", attributes\u003d\" + attributes +\n+          \u0027}\u0027;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      return \"Options{\" +\n          \"cipher\u003d\u0027\" + cipher + \u0027\\\u0027\u0027 +\n          \", bitLength\u003d\" + bitLength +\n          \", description\u003d\u0027\" + description + \u0027\\\u0027\u0027 +\n          \", attributes\u003d\" + attributes +\n          \u0027}\u0027;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java",
      "extendedDetails": {}
    },
    "43342670db29dbc757460c9dac18bab79ccb5310": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10736. Add key attributes to the key shell. Contributed by Mike Yoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609869 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/14 5:24 PM",
      "commitName": "43342670db29dbc757460c9dac18bab79ccb5310",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/07/14 10:31 AM",
      "commitNameOld": "7b5295513dce9768083ae53282013e31d74573c6",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 7.29,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,22 @@\n     public String toString() {\n-      return MessageFormat.format(\n-          \"cipher: {0}, length: {1} description: {2} created: {3} version: {4}\",\n-          cipher, bitLength, description, created, versions);\n+      final StringBuilder metaSB \u003d new StringBuilder();\n+      metaSB.append(\"cipher: \").append(cipher).append(\", \");\n+      metaSB.append(\"length: \").append(bitLength).append(\", \");\n+      metaSB.append(\"description: \").append(description).append(\", \");\n+      metaSB.append(\"created: \").append(created).append(\", \");\n+      metaSB.append(\"version: \").append(versions).append(\", \");\n+      metaSB.append(\"attributes: \");\n+      if ((attributes !\u003d null) \u0026\u0026 !attributes.isEmpty()) {\n+        for (Map.Entry\u003cString, String\u003e attribute : attributes.entrySet()) {\n+          metaSB.append(\"[\");\n+          metaSB.append(attribute.getKey());\n+          metaSB.append(\"\u003d\");\n+          metaSB.append(attribute.getValue());\n+          metaSB.append(\"], \");\n+        }\n+        metaSB.deleteCharAt(metaSB.length() - 2);  // remove last \u0027, \u0027\n+      } else {\n+        metaSB.append(\"null\");\n+      }\n+      return metaSB.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      final StringBuilder metaSB \u003d new StringBuilder();\n      metaSB.append(\"cipher: \").append(cipher).append(\", \");\n      metaSB.append(\"length: \").append(bitLength).append(\", \");\n      metaSB.append(\"description: \").append(description).append(\", \");\n      metaSB.append(\"created: \").append(created).append(\", \");\n      metaSB.append(\"version: \").append(versions).append(\", \");\n      metaSB.append(\"attributes: \");\n      if ((attributes !\u003d null) \u0026\u0026 !attributes.isEmpty()) {\n        for (Map.Entry\u003cString, String\u003e attribute : attributes.entrySet()) {\n          metaSB.append(\"[\");\n          metaSB.append(attribute.getKey());\n          metaSB.append(\"\u003d\");\n          metaSB.append(attribute.getValue());\n          metaSB.append(\"], \");\n        }\n        metaSB.deleteCharAt(metaSB.length() - 2);  // remove last \u0027, \u0027\n      } else {\n        metaSB.append(\"null\");\n      }\n      return metaSB.toString();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java",
      "extendedDetails": {}
    },
    "350ab4d2466117124c8563114cdb9eb83fa37a02": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10430. KeyProvider Metadata should have an optional description, there should be a method to retrieve the metadata from all keys. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/14 11:02 AM",
      "commitName": "350ab4d2466117124c8563114cdb9eb83fa37a02",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "09/04/14 12:46 PM",
      "commitNameOld": "9a1f15532fd26f66a2d1a482e82bb5d7fbab4946",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,5 @@\n     public String toString() {\n-      StringBuilder buf \u003d new StringBuilder();\n-      buf.append(\"key(\");\n-      buf.append(versionName);\n-      buf.append(\")\u003d\");\n-      if (material \u003d\u003d null) {\n-        buf.append(\"null\");\n-      } else {\n-        for(byte b: material) {\n-          buf.append(\u0027 \u0027);\n-          int right \u003d b \u0026 0xff;\n-          if (right \u003c 0x10) {\n-            buf.append(\u00270\u0027);\n-          }\n-          buf.append(Integer.toHexString(right));\n-        }\n-      }\n-      return buf.toString();\n+      return MessageFormat.format(\n+          \"cipher: {0}, length: {1} description: {2} created: {3} version: {4}\",\n+          cipher, bitLength, description, created, versions);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      return MessageFormat.format(\n          \"cipher: {0}, length: {1} description: {2} created: {3} version: {4}\",\n          cipher, bitLength, description, created, versions);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java",
      "extendedDetails": {}
    },
    "77306291643838ed7b57b99d6497553314a525f2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10141. Create KeyProvider API to separate encryption key storage\nfrom the applications. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552462 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/13 4:25 PM",
      "commitName": "77306291643838ed7b57b99d6497553314a525f2",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,19 @@\n+    public String toString() {\n+      StringBuilder buf \u003d new StringBuilder();\n+      buf.append(\"key(\");\n+      buf.append(versionName);\n+      buf.append(\")\u003d\");\n+      if (material \u003d\u003d null) {\n+        buf.append(\"null\");\n+      } else {\n+        for(byte b: material) {\n+          buf.append(\u0027 \u0027);\n+          int right \u003d b \u0026 0xff;\n+          if (right \u003c 0x10) {\n+            buf.append(\u00270\u0027);\n+          }\n+          buf.append(Integer.toHexString(right));\n+        }\n+      }\n+      return buf.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      StringBuilder buf \u003d new StringBuilder();\n      buf.append(\"key(\");\n      buf.append(versionName);\n      buf.append(\")\u003d\");\n      if (material \u003d\u003d null) {\n        buf.append(\"null\");\n      } else {\n        for(byte b: material) {\n          buf.append(\u0027 \u0027);\n          int right \u003d b \u0026 0xff;\n          if (right \u003c 0x10) {\n            buf.append(\u00270\u0027);\n          }\n          buf.append(Integer.toHexString(right));\n        }\n      }\n      return buf.toString();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java"
    }
  }
}