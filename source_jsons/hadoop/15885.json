{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSOperations.java",
  "functionName": "execute",
  "functionId": "execute___fs-FileSystem",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
  "functionStartLine": 1573,
  "functionEndLine": 1576,
  "numCommitsSeen": 44,
  "timeTaken": 6031,
  "changeHistory": [
    "9a3a28018af71806412d9a2d3ea6b63f3d6737dd",
    "59aac002834aaeb6475faad4c894b8c764957f68",
    "4ede8bce28aadc62007ad65dc6d44be550632b5f",
    "3037762b2ca2bee0a281b16455c8592173f92315",
    "6dcfef79afe97eda6d09fe2567bb4d4074223141",
    "396ce0d9f470a5e8af03987ad6396d0f08b3d225",
    "8a4bff02c1534c6bf529726f2bbe414ac4c172e8",
    "931a49800ef05ee0a6fdc143be1799abb228735d",
    "ea2895f4ed5031809d856faa52e9de5b9501bdea",
    "46162a213f60f915df76c60b0412f45a021e1e7e",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "9a3a28018af71806412d9a2d3ea6b63f3d6737dd": "Ybodychange",
    "59aac002834aaeb6475faad4c894b8c764957f68": "Ybodychange",
    "4ede8bce28aadc62007ad65dc6d44be550632b5f": "Ymultichange(Yreturntypechange,Ybodychange)",
    "3037762b2ca2bee0a281b16455c8592173f92315": "Ybodychange",
    "6dcfef79afe97eda6d09fe2567bb4d4074223141": "Ybodychange",
    "396ce0d9f470a5e8af03987ad6396d0f08b3d225": "Ymultichange(Yreturntypechange,Ybodychange)",
    "8a4bff02c1534c6bf529726f2bbe414ac4c172e8": "Ymultichange(Yreturntypechange,Ybodychange)",
    "931a49800ef05ee0a6fdc143be1799abb228735d": "Ymultichange(Yreturntypechange,Ybodychange)",
    "ea2895f4ed5031809d856faa52e9de5b9501bdea": "Ymultichange(Yreturntypechange,Ybodychange)",
    "46162a213f60f915df76c60b0412f45a021e1e7e": "Ymultichange(Yreturntypechange,Ybodychange)",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a3a28018af71806412d9a2d3ea6b63f3d6737dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15190. HttpFS: Add Support for Storage Policy Satisfier. Contributed by hemanthboyina.\n",
      "commitDate": "28/02/20 5:30 PM",
      "commitName": "9a3a28018af71806412d9a2d3ea6b63f3d6737dd",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "28/01/20 10:04 AM",
      "commitNameOld": "061421fc6d66405e7109d17b8818ea023ef3acc2",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 31.31,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public Void execute(FileSystem fs) throws IOException {\n       if (fs instanceof DistributedFileSystem) {\n         DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n-        dfs.unsetErasureCodingPolicy(path);\n+        dfs.satisfyStoragePolicy(path);\n       } else {\n-        throw new UnsupportedOperationException(\"unsetErasureCodingPolicy is \"\n+        throw new UnsupportedOperationException(\"satisfyStoragePolicy is \"\n             + \"not supported for HttpFs on \" + fs.getClass()\n             + \". Please check your fs.defaultFS configuration\");\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        dfs.satisfyStoragePolicy(path);\n      } else {\n        throw new UnsupportedOperationException(\"satisfyStoragePolicy is \"\n            + \"not supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
      "extendedDetails": {}
    },
    "59aac002834aaeb6475faad4c894b8c764957f68": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15066. HttpFS: Implement setErasureCodingPolicy , unsetErasureCodingPolicy , getErasureCodingPolicy. Contributed by hemanthboyina.\n",
      "commitDate": "06/01/20 6:10 PM",
      "commitName": "59aac002834aaeb6475faad4c894b8c764957f68",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "31/12/19 6:26 PM",
      "commitNameOld": "074050ca595a81927c867951e48cef132a0284be",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 5.99,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public Void execute(FileSystem fs) throws IOException {\n       if (fs instanceof DistributedFileSystem) {\n         DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n-        dfs.access(path, mode);\n+        dfs.unsetErasureCodingPolicy(path);\n       } else {\n-        throw new UnsupportedOperationException(\"checkaccess is \"\n+        throw new UnsupportedOperationException(\"unsetErasureCodingPolicy is \"\n             + \"not supported for HttpFs on \" + fs.getClass()\n             + \". Please check your fs.defaultFS configuration\");\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        dfs.unsetErasureCodingPolicy(path);\n      } else {\n        throw new UnsupportedOperationException(\"unsetErasureCodingPolicy is \"\n            + \"not supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
      "extendedDetails": {}
    },
    "4ede8bce28aadc62007ad65dc6d44be550632b5f": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-9695. HTTPFS - CHECKACCESS operation missing. Contributed by hemanthboyina\n",
      "commitDate": "02/12/19 4:38 PM",
      "commitName": "4ede8bce28aadc62007ad65dc6d44be550632b5f",
      "commitAuthor": "Takanobu Asanuma",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9695. HTTPFS - CHECKACCESS operation missing. Contributed by hemanthboyina\n",
          "commitDate": "02/12/19 4:38 PM",
          "commitName": "4ede8bce28aadc62007ad65dc6d44be550632b5f",
          "commitAuthor": "Takanobu Asanuma",
          "commitDateOld": "20/11/19 10:51 AM",
          "commitNameOld": "3037762b2ca2bee0a281b16455c8592173f92315",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 12.24,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-    public String execute(FileSystem fs) throws IOException {\n-      FsServerDefaults sds \u003d null;\n+    public Void execute(FileSystem fs) throws IOException {\n       if (fs instanceof DistributedFileSystem) {\n         DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n-        sds \u003d dfs.getServerDefaults();\n+        dfs.access(path, mode);\n       } else {\n-        throw new UnsupportedOperationException(\"getServerDefaults is \"\n+        throw new UnsupportedOperationException(\"checkaccess is \"\n             + \"not supported for HttpFs on \" + fs.getClass()\n             + \". Please check your fs.defaultFS configuration\");\n       }\n-      return JsonUtil.toJsonString(sds);\n+      return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        dfs.access(path, mode);\n      } else {\n        throw new UnsupportedOperationException(\"checkaccess is \"\n            + \"not supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "Void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9695. HTTPFS - CHECKACCESS operation missing. Contributed by hemanthboyina\n",
          "commitDate": "02/12/19 4:38 PM",
          "commitName": "4ede8bce28aadc62007ad65dc6d44be550632b5f",
          "commitAuthor": "Takanobu Asanuma",
          "commitDateOld": "20/11/19 10:51 AM",
          "commitNameOld": "3037762b2ca2bee0a281b16455c8592173f92315",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 12.24,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-    public String execute(FileSystem fs) throws IOException {\n-      FsServerDefaults sds \u003d null;\n+    public Void execute(FileSystem fs) throws IOException {\n       if (fs instanceof DistributedFileSystem) {\n         DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n-        sds \u003d dfs.getServerDefaults();\n+        dfs.access(path, mode);\n       } else {\n-        throw new UnsupportedOperationException(\"getServerDefaults is \"\n+        throw new UnsupportedOperationException(\"checkaccess is \"\n             + \"not supported for HttpFs on \" + fs.getClass()\n             + \". Please check your fs.defaultFS configuration\");\n       }\n-      return JsonUtil.toJsonString(sds);\n+      return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        dfs.access(path, mode);\n      } else {\n        throw new UnsupportedOperationException(\"checkaccess is \"\n            + \"not supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "3037762b2ca2bee0a281b16455c8592173f92315": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14949. Add getServerDefaults() support to HttpFS. Contributed by hemanthboyina.\n",
      "commitDate": "20/11/19 10:51 AM",
      "commitName": "3037762b2ca2bee0a281b16455c8592173f92315",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "13/08/19 4:27 PM",
      "commitNameOld": "6ae8bc3a4a07c6b4e7060362b749be8c7afe0560",
      "commitAuthorOld": "Siyao Meng",
      "daysBetweenCommits": 98.81,
      "commitsBetweenForRepo": 681,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     public String execute(FileSystem fs) throws IOException {\n-      SnapshottableDirectoryStatus[] sds \u003d null;\n+      FsServerDefaults sds \u003d null;\n       if (fs instanceof DistributedFileSystem) {\n         DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n-        sds \u003d dfs.getSnapshottableDirListing();\n+        sds \u003d dfs.getServerDefaults();\n       } else {\n-        throw new UnsupportedOperationException(\"getSnapshottableDirListing is \"\n+        throw new UnsupportedOperationException(\"getServerDefaults is \"\n             + \"not supported for HttpFs on \" + fs.getClass()\n             + \". Please check your fs.defaultFS configuration\");\n       }\n       return JsonUtil.toJsonString(sds);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String execute(FileSystem fs) throws IOException {\n      FsServerDefaults sds \u003d null;\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        sds \u003d dfs.getServerDefaults();\n      } else {\n        throw new UnsupportedOperationException(\"getServerDefaults is \"\n            + \"not supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      return JsonUtil.toJsonString(sds);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
      "extendedDetails": {}
    },
    "6dcfef79afe97eda6d09fe2567bb4d4074223141": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13878. HttpFS: Implement GETSNAPSHOTTABLEDIRECTORYLIST. Contributed by Siyao Meng.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/10/18 3:01 PM",
      "commitName": "6dcfef79afe97eda6d09fe2567bb4d4074223141",
      "commitAuthor": "Siyao Meng",
      "commitDateOld": "04/10/18 3:17 PM",
      "commitNameOld": "396ce0d9f470a5e8af03987ad6396d0f08b3d225",
      "commitAuthorOld": "Siyao Meng",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,12 @@\n     public String execute(FileSystem fs) throws IOException {\n-      SnapshotDiffReport sdr \u003d null;\n+      SnapshottableDirectoryStatus[] sds \u003d null;\n       if (fs instanceof DistributedFileSystem) {\n         DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n-        sdr \u003d dfs.getSnapshotDiffReport(path, oldSnapshotName, snapshotName);\n+        sds \u003d dfs.getSnapshottableDirListing();\n       } else {\n-        throw new UnsupportedOperationException(\"getSnapshotDiff is not \"\n-            + \"supported for HttpFs on \" + fs.getClass()\n+        throw new UnsupportedOperationException(\"getSnapshottableDirListing is \"\n+            + \"not supported for HttpFs on \" + fs.getClass()\n             + \". Please check your fs.defaultFS configuration\");\n       }\n-      if (sdr !\u003d null) {\n-        return JsonUtil.toJsonString(sdr);\n-      } else {\n-        return \"\";\n-      }\n+      return JsonUtil.toJsonString(sds);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String execute(FileSystem fs) throws IOException {\n      SnapshottableDirectoryStatus[] sds \u003d null;\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        sds \u003d dfs.getSnapshottableDirListing();\n      } else {\n        throw new UnsupportedOperationException(\"getSnapshottableDirListing is \"\n            + \"not supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      return JsonUtil.toJsonString(sds);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
      "extendedDetails": {}
    },
    "396ce0d9f470a5e8af03987ad6396d0f08b3d225": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-13877. HttpFS: Implement GETSNAPSHOTDIFF. Contributed by Siyao Meng.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "04/10/18 3:17 PM",
      "commitName": "396ce0d9f470a5e8af03987ad6396d0f08b3d225",
      "commitAuthor": "Siyao Meng",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-13877. HttpFS: Implement GETSNAPSHOTDIFF. Contributed by Siyao Meng.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
          "commitDate": "04/10/18 3:17 PM",
          "commitName": "396ce0d9f470a5e8af03987ad6396d0f08b3d225",
          "commitAuthor": "Siyao Meng",
          "commitDateOld": "24/09/18 10:40 AM",
          "commitNameOld": "8de5c923b432a670f6822189e7131d2df7b5a336",
          "commitAuthorOld": "Siyao Meng",
          "daysBetweenCommits": 10.19,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,16 @@\n-    public Void execute(FileSystem fs) throws IOException {\n-      fs.renameSnapshot(path, oldSnapshotName, snapshotName);\n-      return null;\n+    public String execute(FileSystem fs) throws IOException {\n+      SnapshotDiffReport sdr \u003d null;\n+      if (fs instanceof DistributedFileSystem) {\n+        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n+        sdr \u003d dfs.getSnapshotDiffReport(path, oldSnapshotName, snapshotName);\n+      } else {\n+        throw new UnsupportedOperationException(\"getSnapshotDiff is not \"\n+            + \"supported for HttpFs on \" + fs.getClass()\n+            + \". Please check your fs.defaultFS configuration\");\n+      }\n+      if (sdr !\u003d null) {\n+        return JsonUtil.toJsonString(sdr);\n+      } else {\n+        return \"\";\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public String execute(FileSystem fs) throws IOException {\n      SnapshotDiffReport sdr \u003d null;\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        sdr \u003d dfs.getSnapshotDiffReport(path, oldSnapshotName, snapshotName);\n      } else {\n        throw new UnsupportedOperationException(\"getSnapshotDiff is not \"\n            + \"supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      if (sdr !\u003d null) {\n        return JsonUtil.toJsonString(sdr);\n      } else {\n        return \"\";\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "Void",
            "newValue": "String"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13877. HttpFS: Implement GETSNAPSHOTDIFF. Contributed by Siyao Meng.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
          "commitDate": "04/10/18 3:17 PM",
          "commitName": "396ce0d9f470a5e8af03987ad6396d0f08b3d225",
          "commitAuthor": "Siyao Meng",
          "commitDateOld": "24/09/18 10:40 AM",
          "commitNameOld": "8de5c923b432a670f6822189e7131d2df7b5a336",
          "commitAuthorOld": "Siyao Meng",
          "daysBetweenCommits": 10.19,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,16 @@\n-    public Void execute(FileSystem fs) throws IOException {\n-      fs.renameSnapshot(path, oldSnapshotName, snapshotName);\n-      return null;\n+    public String execute(FileSystem fs) throws IOException {\n+      SnapshotDiffReport sdr \u003d null;\n+      if (fs instanceof DistributedFileSystem) {\n+        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n+        sdr \u003d dfs.getSnapshotDiffReport(path, oldSnapshotName, snapshotName);\n+      } else {\n+        throw new UnsupportedOperationException(\"getSnapshotDiff is not \"\n+            + \"supported for HttpFs on \" + fs.getClass()\n+            + \". Please check your fs.defaultFS configuration\");\n+      }\n+      if (sdr !\u003d null) {\n+        return JsonUtil.toJsonString(sdr);\n+      } else {\n+        return \"\";\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public String execute(FileSystem fs) throws IOException {\n      SnapshotDiffReport sdr \u003d null;\n      if (fs instanceof DistributedFileSystem) {\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) fs;\n        sdr \u003d dfs.getSnapshotDiffReport(path, oldSnapshotName, snapshotName);\n      } else {\n        throw new UnsupportedOperationException(\"getSnapshotDiff is not \"\n            + \"supported for HttpFs on \" + fs.getClass()\n            + \". Please check your fs.defaultFS configuration\");\n      }\n      if (sdr !\u003d null) {\n        return JsonUtil.toJsonString(sdr);\n      } else {\n        return \"\";\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "8a4bff02c1534c6bf529726f2bbe414ac4c172e8": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-12117. HttpFS does not seem to support SNAPSHOT related methods for WebHDFS REST Interface. Contributed by Wellington Chevreuil.\n",
      "commitDate": "08/08/17 11:58 PM",
      "commitName": "8a4bff02c1534c6bf529726f2bbe414ac4c172e8",
      "commitAuthor": "Wei-Chiu Chuang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-12117. HttpFS does not seem to support SNAPSHOT related methods for WebHDFS REST Interface. Contributed by Wellington Chevreuil.\n",
          "commitDate": "08/08/17 11:58 PM",
          "commitName": "8a4bff02c1534c6bf529726f2bbe414ac4c172e8",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "19/07/17 10:56 AM",
          "commitNameOld": "3556e36be30211f46ac38899ce11a4d4cac6d635",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 20.54,
          "commitsBetweenForRepo": 175,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,4 @@\n-    public Map execute(FileSystem fs) throws IOException {\n-      BlockLocation[] locations \u003d\n-          fs.getFileBlockLocations(this.path, this.offsetValue,\n-              this.lengthValue);\n-      return JsonUtil.toJsonMap(locations);\n+    public Void execute(FileSystem fs) throws IOException {\n+      fs.renameSnapshot(path, oldSnapshotName, snapshotName);\n+      return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      fs.renameSnapshot(path, oldSnapshotName, snapshotName);\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "Map",
            "newValue": "Void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12117. HttpFS does not seem to support SNAPSHOT related methods for WebHDFS REST Interface. Contributed by Wellington Chevreuil.\n",
          "commitDate": "08/08/17 11:58 PM",
          "commitName": "8a4bff02c1534c6bf529726f2bbe414ac4c172e8",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "19/07/17 10:56 AM",
          "commitNameOld": "3556e36be30211f46ac38899ce11a4d4cac6d635",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 20.54,
          "commitsBetweenForRepo": 175,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,4 @@\n-    public Map execute(FileSystem fs) throws IOException {\n-      BlockLocation[] locations \u003d\n-          fs.getFileBlockLocations(this.path, this.offsetValue,\n-              this.lengthValue);\n-      return JsonUtil.toJsonMap(locations);\n+    public Void execute(FileSystem fs) throws IOException {\n+      fs.renameSnapshot(path, oldSnapshotName, snapshotName);\n+      return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      fs.renameSnapshot(path, oldSnapshotName, snapshotName);\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "931a49800ef05ee0a6fdc143be1799abb228735d": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-6874. Add GETFILEBLOCKLOCATIONS operation to HttpFS.  Contributed by Weiwei Yang\n",
      "commitDate": "12/07/17 2:15 PM",
      "commitName": "931a49800ef05ee0a6fdc143be1799abb228735d",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6874. Add GETFILEBLOCKLOCATIONS operation to HttpFS.  Contributed by Weiwei Yang\n",
          "commitDate": "12/07/17 2:15 PM",
          "commitName": "931a49800ef05ee0a6fdc143be1799abb228735d",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "03/04/17 8:13 PM",
          "commitNameOld": "6eba79232f36b36e0196163adc8fe4219a6b6bf9",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 99.75,
          "commitsBetweenForRepo": 508,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,6 @@\n-    public Void execute(FileSystem fs) throws IOException {\n-      fs.unsetStoragePolicy(path);\n-      return null;\n+    public Map execute(FileSystem fs) throws IOException {\n+      BlockLocation[] locations \u003d\n+          fs.getFileBlockLocations(this.path, this.offsetValue,\n+              this.lengthValue);\n+      return JsonUtil.toJsonMap(locations);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Map execute(FileSystem fs) throws IOException {\n      BlockLocation[] locations \u003d\n          fs.getFileBlockLocations(this.path, this.offsetValue,\n              this.lengthValue);\n      return JsonUtil.toJsonMap(locations);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "Void",
            "newValue": "Map"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6874. Add GETFILEBLOCKLOCATIONS operation to HttpFS.  Contributed by Weiwei Yang\n",
          "commitDate": "12/07/17 2:15 PM",
          "commitName": "931a49800ef05ee0a6fdc143be1799abb228735d",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "03/04/17 8:13 PM",
          "commitNameOld": "6eba79232f36b36e0196163adc8fe4219a6b6bf9",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 99.75,
          "commitsBetweenForRepo": 508,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,6 @@\n-    public Void execute(FileSystem fs) throws IOException {\n-      fs.unsetStoragePolicy(path);\n-      return null;\n+    public Map execute(FileSystem fs) throws IOException {\n+      BlockLocation[] locations \u003d\n+          fs.getFileBlockLocations(this.path, this.offsetValue,\n+              this.lengthValue);\n+      return JsonUtil.toJsonMap(locations);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Map execute(FileSystem fs) throws IOException {\n      BlockLocation[] locations \u003d\n          fs.getFileBlockLocations(this.path, this.offsetValue,\n              this.lengthValue);\n      return JsonUtil.toJsonMap(locations);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "ea2895f4ed5031809d856faa52e9de5b9501bdea": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-8630. WebHDFS : Support get/set/unset StoragePolicy. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "07/12/16 3:52 PM",
      "commitName": "ea2895f4ed5031809d856faa52e9de5b9501bdea",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-8630. WebHDFS : Support get/set/unset StoragePolicy. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "07/12/16 3:52 PM",
          "commitName": "ea2895f4ed5031809d856faa52e9de5b9501bdea",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "04/11/16 6:06 PM",
          "commitNameOld": "d8bab3dcb693b2773ede9a6e4f71ae85ee056f79",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 32.95,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,4 @@\n-    public Map execute(FileSystem fs) throws IOException {\n-      Map\u003cString, byte[]\u003e xattrs \u003d null;\n-      if (names !\u003d null \u0026\u0026 !names.isEmpty()) {\n-        xattrs \u003d fs.getXAttrs(path, names);\n-      } else {\n-        xattrs \u003d fs.getXAttrs(path);\n-      }\n-      return xAttrsToJSON(xattrs, encoding);\n+    public Void execute(FileSystem fs) throws IOException {\n+      fs.unsetStoragePolicy(path);\n+      return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      fs.unsetStoragePolicy(path);\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "Map",
            "newValue": "Void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8630. WebHDFS : Support get/set/unset StoragePolicy. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "07/12/16 3:52 PM",
          "commitName": "ea2895f4ed5031809d856faa52e9de5b9501bdea",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "04/11/16 6:06 PM",
          "commitNameOld": "d8bab3dcb693b2773ede9a6e4f71ae85ee056f79",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 32.95,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,4 @@\n-    public Map execute(FileSystem fs) throws IOException {\n-      Map\u003cString, byte[]\u003e xattrs \u003d null;\n-      if (names !\u003d null \u0026\u0026 !names.isEmpty()) {\n-        xattrs \u003d fs.getXAttrs(path, names);\n-      } else {\n-        xattrs \u003d fs.getXAttrs(path);\n-      }\n-      return xAttrsToJSON(xattrs, encoding);\n+    public Void execute(FileSystem fs) throws IOException {\n+      fs.unsetStoragePolicy(path);\n+      return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      fs.unsetStoragePolicy(path);\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "46162a213f60f915df76c60b0412f45a021e1e7e": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-6430. HTTPFS - Implement XAttr support. (Yi Liu via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605118 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 8:59 AM",
      "commitName": "46162a213f60f915df76c60b0412f45a021e1e7e",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6430. HTTPFS - Implement XAttr support. (Yi Liu via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605118 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 8:59 AM",
          "commitName": "46162a213f60f915df76c60b0412f45a021e1e7e",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "11/06/14 3:35 PM",
          "commitNameOld": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 12.73,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,9 @@\n-    public Void execute(FileSystem fs) throws IOException {\n-      fs.setTimes(path, mTime, aTime);\n-      return null;\n+    public Map execute(FileSystem fs) throws IOException {\n+      Map\u003cString, byte[]\u003e xattrs \u003d null;\n+      if (names !\u003d null \u0026\u0026 !names.isEmpty()) {\n+        xattrs \u003d fs.getXAttrs(path, names);\n+      } else {\n+        xattrs \u003d fs.getXAttrs(path);\n+      }\n+      return xAttrsToJSON(xattrs, encoding);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Map execute(FileSystem fs) throws IOException {\n      Map\u003cString, byte[]\u003e xattrs \u003d null;\n      if (names !\u003d null \u0026\u0026 !names.isEmpty()) {\n        xattrs \u003d fs.getXAttrs(path, names);\n      } else {\n        xattrs \u003d fs.getXAttrs(path);\n      }\n      return xAttrsToJSON(xattrs, encoding);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "Void",
            "newValue": "Map"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6430. HTTPFS - Implement XAttr support. (Yi Liu via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605118 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 8:59 AM",
          "commitName": "46162a213f60f915df76c60b0412f45a021e1e7e",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "11/06/14 3:35 PM",
          "commitNameOld": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 12.73,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,9 @@\n-    public Void execute(FileSystem fs) throws IOException {\n-      fs.setTimes(path, mTime, aTime);\n-      return null;\n+    public Map execute(FileSystem fs) throws IOException {\n+      Map\u003cString, byte[]\u003e xattrs \u003d null;\n+      if (names !\u003d null \u0026\u0026 !names.isEmpty()) {\n+        xattrs \u003d fs.getXAttrs(path, names);\n+      } else {\n+        xattrs \u003d fs.getXAttrs(path);\n+      }\n+      return xAttrsToJSON(xattrs, encoding);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public Map execute(FileSystem fs) throws IOException {\n      Map\u003cString, byte[]\u003e xattrs \u003d null;\n      if (names !\u003d null \u0026\u0026 !names.isEmpty()) {\n        xattrs \u003d fs.getXAttrs(path, names);\n      } else {\n        xattrs \u003d fs.getXAttrs(path);\n      }\n      return xAttrsToJSON(xattrs, encoding);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,4 @@\n+    public Void execute(FileSystem fs) throws IOException {\n+      fs.setTimes(path, mTime, aTime);\n+      return null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public Void execute(FileSystem fs) throws IOException {\n      fs.setTimes(path, mTime, aTime);\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java"
    }
  }
}