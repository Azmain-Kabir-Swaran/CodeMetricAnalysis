{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "getPasswordFromCredentialProviders",
  "functionId": "getPasswordFromCredentialProviders___name-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 2412,
  "functionEndLine": 2440,
  "numCommitsSeen": 186,
  "timeTaken": 4162,
  "changeHistory": [
    "2216bde322961c0fe33b5822510880a65d5c45fd",
    "7e6463d2fb5f9383d88baec290461868cf476e4c",
    "8b32f84e87500a6b11a4e738e4be2dc65efbf28c",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "2216bde322961c0fe33b5822510880a65d5c45fd": "Ymodifierchange",
    "7e6463d2fb5f9383d88baec290461868cf476e4c": "Ybodychange",
    "8b32f84e87500a6b11a4e738e4be2dc65efbf28c": "Yrename",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2216bde322961c0fe33b5822510880a65d5c45fd": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-12862. LDAP Group Mapping over SSL can not specify trust store. Contributed by Wei-Chiu Chuang and Konstantin Shvachko.",
      "commitDate": "29/03/18 5:16 PM",
      "commitName": "2216bde322961c0fe33b5822510880a65d5c45fd",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "23/03/18 9:17 PM",
      "commitNameOld": "28790b81ecb719ac26a01ad0c400ee5f1c29ccf8",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 5.83,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n-  protected char[] getPasswordFromCredentialProviders(String name)\n+  public char[] getPasswordFromCredentialProviders(String name)\n       throws IOException {\n     char[] pass \u003d null;\n     try {\n       List\u003cCredentialProvider\u003e providers \u003d\n           CredentialProviderFactory.getProviders(this);\n \n       if (providers !\u003d null) {\n         for (CredentialProvider provider : providers) {\n           try {\n             CredentialEntry entry \u003d getCredentialEntry(provider, name);\n             if (entry !\u003d null) {\n               pass \u003d entry.getCredential();\n               break;\n             }\n           }\n           catch (IOException ioe) {\n             throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n             \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n           }\n         }\n       }\n     }\n     catch (IOException ioe) {\n       throw new IOException(\"Configuration problem with provider path.\", ioe);\n     }\n \n     return pass;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public char[] getPasswordFromCredentialProviders(String name)\n      throws IOException {\n    char[] pass \u003d null;\n    try {\n      List\u003cCredentialProvider\u003e providers \u003d\n          CredentialProviderFactory.getProviders(this);\n\n      if (providers !\u003d null) {\n        for (CredentialProvider provider : providers) {\n          try {\n            CredentialEntry entry \u003d getCredentialEntry(provider, name);\n            if (entry !\u003d null) {\n              pass \u003d entry.getCredential();\n              break;\n            }\n          }\n          catch (IOException ioe) {\n            throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n            \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n          }\n        }\n      }\n    }\n    catch (IOException ioe) {\n      throw new IOException(\"Configuration problem with provider path.\", ioe);\n    }\n\n    return pass;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[public]"
      }
    },
    "7e6463d2fb5f9383d88baec290461868cf476e4c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14251. Credential provider should handle property key deprecation. Contributed by John Zhuge.\n",
      "commitDate": "23/08/17 11:37 AM",
      "commitName": "7e6463d2fb5f9383d88baec290461868cf476e4c",
      "commitAuthor": "John Zhuge",
      "commitDateOld": "11/08/17 10:16 AM",
      "commitNameOld": "582648befaf9908159f937d2cc8f549583a3483e",
      "commitAuthorOld": "John Zhuge",
      "daysBetweenCommits": 12.06,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   protected char[] getPasswordFromCredentialProviders(String name)\n       throws IOException {\n     char[] pass \u003d null;\n     try {\n       List\u003cCredentialProvider\u003e providers \u003d\n           CredentialProviderFactory.getProviders(this);\n \n       if (providers !\u003d null) {\n         for (CredentialProvider provider : providers) {\n           try {\n-            CredentialEntry entry \u003d provider.getCredentialEntry(name);\n+            CredentialEntry entry \u003d getCredentialEntry(provider, name);\n             if (entry !\u003d null) {\n               pass \u003d entry.getCredential();\n               break;\n             }\n           }\n           catch (IOException ioe) {\n             throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n             \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n           }\n         }\n       }\n     }\n     catch (IOException ioe) {\n       throw new IOException(\"Configuration problem with provider path.\", ioe);\n     }\n \n     return pass;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected char[] getPasswordFromCredentialProviders(String name)\n      throws IOException {\n    char[] pass \u003d null;\n    try {\n      List\u003cCredentialProvider\u003e providers \u003d\n          CredentialProviderFactory.getProviders(this);\n\n      if (providers !\u003d null) {\n        for (CredentialProvider provider : providers) {\n          try {\n            CredentialEntry entry \u003d getCredentialEntry(provider, name);\n            if (entry !\u003d null) {\n              pass \u003d entry.getCredential();\n              break;\n            }\n          }\n          catch (IOException ioe) {\n            throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n            \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n          }\n        }\n      }\n    }\n    catch (IOException ioe) {\n      throw new IOException(\"Configuration problem with provider path.\", ioe);\n    }\n\n    return pass;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "8b32f84e87500a6b11a4e738e4be2dc65efbf28c": {
      "type": "Yrename",
      "commitMessage": "HADOOP-10929. Typo in Configuration.getPasswordFromCredentialProviders. Contributed by Larry McCay\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 3:47 PM",
      "commitName": "8b32f84e87500a6b11a4e738e4be2dc65efbf28c",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "31/07/14 1:06 PM",
      "commitNameOld": "e52f67e3897a67a0b6d29e557a31cfa881738821",
      "commitAuthorOld": "Xuan Gong",
      "daysBetweenCommits": 7.11,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n-  protected char[] getPasswordFromCredenitalProviders(String name)\n+  protected char[] getPasswordFromCredentialProviders(String name)\n       throws IOException {\n     char[] pass \u003d null;\n     try {\n       List\u003cCredentialProvider\u003e providers \u003d\n           CredentialProviderFactory.getProviders(this);\n \n       if (providers !\u003d null) {\n         for (CredentialProvider provider : providers) {\n           try {\n             CredentialEntry entry \u003d provider.getCredentialEntry(name);\n             if (entry !\u003d null) {\n               pass \u003d entry.getCredential();\n               break;\n             }\n           }\n           catch (IOException ioe) {\n             throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n             \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n           }\n         }\n       }\n     }\n     catch (IOException ioe) {\n       throw new IOException(\"Configuration problem with provider path.\", ioe);\n     }\n \n     return pass;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected char[] getPasswordFromCredentialProviders(String name)\n      throws IOException {\n    char[] pass \u003d null;\n    try {\n      List\u003cCredentialProvider\u003e providers \u003d\n          CredentialProviderFactory.getProviders(this);\n\n      if (providers !\u003d null) {\n        for (CredentialProvider provider : providers) {\n          try {\n            CredentialEntry entry \u003d provider.getCredentialEntry(name);\n            if (entry !\u003d null) {\n              pass \u003d entry.getCredential();\n              break;\n            }\n          }\n          catch (IOException ioe) {\n            throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n            \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n          }\n        }\n      }\n    }\n    catch (IOException ioe) {\n      throw new IOException(\"Configuration problem with provider path.\", ioe);\n    }\n\n    return pass;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldValue": "getPasswordFromCredenitalProviders",
        "newValue": "getPasswordFromCredentialProviders"
      }
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,29 @@\n+  protected char[] getPasswordFromCredenitalProviders(String name)\n+      throws IOException {\n+    char[] pass \u003d null;\n+    try {\n+      List\u003cCredentialProvider\u003e providers \u003d\n+          CredentialProviderFactory.getProviders(this);\n+\n+      if (providers !\u003d null) {\n+        for (CredentialProvider provider : providers) {\n+          try {\n+            CredentialEntry entry \u003d provider.getCredentialEntry(name);\n+            if (entry !\u003d null) {\n+              pass \u003d entry.getCredential();\n+              break;\n+            }\n+          }\n+          catch (IOException ioe) {\n+            throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n+            \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n+          }\n+        }\n+      }\n+    }\n+    catch (IOException ioe) {\n+      throw new IOException(\"Configuration problem with provider path.\", ioe);\n+    }\n+\n+    return pass;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected char[] getPasswordFromCredenitalProviders(String name)\n      throws IOException {\n    char[] pass \u003d null;\n    try {\n      List\u003cCredentialProvider\u003e providers \u003d\n          CredentialProviderFactory.getProviders(this);\n\n      if (providers !\u003d null) {\n        for (CredentialProvider provider : providers) {\n          try {\n            CredentialEntry entry \u003d provider.getCredentialEntry(name);\n            if (entry !\u003d null) {\n              pass \u003d entry.getCredential();\n              break;\n            }\n          }\n          catch (IOException ioe) {\n            throw new IOException(\"Can\u0027t get key \" + name + \" from key provider\" +\n            \t\t\"of type: \" + provider.getClass().getName() + \".\", ioe);\n          }\n        }\n      }\n    }\n    catch (IOException ioe) {\n      throw new IOException(\"Configuration problem with provider path.\", ioe);\n    }\n\n    return pass;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}