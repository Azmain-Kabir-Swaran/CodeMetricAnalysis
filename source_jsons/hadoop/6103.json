{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLog.java",
  "functionName": "endCurrentLogSegment",
  "functionId": "endCurrentLogSegment___writeEndTxn-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
  "functionStartLine": 1440,
  "functionEndLine": 1468,
  "numCommitsSeen": 149,
  "timeTaken": 5164,
  "changeHistory": [
    "603cbcd513a74c29e0e4ec9dc181ff08887d64a4",
    "2151716832ad14932dd65b1a4e47e64d8d6cd767",
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
    "706394d03992b394e9f907aff2155df493e4ea4e",
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63"
  ],
  "changeHistoryShort": {
    "603cbcd513a74c29e0e4ec9dc181ff08887d64a4": "Ybodychange",
    "2151716832ad14932dd65b1a4e47e64d8d6cd767": "Ybodychange",
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc": "Ymodifierchange",
    "706394d03992b394e9f907aff2155df493e4ea4e": "Ybodychange",
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58": "Ybodychange",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "603cbcd513a74c29e0e4ec9dc181ff08887d64a4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11292. log lastWrittenTxId etc info in logSyncAll. Contributed by Yongjun Zhang.\n",
      "commitDate": "09/01/17 3:44 PM",
      "commitName": "603cbcd513a74c29e0e4ec9dc181ff08887d64a4",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "01/12/16 6:08 AM",
      "commitNameOld": "e0fa49234fd37aca88e1caa95bac77bca192bae4",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 39.4,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n   public synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n-    LOG.info(\"Ending log segment \" + curSegmentTxId);\n+    LOG.info(\"Ending log segment \" + curSegmentTxId +\n+        \", \" + getLastWrittenTxId());\n     Preconditions.checkState(isSegmentOpen(),\n         \"Bad state: %s\", state);\n     \n     if (writeEndTxn) {\n       logEdit(LogSegmentOp.getInstance(cache.get(), \n           FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n     }\n     // always sync to ensure all edits are flushed.\n     logSyncAll();\n \n     printStatistics(true);\n     \n     final long lastTxId \u003d getLastWrittenTxId();\n-    \n+    final long lastSyncedTxId \u003d getSyncTxId();\n+    Preconditions.checkArgument(lastTxId \u003d\u003d lastSyncedTxId,\n+        \"LastWrittenTxId %s is expected to be the same as lastSyncedTxId %s\",\n+        lastTxId, lastSyncedTxId);\n     try {\n       journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n       editLogStream \u003d null;\n     } catch (IOException e) {\n       //All journals have failed, it will be handled in logSync.\n     }\n     \n     state \u003d State.BETWEEN_LOG_SEGMENTS;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId +\n        \", \" + getLastWrittenTxId());\n    Preconditions.checkState(isSegmentOpen(),\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(cache.get(), \n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n    }\n    // always sync to ensure all edits are flushed.\n    logSyncAll();\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    final long lastSyncedTxId \u003d getSyncTxId();\n    Preconditions.checkArgument(lastTxId \u003d\u003d lastSyncedTxId,\n        \"LastWrittenTxId %s is expected to be the same as lastSyncedTxId %s\",\n        lastTxId, lastSyncedTxId);\n    try {\n      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n      editLogStream \u003d null;\n    } catch (IOException e) {\n      //All journals have failed, it will be handled in logSync.\n    }\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "2151716832ad14932dd65b1a4e47e64d8d6cd767": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7964. Add support for async edit logging. Contributed by Daryn Sharp.\n",
      "commitDate": "29/02/16 3:34 PM",
      "commitName": "2151716832ad14932dd65b1a4e47e64d8d6cd767",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "27/01/16 4:34 PM",
      "commitNameOld": "ec25c7f9c7e60c077d8c4143253c20445fcdaecf",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 32.96,
      "commitsBetweenForRepo": 229,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n     LOG.info(\"Ending log segment \" + curSegmentTxId);\n     Preconditions.checkState(isSegmentOpen(),\n         \"Bad state: %s\", state);\n     \n     if (writeEndTxn) {\n       logEdit(LogSegmentOp.getInstance(cache.get(), \n           FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n-      logSync();\n     }\n+    // always sync to ensure all edits are flushed.\n+    logSyncAll();\n \n     printStatistics(true);\n     \n     final long lastTxId \u003d getLastWrittenTxId();\n     \n     try {\n       journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n       editLogStream \u003d null;\n     } catch (IOException e) {\n       //All journals have failed, it will be handled in logSync.\n     }\n     \n     state \u003d State.BETWEEN_LOG_SEGMENTS;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(isSegmentOpen(),\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(cache.get(), \n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n    }\n    // always sync to ensure all edits are flushed.\n    logSyncAll();\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    try {\n      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n      editLogStream \u003d null;\n    } catch (IOException e) {\n      //All journals have failed, it will be handled in logSync.\n    }\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6294. Use INode IDs to avoid conflicts when a file open for write is renamed (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593634 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/05/14 3:36 PM",
      "commitName": "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "23/04/14 1:13 PM",
      "commitNameOld": "876fd8ab7913a259ff9f69c16cc2d9af46ad3f9b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 16.1,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n+  public synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n     LOG.info(\"Ending log segment \" + curSegmentTxId);\n     Preconditions.checkState(isSegmentOpen(),\n         \"Bad state: %s\", state);\n     \n     if (writeEndTxn) {\n       logEdit(LogSegmentOp.getInstance(cache.get(), \n           FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n       logSync();\n     }\n \n     printStatistics(true);\n     \n     final long lastTxId \u003d getLastWrittenTxId();\n     \n     try {\n       journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n       editLogStream \u003d null;\n     } catch (IOException e) {\n       //All journals have failed, it will be handled in logSync.\n     }\n     \n     state \u003d State.BETWEEN_LOG_SEGMENTS;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(isSegmentOpen(),\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(cache.get(), \n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    try {\n      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n      editLogStream \u003d null;\n    } catch (IOException e) {\n      //All journals have failed, it will be handled in logSync.\n    }\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldValue": "[synchronized]",
        "newValue": "[public, synchronized]"
      }
    },
    "706394d03992b394e9f907aff2155df493e4ea4e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3004. Implement Recovery Mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311394 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/12 12:39 PM",
      "commitName": "706394d03992b394e9f907aff2155df493e4ea4e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "02/04/12 5:55 PM",
      "commitNameOld": "e449de0526ce0aa58bdd0f513b0e2a744a4bbda1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 6.78,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n     LOG.info(\"Ending log segment \" + curSegmentTxId);\n     Preconditions.checkState(isSegmentOpen(),\n         \"Bad state: %s\", state);\n     \n     if (writeEndTxn) {\n-      logEdit(LogSegmentOp.getInstance(\n+      logEdit(LogSegmentOp.getInstance(cache.get(), \n           FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n       logSync();\n     }\n \n     printStatistics(true);\n     \n     final long lastTxId \u003d getLastWrittenTxId();\n     \n     try {\n       journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n       editLogStream \u003d null;\n     } catch (IOException e) {\n       //All journals have failed, it will be handled in logSync.\n     }\n     \n     state \u003d State.BETWEEN_LOG_SEGMENTS;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(isSegmentOpen(),\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(cache.get(), \n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    try {\n      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n      editLogStream \u003d null;\n    } catch (IOException e) {\n      //All journals have failed, it will be handled in logSync.\n    }\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2634. Standby needs to ingest latest edit logs before transitioning to active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1212187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 3:55 PM",
      "commitName": "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "07/12/11 6:57 PM",
      "commitNameOld": "d9ea5bb48940c6ee2b6688a527ad74bccce6ed18",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.87,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n     LOG.info(\"Ending log segment \" + curSegmentTxId);\n-    Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n+    Preconditions.checkState(isSegmentOpen(),\n         \"Bad state: %s\", state);\n     \n     if (writeEndTxn) {\n       logEdit(LogSegmentOp.getInstance(\n           FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n       logSync();\n     }\n \n     printStatistics(true);\n     \n     final long lastTxId \u003d getLastWrittenTxId();\n     \n     try {\n       journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n       editLogStream \u003d null;\n     } catch (IOException e) {\n       //All journals have failed, it will be handled in logSync.\n     }\n     \n     state \u003d State.BETWEEN_LOG_SEGMENTS;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(isSegmentOpen(),\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(\n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    try {\n      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n      editLogStream \u003d null;\n    } catch (IOException e) {\n      //All journals have failed, it will be handled in logSync.\n    }\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 6:14 PM",
      "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "06/09/11 1:27 PM",
      "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 23.2,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n     LOG.info(\"Ending log segment \" + curSegmentTxId);\n     Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n         \"Bad state: %s\", state);\n     \n     if (writeEndTxn) {\n       logEdit(LogSegmentOp.getInstance(\n           FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n       logSync();\n     }\n \n     printStatistics(true);\n     \n     final long lastTxId \u003d getLastWrittenTxId();\n     \n-    mapJournalsAndReportErrors(new JournalClosure() {\n-      @Override\n-      public void apply(JournalAndStream jas) throws IOException {\n-        if (jas.isActive()) {\n-          jas.close(lastTxId);\n-        }\n-      }\n-    }, \"ending log segment\");\n+    try {\n+      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n+      editLogStream \u003d null;\n+    } catch (IOException e) {\n+      //All journals have failed, it will be handled in logSync.\n+    }\n     \n     state \u003d State.BETWEEN_LOG_SEGMENTS;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(\n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    try {\n      journalSet.finalizeLogSegment(curSegmentTxId, lastTxId);\n      editLogStream \u003d null;\n    } catch (IOException e) {\n      //All journals have failed, it will be handled in logSync.\n    }\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(\n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    mapJournalsAndReportErrors(new JournalClosure() {\n      @Override\n      public void apply(JournalAndStream jas) throws IOException {\n        if (jas.isActive()) {\n          jas.close(lastTxId);\n        }\n      }\n    }, \"ending log segment\");\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(\n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    mapJournalsAndReportErrors(new JournalClosure() {\n      @Override\n      public void apply(JournalAndStream jas) throws IOException {\n        if (jas.isActive()) {\n          jas.close(lastTxId);\n        }\n      }\n    }, \"ending log segment\");\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,26 @@\n+  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n+    LOG.info(\"Ending log segment \" + curSegmentTxId);\n+    Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n+        \"Bad state: %s\", state);\n+    \n+    if (writeEndTxn) {\n+      logEdit(LogSegmentOp.getInstance(\n+          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n+      logSync();\n+    }\n+\n+    printStatistics(true);\n+    \n+    final long lastTxId \u003d getLastWrittenTxId();\n+    \n+    mapJournalsAndReportErrors(new JournalClosure() {\n+      @Override\n+      public void apply(JournalAndStream jas) throws IOException {\n+        if (jas.isActive()) {\n+          jas.close(lastTxId);\n+        }\n+      }\n+    }, \"ending log segment\");\n+    \n+    state \u003d State.BETWEEN_LOG_SEGMENTS;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void endCurrentLogSegment(boolean writeEndTxn) {\n    LOG.info(\"Ending log segment \" + curSegmentTxId);\n    Preconditions.checkState(state \u003d\u003d State.IN_SEGMENT,\n        \"Bad state: %s\", state);\n    \n    if (writeEndTxn) {\n      logEdit(LogSegmentOp.getInstance(\n          FSEditLogOpCodes.OP_END_LOG_SEGMENT));\n      logSync();\n    }\n\n    printStatistics(true);\n    \n    final long lastTxId \u003d getLastWrittenTxId();\n    \n    mapJournalsAndReportErrors(new JournalClosure() {\n      @Override\n      public void apply(JournalAndStream jas) throws IOException {\n        if (jas.isActive()) {\n          jas.close(lastTxId);\n        }\n      }\n    }, \"ending log segment\");\n    \n    state \u003d State.BETWEEN_LOG_SEGMENTS;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    }
  }
}