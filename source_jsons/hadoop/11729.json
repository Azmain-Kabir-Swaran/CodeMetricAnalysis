{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PmemVolumeManager.java",
  "functionName": "chooseVolume",
  "functionId": "chooseVolume___bytesCount-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java",
  "functionStartLine": 394,
  "functionEndLine": 416,
  "numCommitsSeen": 4,
  "timeTaken": 1319,
  "changeHistory": [
    "9b0aace1e6c54f201784912c0b623707aa82b761"
  ],
  "changeHistoryShort": {
    "9b0aace1e6c54f201784912c0b623707aa82b761": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b0aace1e6c54f201784912c0b623707aa82b761": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
      "commitDate": "08/05/19 4:50 AM",
      "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,23 @@\n+  synchronized Byte chooseVolume(long bytesCount) throws IOException {\n+    if (count \u003d\u003d 0) {\n+      throw new IOException(\"No usable persistent memory is found\");\n+    }\n+    int k \u003d 0;\n+    long maxAvailableSpace \u003d 0L;\n+    while (k++ !\u003d count) {\n+      if (nextIndex \u003d\u003d count) {\n+        nextIndex \u003d 0;\n+      }\n+      byte index \u003d nextIndex++;\n+      long availableBytes \u003d usedBytesCounts.get(index).getAvailableBytes();\n+      if (availableBytes \u003e\u003d bytesCount) {\n+        return index;\n+      }\n+      if (availableBytes \u003e maxAvailableSpace) {\n+        maxAvailableSpace \u003d availableBytes;\n+      }\n+    }\n+    throw new IOException(\"There is no enough persistent memory space \" +\n+        \"for caching. The current max available space is \" +\n+        maxAvailableSpace + \", but \" + bytesCount + \"is required.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Byte chooseVolume(long bytesCount) throws IOException {\n    if (count \u003d\u003d 0) {\n      throw new IOException(\"No usable persistent memory is found\");\n    }\n    int k \u003d 0;\n    long maxAvailableSpace \u003d 0L;\n    while (k++ !\u003d count) {\n      if (nextIndex \u003d\u003d count) {\n        nextIndex \u003d 0;\n      }\n      byte index \u003d nextIndex++;\n      long availableBytes \u003d usedBytesCounts.get(index).getAvailableBytes();\n      if (availableBytes \u003e\u003d bytesCount) {\n        return index;\n      }\n      if (availableBytes \u003e maxAvailableSpace) {\n        maxAvailableSpace \u003d availableBytes;\n      }\n    }\n    throw new IOException(\"There is no enough persistent memory space \" +\n        \"for caching. The current max available space is \" +\n        maxAvailableSpace + \", but \" + bytesCount + \"is required.\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java"
    }
  }
}