{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineMetricCalculator.java",
  "functionName": "compare",
  "functionId": "compare___n1-Number__n2-Number",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/timelineservice/TimelineMetricCalculator.java",
  "functionStartLine": 38,
  "functionEndLine": 63,
  "numCommitsSeen": 1,
  "timeTaken": 649,
  "changeHistory": [
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21"
  ],
  "changeHistoryShort": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3816. [Aggregation] App-level aggregation and accumulation for YARN system metrics (Li Lu via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "39cce4e629aadb7fadf1fb14a23108f55b59eb21",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,26 @@\n+  public static int compare(Number n1, Number n2) {\n+    if (n1 \u003d\u003d null || n2 \u003d\u003d null) {\n+      throw new YarnRuntimeException(\n+          \"Number to be compared shouldn\u0027t be null.\");\n+    }\n+\n+    if (n1 instanceof Integer || n1 instanceof Long) {\n+      if (n1.longValue() \u003d\u003d n2.longValue()) {\n+        return 0;\n+      } else {\n+        return (n1.longValue() \u003c n2.longValue()) ? -1 : 1;\n+      }\n+    }\n+\n+    if (n1 instanceof Float || n1 instanceof Double) {\n+      if (n1.doubleValue() \u003d\u003d n2.doubleValue()) {\n+        return 0;\n+      } else {\n+        return (n1.doubleValue() \u003c n2.doubleValue()) ? -1 : 1;\n+      }\n+    }\n+\n+    // TODO throw warnings/exceptions for other types of number.\n+    throw new YarnRuntimeException(\"Unsupported types for number comparison: \"\n+        + n1.getClass().getName() + \", \" + n2.getClass().getName());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int compare(Number n1, Number n2) {\n    if (n1 \u003d\u003d null || n2 \u003d\u003d null) {\n      throw new YarnRuntimeException(\n          \"Number to be compared shouldn\u0027t be null.\");\n    }\n\n    if (n1 instanceof Integer || n1 instanceof Long) {\n      if (n1.longValue() \u003d\u003d n2.longValue()) {\n        return 0;\n      } else {\n        return (n1.longValue() \u003c n2.longValue()) ? -1 : 1;\n      }\n    }\n\n    if (n1 instanceof Float || n1 instanceof Double) {\n      if (n1.doubleValue() \u003d\u003d n2.doubleValue()) {\n        return 0;\n      } else {\n        return (n1.doubleValue() \u003c n2.doubleValue()) ? -1 : 1;\n      }\n    }\n\n    // TODO throw warnings/exceptions for other types of number.\n    throw new YarnRuntimeException(\"Unsupported types for number comparison: \"\n        + n1.getClass().getName() + \", \" + n2.getClass().getName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/timelineservice/TimelineMetricCalculator.java"
    }
  }
}