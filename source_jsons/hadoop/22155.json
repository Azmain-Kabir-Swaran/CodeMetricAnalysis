{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleSchedulerImpl.java",
  "functionName": "updateStatus",
  "functionId": "updateStatus___individualProgress-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
  "functionStartLine": 227,
  "functionEndLine": 245,
  "numCommitsSeen": 21,
  "timeTaken": 2600,
  "changeHistory": [
    "b9edad64034a9c8a121ec2b37792c190ba561e26",
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
    "1a389305b27ac1efec4d7923b87de3e703bf70e1",
    "27d1c74a0c7831f8a83922ea2e87d1762ccf8021"
  ],
  "changeHistoryShort": {
    "b9edad64034a9c8a121ec2b37792c190ba561e26": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e": "Ybodychange",
    "1a389305b27ac1efec4d7923b87de3e703bf70e1": "Ymovefromfile",
    "27d1c74a0c7831f8a83922ea2e87d1762ccf8021": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b9edad64034a9c8a121ec2b37792c190ba561e26": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5873. Shuffle bandwidth computation includes time spent waiting for maps. Contributed by Siqi Li\n",
      "commitDate": "15/10/14 8:52 AM",
      "commitName": "b9edad64034a9c8a121ec2b37792c190ba561e26",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5873. Shuffle bandwidth computation includes time spent waiting for maps. Contributed by Siqi Li\n",
          "commitDate": "15/10/14 8:52 AM",
          "commitName": "b9edad64034a9c8a121ec2b37792c190ba561e26",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "18/09/14 3:00 PM",
          "commitNameOld": "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 26.74,
          "commitsBetweenForRepo": 269,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-  private void updateStatus() {\n-    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n+  private synchronized void updateStatus(String individualProgress) {\n     int mapsDone \u003d totalMaps - remainingMaps;\n-    long secsSinceStart \u003d (Time.monotonicNow() - startTime) / 1000 + 1;\n-\n-    float transferRate \u003d mbs / secsSinceStart;\n+    long totalCopyMillis \u003d copyTimeTracker.getCopyMillis();\n+    if (totalCopyMillis \u003d\u003d 0) totalCopyMillis \u003d 1;\n+    float bytesPerMillis \u003d (float) totalBytesShuffledTillNow / totalCopyMillis;\n+    float transferRate \u003d bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;\n     progress.set((float) mapsDone / totalMaps);\n     String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n     status.setStateString(statusString);\n \n-    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n-        + mbpsFormat.format(transferRate) + \" MB/s)\");\n+    if (individualProgress !\u003d null) {\n+      progress.setStatus(individualProgress + \" Aggregated copy rate(\" + \n+          mapsDone + \" of \" + totalMaps + \" at \" + \n+      mbpsFormat.format(transferRate) + \" MB/s)\");\n+    } else {\n+      progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n+          + mbpsFormat.format(transferRate) + \" MB/s)\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void updateStatus(String individualProgress) {\n    int mapsDone \u003d totalMaps - remainingMaps;\n    long totalCopyMillis \u003d copyTimeTracker.getCopyMillis();\n    if (totalCopyMillis \u003d\u003d 0) totalCopyMillis \u003d 1;\n    float bytesPerMillis \u003d (float) totalBytesShuffledTillNow / totalCopyMillis;\n    float transferRate \u003d bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;\n    progress.set((float) mapsDone / totalMaps);\n    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n    status.setStateString(statusString);\n\n    if (individualProgress !\u003d null) {\n      progress.setStatus(individualProgress + \" Aggregated copy rate(\" + \n          mapsDone + \" of \" + totalMaps + \" at \" + \n      mbpsFormat.format(transferRate) + \" MB/s)\");\n    } else {\n      progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n          + mbpsFormat.format(transferRate) + \" MB/s)\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[individualProgress-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-5873. Shuffle bandwidth computation includes time spent waiting for maps. Contributed by Siqi Li\n",
          "commitDate": "15/10/14 8:52 AM",
          "commitName": "b9edad64034a9c8a121ec2b37792c190ba561e26",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "18/09/14 3:00 PM",
          "commitNameOld": "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 26.74,
          "commitsBetweenForRepo": 269,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-  private void updateStatus() {\n-    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n+  private synchronized void updateStatus(String individualProgress) {\n     int mapsDone \u003d totalMaps - remainingMaps;\n-    long secsSinceStart \u003d (Time.monotonicNow() - startTime) / 1000 + 1;\n-\n-    float transferRate \u003d mbs / secsSinceStart;\n+    long totalCopyMillis \u003d copyTimeTracker.getCopyMillis();\n+    if (totalCopyMillis \u003d\u003d 0) totalCopyMillis \u003d 1;\n+    float bytesPerMillis \u003d (float) totalBytesShuffledTillNow / totalCopyMillis;\n+    float transferRate \u003d bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;\n     progress.set((float) mapsDone / totalMaps);\n     String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n     status.setStateString(statusString);\n \n-    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n-        + mbpsFormat.format(transferRate) + \" MB/s)\");\n+    if (individualProgress !\u003d null) {\n+      progress.setStatus(individualProgress + \" Aggregated copy rate(\" + \n+          mapsDone + \" of \" + totalMaps + \" at \" + \n+      mbpsFormat.format(transferRate) + \" MB/s)\");\n+    } else {\n+      progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n+          + mbpsFormat.format(transferRate) + \" MB/s)\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void updateStatus(String individualProgress) {\n    int mapsDone \u003d totalMaps - remainingMaps;\n    long totalCopyMillis \u003d copyTimeTracker.getCopyMillis();\n    if (totalCopyMillis \u003d\u003d 0) totalCopyMillis \u003d 1;\n    float bytesPerMillis \u003d (float) totalBytesShuffledTillNow / totalCopyMillis;\n    float transferRate \u003d bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;\n    progress.set((float) mapsDone / totalMaps);\n    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n    status.setStateString(statusString);\n\n    if (individualProgress !\u003d null) {\n      progress.setStatus(individualProgress + \" Aggregated copy rate(\" + \n          mapsDone + \" of \" + totalMaps + \" at \" + \n      mbpsFormat.format(transferRate) + \" MB/s)\");\n    } else {\n      progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n          + mbpsFormat.format(transferRate) + \" MB/s)\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5873. Shuffle bandwidth computation includes time spent waiting for maps. Contributed by Siqi Li\n",
          "commitDate": "15/10/14 8:52 AM",
          "commitName": "b9edad64034a9c8a121ec2b37792c190ba561e26",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "18/09/14 3:00 PM",
          "commitNameOld": "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 26.74,
          "commitsBetweenForRepo": 269,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-  private void updateStatus() {\n-    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n+  private synchronized void updateStatus(String individualProgress) {\n     int mapsDone \u003d totalMaps - remainingMaps;\n-    long secsSinceStart \u003d (Time.monotonicNow() - startTime) / 1000 + 1;\n-\n-    float transferRate \u003d mbs / secsSinceStart;\n+    long totalCopyMillis \u003d copyTimeTracker.getCopyMillis();\n+    if (totalCopyMillis \u003d\u003d 0) totalCopyMillis \u003d 1;\n+    float bytesPerMillis \u003d (float) totalBytesShuffledTillNow / totalCopyMillis;\n+    float transferRate \u003d bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;\n     progress.set((float) mapsDone / totalMaps);\n     String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n     status.setStateString(statusString);\n \n-    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n-        + mbpsFormat.format(transferRate) + \" MB/s)\");\n+    if (individualProgress !\u003d null) {\n+      progress.setStatus(individualProgress + \" Aggregated copy rate(\" + \n+          mapsDone + \" of \" + totalMaps + \" at \" + \n+      mbpsFormat.format(transferRate) + \" MB/s)\");\n+    } else {\n+      progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n+          + mbpsFormat.format(transferRate) + \" MB/s)\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void updateStatus(String individualProgress) {\n    int mapsDone \u003d totalMaps - remainingMaps;\n    long totalCopyMillis \u003d copyTimeTracker.getCopyMillis();\n    if (totalCopyMillis \u003d\u003d 0) totalCopyMillis \u003d 1;\n    float bytesPerMillis \u003d (float) totalBytesShuffledTillNow / totalCopyMillis;\n    float transferRate \u003d bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;\n    progress.set((float) mapsDone / totalMaps);\n    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n    status.setStateString(statusString);\n\n    if (individualProgress !\u003d null) {\n      progress.setStatus(individualProgress + \" Aggregated copy rate(\" + \n          mapsDone + \" of \" + totalMaps + \" at \" + \n      mbpsFormat.format(transferRate) + \" MB/s)\");\n    } else {\n      progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n          + mbpsFormat.format(transferRate) + \" MB/s)\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5891. Improved shuffle error handling across NM restarts. Contributed by Junping Du\n",
      "commitDate": "18/09/14 3:00 PM",
      "commitName": "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "18/08/14 10:57 AM",
      "commitNameOld": "f8e871d01b851cd5d8c57dd7e364b3e787521765",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 31.17,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void updateStatus() {\n     float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n     int mapsDone \u003d totalMaps - remainingMaps;\n-    long secsSinceStart \u003d (System.currentTimeMillis() - startTime) / 1000 + 1;\n+    long secsSinceStart \u003d (Time.monotonicNow() - startTime) / 1000 + 1;\n \n     float transferRate \u003d mbs / secsSinceStart;\n     progress.set((float) mapsDone / totalMaps);\n     String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n     status.setStateString(statusString);\n \n     progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n         + mbpsFormat.format(transferRate) + \" MB/s)\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateStatus() {\n    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n    int mapsDone \u003d totalMaps - remainingMaps;\n    long secsSinceStart \u003d (Time.monotonicNow() - startTime) / 1000 + 1;\n\n    float transferRate \u003d mbs / secsSinceStart;\n    progress.set((float) mapsDone / totalMaps);\n    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n    status.setStateString(statusString);\n\n    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n        + mbpsFormat.format(transferRate) + \" MB/s)\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
      "extendedDetails": {}
    },
    "1a389305b27ac1efec4d7923b87de3e703bf70e1": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-5192. Allow for alternate resolutions of TaskCompletionEvents. Contributed by Chris Douglas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:07 PM",
      "commitName": "1a389305b27ac1efec4d7923b87de3e703bf70e1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "15/06/13 4:09 PM",
      "commitNameOld": "29a370872435ee558fbeb9f64bf70da87f8cd27a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateStatus() {\n    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n    int mapsDone \u003d totalMaps - remainingMaps;\n    long secsSinceStart \u003d (System.currentTimeMillis() - startTime) / 1000 + 1;\n\n    float transferRate \u003d mbs / secsSinceStart;\n    progress.set((float) mapsDone / totalMaps);\n    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n    status.setStateString(statusString);\n\n    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n        + mbpsFormat.format(transferRate) + \" MB/s)\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
        "oldMethodName": "updateStatus",
        "newMethodName": "updateStatus"
      }
    },
    "27d1c74a0c7831f8a83922ea2e87d1762ccf8021": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3927. Shuffle hang when set map.failures.percent (Bhallamudi Venkata Siva Kamesh via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1348846 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/12 6:54 AM",
      "commitName": "27d1c74a0c7831f8a83922ea2e87d1762ccf8021",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,13 @@\n+  private void updateStatus() {\n+    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n+    int mapsDone \u003d totalMaps - remainingMaps;\n+    long secsSinceStart \u003d (System.currentTimeMillis() - startTime) / 1000 + 1;\n+\n+    float transferRate \u003d mbs / secsSinceStart;\n+    progress.set((float) mapsDone / totalMaps);\n+    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n+    status.setStateString(statusString);\n+\n+    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n+        + mbpsFormat.format(transferRate) + \" MB/s)\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateStatus() {\n    float mbs \u003d (float) totalBytesShuffledTillNow / (1024 * 1024);\n    int mapsDone \u003d totalMaps - remainingMaps;\n    long secsSinceStart \u003d (System.currentTimeMillis() - startTime) / 1000 + 1;\n\n    float transferRate \u003d mbs / secsSinceStart;\n    progress.set((float) mapsDone / totalMaps);\n    String statusString \u003d mapsDone + \" / \" + totalMaps + \" copied.\";\n    status.setStateString(statusString);\n\n    progress.setStatus(\"copy(\" + mapsDone + \" of \" + totalMaps + \" at \"\n        + mbpsFormat.format(transferRate) + \" MB/s)\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleScheduler.java"
    }
  }
}