{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "unsetErasureCodingPolicy",
  "functionId": "unsetErasureCodingPolicy___srcArg-String(modifiers-final)__logRetryCache-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 8146,
  "functionEndLine": 8167,
  "numCommitsSeen": 873,
  "timeTaken": 15017,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc",
    "abc8fde4caea0e197568ee28392c46f1ce0d42e1",
    "0b67436068899497e99c86f37fd4887ca188fae2",
    "9b90e52f1ec22c18cd535af2a569defcef65b093",
    "3085a604300ed76d06a0011bd5555e419897b6cd",
    "e69231658dc4a79da936e6856017b5c4f6124ecb"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc": "Ybodychange",
    "abc8fde4caea0e197568ee28392c46f1ce0d42e1": "Ybodychange",
    "0b67436068899497e99c86f37fd4887ca188fae2": "Ybodychange",
    "9b90e52f1ec22c18cd535af2a569defcef65b093": "Ybodychange",
    "3085a604300ed76d06a0011bd5555e419897b6cd": "Ybodychange",
    "e69231658dc4a79da936e6856017b5c4f6124ecb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n     checkOperation(OperationCategory.WRITE);\n     checkErasureCodingSupported(operationName);\n     FileStatus resultingStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n           srcArg, pc, logRetryCache);\n     } finally {\n-      writeUnlock(operationName);\n+      writeUnlock(operationName,\n+          getLockReportInfoSupplier(srcArg, null, resultingStat));\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    FileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n    } finally {\n      writeUnlock(operationName,\n          getLockReportInfoSupplier(srcArg, null, resultingStat));\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n     checkOperation(OperationCategory.WRITE);\n     checkErasureCodingSupported(operationName);\n     FileStatus resultingStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n           srcArg, pc, logRetryCache);\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    FileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14810. Review FSNameSystem editlog sync. Contributed by Xiaoqiao He.\n",
      "commitDate": "17/10/19 9:26 AM",
      "commitName": "5527d79adb9b1e2f2779c283f81d6a3d5447babc",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "06/09/19 5:42 AM",
      "commitNameOld": "d98c54816d21d59c4d877ae4b1917b22268ffcef",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 41.16,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,20 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n     checkOperation(OperationCategory.WRITE);\n     checkErasureCodingSupported(operationName);\n     FileStatus resultingStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n           srcArg, pc, logRetryCache);\n-      success \u003d true;\n     } finally {\n       writeUnlock(operationName);\n-      if (success) {\n-        getEditLog().logSync();\n-      }\n-      logAuditEvent(success, operationName, srcArg, null, resultingStat);\n     }\n+    getEditLog().logSync();\n+    logAuditEvent(true, operationName, srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    FileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "abc8fde4caea0e197568ee28392c46f1ce0d42e1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13596. NN restart fails after RollingUpgrade from 2.x to 3.x. Contributed by Fei Hui.\n",
      "commitDate": "22/08/19 10:44 PM",
      "commitName": "abc8fde4caea0e197568ee28392c46f1ce0d42e1",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "13/08/19 4:50 PM",
      "commitNameOld": "633b7c1cfecde6166899449efae6326ee03cd8c4",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 9.25,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n     checkOperation(OperationCategory.WRITE);\n+    checkErasureCodingSupported(operationName);\n     FileStatus resultingStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n           srcArg, pc, logRetryCache);\n       success \u003d true;\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, srcArg, null, resultingStat);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    FileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n      success \u003d true;\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, srcArg, null, resultingStat);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "0b67436068899497e99c86f37fd4887ca188fae2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12306. Add audit log for some erasure coding operations. Contributed by Huafeng Wang\n",
      "commitDate": "07/08/17 4:30 AM",
      "commitName": "0b67436068899497e99c86f37fd4887ca188fae2",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "03/08/17 3:44 PM",
      "commitNameOld": "f4c6b00a9f48ae7667db4035b641769efc3bb7cf",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.53,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,23 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n     checkOperation(OperationCategory.WRITE);\n     FileStatus resultingStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n           srcArg, pc, logRetryCache);\n       success \u003d true;\n-    } catch (AccessControlException ace) {\n-      logAuditEvent(success, operationName, srcArg, null,\n-          resultingStat);\n-      throw ace;\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n+      logAuditEvent(success, operationName, srcArg, null, resultingStat);\n     }\n-    logAuditEvent(success, operationName, srcArg, null,\n-        resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n      success \u003d true;\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, srcArg, null, resultingStat);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9b90e52f1ec22c18cd535af2a569defcef65b093": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
      "commitDate": "16/05/17 9:28 AM",
      "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/05/17 11:39 AM",
      "commitNameOld": "c2a52ef9c29459ff9ef3e23b29e14912bfdb1405",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.91,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n     checkOperation(OperationCategory.WRITE);\n-    HdfsFileStatus resultingStat \u003d null;\n+    FileStatus resultingStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n           srcArg, pc, logRetryCache);\n       success \u003d true;\n     } catch (AccessControlException ace) {\n       logAuditEvent(success, operationName, srcArg, null,\n           resultingStat);\n       throw ace;\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n     }\n     logAuditEvent(success, operationName, srcArg, null,\n         resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, operationName, srcArg, null,\n          resultingStat);\n      throw ace;\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n    }\n    logAuditEvent(success, operationName, srcArg, null,\n        resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "3085a604300ed76d06a0011bd5555e419897b6cd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8112. Relax permission checking for EC related operations.\n",
      "commitDate": "03/03/17 1:00 PM",
      "commitName": "3085a604300ed76d06a0011bd5555e419897b6cd",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "01/03/17 2:36 AM",
      "commitNameOld": "82ef9accafe7318278efb169678e17065e082c8e",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 2.43,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   void unsetErasureCodingPolicy(final String srcArg,\n       final boolean logRetryCache) throws IOException,\n       UnresolvedLinkException, SafeModeException, AccessControlException {\n     final String operationName \u003d \"unsetErasureCodingPolicy\";\n-    checkSuperuserPrivilege();\n     checkOperation(OperationCategory.WRITE);\n     HdfsFileStatus resultingStat \u003d null;\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n       resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n-          srcArg, logRetryCache);\n+          srcArg, pc, logRetryCache);\n       success \u003d true;\n     } catch (AccessControlException ace) {\n       logAuditEvent(success, operationName, srcArg, null,\n           resultingStat);\n       throw ace;\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n     }\n     logAuditEvent(success, operationName, srcArg, null,\n         resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkOperation(OperationCategory.WRITE);\n    HdfsFileStatus resultingStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, pc, logRetryCache);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, operationName, srcArg, null,\n          resultingStat);\n      throw ace;\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n    }\n    logAuditEvent(success, operationName, srcArg, null,\n        resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "e69231658dc4a79da936e6856017b5c4f6124ecb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11072. Add ability to unset and change directory EC policy. Contributed by Sammi Chen.\n",
      "commitDate": "10/01/17 11:32 AM",
      "commitName": "e69231658dc4a79da936e6856017b5c4f6124ecb",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,28 @@\n+  void unsetErasureCodingPolicy(final String srcArg,\n+      final boolean logRetryCache) throws IOException,\n+      UnresolvedLinkException, SafeModeException, AccessControlException {\n+    final String operationName \u003d \"unsetErasureCodingPolicy\";\n+    checkSuperuserPrivilege();\n+    checkOperation(OperationCategory.WRITE);\n+    HdfsFileStatus resultingStat \u003d null;\n+    boolean success \u003d false;\n+    writeLock();\n+    try {\n+      checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n+      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n+          srcArg, logRetryCache);\n+      success \u003d true;\n+    } catch (AccessControlException ace) {\n+      logAuditEvent(success, operationName, srcArg, null,\n+          resultingStat);\n+      throw ace;\n+    } finally {\n+      writeUnlock(operationName);\n+      if (success) {\n+        getEditLog().logSync();\n+      }\n+    }\n+    logAuditEvent(success, operationName, srcArg, null,\n+        resultingStat);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void unsetErasureCodingPolicy(final String srcArg,\n      final boolean logRetryCache) throws IOException,\n      UnresolvedLinkException, SafeModeException, AccessControlException {\n    final String operationName \u003d \"unsetErasureCodingPolicy\";\n    checkSuperuserPrivilege();\n    checkOperation(OperationCategory.WRITE);\n    HdfsFileStatus resultingStat \u003d null;\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot unset erasure coding policy on \" + srcArg);\n      resultingStat \u003d FSDirErasureCodingOp.unsetErasureCodingPolicy(this,\n          srcArg, logRetryCache);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, operationName, srcArg, null,\n          resultingStat);\n      throw ace;\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n    }\n    logAuditEvent(success, operationName, srcArg, null,\n        resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}