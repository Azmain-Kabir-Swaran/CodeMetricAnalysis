{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StoragePolicySummary.java",
  "functionName": "getStorageAllocationAsString",
  "functionId": "getStorageAllocationAsString",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySummary.java",
  "functionStartLine": 210,
  "functionEndLine": 222,
  "numCommitsSeen": 2,
  "timeTaken": 858,
  "changeHistory": [
    "d140d76a43c88e326b9c2818578f22bd3563b969"
  ],
  "changeHistoryShort": {
    "d140d76a43c88e326b9c2818578f22bd3563b969": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d140d76a43c88e326b9c2818578f22bd3563b969": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7467. Provide storage tier information for a directory via fsck. (Benoy Antony)\n",
      "commitDate": "25/02/15 4:19 PM",
      "commitName": "d140d76a43c88e326b9c2818578f22bd3563b969",
      "commitAuthor": "Benoy Antony",
      "diff": "@@ -0,0 +1,13 @@\n+    private String getStorageAllocationAsString() {\n+      Map\u003cStorageType, Integer\u003e storageType_countmap \u003d \n+          new EnumMap\u003c\u003e(StorageType.class);\n+      for (StorageType storageType: storageTypes) {\n+        Integer count \u003d storageType_countmap.get(storageType);\n+        if (count \u003d\u003d null) {\n+          storageType_countmap.put(storageType, 1);\n+        } else {\n+          storageType_countmap.put(storageType, count.intValue()+1);\n+        }\n+      }\n+      return (getStorageAllocationAsString(storageType_countmap));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private String getStorageAllocationAsString() {\n      Map\u003cStorageType, Integer\u003e storageType_countmap \u003d \n          new EnumMap\u003c\u003e(StorageType.class);\n      for (StorageType storageType: storageTypes) {\n        Integer count \u003d storageType_countmap.get(storageType);\n        if (count \u003d\u003d null) {\n          storageType_countmap.put(storageType, 1);\n        } else {\n          storageType_countmap.put(storageType, count.intValue()+1);\n        }\n      }\n      return (getStorageAllocationAsString(storageType_countmap));\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/StoragePolicySummary.java"
    }
  }
}