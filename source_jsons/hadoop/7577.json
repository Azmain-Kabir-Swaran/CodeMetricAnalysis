{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNode.java",
  "functionName": "initializeGenericKeys",
  "functionId": "initializeGenericKeys___conf-Configuration__nameserviceId-String__namenodeId-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
  "functionStartLine": 1778,
  "functionEndLine": 1802,
  "numCommitsSeen": 210,
  "timeTaken": 4973,
  "changeHistory": [
    "3b22fcd377eecedacceb6e37368463b48e0133c8",
    "ed72daa5df97669906234e8ac9a406d78136b206",
    "fa6d5196573b9714b35effc66689e953ee74e1a5",
    "a8e4bb81b2e7c5c79273ef3ceb1af86ae8e4cd68",
    "260dfa367e3c161edcc9d2b2217661710199c95e",
    "470b1197be996106fa166da33fb1d56276b658b4",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1"
  ],
  "changeHistoryShort": {
    "3b22fcd377eecedacceb6e37368463b48e0133c8": "Ybodychange",
    "ed72daa5df97669906234e8ac9a406d78136b206": "Ybodychange",
    "fa6d5196573b9714b35effc66689e953ee74e1a5": "Ybodychange",
    "a8e4bb81b2e7c5c79273ef3ceb1af86ae8e4cd68": "Ybodychange",
    "260dfa367e3c161edcc9d2b2217661710199c95e": "Ybodychange",
    "470b1197be996106fa166da33fb1d56276b658b4": "Ybodychange",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": "Ybodychange"
  },
  "changeHistoryDetails": {
    "3b22fcd377eecedacceb6e37368463b48e0133c8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14256. Review Logging of NameNode Class. Contributed by David Mollitor.\n",
      "commitDate": "29/08/19 2:21 PM",
      "commitName": "3b22fcd377eecedacceb6e37368463b48e0133c8",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "16/08/19 2:53 PM",
      "commitNameOld": "a38b9e137e67571d2df83a7a9505b66cffefa7c8",
      "commitAuthorOld": "hunshenshi",
      "daysBetweenCommits": 12.98,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,25 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n     if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n         (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n       if (nameserviceId !\u003d null) {\n         conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n       }\n       if (namenodeId !\u003d null) {\n         conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n       }\n       \n       DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n           NAMENODE_SPECIFIC_KEYS);\n       DFSUtil.setGenericConf(conf, nameserviceId, null,\n           NAMESERVICE_SPECIFIC_KEYS);\n     }\n     \n     // If the RPC address is set use it to (re-)configure the default FS\n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n-      }\n+      LOG.debug(\"Setting {} to {}\", FS_DEFAULT_NAME_KEY, defaultUri);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n      if (nameserviceId !\u003d null) {\n        conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n      }\n      if (namenodeId !\u003d null) {\n        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n      }\n      \n      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n          NAMENODE_SPECIFIC_KEYS);\n      DFSUtil.setGenericConf(conf, nameserviceId, null,\n          NAMESERVICE_SPECIFIC_KEYS);\n    }\n    \n    // If the RPC address is set use it to (re-)configure the default FS\n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n      LOG.debug(\"Setting {} to {}\", FS_DEFAULT_NAME_KEY, defaultUri);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "ed72daa5df97669906234e8ac9a406d78136b206": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7978. Add LOG.isDebugEnabled() guard for some LOG.debug(..). Contributed by Walter Su.\n",
      "commitDate": "01/04/15 12:54 PM",
      "commitName": "ed72daa5df97669906234e8ac9a406d78136b206",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "12/02/15 5:40 PM",
      "commitNameOld": "46b6d23e8fbed4c2ba537dd752116c173805bca7",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 47.76,
      "commitsBetweenForRepo": 418,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n     if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n         (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n       if (nameserviceId !\u003d null) {\n         conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n       }\n       if (namenodeId !\u003d null) {\n         conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n       }\n       \n       DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n           NAMENODE_SPECIFIC_KEYS);\n       DFSUtil.setGenericConf(conf, nameserviceId, null,\n           NAMESERVICE_SPECIFIC_KEYS);\n     }\n     \n     // If the RPC address is set use it to (re-)configure the default FS\n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n-      LOG.debug(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n      if (nameserviceId !\u003d null) {\n        conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n      }\n      if (namenodeId !\u003d null) {\n        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n      }\n      \n      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n          NAMENODE_SPECIFIC_KEYS);\n      DFSUtil.setGenericConf(conf, nameserviceId, null,\n          NAMESERVICE_SPECIFIC_KEYS);\n    }\n    \n    // If the RPC address is set use it to (re-)configure the default FS\n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "fa6d5196573b9714b35effc66689e953ee74e1a5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3964. Make NN log of fs.defaultFS debug rather than info. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1388335 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/09/12 11:17 PM",
      "commitName": "fa6d5196573b9714b35effc66689e953ee74e1a5",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "18/09/12 10:42 AM",
      "commitNameOld": "a8e4bb81b2e7c5c79273ef3ceb1af86ae8e4cd68",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 2.52,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n     if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n         (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n       if (nameserviceId !\u003d null) {\n         conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n       }\n       if (namenodeId !\u003d null) {\n         conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n       }\n       \n       DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n           NAMENODE_SPECIFIC_KEYS);\n       DFSUtil.setGenericConf(conf, nameserviceId, null,\n           NAMESERVICE_SPECIFIC_KEYS);\n     }\n     \n     // If the RPC address is set use it to (re-)configure the default FS\n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n-      LOG.info(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n+      LOG.debug(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n      if (nameserviceId !\u003d null) {\n        conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n      }\n      if (namenodeId !\u003d null) {\n        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n      }\n      \n      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n          NAMENODE_SPECIFIC_KEYS);\n      DFSUtil.setGenericConf(conf, nameserviceId, null,\n          NAMESERVICE_SPECIFIC_KEYS);\n    }\n    \n    // If the RPC address is set use it to (re-)configure the default FS\n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n      LOG.debug(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "a8e4bb81b2e7c5c79273ef3ceb1af86ae8e4cd68": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3939. NN RPC address cleanup. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1387278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/09/12 10:42 AM",
      "commitName": "a8e4bb81b2e7c5c79273ef3ceb1af86ae8e4cd68",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "01/09/12 12:22 PM",
      "commitNameOld": "54e612bfb9f877e58f7f153c43cb4147876826d3",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 16.93,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n     if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n         (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n       if (nameserviceId !\u003d null) {\n         conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n       }\n       if (namenodeId !\u003d null) {\n         conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n       }\n       \n       DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n           NAMENODE_SPECIFIC_KEYS);\n       DFSUtil.setGenericConf(conf, nameserviceId, null,\n           NAMESERVICE_SPECIFIC_KEYS);\n     }\n     \n+    // If the RPC address is set use it to (re-)configure the default FS\n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n+      LOG.info(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n      if (nameserviceId !\u003d null) {\n        conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n      }\n      if (namenodeId !\u003d null) {\n        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n      }\n      \n      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n          NAMENODE_SPECIFIC_KEYS);\n      DFSUtil.setGenericConf(conf, nameserviceId, null,\n          NAMESERVICE_SPECIFIC_KEYS);\n    }\n    \n    // If the RPC address is set use it to (re-)configure the default FS\n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n      LOG.info(\"Setting \" + FS_DEFAULT_NAME_KEY + \" to \" + defaultUri.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "260dfa367e3c161edcc9d2b2217661710199c95e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2885. Remove \"federation\" from the nameservice config options. Contributed by Tsz Wo (Nicholas), SZE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1340841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/05/12 2:13 PM",
      "commitName": "260dfa367e3c161edcc9d2b2217661710199c95e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "10/05/12 10:57 PM",
      "commitNameOld": "5dbd09ee768d2fcc9e925ceec72c3d6258defd04",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 9.64,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n     if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n         (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n       if (nameserviceId !\u003d null) {\n-        conf.set(DFS_FEDERATION_NAMESERVICE_ID, nameserviceId);\n+        conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n       }\n       if (namenodeId !\u003d null) {\n         conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n       }\n       \n       DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n           NAMESERVICE_SPECIFIC_KEYS);\n     }\n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n      if (nameserviceId !\u003d null) {\n        conf.set(DFS_NAMESERVICE_ID, nameserviceId);\n      }\n      if (namenodeId !\u003d null) {\n        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n      }\n      \n      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n          NAMESERVICE_SPECIFIC_KEYS);\n    }\n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "470b1197be996106fa166da33fb1d56276b658b4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3351. NameNode#initializeGenericKeys should always set fs.defaultFS regardless of whether HA or Federation is enabled. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1333299 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/12 8:00 PM",
      "commitName": "470b1197be996106fa166da33fb1d56276b658b4",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "30/04/12 10:47 PM",
      "commitNameOld": "086fa860c01cdbee3369c20a34eacd32c1b4e8d1",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 1.88,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n-    if ((nameserviceId \u003d\u003d null || nameserviceId.isEmpty()) \u0026\u0026 \n-        (namenodeId \u003d\u003d null || namenodeId.isEmpty())) {\n-      return;\n+    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n+        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n+      if (nameserviceId !\u003d null) {\n+        conf.set(DFS_FEDERATION_NAMESERVICE_ID, nameserviceId);\n+      }\n+      if (namenodeId !\u003d null) {\n+        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n+      }\n+      \n+      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n+          NAMESERVICE_SPECIFIC_KEYS);\n     }\n-    \n-    if (nameserviceId !\u003d null) {\n-      conf.set(DFS_FEDERATION_NAMESERVICE_ID, nameserviceId);\n-    }\n-    if (namenodeId !\u003d null) {\n-      conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n-    }\n-    \n-    DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n-        NAMESERVICE_SPECIFIC_KEYS);\n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId !\u003d null \u0026\u0026 !nameserviceId.isEmpty()) || \n        (namenodeId !\u003d null \u0026\u0026 !namenodeId.isEmpty())) {\n      if (nameserviceId !\u003d null) {\n        conf.set(DFS_FEDERATION_NAMESERVICE_ID, nameserviceId);\n      }\n      if (namenodeId !\u003d null) {\n        conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n      }\n      \n      DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n          NAMESERVICE_SPECIFIC_KEYS);\n    }\n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8247. Add a config to enable auto-HA, which disables manual FailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1324566 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 10:40 PM",
      "commitName": "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "05/04/12 9:56 PM",
      "commitNameOld": "d483b6f3fc1128cd98f00b1801f22deaaae7eec0",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 5.03,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   public static void initializeGenericKeys(Configuration conf,\n       String nameserviceId, String namenodeId) {\n     if ((nameserviceId \u003d\u003d null || nameserviceId.isEmpty()) \u0026\u0026 \n         (namenodeId \u003d\u003d null || namenodeId.isEmpty())) {\n       return;\n     }\n     \n     if (nameserviceId !\u003d null) {\n       conf.set(DFS_FEDERATION_NAMESERVICE_ID, nameserviceId);\n     }\n     if (namenodeId !\u003d null) {\n       conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n     }\n     \n     DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n+        NAMENODE_SPECIFIC_KEYS);\n+    DFSUtil.setGenericConf(conf, nameserviceId, null,\n         NAMESERVICE_SPECIFIC_KEYS);\n+    \n     if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n       URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n           + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n       conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void initializeGenericKeys(Configuration conf,\n      String nameserviceId, String namenodeId) {\n    if ((nameserviceId \u003d\u003d null || nameserviceId.isEmpty()) \u0026\u0026 \n        (namenodeId \u003d\u003d null || namenodeId.isEmpty())) {\n      return;\n    }\n    \n    if (nameserviceId !\u003d null) {\n      conf.set(DFS_FEDERATION_NAMESERVICE_ID, nameserviceId);\n    }\n    if (namenodeId !\u003d null) {\n      conf.set(DFS_HA_NAMENODE_ID_KEY, namenodeId);\n    }\n    \n    DFSUtil.setGenericConf(conf, nameserviceId, namenodeId,\n        NAMENODE_SPECIFIC_KEYS);\n    DFSUtil.setGenericConf(conf, nameserviceId, null,\n        NAMESERVICE_SPECIFIC_KEYS);\n    \n    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) !\u003d null) {\n      URI defaultUri \u003d URI.create(HdfsConstants.HDFS_URI_SCHEME + \"://\"\n          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));\n      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    }
  }
}