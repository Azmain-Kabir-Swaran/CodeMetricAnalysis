{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenAuthenticationHandler.java",
  "functionName": "initJsonFactory",
  "functionId": "initJsonFactory___config-Properties",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java",
  "functionStartLine": 167,
  "functionEndLine": 188,
  "numCommitsSeen": 25,
  "timeTaken": 776,
  "changeHistory": [
    "822ae88f7da638e15a25747f6965caee8198aca6"
  ],
  "changeHistoryShort": {
    "822ae88f7da638e15a25747f6965caee8198aca6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "822ae88f7da638e15a25747f6965caee8198aca6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13346. DelegationTokenAuthenticationHandler writes via closed writer. Contributed by Gregory Chanan and Hrishikesh Gadre.\n",
      "commitDate": "09/11/16 9:33 AM",
      "commitName": "822ae88f7da638e15a25747f6965caee8198aca6",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,22 @@\n+  public void initJsonFactory(Properties config) {\n+    boolean hasFeature \u003d false;\n+    JsonFactory tmpJsonFactory \u003d new JsonFactory();\n+\n+    for (Map.Entry entry : config.entrySet()) {\n+      String key \u003d (String)entry.getKey();\n+      if (key.startsWith(JSON_MAPPER_PREFIX)) {\n+        JsonGenerator.Feature feature \u003d\n+            JsonGenerator.Feature.valueOf(key.substring(JSON_MAPPER_PREFIX\n+                .length()));\n+        if (feature !\u003d null) {\n+          hasFeature \u003d true;\n+          boolean enabled \u003d Boolean.parseBoolean((String)entry.getValue());\n+          tmpJsonFactory.configure(feature, enabled);\n+        }\n+      }\n+    }\n+\n+    if (hasFeature) {\n+      jsonFactory \u003d tmpJsonFactory;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initJsonFactory(Properties config) {\n    boolean hasFeature \u003d false;\n    JsonFactory tmpJsonFactory \u003d new JsonFactory();\n\n    for (Map.Entry entry : config.entrySet()) {\n      String key \u003d (String)entry.getKey();\n      if (key.startsWith(JSON_MAPPER_PREFIX)) {\n        JsonGenerator.Feature feature \u003d\n            JsonGenerator.Feature.valueOf(key.substring(JSON_MAPPER_PREFIX\n                .length()));\n        if (feature !\u003d null) {\n          hasFeature \u003d true;\n          boolean enabled \u003d Boolean.parseBoolean((String)entry.getValue());\n          tmpJsonFactory.configure(feature, enabled);\n        }\n      }\n    }\n\n    if (hasFeature) {\n      jsonFactory \u003d tmpJsonFactory;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java"
    }
  }
}