{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceCalculatorUtils.java",
  "functionName": "computeAvailableContainers",
  "functionId": "computeAvailableContainers___available-Resource__required-Resource__resourceTypes-EnumSet__SchedulerResourceTypes__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/ResourceCalculatorUtils.java",
  "functionStartLine": 34,
  "functionEndLine": 44,
  "numCommitsSeen": 3,
  "timeTaken": 1288,
  "changeHistory": [
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "1773aac780585871072960a5863af461e112a030",
    "376233cdd4a4ddbde5a92a0627f78338cb4c38b7"
  ],
  "changeHistoryShort": {
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "1773aac780585871072960a5863af461e112a030": "Ybodychange",
    "376233cdd4a4ddbde5a92a0627f78338cb4c38b7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "09/05/15 2:43 PM",
      "commitNameOld": "1773aac780585871072960a5863af461e112a030",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 385.76,
      "commitsBetweenForRepo": 2755,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public static int computeAvailableContainers(Resource available,\n       Resource required, EnumSet\u003cSchedulerResourceTypes\u003e resourceTypes) {\n     if (resourceTypes.contains(SchedulerResourceTypes.CPU)) {\n       return Math.min(\n-        calculateRatioOrMaxValue(available.getMemory(), required.getMemory()),\n+        calculateRatioOrMaxValue(available.getMemorySize(), required.getMemorySize()),\n         calculateRatioOrMaxValue(available.getVirtualCores(), required\n             .getVirtualCores()));\n     }\n     return calculateRatioOrMaxValue(\n-      available.getMemory(), required.getMemory());\n+      available.getMemorySize(), required.getMemorySize());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int computeAvailableContainers(Resource available,\n      Resource required, EnumSet\u003cSchedulerResourceTypes\u003e resourceTypes) {\n    if (resourceTypes.contains(SchedulerResourceTypes.CPU)) {\n      return Math.min(\n        calculateRatioOrMaxValue(available.getMemorySize(), required.getMemorySize()),\n        calculateRatioOrMaxValue(available.getVirtualCores(), required\n            .getVirtualCores()));\n    }\n    return calculateRatioOrMaxValue(\n      available.getMemorySize(), required.getMemorySize());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/ResourceCalculatorUtils.java",
      "extendedDetails": {}
    },
    "1773aac780585871072960a5863af461e112a030": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6353. Divide by zero error in MR AM when calculating available containers. (Anubhav Dhoot via kasha)\n",
      "commitDate": "09/05/15 2:43 PM",
      "commitName": "1773aac780585871072960a5863af461e112a030",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/09/14 9:28 AM",
      "commitNameOld": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 229.22,
      "commitsBetweenForRepo": 1991,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n   public static int computeAvailableContainers(Resource available,\n       Resource required, EnumSet\u003cSchedulerResourceTypes\u003e resourceTypes) {\n     if (resourceTypes.contains(SchedulerResourceTypes.CPU)) {\n-      return Math.min(available.getMemory() / required.getMemory(),\n-        available.getVirtualCores() / required.getVirtualCores());\n+      return Math.min(\n+        calculateRatioOrMaxValue(available.getMemory(), required.getMemory()),\n+        calculateRatioOrMaxValue(available.getVirtualCores(), required\n+            .getVirtualCores()));\n     }\n-    return available.getMemory() / required.getMemory();\n+    return calculateRatioOrMaxValue(\n+      available.getMemory(), required.getMemory());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int computeAvailableContainers(Resource available,\n      Resource required, EnumSet\u003cSchedulerResourceTypes\u003e resourceTypes) {\n    if (resourceTypes.contains(SchedulerResourceTypes.CPU)) {\n      return Math.min(\n        calculateRatioOrMaxValue(available.getMemory(), required.getMemory()),\n        calculateRatioOrMaxValue(available.getVirtualCores(), required\n            .getVirtualCores()));\n    }\n    return calculateRatioOrMaxValue(\n      available.getMemory(), required.getMemory());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/ResourceCalculatorUtils.java",
      "extendedDetails": {}
    },
    "376233cdd4a4ddbde5a92a0627f78338cb4c38b7": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.\n",
      "commitDate": "22/09/14 9:28 AM",
      "commitName": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,8 @@\n+  public static int computeAvailableContainers(Resource available,\n+      Resource required, EnumSet\u003cSchedulerResourceTypes\u003e resourceTypes) {\n+    if (resourceTypes.contains(SchedulerResourceTypes.CPU)) {\n+      return Math.min(available.getMemory() / required.getMemory(),\n+        available.getVirtualCores() / required.getVirtualCores());\n+    }\n+    return available.getMemory() / required.getMemory();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int computeAvailableContainers(Resource available,\n      Resource required, EnumSet\u003cSchedulerResourceTypes\u003e resourceTypes) {\n    if (resourceTypes.contains(SchedulerResourceTypes.CPU)) {\n      return Math.min(available.getMemory() / required.getMemory(),\n        available.getVirtualCores() / required.getVirtualCores());\n    }\n    return available.getMemory() / required.getMemory();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/ResourceCalculatorUtils.java"
    }
  }
}