{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NvidiaGPUPluginForRuntimeV2.java",
  "functionName": "generateAllDeviceCombination",
  "functionId": "generateAllDeviceCombination___cTable-Map__Integer,List__Map.Entry__Set__Device__,Integer________allDevices-Device[]__n-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java",
  "functionStartLine": 310,
  "functionEndLine": 325,
  "numCommitsSeen": 3,
  "timeTaken": 793,
  "changeHistory": [
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17"
  ],
  "changeHistoryShort": {
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8821. [YARN-8851] GPU hierarchy/topology scheduling support based on pluggable device framework. Contributed by Zhankun Tang.\n",
      "commitDate": "24/02/19 1:07 AM",
      "commitName": "dddcfa4d9f07aa96692a12afd3003ae89ac40b17",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,16 @@\n+  private void generateAllDeviceCombination(\n+      Map\u003cInteger, List\u003cMap.Entry\u003cSet\u003cDevice\u003e, Integer\u003e\u003e\u003e cTable,\n+      Device[] allDevices, int n) {\n+    // allocated devices count range from 1 to n-1\n+    for (int i \u003d 2; i \u003c n; i++) {\n+      Map\u003cSet\u003cDevice\u003e, Integer\u003e combinationToCost \u003d\n+          new HashMap\u003c\u003e();\n+      buildCombination(combinationToCost, allDevices, n, i);\n+      // sort the map entry by cost ascending order\n+      List\u003cMap.Entry\u003cSet\u003cDevice\u003e, Integer\u003e\u003e listSortedByCost \u003d\n+          new LinkedList\u003c\u003e(combinationToCost.entrySet());\n+      Collections.sort(listSortedByCost,\n+          (o1, o2) -\u003e (o1.getValue()).compareTo(o2.getValue()));\n+      cTable.put(i, listSortedByCost);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void generateAllDeviceCombination(\n      Map\u003cInteger, List\u003cMap.Entry\u003cSet\u003cDevice\u003e, Integer\u003e\u003e\u003e cTable,\n      Device[] allDevices, int n) {\n    // allocated devices count range from 1 to n-1\n    for (int i \u003d 2; i \u003c n; i++) {\n      Map\u003cSet\u003cDevice\u003e, Integer\u003e combinationToCost \u003d\n          new HashMap\u003c\u003e();\n      buildCombination(combinationToCost, allDevices, n, i);\n      // sort the map entry by cost ascending order\n      List\u003cMap.Entry\u003cSet\u003cDevice\u003e, Integer\u003e\u003e listSortedByCost \u003d\n          new LinkedList\u003c\u003e(combinationToCost.entrySet());\n      Collections.sort(listSortedByCost,\n          (o1, o2) -\u003e (o1.getValue()).compareTo(o2.getValue()));\n      cTable.put(i, listSortedByCost);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java"
    }
  }
}