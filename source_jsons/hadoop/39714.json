{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSQueueStore.java",
  "functionName": "add",
  "functionId": "add___queue-CSQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueStore.java",
  "functionStartLine": 126,
  "functionEndLine": 152,
  "numCommitsSeen": 1,
  "timeTaken": 2600,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,27 @@\n+  public void add(CSQueue queue) {\n+    String fullName \u003d queue.getQueuePath();\n+    String shortName \u003d queue.getQueueShortName();\n+\n+    try {\n+      modificationLock.writeLock().lock();\n+\n+      fullNameQueues.put(fullName, queue);\n+      getMap.put(fullName, queue);\n+\n+      //we only update short queue name ambiguity for non root queues\n+      if (!shortName.equals(CapacitySchedulerConfiguration.ROOT)) {\n+        //getting or creating the ambiguity set for the current queue\n+        Set\u003cString\u003e fullNamesSet \u003d\n+            this.shortNameToLongNames.getOrDefault(shortName, new HashSet\u003c\u003e());\n+\n+        //adding the full name to the queue\n+        fullNamesSet.add(fullName);\n+        this.shortNameToLongNames.put(shortName, fullNamesSet);\n+      }\n+\n+      //updating the getMap references for the queue\n+      updateGetMapForShortName(shortName);\n+    } finally {\n+      modificationLock.writeLock().unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(CSQueue queue) {\n    String fullName \u003d queue.getQueuePath();\n    String shortName \u003d queue.getQueueShortName();\n\n    try {\n      modificationLock.writeLock().lock();\n\n      fullNameQueues.put(fullName, queue);\n      getMap.put(fullName, queue);\n\n      //we only update short queue name ambiguity for non root queues\n      if (!shortName.equals(CapacitySchedulerConfiguration.ROOT)) {\n        //getting or creating the ambiguity set for the current queue\n        Set\u003cString\u003e fullNamesSet \u003d\n            this.shortNameToLongNames.getOrDefault(shortName, new HashSet\u003c\u003e());\n\n        //adding the full name to the queue\n        fullNamesSet.add(fullName);\n        this.shortNameToLongNames.put(shortName, fullNamesSet);\n      }\n\n      //updating the getMap references for the queue\n      updateGetMapForShortName(shortName);\n    } finally {\n      modificationLock.writeLock().unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueStore.java"
    }
  }
}