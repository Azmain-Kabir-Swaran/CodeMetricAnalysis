{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExternalStoragePolicySatisfier.java",
  "functionName": "getNameNodeConnector",
  "functionId": "getNameNodeConnector___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
  "functionStartLine": 99,
  "functionEndLine": 116,
  "numCommitsSeen": 9,
  "timeTaken": 4288,
  "changeHistory": [
    "d3de4fb2a084cbadab8ef91f11aa7732d3b0f308",
    "5845c36c16c423107183287cce3be9357dad7564",
    "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc"
  ],
  "changeHistoryShort": {
    "d3de4fb2a084cbadab8ef91f11aa7732d3b0f308": "Ybodychange",
    "5845c36c16c423107183287cce3be9357dad7564": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d3de4fb2a084cbadab8ef91f11aa7732d3b0f308": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13077. [SPS]: Fix review comments of external storage policy satisfier. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "d3de4fb2a084cbadab8ef91f11aa7732d3b0f308",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "5845c36c16c423107183287cce3be9357dad7564",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private static NameNodeConnector getNameNodeConnector(Configuration conf)\n       throws IOException, InterruptedException {\n     final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n     final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n     while (true) {\n       try {\n         final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n             .newNameNodeConnectors(namenodes,\n-                StoragePolicySatisfier.class.getSimpleName(),\n+                ExternalStoragePolicySatisfier.class.getSimpleName(),\n                 externalSPSPathId, conf,\n                 NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n         return nncs.get(0);\n       } catch (IOException e) {\n         LOG.warn(\"Failed to connect with namenode\", e);\n         Thread.sleep(3000); // retry the connection after few secs\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n      throws IOException, InterruptedException {\n    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n    while (true) {\n      try {\n        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n            .newNameNodeConnectors(namenodes,\n                ExternalStoragePolicySatisfier.class.getSimpleName(),\n                externalSPSPathId, conf,\n                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n        return nncs.get(0);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to connect with namenode\", e);\n        Thread.sleep(3000); // retry the connection after few secs\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "5845c36c16c423107183287cce3be9357dad7564": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-13050: [SPS]: Create start/stop script to start external SPS process. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "5845c36c16c423107183287cce3be9357dad7564",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-13050: [SPS]: Create start/stop script to start external SPS process. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "5845c36c16c423107183287cce3be9357dad7564",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,18 @@\n-  public static NameNodeConnector getNameNodeConnector(Configuration conf)\n-      throws IOException {\n+  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n+      throws IOException, InterruptedException {\n     final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n-    List\u003cNameNodeConnector\u003e nncs \u003d Collections.emptyList();\n-    NameNodeConnector.checkOtherInstanceRunning(false);\n-    nncs \u003d NameNodeConnector.newNameNodeConnectors(namenodes,\n-        ExternalSPSContext.class.getSimpleName(),\n-        HdfsServerConstants.MOVER_ID_PATH, conf,\n-        NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n-    return nncs.get(0);\n+    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n+    while (true) {\n+      try {\n+        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n+            .newNameNodeConnectors(namenodes,\n+                StoragePolicySatisfier.class.getSimpleName(),\n+                externalSPSPathId, conf,\n+                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n+        return nncs.get(0);\n+      } catch (IOException e) {\n+        LOG.warn(\"Failed to connect with namenode\", e);\n+        Thread.sleep(3000); // retry the connection after few secs\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n      throws IOException, InterruptedException {\n    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n    while (true) {\n      try {\n        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n            .newNameNodeConnectors(namenodes,\n                StoragePolicySatisfier.class.getSimpleName(),\n                externalSPSPathId, conf,\n                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n        return nncs.get(0);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to connect with namenode\", e);\n        Thread.sleep(3000); // retry the connection after few secs\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSContext.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
            "oldMethodName": "getNameNodeConnector",
            "newMethodName": "getNameNodeConnector"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-13050: [SPS]: Create start/stop script to start external SPS process. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "5845c36c16c423107183287cce3be9357dad7564",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,18 @@\n-  public static NameNodeConnector getNameNodeConnector(Configuration conf)\n-      throws IOException {\n+  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n+      throws IOException, InterruptedException {\n     final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n-    List\u003cNameNodeConnector\u003e nncs \u003d Collections.emptyList();\n-    NameNodeConnector.checkOtherInstanceRunning(false);\n-    nncs \u003d NameNodeConnector.newNameNodeConnectors(namenodes,\n-        ExternalSPSContext.class.getSimpleName(),\n-        HdfsServerConstants.MOVER_ID_PATH, conf,\n-        NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n-    return nncs.get(0);\n+    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n+    while (true) {\n+      try {\n+        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n+            .newNameNodeConnectors(namenodes,\n+                StoragePolicySatisfier.class.getSimpleName(),\n+                externalSPSPathId, conf,\n+                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n+        return nncs.get(0);\n+      } catch (IOException e) {\n+        LOG.warn(\"Failed to connect with namenode\", e);\n+        Thread.sleep(3000); // retry the connection after few secs\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n      throws IOException, InterruptedException {\n    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n    while (true) {\n      try {\n        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n            .newNameNodeConnectors(namenodes,\n                StoragePolicySatisfier.class.getSimpleName(),\n                externalSPSPathId, conf,\n                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n        return nncs.get(0);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to connect with namenode\", e);\n        Thread.sleep(3000); // retry the connection after few secs\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-13050: [SPS]: Create start/stop script to start external SPS process. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "5845c36c16c423107183287cce3be9357dad7564",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,18 @@\n-  public static NameNodeConnector getNameNodeConnector(Configuration conf)\n-      throws IOException {\n+  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n+      throws IOException, InterruptedException {\n     final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n-    List\u003cNameNodeConnector\u003e nncs \u003d Collections.emptyList();\n-    NameNodeConnector.checkOtherInstanceRunning(false);\n-    nncs \u003d NameNodeConnector.newNameNodeConnectors(namenodes,\n-        ExternalSPSContext.class.getSimpleName(),\n-        HdfsServerConstants.MOVER_ID_PATH, conf,\n-        NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n-    return nncs.get(0);\n+    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n+    while (true) {\n+      try {\n+        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n+            .newNameNodeConnectors(namenodes,\n+                StoragePolicySatisfier.class.getSimpleName(),\n+                externalSPSPathId, conf,\n+                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n+        return nncs.get(0);\n+      } catch (IOException e) {\n+        LOG.warn(\"Failed to connect with namenode\", e);\n+        Thread.sleep(3000); // retry the connection after few secs\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n      throws IOException, InterruptedException {\n    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n    while (true) {\n      try {\n        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n            .newNameNodeConnectors(namenodes,\n                StoragePolicySatisfier.class.getSimpleName(),\n                externalSPSPathId, conf,\n                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n        return nncs.get(0);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to connect with namenode\", e);\n        Thread.sleep(3000); // retry the connection after few secs\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, InterruptedException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13050: [SPS]: Create start/stop script to start external SPS process. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "5845c36c16c423107183287cce3be9357dad7564",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc",
          "commitAuthorOld": "Surendra Singh Lilhore",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,18 @@\n-  public static NameNodeConnector getNameNodeConnector(Configuration conf)\n-      throws IOException {\n+  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n+      throws IOException, InterruptedException {\n     final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n-    List\u003cNameNodeConnector\u003e nncs \u003d Collections.emptyList();\n-    NameNodeConnector.checkOtherInstanceRunning(false);\n-    nncs \u003d NameNodeConnector.newNameNodeConnectors(namenodes,\n-        ExternalSPSContext.class.getSimpleName(),\n-        HdfsServerConstants.MOVER_ID_PATH, conf,\n-        NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n-    return nncs.get(0);\n+    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n+    while (true) {\n+      try {\n+        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n+            .newNameNodeConnectors(namenodes,\n+                StoragePolicySatisfier.class.getSimpleName(),\n+                externalSPSPathId, conf,\n+                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n+        return nncs.get(0);\n+      } catch (IOException e) {\n+        LOG.warn(\"Failed to connect with namenode\", e);\n+        Thread.sleep(3000); // retry the connection after few secs\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static NameNodeConnector getNameNodeConnector(Configuration conf)\n      throws IOException, InterruptedException {\n    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n    final Path externalSPSPathId \u003d HdfsServerConstants.MOVER_ID_PATH;\n    while (true) {\n      try {\n        final List\u003cNameNodeConnector\u003e nncs \u003d NameNodeConnector\n            .newNameNodeConnectors(namenodes,\n                StoragePolicySatisfier.class.getSimpleName(),\n                externalSPSPathId, conf,\n                NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n        return nncs.get(0);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to connect with namenode\", e);\n        Thread.sleep(3000); // retry the connection after few secs\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalStoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13075. [SPS]: Provide External Context implementation. Contributed by Uma Maheswara Rao G.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "99594b48b8e040ab5a0939d7c3dbcfb34400e6fc",
      "commitAuthor": "Surendra Singh Lilhore",
      "diff": "@@ -0,0 +1,11 @@\n+  public static NameNodeConnector getNameNodeConnector(Configuration conf)\n+      throws IOException {\n+    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n+    List\u003cNameNodeConnector\u003e nncs \u003d Collections.emptyList();\n+    NameNodeConnector.checkOtherInstanceRunning(false);\n+    nncs \u003d NameNodeConnector.newNameNodeConnectors(namenodes,\n+        ExternalSPSContext.class.getSimpleName(),\n+        HdfsServerConstants.MOVER_ID_PATH, conf,\n+        NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n+    return nncs.get(0);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NameNodeConnector getNameNodeConnector(Configuration conf)\n      throws IOException {\n    final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getInternalNsRpcUris(conf);\n    List\u003cNameNodeConnector\u003e nncs \u003d Collections.emptyList();\n    NameNodeConnector.checkOtherInstanceRunning(false);\n    nncs \u003d NameNodeConnector.newNameNodeConnectors(namenodes,\n        ExternalSPSContext.class.getSimpleName(),\n        HdfsServerConstants.MOVER_ID_PATH, conf,\n        NameNodeConnector.DEFAULT_MAX_IDLE_ITERATIONS);\n    return nncs.get(0);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSContext.java"
    }
  }
}