{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLogOp.java",
  "functionName": "stringifyMembers",
  "functionId": "stringifyMembers",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
  "functionStartLine": 697,
  "functionEndLine": 738,
  "numCommitsSeen": 100,
  "timeTaken": 6674,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "67662e2ac9e68f32b725c8118cf2be79a662fca5",
    "bb84f1fccb18c6c7373851e05d2451d55e908242",
    "d45e7c7e856c7103752888c0395fa94985cd7670",
    "6104520369045dfaa4b543cbad21236ed322249b",
    "042b33f20b01aadb5cd03da731ae7a3d94026aac",
    "c89c516b95f45e04af55d9030043a42e2d07b02b",
    "8c7a7e619699386f9e6991842558d78aa0c8053d",
    "19201622be1db8e166d1cc0dd7e62af4702d2784",
    "e58b7e202b5833c5ea69187b5070de89d92198a2"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "67662e2ac9e68f32b725c8118cf2be79a662fca5": "Ybodychange",
    "bb84f1fccb18c6c7373851e05d2451d55e908242": "Ybodychange",
    "d45e7c7e856c7103752888c0395fa94985cd7670": "Ybodychange",
    "6104520369045dfaa4b543cbad21236ed322249b": "Ybodychange",
    "042b33f20b01aadb5cd03da731ae7a3d94026aac": "Ybodychange",
    "c89c516b95f45e04af55d9030043a42e2d07b02b": "Ybodychange",
    "8c7a7e619699386f9e6991842558d78aa0c8053d": "Ybodychange",
    "19201622be1db8e166d1cc0dd7e62af4702d2784": "Ybodychange",
    "e58b7e202b5833c5ea69187b5070de89d92198a2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "20/04/18 8:33 PM",
      "commitNameOld": "f40969a141ec6aff254c41e4185cc61ea9e4e554",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 265.64,
      "commitsBetweenForRepo": 2549,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n-      builder.append(\"[length\u003d\");\n-      builder.append(length);\n-      builder.append(\", inodeId\u003d\");\n-      builder.append(inodeId);\n-      builder.append(\", path\u003d\");\n-      builder.append(path);\n-      builder.append(\", replication\u003d\");\n-      builder.append(replication);\n-      builder.append(\", mtime\u003d\");\n-      builder.append(mtime);\n-      builder.append(\", atime\u003d\");\n-      builder.append(atime);\n-      builder.append(\", blockSize\u003d\");\n-      builder.append(blockSize);\n-      builder.append(\", blocks\u003d\");\n-      builder.append(Arrays.toString(blocks));\n-      builder.append(\", permissions\u003d\");\n-      builder.append(permissions);\n-      builder.append(\", aclEntries\u003d\");\n-      builder.append(aclEntries);\n-      builder.append(\", clientName\u003d\");\n-      builder.append(clientName);\n-      builder.append(\", clientMachine\u003d\");\n-      builder.append(clientMachine);\n-      builder.append(\", overwrite\u003d\");\n-      builder.append(overwrite);\n+      builder.append(\"[length\u003d\")\n+          .append(length)\n+          .append(\", inodeId\u003d\")\n+          .append(inodeId)\n+          .append(\", path\u003d\")\n+          .append(path)\n+          .append(\", replication\u003d\")\n+          .append(replication)\n+          .append(\", mtime\u003d\")\n+          .append(mtime)\n+          .append(\", atime\u003d\")\n+          .append(atime)\n+          .append(\", blockSize\u003d\")\n+          .append(blockSize)\n+          .append(\", blocks\u003d\")\n+          .append(Arrays.toString(blocks))\n+          .append(\", permissions\u003d\")\n+          .append(permissions)\n+          .append(\", aclEntries\u003d\")\n+          .append(aclEntries)\n+          .append(\", clientName\u003d\")\n+          .append(clientName)\n+          .append(\", clientMachine\u003d\")\n+          .append(clientMachine)\n+          .append(\", overwrite\u003d\")\n+          .append(overwrite);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n-      builder.append(\", storagePolicyId\u003d\");\n-      builder.append(storagePolicyId);\n-      builder.append(\", erasureCodingPolicyId\u003d\");\n-      builder.append(erasureCodingPolicyId);\n-      builder.append(\", opCode\u003d\");\n-      builder.append(opCode);\n-      builder.append(\", txid\u003d\");\n-      builder.append(txid);\n-      builder.append(\"]\");\n+      builder.append(\", storagePolicyId\u003d\")\n+          .append(storagePolicyId)\n+          .append(\", erasureCodingPolicyId\u003d\")\n+          .append(erasureCodingPolicyId)\n+          .append(\", opCode\u003d\")\n+          .append(opCode)\n+          .append(\", txid\u003d\")\n+          .append(txid)\n+          .append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\")\n          .append(length)\n          .append(\", inodeId\u003d\")\n          .append(inodeId)\n          .append(\", path\u003d\")\n          .append(path)\n          .append(\", replication\u003d\")\n          .append(replication)\n          .append(\", mtime\u003d\")\n          .append(mtime)\n          .append(\", atime\u003d\")\n          .append(atime)\n          .append(\", blockSize\u003d\")\n          .append(blockSize)\n          .append(\", blocks\u003d\")\n          .append(Arrays.toString(blocks))\n          .append(\", permissions\u003d\")\n          .append(permissions)\n          .append(\", aclEntries\u003d\")\n          .append(aclEntries)\n          .append(\", clientName\u003d\")\n          .append(clientName)\n          .append(\", clientMachine\u003d\")\n          .append(clientMachine)\n          .append(\", overwrite\u003d\")\n          .append(overwrite);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", storagePolicyId\u003d\")\n          .append(storagePolicyId)\n          .append(\", erasureCodingPolicyId\u003d\")\n          .append(erasureCodingPolicyId)\n          .append(\", opCode\u003d\")\n          .append(opCode)\n          .append(\", txid\u003d\")\n          .append(txid)\n          .append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "67662e2ac9e68f32b725c8118cf2be79a662fca5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12840. Creating a file with non-default EC policy in a EC zone is not correctly serialized in the editlog. Contributed by Lei (Eddy) Xu.\n",
      "commitDate": "07/12/17 11:15 AM",
      "commitName": "67662e2ac9e68f32b725c8118cf2be79a662fca5",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "14/09/17 6:43 PM",
      "commitNameOld": "08d996d3e9265efad737efad50cbc5b10a0202f8",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 83.73,
      "commitsBetweenForRepo": 636,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,42 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", aclEntries\u003d\");\n       builder.append(aclEntries);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n       builder.append(\", overwrite\u003d\");\n       builder.append(overwrite);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n       builder.append(\", storagePolicyId\u003d\");\n       builder.append(storagePolicyId);\n+      builder.append(\", erasureCodingPolicyId\u003d\");\n+      builder.append(erasureCodingPolicyId);\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", aclEntries\u003d\");\n      builder.append(aclEntries);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      builder.append(\", overwrite\u003d\");\n      builder.append(overwrite);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", storagePolicyId\u003d\");\n      builder.append(storagePolicyId);\n      builder.append(\", erasureCodingPolicyId\u003d\");\n      builder.append(erasureCodingPolicyId);\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "bb84f1fccb18c6c7373851e05d2451d55e908242": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7159. Use block storage policy to set lazy persist preference. (Arpit Agarwal)\n",
      "commitDate": "29/09/14 10:27 PM",
      "commitName": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthor": "arp",
      "commitDateOld": "29/09/14 12:36 PM",
      "commitNameOld": "d45e7c7e856c7103752888c0395fa94985cd7670",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,40 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n-      builder.append(\", lazyPersist\");\n-      builder.append(isLazyPersist);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", aclEntries\u003d\");\n       builder.append(aclEntries);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n       builder.append(\", overwrite\u003d\");\n       builder.append(overwrite);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n       builder.append(\", storagePolicyId\u003d\");\n       builder.append(storagePolicyId);\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", aclEntries\u003d\");\n      builder.append(aclEntries);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      builder.append(\", overwrite\u003d\");\n      builder.append(overwrite);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", storagePolicyId\u003d\");\n      builder.append(storagePolicyId);\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "d45e7c7e856c7103752888c0395fa94985cd7670": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7153. Add storagePolicy to NN edit log during file creation. (Arpit Agarwal)\n",
      "commitDate": "29/09/14 12:36 PM",
      "commitName": "d45e7c7e856c7103752888c0395fa94985cd7670",
      "commitAuthor": "arp",
      "commitDateOld": "18/09/14 10:26 PM",
      "commitNameOld": "f8bbf80067ac03400acae4655615c9808c538ca8",
      "commitAuthorOld": "",
      "daysBetweenCommits": 10.59,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,42 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n       builder.append(\", lazyPersist\");\n       builder.append(isLazyPersist);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", aclEntries\u003d\");\n       builder.append(aclEntries);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n       builder.append(\", overwrite\u003d\");\n       builder.append(overwrite);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n+      builder.append(\", storagePolicyId\u003d\");\n+      builder.append(storagePolicyId);\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", lazyPersist\");\n      builder.append(isLazyPersist);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", aclEntries\u003d\");\n      builder.append(aclEntries);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      builder.append(\", overwrite\u003d\");\n      builder.append(overwrite);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", storagePolicyId\u003d\");\n      builder.append(storagePolicyId);\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "6104520369045dfaa4b543cbad21236ed322249b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6886. Use single editlog record for creating file + overwrite. Contributed by Yi Liu.\n",
      "commitDate": "04/09/14 6:54 PM",
      "commitName": "6104520369045dfaa4b543cbad21236ed322249b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "23/07/14 12:05 PM",
      "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 43.28,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", aclEntries\u003d\");\n       builder.append(aclEntries);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n+      builder.append(\", overwrite\u003d\");\n+      builder.append(overwrite);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", aclEntries\u003d\");\n      builder.append(aclEntries);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      builder.append(\", overwrite\u003d\");\n      builder.append(overwrite);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "042b33f20b01aadb5cd03da731ae7a3d94026aac": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6922. Add LazyPersist flag to INodeFile, save it in FsImage and edit logs. (Arpit Agarwal)\n",
      "commitDate": "27/08/14 9:47 PM",
      "commitName": "042b33f20b01aadb5cd03da731ae7a3d94026aac",
      "commitAuthor": "arp",
      "commitDateOld": "23/07/14 12:05 PM",
      "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 35.4,
      "commitsBetweenForRepo": 281,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n+      builder.append(\", lazyPersist\");\n+      builder.append(isLazyPersist);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", aclEntries\u003d\");\n       builder.append(aclEntries);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", lazyPersist\");\n      builder.append(isLazyPersist);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", aclEntries\u003d\");\n      builder.append(aclEntries);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "c89c516b95f45e04af55d9030043a42e2d07b02b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5616. NameNode: implement default ACL handling. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1565845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/14 3:11 PM",
      "commitName": "c89c516b95f45e04af55d9030043a42e2d07b02b",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "17/01/14 10:50 PM",
      "commitNameOld": "8a9a6dbd7e8da2fff7e769b8f6a0aa220faad28f",
      "commitAuthorOld": "",
      "daysBetweenCommits": 20.68,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n+      builder.append(\", aclEntries\u003d\");\n+      builder.append(aclEntries);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n       if (this.opCode \u003d\u003d OP_ADD) {\n         appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n       }\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", aclEntries\u003d\");\n      builder.append(aclEntries);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "8c7a7e619699386f9e6991842558d78aa0c8053d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/07/13 12:51 AM",
      "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/07/13 10:29 PM",
      "commitNameOld": "6770de7ec4f73e16740f1723f4e35d2fef2c22c8",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 22.1,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n       builder.append(\", inodeId\u003d\");\n       builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n+      if (this.opCode \u003d\u003d OP_ADD) {\n+        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n+      }\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      if (this.opCode \u003d\u003d OP_ADD) {\n        appendRpcIdsToString(builder, rpcClientId, rpcCallId);\n      }\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "19201622be1db8e166d1cc0dd7e62af4702d2784": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4339. Persist inode id in fsimage and editlog. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465835 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/04/13 4:57 PM",
      "commitName": "19201622be1db8e166d1cc0dd7e62af4702d2784",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "22/02/13 1:21 PM",
      "commitNameOld": "019d6a22b152feef796a46d538ef593c20741a31",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 45.11,
      "commitsBetweenForRepo": 232,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n     public String stringifyMembers() {\n       StringBuilder builder \u003d new StringBuilder();\n       builder.append(\"[length\u003d\");\n       builder.append(length);\n+      builder.append(\", inodeId\u003d\");\n+      builder.append(inodeId);\n       builder.append(\", path\u003d\");\n       builder.append(path);\n       builder.append(\", replication\u003d\");\n       builder.append(replication);\n       builder.append(\", mtime\u003d\");\n       builder.append(mtime);\n       builder.append(\", atime\u003d\");\n       builder.append(atime);\n       builder.append(\", blockSize\u003d\");\n       builder.append(blockSize);\n       builder.append(\", blocks\u003d\");\n       builder.append(Arrays.toString(blocks));\n       builder.append(\", permissions\u003d\");\n       builder.append(permissions);\n       builder.append(\", clientName\u003d\");\n       builder.append(clientName);\n       builder.append(\", clientMachine\u003d\");\n       builder.append(clientMachine);\n       builder.append(\", opCode\u003d\");\n       builder.append(opCode);\n       builder.append(\", txid\u003d\");\n       builder.append(txid);\n       builder.append(\"]\");\n       return builder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", inodeId\u003d\");\n      builder.append(inodeId);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "e58b7e202b5833c5ea69187b5070de89d92198a2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3014. FSEditLogOp and its subclasses should have toString() method. Contributed by Sho Shimauchi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294926 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/12 5:17 PM",
      "commitName": "e58b7e202b5833c5ea69187b5070de89d92198a2",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,29 @@\n+    public String stringifyMembers() {\n+      StringBuilder builder \u003d new StringBuilder();\n+      builder.append(\"[length\u003d\");\n+      builder.append(length);\n+      builder.append(\", path\u003d\");\n+      builder.append(path);\n+      builder.append(\", replication\u003d\");\n+      builder.append(replication);\n+      builder.append(\", mtime\u003d\");\n+      builder.append(mtime);\n+      builder.append(\", atime\u003d\");\n+      builder.append(atime);\n+      builder.append(\", blockSize\u003d\");\n+      builder.append(blockSize);\n+      builder.append(\", blocks\u003d\");\n+      builder.append(Arrays.toString(blocks));\n+      builder.append(\", permissions\u003d\");\n+      builder.append(permissions);\n+      builder.append(\", clientName\u003d\");\n+      builder.append(clientName);\n+      builder.append(\", clientMachine\u003d\");\n+      builder.append(clientMachine);\n+      builder.append(\", opCode\u003d\");\n+      builder.append(opCode);\n+      builder.append(\", txid\u003d\");\n+      builder.append(txid);\n+      builder.append(\"]\");\n+      return builder.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String stringifyMembers() {\n      StringBuilder builder \u003d new StringBuilder();\n      builder.append(\"[length\u003d\");\n      builder.append(length);\n      builder.append(\", path\u003d\");\n      builder.append(path);\n      builder.append(\", replication\u003d\");\n      builder.append(replication);\n      builder.append(\", mtime\u003d\");\n      builder.append(mtime);\n      builder.append(\", atime\u003d\");\n      builder.append(atime);\n      builder.append(\", blockSize\u003d\");\n      builder.append(blockSize);\n      builder.append(\", blocks\u003d\");\n      builder.append(Arrays.toString(blocks));\n      builder.append(\", permissions\u003d\");\n      builder.append(permissions);\n      builder.append(\", clientName\u003d\");\n      builder.append(clientName);\n      builder.append(\", clientMachine\u003d\");\n      builder.append(clientMachine);\n      builder.append(\", opCode\u003d\");\n      builder.append(opCode);\n      builder.append(\", txid\u003d\");\n      builder.append(txid);\n      builder.append(\"]\");\n      return builder.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java"
    }
  }
}