{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterSecurityManager.java",
  "functionName": "renewDelegationToken",
  "functionId": "renewDelegationToken___token-Token__DelegationTokenIdentifier__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/security/RouterSecurityManager.java",
  "functionStartLine": 166,
  "functionEndLine": 192,
  "numCommitsSeen": 6,
  "timeTaken": 735,
  "changeHistory": [
    "75f8b6ccfa6160e695ce8f7ad13c6e3624e9e7aa"
  ],
  "changeHistoryShort": {
    "75f8b6ccfa6160e695ce8f7ad13c6e3624e9e7aa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "75f8b6ccfa6160e695ce8f7ad13c6e3624e9e7aa": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13358. RBF: Support for Delegation Token (RPC). Contributed by CR Hota.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "75f8b6ccfa6160e695ce8f7ad13c6e3624e9e7aa",
      "commitAuthor": "Brahma Reddy Battula",
      "diff": "@@ -0,0 +1,27 @@\n+  public long renewDelegationToken(Token\u003cDelegationTokenIdentifier\u003e token)\n+          throws SecretManager.InvalidToken, IOException {\n+    LOG.debug(\"Renew delegation token\");\n+    final String operationName \u003d \"renewDelegationToken\";\n+    boolean success \u003d false;\n+    String tokenId \u003d \"\";\n+    long expiryTime;\n+    try {\n+      if (!isAllowedDelegationTokenOp()) {\n+        throw new IOException(\n+            \"Delegation Token can be renewed only \" +\n+                \"with kerberos or web authentication\");\n+      }\n+      String renewer \u003d getRemoteUser().getShortUserName();\n+      expiryTime \u003d dtSecretManager.renewToken(token, renewer);\n+      final DelegationTokenIdentifier id \u003d DFSUtil.decodeDelegationToken(token);\n+      tokenId \u003d id.toStringStable();\n+      success \u003d true;\n+    } catch (AccessControlException ace) {\n+      final DelegationTokenIdentifier id \u003d DFSUtil.decodeDelegationToken(token);\n+      tokenId \u003d id.toStringStable();\n+      throw ace;\n+    } finally {\n+      logAuditEvent(success, operationName, tokenId);\n+    }\n+    return expiryTime;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public long renewDelegationToken(Token\u003cDelegationTokenIdentifier\u003e token)\n          throws SecretManager.InvalidToken, IOException {\n    LOG.debug(\"Renew delegation token\");\n    final String operationName \u003d \"renewDelegationToken\";\n    boolean success \u003d false;\n    String tokenId \u003d \"\";\n    long expiryTime;\n    try {\n      if (!isAllowedDelegationTokenOp()) {\n        throw new IOException(\n            \"Delegation Token can be renewed only \" +\n                \"with kerberos or web authentication\");\n      }\n      String renewer \u003d getRemoteUser().getShortUserName();\n      expiryTime \u003d dtSecretManager.renewToken(token, renewer);\n      final DelegationTokenIdentifier id \u003d DFSUtil.decodeDelegationToken(token);\n      tokenId \u003d id.toStringStable();\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      final DelegationTokenIdentifier id \u003d DFSUtil.decodeDelegationToken(token);\n      tokenId \u003d id.toStringStable();\n      throw ace;\n    } finally {\n      logAuditEvent(success, operationName, tokenId);\n    }\n    return expiryTime;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/security/RouterSecurityManager.java"
    }
  }
}