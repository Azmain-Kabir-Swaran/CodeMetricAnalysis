{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompletedJob.java",
  "functionName": "loadFullHistoryData",
  "functionId": "loadFullHistoryData___loadTasks-boolean__historyFileAbsolute-Path",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
  "functionStartLine": 370,
  "functionEndLine": 402,
  "numCommitsSeen": 40,
  "timeTaken": 8729,
  "changeHistory": [
    "f0605146b34ddbd19fc9e52d4761f9a347d5173e",
    "fbb7d6bcbb887ce52ab1e9d5a1fed67a7f8a4be8",
    "cc8b83a8e85bfc65974cf5e86337855cd4724c1d",
    "d4f7e2507f4bb024444d172f94e74431bc2f319c",
    "e8a31f2e1c34514fba2f480e8db652f6e2ed65d8",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "4ce5f6553fe8bd1c82b3a4bbd8ed4351874dd4ab",
    "7475e836dc2bdd29142eaf210262fba354b745ed",
    "b4929bcf142db6dd2feadd8e0681545693c8711e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f0605146b34ddbd19fc9e52d4761f9a347d5173e": "Ybodychange",
    "fbb7d6bcbb887ce52ab1e9d5a1fed67a7f8a4be8": "Ybodychange",
    "cc8b83a8e85bfc65974cf5e86337855cd4724c1d": "Ybodychange",
    "d4f7e2507f4bb024444d172f94e74431bc2f319c": "Ybodychange",
    "e8a31f2e1c34514fba2f480e8db652f6e2ed65d8": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "4ce5f6553fe8bd1c82b3a4bbd8ed4351874dd4ab": "Ymodifierchange",
    "7475e836dc2bdd29142eaf210262fba354b745ed": "Ybodychange",
    "b4929bcf142db6dd2feadd8e0681545693c8711e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0605146b34ddbd19fc9e52d4761f9a347d5173e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7191. JobHistoryServer should log exception when loading/parsing history file failed. Contributed by Jiandan Yang.\n",
      "commitDate": "11/03/19 12:02 AM",
      "commitName": "f0605146b34ddbd19fc9e52d4761f9a347d5173e",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "08/11/17 2:21 AM",
      "commitNameOld": "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 487.86,
      "commitsBetweenForRepo": 4144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,33 @@\n   protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n         parser \u003d createJobHistoryParser(historyFileAbsolute);\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n-        throw new YarnRuntimeException(\"Could not load history file \"\n-            + historyFileAbsolute, e);\n+        String errorMsg \u003d \"Could not load history file \" + historyFileAbsolute;\n+        LOG.warn(errorMsg, e);\n+        throw new YarnRuntimeException(errorMsg, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n-        throw new YarnRuntimeException(\n-            \"Could not parse history file \" + historyFileAbsolute, \n-            parseException);\n+        String errorMsg \u003d \"Could not parse history file \" + historyFileAbsolute;\n+        LOG.warn(errorMsg, parseException);\n+        throw new YarnRuntimeException(errorMsg, parseException);\n       }\n     } else {\n-      throw new IOException(\"History file not found\");\n+      String errorMsg \u003d \"History file not found\";\n+      LOG.warn(errorMsg);\n+      throw new IOException(errorMsg);\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        parser \u003d createJobHistoryParser(historyFileAbsolute);\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        String errorMsg \u003d \"Could not load history file \" + historyFileAbsolute;\n        LOG.warn(errorMsg, e);\n        throw new YarnRuntimeException(errorMsg, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        String errorMsg \u003d \"Could not parse history file \" + historyFileAbsolute;\n        LOG.warn(errorMsg, parseException);\n        throw new YarnRuntimeException(errorMsg, parseException);\n      }\n    } else {\n      String errorMsg \u003d \"History file not found\";\n      LOG.warn(errorMsg);\n      throw new IOException(errorMsg);\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "fbb7d6bcbb887ce52ab1e9d5a1fed67a7f8a4be8": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"MAPREDUCE-5875. Make Counter limits consistent across JobClient, MRAppMaster, and YarnChild. (Gera Shegalov via kasha)\"\n\nThis reverts commit e8a31f2e1c34514fba2f480e8db652f6e2ed65d8.\n",
      "commitDate": "31/07/17 2:09 PM",
      "commitName": "fbb7d6bcbb887ce52ab1e9d5a1fed67a7f8a4be8",
      "commitAuthor": "Junping Du",
      "commitDateOld": "16/04/16 3:07 PM",
      "commitNameOld": "cc8b83a8e85bfc65974cf5e86337855cd4724c1d",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 470.96,
      "commitsBetweenForRepo": 2968,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,30 @@\n   protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n-        final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n         parser \u003d createJobHistoryParser(historyFileAbsolute);\n-        final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n-            JobHistoryUtils.getIntermediateConfFileName(jobId));\n-        final Configuration conf \u003d new Configuration();\n-        try {\n-          conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n-          Limits.reset(conf);\n-        } catch (FileNotFoundException fnf) {\n-          if (LOG.isWarnEnabled()) {\n-            LOG.warn(\"Missing job conf in history\", fnf);\n-          }\n-        }\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnRuntimeException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n         throw new YarnRuntimeException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        parser \u003d createJobHistoryParser(historyFileAbsolute);\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnRuntimeException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnRuntimeException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "cc8b83a8e85bfc65974cf5e86337855cd4724c1d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6649. getFailureInfo not returning any failure info. Contributed by Eric Badger\n",
      "commitDate": "16/04/16 3:07 PM",
      "commitName": "cc8b83a8e85bfc65974cf5e86337855cd4724c1d",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "23/02/16 5:37 PM",
      "commitNameOld": "4343a4cf7790b47dc7ecd18f8634e6b9c805e775",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 52.85,
      "commitsBetweenForRepo": 323,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n   protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n         final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n-        parser \u003d new JobHistoryParser(fs, historyFileAbsolute);\n+        parser \u003d createJobHistoryParser(historyFileAbsolute);\n         final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n             JobHistoryUtils.getIntermediateConfFileName(jobId));\n         final Configuration conf \u003d new Configuration();\n         try {\n           conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n           Limits.reset(conf);\n         } catch (FileNotFoundException fnf) {\n           if (LOG.isWarnEnabled()) {\n             LOG.warn(\"Missing job conf in history\", fnf);\n           }\n         }\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnRuntimeException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n         throw new YarnRuntimeException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n        parser \u003d createJobHistoryParser(historyFileAbsolute);\n        final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n            JobHistoryUtils.getIntermediateConfFileName(jobId));\n        final Configuration conf \u003d new Configuration();\n        try {\n          conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n          Limits.reset(conf);\n        } catch (FileNotFoundException fnf) {\n          if (LOG.isWarnEnabled()) {\n            LOG.warn(\"Missing job conf in history\", fnf);\n          }\n        }\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnRuntimeException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnRuntimeException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "d4f7e2507f4bb024444d172f94e74431bc2f319c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6282. Reuse historyFileAbsolute.getFileSystem in CompletedJob#loadFullHistoryData for code optimization. (zxu via rkanter)\n",
      "commitDate": "20/03/15 1:11 PM",
      "commitName": "d4f7e2507f4bb024444d172f94e74431bc2f319c",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "12/02/15 12:15 AM",
      "commitNameOld": "76e309ead01f02b32335330cd920536f907fb71f",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 36.5,
      "commitsBetweenForRepo": 340,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,42 @@\n   protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n         final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n-        parser \u003d\n-            new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n-                historyFileAbsolute);\n+        parser \u003d new JobHistoryParser(fs, historyFileAbsolute);\n         final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n             JobHistoryUtils.getIntermediateConfFileName(jobId));\n         final Configuration conf \u003d new Configuration();\n         try {\n           conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n           Limits.reset(conf);\n         } catch (FileNotFoundException fnf) {\n           if (LOG.isWarnEnabled()) {\n             LOG.warn(\"Missing job conf in history\", fnf);\n           }\n         }\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnRuntimeException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n         throw new YarnRuntimeException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n        parser \u003d new JobHistoryParser(fs, historyFileAbsolute);\n        final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n            JobHistoryUtils.getIntermediateConfFileName(jobId));\n        final Configuration conf \u003d new Configuration();\n        try {\n          conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n          Limits.reset(conf);\n        } catch (FileNotFoundException fnf) {\n          if (LOG.isWarnEnabled()) {\n            LOG.warn(\"Missing job conf in history\", fnf);\n          }\n        }\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnRuntimeException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnRuntimeException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "e8a31f2e1c34514fba2f480e8db652f6e2ed65d8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5875. Make Counter limits consistent across JobClient, MRAppMaster, and YarnChild. (Gera Shegalov via kasha)\n",
      "commitDate": "11/10/14 10:49 PM",
      "commitName": "e8a31f2e1c34514fba2f480e8db652f6e2ed65d8",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "29/01/14 3:51 PM",
      "commitNameOld": "db807057193311fc06caf912e13000193edd1bd8",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 255.25,
      "commitsBetweenForRepo": 2109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,44 @@\n   protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n+        final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n         parser \u003d\n             new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                 historyFileAbsolute);\n+        final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n+            JobHistoryUtils.getIntermediateConfFileName(jobId));\n+        final Configuration conf \u003d new Configuration();\n+        try {\n+          conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n+          Limits.reset(conf);\n+        } catch (FileNotFoundException fnf) {\n+          if (LOG.isWarnEnabled()) {\n+            LOG.warn(\"Missing job conf in history\", fnf);\n+          }\n+        }\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnRuntimeException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n         throw new YarnRuntimeException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        final FileSystem fs \u003d historyFileAbsolute.getFileSystem(conf);\n        parser \u003d\n            new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                historyFileAbsolute);\n        final Path jobConfPath \u003d new Path(historyFileAbsolute.getParent(),\n            JobHistoryUtils.getIntermediateConfFileName(jobId));\n        final Configuration conf \u003d new Configuration();\n        try {\n          conf.addResource(fs.open(jobConfPath), jobConfPath.toString());\n          Limits.reset(conf);\n        } catch (FileNotFoundException fnf) {\n          if (LOG.isWarnEnabled()) {\n            LOG.warn(\"Missing job conf in history\", fnf);\n          }\n        }\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnRuntimeException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnRuntimeException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/01/13 11:07 AM",
      "commitNameOld": "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 132.37,
      "commitsBetweenForRepo": 764,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n         parser \u003d\n             new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                 historyFileAbsolute);\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n-        throw new YarnException(\"Could not load history file \"\n+        throw new YarnRuntimeException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n-        throw new YarnException(\n+        throw new YarnRuntimeException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        parser \u003d\n            new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                historyFileAbsolute);\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnRuntimeException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnRuntimeException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "4ce5f6553fe8bd1c82b3a4bbd8ed4351874dd4ab": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-3944. Change the history jobs/ webservice to return partial job info for a significant performance improvement. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1297672 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/12 11:52 AM",
      "commitName": "4ce5f6553fe8bd1c82b3a4bbd8ed4351874dd4ab",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "27/02/12 4:32 PM",
      "commitNameOld": "7475e836dc2bdd29142eaf210262fba354b745ed",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.81,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n-  private synchronized void loadFullHistoryData(boolean loadTasks,\n+  protected synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (this.jobInfo !\u003d null) {\n       return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n         parser \u003d\n             new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                 historyFileAbsolute);\n         this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n         throw new YarnException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     if (loadTasks) {\n       loadAllTasks();\n       LOG.info(\"TaskInfo loaded\");\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        parser \u003d\n            new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                historyFileAbsolute);\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[protected, synchronized]"
      }
    },
    "7475e836dc2bdd29142eaf210262fba354b745ed": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3901. Modified JobHistory records in YARN to lazily load job and task reports so as to improve UI response times. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294417 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/12 4:32 PM",
      "commitName": "7475e836dc2bdd29142eaf210262fba354b745ed",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/02/12 2:30 PM",
      "commitNameOld": "582b97c3e75d3e7535a6cdf32a53582e89380490",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,32 @@\n   private synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n-    if (jobInfo !\u003d null) {\n-      return; //data already loaded\n+    if (this.jobInfo !\u003d null) {\n+      return;\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n       JobHistoryParser parser \u003d null;\n       try {\n         parser \u003d\n             new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                 historyFileAbsolute);\n-        jobInfo \u003d parser.parse();\n+        this.jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n       IOException parseException \u003d parser.getParseException(); \n       if (parseException !\u003d null) {\n         throw new YarnException(\n             \"Could not parse history file \" + historyFileAbsolute, \n             parseException);\n       }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n-    \n     if (loadTasks) {\n-    for (Map.Entry\u003corg.apache.hadoop.mapreduce.TaskID, TaskInfo\u003e entry : jobInfo\n-        .getAllTasks().entrySet()) {\n-      TaskId yarnTaskID \u003d TypeConverter.toYarn(entry.getKey());\n-      TaskInfo taskInfo \u003d entry.getValue();\n-      Task task \u003d new CompletedTask(yarnTaskID, taskInfo);\n-      tasks.put(yarnTaskID, task);\n-      if (task.getType() \u003d\u003d TaskType.MAP) {\n-        mapTasks.put(task.getID(), task);\n-      } else if (task.getType() \u003d\u003d TaskType.REDUCE) {\n-        reduceTasks.put(task.getID(), task);\n-      }\n-    }\n-    }\n-    LOG.info(\"TaskInfo loaded\");\n+      loadAllTasks();\n+      LOG.info(\"TaskInfo loaded\");\n+    }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (this.jobInfo !\u003d null) {\n      return;\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        parser \u003d\n            new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                historyFileAbsolute);\n        this.jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    if (loadTasks) {\n      loadAllTasks();\n      LOG.info(\"TaskInfo loaded\");\n    }    \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "b4929bcf142db6dd2feadd8e0681545693c8711e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3640. Allow AMRecovery to work with partial JobHistory files. (Contributed by Arun C Murthy)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1239402 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/02/12 3:33 PM",
      "commitName": "b4929bcf142db6dd2feadd8e0681545693c8711e",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "09/01/12 1:04 PM",
      "commitNameOld": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.1,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,44 @@\n   private synchronized void loadFullHistoryData(boolean loadTasks,\n       Path historyFileAbsolute) throws IOException {\n     LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n     if (jobInfo !\u003d null) {\n       return; //data already loaded\n     }\n     \n     if (historyFileAbsolute !\u003d null) {\n+      JobHistoryParser parser \u003d null;\n       try {\n-        JobHistoryParser parser \u003d\n+        parser \u003d\n             new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                 historyFileAbsolute);\n         jobInfo \u003d parser.parse();\n       } catch (IOException e) {\n         throw new YarnException(\"Could not load history file \"\n             + historyFileAbsolute, e);\n       }\n+      IOException parseException \u003d parser.getParseException(); \n+      if (parseException !\u003d null) {\n+        throw new YarnException(\n+            \"Could not parse history file \" + historyFileAbsolute, \n+            parseException);\n+      }\n     } else {\n       throw new IOException(\"History file not found\");\n     }\n     \n     if (loadTasks) {\n     for (Map.Entry\u003corg.apache.hadoop.mapreduce.TaskID, TaskInfo\u003e entry : jobInfo\n         .getAllTasks().entrySet()) {\n       TaskId yarnTaskID \u003d TypeConverter.toYarn(entry.getKey());\n       TaskInfo taskInfo \u003d entry.getValue();\n       Task task \u003d new CompletedTask(yarnTaskID, taskInfo);\n       tasks.put(yarnTaskID, task);\n       if (task.getType() \u003d\u003d TaskType.MAP) {\n         mapTasks.put(task.getID(), task);\n       } else if (task.getType() \u003d\u003d TaskType.REDUCE) {\n         reduceTasks.put(task.getID(), task);\n       }\n     }\n     }\n     LOG.info(\"TaskInfo loaded\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void loadFullHistoryData(boolean loadTasks,\n      Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (jobInfo !\u003d null) {\n      return; //data already loaded\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      JobHistoryParser parser \u003d null;\n      try {\n        parser \u003d\n            new JobHistoryParser(historyFileAbsolute.getFileSystem(conf),\n                historyFileAbsolute);\n        jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnException(\"Could not load history file \"\n            + historyFileAbsolute, e);\n      }\n      IOException parseException \u003d parser.getParseException(); \n      if (parseException !\u003d null) {\n        throw new YarnException(\n            \"Could not parse history file \" + historyFileAbsolute, \n            parseException);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    \n    if (loadTasks) {\n    for (Map.Entry\u003corg.apache.hadoop.mapreduce.TaskID, TaskInfo\u003e entry : jobInfo\n        .getAllTasks().entrySet()) {\n      TaskId yarnTaskID \u003d TypeConverter.toYarn(entry.getKey());\n      TaskInfo taskInfo \u003d entry.getValue();\n      Task task \u003d new CompletedTask(yarnTaskID, taskInfo);\n      tasks.put(yarnTaskID, task);\n      if (task.getType() \u003d\u003d TaskType.MAP) {\n        mapTasks.put(task.getID(), task);\n      } else if (task.getType() \u003d\u003d TaskType.REDUCE) {\n        reduceTasks.put(task.getID(), task);\n      }\n    }\n    }\n    LOG.info(\"TaskInfo loaded\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void loadFullHistoryData(boolean loadTasks, Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (jobInfo !\u003d null) {\n      return; //data already loaded\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      try {\n      JobHistoryParser parser \u003d new JobHistoryParser(historyFileAbsolute.getFileSystem(conf), historyFileAbsolute);\n      jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnException(\"Could not load history file \" + historyFileAbsolute,\n            e);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    \n    if (loadTasks) {\n    for (Map.Entry\u003corg.apache.hadoop.mapreduce.TaskID, TaskInfo\u003e entry : jobInfo\n        .getAllTasks().entrySet()) {\n      TaskId yarnTaskID \u003d TypeConverter.toYarn(entry.getKey());\n      TaskInfo taskInfo \u003d entry.getValue();\n      Task task \u003d new CompletedTask(yarnTaskID, taskInfo);\n      tasks.put(yarnTaskID, task);\n      if (task.getType() \u003d\u003d TaskType.MAP) {\n        mapTasks.put(task.getID(), task);\n      } else if (task.getType() \u003d\u003d TaskType.REDUCE) {\n        reduceTasks.put(task.getID(), task);\n      }\n    }\n    }\n    LOG.info(\"TaskInfo loaded\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,34 @@\n+  private synchronized void loadFullHistoryData(boolean loadTasks, Path historyFileAbsolute) throws IOException {\n+    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n+    if (jobInfo !\u003d null) {\n+      return; //data already loaded\n+    }\n+    \n+    if (historyFileAbsolute !\u003d null) {\n+      try {\n+      JobHistoryParser parser \u003d new JobHistoryParser(historyFileAbsolute.getFileSystem(conf), historyFileAbsolute);\n+      jobInfo \u003d parser.parse();\n+      } catch (IOException e) {\n+        throw new YarnException(\"Could not load history file \" + historyFileAbsolute,\n+            e);\n+      }\n+    } else {\n+      throw new IOException(\"History file not found\");\n+    }\n+    \n+    if (loadTasks) {\n+    for (Map.Entry\u003corg.apache.hadoop.mapreduce.TaskID, TaskInfo\u003e entry : jobInfo\n+        .getAllTasks().entrySet()) {\n+      TaskId yarnTaskID \u003d TypeConverter.toYarn(entry.getKey());\n+      TaskInfo taskInfo \u003d entry.getValue();\n+      Task task \u003d new CompletedTask(yarnTaskID, taskInfo);\n+      tasks.put(yarnTaskID, task);\n+      if (task.getType() \u003d\u003d TaskType.MAP) {\n+        mapTasks.put(task.getID(), task);\n+      } else if (task.getType() \u003d\u003d TaskType.REDUCE) {\n+        reduceTasks.put(task.getID(), task);\n+      }\n+    }\n+    }\n+    LOG.info(\"TaskInfo loaded\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void loadFullHistoryData(boolean loadTasks, Path historyFileAbsolute) throws IOException {\n    LOG.info(\"Loading history file: [\" + historyFileAbsolute + \"]\");\n    if (jobInfo !\u003d null) {\n      return; //data already loaded\n    }\n    \n    if (historyFileAbsolute !\u003d null) {\n      try {\n      JobHistoryParser parser \u003d new JobHistoryParser(historyFileAbsolute.getFileSystem(conf), historyFileAbsolute);\n      jobInfo \u003d parser.parse();\n      } catch (IOException e) {\n        throw new YarnException(\"Could not load history file \" + historyFileAbsolute,\n            e);\n      }\n    } else {\n      throw new IOException(\"History file not found\");\n    }\n    \n    if (loadTasks) {\n    for (Map.Entry\u003corg.apache.hadoop.mapreduce.TaskID, TaskInfo\u003e entry : jobInfo\n        .getAllTasks().entrySet()) {\n      TaskId yarnTaskID \u003d TypeConverter.toYarn(entry.getKey());\n      TaskInfo taskInfo \u003d entry.getValue();\n      Task task \u003d new CompletedTask(yarnTaskID, taskInfo);\n      tasks.put(yarnTaskID, task);\n      if (task.getType() \u003d\u003d TaskType.MAP) {\n        mapTasks.put(task.getID(), task);\n      } else if (task.getType() \u003d\u003d TaskType.REDUCE) {\n        reduceTasks.put(task.getID(), task);\n      }\n    }\n    }\n    LOG.info(\"TaskInfo loaded\");\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java"
    }
  }
}