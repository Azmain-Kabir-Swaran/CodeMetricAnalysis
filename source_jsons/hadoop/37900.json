{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupMappingPlacementRule.java",
  "functionName": "getPlacementForApp",
  "functionId": "getPlacementForApp___asc-ApplicationSubmissionContext__user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
  "functionStartLine": 227,
  "functionEndLine": 254,
  "numCommitsSeen": 25,
  "timeTaken": 4927,
  "changeHistory": [
    "8fbf8b2eb09448e49297c0e93a6e10ae489e8745",
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
    "5468baa80aa2a3e2a02e9a902deebafd734daf23"
  ],
  "changeHistoryShort": {
    "8fbf8b2eb09448e49297c0e93a6e10ae489e8745": "Ybodychange",
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d": "Ybodychange",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "5468baa80aa2a3e2a02e9a902deebafd734daf23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8fbf8b2eb09448e49297c0e93a6e10ae489e8745": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9722. PlacementRule logs object ID in place of queue name. Contributed by Prabhu Joseph.\n",
      "commitDate": "11/08/19 10:14 PM",
      "commitName": "8fbf8b2eb09448e49297c0e93a6e10ae489e8745",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 160.0,
      "commitsBetweenForRepo": 1176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public ApplicationPlacementContext getPlacementForApp(\n       ApplicationSubmissionContext asc, String user)\n       throws YarnException {\n     String queueName \u003d asc.getQueue();\n     ApplicationId applicationId \u003d asc.getApplicationId();\n     if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n       try {\n         ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n         if (mappedQueue !\u003d null) {\n           // We have a mapping, should we use it?\n           if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n               //queueName will be same as mapped queue name in case of recovery\n               || queueName.equals(mappedQueue.getQueue())\n               || overrideWithQueueMappings) {\n-            LOG.info(\"Application \" + applicationId + \" user \" + user\n-                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n-                + \"] override \" + overrideWithQueueMappings);\n+            LOG.info(\"Application {} user {} mapping [{}] to [{}] override {}\",\n+                applicationId, user, queueName, mappedQueue.getQueue(),\n+                overrideWithQueueMappings);\n             return mappedQueue;\n           }\n         }\n       } catch (IOException ioex) {\n         String message \u003d \"Failed to submit application \" + applicationId +\n             \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n         throw new YarnException(message);\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    String queueName \u003d asc.getQueue();\n    ApplicationId applicationId \u003d asc.getApplicationId();\n    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n      try {\n        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n        if (mappedQueue !\u003d null) {\n          // We have a mapping, should we use it?\n          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n              //queueName will be same as mapped queue name in case of recovery\n              || queueName.equals(mappedQueue.getQueue())\n              || overrideWithQueueMappings) {\n            LOG.info(\"Application {} user {} mapping [{}] to [{}] override {}\",\n                applicationId, user, queueName, mappedQueue.getQueue(),\n                overrideWithQueueMappings);\n            return mappedQueue;\n          }\n        }\n      } catch (IOException ioex) {\n        String message \u003d \"Failed to submit application \" + applicationId +\n            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n        throw new YarnException(message);\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7643. Handle recovery of applications in case of auto-created leaf queue mapping. Contributed by Suma Shivaprasad.\n",
      "commitDate": "13/12/17 9:19 AM",
      "commitName": "cb87e4dc927731e32b0bbcf678bb5600835ff28d",
      "commitAuthor": "Sunil G",
      "commitDateOld": "16/11/17 11:25 AM",
      "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 26.91,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public ApplicationPlacementContext getPlacementForApp(\n       ApplicationSubmissionContext asc, String user)\n       throws YarnException {\n     String queueName \u003d asc.getQueue();\n     ApplicationId applicationId \u003d asc.getApplicationId();\n     if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n       try {\n         ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n         if (mappedQueue !\u003d null) {\n           // We have a mapping, should we use it?\n           if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n+              //queueName will be same as mapped queue name in case of recovery\n+              || queueName.equals(mappedQueue.getQueue())\n               || overrideWithQueueMappings) {\n             LOG.info(\"Application \" + applicationId + \" user \" + user\n                 + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                 + \"] override \" + overrideWithQueueMappings);\n             return mappedQueue;\n           }\n         }\n       } catch (IOException ioex) {\n         String message \u003d \"Failed to submit application \" + applicationId +\n             \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n         throw new YarnException(message);\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    String queueName \u003d asc.getQueue();\n    ApplicationId applicationId \u003d asc.getApplicationId();\n    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n      try {\n        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n        if (mappedQueue !\u003d null) {\n          // We have a mapping, should we use it?\n          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n              //queueName will be same as mapped queue name in case of recovery\n              || queueName.equals(mappedQueue.getQueue())\n              || overrideWithQueueMappings) {\n            LOG.info(\"Application \" + applicationId + \" user \" + user\n                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                + \"] override \" + overrideWithQueueMappings);\n            return mappedQueue;\n          }\n        }\n      } catch (IOException ioex) {\n        String message \u003d \"Failed to submit application \" + applicationId +\n            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n        throw new YarnException(message);\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/15 12:39 AM",
          "commitNameOld": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 793.49,
          "commitsBetweenForRepo": 5440,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public String getQueueForApp(ApplicationSubmissionContext asc, String user)\n+  public ApplicationPlacementContext getPlacementForApp(\n+      ApplicationSubmissionContext asc, String user)\n       throws YarnException {\n     String queueName \u003d asc.getQueue();\n     ApplicationId applicationId \u003d asc.getApplicationId();\n     if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n       try {\n-        String mappedQueue \u003d getMappedQueue(user);\n+        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n         if (mappedQueue !\u003d null) {\n           // We have a mapping, should we use it?\n           if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n               || overrideWithQueueMappings) {\n             LOG.info(\"Application \" + applicationId + \" user \" + user\n                 + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                 + \"] override \" + overrideWithQueueMappings);\n             return mappedQueue;\n           }\n         }\n       } catch (IOException ioex) {\n         String message \u003d \"Failed to submit application \" + applicationId +\n             \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n         throw new YarnException(message);\n       }\n     }\n-    \n-    return queueName;\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    String queueName \u003d asc.getQueue();\n    ApplicationId applicationId \u003d asc.getApplicationId();\n    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n      try {\n        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n        if (mappedQueue !\u003d null) {\n          // We have a mapping, should we use it?\n          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n              || overrideWithQueueMappings) {\n            LOG.info(\"Application \" + applicationId + \" user \" + user\n                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                + \"] override \" + overrideWithQueueMappings);\n            return mappedQueue;\n          }\n        }\n      } catch (IOException ioex) {\n        String message \u003d \"Failed to submit application \" + applicationId +\n            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n        throw new YarnException(message);\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
          "extendedDetails": {
            "oldValue": "getQueueForApp",
            "newValue": "getPlacementForApp"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/15 12:39 AM",
          "commitNameOld": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 793.49,
          "commitsBetweenForRepo": 5440,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public String getQueueForApp(ApplicationSubmissionContext asc, String user)\n+  public ApplicationPlacementContext getPlacementForApp(\n+      ApplicationSubmissionContext asc, String user)\n       throws YarnException {\n     String queueName \u003d asc.getQueue();\n     ApplicationId applicationId \u003d asc.getApplicationId();\n     if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n       try {\n-        String mappedQueue \u003d getMappedQueue(user);\n+        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n         if (mappedQueue !\u003d null) {\n           // We have a mapping, should we use it?\n           if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n               || overrideWithQueueMappings) {\n             LOG.info(\"Application \" + applicationId + \" user \" + user\n                 + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                 + \"] override \" + overrideWithQueueMappings);\n             return mappedQueue;\n           }\n         }\n       } catch (IOException ioex) {\n         String message \u003d \"Failed to submit application \" + applicationId +\n             \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n         throw new YarnException(message);\n       }\n     }\n-    \n-    return queueName;\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    String queueName \u003d asc.getQueue();\n    ApplicationId applicationId \u003d asc.getApplicationId();\n    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n      try {\n        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n        if (mappedQueue !\u003d null) {\n          // We have a mapping, should we use it?\n          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n              || overrideWithQueueMappings) {\n            LOG.info(\"Application \" + applicationId + \" user \" + user\n                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                + \"] override \" + overrideWithQueueMappings);\n            return mappedQueue;\n          }\n        }\n      } catch (IOException ioex) {\n        String message \u003d \"Failed to submit application \" + applicationId +\n            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n        throw new YarnException(message);\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "ApplicationPlacementContext"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/15 12:39 AM",
          "commitNameOld": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 793.49,
          "commitsBetweenForRepo": 5440,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  public String getQueueForApp(ApplicationSubmissionContext asc, String user)\n+  public ApplicationPlacementContext getPlacementForApp(\n+      ApplicationSubmissionContext asc, String user)\n       throws YarnException {\n     String queueName \u003d asc.getQueue();\n     ApplicationId applicationId \u003d asc.getApplicationId();\n     if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n       try {\n-        String mappedQueue \u003d getMappedQueue(user);\n+        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n         if (mappedQueue !\u003d null) {\n           // We have a mapping, should we use it?\n           if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n               || overrideWithQueueMappings) {\n             LOG.info(\"Application \" + applicationId + \" user \" + user\n                 + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                 + \"] override \" + overrideWithQueueMappings);\n             return mappedQueue;\n           }\n         }\n       } catch (IOException ioex) {\n         String message \u003d \"Failed to submit application \" + applicationId +\n             \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n         throw new YarnException(message);\n       }\n     }\n-    \n-    return queueName;\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    String queueName \u003d asc.getQueue();\n    ApplicationId applicationId \u003d asc.getApplicationId();\n    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n      try {\n        ApplicationPlacementContext mappedQueue \u003d getPlacementForUser(user);\n        if (mappedQueue !\u003d null) {\n          // We have a mapping, should we use it?\n          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n              || overrideWithQueueMappings) {\n            LOG.info(\"Application \" + applicationId + \" user \" + user\n                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                + \"] override \" + overrideWithQueueMappings);\n            return mappedQueue;\n          }\n        }\n      } catch (IOException ioex) {\n        String message \u003d \"Failed to submit application \" + applicationId +\n            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n        throw new YarnException(message);\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
          "extendedDetails": {}
        }
      ]
    },
    "5468baa80aa2a3e2a02e9a902deebafd734daf23": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3635. Refactored current queue mapping implementation in CapacityScheduler to use a generic PlacementManager framework. Contributed by Wangda Tan\n",
      "commitDate": "15/09/15 12:39 AM",
      "commitName": "5468baa80aa2a3e2a02e9a902deebafd734daf23",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,26 @@\n+  public String getQueueForApp(ApplicationSubmissionContext asc, String user)\n+      throws YarnException {\n+    String queueName \u003d asc.getQueue();\n+    ApplicationId applicationId \u003d asc.getApplicationId();\n+    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n+      try {\n+        String mappedQueue \u003d getMappedQueue(user);\n+        if (mappedQueue !\u003d null) {\n+          // We have a mapping, should we use it?\n+          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n+              || overrideWithQueueMappings) {\n+            LOG.info(\"Application \" + applicationId + \" user \" + user\n+                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n+                + \"] override \" + overrideWithQueueMappings);\n+            return mappedQueue;\n+          }\n+        }\n+      } catch (IOException ioex) {\n+        String message \u003d \"Failed to submit application \" + applicationId +\n+            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n+        throw new YarnException(message);\n+      }\n+    }\n+    \n+    return queueName;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getQueueForApp(ApplicationSubmissionContext asc, String user)\n      throws YarnException {\n    String queueName \u003d asc.getQueue();\n    ApplicationId applicationId \u003d asc.getApplicationId();\n    if (mappings !\u003d null \u0026\u0026 mappings.size() \u003e 0) {\n      try {\n        String mappedQueue \u003d getMappedQueue(user);\n        if (mappedQueue !\u003d null) {\n          // We have a mapping, should we use it?\n          if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)\n              || overrideWithQueueMappings) {\n            LOG.info(\"Application \" + applicationId + \" user \" + user\n                + \" mapping [\" + queueName + \"] to [\" + mappedQueue\n                + \"] override \" + overrideWithQueueMappings);\n            return mappedQueue;\n          }\n        }\n      } catch (IOException ioex) {\n        String message \u003d \"Failed to submit application \" + applicationId +\n            \" submitted by user \" + user + \" reason: \" + ioex.getMessage();\n        throw new YarnException(message);\n      }\n    }\n    \n    return queueName;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java"
    }
  }
}