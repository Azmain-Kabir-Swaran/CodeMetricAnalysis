{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Log4jWarningErrorMetricsAppender.java",
  "functionName": "updateMessageDetails",
  "functionId": "updateMessageDetails___message-String__eventTimeSeconds-Long__map-Map__String,SortedMap__Long,Integer______timestampsCount-SortedMap__Long,Integer____purgeInformation-SortedSet__PurgeElement__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Log4jWarningErrorMetricsAppender.java",
  "functionStartLine": 180,
  "functionEndLine": 211,
  "numCommitsSeen": 2,
  "timeTaken": 555,
  "changeHistory": [
    "bad070fe15a642cc6f3a165612fbd272187e03cb"
  ],
  "changeHistoryShort": {
    "bad070fe15a642cc6f3a165612fbd272187e03cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bad070fe15a642cc6f3a165612fbd272187e03cb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2901. Add errors and warning metrics page to RM, NM web UI. (Varun Vasudev via wangda)\n",
      "commitDate": "02/04/15 5:23 PM",
      "commitName": "bad070fe15a642cc6f3a165612fbd272187e03cb",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,32 @@\n+  private void updateMessageDetails(String message, Long eventTimeSeconds,\n+      Map\u003cString, SortedMap\u003cLong, Integer\u003e\u003e map,\n+      SortedMap\u003cLong, Integer\u003e timestampsCount,\n+      SortedSet\u003cPurgeElement\u003e purgeInformation) {\n+    synchronized (lock) {\n+      if (map.containsKey(message)) {\n+        SortedMap\u003cLong, Integer\u003e tmp \u003d map.get(message);\n+        Long lastMessageTime \u003d tmp.lastKey();\n+        int value \u003d 1;\n+        if (tmp.containsKey(eventTimeSeconds)) {\n+          value \u003d tmp.get(eventTimeSeconds) + 1;\n+        }\n+        tmp.put(eventTimeSeconds, value);\n+        purgeInformation.remove(new PurgeElement(message, lastMessageTime));\n+      } else {\n+        SortedMap\u003cLong, Integer\u003e value \u003d new TreeMap\u003c\u003e();\n+        value.put(eventTimeSeconds, 1);\n+        map.put(message, value);\n+        if (map.size() \u003e maxUniqueMessages * 2) {\n+          cleanupTimer.cancel();\n+          cleanupTimer \u003d new Timer();\n+          cleanupTimer.schedule(new ErrorAndWarningsCleanup(), 0);\n+        }\n+      }\n+      purgeInformation.add(new PurgeElement(message, eventTimeSeconds));\n+      int newValue \u003d 1;\n+      if (timestampsCount.containsKey(eventTimeSeconds)) {\n+        newValue \u003d timestampsCount.get(eventTimeSeconds) + 1;\n+      }\n+      timestampsCount.put(eventTimeSeconds, newValue);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateMessageDetails(String message, Long eventTimeSeconds,\n      Map\u003cString, SortedMap\u003cLong, Integer\u003e\u003e map,\n      SortedMap\u003cLong, Integer\u003e timestampsCount,\n      SortedSet\u003cPurgeElement\u003e purgeInformation) {\n    synchronized (lock) {\n      if (map.containsKey(message)) {\n        SortedMap\u003cLong, Integer\u003e tmp \u003d map.get(message);\n        Long lastMessageTime \u003d tmp.lastKey();\n        int value \u003d 1;\n        if (tmp.containsKey(eventTimeSeconds)) {\n          value \u003d tmp.get(eventTimeSeconds) + 1;\n        }\n        tmp.put(eventTimeSeconds, value);\n        purgeInformation.remove(new PurgeElement(message, lastMessageTime));\n      } else {\n        SortedMap\u003cLong, Integer\u003e value \u003d new TreeMap\u003c\u003e();\n        value.put(eventTimeSeconds, 1);\n        map.put(message, value);\n        if (map.size() \u003e maxUniqueMessages * 2) {\n          cleanupTimer.cancel();\n          cleanupTimer \u003d new Timer();\n          cleanupTimer.schedule(new ErrorAndWarningsCleanup(), 0);\n        }\n      }\n      purgeInformation.add(new PurgeElement(message, eventTimeSeconds));\n      int newValue \u003d 1;\n      if (timestampsCount.containsKey(eventTimeSeconds)) {\n        newValue \u003d timestampsCount.get(eventTimeSeconds) + 1;\n      }\n      timestampsCount.put(eventTimeSeconds, newValue);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Log4jWarningErrorMetricsAppender.java"
    }
  }
}