{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceUtils.java",
  "functionName": "putAllJars",
  "functionId": "putAllJars___providerResources-Map__String,LocalResource____sliderFileSystem-SliderFileSystem__tempPath-Path__libDir-String__srcPath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
  "functionStartLine": 401,
  "functionEndLine": 423,
  "numCommitsSeen": 26,
  "timeTaken": 4469,
  "changeHistory": [
    "989c75109a619deeaee7461864e7cb3c289c9421",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec"
  ],
  "changeHistoryShort": {
    "989c75109a619deeaee7461864e7cb3c289c9421": "Ybodychange",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ymultichange(Yfilerename,Ybodychange)",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "989c75109a619deeaee7461864e7cb3c289c9421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7543.  Add check for max cpu limit and missing file for YARN service.\n            (Contributed by Jian He)\n",
      "commitDate": "19/12/17 1:45 PM",
      "commitName": "989c75109a619deeaee7461864e7cb3c289c9421",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/12/17 12:11 PM",
      "commitNameOld": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                 SliderFileSystem sliderFileSystem,\n                                 Path tempPath,\n                                 String libDir,\n                                 String srcPath) throws IOException, SliderException {\n     log.debug(\"Loading all dependencies from {}\", srcPath);\n     if (ServiceUtils.isSet(srcPath)) {\n       File srcFolder \u003d new File(srcPath);\n       FilenameFilter jarFilter \u003d createJarFilter();\n       File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n       if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n         return;\n       }\n       for (File jarFile : listOfJars) {\n+        if (!jarFile.exists()) {\n+          log.debug(\"File does not exist, skipping: \" + jarFile);\n+          continue;\n+        }\n         LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n         providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath) throws IOException, SliderException {\n    log.debug(\"Loading all dependencies from {}\", srcPath);\n    if (ServiceUtils.isSet(srcPath)) {\n      File srcFolder \u003d new File(srcPath);\n      FilenameFilter jarFilter \u003d createJarFilter();\n      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n        return;\n      }\n      for (File jarFile : listOfJars) {\n        if (!jarFile.exists()) {\n          log.debug(\"File does not exist, skipping: \" + jarFile);\n          continue;\n        }\n        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
      "extendedDetails": {}
    },
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n   public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                 SliderFileSystem sliderFileSystem,\n                                 Path tempPath,\n                                 String libDir,\n                                 String srcPath) throws IOException, SliderException {\n-    log.info(\"Loading all dependencies from {}\", srcPath);\n-    if (SliderUtils.isSet(srcPath)) {\n+    log.debug(\"Loading all dependencies from {}\", srcPath);\n+    if (ServiceUtils.isSet(srcPath)) {\n       File srcFolder \u003d new File(srcPath);\n       FilenameFilter jarFilter \u003d createJarFilter();\n       File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n       if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n         return;\n       }\n       for (File jarFile : listOfJars) {\n         LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n         providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath) throws IOException, SliderException {\n    log.debug(\"Loading all dependencies from {}\", srcPath);\n    if (ServiceUtils.isSet(srcPath)) {\n      File srcFolder \u003d new File(srcPath);\n      FilenameFilter jarFilter \u003d createJarFilter();\n      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n        return;\n      }\n      for (File jarFile : listOfJars) {\n        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n   public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                 SliderFileSystem sliderFileSystem,\n                                 Path tempPath,\n                                 String libDir,\n                                 String srcPath) throws IOException, SliderException {\n-    log.info(\"Loading all dependencies from {}\", srcPath);\n-    if (SliderUtils.isSet(srcPath)) {\n+    log.debug(\"Loading all dependencies from {}\", srcPath);\n+    if (ServiceUtils.isSet(srcPath)) {\n       File srcFolder \u003d new File(srcPath);\n       FilenameFilter jarFilter \u003d createJarFilter();\n       File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n       if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n         return;\n       }\n       for (File jarFile : listOfJars) {\n         LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n         providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath) throws IOException, SliderException {\n    log.debug(\"Loading all dependencies from {}\", srcPath);\n    if (ServiceUtils.isSet(srcPath)) {\n      File srcFolder \u003d new File(srcPath);\n      FilenameFilter jarFilter \u003d createJarFilter();\n      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n        return;\n      }\n      for (File jarFile : listOfJars) {\n        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath) throws IOException, SliderException {\n    log.info(\"Loading all dependencies from {}\", srcPath);\n    if (SliderUtils.isSet(srcPath)) {\n      File srcFolder \u003d new File(srcPath);\n      FilenameFilter jarFilter \u003d createJarFilter();\n      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n        return;\n      }\n      for (File jarFile : listOfJars) {\n        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath) throws IOException, SliderException {\n    log.info(\"Loading all dependencies from {}\", srcPath);\n    if (SliderUtils.isSet(srcPath)) {\n      File srcFolder \u003d new File(srcPath);\n      FilenameFilter jarFilter \u003d createJarFilter();\n      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n        return;\n      }\n      for (File jarFile : listOfJars) {\n        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
        "oldMethodName": "putAllJars",
        "newMethodName": "putAllJars"
      }
    },
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5461. Initial code ported from slider-core module. (jianhe)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,19 @@\n+  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n+                                SliderFileSystem sliderFileSystem,\n+                                Path tempPath,\n+                                String libDir,\n+                                String srcPath) throws IOException, SliderException {\n+    log.info(\"Loading all dependencies from {}\", srcPath);\n+    if (SliderUtils.isSet(srcPath)) {\n+      File srcFolder \u003d new File(srcPath);\n+      FilenameFilter jarFilter \u003d createJarFilter();\n+      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n+      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n+        return;\n+      }\n+      for (File jarFile : listOfJars) {\n+        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n+        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void putAllJars(Map\u003cString, LocalResource\u003e providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath) throws IOException, SliderException {\n    log.info(\"Loading all dependencies from {}\", srcPath);\n    if (SliderUtils.isSet(srcPath)) {\n      File srcFolder \u003d new File(srcPath);\n      FilenameFilter jarFilter \u003d createJarFilter();\n      File[] listOfJars \u003d srcFolder.listFiles(jarFilter);\n      if (listOfJars \u003d\u003d null || listOfJars.length \u003d\u003d 0) {\n        return;\n      }\n      for (File jarFile : listOfJars) {\n        LocalResource res \u003d sliderFileSystem.submitFile(jarFile, tempPath, libDir, jarFile.getName());\n        providerResources.put(libDir + \"/\" + jarFile.getName(), res);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java"
    }
  }
}