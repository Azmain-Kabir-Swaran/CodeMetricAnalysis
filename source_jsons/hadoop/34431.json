{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationService.java",
  "functionName": "getPathForLocalization",
  "functionId": "getPathForLocalization___rsrc-LocalResource__tracker-LocalResourcesTracker",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
  "functionStartLine": 1231,
  "functionEndLine": 1248,
  "numCommitsSeen": 150,
  "timeTaken": 3840,
  "changeHistory": [
    "7ffb9943b8838a3bb56684e0722db40d800743a2",
    "854d25b0c30fd40f640c052e79a8747741492042",
    "66598697a6e777615334ebde5ba7738135da83ae",
    "ffd7dbb34a661e516cef991975cefb31e9d2f2db",
    "3a54a5653bf1ea0b5b98e223c7500a9606abf04d",
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a"
  ],
  "changeHistoryShort": {
    "7ffb9943b8838a3bb56684e0722db40d800743a2": "Ymultichange(Yparameterchange,Ybodychange)",
    "854d25b0c30fd40f640c052e79a8747741492042": "Ybodychange",
    "66598697a6e777615334ebde5ba7738135da83ae": "Ybodychange",
    "ffd7dbb34a661e516cef991975cefb31e9d2f2db": "Ybodychange",
    "3a54a5653bf1ea0b5b98e223c7500a9606abf04d": "Ybodychange",
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ffb9943b8838a3bb56684e0722db40d800743a2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4355. NPE while processing localizer heartbeat. Contributed by Varun Saxena \u0026 Jonathan Hung.\n",
      "commitDate": "15/11/16 2:11 AM",
      "commitName": "7ffb9943b8838a3bb56684e0722db40d800743a2",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4355. NPE while processing localizer heartbeat. Contributed by Varun Saxena \u0026 Jonathan Hung.\n",
          "commitDate": "15/11/16 2:11 AM",
          "commitName": "7ffb9943b8838a3bb56684e0722db40d800743a2",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "28/10/16 8:58 AM",
          "commitNameOld": "1b79c417dca17bcd2e031864bc6ca07254c61b47",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 17.76,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n-    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n-        URISyntaxException {\n+    private Path getPathForLocalization(LocalResource rsrc,\n+        LocalResourcesTracker tracker) throws IOException, URISyntaxException {\n       String user \u003d context.getUser();\n       ApplicationId appId \u003d\n           context.getContainerId().getApplicationAttemptId().getApplicationId();\n       LocalResourceVisibility vis \u003d rsrc.getVisibility();\n-      LocalResourcesTracker tracker \u003d\n-          getLocalResourcesTracker(vis, user, appId);\n       String cacheDirectory \u003d null;\n       if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n         cacheDirectory \u003d getUserFileCachePath(user);\n       } else {// APPLICATION ONLY\n         cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n       }\n       Path dirPath \u003d\n           dirsHandler.getLocalPathForWrite(cacheDirectory,\n             ContainerLocalizer.getEstimatedSize(rsrc), false);\n       return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n           dirPath, delService);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Path getPathForLocalization(LocalResource rsrc,\n        LocalResourcesTracker tracker) throws IOException, URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n          dirPath, delService);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
          "extendedDetails": {
            "oldValue": "[rsrc-LocalResource]",
            "newValue": "[rsrc-LocalResource, tracker-LocalResourcesTracker]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4355. NPE while processing localizer heartbeat. Contributed by Varun Saxena \u0026 Jonathan Hung.\n",
          "commitDate": "15/11/16 2:11 AM",
          "commitName": "7ffb9943b8838a3bb56684e0722db40d800743a2",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "28/10/16 8:58 AM",
          "commitNameOld": "1b79c417dca17bcd2e031864bc6ca07254c61b47",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 17.76,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n-    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n-        URISyntaxException {\n+    private Path getPathForLocalization(LocalResource rsrc,\n+        LocalResourcesTracker tracker) throws IOException, URISyntaxException {\n       String user \u003d context.getUser();\n       ApplicationId appId \u003d\n           context.getContainerId().getApplicationAttemptId().getApplicationId();\n       LocalResourceVisibility vis \u003d rsrc.getVisibility();\n-      LocalResourcesTracker tracker \u003d\n-          getLocalResourcesTracker(vis, user, appId);\n       String cacheDirectory \u003d null;\n       if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n         cacheDirectory \u003d getUserFileCachePath(user);\n       } else {// APPLICATION ONLY\n         cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n       }\n       Path dirPath \u003d\n           dirsHandler.getLocalPathForWrite(cacheDirectory,\n             ContainerLocalizer.getEstimatedSize(rsrc), false);\n       return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n           dirPath, delService);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Path getPathForLocalization(LocalResource rsrc,\n        LocalResourcesTracker tracker) throws IOException, URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n          dirPath, delService);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
          "extendedDetails": {}
        }
      ]
    },
    "854d25b0c30fd40f640c052e79a8747741492042": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3727. For better error recovery, check if the directory exists before using it for localization. Contributed by Zhihai Xu\n",
      "commitDate": "30/09/15 7:59 AM",
      "commitName": "854d25b0c30fd40f640c052e79a8747741492042",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "06/09/15 11:02 PM",
      "commitNameOld": "1dbd8e34a7d97c4d8586da79c980d8f2e0aad61d",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 23.37,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n         URISyntaxException {\n       String user \u003d context.getUser();\n       ApplicationId appId \u003d\n           context.getContainerId().getApplicationAttemptId().getApplicationId();\n       LocalResourceVisibility vis \u003d rsrc.getVisibility();\n       LocalResourcesTracker tracker \u003d\n           getLocalResourcesTracker(vis, user, appId);\n       String cacheDirectory \u003d null;\n       if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n         cacheDirectory \u003d getUserFileCachePath(user);\n       } else {// APPLICATION ONLY\n         cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n       }\n       Path dirPath \u003d\n           dirsHandler.getLocalPathForWrite(cacheDirectory,\n             ContainerLocalizer.getEstimatedSize(rsrc), false);\n       return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n-          dirPath);\n+          dirPath, delService);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n        URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      LocalResourcesTracker tracker \u003d\n          getLocalResourcesTracker(vis, user, appId);\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n          dirPath, delService);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "commitDateOld": "13/03/14 5:30 PM",
      "commitNameOld": "53790d33000cb5804779a56ac3891d0e0e5a904d",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 77.63,
      "commitsBetweenForRepo": 478,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n         URISyntaxException {\n       String user \u003d context.getUser();\n       ApplicationId appId \u003d\n           context.getContainerId().getApplicationAttemptId().getApplicationId();\n       LocalResourceVisibility vis \u003d rsrc.getVisibility();\n       LocalResourcesTracker tracker \u003d\n           getLocalResourcesTracker(vis, user, appId);\n       String cacheDirectory \u003d null;\n       if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n         cacheDirectory \u003d getUserFileCachePath(user);\n       } else {// APPLICATION ONLY\n         cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n       }\n       Path dirPath \u003d\n           dirsHandler.getLocalPathForWrite(cacheDirectory,\n             ContainerLocalizer.getEstimatedSize(rsrc), false);\n-      dirPath \u003d tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n-        dirPath);\n-      return new Path (dirPath, Long.toString(tracker.nextUniqueNumber()));\n+      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n+          dirPath);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n        URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      LocalResourcesTracker tracker \u003d\n          getLocalResourcesTracker(vis, user, appId);\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n          dirPath);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "ffd7dbb34a661e516cef991975cefb31e9d2f2db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-583. Moved application level local resources to be localized under the filecache sub-directory under application directory. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1470812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/04/13 9:37 PM",
      "commitName": "ffd7dbb34a661e516cef991975cefb31e9d2f2db",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/04/13 3:35 PM",
      "commitNameOld": "c570309b078d3c6080e89cd90c7c2157a270aaca",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.25,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n         URISyntaxException {\n       String user \u003d context.getUser();\n       ApplicationId appId \u003d\n           context.getContainerId().getApplicationAttemptId().getApplicationId();\n       LocalResourceVisibility vis \u003d rsrc.getVisibility();\n       LocalResourcesTracker tracker \u003d\n           getLocalResourcesTracker(vis, user, appId);\n       String cacheDirectory \u003d null;\n       if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n         cacheDirectory \u003d getUserFileCachePath(user);\n       } else {// APPLICATION ONLY\n-        cacheDirectory \u003d getUserAppCachePath(user, appId.toString());\n+        cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n       }\n       Path dirPath \u003d\n           dirsHandler.getLocalPathForWrite(cacheDirectory,\n             ContainerLocalizer.getEstimatedSize(rsrc), false);\n       dirPath \u003d tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n         dirPath);\n       return new Path (dirPath, Long.toString(tracker.nextUniqueNumber()));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n        URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      LocalResourcesTracker tracker \u003d\n          getLocalResourcesTracker(vis, user, appId);\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getAppFileCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      dirPath \u003d tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n        dirPath);\n      return new Path (dirPath, Long.toString(tracker.nextUniqueNumber()));\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "3a54a5653bf1ea0b5b98e223c7500a9606abf04d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-112. Fixed a race condition during localization that fails containers. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5138. Fix LocalDistributedCacheManager after YARN-112. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1466196 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/13 12:56 PM",
      "commitName": "3a54a5653bf1ea0b5b98e223c7500a9606abf04d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/04/13 6:33 PM",
      "commitNameOld": "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.77,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n         URISyntaxException {\n       String user \u003d context.getUser();\n       ApplicationId appId \u003d\n           context.getContainerId().getApplicationAttemptId().getApplicationId();\n       LocalResourceVisibility vis \u003d rsrc.getVisibility();\n       LocalResourcesTracker tracker \u003d\n           getLocalResourcesTracker(vis, user, appId);\n       String cacheDirectory \u003d null;\n       if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n         cacheDirectory \u003d getUserFileCachePath(user);\n       } else {// APPLICATION ONLY\n         cacheDirectory \u003d getUserAppCachePath(user, appId.toString());\n       }\n       Path dirPath \u003d\n           dirsHandler.getLocalPathForWrite(cacheDirectory,\n             ContainerLocalizer.getEstimatedSize(rsrc), false);\n-      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n+      dirPath \u003d tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n         dirPath);\n-\n+      return new Path (dirPath, Long.toString(tracker.nextUniqueNumber()));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n        URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      LocalResourcesTracker tracker \u003d\n          getLocalResourcesTracker(vis, user, appId);\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getUserAppCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      dirPath \u003d tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n        dirPath);\n      return new Path (dirPath, Long.toString(tracker.nextUniqueNumber()));\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-99. Modify private distributed cache to localize files such that no local directory hits unix file count limits and thus prevent job failures. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465853 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/04/13 6:33 PM",
      "commitName": "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n+        URISyntaxException {\n+      String user \u003d context.getUser();\n+      ApplicationId appId \u003d\n+          context.getContainerId().getApplicationAttemptId().getApplicationId();\n+      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n+      LocalResourcesTracker tracker \u003d\n+          getLocalResourcesTracker(vis, user, appId);\n+      String cacheDirectory \u003d null;\n+      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n+        cacheDirectory \u003d getUserFileCachePath(user);\n+      } else {// APPLICATION ONLY\n+        cacheDirectory \u003d getUserAppCachePath(user, appId.toString());\n+      }\n+      Path dirPath \u003d\n+          dirsHandler.getLocalPathForWrite(cacheDirectory,\n+            ContainerLocalizer.getEstimatedSize(rsrc), false);\n+      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n+        dirPath);\n+\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Path getPathForLocalization(LocalResource rsrc) throws IOException,\n        URISyntaxException {\n      String user \u003d context.getUser();\n      ApplicationId appId \u003d\n          context.getContainerId().getApplicationAttemptId().getApplicationId();\n      LocalResourceVisibility vis \u003d rsrc.getVisibility();\n      LocalResourcesTracker tracker \u003d\n          getLocalResourcesTracker(vis, user, appId);\n      String cacheDirectory \u003d null;\n      if (vis \u003d\u003d LocalResourceVisibility.PRIVATE) {// PRIVATE Only\n        cacheDirectory \u003d getUserFileCachePath(user);\n      } else {// APPLICATION ONLY\n        cacheDirectory \u003d getUserAppCachePath(user, appId.toString());\n      }\n      Path dirPath \u003d\n          dirsHandler.getLocalPathForWrite(cacheDirectory,\n            ContainerLocalizer.getEstimatedSize(rsrc), false);\n      return tracker.getPathForLocalization(new LocalResourceRequest(rsrc),\n        dirPath);\n\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
    }
  }
}