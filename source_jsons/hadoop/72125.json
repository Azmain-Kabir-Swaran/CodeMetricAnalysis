{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CertificateUtil.java",
  "functionName": "parseRSAPublicKey",
  "functionId": "parseRSAPublicKey___pem-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/CertificateUtil.java",
  "functionStartLine": 43,
  "functionEndLine": 64,
  "numCommitsSeen": 3,
  "timeTaken": 803,
  "changeHistory": [
    "ca4e46a05eb20106d69db481d6ac1988696a9f01",
    "ce635733144456bce6bcf8664c5850ef6b60aa49"
  ],
  "changeHistoryShort": {
    "ca4e46a05eb20106d69db481d6ac1988696a9f01": "Ybodychange",
    "ce635733144456bce6bcf8664c5850ef6b60aa49": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ca4e46a05eb20106d69db481d6ac1988696a9f01": {
      "type": "Ybodychange",
      "commitMessage": "HDDS-1075. Fix CertificateUtil#parseRSAPublicKey charsetName. Contributed by Siddharth Wagle.\n",
      "commitDate": "11/02/19 12:09 PM",
      "commitName": "ca4e46a05eb20106d69db481d6ac1988696a9f01",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "27/04/15 1:25 PM",
      "commitNameOld": "9fec02c069f9bb24b5ee99031917075b4c7a7682",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 1385.99,
      "commitsBetweenForRepo": 10468,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n   public static RSAPublicKey parseRSAPublicKey(String pem) throws ServletException {\n     String fullPem \u003d PEM_HEADER + pem + PEM_FOOTER;\n     PublicKey key \u003d null;\n     try {\n       CertificateFactory fact \u003d CertificateFactory.getInstance(\"X.509\");\n       ByteArrayInputStream is \u003d new ByteArrayInputStream(\n-          fullPem.getBytes(\"UTF8\"));\n+          fullPem.getBytes(StandardCharsets.UTF_8));\n \n       X509Certificate cer \u003d (X509Certificate) fact.generateCertificate(is);\n       key \u003d cer.getPublicKey();\n     } catch (CertificateException ce) {\n       String message \u003d null;\n       if (pem.startsWith(PEM_HEADER)) {\n         message \u003d \"CertificateException - be sure not to include PEM header \"\n             + \"and footer in the PEM configuration element.\";\n       } else {\n         message \u003d \"CertificateException - PEM may be corrupt\";\n       }\n       throw new ServletException(message, ce);\n-    } catch (UnsupportedEncodingException uee) {\n-      throw new ServletException(uee);\n     }\n     return (RSAPublicKey) key;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RSAPublicKey parseRSAPublicKey(String pem) throws ServletException {\n    String fullPem \u003d PEM_HEADER + pem + PEM_FOOTER;\n    PublicKey key \u003d null;\n    try {\n      CertificateFactory fact \u003d CertificateFactory.getInstance(\"X.509\");\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(\n          fullPem.getBytes(StandardCharsets.UTF_8));\n\n      X509Certificate cer \u003d (X509Certificate) fact.generateCertificate(is);\n      key \u003d cer.getPublicKey();\n    } catch (CertificateException ce) {\n      String message \u003d null;\n      if (pem.startsWith(PEM_HEADER)) {\n        message \u003d \"CertificateException - be sure not to include PEM header \"\n            + \"and footer in the PEM configuration element.\";\n      } else {\n        message \u003d \"CertificateException - PEM may be corrupt\";\n      }\n      throw new ServletException(message, ce);\n    }\n    return (RSAPublicKey) key;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/CertificateUtil.java",
      "extendedDetails": {}
    },
    "ce635733144456bce6bcf8664c5850ef6b60aa49": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11717. Support JWT tokens for web single sign on to the Hadoop\nservers. (Larry McCay via omalley)\n",
      "commitDate": "07/04/15 8:09 AM",
      "commitName": "ce635733144456bce6bcf8664c5850ef6b60aa49",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+  public static RSAPublicKey parseRSAPublicKey(String pem) throws ServletException {\n+    String fullPem \u003d PEM_HEADER + pem + PEM_FOOTER;\n+    PublicKey key \u003d null;\n+    try {\n+      CertificateFactory fact \u003d CertificateFactory.getInstance(\"X.509\");\n+      ByteArrayInputStream is \u003d new ByteArrayInputStream(\n+          fullPem.getBytes(\"UTF8\"));\n+\n+      X509Certificate cer \u003d (X509Certificate) fact.generateCertificate(is);\n+      key \u003d cer.getPublicKey();\n+    } catch (CertificateException ce) {\n+      String message \u003d null;\n+      if (pem.startsWith(PEM_HEADER)) {\n+        message \u003d \"CertificateException - be sure not to include PEM header \"\n+            + \"and footer in the PEM configuration element.\";\n+      } else {\n+        message \u003d \"CertificateException - PEM may be corrupt\";\n+      }\n+      throw new ServletException(message, ce);\n+    } catch (UnsupportedEncodingException uee) {\n+      throw new ServletException(uee);\n+    }\n+    return (RSAPublicKey) key;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static RSAPublicKey parseRSAPublicKey(String pem) throws ServletException {\n    String fullPem \u003d PEM_HEADER + pem + PEM_FOOTER;\n    PublicKey key \u003d null;\n    try {\n      CertificateFactory fact \u003d CertificateFactory.getInstance(\"X.509\");\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(\n          fullPem.getBytes(\"UTF8\"));\n\n      X509Certificate cer \u003d (X509Certificate) fact.generateCertificate(is);\n      key \u003d cer.getPublicKey();\n    } catch (CertificateException ce) {\n      String message \u003d null;\n      if (pem.startsWith(PEM_HEADER)) {\n        message \u003d \"CertificateException - be sure not to include PEM header \"\n            + \"and footer in the PEM configuration element.\";\n      } else {\n        message \u003d \"CertificateException - PEM may be corrupt\";\n      }\n      throw new ServletException(message, ce);\n    } catch (UnsupportedEncodingException uee) {\n      throw new ServletException(uee);\n    }\n    return (RSAPublicKey) key;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/CertificateUtil.java"
    }
  }
}