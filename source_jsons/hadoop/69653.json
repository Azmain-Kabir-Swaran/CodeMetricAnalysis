{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystem.java",
  "functionName": "ensureAuthority",
  "functionId": "ensureAuthority___uri-URI__conf-Configuration(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
  "functionStartLine": 970,
  "functionEndLine": 998,
  "numCommitsSeen": 34,
  "timeTaken": 1106,
  "changeHistory": [
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,29 @@\n+  private URI ensureAuthority(URI uri, final Configuration conf) {\n+\n+    Preconditions.checkNotNull(uri, \"uri\");\n+\n+    if (uri.getAuthority() \u003d\u003d null) {\n+      final URI defaultUri \u003d FileSystem.getDefaultUri(conf);\n+\n+      if (defaultUri !\u003d null \u0026\u0026 isAbfsScheme(defaultUri.getScheme())) {\n+        try {\n+          // Reconstruct the URI with the authority from the default URI.\n+          uri \u003d new URI(\n+              uri.getScheme(),\n+              defaultUri.getAuthority(),\n+              uri.getPath(),\n+              uri.getQuery(),\n+              uri.getFragment());\n+        } catch (URISyntaxException e) {\n+          // This should never happen.\n+          throw new IllegalArgumentException(new InvalidUriException(uri.toString()));\n+        }\n+      }\n+    }\n+\n+    if (uri.getAuthority() \u003d\u003d null) {\n+      throw new IllegalArgumentException(new InvalidUriAuthorityException(uri.toString()));\n+    }\n+\n+    return uri;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private URI ensureAuthority(URI uri, final Configuration conf) {\n\n    Preconditions.checkNotNull(uri, \"uri\");\n\n    if (uri.getAuthority() \u003d\u003d null) {\n      final URI defaultUri \u003d FileSystem.getDefaultUri(conf);\n\n      if (defaultUri !\u003d null \u0026\u0026 isAbfsScheme(defaultUri.getScheme())) {\n        try {\n          // Reconstruct the URI with the authority from the default URI.\n          uri \u003d new URI(\n              uri.getScheme(),\n              defaultUri.getAuthority(),\n              uri.getPath(),\n              uri.getQuery(),\n              uri.getFragment());\n        } catch (URISyntaxException e) {\n          // This should never happen.\n          throw new IllegalArgumentException(new InvalidUriException(uri.toString()));\n        }\n      }\n    }\n\n    if (uri.getAuthority() \u003d\u003d null) {\n      throw new IllegalArgumentException(new InvalidUriAuthorityException(uri.toString()));\n    }\n\n    return uri;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java"
    }
  }
}