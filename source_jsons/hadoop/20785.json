{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Cluster.java",
  "functionName": "initialize",
  "functionId": "initialize___jobTrackAddr-InetSocketAddress__conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
  "functionStartLine": 112,
  "functionEndLine": 156,
  "numCommitsSeen": 25,
  "timeTaken": 1865,
  "changeHistory": [
    "6529fe934546395cff73e4246f12f2dda13d2131",
    "0af96a1c08594c809ecb254cee4f60dd22399772",
    "f657b54281d517c69df0a23b97b47befa77d1dc2",
    "9b685773ec1031e90cc2b8aedb42670721757e22",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2",
    "d19cfe01642f9582e1fe5d567beb480399c37a01",
    "94e1703b7250117d6b18ef181f77bc58b5740cf9",
    "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c"
  ],
  "changeHistoryShort": {
    "6529fe934546395cff73e4246f12f2dda13d2131": "Ybodychange",
    "0af96a1c08594c809ecb254cee4f60dd22399772": "Ybodychange",
    "f657b54281d517c69df0a23b97b47befa77d1dc2": "Ybodychange",
    "9b685773ec1031e90cc2b8aedb42670721757e22": "Ybodychange",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": "Ybodychange",
    "d19cfe01642f9582e1fe5d567beb480399c37a01": "Ybodychange",
    "94e1703b7250117d6b18ef181f77bc58b5740cf9": "Ybodychange",
    "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6529fe934546395cff73e4246f12f2dda13d2131": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6748. Enhance logging for Cluster.java around InetSocketAddress (Vrushali C via Varun Saxena)\n",
      "commitDate": "08/08/16 9:19 AM",
      "commitName": "6529fe934546395cff73e4246f12f2dda13d2131",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "08/06/16 12:59 PM",
      "commitNameOld": "0af96a1c08594c809ecb254cee4f60dd22399772",
      "commitAuthorOld": "Gera Shegalov",
      "daysBetweenCommits": 60.85,
      "commitsBetweenForRepo": 519,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,45 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n     initProviderList();\n     final IOException initEx \u003d new IOException(\n         \"Cannot initialize Cluster. Please check your configuration for \"\n             + MRConfig.FRAMEWORK_NAME\n             + \" and the correspond server addresses.\");\n+    if (jobTrackAddr !\u003d null) {\n+      LOG.info(\n+          \"Initializing cluster for Job Tracker\u003d\" + jobTrackAddr.toString());\n+    }\n     for (ClientProtocolProvider provider : providerList) {\n       LOG.debug(\"Trying ClientProtocolProvider : \"\n           + provider.getClass().getName());\n       ClientProtocol clientProtocol \u003d null;\n       try {\n         if (jobTrackAddr \u003d\u003d null) {\n           clientProtocol \u003d provider.create(conf);\n         } else {\n           clientProtocol \u003d provider.create(jobTrackAddr, conf);\n         }\n \n         if (clientProtocol !\u003d null) {\n           clientProtocolProvider \u003d provider;\n           client \u003d clientProtocol;\n           LOG.debug(\"Picked \" + provider.getClass().getName()\n               + \" as the ClientProtocolProvider\");\n           break;\n         } else {\n           LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n               + \" as the ClientProtocolProvider - returned null protocol\");\n         }\n       } catch (Exception e) {\n         final String errMsg \u003d \"Failed to use \" + provider.getClass().getName()\n             + \" due to error: \";\n         initEx.addSuppressed(new IOException(errMsg, e));\n         LOG.info(errMsg, e);\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n       throw initEx;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    initProviderList();\n    final IOException initEx \u003d new IOException(\n        \"Cannot initialize Cluster. Please check your configuration for \"\n            + MRConfig.FRAMEWORK_NAME\n            + \" and the correspond server addresses.\");\n    if (jobTrackAddr !\u003d null) {\n      LOG.info(\n          \"Initializing cluster for Job Tracker\u003d\" + jobTrackAddr.toString());\n    }\n    for (ClientProtocolProvider provider : providerList) {\n      LOG.debug(\"Trying ClientProtocolProvider : \"\n          + provider.getClass().getName());\n      ClientProtocol clientProtocol \u003d null;\n      try {\n        if (jobTrackAddr \u003d\u003d null) {\n          clientProtocol \u003d provider.create(conf);\n        } else {\n          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n        }\n\n        if (clientProtocol !\u003d null) {\n          clientProtocolProvider \u003d provider;\n          client \u003d clientProtocol;\n          LOG.debug(\"Picked \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider\");\n          break;\n        } else {\n          LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider - returned null protocol\");\n        }\n      } catch (Exception e) {\n        final String errMsg \u003d \"Failed to use \" + provider.getClass().getName()\n            + \" due to error: \";\n        initEx.addSuppressed(new IOException(errMsg, e));\n        LOG.info(errMsg, e);\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw initEx;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "0af96a1c08594c809ecb254cee4f60dd22399772": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6240. Hadoop client displays confusing error message. (gera)\n",
      "commitDate": "08/06/16 12:59 PM",
      "commitName": "0af96a1c08594c809ecb254cee4f60dd22399772",
      "commitAuthor": "Gera Shegalov",
      "commitDateOld": "12/01/16 3:56 PM",
      "commitNameOld": "f657b54281d517c69df0a23b97b47befa77d1dc2",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 147.84,
      "commitsBetweenForRepo": 976,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,41 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n     initProviderList();\n+    final IOException initEx \u003d new IOException(\n+        \"Cannot initialize Cluster. Please check your configuration for \"\n+            + MRConfig.FRAMEWORK_NAME\n+            + \" and the correspond server addresses.\");\n     for (ClientProtocolProvider provider : providerList) {\n       LOG.debug(\"Trying ClientProtocolProvider : \"\n           + provider.getClass().getName());\n       ClientProtocol clientProtocol \u003d null;\n       try {\n         if (jobTrackAddr \u003d\u003d null) {\n           clientProtocol \u003d provider.create(conf);\n         } else {\n           clientProtocol \u003d provider.create(jobTrackAddr, conf);\n         }\n \n         if (clientProtocol !\u003d null) {\n           clientProtocolProvider \u003d provider;\n           client \u003d clientProtocol;\n           LOG.debug(\"Picked \" + provider.getClass().getName()\n               + \" as the ClientProtocolProvider\");\n           break;\n         } else {\n           LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n               + \" as the ClientProtocolProvider - returned null protocol\");\n         }\n       } catch (Exception e) {\n-        LOG.info(\"Failed to use \" + provider.getClass().getName()\n-            + \" due to error: \", e);\n+        final String errMsg \u003d \"Failed to use \" + provider.getClass().getName()\n+            + \" due to error: \";\n+        initEx.addSuppressed(new IOException(errMsg, e));\n+        LOG.info(errMsg, e);\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n-      throw new IOException(\n-          \"Cannot initialize Cluster. Please check your configuration for \"\n-              + MRConfig.FRAMEWORK_NAME\n-              + \" and the correspond server addresses.\");\n+      throw initEx;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    initProviderList();\n    final IOException initEx \u003d new IOException(\n        \"Cannot initialize Cluster. Please check your configuration for \"\n            + MRConfig.FRAMEWORK_NAME\n            + \" and the correspond server addresses.\");\n    for (ClientProtocolProvider provider : providerList) {\n      LOG.debug(\"Trying ClientProtocolProvider : \"\n          + provider.getClass().getName());\n      ClientProtocol clientProtocol \u003d null;\n      try {\n        if (jobTrackAddr \u003d\u003d null) {\n          clientProtocol \u003d provider.create(conf);\n        } else {\n          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n        }\n\n        if (clientProtocol !\u003d null) {\n          clientProtocolProvider \u003d provider;\n          client \u003d clientProtocol;\n          LOG.debug(\"Picked \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider\");\n          break;\n        } else {\n          LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider - returned null protocol\");\n        }\n      } catch (Exception e) {\n        final String errMsg \u003d \"Failed to use \" + provider.getClass().getName()\n            + \" due to error: \";\n        initEx.addSuppressed(new IOException(errMsg, e));\n        LOG.info(errMsg, e);\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw initEx;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "f657b54281d517c69df0a23b97b47befa77d1dc2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6473. Job submission can take a long time during Cluster initialization. Contributed by Kuhu Shukla\n",
      "commitDate": "12/01/16 3:56 PM",
      "commitName": "f657b54281d517c69df0a23b97b47befa77d1dc2",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "04/09/15 7:21 PM",
      "commitNameOld": "9b685773ec1031e90cc2b8aedb42670721757e22",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 129.9,
      "commitsBetweenForRepo": 882,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,38 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n-    synchronized (frameworkLoader) {\n-      for (ClientProtocolProvider provider : frameworkLoader) {\n-        LOG.debug(\"Trying ClientProtocolProvider : \"\n-            + provider.getClass().getName());\n-        ClientProtocol clientProtocol \u003d null; \n-        try {\n-          if (jobTrackAddr \u003d\u003d null) {\n-            clientProtocol \u003d provider.create(conf);\n-          } else {\n-            clientProtocol \u003d provider.create(jobTrackAddr, conf);\n-          }\n-\n-          if (clientProtocol !\u003d null) {\n-            clientProtocolProvider \u003d provider;\n-            client \u003d clientProtocol;\n-            LOG.debug(\"Picked \" + provider.getClass().getName()\n-                + \" as the ClientProtocolProvider\");\n-            break;\n-          }\n-          else {\n-            LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n-                + \" as the ClientProtocolProvider - returned null protocol\");\n-          }\n-        } \n-        catch (Exception e) {\n-          LOG.info(\"Failed to use \" + provider.getClass().getName()\n-              + \" due to error: \", e);\n+    initProviderList();\n+    for (ClientProtocolProvider provider : providerList) {\n+      LOG.debug(\"Trying ClientProtocolProvider : \"\n+          + provider.getClass().getName());\n+      ClientProtocol clientProtocol \u003d null;\n+      try {\n+        if (jobTrackAddr \u003d\u003d null) {\n+          clientProtocol \u003d provider.create(conf);\n+        } else {\n+          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n         }\n+\n+        if (clientProtocol !\u003d null) {\n+          clientProtocolProvider \u003d provider;\n+          client \u003d clientProtocol;\n+          LOG.debug(\"Picked \" + provider.getClass().getName()\n+              + \" as the ClientProtocolProvider\");\n+          break;\n+        } else {\n+          LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n+              + \" as the ClientProtocolProvider - returned null protocol\");\n+        }\n+      } catch (Exception e) {\n+        LOG.info(\"Failed to use \" + provider.getClass().getName()\n+            + \" due to error: \", e);\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n       throw new IOException(\n           \"Cannot initialize Cluster. Please check your configuration for \"\n               + MRConfig.FRAMEWORK_NAME\n               + \" and the correspond server addresses.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    initProviderList();\n    for (ClientProtocolProvider provider : providerList) {\n      LOG.debug(\"Trying ClientProtocolProvider : \"\n          + provider.getClass().getName());\n      ClientProtocol clientProtocol \u003d null;\n      try {\n        if (jobTrackAddr \u003d\u003d null) {\n          clientProtocol \u003d provider.create(conf);\n        } else {\n          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n        }\n\n        if (clientProtocol !\u003d null) {\n          clientProtocolProvider \u003d provider;\n          client \u003d clientProtocol;\n          LOG.debug(\"Picked \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider\");\n          break;\n        } else {\n          LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider - returned null protocol\");\n        }\n      } catch (Exception e) {\n        LOG.info(\"Failed to use \" + provider.getClass().getName()\n            + \" due to error: \", e);\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw new IOException(\n          \"Cannot initialize Cluster. Please check your configuration for \"\n              + MRConfig.FRAMEWORK_NAME\n              + \" and the correspond server addresses.\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "9b685773ec1031e90cc2b8aedb42670721757e22": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6442. Stack trace is missing when error occurs in client protocol provider\u0027s constructor Contributed by Chang Li.\n",
      "commitDate": "04/09/15 7:21 PM",
      "commitName": "9b685773ec1031e90cc2b8aedb42670721757e22",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 185.72,
      "commitsBetweenForRepo": 1430,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n     synchronized (frameworkLoader) {\n       for (ClientProtocolProvider provider : frameworkLoader) {\n         LOG.debug(\"Trying ClientProtocolProvider : \"\n             + provider.getClass().getName());\n         ClientProtocol clientProtocol \u003d null; \n         try {\n           if (jobTrackAddr \u003d\u003d null) {\n             clientProtocol \u003d provider.create(conf);\n           } else {\n             clientProtocol \u003d provider.create(jobTrackAddr, conf);\n           }\n \n           if (clientProtocol !\u003d null) {\n             clientProtocolProvider \u003d provider;\n             client \u003d clientProtocol;\n             LOG.debug(\"Picked \" + provider.getClass().getName()\n                 + \" as the ClientProtocolProvider\");\n             break;\n           }\n           else {\n             LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n                 + \" as the ClientProtocolProvider - returned null protocol\");\n           }\n         } \n         catch (Exception e) {\n           LOG.info(\"Failed to use \" + provider.getClass().getName()\n-              + \" due to error: \" + e.getMessage());\n+              + \" due to error: \", e);\n         }\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n       throw new IOException(\n           \"Cannot initialize Cluster. Please check your configuration for \"\n               + MRConfig.FRAMEWORK_NAME\n               + \" and the correspond server addresses.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    synchronized (frameworkLoader) {\n      for (ClientProtocolProvider provider : frameworkLoader) {\n        LOG.debug(\"Trying ClientProtocolProvider : \"\n            + provider.getClass().getName());\n        ClientProtocol clientProtocol \u003d null; \n        try {\n          if (jobTrackAddr \u003d\u003d null) {\n            clientProtocol \u003d provider.create(conf);\n          } else {\n            clientProtocol \u003d provider.create(jobTrackAddr, conf);\n          }\n\n          if (clientProtocol !\u003d null) {\n            clientProtocolProvider \u003d provider;\n            client \u003d clientProtocol;\n            LOG.debug(\"Picked \" + provider.getClass().getName()\n                + \" as the ClientProtocolProvider\");\n            break;\n          }\n          else {\n            LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n                + \" as the ClientProtocolProvider - returned null protocol\");\n          }\n        } \n        catch (Exception e) {\n          LOG.info(\"Failed to use \" + provider.getClass().getName()\n              + \" due to error: \", e);\n        }\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw new IOException(\n          \"Cannot initialize Cluster. Please check your configuration for \"\n              + MRConfig.FRAMEWORK_NAME\n              + \" and the correspond server addresses.\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3265. Removed debug logs during job submission to LOG.debug to cut down noise. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1205628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/11/11 2:04 PM",
      "commitName": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/11/11 11:19 AM",
      "commitNameOld": "200bb27557d16f06220c150998e45e7d3d3d302d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 13.11,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n     synchronized (frameworkLoader) {\n       for (ClientProtocolProvider provider : frameworkLoader) {\n         LOG.debug(\"Trying ClientProtocolProvider : \"\n             + provider.getClass().getName());\n         ClientProtocol clientProtocol \u003d null; \n         try {\n           if (jobTrackAddr \u003d\u003d null) {\n             clientProtocol \u003d provider.create(conf);\n           } else {\n             clientProtocol \u003d provider.create(jobTrackAddr, conf);\n           }\n \n           if (clientProtocol !\u003d null) {\n             clientProtocolProvider \u003d provider;\n             client \u003d clientProtocol;\n             LOG.debug(\"Picked \" + provider.getClass().getName()\n                 + \" as the ClientProtocolProvider\");\n             break;\n           }\n           else {\n-            LOG.info(\"Cannot pick \" + provider.getClass().getName()\n+            LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n                 + \" as the ClientProtocolProvider - returned null protocol\");\n           }\n         } \n         catch (Exception e) {\n           LOG.info(\"Failed to use \" + provider.getClass().getName()\n               + \" due to error: \" + e.getMessage());\n         }\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n       throw new IOException(\n           \"Cannot initialize Cluster. Please check your configuration for \"\n               + MRConfig.FRAMEWORK_NAME\n               + \" and the correspond server addresses.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    synchronized (frameworkLoader) {\n      for (ClientProtocolProvider provider : frameworkLoader) {\n        LOG.debug(\"Trying ClientProtocolProvider : \"\n            + provider.getClass().getName());\n        ClientProtocol clientProtocol \u003d null; \n        try {\n          if (jobTrackAddr \u003d\u003d null) {\n            clientProtocol \u003d provider.create(conf);\n          } else {\n            clientProtocol \u003d provider.create(jobTrackAddr, conf);\n          }\n\n          if (clientProtocol !\u003d null) {\n            clientProtocolProvider \u003d provider;\n            client \u003d clientProtocol;\n            LOG.debug(\"Picked \" + provider.getClass().getName()\n                + \" as the ClientProtocolProvider\");\n            break;\n          }\n          else {\n            LOG.debug(\"Cannot pick \" + provider.getClass().getName()\n                + \" as the ClientProtocolProvider - returned null protocol\");\n          }\n        } \n        catch (Exception e) {\n          LOG.info(\"Failed to use \" + provider.getClass().getName()\n              + \" due to error: \" + e.getMessage());\n        }\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw new IOException(\n          \"Cannot initialize Cluster. Please check your configuration for \"\n              + MRConfig.FRAMEWORK_NAME\n              + \" and the correspond server addresses.\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "d19cfe01642f9582e1fe5d567beb480399c37a01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2746. Yarn servers can\u0027t communicate with each other with hadoop.security.authorization set to true (acmurthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:07 PM",
      "commitName": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "19/10/11 10:55 AM",
      "commitNameOld": "94e1703b7250117d6b18ef181f77bc58b5740cf9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.51,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n-    for (ClientProtocolProvider provider : ServiceLoader\n-        .load(ClientProtocolProvider.class)) {\n-      LOG.debug(\"Trying ClientProtocolProvider : \"\n-          + provider.getClass().getName());\n-      ClientProtocol clientProtocol \u003d null; \n-      try {\n-        if (jobTrackAddr \u003d\u003d null) {\n-          clientProtocol \u003d provider.create(conf);\n-        } else {\n-          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n+    synchronized (frameworkLoader) {\n+      for (ClientProtocolProvider provider : frameworkLoader) {\n+        LOG.debug(\"Trying ClientProtocolProvider : \"\n+            + provider.getClass().getName());\n+        ClientProtocol clientProtocol \u003d null; \n+        try {\n+          if (jobTrackAddr \u003d\u003d null) {\n+            clientProtocol \u003d provider.create(conf);\n+          } else {\n+            clientProtocol \u003d provider.create(jobTrackAddr, conf);\n+          }\n+\n+          if (clientProtocol !\u003d null) {\n+            clientProtocolProvider \u003d provider;\n+            client \u003d clientProtocol;\n+            LOG.debug(\"Picked \" + provider.getClass().getName()\n+                + \" as the ClientProtocolProvider\");\n+            break;\n+          }\n+          else {\n+            LOG.info(\"Cannot pick \" + provider.getClass().getName()\n+                + \" as the ClientProtocolProvider - returned null protocol\");\n+          }\n+        } \n+        catch (Exception e) {\n+          LOG.info(\"Failed to use \" + provider.getClass().getName()\n+              + \" due to error: \" + e.getMessage());\n         }\n-  \n-        if (clientProtocol !\u003d null) {\n-          clientProtocolProvider \u003d provider;\n-          client \u003d clientProtocol;\n-          LOG.debug(\"Picked \" + provider.getClass().getName()\n-              + \" as the ClientProtocolProvider\");\n-          break;\n-        }\n-        else {\n-          LOG.info(\"Cannot pick \" + provider.getClass().getName()\n-              + \" as the ClientProtocolProvider - returned null protocol\");\n-        }\n-      } \n-      catch (Exception e) {\n-        LOG.info(\"Failed to use \" + provider.getClass().getName()\n-            + \" due to error: \" + e.getMessage());\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n       throw new IOException(\n           \"Cannot initialize Cluster. Please check your configuration for \"\n               + MRConfig.FRAMEWORK_NAME\n               + \" and the correspond server addresses.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    synchronized (frameworkLoader) {\n      for (ClientProtocolProvider provider : frameworkLoader) {\n        LOG.debug(\"Trying ClientProtocolProvider : \"\n            + provider.getClass().getName());\n        ClientProtocol clientProtocol \u003d null; \n        try {\n          if (jobTrackAddr \u003d\u003d null) {\n            clientProtocol \u003d provider.create(conf);\n          } else {\n            clientProtocol \u003d provider.create(jobTrackAddr, conf);\n          }\n\n          if (clientProtocol !\u003d null) {\n            clientProtocolProvider \u003d provider;\n            client \u003d clientProtocol;\n            LOG.debug(\"Picked \" + provider.getClass().getName()\n                + \" as the ClientProtocolProvider\");\n            break;\n          }\n          else {\n            LOG.info(\"Cannot pick \" + provider.getClass().getName()\n                + \" as the ClientProtocolProvider - returned null protocol\");\n          }\n        } \n        catch (Exception e) {\n          LOG.info(\"Failed to use \" + provider.getClass().getName()\n              + \" due to error: \" + e.getMessage());\n        }\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw new IOException(\n          \"Cannot initialize Cluster. Please check your configuration for \"\n              + MRConfig.FRAMEWORK_NAME\n              + \" and the correspond server addresses.\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "94e1703b7250117d6b18ef181f77bc58b5740cf9": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3176. Fixed ant mapreduce tests that are timing out because of wrong framework name. Contributed by Hitesh Shah.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186368 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/10/11 10:55 AM",
      "commitName": "94e1703b7250117d6b18ef181f77bc58b5740cf9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/10/11 2:49 PM",
      "commitNameOld": "57f99c2b0297c63d01d23a9ab02d80194109a851",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 4.84,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,40 @@\n   private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n       throws IOException {\n \n     for (ClientProtocolProvider provider : ServiceLoader\n         .load(ClientProtocolProvider.class)) {\n-      ClientProtocol clientProtocol \u003d null;\n-      if (jobTrackAddr \u003d\u003d null) {\n-        clientProtocol \u003d provider.create(conf);\n-      } else {\n-        clientProtocol \u003d provider.create(jobTrackAddr, conf);\n-      }\n-\n-      if (clientProtocol !\u003d null) {\n-        clientProtocolProvider \u003d provider;\n-        client \u003d clientProtocol;\n-        break;\n+      LOG.debug(\"Trying ClientProtocolProvider : \"\n+          + provider.getClass().getName());\n+      ClientProtocol clientProtocol \u003d null; \n+      try {\n+        if (jobTrackAddr \u003d\u003d null) {\n+          clientProtocol \u003d provider.create(conf);\n+        } else {\n+          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n+        }\n+  \n+        if (clientProtocol !\u003d null) {\n+          clientProtocolProvider \u003d provider;\n+          client \u003d clientProtocol;\n+          LOG.debug(\"Picked \" + provider.getClass().getName()\n+              + \" as the ClientProtocolProvider\");\n+          break;\n+        }\n+        else {\n+          LOG.info(\"Cannot pick \" + provider.getClass().getName()\n+              + \" as the ClientProtocolProvider - returned null protocol\");\n+        }\n+      } \n+      catch (Exception e) {\n+        LOG.info(\"Failed to use \" + provider.getClass().getName()\n+            + \" due to error: \" + e.getMessage());\n       }\n     }\n \n     if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n       throw new IOException(\n           \"Cannot initialize Cluster. Please check your configuration for \"\n               + MRConfig.FRAMEWORK_NAME\n               + \" and the correspond server addresses.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    for (ClientProtocolProvider provider : ServiceLoader\n        .load(ClientProtocolProvider.class)) {\n      LOG.debug(\"Trying ClientProtocolProvider : \"\n          + provider.getClass().getName());\n      ClientProtocol clientProtocol \u003d null; \n      try {\n        if (jobTrackAddr \u003d\u003d null) {\n          clientProtocol \u003d provider.create(conf);\n        } else {\n          clientProtocol \u003d provider.create(jobTrackAddr, conf);\n        }\n  \n        if (clientProtocol !\u003d null) {\n          clientProtocolProvider \u003d provider;\n          client \u003d clientProtocol;\n          LOG.debug(\"Picked \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider\");\n          break;\n        }\n        else {\n          LOG.info(\"Cannot pick \" + provider.getClass().getName()\n              + \" as the ClientProtocolProvider - returned null protocol\");\n        }\n      } \n      catch (Exception e) {\n        LOG.info(\"Failed to use \" + provider.getClass().getName()\n            + \" due to error: \" + e.getMessage());\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw new IOException(\n          \"Cannot initialize Cluster. Please check your configuration for \"\n              + MRConfig.FRAMEWORK_NAME\n              + \" and the correspond server addresses.\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java",
      "extendedDetails": {}
    },
    "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2970. Fixed NPEs in corner cases with different configurations for mapreduce.framework.name. Contributed by Venu Gopala Rao.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173534 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/11 2:13 AM",
      "commitName": "af61f4ae15adf3bf6c863945f8c8e3ea7b12320c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,26 @@\n+  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n+      throws IOException {\n+\n+    for (ClientProtocolProvider provider : ServiceLoader\n+        .load(ClientProtocolProvider.class)) {\n+      ClientProtocol clientProtocol \u003d null;\n+      if (jobTrackAddr \u003d\u003d null) {\n+        clientProtocol \u003d provider.create(conf);\n+      } else {\n+        clientProtocol \u003d provider.create(jobTrackAddr, conf);\n+      }\n+\n+      if (clientProtocol !\u003d null) {\n+        clientProtocolProvider \u003d provider;\n+        client \u003d clientProtocol;\n+        break;\n+      }\n+    }\n+\n+    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n+      throw new IOException(\n+          \"Cannot initialize Cluster. Please check your configuration for \"\n+              + MRConfig.FRAMEWORK_NAME\n+              + \" and the correspond server addresses.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(InetSocketAddress jobTrackAddr, Configuration conf)\n      throws IOException {\n\n    for (ClientProtocolProvider provider : ServiceLoader\n        .load(ClientProtocolProvider.class)) {\n      ClientProtocol clientProtocol \u003d null;\n      if (jobTrackAddr \u003d\u003d null) {\n        clientProtocol \u003d provider.create(conf);\n      } else {\n        clientProtocol \u003d provider.create(jobTrackAddr, conf);\n      }\n\n      if (clientProtocol !\u003d null) {\n        clientProtocolProvider \u003d provider;\n        client \u003d clientProtocol;\n        break;\n      }\n    }\n\n    if (null \u003d\u003d clientProtocolProvider || null \u003d\u003d client) {\n      throw new IOException(\n          \"Cannot initialize Cluster. Please check your configuration for \"\n              + MRConfig.FRAMEWORK_NAME\n              + \" and the correspond server addresses.\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java"
    }
  }
}