{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockChecksumHelper.java",
  "functionName": "getInternalBlock",
  "functionId": "getInternalBlock___numDataUnits-int__idx-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockChecksumHelper.java",
  "functionStartLine": 580,
  "functionEndLine": 592,
  "numCommitsSeen": 8,
  "timeTaken": 907,
  "changeHistory": [
    "e6cb07520f935efde3e881de8f84ee7f6e0a746f"
  ],
  "changeHistoryShort": {
    "e6cb07520f935efde3e881de8f84ee7f6e0a746f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e6cb07520f935efde3e881de8f84ee7f6e0a746f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10460. Recompute block checksum for a particular range less than file size on the fly by reconstructing missed block. Contributed by Rakesh R\n",
      "commitDate": "24/06/16 2:39 AM",
      "commitName": "e6cb07520f935efde3e881de8f84ee7f6e0a746f",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,13 @@\n+    private ExtendedBlock getInternalBlock(int numDataUnits, int idx) {\n+      // Sets requested number of bytes in blockGroup which is required to\n+      // construct the internal block for computing checksum.\n+      long actualNumBytes \u003d blockGroup.getNumBytes();\n+      blockGroup.setNumBytes(requestedNumBytes);\n+\n+      ExtendedBlock block \u003d StripedBlockUtil.constructInternalBlock(blockGroup,\n+          ecPolicy.getCellSize(), numDataUnits, idx);\n+\n+      // Set back actualNumBytes value in blockGroup.\n+      blockGroup.setNumBytes(actualNumBytes);\n+      return block;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private ExtendedBlock getInternalBlock(int numDataUnits, int idx) {\n      // Sets requested number of bytes in blockGroup which is required to\n      // construct the internal block for computing checksum.\n      long actualNumBytes \u003d blockGroup.getNumBytes();\n      blockGroup.setNumBytes(requestedNumBytes);\n\n      ExtendedBlock block \u003d StripedBlockUtil.constructInternalBlock(blockGroup,\n          ecPolicy.getCellSize(), numDataUnits, idx);\n\n      // Set back actualNumBytes value in blockGroup.\n      blockGroup.setNumBytes(actualNumBytes);\n      return block;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockChecksumHelper.java"
    }
  }
}