{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskChecker.java",
  "functionName": "checkDirInternal",
  "functionId": "checkDirInternal___dir-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
  "functionStartLine": 94,
  "functionEndLine": 101,
  "numCommitsSeen": 28,
  "timeTaken": 3622,
  "changeHistory": [
    "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
    "262827cf75bf9c48cd95335eb04fd8ff1d64c538",
    "9f03a7c018bb2c497cd0ef758f1a3e08e8163d06",
    "f5227eb51ca257ee776b705420964d27060c8255",
    "7351a01259eaf3f31d948bf3835550de14b7d9ae",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "bcc8e76badc1341a6cf995c8e44fa5e422158de8": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f": "Ybodychange",
    "262827cf75bf9c48cd95335eb04fd8ff1d64c538": "Ybodychange",
    "9f03a7c018bb2c497cd0ef758f1a3e08e8163d06": "Ybodychange",
    "f5227eb51ca257ee776b705420964d27060c8255": "Ybodychange",
    "7351a01259eaf3f31d948bf3835550de14b7d9ae": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcc8e76badc1341a6cf995c8e44fa5e422158de8": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-15450. Avoid fsync storm triggered by DiskChecker and handle disk full situation. Contributed by Arpit Agarwal.\n",
      "commitDate": "22/05/18 9:20 AM",
      "commitName": "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-15450. Avoid fsync storm triggered by DiskChecker and handle disk full situation. Contributed by Arpit Agarwal.\n",
          "commitDate": "22/05/18 9:20 AM",
          "commitName": "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "01/11/16 6:02 PM",
          "commitNameOld": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 566.64,
          "commitsBetweenForRepo": 4285,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static void checkDir(File dir) throws DiskErrorException {\n+  private static void checkDirInternal(File dir)\n+      throws DiskErrorException {    \n     if (!mkdirsWithExistsCheck(dir)) {\n       throw new DiskErrorException(\"Cannot create directory: \"\n                                    + dir.toString());\n     }\n     checkAccessByFileMethods(dir);\n-    doDiskIo(dir);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkDirInternal(File dir)\n      throws DiskErrorException {    \n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Cannot create directory: \"\n                                   + dir.toString());\n    }\n    checkAccessByFileMethods(dir);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
          "extendedDetails": {
            "oldValue": "checkDir",
            "newValue": "checkDirInternal"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-15450. Avoid fsync storm triggered by DiskChecker and handle disk full situation. Contributed by Arpit Agarwal.\n",
          "commitDate": "22/05/18 9:20 AM",
          "commitName": "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "01/11/16 6:02 PM",
          "commitNameOld": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 566.64,
          "commitsBetweenForRepo": 4285,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static void checkDir(File dir) throws DiskErrorException {\n+  private static void checkDirInternal(File dir)\n+      throws DiskErrorException {    \n     if (!mkdirsWithExistsCheck(dir)) {\n       throw new DiskErrorException(\"Cannot create directory: \"\n                                    + dir.toString());\n     }\n     checkAccessByFileMethods(dir);\n-    doDiskIo(dir);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkDirInternal(File dir)\n      throws DiskErrorException {    \n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Cannot create directory: \"\n                                   + dir.toString());\n    }\n    checkAccessByFileMethods(dir);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15450. Avoid fsync storm triggered by DiskChecker and handle disk full situation. Contributed by Arpit Agarwal.\n",
          "commitDate": "22/05/18 9:20 AM",
          "commitName": "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "01/11/16 6:02 PM",
          "commitNameOld": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 566.64,
          "commitsBetweenForRepo": 4285,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public static void checkDir(File dir) throws DiskErrorException {\n+  private static void checkDirInternal(File dir)\n+      throws DiskErrorException {    \n     if (!mkdirsWithExistsCheck(dir)) {\n       throw new DiskErrorException(\"Cannot create directory: \"\n                                    + dir.toString());\n     }\n     checkAccessByFileMethods(dir);\n-    doDiskIo(dir);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkDirInternal(File dir)\n      throws DiskErrorException {    \n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Cannot create directory: \"\n                                   + dir.toString());\n    }\n    checkAccessByFileMethods(dir);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13738. DiskChecker should perform some disk IO.\n",
      "commitDate": "01/11/16 6:02 PM",
      "commitName": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "20/10/16 1:35 PM",
      "commitNameOld": "262827cf75bf9c48cd95335eb04fd8ff1d64c538",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 12.19,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   public static void checkDir(File dir) throws DiskErrorException {\n     if (!mkdirsWithExistsCheck(dir)) {\n       throw new DiskErrorException(\"Cannot create directory: \"\n                                    + dir.toString());\n     }\n     checkAccessByFileMethods(dir);\n+    doDiskIo(dir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Cannot create directory: \"\n                                   + dir.toString());\n    }\n    checkAccessByFileMethods(dir);\n    doDiskIo(dir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "262827cf75bf9c48cd95335eb04fd8ff1d64c538": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13737. Cleanup DiskChecker interface. Contributed by Arpit Agarwal.\n",
      "commitDate": "20/10/16 1:35 PM",
      "commitName": "262827cf75bf9c48cd95335eb04fd8ff1d64c538",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "05/06/15 1:52 PM",
      "commitNameOld": "bc11e158b1726174fae2c7d2e8aa1f5005bf42eb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 502.99,
      "commitsBetweenForRepo": 3460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   public static void checkDir(File dir) throws DiskErrorException {\n     if (!mkdirsWithExistsCheck(dir)) {\n       throw new DiskErrorException(\"Cannot create directory: \"\n                                    + dir.toString());\n     }\n-    checkDirAccess(dir);\n+    checkAccessByFileMethods(dir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Cannot create directory: \"\n                                   + dir.toString());\n    }\n    checkAccessByFileMethods(dir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "9f03a7c018bb2c497cd0ef758f1a3e08e8163d06": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10946. Fix a bunch of typos in log messages (Ray Chiang via aw)\n",
      "commitDate": "19/09/14 11:33 AM",
      "commitName": "9f03a7c018bb2c497cd0ef758f1a3e08e8163d06",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "01/08/14 1:41 PM",
      "commitNameOld": "1ba3f8971433cdbc3e43fd3605065d811dab5b16",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 48.91,
      "commitsBetweenForRepo": 462,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   public static void checkDir(File dir) throws DiskErrorException {\n     if (!mkdirsWithExistsCheck(dir)) {\n-      throw new DiskErrorException(\"Can not create directory: \"\n+      throw new DiskErrorException(\"Cannot create directory: \"\n                                    + dir.toString());\n     }\n     checkDirAccess(dir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Cannot create directory: \"\n                                   + dir.toString());\n    }\n    checkDirAccess(dir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "f5227eb51ca257ee776b705420964d27060c8255": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8973. DiskChecker cannot reliably detect an inaccessible disk on Windows with NTFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/03/13 11:17 AM",
      "commitName": "f5227eb51ca257ee776b705420964d27060c8255",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "15/07/12 8:33 AM",
      "commitNameOld": "7351a01259eaf3f31d948bf3835550de14b7d9ae",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 238.11,
      "commitsBetweenForRepo": 1210,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,7 @@\n   public static void checkDir(File dir) throws DiskErrorException {\n-    if (!mkdirsWithExistsCheck(dir))\n+    if (!mkdirsWithExistsCheck(dir)) {\n       throw new DiskErrorException(\"Can not create directory: \"\n                                    + dir.toString());\n-\n-    if (!dir.isDirectory())\n-      throw new DiskErrorException(\"Not a directory: \"\n-                                   + dir.toString());\n-\n-    if (!dir.canRead())\n-      throw new DiskErrorException(\"Directory is not readable: \"\n-                                   + dir.toString());\n-\n-    if (!dir.canWrite())\n-      throw new DiskErrorException(\"Directory is not writable: \"\n-                                   + dir.toString());\n-\n-    if (!dir.canExecute())\n-      throw new DiskErrorException(\"Directory is not executable: \"\n-\t  + dir.toString());\n+    }\n+    checkDirAccess(dir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir)) {\n      throw new DiskErrorException(\"Can not create directory: \"\n                                   + dir.toString());\n    }\n    checkDirAccess(dir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "7351a01259eaf3f31d948bf3835550de14b7d9ae": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7818. DiskChecker#checkDir should fail if the directory is not executable. Contributed by Madhukara Phatak. (harsh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361717 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/12 8:33 AM",
      "commitName": "7351a01259eaf3f31d948bf3835550de14b7d9ae",
      "commitAuthor": "Harsh J",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 325.64,
      "commitsBetweenForRepo": 2211,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,21 @@\n   public static void checkDir(File dir) throws DiskErrorException {\n     if (!mkdirsWithExistsCheck(dir))\n-      throw new DiskErrorException(\"can not create directory: \" \n+      throw new DiskErrorException(\"Can not create directory: \"\n                                    + dir.toString());\n-        \n+\n     if (!dir.isDirectory())\n-      throw new DiskErrorException(\"not a directory: \" \n+      throw new DiskErrorException(\"Not a directory: \"\n                                    + dir.toString());\n-            \n+\n     if (!dir.canRead())\n-      throw new DiskErrorException(\"directory is not readable: \" \n+      throw new DiskErrorException(\"Directory is not readable: \"\n                                    + dir.toString());\n-            \n+\n     if (!dir.canWrite())\n-      throw new DiskErrorException(\"directory is not writable: \" \n+      throw new DiskErrorException(\"Directory is not writable: \"\n                                    + dir.toString());\n+\n+    if (!dir.canExecute())\n+      throw new DiskErrorException(\"Directory is not executable: \"\n+\t  + dir.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir))\n      throw new DiskErrorException(\"Can not create directory: \"\n                                   + dir.toString());\n\n    if (!dir.isDirectory())\n      throw new DiskErrorException(\"Not a directory: \"\n                                   + dir.toString());\n\n    if (!dir.canRead())\n      throw new DiskErrorException(\"Directory is not readable: \"\n                                   + dir.toString());\n\n    if (!dir.canWrite())\n      throw new DiskErrorException(\"Directory is not writable: \"\n                                   + dir.toString());\n\n    if (!dir.canExecute())\n      throw new DiskErrorException(\"Directory is not executable: \"\n\t  + dir.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir))\n      throw new DiskErrorException(\"can not create directory: \" \n                                   + dir.toString());\n        \n    if (!dir.isDirectory())\n      throw new DiskErrorException(\"not a directory: \" \n                                   + dir.toString());\n            \n    if (!dir.canRead())\n      throw new DiskErrorException(\"directory is not readable: \" \n                                   + dir.toString());\n            \n    if (!dir.canWrite())\n      throw new DiskErrorException(\"directory is not writable: \" \n                                   + dir.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir))\n      throw new DiskErrorException(\"can not create directory: \" \n                                   + dir.toString());\n        \n    if (!dir.isDirectory())\n      throw new DiskErrorException(\"not a directory: \" \n                                   + dir.toString());\n            \n    if (!dir.canRead())\n      throw new DiskErrorException(\"directory is not readable: \" \n                                   + dir.toString());\n            \n    if (!dir.canWrite())\n      throw new DiskErrorException(\"directory is not writable: \" \n                                   + dir.toString());\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/DiskChecker.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir))\n      throw new DiskErrorException(\"can not create directory: \" \n                                   + dir.toString());\n        \n    if (!dir.isDirectory())\n      throw new DiskErrorException(\"not a directory: \" \n                                   + dir.toString());\n            \n    if (!dir.canRead())\n      throw new DiskErrorException(\"directory is not readable: \" \n                                   + dir.toString());\n            \n    if (!dir.canWrite())\n      throw new DiskErrorException(\"directory is not writable: \" \n                                   + dir.toString());\n  }",
      "path": "common/src/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/DiskChecker.java",
        "newPath": "common/src/java/org/apache/hadoop/util/DiskChecker.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,17 @@\n+  public static void checkDir(File dir) throws DiskErrorException {\n+    if (!mkdirsWithExistsCheck(dir))\n+      throw new DiskErrorException(\"can not create directory: \" \n+                                   + dir.toString());\n+        \n+    if (!dir.isDirectory())\n+      throw new DiskErrorException(\"not a directory: \" \n+                                   + dir.toString());\n+            \n+    if (!dir.canRead())\n+      throw new DiskErrorException(\"directory is not readable: \" \n+                                   + dir.toString());\n+            \n+    if (!dir.canWrite())\n+      throw new DiskErrorException(\"directory is not writable: \" \n+                                   + dir.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(File dir) throws DiskErrorException {\n    if (!mkdirsWithExistsCheck(dir))\n      throw new DiskErrorException(\"can not create directory: \" \n                                   + dir.toString());\n        \n    if (!dir.isDirectory())\n      throw new DiskErrorException(\"not a directory: \" \n                                   + dir.toString());\n            \n    if (!dir.canRead())\n      throw new DiskErrorException(\"directory is not readable: \" \n                                   + dir.toString());\n            \n    if (!dir.canWrite())\n      throw new DiskErrorException(\"directory is not writable: \" \n                                   + dir.toString());\n  }",
      "path": "src/java/org/apache/hadoop/util/DiskChecker.java"
    }
  }
}