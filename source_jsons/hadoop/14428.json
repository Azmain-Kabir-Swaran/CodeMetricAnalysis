{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Journal.java",
  "functionName": "completeHalfDoneAcceptRecovery",
  "functionId": "completeHalfDoneAcceptRecovery___paxosData-PersistedRecoveryPaxosData",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
  "functionStartLine": 1038,
  "functionEndLine": 1055,
  "numCommitsSeen": 64,
  "timeTaken": 1808,
  "changeHistory": [
    "6beb25ab7e4f5454dba0315a296081e61753f301",
    "3ccd905d8a0fe5e3a206ac955b689a6f02b25e67"
  ],
  "changeHistoryShort": {
    "6beb25ab7e4f5454dba0315a296081e61753f301": "Ybodychange",
    "3ccd905d8a0fe5e3a206ac955b689a6f02b25e67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6beb25ab7e4f5454dba0315a296081e61753f301": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13544. Improve logging for JournalNode in federated cluster.\n",
      "commitDate": "14/05/18 10:12 AM",
      "commitName": "6beb25ab7e4f5454dba0315a296081e61753f301",
      "commitAuthor": "Hanisha Koneru",
      "commitDateOld": "13/10/17 2:22 PM",
      "commitNameOld": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 212.83,
      "commitsBetweenForRepo": 2051,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void completeHalfDoneAcceptRecovery(\n       PersistedRecoveryPaxosData paxosData) throws IOException {\n     if (paxosData \u003d\u003d null) {\n       return;\n     }\n \n     long segmentId \u003d paxosData.getSegmentState().getStartTxId();\n     long epoch \u003d paxosData.getAcceptedInEpoch();\n     \n     File tmp \u003d storage.getSyncLogTemporaryFile(segmentId, epoch);\n     \n     if (tmp.exists()) {\n       File dst \u003d storage.getInProgressEditLog(segmentId);\n       LOG.info(\"Rolling forward previously half-completed synchronization: \" +\n-          tmp + \" -\u003e \" + dst);\n+          tmp + \" -\u003e \" + dst + \" ; journal id: \" + journalId);\n       FileUtil.replaceFile(tmp, dst);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void completeHalfDoneAcceptRecovery(\n      PersistedRecoveryPaxosData paxosData) throws IOException {\n    if (paxosData \u003d\u003d null) {\n      return;\n    }\n\n    long segmentId \u003d paxosData.getSegmentState().getStartTxId();\n    long epoch \u003d paxosData.getAcceptedInEpoch();\n    \n    File tmp \u003d storage.getSyncLogTemporaryFile(segmentId, epoch);\n    \n    if (tmp.exists()) {\n      File dst \u003d storage.getInProgressEditLog(segmentId);\n      LOG.info(\"Rolling forward previously half-completed synchronization: \" +\n          tmp + \" -\u003e \" + dst + \" ; journal id: \" + journalId);\n      FileUtil.replaceFile(tmp, dst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
      "extendedDetails": {}
    },
    "3ccd905d8a0fe5e3a206ac955b689a6f02b25e67": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3955. QJM: Make acceptRecovery() atomic. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1387706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/12 11:57 AM",
      "commitName": "3ccd905d8a0fe5e3a206ac955b689a6f02b25e67",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  private void completeHalfDoneAcceptRecovery(\n+      PersistedRecoveryPaxosData paxosData) throws IOException {\n+    if (paxosData \u003d\u003d null) {\n+      return;\n+    }\n+\n+    long segmentId \u003d paxosData.getSegmentState().getStartTxId();\n+    long epoch \u003d paxosData.getAcceptedInEpoch();\n+    \n+    File tmp \u003d storage.getSyncLogTemporaryFile(segmentId, epoch);\n+    \n+    if (tmp.exists()) {\n+      File dst \u003d storage.getInProgressEditLog(segmentId);\n+      LOG.info(\"Rolling forward previously half-completed synchronization: \" +\n+          tmp + \" -\u003e \" + dst);\n+      FileUtil.replaceFile(tmp, dst);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void completeHalfDoneAcceptRecovery(\n      PersistedRecoveryPaxosData paxosData) throws IOException {\n    if (paxosData \u003d\u003d null) {\n      return;\n    }\n\n    long segmentId \u003d paxosData.getSegmentState().getStartTxId();\n    long epoch \u003d paxosData.getAcceptedInEpoch();\n    \n    File tmp \u003d storage.getSyncLogTemporaryFile(segmentId, epoch);\n    \n    if (tmp.exists()) {\n      File dst \u003d storage.getInProgressEditLog(segmentId);\n      LOG.info(\"Rolling forward previously half-completed synchronization: \" +\n          tmp + \" -\u003e \" + dst);\n      FileUtil.replaceFile(tmp, dst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java"
    }
  }
}