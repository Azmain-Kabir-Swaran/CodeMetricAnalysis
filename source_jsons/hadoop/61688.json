{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Apps.java",
  "functionName": "setEnvFromString",
  "functionId": "setEnvFromString___env-Map__String,String____envVar-String__varString-String__classPathSeparator-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
  "functionStartLine": 87,
  "functionEndLine": 106,
  "numCommitsSeen": 19,
  "timeTaken": 1422,
  "changeHistory": [
    "4571351cccf6d4977469d3d623cf045b06a5f5f0"
  ],
  "changeHistoryShort": {
    "4571351cccf6d4977469d3d623cf045b06a5f5f0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4571351cccf6d4977469d3d623cf045b06a5f5f0": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-7069. Add ability to specify user environment variables individually. Contributed by Jim Brennan\n",
      "commitDate": "12/04/18 9:12 AM",
      "commitName": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,20 @@\n+  private static void setEnvFromString(Map\u003cString, String\u003e env,\n+      String envVar, String varString, String classPathSeparator) {\n+    Matcher m \u003d VAR_SUBBER.matcher(varString);\n+    StringBuffer sb \u003d new StringBuffer();\n+    while (m.find()) {\n+      String var \u003d m.group(1);\n+      // do variable substitution of $var from passed in environment or from\n+      // system environment and default to empty string if undefined in both.\n+      String replace \u003d env.get(var);\n+      if (replace \u003d\u003d null) {\n+        replace \u003d System.getenv(var);\n+      }\n+      if (replace \u003d\u003d null) {\n+        replace \u003d \"\";\n+      }\n+      m.appendReplacement(sb, Matcher.quoteReplacement(replace));\n+    }\n+    m.appendTail(sb);\n+    addToEnvironment(env, envVar, sb.toString(), classPathSeparator);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void setEnvFromString(Map\u003cString, String\u003e env,\n      String envVar, String varString, String classPathSeparator) {\n    Matcher m \u003d VAR_SUBBER.matcher(varString);\n    StringBuffer sb \u003d new StringBuffer();\n    while (m.find()) {\n      String var \u003d m.group(1);\n      // do variable substitution of $var from passed in environment or from\n      // system environment and default to empty string if undefined in both.\n      String replace \u003d env.get(var);\n      if (replace \u003d\u003d null) {\n        replace \u003d System.getenv(var);\n      }\n      if (replace \u003d\u003d null) {\n        replace \u003d \"\";\n      }\n      m.appendReplacement(sb, Matcher.quoteReplacement(replace));\n    }\n    m.appendTail(sb);\n    addToEnvironment(env, envVar, sb.toString(), classPathSeparator);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java"
    }
  }
}