{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskCheckpointID.java",
  "functionName": "write",
  "functionId": "write___out-DataOutput",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/checkpoint/TaskCheckpointID.java",
  "functionStartLine": 57,
  "functionEndLine": 64,
  "numCommitsSeen": 2,
  "timeTaken": 1124,
  "changeHistory": [
    "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f",
    "9ca394d54dd24e67867c845a58150f6b51761512"
  ],
  "changeHistoryShort": {
    "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f": "Ybodychange",
    "9ca394d54dd24e67867c845a58150f6b51761512": "Yintroduced"
  },
  "changeHistoryDetails": {
    "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5196. Add bookkeeping for managing checkpoints of task state.\nContributed by Carlo Curino\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/12/13 1:58 PM",
      "commitName": "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "17/12/13 2:54 PM",
      "commitNameOld": "9ca394d54dd24e67867c845a58150f6b51761512",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 10.96,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,8 @@\n   public void write(DataOutput out) throws IOException {\n     counters.write(out);\n-    if (partialOutput \u003d\u003d null) {\n-      WritableUtils.writeVLong(out, 0L);\n-    } else {\n-      WritableUtils.writeVLong(out, partialOutput.size());\n-      for(Path p:partialOutput){\n-        Text.writeString(out, p.toString());\n-      }\n+    WritableUtils.writeVLong(out, partialOutput.size());\n+    for (Path p : partialOutput) {\n+      Text.writeString(out, p.toString());\n     }\n     rawId.write(out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    counters.write(out);\n    WritableUtils.writeVLong(out, partialOutput.size());\n    for (Path p : partialOutput) {\n      Text.writeString(out, p.toString());\n    }\n    rawId.write(out);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/checkpoint/TaskCheckpointID.java",
      "extendedDetails": {}
    },
    "9ca394d54dd24e67867c845a58150f6b51761512": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5189. Add policies and wiring to respond to preemption requests\nfrom YARN. Contributed by Carlo Curino.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 2:54 PM",
      "commitName": "9ca394d54dd24e67867c845a58150f6b51761512",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,12 @@\n+  public void write(DataOutput out) throws IOException {\n+    counters.write(out);\n+    if (partialOutput \u003d\u003d null) {\n+      WritableUtils.writeVLong(out, 0L);\n+    } else {\n+      WritableUtils.writeVLong(out, partialOutput.size());\n+      for(Path p:partialOutput){\n+        Text.writeString(out, p.toString());\n+      }\n+    }\n+    rawId.write(out);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    counters.write(out);\n    if (partialOutput \u003d\u003d null) {\n      WritableUtils.writeVLong(out, 0L);\n    } else {\n      WritableUtils.writeVLong(out, partialOutput.size());\n      for(Path p:partialOutput){\n        Text.writeString(out, p.toString());\n      }\n    }\n    rawId.write(out);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/checkpoint/TaskCheckpointID.java"
    }
  }
}