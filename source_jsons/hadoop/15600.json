{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FoldedTreeSet.java",
  "functionName": "deleteNode",
  "functionId": "deleteNode___node-Node__E__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/FoldedTreeSet.java",
  "functionStartLine": 998,
  "functionEndLine": 1041,
  "numCommitsSeen": 1,
  "timeTaken": 1294,
  "changeHistory": [
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a"
  ],
  "changeHistoryShort": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9260. Improve the performance and GC friendliness of NameNode startup and full block reports (Staffan Friberg via cmccabe)\n",
      "commitDate": "02/02/16 11:23 AM",
      "commitName": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,44 @@\n+  private void deleteNode(final Node\u003cE\u003e node) {\n+    if (node.right \u003d\u003d null) {\n+      if (node.left !\u003d null) {\n+        attachToParent(node, node.left);\n+      } else {\n+        attachNullToParent(node);\n+      }\n+    } else if (node.left \u003d\u003d null) {\n+      attachToParent(node, node.right);\n+    } else {\n+      // node.left !\u003d null \u0026\u0026 node.right !\u003d null\n+      // node.next should replace node in tree\n+      // node.next !\u003d null guaranteed since node.left !\u003d null\n+      // node.next.left \u003d\u003d null since node.next.prev is node\n+      // node.next.right may be null or non-null\n+      Node\u003cE\u003e toMoveUp \u003d node.next;\n+      if (toMoveUp.right \u003d\u003d null) {\n+        attachNullToParent(toMoveUp);\n+      } else {\n+        attachToParent(toMoveUp, toMoveUp.right);\n+      }\n+      toMoveUp.left \u003d node.left;\n+      if (toMoveUp.left !\u003d null) {\n+        toMoveUp.left.parent \u003d toMoveUp;\n+      }\n+      toMoveUp.right \u003d node.right;\n+      if (toMoveUp.right !\u003d null) {\n+        toMoveUp.right.parent \u003d toMoveUp;\n+      }\n+      attachToParentNoBalance(node, toMoveUp);\n+      toMoveUp.color \u003d node.color;\n+    }\n+\n+    // Remove node from ordered list of nodes\n+    if (node.prev !\u003d null) {\n+      node.prev.next \u003d node.next;\n+    }\n+    if (node.next !\u003d null) {\n+      node.next.prev \u003d node.prev;\n+    }\n+\n+    nodeCount--;\n+    cacheAndClear(node);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void deleteNode(final Node\u003cE\u003e node) {\n    if (node.right \u003d\u003d null) {\n      if (node.left !\u003d null) {\n        attachToParent(node, node.left);\n      } else {\n        attachNullToParent(node);\n      }\n    } else if (node.left \u003d\u003d null) {\n      attachToParent(node, node.right);\n    } else {\n      // node.left !\u003d null \u0026\u0026 node.right !\u003d null\n      // node.next should replace node in tree\n      // node.next !\u003d null guaranteed since node.left !\u003d null\n      // node.next.left \u003d\u003d null since node.next.prev is node\n      // node.next.right may be null or non-null\n      Node\u003cE\u003e toMoveUp \u003d node.next;\n      if (toMoveUp.right \u003d\u003d null) {\n        attachNullToParent(toMoveUp);\n      } else {\n        attachToParent(toMoveUp, toMoveUp.right);\n      }\n      toMoveUp.left \u003d node.left;\n      if (toMoveUp.left !\u003d null) {\n        toMoveUp.left.parent \u003d toMoveUp;\n      }\n      toMoveUp.right \u003d node.right;\n      if (toMoveUp.right !\u003d null) {\n        toMoveUp.right.parent \u003d toMoveUp;\n      }\n      attachToParentNoBalance(node, toMoveUp);\n      toMoveUp.color \u003d node.color;\n    }\n\n    // Remove node from ordered list of nodes\n    if (node.prev !\u003d null) {\n      node.prev.next \u003d node.next;\n    }\n    if (node.next !\u003d null) {\n      node.next.prev \u003d node.prev;\n    }\n\n    nodeCount--;\n    cacheAndClear(node);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/FoldedTreeSet.java"
    }
  }
}