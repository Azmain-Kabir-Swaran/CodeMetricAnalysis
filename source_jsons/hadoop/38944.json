{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActivitiesLogger.java",
  "functionName": "recordAppActivityWithAllocation",
  "functionId": "recordAppActivityWithAllocation___activitiesManager-ActivitiesManager__node-SchedulerNode__application-SchedulerApplicationAttempt__updatedContainer-RMContainer__activityState-ActivityState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
  "functionStartLine": 147,
  "functionEndLine": 182,
  "numCommitsSeen": 12,
  "timeTaken": 5337,
  "changeHistory": [
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "7fa73fac2676875561269e9408215e012269a18c",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188"
  ],
  "changeHistoryShort": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": "Ybodychange",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ybodychange",
    "7fa73fac2676875561269e9408215e012269a18c": "Ybodychange",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": "Ybodychange",
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ymultichange(Yparameterchange,Ybodychange)",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
      "commitDate": "29/08/19 3:14 AM",
      "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "06/06/19 6:59 AM",
      "commitNameOld": "09763925025a3709e6098186348e1afd80cb9f71",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 83.84,
      "commitsBetweenForRepo": 744,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,36 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (nodeId \u003d\u003d null || nodeId \u003d\u003d ActivitiesManager.EMPTY_NODE_ID) {\n         nodeId \u003d updatedContainer.getNodeId();\n       }\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n-        String containerPriorityStr \u003d\n-            updatedContainer.getContainer().getPriority().toString();\n-        String allocationRequestId \u003d String\n-            .valueOf(updatedContainer.getContainer().getAllocationRequestId());\n+        Integer containerPriority \u003d\n+            updatedContainer.getContainer().getPriority().getPriority();\n+        Long allocationRequestId \u003d\n+            updatedContainer.getContainer().getAllocationRequestId();\n         String requestName \u003d\n-            getRequestName(containerPriorityStr, allocationRequestId);\n-        String type \u003d \"container\";\n-\n-        // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            requestName,\n-            updatedContainer.getContainer().toString(),\n-            containerPriorityStr,\n-            activityState, ActivityDiagnosticConstant.EMPTY, type, null);\n-        type \u003d \"request\";\n-        // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            application.getApplicationId().toString(),\n-            requestName, containerPriorityStr,\n-            activityState, ActivityDiagnosticConstant.EMPTY, type,\n-            allocationRequestId);\n-        type \u003d \"app\";\n-        // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            application.getQueueName(),\n-            application.getApplicationId().toString(),\n-            application.getPriority().toString(), ActivityState.ACCEPTED,\n-            ActivityDiagnosticConstant.EMPTY, type, null);\n+            getRequestName(containerPriority, allocationRequestId);\n+        // Add node,request,app level activities into scheduler activities.\n+        recordSchedulerActivityAtNodeLevel(activitiesManager, application,\n+            requestName, containerPriority, allocationRequestId,\n+            updatedContainer.getContainer().toString(), nodeId, activityState,\n+            ActivityDiagnosticConstant.EMPTY);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n-        String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(),\n             updatedContainer.getContainerId(),\n-            updatedContainer.getContainer().getPriority().toString(),\n-            activityState, ActivityDiagnosticConstant.EMPTY, type, nodeId,\n-            String.valueOf(\n-                updatedContainer.getContainer().getAllocationRequestId()));\n+            updatedContainer.getContainer().getPriority().getPriority(),\n+            activityState, ActivityDiagnosticConstant.EMPTY,\n+            ActivityLevel.NODE, nodeId,\n+            updatedContainer.getContainer().getAllocationRequestId());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (nodeId \u003d\u003d null || nodeId \u003d\u003d ActivitiesManager.EMPTY_NODE_ID) {\n        nodeId \u003d updatedContainer.getNodeId();\n      }\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        Integer containerPriority \u003d\n            updatedContainer.getContainer().getPriority().getPriority();\n        Long allocationRequestId \u003d\n            updatedContainer.getContainer().getAllocationRequestId();\n        String requestName \u003d\n            getRequestName(containerPriority, allocationRequestId);\n        // Add node,request,app level activities into scheduler activities.\n        recordSchedulerActivityAtNodeLevel(activitiesManager, application,\n            requestName, containerPriority, allocationRequestId,\n            updatedContainer.getContainer().toString(), nodeId, activityState,\n            ActivityDiagnosticConstant.EMPTY);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().getPriority(),\n            activityState, ActivityDiagnosticConstant.EMPTY,\n            ActivityLevel.NODE, nodeId,\n            updatedContainer.getContainer().getAllocationRequestId());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/04/19 9:12 AM",
      "commitNameOld": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 20.82,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,54 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n+      if (nodeId \u003d\u003d null || nodeId \u003d\u003d ActivitiesManager.EMPTY_NODE_ID) {\n+        nodeId \u003d updatedContainer.getNodeId();\n+      }\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n+        String containerPriorityStr \u003d\n+            updatedContainer.getContainer().getPriority().toString();\n+        String allocationRequestId \u003d String\n+            .valueOf(updatedContainer.getContainer().getAllocationRequestId());\n+        String requestName \u003d\n+            getRequestName(containerPriorityStr, allocationRequestId);\n         String type \u003d \"container\";\n+\n+        // Add application-container activity into specific node allocation.\n+        activitiesManager.addSchedulingActivityForNode(nodeId,\n+            requestName,\n+            updatedContainer.getContainer().toString(),\n+            containerPriorityStr,\n+            activityState, ActivityDiagnosticConstant.EMPTY, type, null);\n+        type \u003d \"request\";\n         // Add application-container activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getApplicationId().toString(),\n-            updatedContainer.getContainer().toString(),\n-            updatedContainer.getContainer().getPriority().toString(),\n-            activityState, ActivityDiagnosticConstant.EMPTY, type);\n+            requestName, containerPriorityStr,\n+            activityState, ActivityDiagnosticConstant.EMPTY, type,\n+            allocationRequestId);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.ACCEPTED,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            ActivityDiagnosticConstant.EMPTY, type, null);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(),\n             updatedContainer.getContainerId(),\n             updatedContainer.getContainer().getPriority().toString(),\n-            activityState, ActivityDiagnosticConstant.EMPTY, type);\n+            activityState, ActivityDiagnosticConstant.EMPTY, type, nodeId,\n+            String.valueOf(\n+                updatedContainer.getContainer().getAllocationRequestId()));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (nodeId \u003d\u003d null || nodeId \u003d\u003d ActivitiesManager.EMPTY_NODE_ID) {\n        nodeId \u003d updatedContainer.getNodeId();\n      }\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String containerPriorityStr \u003d\n            updatedContainer.getContainer().getPriority().toString();\n        String allocationRequestId \u003d String\n            .valueOf(updatedContainer.getContainer().getAllocationRequestId());\n        String requestName \u003d\n            getRequestName(containerPriorityStr, allocationRequestId);\n        String type \u003d \"container\";\n\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            requestName,\n            updatedContainer.getContainer().toString(),\n            containerPriorityStr,\n            activityState, ActivityDiagnosticConstant.EMPTY, type, null);\n        type \u003d \"request\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getApplicationId().toString(),\n            requestName, containerPriorityStr,\n            activityState, ActivityDiagnosticConstant.EMPTY, type,\n            allocationRequestId);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type, null);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type, nodeId,\n            String.valueOf(\n                updatedContainer.getContainer().getAllocationRequestId()));\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "7fa73fac2676875561269e9408215e012269a18c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9439. Support asynchronized scheduling mode and multi-node lookup mechanism for app activities. Contributed by Tao Yang.\n",
      "commitDate": "15/04/19 9:12 AM",
      "commitName": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "07/04/19 10:40 PM",
      "commitNameOld": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 7.44,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n-      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n-      if (nodeId \u003d\u003d null) {\n+      if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n+      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getApplicationId().toString(),\n             updatedContainer.getContainer().toString(),\n             updatedContainer.getContainer().getPriority().toString(),\n             activityState, ActivityDiagnosticConstant.EMPTY, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.ACCEPTED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(),\n             updatedContainer.getContainerId(),\n             updatedContainer.getContainer().getPriority().toString(),\n             activityState, ActivityDiagnosticConstant.EMPTY, type);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getApplicationId().toString(),\n            updatedContainer.getContainer().toString(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9313. Support asynchronized scheduling mode and multi-node lookup mechanism for scheduler activities. Contributed by Tao Yang.\n",
      "commitDate": "07/04/19 10:40 PM",
      "commitName": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 34.02,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n-      if (node \u003d\u003d null || activitiesManager \u003d\u003d null) {\n+      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n+      if (nodeId \u003d\u003d null) {\n         return;\n       }\n-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n+      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node,\n+        activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getApplicationId().toString(),\n             updatedContainer.getContainer().toString(),\n             updatedContainer.getContainer().getPriority().toString(),\n             activityState, ActivityDiagnosticConstant.EMPTY, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node,\n+        activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.ACCEPTED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(),\n             updatedContainer.getContainerId(),\n             updatedContainer.getContainer().getPriority().toString(),\n             activityState, ActivityDiagnosticConstant.EMPTY, type);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (nodeId \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getApplicationId().toString(),\n            updatedContainer.getContainer().toString(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "09/11/17 1:01 PM",
      "commitNameOld": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 284.74,
      "commitsBetweenForRepo": 2528,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n-      if (activitiesManager \u003d\u003d null) {\n+      if (node \u003d\u003d null || activitiesManager \u003d\u003d null) {\n         return;\n       }\n       if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+        activitiesManager.addSchedulingActivityForNode(node,\n             application.getApplicationId().toString(),\n             updatedContainer.getContainer().toString(),\n             updatedContainer.getContainer().getPriority().toString(),\n             activityState, ActivityDiagnosticConstant.EMPTY, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+        activitiesManager.addSchedulingActivityForNode(node,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.ACCEPTED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(),\n             updatedContainer.getContainerId(),\n             updatedContainer.getContainer().getPriority().toString(),\n             activityState, ActivityDiagnosticConstant.EMPTY, type);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      if (node \u003d\u003d null || activitiesManager \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node,\n            application.getApplicationId().toString(),\n            updatedContainer.getContainer().toString(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/16 10:27 AM",
          "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 94.03,
          "commitsBetweenForRepo": 702,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,34 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n-        SchedulerApplicationAttempt application, Container updatedContainer,\n+        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n             application.getApplicationId().toString(),\n-            updatedContainer.getId().toString(),\n-            updatedContainer.getPriority().toString(), activityState,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            updatedContainer.getContainer().toString(),\n+            updatedContainer.getContainer().getPriority().toString(),\n+            activityState, ActivityDiagnosticConstant.EMPTY, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.ACCEPTED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n-            application.getApplicationId(), updatedContainer.getId().toString(),\n-            updatedContainer.getPriority().toString(), activityState,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            application.getApplicationId(),\n+            updatedContainer.getContainerId(),\n+            updatedContainer.getContainer().getPriority().toString(),\n+            activityState, ActivityDiagnosticConstant.EMPTY, type);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getApplicationId().toString(),\n            updatedContainer.getContainer().toString(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
          "extendedDetails": {
            "oldValue": "[activitiesManager-ActivitiesManager, node-SchedulerNode, application-SchedulerApplicationAttempt, updatedContainer-Container, activityState-ActivityState]",
            "newValue": "[activitiesManager-ActivitiesManager, node-SchedulerNode, application-SchedulerApplicationAttempt, updatedContainer-RMContainer, activityState-ActivityState]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/16 10:27 AM",
          "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 94.03,
          "commitsBetweenForRepo": 702,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,34 @@\n     public static void recordAppActivityWithAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n-        SchedulerApplicationAttempt application, Container updatedContainer,\n+        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n         ActivityState activityState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n             application.getApplicationId().toString(),\n-            updatedContainer.getId().toString(),\n-            updatedContainer.getPriority().toString(), activityState,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            updatedContainer.getContainer().toString(),\n+            updatedContainer.getContainer().getPriority().toString(),\n+            activityState, ActivityDiagnosticConstant.EMPTY, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.ACCEPTED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n-            application.getApplicationId(), updatedContainer.getId().toString(),\n-            updatedContainer.getPriority().toString(), activityState,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            application.getApplicationId(),\n+            updatedContainer.getContainerId(),\n+            updatedContainer.getContainer().getPriority().toString(),\n+            activityState, ActivityDiagnosticConstant.EMPTY, type);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, RMContainer updatedContainer,\n        ActivityState activityState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getApplicationId().toString(),\n            updatedContainer.getContainer().toString(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(),\n            updatedContainer.getContainerId(),\n            updatedContainer.getContainer().getPriority().toString(),\n            activityState, ActivityDiagnosticConstant.EMPTY, type);\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
          "extendedDetails": {}
        }
      ]
    },
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)\n",
      "commitDate": "05/08/16 10:27 AM",
      "commitName": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,33 @@\n+    public static void recordAppActivityWithAllocation(\n+        ActivitiesManager activitiesManager, SchedulerNode node,\n+        SchedulerApplicationAttempt application, Container updatedContainer,\n+        ActivityState activityState) {\n+      if (activitiesManager \u003d\u003d null) {\n+        return;\n+      }\n+      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n+        String type \u003d \"container\";\n+        // Add application-container activity into specific node allocation.\n+        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+            application.getApplicationId().toString(),\n+            updatedContainer.getId().toString(),\n+            updatedContainer.getPriority().toString(), activityState,\n+            ActivityDiagnosticConstant.EMPTY, type);\n+        type \u003d \"app\";\n+        // Add queue-application activity into specific node allocation.\n+        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+            application.getQueueName(),\n+            application.getApplicationId().toString(),\n+            application.getPriority().toString(), ActivityState.ACCEPTED,\n+            ActivityDiagnosticConstant.EMPTY, type);\n+      }\n+      // Add application-container activity into specific application allocation\n+      if (activitiesManager.shouldRecordThisApp(\n+          application.getApplicationId())) {\n+        String type \u003d \"container\";\n+        activitiesManager.addSchedulingActivityForApp(\n+            application.getApplicationId(), updatedContainer.getId().toString(),\n+            updatedContainer.getPriority().toString(), activityState,\n+            ActivityDiagnosticConstant.EMPTY, type);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, Container updatedContainer,\n        ActivityState activityState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getApplicationId().toString(),\n            updatedContainer.getId().toString(),\n            updatedContainer.getPriority().toString(), activityState,\n            ActivityDiagnosticConstant.EMPTY, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.ACCEPTED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), updatedContainer.getId().toString(),\n            updatedContainer.getPriority().toString(), activityState,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java"
    }
  }
}