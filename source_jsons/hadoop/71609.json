{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegistryDNS.java",
  "functionName": "initializeReverseLookupZone",
  "functionId": "initializeReverseLookupZone___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
  "functionStartLine": 405,
  "functionEndLine": 427,
  "numCommitsSeen": 15,
  "timeTaken": 2175,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "d30d57828fddaa8667de49af879cde999907c7f6",
    "7d685f2fb3ca8fa23caed29ed813c1c979abf718",
    "f934f62fc71b4776e88f86d4254de0ea12147511"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Ymultichange(Yfilerename,Ybodychange)",
    "d30d57828fddaa8667de49af879cde999907c7f6": "Ybodychange",
    "7d685f2fb3ca8fa23caed29ed813c1c979abf718": "Ybodychange",
    "f934f62fc71b4776e88f86d4254de0ea12147511": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
          "commitDate": "19/10/18 4:46 PM",
          "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "19/10/18 1:57 PM",
          "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private void initializeReverseLookupZone(Configuration conf)\n       throws IOException {\n     // Determine if the subnet should be split into\n     // multiple reverse zones, this can be necessary in\n     // network configurations where the hosts and containers\n     // are part of the same subnet (i.e. the containers only use\n     // part of the subnet).\n     Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n         DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n     if (shouldSplitReverseZone) {\n-      int subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n+      long subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n       addSplitReverseZones(conf, subnetCount);\n       // Single reverse zone\n     } else {\n       Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n       if (reverseLookupZoneName \u003d\u003d null) {\n         // reverse lookup disabled\n         return;\n       }\n       Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n       zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initializeReverseLookupZone(Configuration conf)\n      throws IOException {\n    // Determine if the subnet should be split into\n    // multiple reverse zones, this can be necessary in\n    // network configurations where the hosts and containers\n    // are part of the same subnet (i.e. the containers only use\n    // part of the subnet).\n    Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n        DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n    if (shouldSplitReverseZone) {\n      long subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n      addSplitReverseZones(conf, subnetCount);\n      // Single reverse zone\n    } else {\n      Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n      if (reverseLookupZoneName \u003d\u003d null) {\n        // reverse lookup disabled\n        return;\n      }\n      Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
            "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
          "commitDate": "19/10/18 4:46 PM",
          "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "19/10/18 1:57 PM",
          "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private void initializeReverseLookupZone(Configuration conf)\n       throws IOException {\n     // Determine if the subnet should be split into\n     // multiple reverse zones, this can be necessary in\n     // network configurations where the hosts and containers\n     // are part of the same subnet (i.e. the containers only use\n     // part of the subnet).\n     Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n         DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n     if (shouldSplitReverseZone) {\n-      int subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n+      long subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n       addSplitReverseZones(conf, subnetCount);\n       // Single reverse zone\n     } else {\n       Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n       if (reverseLookupZoneName \u003d\u003d null) {\n         // reverse lookup disabled\n         return;\n       }\n       Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n       zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initializeReverseLookupZone(Configuration conf)\n      throws IOException {\n    // Determine if the subnet should be split into\n    // multiple reverse zones, this can be necessary in\n    // network configurations where the hosts and containers\n    // are part of the same subnet (i.e. the containers only use\n    // part of the subnet).\n    Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n        DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n    if (shouldSplitReverseZone) {\n      long subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n      addSplitReverseZones(conf, subnetCount);\n      // Single reverse zone\n    } else {\n      Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n      if (reverseLookupZoneName \u003d\u003d null) {\n        // reverse lookup disabled\n        return;\n      }\n      Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
          "extendedDetails": {}
        }
      ]
    },
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "8ec9e72cc37957d8cf9af5a7b78086441ae64b00",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 27.94,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   private void initializeReverseLookupZone(Configuration conf)\n       throws IOException {\n     // Determine if the subnet should be split into\n     // multiple reverse zones, this can be necessary in\n     // network configurations where the hosts and containers\n     // are part of the same subnet (i.e. the containers only use\n     // part of the subnet).\n     Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n         DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n     if (shouldSplitReverseZone) {\n       int subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n       addSplitReverseZones(conf, subnetCount);\n       // Single reverse zone\n     } else {\n       Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n+      if (reverseLookupZoneName \u003d\u003d null) {\n+        // reverse lookup disabled\n+        return;\n+      }\n       Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n       zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeReverseLookupZone(Configuration conf)\n      throws IOException {\n    // Determine if the subnet should be split into\n    // multiple reverse zones, this can be necessary in\n    // network configurations where the hosts and containers\n    // are part of the same subnet (i.e. the containers only use\n    // part of the subnet).\n    Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n        DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n    if (shouldSplitReverseZone) {\n      int subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n      addSplitReverseZones(conf, subnetCount);\n      // Single reverse zone\n    } else {\n      Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n      if (reverseLookupZoneName \u003d\u003d null) {\n        // reverse lookup disabled\n        return;\n      }\n      Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {}
    },
    "7d685f2fb3ca8fa23caed29ed813c1c979abf718": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4757. Add the ability to split reverse zone subnets. Contributed by Shane Kumpf.\n\n(cherry picked from commit 9bff70f1316d889c3109c68dd308c8f456229bf8)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "7d685f2fb3ca8fa23caed29ed813c1c979abf718",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "06/11/17 1:28 PM",
      "commitNameOld": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,19 @@\n   private void initializeReverseLookupZone(Configuration conf)\n       throws IOException {\n-    Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n-    Zone reverseLookupZone \u003d\n-        configureZone(reverseLookupZoneName, conf);\n-    zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n+    // Determine if the subnet should be split into\n+    // multiple reverse zones, this can be necessary in\n+    // network configurations where the hosts and containers\n+    // are part of the same subnet (i.e. the containers only use\n+    // part of the subnet).\n+    Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n+        DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n+    if (shouldSplitReverseZone) {\n+      int subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n+      addSplitReverseZones(conf, subnetCount);\n+      // Single reverse zone\n+    } else {\n+      Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n+      Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n+      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeReverseLookupZone(Configuration conf)\n      throws IOException {\n    // Determine if the subnet should be split into\n    // multiple reverse zones, this can be necessary in\n    // network configurations where the hosts and containers\n    // are part of the same subnet (i.e. the containers only use\n    // part of the subnet).\n    Boolean shouldSplitReverseZone \u003d conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,\n        DEFAULT_DNS_SPLIT_REVERSE_ZONE);\n    if (shouldSplitReverseZone) {\n      int subnetCount \u003d ReverseZoneUtils.getSubnetCountForReverseZones(conf);\n      addSplitReverseZones(conf, subnetCount);\n      // Single reverse zone\n    } else {\n      Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n      Zone reverseLookupZone \u003d configureZone(reverseLookupZoneName, conf);\n      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {}
    },
    "f934f62fc71b4776e88f86d4254de0ea12147511": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5218. Initial core change for DNS for YARN. Contributed by Jonathan Maron\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,7 @@\n+  private void initializeReverseLookupZone(Configuration conf)\n+      throws IOException {\n+    Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n+    Zone reverseLookupZone \u003d\n+        configureZone(reverseLookupZoneName, conf);\n+    zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeReverseLookupZone(Configuration conf)\n      throws IOException {\n    Name reverseLookupZoneName \u003d getReverseZoneName(conf);\n    Zone reverseLookupZone \u003d\n        configureZone(reverseLookupZoneName, conf);\n    zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
    }
  }
}