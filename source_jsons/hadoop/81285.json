{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DomainSocketWatcher.java",
  "functionName": "add",
  "functionId": "add___sock-DomainSocket__handler-Handler",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java",
  "functionStartLine": 304,
  "functionEndLine": 332,
  "numCommitsSeen": 15,
  "timeTaken": 1753,
  "changeHistory": [
    "ccaf036662e22da14583942054898c99fa51dae5",
    "d35e79abc2fee7153a6168e6088f100de59d8c81",
    "95e0f616b96371824e653e761f3188c06615fe35",
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
    "f0d64a078da7e932b9509734f75170e3e525e68c",
    "140246bad816ae7bf06eda193cc624e1e62923e0"
  ],
  "changeHistoryShort": {
    "ccaf036662e22da14583942054898c99fa51dae5": "Ybodychange",
    "d35e79abc2fee7153a6168e6088f100de59d8c81": "Ybodychange",
    "95e0f616b96371824e653e761f3188c06615fe35": "Ybodychange",
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f": "Ybodychange",
    "f0d64a078da7e932b9509734f75170e3e525e68c": "Ybodychange",
    "140246bad816ae7bf06eda193cc624e1e62923e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ccaf036662e22da14583942054898c99fa51dae5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14539. Move commons logging APIs over to slf4j in hadoop-common. Contributed by Wenxin He.\n",
      "commitDate": "17/07/17 9:32 PM",
      "commitName": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "23/03/17 1:34 PM",
      "commitNameOld": "d35e79abc2fee7153a6168e6088f100de59d8c81",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 116.33,
      "commitsBetweenForRepo": 606,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void add(DomainSocket sock, Handler handler) {\n     lock.lock();\n     try {\n       if (closed) {\n         handler.handle(sock);\n-        IOUtils.cleanup(LOG, sock);\n+        IOUtils.cleanupWithLogger(LOG, sock);\n         return;\n       }\n       Entry entry \u003d new Entry(sock, handler);\n       try {\n         sock.refCount.reference();\n       } catch (ClosedChannelException e1) {\n         // If the socket is already closed before we add it, invoke the\n         // handler immediately.  Then we\u0027re done.\n         handler.handle(sock);\n         return;\n       }\n       toAdd.add(entry);\n       kick();\n       while (true) {\n         processedCond.awaitUninterruptibly();\n         if (!toAdd.contains(entry)) {\n           break;\n         }\n       }\n     } finally {\n       lock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(DomainSocket sock, Handler handler) {\n    lock.lock();\n    try {\n      if (closed) {\n        handler.handle(sock);\n        IOUtils.cleanupWithLogger(LOG, sock);\n        return;\n      }\n      Entry entry \u003d new Entry(sock, handler);\n      try {\n        sock.refCount.reference();\n      } catch (ClosedChannelException e1) {\n        // If the socket is already closed before we add it, invoke the\n        // handler immediately.  Then we\u0027re done.\n        handler.handle(sock);\n        return;\n      }\n      toAdd.add(entry);\n      kick();\n      while (true) {\n        processedCond.awaitUninterruptibly();\n        if (!toAdd.contains(entry)) {\n          break;\n        }\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java",
      "extendedDetails": {}
    },
    "d35e79abc2fee7153a6168e6088f100de59d8c81": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14214. DomainSocketWatcher::add()/delete() should not self interrupt while looping await(). Contributed by Mingliang Liu\n",
      "commitDate": "23/03/17 1:34 PM",
      "commitName": "d35e79abc2fee7153a6168e6088f100de59d8c81",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "28/05/15 11:52 AM",
      "commitNameOld": "246cefa089156a50bf086b8b1e4d4324d66dc58c",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 665.07,
      "commitsBetweenForRepo": 4471,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,29 @@\n   public void add(DomainSocket sock, Handler handler) {\n     lock.lock();\n     try {\n       if (closed) {\n         handler.handle(sock);\n         IOUtils.cleanup(LOG, sock);\n         return;\n       }\n       Entry entry \u003d new Entry(sock, handler);\n       try {\n         sock.refCount.reference();\n       } catch (ClosedChannelException e1) {\n         // If the socket is already closed before we add it, invoke the\n         // handler immediately.  Then we\u0027re done.\n         handler.handle(sock);\n         return;\n       }\n       toAdd.add(entry);\n       kick();\n       while (true) {\n-        try {\n-          processedCond.await();\n-        } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n-        }\n+        processedCond.awaitUninterruptibly();\n         if (!toAdd.contains(entry)) {\n           break;\n         }\n       }\n     } finally {\n       lock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(DomainSocket sock, Handler handler) {\n    lock.lock();\n    try {\n      if (closed) {\n        handler.handle(sock);\n        IOUtils.cleanup(LOG, sock);\n        return;\n      }\n      Entry entry \u003d new Entry(sock, handler);\n      try {\n        sock.refCount.reference();\n      } catch (ClosedChannelException e1) {\n        // If the socket is already closed before we add it, invoke the\n        // handler immediately.  Then we\u0027re done.\n        handler.handle(sock);\n        return;\n      }\n      toAdd.add(entry);\n      kick();\n      while (true) {\n        processedCond.awaitUninterruptibly();\n        if (!toAdd.contains(entry)) {\n          break;\n        }\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java",
      "extendedDetails": {}
    },
    "95e0f616b96371824e653e761f3188c06615fe35": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6057. DomainSocketWatcher.watcherThread should be marked as a daemon thread (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574787 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/14 11:57 PM",
      "commitName": "95e0f616b96371824e653e761f3188c06615fe35",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "03/03/14 10:31 PM",
      "commitNameOld": "33500fd304ee1c9a1b5966de1eb1e78b58f0af26",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 2.06,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,33 @@\n   public void add(DomainSocket sock, Handler handler) {\n     lock.lock();\n     try {\n-      checkNotClosed();\n+      if (closed) {\n+        handler.handle(sock);\n+        IOUtils.cleanup(LOG, sock);\n+        return;\n+      }\n       Entry entry \u003d new Entry(sock, handler);\n       try {\n         sock.refCount.reference();\n       } catch (ClosedChannelException e1) {\n         // If the socket is already closed before we add it, invoke the\n         // handler immediately.  Then we\u0027re done.\n         handler.handle(sock);\n         return;\n       }\n       toAdd.add(entry);\n       kick();\n       while (true) {\n         try {\n           processedCond.await();\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n         }\n         if (!toAdd.contains(entry)) {\n           break;\n         }\n-        checkNotClosed();\n       }\n     } finally {\n       lock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(DomainSocket sock, Handler handler) {\n    lock.lock();\n    try {\n      if (closed) {\n        handler.handle(sock);\n        IOUtils.cleanup(LOG, sock);\n        return;\n      }\n      Entry entry \u003d new Entry(sock, handler);\n      try {\n        sock.refCount.reference();\n      } catch (ClosedChannelException e1) {\n        // If the socket is already closed before we add it, invoke the\n        // handler immediately.  Then we\u0027re done.\n        handler.handle(sock);\n        return;\n      }\n      toAdd.add(entry);\n      kick();\n      while (true) {\n        try {\n          processedCond.await();\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n        if (!toAdd.contains(entry)) {\n          break;\n        }\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java",
      "extendedDetails": {}
    },
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/14 7:58 PM",
      "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "12/02/14 7:10 PM",
      "commitNameOld": "f0d64a078da7e932b9509734f75170e3e525e68c",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 18.03,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   public void add(DomainSocket sock, Handler handler) {\n+    lock.lock();\n     try {\n-      lock.lock();\n       checkNotClosed();\n       Entry entry \u003d new Entry(sock, handler);\n       try {\n         sock.refCount.reference();\n-      } catch (ClosedChannelException e) {\n-        Preconditions.checkArgument(false,\n-            \"tried to add a closed DomainSocket to \" + this);\n+      } catch (ClosedChannelException e1) {\n+        // If the socket is already closed before we add it, invoke the\n+        // handler immediately.  Then we\u0027re done.\n+        handler.handle(sock);\n+        return;\n       }\n       toAdd.add(entry);\n       kick();\n       while (true) {\n         try {\n           processedCond.await();\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n         }\n         if (!toAdd.contains(entry)) {\n           break;\n         }\n         checkNotClosed();\n       }\n     } finally {\n       lock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(DomainSocket sock, Handler handler) {\n    lock.lock();\n    try {\n      checkNotClosed();\n      Entry entry \u003d new Entry(sock, handler);\n      try {\n        sock.refCount.reference();\n      } catch (ClosedChannelException e1) {\n        // If the socket is already closed before we add it, invoke the\n        // handler immediately.  Then we\u0027re done.\n        handler.handle(sock);\n        return;\n      }\n      toAdd.add(entry);\n      kick();\n      while (true) {\n        try {\n          processedCond.await();\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n        if (!toAdd.contains(entry)) {\n          break;\n        }\n        checkNotClosed();\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java",
      "extendedDetails": {}
    },
    "f0d64a078da7e932b9509734f75170e3e525e68c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5940.  Minor cleanups to ShortCircuitReplica, FsDatasetCache, and DomainSocketWatcher (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1567835 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/14 7:10 PM",
      "commitName": "f0d64a078da7e932b9509734f75170e3e525e68c",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "31/01/14 6:25 PM",
      "commitNameOld": "140246bad816ae7bf06eda193cc624e1e62923e0",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 12.03,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public void add(DomainSocket sock, Handler handler) {\n     try {\n       lock.lock();\n       checkNotClosed();\n       Entry entry \u003d new Entry(sock, handler);\n       try {\n         sock.refCount.reference();\n       } catch (ClosedChannelException e) {\n         Preconditions.checkArgument(false,\n             \"tried to add a closed DomainSocket to \" + this);\n       }\n       toAdd.add(entry);\n       kick();\n       while (true) {\n         try {\n           processedCond.await();\n         } catch (InterruptedException e) {\n-          this.interrupt();\n+          Thread.currentThread().interrupt();\n         }\n         if (!toAdd.contains(entry)) {\n           break;\n         }\n         checkNotClosed();\n       }\n     } finally {\n       lock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(DomainSocket sock, Handler handler) {\n    try {\n      lock.lock();\n      checkNotClosed();\n      Entry entry \u003d new Entry(sock, handler);\n      try {\n        sock.refCount.reference();\n      } catch (ClosedChannelException e) {\n        Preconditions.checkArgument(false,\n            \"tried to add a closed DomainSocket to \" + this);\n      }\n      toAdd.add(entry);\n      kick();\n      while (true) {\n        try {\n          processedCond.await();\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n        if (!toAdd.contains(entry)) {\n          break;\n        }\n        checkNotClosed();\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java",
      "extendedDetails": {}
    },
    "140246bad816ae7bf06eda193cc624e1e62923e0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5746.  Add ShortCircuitSharedMemorySegment (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563362 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/14 6:25 PM",
      "commitName": "140246bad816ae7bf06eda193cc624e1e62923e0",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,28 @@\n+  public void add(DomainSocket sock, Handler handler) {\n+    try {\n+      lock.lock();\n+      checkNotClosed();\n+      Entry entry \u003d new Entry(sock, handler);\n+      try {\n+        sock.refCount.reference();\n+      } catch (ClosedChannelException e) {\n+        Preconditions.checkArgument(false,\n+            \"tried to add a closed DomainSocket to \" + this);\n+      }\n+      toAdd.add(entry);\n+      kick();\n+      while (true) {\n+        try {\n+          processedCond.await();\n+        } catch (InterruptedException e) {\n+          this.interrupt();\n+        }\n+        if (!toAdd.contains(entry)) {\n+          break;\n+        }\n+        checkNotClosed();\n+      }\n+    } finally {\n+      lock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(DomainSocket sock, Handler handler) {\n    try {\n      lock.lock();\n      checkNotClosed();\n      Entry entry \u003d new Entry(sock, handler);\n      try {\n        sock.refCount.reference();\n      } catch (ClosedChannelException e) {\n        Preconditions.checkArgument(false,\n            \"tried to add a closed DomainSocket to \" + this);\n      }\n      toAdd.add(entry);\n      kick();\n      while (true) {\n        try {\n          processedCond.await();\n        } catch (InterruptedException e) {\n          this.interrupt();\n        }\n        if (!toAdd.contains(entry)) {\n          break;\n        }\n        checkNotClosed();\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java"
    }
  }
}