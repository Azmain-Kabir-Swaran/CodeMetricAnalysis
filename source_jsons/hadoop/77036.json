{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UTF8.java",
  "functionName": "readChars",
  "functionId": "readChars___in-DataInput__buffer-StringBuilder__nBytes-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
  "functionStartLine": 257,
  "functionEndLine": 310,
  "numCommitsSeen": 16,
  "timeTaken": 1180,
  "changeHistory": [
    "6681523c870541390864e021cbe1908b6797f622",
    "bd239a8d97cd98d7c3515882828d6cfc32de57ad",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "0485fe23ba76f7d96a198aed00f392fd571124bc",
    "b1ec35e60c248773adc6b00f722d307cb9f660db",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "6681523c870541390864e021cbe1908b6797f622": "Ymultichange(Yexceptionschange,Ybodychange)",
    "bd239a8d97cd98d7c3515882828d6cfc32de57ad": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "0485fe23ba76f7d96a198aed00f392fd571124bc": "Yparameterchange",
    "b1ec35e60c248773adc6b00f722d307cb9f660db": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6681523c870541390864e021cbe1908b6797f622": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-4282. TestEditLog.testFuzzSequences FAILED in all pre-commit test. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1418214 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/12 12:18 AM",
      "commitName": "6681523c870541390864e021cbe1908b6797f622",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-4282. TestEditLog.testFuzzSequences FAILED in all pre-commit test. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1418214 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/12/12 12:18 AM",
          "commitName": "6681523c870541390864e021cbe1908b6797f622",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "05/12/12 1:13 PM",
          "commitNameOld": "bd239a8d97cd98d7c3515882828d6cfc32de57ad",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.46,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,54 @@\n   private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n-    throws IOException {\n+    throws UTFDataFormatException, IOException {\n     DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n     obuf.reset();\n     obuf.write(in, nBytes);\n     byte[] bytes \u003d obuf.getData();\n     int i \u003d 0;\n     while (i \u003c nBytes) {\n       byte b \u003d bytes[i++];\n       if ((b \u0026 0x80) \u003d\u003d 0) {\n         // 0b0xxxxxxx: 1-byte sequence\n         buffer.append((char)(b \u0026 0x7F));\n       } else if ((b \u0026 0xE0) \u003d\u003d 0xC0) {\n+        if (i \u003e\u003d nBytes) {\n+          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n+              StringUtils.byteToHexString(bytes, i - 1, 1));\n+        }\n         // 0b110xxxxx: 2-byte sequence\n         buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n             | (bytes[i++] \u0026 0x3F)));\n       } else if ((b \u0026 0xF0) \u003d\u003d 0xE0) {\n         // 0b1110xxxx: 3-byte sequence\n+        if (i + 1 \u003e\u003d nBytes) {\n+          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n+              StringUtils.byteToHexString(bytes, i - 1, 2));\n+        }\n         buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n             | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n             |  (bytes[i++] \u0026 0x3F)));\n       } else if ((b \u0026 0xF8) \u003d\u003d 0xF0) {\n+        if (i + 2 \u003e\u003d nBytes) {\n+          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n+              StringUtils.byteToHexString(bytes, i - 1, 3));\n+        }\n         // 0b11110xxx: 4-byte sequence\n         int codepoint \u003d\n             ((b \u0026 0x07) \u003c\u003c 18)\n           | ((bytes[i++] \u0026 0x3F) \u003c\u003c  12)\n           | ((bytes[i++] \u0026 0x3F) \u003c\u003c  6)\n           | ((bytes[i++] \u0026 0x3F));\n         buffer.append(highSurrogate(codepoint))\n               .append(lowSurrogate(codepoint));\n       } else {\n         // The UTF8 standard describes 5-byte and 6-byte sequences, but\n         // these are no longer allowed as of 2003 (see RFC 3629)\n \n         // Only show the next 6 bytes max in the error code - in case the\n         // buffer is large, this will prevent an exceedingly large message.\n         int endForError \u003d Math.min(i + 5, nBytes);\n-        throw new IOException(\"Invalid UTF8 at \" +\n-          StringUtils.byteToHexString(bytes, i - 1, endForError));\n+        throw new UTFDataFormatException(\"Invalid UTF8 at \" +\n+            StringUtils.byteToHexString(bytes, i - 1, endForError));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws UTFDataFormatException, IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        // 0b0xxxxxxx: 1-byte sequence\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) \u003d\u003d 0xC0) {\n        if (i \u003e\u003d nBytes) {\n          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n              StringUtils.byteToHexString(bytes, i - 1, 1));\n        }\n        // 0b110xxxxx: 2-byte sequence\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else if ((b \u0026 0xF0) \u003d\u003d 0xE0) {\n        // 0b1110xxxx: 3-byte sequence\n        if (i + 1 \u003e\u003d nBytes) {\n          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n              StringUtils.byteToHexString(bytes, i - 1, 2));\n        }\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      } else if ((b \u0026 0xF8) \u003d\u003d 0xF0) {\n        if (i + 2 \u003e\u003d nBytes) {\n          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n              StringUtils.byteToHexString(bytes, i - 1, 3));\n        }\n        // 0b11110xxx: 4-byte sequence\n        int codepoint \u003d\n            ((b \u0026 0x07) \u003c\u003c 18)\n          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  12)\n          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  6)\n          | ((bytes[i++] \u0026 0x3F));\n        buffer.append(highSurrogate(codepoint))\n              .append(lowSurrogate(codepoint));\n      } else {\n        // The UTF8 standard describes 5-byte and 6-byte sequences, but\n        // these are no longer allowed as of 2003 (see RFC 3629)\n\n        // Only show the next 6 bytes max in the error code - in case the\n        // buffer is large, this will prevent an exceedingly large message.\n        int endForError \u003d Math.min(i + 5, nBytes);\n        throw new UTFDataFormatException(\"Invalid UTF8 at \" +\n            StringUtils.byteToHexString(bytes, i - 1, endForError));\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[UTFDataFormatException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4282. TestEditLog.testFuzzSequences FAILED in all pre-commit test. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1418214 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/12/12 12:18 AM",
          "commitName": "6681523c870541390864e021cbe1908b6797f622",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "05/12/12 1:13 PM",
          "commitNameOld": "bd239a8d97cd98d7c3515882828d6cfc32de57ad",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.46,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,54 @@\n   private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n-    throws IOException {\n+    throws UTFDataFormatException, IOException {\n     DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n     obuf.reset();\n     obuf.write(in, nBytes);\n     byte[] bytes \u003d obuf.getData();\n     int i \u003d 0;\n     while (i \u003c nBytes) {\n       byte b \u003d bytes[i++];\n       if ((b \u0026 0x80) \u003d\u003d 0) {\n         // 0b0xxxxxxx: 1-byte sequence\n         buffer.append((char)(b \u0026 0x7F));\n       } else if ((b \u0026 0xE0) \u003d\u003d 0xC0) {\n+        if (i \u003e\u003d nBytes) {\n+          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n+              StringUtils.byteToHexString(bytes, i - 1, 1));\n+        }\n         // 0b110xxxxx: 2-byte sequence\n         buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n             | (bytes[i++] \u0026 0x3F)));\n       } else if ((b \u0026 0xF0) \u003d\u003d 0xE0) {\n         // 0b1110xxxx: 3-byte sequence\n+        if (i + 1 \u003e\u003d nBytes) {\n+          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n+              StringUtils.byteToHexString(bytes, i - 1, 2));\n+        }\n         buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n             | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n             |  (bytes[i++] \u0026 0x3F)));\n       } else if ((b \u0026 0xF8) \u003d\u003d 0xF0) {\n+        if (i + 2 \u003e\u003d nBytes) {\n+          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n+              StringUtils.byteToHexString(bytes, i - 1, 3));\n+        }\n         // 0b11110xxx: 4-byte sequence\n         int codepoint \u003d\n             ((b \u0026 0x07) \u003c\u003c 18)\n           | ((bytes[i++] \u0026 0x3F) \u003c\u003c  12)\n           | ((bytes[i++] \u0026 0x3F) \u003c\u003c  6)\n           | ((bytes[i++] \u0026 0x3F));\n         buffer.append(highSurrogate(codepoint))\n               .append(lowSurrogate(codepoint));\n       } else {\n         // The UTF8 standard describes 5-byte and 6-byte sequences, but\n         // these are no longer allowed as of 2003 (see RFC 3629)\n \n         // Only show the next 6 bytes max in the error code - in case the\n         // buffer is large, this will prevent an exceedingly large message.\n         int endForError \u003d Math.min(i + 5, nBytes);\n-        throw new IOException(\"Invalid UTF8 at \" +\n-          StringUtils.byteToHexString(bytes, i - 1, endForError));\n+        throw new UTFDataFormatException(\"Invalid UTF8 at \" +\n+            StringUtils.byteToHexString(bytes, i - 1, endForError));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws UTFDataFormatException, IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        // 0b0xxxxxxx: 1-byte sequence\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) \u003d\u003d 0xC0) {\n        if (i \u003e\u003d nBytes) {\n          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n              StringUtils.byteToHexString(bytes, i - 1, 1));\n        }\n        // 0b110xxxxx: 2-byte sequence\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else if ((b \u0026 0xF0) \u003d\u003d 0xE0) {\n        // 0b1110xxxx: 3-byte sequence\n        if (i + 1 \u003e\u003d nBytes) {\n          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n              StringUtils.byteToHexString(bytes, i - 1, 2));\n        }\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      } else if ((b \u0026 0xF8) \u003d\u003d 0xF0) {\n        if (i + 2 \u003e\u003d nBytes) {\n          throw new UTFDataFormatException(\"Truncated UTF8 at \" +\n              StringUtils.byteToHexString(bytes, i - 1, 3));\n        }\n        // 0b11110xxx: 4-byte sequence\n        int codepoint \u003d\n            ((b \u0026 0x07) \u003c\u003c 18)\n          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  12)\n          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  6)\n          | ((bytes[i++] \u0026 0x3F));\n        buffer.append(highSurrogate(codepoint))\n              .append(lowSurrogate(codepoint));\n      } else {\n        // The UTF8 standard describes 5-byte and 6-byte sequences, but\n        // these are no longer allowed as of 2003 (see RFC 3629)\n\n        // Only show the next 6 bytes max in the error code - in case the\n        // buffer is large, this will prevent an exceedingly large message.\n        int endForError \u003d Math.min(i + 5, nBytes);\n        throw new UTFDataFormatException(\"Invalid UTF8 at \" +\n            StringUtils.byteToHexString(bytes, i - 1, endForError));\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
          "extendedDetails": {}
        }
      ]
    },
    "bd239a8d97cd98d7c3515882828d6cfc32de57ad": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9103. UTF8 class does not properly decode Unicode characters outside the basic multilingual plane. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417649 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/12 1:13 PM",
      "commitName": "bd239a8d97cd98d7c3515882828d6cfc32de57ad",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 102.84,
      "commitsBetweenForRepo": 559,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,42 @@\n   private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n     throws IOException {\n     DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n     obuf.reset();\n     obuf.write(in, nBytes);\n     byte[] bytes \u003d obuf.getData();\n     int i \u003d 0;\n     while (i \u003c nBytes) {\n       byte b \u003d bytes[i++];\n       if ((b \u0026 0x80) \u003d\u003d 0) {\n+        // 0b0xxxxxxx: 1-byte sequence\n         buffer.append((char)(b \u0026 0x7F));\n-      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n+      } else if ((b \u0026 0xE0) \u003d\u003d 0xC0) {\n+        // 0b110xxxxx: 2-byte sequence\n         buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n             | (bytes[i++] \u0026 0x3F)));\n-      } else {\n+      } else if ((b \u0026 0xF0) \u003d\u003d 0xE0) {\n+        // 0b1110xxxx: 3-byte sequence\n         buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n             | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n             |  (bytes[i++] \u0026 0x3F)));\n+      } else if ((b \u0026 0xF8) \u003d\u003d 0xF0) {\n+        // 0b11110xxx: 4-byte sequence\n+        int codepoint \u003d\n+            ((b \u0026 0x07) \u003c\u003c 18)\n+          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  12)\n+          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  6)\n+          | ((bytes[i++] \u0026 0x3F));\n+        buffer.append(highSurrogate(codepoint))\n+              .append(lowSurrogate(codepoint));\n+      } else {\n+        // The UTF8 standard describes 5-byte and 6-byte sequences, but\n+        // these are no longer allowed as of 2003 (see RFC 3629)\n+\n+        // Only show the next 6 bytes max in the error code - in case the\n+        // buffer is large, this will prevent an exceedingly large message.\n+        int endForError \u003d Math.min(i + 5, nBytes);\n+        throw new IOException(\"Invalid UTF8 at \" +\n+          StringUtils.byteToHexString(bytes, i - 1, endForError));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        // 0b0xxxxxxx: 1-byte sequence\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) \u003d\u003d 0xC0) {\n        // 0b110xxxxx: 2-byte sequence\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else if ((b \u0026 0xF0) \u003d\u003d 0xE0) {\n        // 0b1110xxxx: 3-byte sequence\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      } else if ((b \u0026 0xF8) \u003d\u003d 0xF0) {\n        // 0b11110xxx: 4-byte sequence\n        int codepoint \u003d\n            ((b \u0026 0x07) \u003c\u003c 18)\n          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  12)\n          | ((bytes[i++] \u0026 0x3F) \u003c\u003c  6)\n          | ((bytes[i++] \u0026 0x3F));\n        buffer.append(highSurrogate(codepoint))\n              .append(lowSurrogate(codepoint));\n      } else {\n        // The UTF8 standard describes 5-byte and 6-byte sequences, but\n        // these are no longer allowed as of 2003 (see RFC 3629)\n\n        // Only show the next 6 bytes max in the error code - in case the\n        // buffer is large, this will prevent an exceedingly large message.\n        int endForError \u003d Math.min(i + 5, nBytes);\n        throw new IOException(\"Invalid UTF8 at \" +\n          StringUtils.byteToHexString(bytes, i - 1, endForError));\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else {\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else {\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/UTF8.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else {\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/UTF8.java",
        "newPath": "common/src/java/org/apache/hadoop/io/UTF8.java"
      }
    },
    "0485fe23ba76f7d96a198aed00f392fd571124bc": {
      "type": "Yparameterchange",
      "commitMessage": "HADOOP-6471. StringBuffer -\u003e StringBuilder - conversion of references as necessary. Contributed by Kay Kay.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@926256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/10 12:08 PM",
      "commitName": "0485fe23ba76f7d96a198aed00f392fd571124bc",
      "commitAuthor": "Thomas White",
      "commitDateOld": "03/03/10 11:20 PM",
      "commitNameOld": "b1ec35e60c248773adc6b00f722d307cb9f660db",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 18.49,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  private static void readChars(DataInput in, StringBuffer buffer, int nBytes)\n+  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n     throws IOException {\n     DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n     obuf.reset();\n     obuf.write(in, nBytes);\n     byte[] bytes \u003d obuf.getData();\n     int i \u003d 0;\n     while (i \u003c nBytes) {\n       byte b \u003d bytes[i++];\n       if ((b \u0026 0x80) \u003d\u003d 0) {\n         buffer.append((char)(b \u0026 0x7F));\n       } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n         buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n             | (bytes[i++] \u0026 0x3F)));\n       } else {\n         buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n             | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n             |  (bytes[i++] \u0026 0x3F)));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void readChars(DataInput in, StringBuilder buffer, int nBytes)\n    throws IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else {\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldValue": "[in-DataInput, buffer-StringBuffer, nBytes-int]",
        "newValue": "[in-DataInput, buffer-StringBuilder, nBytes-int]"
      }
    },
    "b1ec35e60c248773adc6b00f722d307cb9f660db": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6609. Fixed deadlock in RPC by replacing shared static \nDataOutputBuffer in the UTF8 class with a thread local variable. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918880 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/10 11:20 PM",
      "commitName": "b1ec35e60c248773adc6b00f722d307cb9f660db",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "10/02/10 1:58 PM",
      "commitNameOld": "8061821ca2d83dcc98358ff0239289ec2f3f42f4",
      "commitAuthorOld": "Doug Cutting",
      "daysBetweenCommits": 21.39,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private static void readChars(DataInput in, StringBuffer buffer, int nBytes)\n     throws IOException {\n-    synchronized (OBUF) {\n-      OBUF.reset();\n-      OBUF.write(in, nBytes);\n-      byte[] bytes \u003d OBUF.getData();\n-      int i \u003d 0;\n-      while (i \u003c nBytes) {\n-        byte b \u003d bytes[i++];\n-        if ((b \u0026 0x80) \u003d\u003d 0) {\n-          buffer.append((char)(b \u0026 0x7F));\n-        } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n-          buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n-                               | (bytes[i++] \u0026 0x3F)));\n-        } else {\n-          buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n-                               | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n-                               |  (bytes[i++] \u0026 0x3F)));\n-        }\n+    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n+    obuf.reset();\n+    obuf.write(in, nBytes);\n+    byte[] bytes \u003d obuf.getData();\n+    int i \u003d 0;\n+    while (i \u003c nBytes) {\n+      byte b \u003d bytes[i++];\n+      if ((b \u0026 0x80) \u003d\u003d 0) {\n+        buffer.append((char)(b \u0026 0x7F));\n+      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n+        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n+            | (bytes[i++] \u0026 0x3F)));\n+      } else {\n+        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n+            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n+            |  (bytes[i++] \u0026 0x3F)));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void readChars(DataInput in, StringBuffer buffer, int nBytes)\n    throws IOException {\n    DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n    obuf.reset();\n    obuf.write(in, nBytes);\n    byte[] bytes \u003d obuf.getData();\n    int i \u003d 0;\n    while (i \u003c nBytes) {\n      byte b \u003d bytes[i++];\n      if ((b \u0026 0x80) \u003d\u003d 0) {\n        buffer.append((char)(b \u0026 0x7F));\n      } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n        buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n            | (bytes[i++] \u0026 0x3F)));\n      } else {\n        buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n            | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n            |  (bytes[i++] \u0026 0x3F)));\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void readChars(DataInput in, StringBuffer buffer, int nBytes)\n+    throws IOException {\n+    synchronized (OBUF) {\n+      OBUF.reset();\n+      OBUF.write(in, nBytes);\n+      byte[] bytes \u003d OBUF.getData();\n+      int i \u003d 0;\n+      while (i \u003c nBytes) {\n+        byte b \u003d bytes[i++];\n+        if ((b \u0026 0x80) \u003d\u003d 0) {\n+          buffer.append((char)(b \u0026 0x7F));\n+        } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n+          buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n+                               | (bytes[i++] \u0026 0x3F)));\n+        } else {\n+          buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n+                               | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n+                               |  (bytes[i++] \u0026 0x3F)));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void readChars(DataInput in, StringBuffer buffer, int nBytes)\n    throws IOException {\n    synchronized (OBUF) {\n      OBUF.reset();\n      OBUF.write(in, nBytes);\n      byte[] bytes \u003d OBUF.getData();\n      int i \u003d 0;\n      while (i \u003c nBytes) {\n        byte b \u003d bytes[i++];\n        if ((b \u0026 0x80) \u003d\u003d 0) {\n          buffer.append((char)(b \u0026 0x7F));\n        } else if ((b \u0026 0xE0) !\u003d 0xE0) {\n          buffer.append((char)(((b \u0026 0x1F) \u003c\u003c 6)\n                               | (bytes[i++] \u0026 0x3F)));\n        } else {\n          buffer.append((char)(((b \u0026 0x0F) \u003c\u003c 12)\n                               | ((bytes[i++] \u0026 0x3F) \u003c\u003c 6)\n                               |  (bytes[i++] \u0026 0x3F)));\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/UTF8.java"
    }
  }
}