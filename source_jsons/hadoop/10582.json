{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "processQueue",
  "functionId": "processQueue",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 1321,
  "functionEndLine": 1338,
  "numCommitsSeen": 125,
  "timeTaken": 1241,
  "changeHistory": [
    "b86895485d95440de099831e0db38db037f16bdd"
  ],
  "changeHistoryShort": {
    "b86895485d95440de099831e0db38db037f16bdd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b86895485d95440de099831e0db38db037f16bdd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14997. BPServiceActor processes commands from NameNode asynchronously. Contributed by Xiaoqiao He.\n",
      "commitDate": "19/12/19 9:34 AM",
      "commitName": "b86895485d95440de099831e0db38db037f16bdd",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,18 @@\n+    private void processQueue() {\n+      while (shouldRun()) {\n+        try {\n+          Runnable action \u003d queue.take();\n+          action.run();\n+          dn.getMetrics().incrActorCmdQueueLength(-1);\n+          dn.getMetrics().incrNumProcessedCommands();\n+        } catch (InterruptedException e) {\n+          LOG.error(\"{} encountered interrupt and exit.\", getName());\n+          // ignore unless thread was specifically interrupted.\n+          if (Thread.interrupted()) {\n+            break;\n+          }\n+        }\n+      }\n+      dn.getMetrics().incrActorCmdQueueLength(-1 * queue.size());\n+      queue.clear();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processQueue() {\n      while (shouldRun()) {\n        try {\n          Runnable action \u003d queue.take();\n          action.run();\n          dn.getMetrics().incrActorCmdQueueLength(-1);\n          dn.getMetrics().incrNumProcessedCommands();\n        } catch (InterruptedException e) {\n          LOG.error(\"{} encountered interrupt and exit.\", getName());\n          // ignore unless thread was specifically interrupted.\n          if (Thread.interrupted()) {\n            break;\n          }\n        }\n      }\n      dn.getMetrics().incrActorCmdQueueLength(-1 * queue.size());\n      queue.clear();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java"
    }
  }
}