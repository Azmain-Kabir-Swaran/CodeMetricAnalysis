{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CredentialsSys.java",
  "functionName": "write",
  "functionId": "write___xdr-XDR",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/security/CredentialsSys.java",
  "functionStartLine": 106,
  "functionEndLine": 134,
  "numCommitsSeen": 5,
  "timeTaken": 1432,
  "changeHistory": [
    "770b5eb2db686275df445be9280e76cc3710ffdc",
    "846ada2de33f9840d6e60fd7339ecc2d71f277c7",
    "42d8858c5d237c4d9ab439c570a17b7fcaf781c2",
    "613979c8fdacf25fd563395ecc399c4de94d3ee7"
  ],
  "changeHistoryShort": {
    "770b5eb2db686275df445be9280e76cc3710ffdc": "Ybodychange",
    "846ada2de33f9840d6e60fd7339ecc2d71f277c7": "Ybodychange",
    "42d8858c5d237c4d9ab439c570a17b7fcaf781c2": "Ybodychange",
    "613979c8fdacf25fd563395ecc399c4de94d3ee7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "770b5eb2db686275df445be9280e76cc3710ffdc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13444. Replace org.apache.commons.io.Charsets with java.nio.charset.StandardCharsets. Contributed by Vincent Poon.\n",
      "commitDate": "01/08/16 1:35 AM",
      "commitName": "770b5eb2db686275df445be9280e76cc3710ffdc",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "29/06/16 5:32 PM",
      "commitNameOld": "846ada2de33f9840d6e60fd7339ecc2d71f277c7",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 32.34,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void write(XDR xdr) {\n     int padding \u003d 0;\n     // Ensure there are padding bytes if hostname is not a multiple of 4.\n-    padding \u003d 4 - (mHostName.getBytes(Charsets.UTF_8).length % 4);\n+    padding \u003d 4 - (mHostName.getBytes(StandardCharsets.UTF_8).length % 4);\n     // padding bytes is zero if hostname is already a multiple of 4.\n     padding \u003d padding % 4;\n     // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n-    mCredentialsLength \u003d 20 + mHostName.getBytes(Charsets.UTF_8).length;\n+    mCredentialsLength \u003d 20 + mHostName.getBytes(StandardCharsets.UTF_8).length;\n     mCredentialsLength \u003d mCredentialsLength + padding;\n     // mAuxGIDs\n     if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n       mCredentialsLength +\u003d mAuxGIDs.length * 4;\n     }\n     xdr.writeInt(mCredentialsLength);\n     \n     xdr.writeInt(mStamp);\n     xdr.writeString(mHostName);\n     xdr.writeInt(mUID);\n     xdr.writeInt(mGID);\n     \n     if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n       xdr.writeInt(0);\n     } else {\n       xdr.writeInt(mAuxGIDs.length);\n       for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n         xdr.writeInt(mAuxGIDs[i]);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(XDR xdr) {\n    int padding \u003d 0;\n    // Ensure there are padding bytes if hostname is not a multiple of 4.\n    padding \u003d 4 - (mHostName.getBytes(StandardCharsets.UTF_8).length % 4);\n    // padding bytes is zero if hostname is already a multiple of 4.\n    padding \u003d padding % 4;\n    // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n    mCredentialsLength \u003d 20 + mHostName.getBytes(StandardCharsets.UTF_8).length;\n    mCredentialsLength \u003d mCredentialsLength + padding;\n    // mAuxGIDs\n    if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n      mCredentialsLength +\u003d mAuxGIDs.length * 4;\n    }\n    xdr.writeInt(mCredentialsLength);\n    \n    xdr.writeInt(mStamp);\n    xdr.writeString(mHostName);\n    xdr.writeInt(mUID);\n    xdr.writeInt(mGID);\n    \n    if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n      xdr.writeInt(0);\n    } else {\n      xdr.writeInt(mAuxGIDs.length);\n      for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n        xdr.writeInt(mAuxGIDs[i]);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/security/CredentialsSys.java",
      "extendedDetails": {}
    },
    "846ada2de33f9840d6e60fd7339ecc2d71f277c7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12345. Pad hostname correctly in CredentialsSys.java. Contributed by Pradeep Nayak Udupi Kadbet.\n",
      "commitDate": "29/06/16 5:32 PM",
      "commitName": "846ada2de33f9840d6e60fd7339ecc2d71f277c7",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "15/12/14 11:28 AM",
      "commitNameOld": "42d8858c5d237c4d9ab439c570a17b7fcaf781c2",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 562.21,
      "commitsBetweenForRepo": 4248,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,29 @@\n   public void write(XDR xdr) {\n+    int padding \u003d 0;\n+    // Ensure there are padding bytes if hostname is not a multiple of 4.\n+    padding \u003d 4 - (mHostName.getBytes(Charsets.UTF_8).length % 4);\n+    // padding bytes is zero if hostname is already a multiple of 4.\n+    padding \u003d padding % 4;\n     // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n     mCredentialsLength \u003d 20 + mHostName.getBytes(Charsets.UTF_8).length;\n+    mCredentialsLength \u003d mCredentialsLength + padding;\n     // mAuxGIDs\n     if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n       mCredentialsLength +\u003d mAuxGIDs.length * 4;\n     }\n     xdr.writeInt(mCredentialsLength);\n     \n     xdr.writeInt(mStamp);\n     xdr.writeString(mHostName);\n     xdr.writeInt(mUID);\n     xdr.writeInt(mGID);\n     \n     if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n       xdr.writeInt(0);\n     } else {\n       xdr.writeInt(mAuxGIDs.length);\n       for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n         xdr.writeInt(mAuxGIDs[i]);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(XDR xdr) {\n    int padding \u003d 0;\n    // Ensure there are padding bytes if hostname is not a multiple of 4.\n    padding \u003d 4 - (mHostName.getBytes(Charsets.UTF_8).length % 4);\n    // padding bytes is zero if hostname is already a multiple of 4.\n    padding \u003d padding % 4;\n    // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n    mCredentialsLength \u003d 20 + mHostName.getBytes(Charsets.UTF_8).length;\n    mCredentialsLength \u003d mCredentialsLength + padding;\n    // mAuxGIDs\n    if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n      mCredentialsLength +\u003d mAuxGIDs.length * 4;\n    }\n    xdr.writeInt(mCredentialsLength);\n    \n    xdr.writeInt(mStamp);\n    xdr.writeString(mHostName);\n    xdr.writeInt(mUID);\n    xdr.writeInt(mGID);\n    \n    if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n      xdr.writeInt(0);\n    } else {\n      xdr.writeInt(mAuxGIDs.length);\n      for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n        xdr.writeInt(mAuxGIDs[i]);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/security/CredentialsSys.java",
      "extendedDetails": {}
    },
    "42d8858c5d237c4d9ab439c570a17b7fcaf781c2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7516. Fix findbugs warnings in hdfs-nfs project. Contributed by Brandon Li\n",
      "commitDate": "15/12/14 11:28 AM",
      "commitName": "42d8858c5d237c4d9ab439c570a17b7fcaf781c2",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "27/06/14 5:00 AM",
      "commitNameOld": "5f880f79d275c74475836a1932be6f6f2daa1407",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 171.31,
      "commitsBetweenForRepo": 1543,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void write(XDR xdr) {\n     // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n-    mCredentialsLength \u003d 20 + mHostName.getBytes().length;\n+    mCredentialsLength \u003d 20 + mHostName.getBytes(Charsets.UTF_8).length;\n     // mAuxGIDs\n     if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n       mCredentialsLength +\u003d mAuxGIDs.length * 4;\n     }\n     xdr.writeInt(mCredentialsLength);\n     \n     xdr.writeInt(mStamp);\n     xdr.writeString(mHostName);\n     xdr.writeInt(mUID);\n     xdr.writeInt(mGID);\n     \n     if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n       xdr.writeInt(0);\n     } else {\n       xdr.writeInt(mAuxGIDs.length);\n       for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n         xdr.writeInt(mAuxGIDs[i]);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(XDR xdr) {\n    // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n    mCredentialsLength \u003d 20 + mHostName.getBytes(Charsets.UTF_8).length;\n    // mAuxGIDs\n    if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n      mCredentialsLength +\u003d mAuxGIDs.length * 4;\n    }\n    xdr.writeInt(mCredentialsLength);\n    \n    xdr.writeInt(mStamp);\n    xdr.writeString(mHostName);\n    xdr.writeInt(mUID);\n    xdr.writeInt(mGID);\n    \n    if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n      xdr.writeInt(0);\n    } else {\n      xdr.writeInt(mAuxGIDs.length);\n      for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n        xdr.writeInt(mAuxGIDs[i]);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/security/CredentialsSys.java",
      "extendedDetails": {}
    },
    "613979c8fdacf25fd563395ecc399c4de94d3ee7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5085. Refactor o.a.h.nfs to support different types of authentications. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1521601 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/13 12:29 PM",
      "commitName": "613979c8fdacf25fd563395ecc399c4de94d3ee7",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,23 @@\n+  public void write(XDR xdr) {\n+    // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n+    mCredentialsLength \u003d 20 + mHostName.getBytes().length;\n+    // mAuxGIDs\n+    if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n+      mCredentialsLength +\u003d mAuxGIDs.length * 4;\n+    }\n+    xdr.writeInt(mCredentialsLength);\n+    \n+    xdr.writeInt(mStamp);\n+    xdr.writeString(mHostName);\n+    xdr.writeInt(mUID);\n+    xdr.writeInt(mGID);\n+    \n+    if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n+      xdr.writeInt(0);\n+    } else {\n+      xdr.writeInt(mAuxGIDs.length);\n+      for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n+        xdr.writeInt(mAuxGIDs[i]);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(XDR xdr) {\n    // mStamp + mHostName.length + mHostName + mUID + mGID + mAuxGIDs.count\n    mCredentialsLength \u003d 20 + mHostName.getBytes().length;\n    // mAuxGIDs\n    if (mAuxGIDs !\u003d null \u0026\u0026 mAuxGIDs.length \u003e 0) {\n      mCredentialsLength +\u003d mAuxGIDs.length * 4;\n    }\n    xdr.writeInt(mCredentialsLength);\n    \n    xdr.writeInt(mStamp);\n    xdr.writeString(mHostName);\n    xdr.writeInt(mUID);\n    xdr.writeInt(mGID);\n    \n    if((mAuxGIDs \u003d\u003d null) || (mAuxGIDs.length \u003d\u003d 0)) {\n      xdr.writeInt(0);\n    } else {\n      xdr.writeInt(mAuxGIDs.length);\n      for (int i \u003d 0; i \u003c mAuxGIDs.length; i++) {\n        xdr.writeInt(mAuxGIDs[i]);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/security/CredentialsSys.java"
    }
  }
}