{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WasbRemoteCallHelper.java",
  "functionName": "getHttpRequest",
  "functionId": "getHttpRequest___urls-String[]__path-String__queryParams-List__NameValuePair____urlIndex-int__httpMethod-String__requiresNewAuth-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/WasbRemoteCallHelper.java",
  "functionStartLine": 234,
  "functionEndLine": 256,
  "numCommitsSeen": 9,
  "timeTaken": 2008,
  "changeHistory": [
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
    "38996fdcf0987d1da00ce46f8284d8fcdce57329"
  ],
  "changeHistoryShort": {
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc": "Ymultichange(Yparameterchange,Ybodychange)",
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14640. Azure: Support affinity for service running on localhost and reuse SPNEGO hadoop.auth cookie for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak.\n",
      "commitDate": "17/07/17 2:27 AM",
      "commitName": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14640. Azure: Support affinity for service running on localhost and reuse SPNEGO hadoop.auth cookie for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak.\n",
          "commitDate": "17/07/17 2:27 AM",
          "commitName": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "30/06/17 4:53 PM",
          "commitNameOld": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 16.4,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n   protected HttpUriRequest getHttpRequest(String[] urls, String path,\n-      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod)\n-      throws URISyntaxException, IOException {\n+      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod,\n+      boolean requiresNewAuth) throws URISyntaxException, IOException {\n     URIBuilder uriBuilder \u003d null;\n     uriBuilder \u003d\n         new URIBuilder(urls[urlIndex]).setPath(path).setParameters(queryParams);\n+    if (uriBuilder.getHost().equals(\"localhost\")) {\n+      uriBuilder.setHost(InetAddress.getLocalHost().getCanonicalHostName());\n+    }\n     HttpUriRequest httpUriRequest \u003d null;\n     switch (httpMethod) {\n     case HttpPut.METHOD_NAME:\n       httpUriRequest \u003d new HttpPut(uriBuilder.build());\n       break;\n     case HttpPost.METHOD_NAME:\n       httpUriRequest \u003d new HttpPost(uriBuilder.build());\n       break;\n     default:\n       httpUriRequest \u003d new HttpGet(uriBuilder.build());\n       break;\n     }\n     return httpUriRequest;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected HttpUriRequest getHttpRequest(String[] urls, String path,\n      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod,\n      boolean requiresNewAuth) throws URISyntaxException, IOException {\n    URIBuilder uriBuilder \u003d null;\n    uriBuilder \u003d\n        new URIBuilder(urls[urlIndex]).setPath(path).setParameters(queryParams);\n    if (uriBuilder.getHost().equals(\"localhost\")) {\n      uriBuilder.setHost(InetAddress.getLocalHost().getCanonicalHostName());\n    }\n    HttpUriRequest httpUriRequest \u003d null;\n    switch (httpMethod) {\n    case HttpPut.METHOD_NAME:\n      httpUriRequest \u003d new HttpPut(uriBuilder.build());\n      break;\n    case HttpPost.METHOD_NAME:\n      httpUriRequest \u003d new HttpPost(uriBuilder.build());\n      break;\n    default:\n      httpUriRequest \u003d new HttpGet(uriBuilder.build());\n      break;\n    }\n    return httpUriRequest;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/WasbRemoteCallHelper.java",
          "extendedDetails": {
            "oldValue": "[urls-String[], path-String, queryParams-List\u003cNameValuePair\u003e, urlIndex-int, httpMethod-String]",
            "newValue": "[urls-String[], path-String, queryParams-List\u003cNameValuePair\u003e, urlIndex-int, httpMethod-String, requiresNewAuth-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14640. Azure: Support affinity for service running on localhost and reuse SPNEGO hadoop.auth cookie for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak.\n",
          "commitDate": "17/07/17 2:27 AM",
          "commitName": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "30/06/17 4:53 PM",
          "commitNameOld": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 16.4,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n   protected HttpUriRequest getHttpRequest(String[] urls, String path,\n-      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod)\n-      throws URISyntaxException, IOException {\n+      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod,\n+      boolean requiresNewAuth) throws URISyntaxException, IOException {\n     URIBuilder uriBuilder \u003d null;\n     uriBuilder \u003d\n         new URIBuilder(urls[urlIndex]).setPath(path).setParameters(queryParams);\n+    if (uriBuilder.getHost().equals(\"localhost\")) {\n+      uriBuilder.setHost(InetAddress.getLocalHost().getCanonicalHostName());\n+    }\n     HttpUriRequest httpUriRequest \u003d null;\n     switch (httpMethod) {\n     case HttpPut.METHOD_NAME:\n       httpUriRequest \u003d new HttpPut(uriBuilder.build());\n       break;\n     case HttpPost.METHOD_NAME:\n       httpUriRequest \u003d new HttpPost(uriBuilder.build());\n       break;\n     default:\n       httpUriRequest \u003d new HttpGet(uriBuilder.build());\n       break;\n     }\n     return httpUriRequest;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected HttpUriRequest getHttpRequest(String[] urls, String path,\n      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod,\n      boolean requiresNewAuth) throws URISyntaxException, IOException {\n    URIBuilder uriBuilder \u003d null;\n    uriBuilder \u003d\n        new URIBuilder(urls[urlIndex]).setPath(path).setParameters(queryParams);\n    if (uriBuilder.getHost().equals(\"localhost\")) {\n      uriBuilder.setHost(InetAddress.getLocalHost().getCanonicalHostName());\n    }\n    HttpUriRequest httpUriRequest \u003d null;\n    switch (httpMethod) {\n    case HttpPut.METHOD_NAME:\n      httpUriRequest \u003d new HttpPut(uriBuilder.build());\n      break;\n    case HttpPost.METHOD_NAME:\n      httpUriRequest \u003d new HttpPost(uriBuilder.build());\n      break;\n    default:\n      httpUriRequest \u003d new HttpGet(uriBuilder.build());\n      break;\n    }\n    return httpUriRequest;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/WasbRemoteCallHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
      "commitDate": "30/06/17 4:53 PM",
      "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,20 @@\n+  protected HttpUriRequest getHttpRequest(String[] urls, String path,\n+      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod)\n+      throws URISyntaxException, IOException {\n+    URIBuilder uriBuilder \u003d null;\n+    uriBuilder \u003d\n+        new URIBuilder(urls[urlIndex]).setPath(path).setParameters(queryParams);\n+    HttpUriRequest httpUriRequest \u003d null;\n+    switch (httpMethod) {\n+    case HttpPut.METHOD_NAME:\n+      httpUriRequest \u003d new HttpPut(uriBuilder.build());\n+      break;\n+    case HttpPost.METHOD_NAME:\n+      httpUriRequest \u003d new HttpPost(uriBuilder.build());\n+      break;\n+    default:\n+      httpUriRequest \u003d new HttpGet(uriBuilder.build());\n+      break;\n+    }\n+    return httpUriRequest;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected HttpUriRequest getHttpRequest(String[] urls, String path,\n      List\u003cNameValuePair\u003e queryParams, int urlIndex, String httpMethod)\n      throws URISyntaxException, IOException {\n    URIBuilder uriBuilder \u003d null;\n    uriBuilder \u003d\n        new URIBuilder(urls[urlIndex]).setPath(path).setParameters(queryParams);\n    HttpUriRequest httpUriRequest \u003d null;\n    switch (httpMethod) {\n    case HttpPut.METHOD_NAME:\n      httpUriRequest \u003d new HttpPut(uriBuilder.build());\n      break;\n    case HttpPost.METHOD_NAME:\n      httpUriRequest \u003d new HttpPost(uriBuilder.build());\n      break;\n    default:\n      httpUriRequest \u003d new HttpGet(uriBuilder.build());\n      break;\n    }\n    return httpUriRequest;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/WasbRemoteCallHelper.java"
    }
  }
}