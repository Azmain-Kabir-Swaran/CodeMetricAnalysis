{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HsTasksPage.java",
  "functionName": "jobsPostTableInit",
  "functionId": "jobsPostTableInit",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsTasksPage.java",
  "functionStartLine": 96,
  "functionEndLine": 119,
  "numCommitsSeen": 13,
  "timeTaken": 1124,
  "changeHistory": [
    "026b39ad9d9336b1efdd8e2ffb9a508cb0db6259",
    "d9ba4670ed0134816d5d063d48394e31b51c3b35"
  ],
  "changeHistoryShort": {
    "026b39ad9d9336b1efdd8e2ffb9a508cb0db6259": "Ybodychange",
    "d9ba4670ed0134816d5d063d48394e31b51c3b35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "026b39ad9d9336b1efdd8e2ffb9a508cb0db6259": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6782. JHS task page search based on each individual column not working (Ajith S via Varun Saxena)\n",
      "commitDate": "08/11/16 1:27 AM",
      "commitName": "026b39ad9d9336b1efdd8e2ffb9a508cb0db6259",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "23/12/15 10:25 PM",
      "commitNameOld": "a308e86621b1a7692fe1004ed14c919fdaba03cd",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 320.13,
      "commitsBetweenForRepo": 2278,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   private String jobsPostTableInit() {\n     return \"var asInitVals \u003d new Array();\\n\" +\n            \"$(\u0027tfoot input\u0027).keyup( function () \\n{\"+\n-           \"  tasksDataTable.fnFilter( this.value, $(\u0027tfoot input\u0027).index(this) );\\n\"+\n+           \"  $(\u0027.dt-tasks\u0027).dataTable().fnFilter(\"+\n+           \" this.value, $(\u0027tfoot input\u0027).index(this) );\\n\"+\n            \"} );\\n\"+\n            \"$(\u0027tfoot input\u0027).each( function (i) {\\n\"+\n            \"  asInitVals[i] \u003d this.value;\\n\"+\n            \"} );\\n\"+\n            \"$(\u0027tfoot input\u0027).focus( function () {\\n\"+\n            \"  if ( this.className \u003d\u003d \u0027search_init\u0027 )\\n\"+\n            \"  {\\n\"+\n            \"    this.className \u003d \u0027\u0027;\\n\"+\n            \"    this.value \u003d \u0027\u0027;\\n\"+\n            \"  }\\n\"+\n            \"} );\\n\"+\n            \"$(\u0027tfoot input\u0027).blur( function (i) {\\n\"+\n            \"  if ( this.value \u003d\u003d \u0027\u0027 )\\n\"+\n            \"  {\\n\"+\n            \"    this.className \u003d \u0027search_init\u0027;\\n\"+\n            \"    this.value \u003d asInitVals[$(\u0027tfoot input\u0027).index(this)];\\n\"+\n            \"  }\\n\"+\n            \"} );\\n\";\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String jobsPostTableInit() {\n    return \"var asInitVals \u003d new Array();\\n\" +\n           \"$(\u0027tfoot input\u0027).keyup( function () \\n{\"+\n           \"  $(\u0027.dt-tasks\u0027).dataTable().fnFilter(\"+\n           \" this.value, $(\u0027tfoot input\u0027).index(this) );\\n\"+\n           \"} );\\n\"+\n           \"$(\u0027tfoot input\u0027).each( function (i) {\\n\"+\n           \"  asInitVals[i] \u003d this.value;\\n\"+\n           \"} );\\n\"+\n           \"$(\u0027tfoot input\u0027).focus( function () {\\n\"+\n           \"  if ( this.className \u003d\u003d \u0027search_init\u0027 )\\n\"+\n           \"  {\\n\"+\n           \"    this.className \u003d \u0027\u0027;\\n\"+\n           \"    this.value \u003d \u0027\u0027;\\n\"+\n           \"  }\\n\"+\n           \"} );\\n\"+\n           \"$(\u0027tfoot input\u0027).blur( function (i) {\\n\"+\n           \"  if ( this.value \u003d\u003d \u0027\u0027 )\\n\"+\n           \"  {\\n\"+\n           \"    this.className \u003d \u0027search_init\u0027;\\n\"+\n           \"    this.value \u003d asInitVals[$(\u0027tfoot input\u0027).index(this)];\\n\"+\n           \"  }\\n\"+\n           \"} );\\n\";\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsTasksPage.java",
      "extendedDetails": {}
    },
    "d9ba4670ed0134816d5d063d48394e31b51c3b35": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2672. MR-279: JobHistory Server needs Analysis this job. (Robert Evans via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1171297 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/09/11 3:21 PM",
      "commitName": "d9ba4670ed0134816d5d063d48394e31b51c3b35",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,23 @@\n+  private String jobsPostTableInit() {\n+    return \"var asInitVals \u003d new Array();\\n\" +\n+           \"$(\u0027tfoot input\u0027).keyup( function () \\n{\"+\n+           \"  tasksDataTable.fnFilter( this.value, $(\u0027tfoot input\u0027).index(this) );\\n\"+\n+           \"} );\\n\"+\n+           \"$(\u0027tfoot input\u0027).each( function (i) {\\n\"+\n+           \"  asInitVals[i] \u003d this.value;\\n\"+\n+           \"} );\\n\"+\n+           \"$(\u0027tfoot input\u0027).focus( function () {\\n\"+\n+           \"  if ( this.className \u003d\u003d \u0027search_init\u0027 )\\n\"+\n+           \"  {\\n\"+\n+           \"    this.className \u003d \u0027\u0027;\\n\"+\n+           \"    this.value \u003d \u0027\u0027;\\n\"+\n+           \"  }\\n\"+\n+           \"} );\\n\"+\n+           \"$(\u0027tfoot input\u0027).blur( function (i) {\\n\"+\n+           \"  if ( this.value \u003d\u003d \u0027\u0027 )\\n\"+\n+           \"  {\\n\"+\n+           \"    this.className \u003d \u0027search_init\u0027;\\n\"+\n+           \"    this.value \u003d asInitVals[$(\u0027tfoot input\u0027).index(this)];\\n\"+\n+           \"  }\\n\"+\n+           \"} );\\n\";\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String jobsPostTableInit() {\n    return \"var asInitVals \u003d new Array();\\n\" +\n           \"$(\u0027tfoot input\u0027).keyup( function () \\n{\"+\n           \"  tasksDataTable.fnFilter( this.value, $(\u0027tfoot input\u0027).index(this) );\\n\"+\n           \"} );\\n\"+\n           \"$(\u0027tfoot input\u0027).each( function (i) {\\n\"+\n           \"  asInitVals[i] \u003d this.value;\\n\"+\n           \"} );\\n\"+\n           \"$(\u0027tfoot input\u0027).focus( function () {\\n\"+\n           \"  if ( this.className \u003d\u003d \u0027search_init\u0027 )\\n\"+\n           \"  {\\n\"+\n           \"    this.className \u003d \u0027\u0027;\\n\"+\n           \"    this.value \u003d \u0027\u0027;\\n\"+\n           \"  }\\n\"+\n           \"} );\\n\"+\n           \"$(\u0027tfoot input\u0027).blur( function (i) {\\n\"+\n           \"  if ( this.value \u003d\u003d \u0027\u0027 )\\n\"+\n           \"  {\\n\"+\n           \"    this.className \u003d \u0027search_init\u0027;\\n\"+\n           \"    this.value \u003d asInitVals[$(\u0027tfoot input\u0027).index(this)];\\n\"+\n           \"  }\\n\"+\n           \"} );\\n\";\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsTasksPage.java"
    }
  }
}