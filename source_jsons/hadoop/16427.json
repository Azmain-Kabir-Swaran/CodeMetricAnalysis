{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Quota.java",
  "functionName": "getValidQuotaLocations",
  "functionId": "getValidQuotaLocations___path-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
  "functionStartLine": 218,
  "functionEndLine": 248,
  "numCommitsSeen": 17,
  "timeTaken": 2819,
  "changeHistory": [
    "6b2d6d4aafb110bef1b77d4ccbba4350e624b57d",
    "93595febaa6673eea369911c3f7fcd75d4915dbc",
    "d4626b4d1825b60ef02c0da9c45cd483d1d98f49",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "d98a2e6e2383f8b66def346409b0517aa32d298d"
  ],
  "changeHistoryShort": {
    "6b2d6d4aafb110bef1b77d4ccbba4350e624b57d": "Ybodychange",
    "93595febaa6673eea369911c3f7fcd75d4915dbc": "Ybodychange",
    "d4626b4d1825b60ef02c0da9c45cd483d1d98f49": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "d98a2e6e2383f8b66def346409b0517aa32d298d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b2d6d4aafb110bef1b77d4ccbba4350e624b57d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15009. FSCK -list-corruptfileblocks return Invalid Entries. Contributed by hemanthboyina.\n",
      "commitDate": "29/11/19 10:25 AM",
      "commitName": "6b2d6d4aafb110bef1b77d4ccbba4350e624b57d",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "18/11/19 2:34 AM",
      "commitNameOld": "12617fad2eb32108412dac9ecee286de6641d060",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 11.33,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n       throws IOException {\n     final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n \n     // NameService -\u003e Locations\n     ListMultimap\u003cString, RemoteLocation\u003e validLocations \u003d\n         ArrayListMultimap.create();\n \n     for (RemoteLocation loc : locations) {\n       final String nsId \u003d loc.getNameserviceId();\n       final Collection\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n \n       // Ensure the paths in the same nameservice is different.\n       // Do not include parent-child paths.\n       boolean isChildPath \u003d false;\n \n       for (RemoteLocation d : dests) {\n-        if (FederationUtil.isParentEntry(loc.getDest(), d.getDest())) {\n+        if (isParentEntry(loc.getDest(), d.getDest())) {\n           isChildPath \u003d true;\n           break;\n         }\n       }\n \n       if (!isChildPath) {\n         validLocations.put(nsId, loc);\n       }\n     }\n \n     return Collections\n         .unmodifiableList(new ArrayList\u003c\u003e(validLocations.values()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n      throws IOException {\n    final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n\n    // NameService -\u003e Locations\n    ListMultimap\u003cString, RemoteLocation\u003e validLocations \u003d\n        ArrayListMultimap.create();\n\n    for (RemoteLocation loc : locations) {\n      final String nsId \u003d loc.getNameserviceId();\n      final Collection\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n\n      // Ensure the paths in the same nameservice is different.\n      // Do not include parent-child paths.\n      boolean isChildPath \u003d false;\n\n      for (RemoteLocation d : dests) {\n        if (isParentEntry(loc.getDest(), d.getDest())) {\n          isChildPath \u003d true;\n          break;\n        }\n      }\n\n      if (!isChildPath) {\n        validLocations.put(nsId, loc);\n      }\n    }\n\n    return Collections\n        .unmodifiableList(new ArrayList\u003c\u003e(validLocations.values()));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "93595febaa6673eea369911c3f7fcd75d4915dbc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14756. RBF: getQuotaUsage may ignore some folders. Contributed by Chen Zhang.\n",
      "commitDate": "21/08/19 9:39 AM",
      "commitName": "93595febaa6673eea369911c3f7fcd75d4915dbc",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "ffbb6b6557f4eb8587c7d57cda38f2a0de573f8b",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 58.0,
      "commitsBetweenForRepo": 469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n       throws IOException {\n     final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n \n     // NameService -\u003e Locations\n     ListMultimap\u003cString, RemoteLocation\u003e validLocations \u003d\n         ArrayListMultimap.create();\n \n     for (RemoteLocation loc : locations) {\n       final String nsId \u003d loc.getNameserviceId();\n       final Collection\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n \n       // Ensure the paths in the same nameservice is different.\n       // Do not include parent-child paths.\n       boolean isChildPath \u003d false;\n \n       for (RemoteLocation d : dests) {\n-        if (StringUtils.startsWith(loc.getDest(), d.getDest())) {\n+        if (FederationUtil.isParentEntry(loc.getDest(), d.getDest())) {\n           isChildPath \u003d true;\n           break;\n         }\n       }\n \n       if (!isChildPath) {\n         validLocations.put(nsId, loc);\n       }\n     }\n \n     return Collections\n         .unmodifiableList(new ArrayList\u003c\u003e(validLocations.values()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n      throws IOException {\n    final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n\n    // NameService -\u003e Locations\n    ListMultimap\u003cString, RemoteLocation\u003e validLocations \u003d\n        ArrayListMultimap.create();\n\n    for (RemoteLocation loc : locations) {\n      final String nsId \u003d loc.getNameserviceId();\n      final Collection\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n\n      // Ensure the paths in the same nameservice is different.\n      // Do not include parent-child paths.\n      boolean isChildPath \u003d false;\n\n      for (RemoteLocation d : dests) {\n        if (FederationUtil.isParentEntry(loc.getDest(), d.getDest())) {\n          isChildPath \u003d true;\n          break;\n        }\n      }\n\n      if (!isChildPath) {\n        validLocations.put(nsId, loc);\n      }\n    }\n\n    return Collections\n        .unmodifiableList(new ArrayList\u003c\u003e(validLocations.values()));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "d4626b4d1825b60ef02c0da9c45cd483d1d98f49": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13967. HDFS Router Quota Class Review. Contributed by BELUGA BEHR.\n",
      "commitDate": "09/10/18 1:11 AM",
      "commitName": "d4626b4d1825b60ef02c0da9c45cd483d1d98f49",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "02/10/18 8:48 PM",
      "commitNameOld": "fa7f7078a713c44783425195a891582bcf8a6d5c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,31 @@\n   private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n       throws IOException {\n     final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n \n     // NameService -\u003e Locations\n-    Map\u003cString, List\u003cRemoteLocation\u003e\u003e validLocations \u003d new HashMap\u003c\u003e();\n-    for (RemoteLocation loc : locations) {\n-      String nsId \u003d loc.getNameserviceId();\n-      List\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n-      if (dests \u003d\u003d null) {\n-        dests \u003d new LinkedList\u003c\u003e();\n-        dests.add(loc);\n-        validLocations.put(nsId, dests);\n-      } else {\n-        // Ensure the paths in the same nameservice is different.\n-        // Don\u0027t include parent-child paths.\n-        boolean isChildPath \u003d false;\n-        for (RemoteLocation d : dests) {\n-          if (loc.getDest().startsWith(d.getDest())) {\n-            isChildPath \u003d true;\n-            break;\n-          }\n-        }\n+    ListMultimap\u003cString, RemoteLocation\u003e validLocations \u003d\n+        ArrayListMultimap.create();\n \n-        if (!isChildPath) {\n-          dests.add(loc);\n+    for (RemoteLocation loc : locations) {\n+      final String nsId \u003d loc.getNameserviceId();\n+      final Collection\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n+\n+      // Ensure the paths in the same nameservice is different.\n+      // Do not include parent-child paths.\n+      boolean isChildPath \u003d false;\n+\n+      for (RemoteLocation d : dests) {\n+        if (StringUtils.startsWith(loc.getDest(), d.getDest())) {\n+          isChildPath \u003d true;\n+          break;\n         }\n       }\n+\n+      if (!isChildPath) {\n+        validLocations.put(nsId, loc);\n+      }\n     }\n \n-    List\u003cRemoteLocation\u003e quotaLocs \u003d new LinkedList\u003c\u003e();\n-    for (List\u003cRemoteLocation\u003e locs : validLocations.values()) {\n-      quotaLocs.addAll(locs);\n-    }\n-\n-    return quotaLocs;\n+    return Collections\n+        .unmodifiableList(new ArrayList\u003c\u003e(validLocations.values()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n      throws IOException {\n    final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n\n    // NameService -\u003e Locations\n    ListMultimap\u003cString, RemoteLocation\u003e validLocations \u003d\n        ArrayListMultimap.create();\n\n    for (RemoteLocation loc : locations) {\n      final String nsId \u003d loc.getNameserviceId();\n      final Collection\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n\n      // Ensure the paths in the same nameservice is different.\n      // Do not include parent-child paths.\n      boolean isChildPath \u003d false;\n\n      for (RemoteLocation d : dests) {\n        if (StringUtils.startsWith(loc.getDest(), d.getDest())) {\n          isChildPath \u003d true;\n          break;\n        }\n      }\n\n      if (!isChildPath) {\n        validLocations.put(nsId, loc);\n      }\n    }\n\n    return Collections\n        .unmodifiableList(new ArrayList\u003c\u003e(validLocations.values()));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n      throws IOException {\n    final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n\n    // NameService -\u003e Locations\n    Map\u003cString, List\u003cRemoteLocation\u003e\u003e validLocations \u003d new HashMap\u003c\u003e();\n    for (RemoteLocation loc : locations) {\n      String nsId \u003d loc.getNameserviceId();\n      List\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n      if (dests \u003d\u003d null) {\n        dests \u003d new LinkedList\u003c\u003e();\n        dests.add(loc);\n        validLocations.put(nsId, dests);\n      } else {\n        // Ensure the paths in the same nameservice is different.\n        // Don\u0027t include parent-child paths.\n        boolean isChildPath \u003d false;\n        for (RemoteLocation d : dests) {\n          if (loc.getDest().startsWith(d.getDest())) {\n            isChildPath \u003d true;\n            break;\n          }\n        }\n\n        if (!isChildPath) {\n          dests.add(loc);\n        }\n      }\n    }\n\n    List\u003cRemoteLocation\u003e quotaLocs \u003d new LinkedList\u003c\u003e();\n    for (List\u003cRemoteLocation\u003e locs : validLocations.values()) {\n      quotaLocs.addAll(locs);\n    }\n\n    return quotaLocs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java"
      }
    },
    "d98a2e6e2383f8b66def346409b0517aa32d298d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
      "commitDate": "09/01/18 9:59 PM",
      "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,37 @@\n+  private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n+      throws IOException {\n+    final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n+\n+    // NameService -\u003e Locations\n+    Map\u003cString, List\u003cRemoteLocation\u003e\u003e validLocations \u003d new HashMap\u003c\u003e();\n+    for (RemoteLocation loc : locations) {\n+      String nsId \u003d loc.getNameserviceId();\n+      List\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n+      if (dests \u003d\u003d null) {\n+        dests \u003d new LinkedList\u003c\u003e();\n+        dests.add(loc);\n+        validLocations.put(nsId, dests);\n+      } else {\n+        // Ensure the paths in the same nameservice is different.\n+        // Don\u0027t include parent-child paths.\n+        boolean isChildPath \u003d false;\n+        for (RemoteLocation d : dests) {\n+          if (loc.getDest().startsWith(d.getDest())) {\n+            isChildPath \u003d true;\n+            break;\n+          }\n+        }\n+\n+        if (!isChildPath) {\n+          dests.add(loc);\n+        }\n+      }\n+    }\n+\n+    List\u003cRemoteLocation\u003e quotaLocs \u003d new LinkedList\u003c\u003e();\n+    for (List\u003cRemoteLocation\u003e locs : validLocations.values()) {\n+      quotaLocs.addAll(locs);\n+    }\n+\n+    return quotaLocs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e getValidQuotaLocations(String path)\n      throws IOException {\n    final List\u003cRemoteLocation\u003e locations \u003d getQuotaRemoteLocations(path);\n\n    // NameService -\u003e Locations\n    Map\u003cString, List\u003cRemoteLocation\u003e\u003e validLocations \u003d new HashMap\u003c\u003e();\n    for (RemoteLocation loc : locations) {\n      String nsId \u003d loc.getNameserviceId();\n      List\u003cRemoteLocation\u003e dests \u003d validLocations.get(nsId);\n      if (dests \u003d\u003d null) {\n        dests \u003d new LinkedList\u003c\u003e();\n        dests.add(loc);\n        validLocations.put(nsId, dests);\n      } else {\n        // Ensure the paths in the same nameservice is different.\n        // Don\u0027t include parent-child paths.\n        boolean isChildPath \u003d false;\n        for (RemoteLocation d : dests) {\n          if (loc.getDest().startsWith(d.getDest())) {\n            isChildPath \u003d true;\n            break;\n          }\n        }\n\n        if (!isChildPath) {\n          dests.add(loc);\n        }\n      }\n    }\n\n    List\u003cRemoteLocation\u003e quotaLocs \u003d new LinkedList\u003c\u003e();\n    for (List\u003cRemoteLocation\u003e locs : validLocations.values()) {\n      quotaLocs.addAll(locs);\n    }\n\n    return quotaLocs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java"
    }
  }
}