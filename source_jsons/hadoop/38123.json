{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReservedContainerCandidatesSelector.java",
  "functionName": "tryToPreemptFromQueue",
  "functionId": "tryToPreemptFromQueue___queueName-String__partitionName-String__queueToPreemptableResourceByPartition-Map__String,Map__String,Resource______required-Resource__totalPreemptionAllowed-Resource__readOnly-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ReservedContainerCandidatesSelector.java",
  "functionStartLine": 131,
  "functionEndLine": 153,
  "numCommitsSeen": 6,
  "timeTaken": 3898,
  "changeHistory": [
    "e81596d06d226f1cfa44b2390ce3095ed4dee621",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0"
  ],
  "changeHistoryShort": {
    "e81596d06d226f1cfa44b2390ce3095ed4dee621": "Ymultichange(Yparameterchange,Ybodychange)",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e81596d06d226f1cfa44b2390ce3095ed4dee621": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7172. ResourceCalculator.fitsIn() should not take a cluster resource parameter. (Sen Zhao via wangda)\n\nChange-Id: Icc3670c9381ce7591ca69ec12da5aa52d3612d34\n",
      "commitDate": "17/09/17 9:20 PM",
      "commitName": "e81596d06d226f1cfa44b2390ce3095ed4dee621",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7172. ResourceCalculator.fitsIn() should not take a cluster resource parameter. (Sen Zhao via wangda)\n\nChange-Id: Icc3670c9381ce7591ca69ec12da5aa52d3612d34\n",
          "commitDate": "17/09/17 9:20 PM",
          "commitName": "e81596d06d226f1cfa44b2390ce3095ed4dee621",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "05/05/16 12:56 PM",
          "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 500.35,
          "commitsBetweenForRepo": 3345,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  private boolean tryToPreemptFromQueue(Resource cluster, String queueName,\n-      String partitionName,\n+  private boolean tryToPreemptFromQueue(String queueName, String partitionName,\n       Map\u003cString, Map\u003cString, Resource\u003e\u003e queueToPreemptableResourceByPartition,\n       Resource required, Resource totalPreemptionAllowed, boolean readOnly) {\n     Resource preemptable \u003d getPreemptableResource(queueName, partitionName,\n         queueToPreemptableResourceByPartition);\n     if (null \u003d\u003d preemptable) {\n       return false;\n     }\n \n-    if (!Resources.fitsIn(rc, cluster, required, preemptable)) {\n+    if (!Resources.fitsIn(rc, required, preemptable)) {\n       return false;\n     }\n \n-    if (!Resources.fitsIn(rc, cluster, required, totalPreemptionAllowed)) {\n+    if (!Resources.fitsIn(rc, required, totalPreemptionAllowed)) {\n       return false;\n     }\n \n     if (!readOnly) {\n       Resources.subtractFrom(preemptable, required);\n       Resources.subtractFrom(totalPreemptionAllowed, required);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean tryToPreemptFromQueue(String queueName, String partitionName,\n      Map\u003cString, Map\u003cString, Resource\u003e\u003e queueToPreemptableResourceByPartition,\n      Resource required, Resource totalPreemptionAllowed, boolean readOnly) {\n    Resource preemptable \u003d getPreemptableResource(queueName, partitionName,\n        queueToPreemptableResourceByPartition);\n    if (null \u003d\u003d preemptable) {\n      return false;\n    }\n\n    if (!Resources.fitsIn(rc, required, preemptable)) {\n      return false;\n    }\n\n    if (!Resources.fitsIn(rc, required, totalPreemptionAllowed)) {\n      return false;\n    }\n\n    if (!readOnly) {\n      Resources.subtractFrom(preemptable, required);\n      Resources.subtractFrom(totalPreemptionAllowed, required);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ReservedContainerCandidatesSelector.java",
          "extendedDetails": {
            "oldValue": "[cluster-Resource, queueName-String, partitionName-String, queueToPreemptableResourceByPartition-Map\u003cString,Map\u003cString,Resource\u003e\u003e, required-Resource, totalPreemptionAllowed-Resource, readOnly-boolean]",
            "newValue": "[queueName-String, partitionName-String, queueToPreemptableResourceByPartition-Map\u003cString,Map\u003cString,Resource\u003e\u003e, required-Resource, totalPreemptionAllowed-Resource, readOnly-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7172. ResourceCalculator.fitsIn() should not take a cluster resource parameter. (Sen Zhao via wangda)\n\nChange-Id: Icc3670c9381ce7591ca69ec12da5aa52d3612d34\n",
          "commitDate": "17/09/17 9:20 PM",
          "commitName": "e81596d06d226f1cfa44b2390ce3095ed4dee621",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "05/05/16 12:56 PM",
          "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 500.35,
          "commitsBetweenForRepo": 3345,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  private boolean tryToPreemptFromQueue(Resource cluster, String queueName,\n-      String partitionName,\n+  private boolean tryToPreemptFromQueue(String queueName, String partitionName,\n       Map\u003cString, Map\u003cString, Resource\u003e\u003e queueToPreemptableResourceByPartition,\n       Resource required, Resource totalPreemptionAllowed, boolean readOnly) {\n     Resource preemptable \u003d getPreemptableResource(queueName, partitionName,\n         queueToPreemptableResourceByPartition);\n     if (null \u003d\u003d preemptable) {\n       return false;\n     }\n \n-    if (!Resources.fitsIn(rc, cluster, required, preemptable)) {\n+    if (!Resources.fitsIn(rc, required, preemptable)) {\n       return false;\n     }\n \n-    if (!Resources.fitsIn(rc, cluster, required, totalPreemptionAllowed)) {\n+    if (!Resources.fitsIn(rc, required, totalPreemptionAllowed)) {\n       return false;\n     }\n \n     if (!readOnly) {\n       Resources.subtractFrom(preemptable, required);\n       Resources.subtractFrom(totalPreemptionAllowed, required);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean tryToPreemptFromQueue(String queueName, String partitionName,\n      Map\u003cString, Map\u003cString, Resource\u003e\u003e queueToPreemptableResourceByPartition,\n      Resource required, Resource totalPreemptionAllowed, boolean readOnly) {\n    Resource preemptable \u003d getPreemptableResource(queueName, partitionName,\n        queueToPreemptableResourceByPartition);\n    if (null \u003d\u003d preemptable) {\n      return false;\n    }\n\n    if (!Resources.fitsIn(rc, required, preemptable)) {\n      return false;\n    }\n\n    if (!Resources.fitsIn(rc, required, totalPreemptionAllowed)) {\n      return false;\n    }\n\n    if (!readOnly) {\n      Resources.subtractFrom(preemptable, required);\n      Resources.subtractFrom(totalPreemptionAllowed, required);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ReservedContainerCandidatesSelector.java",
          "extendedDetails": {}
        }
      ]
    },
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4390. Do surgical preemption based on reserved container in CapacityScheduler. Contributed by Wangda Tan\n",
      "commitDate": "05/05/16 12:56 PM",
      "commitName": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,24 @@\n+  private boolean tryToPreemptFromQueue(Resource cluster, String queueName,\n+      String partitionName,\n+      Map\u003cString, Map\u003cString, Resource\u003e\u003e queueToPreemptableResourceByPartition,\n+      Resource required, Resource totalPreemptionAllowed, boolean readOnly) {\n+    Resource preemptable \u003d getPreemptableResource(queueName, partitionName,\n+        queueToPreemptableResourceByPartition);\n+    if (null \u003d\u003d preemptable) {\n+      return false;\n+    }\n+\n+    if (!Resources.fitsIn(rc, cluster, required, preemptable)) {\n+      return false;\n+    }\n+\n+    if (!Resources.fitsIn(rc, cluster, required, totalPreemptionAllowed)) {\n+      return false;\n+    }\n+\n+    if (!readOnly) {\n+      Resources.subtractFrom(preemptable, required);\n+      Resources.subtractFrom(totalPreemptionAllowed, required);\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean tryToPreemptFromQueue(Resource cluster, String queueName,\n      String partitionName,\n      Map\u003cString, Map\u003cString, Resource\u003e\u003e queueToPreemptableResourceByPartition,\n      Resource required, Resource totalPreemptionAllowed, boolean readOnly) {\n    Resource preemptable \u003d getPreemptableResource(queueName, partitionName,\n        queueToPreemptableResourceByPartition);\n    if (null \u003d\u003d preemptable) {\n      return false;\n    }\n\n    if (!Resources.fitsIn(rc, cluster, required, preemptable)) {\n      return false;\n    }\n\n    if (!Resources.fitsIn(rc, cluster, required, totalPreemptionAllowed)) {\n      return false;\n    }\n\n    if (!readOnly) {\n      Resources.subtractFrom(preemptable, required);\n      Resources.subtractFrom(totalPreemptionAllowed, required);\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ReservedContainerCandidatesSelector.java"
    }
  }
}