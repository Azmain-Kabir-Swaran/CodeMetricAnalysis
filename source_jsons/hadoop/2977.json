{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtilClient.java",
  "functionName": "isValidName",
  "functionId": "isValidName___src-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
  "functionStartLine": 562,
  "functionEndLine": 594,
  "numCommitsSeen": 44,
  "timeTaken": 1535,
  "changeHistory": [
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35"
  ],
  "changeHistoryShort": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,33 @@\n+  public static boolean isValidName(String src) {\n+    // Path must be absolute.\n+    if (!src.startsWith(Path.SEPARATOR)) {\n+      return false;\n+    }\n+\n+    // Check for \"..\" \".\" \":\" \"/\"\n+    String[] components \u003d StringUtils.split(src, \u0027/\u0027);\n+    for (int i \u003d 0; i \u003c components.length; i++) {\n+      String element \u003d components[i];\n+      if (element.equals(\".\")  ||\n+          (element.contains(\":\"))  ||\n+          (element.contains(\"/\"))) {\n+        return false;\n+      }\n+      // \"..\" is allowed in path starting with /.reserved/.inodes\n+      if (element.equals(\"..\")) {\n+        if (components.length \u003e 4\n+            \u0026\u0026 components[1].equals(\".reserved\")\n+            \u0026\u0026 components[2].equals(\".inodes\")) {\n+          continue;\n+        }\n+        return false;\n+      }\n+      // The string may start or end with a /, but not have\n+      // \"//\" in the middle.\n+      if (element.isEmpty() \u0026\u0026 i !\u003d components.length - 1 \u0026\u0026\n+          i !\u003d 0) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isValidName(String src) {\n    // Path must be absolute.\n    if (!src.startsWith(Path.SEPARATOR)) {\n      return false;\n    }\n\n    // Check for \"..\" \".\" \":\" \"/\"\n    String[] components \u003d StringUtils.split(src, \u0027/\u0027);\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      String element \u003d components[i];\n      if (element.equals(\".\")  ||\n          (element.contains(\":\"))  ||\n          (element.contains(\"/\"))) {\n        return false;\n      }\n      // \"..\" is allowed in path starting with /.reserved/.inodes\n      if (element.equals(\"..\")) {\n        if (components.length \u003e 4\n            \u0026\u0026 components[1].equals(\".reserved\")\n            \u0026\u0026 components[2].equals(\".inodes\")) {\n          continue;\n        }\n        return false;\n      }\n      // The string may start or end with a /, but not have\n      // \"//\" in the middle.\n      if (element.isEmpty() \u0026\u0026 i !\u003d components.length - 1 \u0026\u0026\n          i !\u003d 0) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java"
    }
  }
}