{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbConfigurationStore.java",
  "functionName": "logMutation",
  "functionId": "logMutation___logMutation-LogMutation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
  "functionStartLine": 193,
  "functionEndLine": 202,
  "numCommitsSeen": 15,
  "timeTaken": 3626,
  "changeHistory": [
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
    "5cc6f945da648a48441b00aca89f3cc1a9777143",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
    "74ba6ffa0b601badc68366685dcf993a0844520a"
  ],
  "changeHistoryShort": {
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": "Ybodychange",
    "5cc6f945da648a48441b00aca89f3cc1a9777143": "Ybodychange",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
    "74ba6ffa0b601badc68366685dcf993a0844520a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
      "commitDate": "14/01/20 3:26 AM",
      "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "05/12/19 11:43 AM",
      "commitNameOld": "5cc6f945da648a48441b00aca89f3cc1a9777143",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 39.65,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n   public void logMutation(LogMutation logMutation) throws IOException {\n     if (maxLogs \u003e 0) {\n       LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n       logs.add(logMutation);\n       if (logs.size() \u003e maxLogs) {\n         logs.removeFirst();\n       }\n       db.put(bytes(LOG_KEY), serLogMutations(logs));\n     }\n-    pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logMutation(LogMutation logMutation) throws IOException {\n    if (maxLogs \u003e 0) {\n      LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n      logs.add(logMutation);\n      if (logs.size() \u003e maxLogs) {\n        logs.removeFirst();\n      }\n      db.put(bytes(LOG_KEY), serLogMutations(logs));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
      "extendedDetails": {}
    },
    "5cc6f945da648a48441b00aca89f3cc1a9777143": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9789. Disable Option for Write Ahead Logs of LogMutation. Contributed by Prabhu Joseph\n",
      "commitDate": "05/12/19 11:43 AM",
      "commitName": "5cc6f945da648a48441b00aca89f3cc1a9777143",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "09/10/19 3:23 AM",
      "commitNameOld": "be901f49628a553cfe6a3942478cb528cce2b266",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 57.39,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   public void logMutation(LogMutation logMutation) throws IOException {\n-    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n-    logs.add(logMutation);\n-    if (logs.size() \u003e maxLogs) {\n-      logs.removeFirst();\n+    if (maxLogs \u003e 0) {\n+      LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n+      logs.add(logMutation);\n+      if (logs.size() \u003e maxLogs) {\n+        logs.removeFirst();\n+      }\n+      db.put(bytes(LOG_KEY), serLogMutations(logs));\n     }\n-    db.put(bytes(LOG_KEY), serLogMutations(logs));\n     pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logMutation(LogMutation logMutation) throws IOException {\n    if (maxLogs \u003e 0) {\n      LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n      logs.add(logMutation);\n      if (logs.size() \u003e maxLogs) {\n        logs.removeFirst();\n      }\n      db.put(bytes(LOG_KEY), serLogMutations(logs));\n    }\n    pendingMutation \u003d logMutation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
      "extendedDetails": {}
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  public synchronized long logMutation(LogMutation logMutation)\n-      throws IOException {\n-    logMutation.setId(++txnId);\n-    WriteBatch logBatch \u003d db.createWriteBatch();\n-    logBatch.put(bytes(LOG_PREFIX + txnId), serLogMutation(logMutation));\n-    if (txnId - minTxn \u003e\u003d maxLogs) {\n-      logBatch.delete(bytes(LOG_PREFIX + minTxn));\n-      minTxn++;\n+  public void logMutation(LogMutation logMutation) throws IOException {\n+    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n+    logs.add(logMutation);\n+    if (logs.size() \u003e maxLogs) {\n+      logs.removeFirst();\n     }\n-    db.write(logBatch);\n-    pendingMutations.add(logMutation);\n-    return txnId;\n+    db.put(bytes(LOG_KEY), serLogMutations(logs));\n+    pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void logMutation(LogMutation logMutation) throws IOException {\n    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n    logs.add(logMutation);\n    if (logs.size() \u003e maxLogs) {\n      logs.removeFirst();\n    }\n    db.put(bytes(LOG_KEY), serLogMutations(logs));\n    pendingMutation \u003d logMutation;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "long",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  public synchronized long logMutation(LogMutation logMutation)\n-      throws IOException {\n-    logMutation.setId(++txnId);\n-    WriteBatch logBatch \u003d db.createWriteBatch();\n-    logBatch.put(bytes(LOG_PREFIX + txnId), serLogMutation(logMutation));\n-    if (txnId - minTxn \u003e\u003d maxLogs) {\n-      logBatch.delete(bytes(LOG_PREFIX + minTxn));\n-      minTxn++;\n+  public void logMutation(LogMutation logMutation) throws IOException {\n+    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n+    logs.add(logMutation);\n+    if (logs.size() \u003e maxLogs) {\n+      logs.removeFirst();\n     }\n-    db.write(logBatch);\n-    pendingMutations.add(logMutation);\n-    return txnId;\n+    db.put(bytes(LOG_KEY), serLogMutations(logs));\n+    pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void logMutation(LogMutation logMutation) throws IOException {\n    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n    logs.add(logMutation);\n    if (logs.size() \u003e maxLogs) {\n      logs.removeFirst();\n    }\n    db.put(bytes(LOG_KEY), serLogMutations(logs));\n    pendingMutation \u003d logMutation;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  public synchronized long logMutation(LogMutation logMutation)\n-      throws IOException {\n-    logMutation.setId(++txnId);\n-    WriteBatch logBatch \u003d db.createWriteBatch();\n-    logBatch.put(bytes(LOG_PREFIX + txnId), serLogMutation(logMutation));\n-    if (txnId - minTxn \u003e\u003d maxLogs) {\n-      logBatch.delete(bytes(LOG_PREFIX + minTxn));\n-      minTxn++;\n+  public void logMutation(LogMutation logMutation) throws IOException {\n+    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n+    logs.add(logMutation);\n+    if (logs.size() \u003e maxLogs) {\n+      logs.removeFirst();\n     }\n-    db.write(logBatch);\n-    pendingMutations.add(logMutation);\n-    return txnId;\n+    db.put(bytes(LOG_KEY), serLogMutations(logs));\n+    pendingMutation \u003d logMutation;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void logMutation(LogMutation logMutation) throws IOException {\n    LinkedList\u003cLogMutation\u003e logs \u003d deserLogMutations(db.get(bytes(LOG_KEY)));\n    logs.add(logMutation);\n    if (logs.size() \u003e maxLogs) {\n      logs.removeFirst();\n    }\n    db.put(bytes(LOG_KEY), serLogMutations(logs));\n    pendingMutation \u003d logMutation;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "74ba6ffa0b601badc68366685dcf993a0844520a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5947: Create LeveldbConfigurationStore class using Leveldb as backing store. Contributed by Jonathan Hung\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "74ba6ffa0b601badc68366685dcf993a0844520a",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,13 @@\n+  public synchronized long logMutation(LogMutation logMutation)\n+      throws IOException {\n+    logMutation.setId(++txnId);\n+    WriteBatch logBatch \u003d db.createWriteBatch();\n+    logBatch.put(bytes(LOG_PREFIX + txnId), serLogMutation(logMutation));\n+    if (txnId - minTxn \u003e\u003d maxLogs) {\n+      logBatch.delete(bytes(LOG_PREFIX + minTxn));\n+      minTxn++;\n+    }\n+    db.write(logBatch);\n+    pendingMutations.add(logMutation);\n+    return txnId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long logMutation(LogMutation logMutation)\n      throws IOException {\n    logMutation.setId(++txnId);\n    WriteBatch logBatch \u003d db.createWriteBatch();\n    logBatch.put(bytes(LOG_PREFIX + txnId), serLogMutation(logMutation));\n    if (txnId - minTxn \u003e\u003d maxLogs) {\n      logBatch.delete(bytes(LOG_PREFIX + minTxn));\n      minTxn++;\n    }\n    db.write(logBatch);\n    pendingMutations.add(logMutation);\n    return txnId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java"
    }
  }
}