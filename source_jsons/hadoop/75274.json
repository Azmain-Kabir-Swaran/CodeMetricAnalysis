{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKFailoverController.java",
  "functionName": "doFence",
  "functionId": "doFence___target-HAServiceTarget",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
  "functionStartLine": 523,
  "functionEndLine": 546,
  "numCommitsSeen": 35,
  "timeTaken": 1039,
  "changeHistory": [
    "9d5799553fea81920edfab611e5d485a97841848"
  ],
  "changeHistoryShort": {
    "9d5799553fea81920edfab611e5d485a97841848": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d5799553fea81920edfab611e5d485a97841848": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333288 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/12 6:56 PM",
      "commitName": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,24 @@\n+  private void doFence(HAServiceTarget target) {\n+    LOG.info(\"Should fence: \" + target);\n+    boolean gracefulWorked \u003d new FailoverController(conf,\n+        RequestSource.REQUEST_BY_ZKFC).tryGracefulFence(target);\n+    if (gracefulWorked) {\n+      // It\u0027s possible that it\u0027s in standby but just about to go into active,\n+      // no? Is there some race here?\n+      LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n+          \"state without fencing\");\n+      return;\n+    }\n+    \n+    try {\n+      target.checkFencingConfigured();\n+    } catch (BadFencingConfigurationException e) {\n+      LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n+      recordActiveAttempt(new ActiveAttemptRecord(false, \"Unable to fence old active\"));\n+      throw new RuntimeException(e);\n+    }\n+    \n+    if (!target.getFencer().fence(target)) {\n+      throw new RuntimeException(\"Unable to fence \" + target);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void doFence(HAServiceTarget target) {\n    LOG.info(\"Should fence: \" + target);\n    boolean gracefulWorked \u003d new FailoverController(conf,\n        RequestSource.REQUEST_BY_ZKFC).tryGracefulFence(target);\n    if (gracefulWorked) {\n      // It\u0027s possible that it\u0027s in standby but just about to go into active,\n      // no? Is there some race here?\n      LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n          \"state without fencing\");\n      return;\n    }\n    \n    try {\n      target.checkFencingConfigured();\n    } catch (BadFencingConfigurationException e) {\n      LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n      recordActiveAttempt(new ActiveAttemptRecord(false, \"Unable to fence old active\"));\n      throw new RuntimeException(e);\n    }\n    \n    if (!target.getFencer().fence(target)) {\n      throw new RuntimeException(\"Unable to fence \" + target);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java"
    }
  }
}