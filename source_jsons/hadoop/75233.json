{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAAdmin.java",
  "functionName": "run",
  "functionId": "run___argv-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
  "functionStartLine": 344,
  "functionEndLine": 357,
  "numCommitsSeen": 36,
  "timeTaken": 983,
  "changeHistory": [
    "840df19ceecca1be26c572da2afe2f4d5f958b24",
    "8af96c7b22f92ab84c142c37252f85df7b9b98aa",
    "7b913180be9cb8f5aaded964179d6313add2f13f",
    "fb9cdcfa60cb641faded2d3843c81e969ac33147",
    "45e81ae415141c306df9746353faec2f9f151ab1",
    "b4992f671d36e35fd874958ffbc9e66abc29a725"
  ],
  "changeHistoryShort": {
    "840df19ceecca1be26c572da2afe2f4d5f958b24": "Ybodychange",
    "8af96c7b22f92ab84c142c37252f85df7b9b98aa": "Ybodychange",
    "7b913180be9cb8f5aaded964179d6313add2f13f": "Ybodychange",
    "fb9cdcfa60cb641faded2d3843c81e969ac33147": "Ybodychange",
    "45e81ae415141c306df9746353faec2f9f151ab1": "Ybodychange",
    "b4992f671d36e35fd874958ffbc9e66abc29a725": "Yintroduced"
  },
  "changeHistoryDetails": {
    "840df19ceecca1be26c572da2afe2f4d5f958b24": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 6:54 PM",
      "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/03/12 2:38 PM",
      "commitNameOld": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   public int run(String[] argv) throws Exception {\n     try {\n       return runCmd(argv);\n     } catch (IllegalArgumentException iae) {\n       errOut.println(\"Illegal argument: \" + iae.getLocalizedMessage());\n       return -1;\n     } catch (IOException ioe) {\n       errOut.println(\"Operation failed: \" + ioe.getLocalizedMessage());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Operation failed\", ioe);\n+      }\n       return -1;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    try {\n      return runCmd(argv);\n    } catch (IllegalArgumentException iae) {\n      errOut.println(\"Illegal argument: \" + iae.getLocalizedMessage());\n      return -1;\n    } catch (IOException ioe) {\n      errOut.println(\"Operation failed: \" + ioe.getLocalizedMessage());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Operation failed\", ioe);\n      }\n      return -1;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "extendedDetails": {}
    },
    "8af96c7b22f92ab84c142c37252f85df7b9b98aa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2917. HA: haadmin should not work if run by regular user. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1242626 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/12 4:46 PM",
      "commitName": "8af96c7b22f92ab84c142c37252f85df7b9b98aa",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "04/02/12 12:12 PM",
      "commitNameOld": "7b913180be9cb8f5aaded964179d6313add2f13f",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 5.19,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n   public int run(String[] argv) throws Exception {\n     try {\n       return runCmd(argv);\n     } catch (IllegalArgumentException iae) {\n-      errOut.println(\"Illegal argument: \" + iae.getMessage());\n+      errOut.println(\"Illegal argument: \" + iae.getLocalizedMessage());\n+      return -1;\n+    } catch (IOException ioe) {\n+      errOut.println(\"Operation failed: \" + ioe.getLocalizedMessage());\n       return -1;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    try {\n      return runCmd(argv);\n    } catch (IllegalArgumentException iae) {\n      errOut.println(\"Illegal argument: \" + iae.getLocalizedMessage());\n      return -1;\n    } catch (IOException ioe) {\n      errOut.println(\"Operation failed: \" + ioe.getLocalizedMessage());\n      return -1;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "extendedDetails": {}
    },
    "7b913180be9cb8f5aaded964179d6313add2f13f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2808. HA: haadmin should use namenode ids. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/12 12:12 PM",
      "commitName": "7b913180be9cb8f5aaded964179d6313add2f13f",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "02/02/12 11:20 AM",
      "commitNameOld": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 2.04,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,8 @@\n   public int run(String[] argv) throws Exception {\n-    if (argv.length \u003c 1) {\n-      printUsage(errOut);\n+    try {\n+      return runCmd(argv);\n+    } catch (IllegalArgumentException iae) {\n+      errOut.println(\"Illegal argument: \" + iae.getMessage());\n       return -1;\n     }\n-\n-    int i \u003d 0;\n-    String cmd \u003d argv[i++];\n-\n-    if (!cmd.startsWith(\"-\")) {\n-      errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n-      printUsage(errOut);\n-      return -1;\n-    }\n-    \n-    if (\"-transitionToActive\".equals(cmd)) {\n-      return transitionToActive(argv);\n-    } else if (\"-transitionToStandby\".equals(cmd)) {\n-      return transitionToStandby(argv);\n-    } else if (\"-failover\".equals(cmd)) {\n-      return failover(argv);\n-    } else if (\"-getServiceState\".equals(cmd)) {\n-      return getServiceState(argv);\n-    } else if (\"-checkHealth\".equals(cmd)) {\n-      return checkHealth(argv);\n-    } else if (\"-help\".equals(cmd)) {\n-      return help(argv);\n-    } else {\n-      errOut.println(cmd.substring(1) + \": Unknown command\");\n-      printUsage(errOut);\n-      return -1;\n-    } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    try {\n      return runCmd(argv);\n    } catch (IllegalArgumentException iae) {\n      errOut.println(\"Illegal argument: \" + iae.getMessage());\n      return -1;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "extendedDetails": {}
    },
    "fb9cdcfa60cb641faded2d3843c81e969ac33147": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7924. \u2029FailoverController for client-based configuration. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1227836 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 1:02 PM",
      "commitName": "fb9cdcfa60cb641faded2d3843c81e969ac33147",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "18/12/11 9:21 PM",
      "commitNameOld": "45e81ae415141c306df9746353faec2f9f151ab1",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 17.65,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,33 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       printUsage(errOut);\n       return -1;\n     }\n \n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     if (!cmd.startsWith(\"-\")) {\n       errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n       printUsage(errOut);\n       return -1;\n     }\n     \n     if (\"-transitionToActive\".equals(cmd)) {\n       return transitionToActive(argv);\n     } else if (\"-transitionToStandby\".equals(cmd)) {\n       return transitionToStandby(argv);\n+    } else if (\"-failover\".equals(cmd)) {\n+      return failover(argv);\n     } else if (\"-getServiceState\".equals(cmd)) {\n       return getServiceState(argv);\n     } else if (\"-checkHealth\".equals(cmd)) {\n       return checkHealth(argv);\n     } else if (\"-help\".equals(cmd)) {\n       return help(argv);\n     } else {\n       errOut.println(cmd.substring(1) + \": Unknown command\");\n       printUsage(errOut);\n       return -1;\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      printUsage(errOut);\n      return -1;\n    }\n\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    if (!cmd.startsWith(\"-\")) {\n      errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n      printUsage(errOut);\n      return -1;\n    }\n    \n    if (\"-transitionToActive\".equals(cmd)) {\n      return transitionToActive(argv);\n    } else if (\"-transitionToStandby\".equals(cmd)) {\n      return transitionToStandby(argv);\n    } else if (\"-failover\".equals(cmd)) {\n      return failover(argv);\n    } else if (\"-getServiceState\".equals(cmd)) {\n      return getServiceState(argv);\n    } else if (\"-checkHealth\".equals(cmd)) {\n      return checkHealth(argv);\n    } else if (\"-help\".equals(cmd)) {\n      return help(argv);\n    } else {\n      errOut.println(cmd.substring(1) + \": Unknown command\");\n      printUsage(errOut);\n      return -1;\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "extendedDetails": {}
    },
    "45e81ae415141c306df9746353faec2f9f151ab1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7925. Add interface and update CLI to query current state to HAServiceProtocol. Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1220611 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/11 9:21 PM",
      "commitName": "45e81ae415141c306df9746353faec2f9f151ab1",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "28/10/11 2:24 PM",
      "commitNameOld": "b4992f671d36e35fd874958ffbc9e66abc29a725",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 51.33,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       printUsage(errOut);\n       return -1;\n     }\n \n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     if (!cmd.startsWith(\"-\")) {\n       errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n       printUsage(errOut);\n       return -1;\n     }\n     \n     if (\"-transitionToActive\".equals(cmd)) {\n       return transitionToActive(argv);\n     } else if (\"-transitionToStandby\".equals(cmd)) {\n       return transitionToStandby(argv);\n+    } else if (\"-getServiceState\".equals(cmd)) {\n+      return getServiceState(argv);\n     } else if (\"-checkHealth\".equals(cmd)) {\n       return checkHealth(argv);\n     } else if (\"-help\".equals(cmd)) {\n       return help(argv);\n     } else {\n       errOut.println(cmd.substring(1) + \": Unknown command\");\n       printUsage(errOut);\n       return -1;\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      printUsage(errOut);\n      return -1;\n    }\n\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    if (!cmd.startsWith(\"-\")) {\n      errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n      printUsage(errOut);\n      return -1;\n    }\n    \n    if (\"-transitionToActive\".equals(cmd)) {\n      return transitionToActive(argv);\n    } else if (\"-transitionToStandby\".equals(cmd)) {\n      return transitionToStandby(argv);\n    } else if (\"-getServiceState\".equals(cmd)) {\n      return getServiceState(argv);\n    } else if (\"-checkHealth\".equals(cmd)) {\n      return checkHealth(argv);\n    } else if (\"-help\".equals(cmd)) {\n      return help(argv);\n    } else {\n      errOut.println(cmd.substring(1) + \": Unknown command\");\n      printUsage(errOut);\n      return -1;\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "extendedDetails": {}
    },
    "b4992f671d36e35fd874958ffbc9e66abc29a725": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7774. HA: Administrative CLI to control HA daemons. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1190584 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/10/11 2:24 PM",
      "commitName": "b4992f671d36e35fd874958ffbc9e66abc29a725",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,29 @@\n+  public int run(String[] argv) throws Exception {\n+    if (argv.length \u003c 1) {\n+      printUsage(errOut);\n+      return -1;\n+    }\n+\n+    int i \u003d 0;\n+    String cmd \u003d argv[i++];\n+\n+    if (!cmd.startsWith(\"-\")) {\n+      errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n+      printUsage(errOut);\n+      return -1;\n+    }\n+    \n+    if (\"-transitionToActive\".equals(cmd)) {\n+      return transitionToActive(argv);\n+    } else if (\"-transitionToStandby\".equals(cmd)) {\n+      return transitionToStandby(argv);\n+    } else if (\"-checkHealth\".equals(cmd)) {\n+      return checkHealth(argv);\n+    } else if (\"-help\".equals(cmd)) {\n+      return help(argv);\n+    } else {\n+      errOut.println(cmd.substring(1) + \": Unknown command\");\n+      printUsage(errOut);\n+      return -1;\n+    } \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      printUsage(errOut);\n      return -1;\n    }\n\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    if (!cmd.startsWith(\"-\")) {\n      errOut.println(\"Bad command \u0027\" + cmd + \"\u0027: expected command starting with \u0027-\u0027\");\n      printUsage(errOut);\n      return -1;\n    }\n    \n    if (\"-transitionToActive\".equals(cmd)) {\n      return transitionToActive(argv);\n    } else if (\"-transitionToStandby\".equals(cmd)) {\n      return transitionToStandby(argv);\n    } else if (\"-checkHealth\".equals(cmd)) {\n      return checkHealth(argv);\n    } else if (\"-help\".equals(cmd)) {\n      return help(argv);\n    } else {\n      errOut.println(cmd.substring(1) + \": Unknown command\");\n      printUsage(errOut);\n      return -1;\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java"
    }
  }
}