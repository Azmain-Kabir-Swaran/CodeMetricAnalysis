{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapAuthenticationHandler.java",
  "functionName": "indexOfDomainMatch",
  "functionId": "indexOfDomainMatch___userName-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/LdapAuthenticationHandler.java",
  "functionStartLine": 322,
  "functionEndLine": 336,
  "numCommitsSeen": 2,
  "timeTaken": 553,
  "changeHistory": [
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492"
  ],
  "changeHistoryShort": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12082 Support multiple authentication schemes via AuthenticationFilter\n",
      "commitDate": "18/10/16 6:32 PM",
      "commitName": "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
      "commitAuthor": "Benoy Antony",
      "diff": "@@ -0,0 +1,15 @@\n+  private static int indexOfDomainMatch(String userName) {\n+    if (userName \u003d\u003d null) {\n+      return -1;\n+    }\n+\n+    int idx \u003d userName.indexOf(\u0027/\u0027);\n+    int idx2 \u003d userName.indexOf(\u0027@\u0027);\n+    int endIdx \u003d Math.min(idx, idx2); // Use the earlier match.\n+    // Unless at least one of \u0027/\u0027 or \u0027@\u0027 was not found, in\n+    // which case, user the latter match.\n+    if (endIdx \u003d\u003d -1) {\n+      endIdx \u003d Math.max(idx, idx2);\n+    }\n+    return endIdx;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int indexOfDomainMatch(String userName) {\n    if (userName \u003d\u003d null) {\n      return -1;\n    }\n\n    int idx \u003d userName.indexOf(\u0027/\u0027);\n    int idx2 \u003d userName.indexOf(\u0027@\u0027);\n    int endIdx \u003d Math.min(idx, idx2); // Use the earlier match.\n    // Unless at least one of \u0027/\u0027 or \u0027@\u0027 was not found, in\n    // which case, user the latter match.\n    if (endIdx \u003d\u003d -1) {\n      endIdx \u003d Math.max(idx, idx2);\n    }\n    return endIdx;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/LdapAuthenticationHandler.java"
    }
  }
}