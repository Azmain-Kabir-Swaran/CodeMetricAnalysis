{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImageServlet.java",
  "functionName": "serveFile",
  "functionId": "serveFile___file-File",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
  "functionStartLine": 181,
  "functionEndLine": 203,
  "numCommitsSeen": 64,
  "timeTaken": 3109,
  "changeHistory": [
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
    "94a1632fcb677fda6f4d812614026417f1d0a360",
    "dbd22b23c2d68b97b4da47215897906f06f978e3",
    "0f595915a388305edbb3ce928415571811d304e8",
    "3728d16160118a4b6e632a59fb1e2e0795ca6595"
  ],
  "changeHistoryShort": {
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f": "Ybodychange",
    "94a1632fcb677fda6f4d812614026417f1d0a360": "Ymultichange(Yfilerename,Ybodychange)",
    "dbd22b23c2d68b97b4da47215897906f06f978e3": "Ymultichange(Yfilerename,Ybodychange)",
    "0f595915a388305edbb3ce928415571811d304e8": "Ymultichange(Ymovefromfile,Ybodychange)",
    "3728d16160118a4b6e632a59fb1e2e0795ca6595": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8808. dfs.image.transfer.bandwidthPerSec should not apply to -bootstrapStandby. Contributed by Zhe Zhang.\n",
      "commitDate": "23/10/15 2:01 PM",
      "commitName": "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "17/09/15 2:18 PM",
      "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 35.99,
      "commitsBetweenForRepo": 286,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n             setVerificationHeadersForGet(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n+            DataTransferThrottler throttler \u003d parsedParams.isBootstrapStandby ?\n+                getThrottlerForBootstrapStandby(conf) : getThrottler(conf);\n             TransferFsImage.copyFileToStream(response.getOutputStream(),\n-               file, fis, getThrottler(conf));\n+               file, fis, throttler);\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeadersForGet(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            DataTransferThrottler throttler \u003d parsedParams.isBootstrapStandby ?\n                getThrottlerForBootstrapStandby(conf) : getThrottler(conf);\n            TransferFsImage.copyFileToStream(response.getOutputStream(),\n               file, fis, throttler);\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
      "extendedDetails": {}
    },
    "94a1632fcb677fda6f4d812614026417f1d0a360": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575611 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/14 1:25 PM",
      "commitName": "94a1632fcb677fda6f4d812614026417f1d0a360",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575611 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/03/14 1:25 PM",
          "commitName": "94a1632fcb677fda6f4d812614026417f1d0a360",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "08/03/14 1:15 PM",
          "commitNameOld": "dbd22b23c2d68b97b4da47215897906f06f978e3",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n-            setVerificationHeaders(response, file);\n+            setVerificationHeadersForGet(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n-            TransferFsImage.getFileServer(response, file, fis,\n-                getThrottler(conf));\n+            TransferFsImage.copyFileToStream(response.getOutputStream(),\n+               file, fis, getThrottler(conf));\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeadersForGet(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.copyFileToStream(response.getOutputStream(),\n               file, fis, getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575611 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/03/14 1:25 PM",
          "commitName": "94a1632fcb677fda6f4d812614026417f1d0a360",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "08/03/14 1:15 PM",
          "commitNameOld": "dbd22b23c2d68b97b4da47215897906f06f978e3",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n-            setVerificationHeaders(response, file);\n+            setVerificationHeadersForGet(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n-            TransferFsImage.getFileServer(response, file, fis,\n-                getThrottler(conf));\n+            TransferFsImage.copyFileToStream(response.getOutputStream(),\n+               file, fis, getThrottler(conf));\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeadersForGet(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.copyFileToStream(response.getOutputStream(),\n               file, fis, getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
          "extendedDetails": {}
        }
      ]
    },
    "dbd22b23c2d68b97b4da47215897906f06f978e3": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Revert HDFS-3405 for recommit with correct renamed files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575610 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/14 1:15 PM",
      "commitName": "dbd22b23c2d68b97b4da47215897906f06f978e3",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Revert HDFS-3405 for recommit with correct renamed files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575610 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/03/14 1:15 PM",
          "commitName": "dbd22b23c2d68b97b4da47215897906f06f978e3",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "08/03/14 1:11 PM",
          "commitNameOld": "98594ab787d2e2a6b499f576e0cbda10767eaf15",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n-            setVerificationHeadersForGet(response, file);\n+            setVerificationHeaders(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n-            TransferFsImage.copyFileToStream(response.getOutputStream(),\n-               file, fis, getThrottler(conf));\n+            TransferFsImage.getFileServer(response, file, fis,\n+                getThrottler(conf));\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeaders(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.getFileServer(response, file, fis,\n                getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert HDFS-3405 for recommit with correct renamed files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575610 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/03/14 1:15 PM",
          "commitName": "dbd22b23c2d68b97b4da47215897906f06f978e3",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "08/03/14 1:11 PM",
          "commitNameOld": "98594ab787d2e2a6b499f576e0cbda10767eaf15",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n-            setVerificationHeadersForGet(response, file);\n+            setVerificationHeaders(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n-            TransferFsImage.copyFileToStream(response.getOutputStream(),\n-               file, fis, getThrottler(conf));\n+            TransferFsImage.getFileServer(response, file, fis,\n+                getThrottler(conf));\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeaders(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.getFileServer(response, file, fis,\n                getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java",
          "extendedDetails": {}
        }
      ]
    },
    "0f595915a388305edbb3ce928415571811d304e8": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575457 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/03/14 4:39 PM",
      "commitName": "0f595915a388305edbb3ce928415571811d304e8",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575457 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/03/14 4:39 PM",
          "commitName": "0f595915a388305edbb3ce928415571811d304e8",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "07/03/14 3:47 PM",
          "commitNameOld": "1f6c2b09c6a5dc07f5caa1cad7036e0e1465f33e",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n-            setVerificationHeaders(response, file);\n+            setVerificationHeadersForGet(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n-            TransferFsImage.getFileServer(response, file, fis,\n-                getThrottler(conf));\n+            TransferFsImage.copyFileToStream(response.getOutputStream(),\n+               file, fis, getThrottler(conf));\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeadersForGet(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.copyFileToStream(response.getOutputStream(),\n               file, fis, getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
            "oldMethodName": "serveFile",
            "newMethodName": "serveFile"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3405. Checkpointing should use HTTP POST or PUT instead of GET-GET to send merged fsimages. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575457 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/03/14 4:39 PM",
          "commitName": "0f595915a388305edbb3ce928415571811d304e8",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "07/03/14 3:47 PM",
          "commitNameOld": "1f6c2b09c6a5dc07f5caa1cad7036e0e1465f33e",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n         private void serveFile(File file) throws IOException {\n           FileInputStream fis \u003d new FileInputStream(file);\n           try {\n-            setVerificationHeaders(response, file);\n+            setVerificationHeadersForGet(response, file);\n             setFileNameHeaders(response, file);\n             if (!file.exists()) {\n               // Potential race where the file was deleted while we were in the\n               // process of setting headers!\n               throw new FileNotFoundException(file.toString());\n               // It\u0027s possible the file could be deleted after this point, but\n               // we\u0027ve already opened the \u0027fis\u0027 stream.\n               // It\u0027s also possible length could change, but this would be\n               // detected by the client side as an inaccurate length header.\n             }\n             // send file\n-            TransferFsImage.getFileServer(response, file, fis,\n-                getThrottler(conf));\n+            TransferFsImage.copyFileToStream(response.getOutputStream(),\n+               file, fis, getThrottler(conf));\n           } finally {\n             IOUtils.closeStream(fis);\n           }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeadersForGet(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.copyFileToStream(response.getOutputStream(),\n               file, fis, getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ImageServlet.java",
          "extendedDetails": {}
        }
      ]
    },
    "3728d16160118a4b6e632a59fb1e2e0795ca6595": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3574. Fix small race and do some cleanup in GetImageServlet. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1356939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/12 1:55 PM",
      "commitName": "3728d16160118a4b6e632a59fb1e2e0795ca6595",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+        private void serveFile(File file) throws IOException {\n+          FileInputStream fis \u003d new FileInputStream(file);\n+          try {\n+            setVerificationHeaders(response, file);\n+            setFileNameHeaders(response, file);\n+            if (!file.exists()) {\n+              // Potential race where the file was deleted while we were in the\n+              // process of setting headers!\n+              throw new FileNotFoundException(file.toString());\n+              // It\u0027s possible the file could be deleted after this point, but\n+              // we\u0027ve already opened the \u0027fis\u0027 stream.\n+              // It\u0027s also possible length could change, but this would be\n+              // detected by the client side as an inaccurate length header.\n+            }\n+            // send file\n+            TransferFsImage.getFileServer(response, file, fis,\n+                getThrottler(conf));\n+          } finally {\n+            IOUtils.closeStream(fis);\n+          }\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        private void serveFile(File file) throws IOException {\n          FileInputStream fis \u003d new FileInputStream(file);\n          try {\n            setVerificationHeaders(response, file);\n            setFileNameHeaders(response, file);\n            if (!file.exists()) {\n              // Potential race where the file was deleted while we were in the\n              // process of setting headers!\n              throw new FileNotFoundException(file.toString());\n              // It\u0027s possible the file could be deleted after this point, but\n              // we\u0027ve already opened the \u0027fis\u0027 stream.\n              // It\u0027s also possible length could change, but this would be\n              // detected by the client side as an inaccurate length header.\n            }\n            // send file\n            TransferFsImage.getFileServer(response, file, fis,\n                getThrottler(conf));\n          } finally {\n            IOUtils.closeStream(fis);\n          }\n        }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java"
    }
  }
}