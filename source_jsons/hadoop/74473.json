{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KDiag.java",
  "functionName": "dumpKeytab",
  "functionId": "dumpKeytab___keytabFile-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
  "functionStartLine": 594,
  "functionEndLine": 618,
  "numCommitsSeen": 11,
  "timeTaken": 1668,
  "changeHistory": [
    "7b988e88992528a0cac2ca8893652c5d4a90c6b9",
    "916140604ffef59466ba30832478311d3e6249bd",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4"
  ],
  "changeHistoryShort": {
    "7b988e88992528a0cac2ca8893652c5d4a90c6b9": "Ybodychange",
    "916140604ffef59466ba30832478311d3e6249bd": "Ybodychange",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b988e88992528a0cac2ca8893652c5d4a90c6b9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13861. Spelling errors in logging and exceptions for code. Contributed by Grant Sohn.\n",
      "commitDate": "05/12/16 11:18 PM",
      "commitName": "7b988e88992528a0cac2ca8893652c5d4a90c6b9",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/11/16 8:41 AM",
      "commitNameOld": "abb9fa7fc69ec7b25f1c44e17c4c7dd17f5de16a",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 11.61,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private void dumpKeytab(File keytabFile) throws IOException {\n     title(\"Examining keytab %s\", keytabFile);\n     File kt \u003d keytabFile.getCanonicalFile();\n     verifyFileIsValid(kt, CAT_KERBEROS, \"keytab\");\n \n     Keytab loadKeytab \u003d Keytab.loadKeytab(kt);\n     List\u003cPrincipalName\u003e principals \u003d loadKeytab.getPrincipals();\n-    println(\"keytab princial count: %d\", principals.size());\n+    println(\"keytab principal count: %d\", principals.size());\n     int entrySize \u003d 0;\n     for (PrincipalName princ : principals) {\n       List\u003cKeytabEntry\u003e entries \u003d loadKeytab.getKeytabEntries(princ);\n       entrySize \u003d entrySize + entries.size();\n       for (KeytabEntry entry : entries) {\n         EncryptionKey key \u003d entry.getKey();\n         println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n                 entry.getPrincipal(),\n                 entry.getKvno(),\n                 entry.getTimestamp(),\n                 key.getKeyType());\n       }\n     }\n     println(\"keytab entry count: %d\", entrySize);\n \n     endln();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpKeytab(File keytabFile) throws IOException {\n    title(\"Examining keytab %s\", keytabFile);\n    File kt \u003d keytabFile.getCanonicalFile();\n    verifyFileIsValid(kt, CAT_KERBEROS, \"keytab\");\n\n    Keytab loadKeytab \u003d Keytab.loadKeytab(kt);\n    List\u003cPrincipalName\u003e principals \u003d loadKeytab.getPrincipals();\n    println(\"keytab principal count: %d\", principals.size());\n    int entrySize \u003d 0;\n    for (PrincipalName princ : principals) {\n      List\u003cKeytabEntry\u003e entries \u003d loadKeytab.getKeytabEntries(princ);\n      entrySize \u003d entrySize + entries.size();\n      for (KeytabEntry entry : entries) {\n        EncryptionKey key \u003d entry.getKey();\n        println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n                entry.getPrincipal(),\n                entry.getKvno(),\n                entry.getTimestamp(),\n                key.getKeyType());\n      }\n    }\n    println(\"keytab entry count: %d\", entrySize);\n\n    endln();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
      "extendedDetails": {}
    },
    "916140604ffef59466ba30832478311d3e6249bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12911. Upgrade Hadoop MiniKDC with Kerby. Contributed by Jiajia Li\n",
      "commitDate": "27/05/16 11:23 PM",
      "commitName": "916140604ffef59466ba30832478311d3e6249bd",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "10/05/16 1:32 PM",
      "commitNameOld": "829a2e4d271f05afb209ddc834cd4a0e85492eda",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 17.41,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,25 @@\n   private void dumpKeytab(File keytabFile) throws IOException {\n     title(\"Examining keytab %s\", keytabFile);\n     File kt \u003d keytabFile.getCanonicalFile();\n     verifyFileIsValid(kt, CAT_KERBEROS, \"keytab\");\n-    List\u003cKeytabEntry\u003e entries \u003d Keytab.read(kt).getEntries();\n-    println(\"keytab entry count: %d\", entries.size());\n-    for (KeytabEntry entry : entries) {\n-      EncryptionKey key \u003d entry.getKey();\n-      println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n-          entry.getPrincipalName(),\n-          entry.getKeyVersion(),\n-          entry.getTimeStamp(),\n-          key.getKeyType());\n+\n+    Keytab loadKeytab \u003d Keytab.loadKeytab(kt);\n+    List\u003cPrincipalName\u003e principals \u003d loadKeytab.getPrincipals();\n+    println(\"keytab princial count: %d\", principals.size());\n+    int entrySize \u003d 0;\n+    for (PrincipalName princ : principals) {\n+      List\u003cKeytabEntry\u003e entries \u003d loadKeytab.getKeytabEntries(princ);\n+      entrySize \u003d entrySize + entries.size();\n+      for (KeytabEntry entry : entries) {\n+        EncryptionKey key \u003d entry.getKey();\n+        println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n+                entry.getPrincipal(),\n+                entry.getKvno(),\n+                entry.getTimestamp(),\n+                key.getKeyType());\n+      }\n     }\n+    println(\"keytab entry count: %d\", entrySize);\n+\n     endln();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpKeytab(File keytabFile) throws IOException {\n    title(\"Examining keytab %s\", keytabFile);\n    File kt \u003d keytabFile.getCanonicalFile();\n    verifyFileIsValid(kt, CAT_KERBEROS, \"keytab\");\n\n    Keytab loadKeytab \u003d Keytab.loadKeytab(kt);\n    List\u003cPrincipalName\u003e principals \u003d loadKeytab.getPrincipals();\n    println(\"keytab princial count: %d\", principals.size());\n    int entrySize \u003d 0;\n    for (PrincipalName princ : principals) {\n      List\u003cKeytabEntry\u003e entries \u003d loadKeytab.getKeytabEntries(princ);\n      entrySize \u003d entrySize + entries.size();\n      for (KeytabEntry entry : entries) {\n        EncryptionKey key \u003d entry.getKey();\n        println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n                entry.getPrincipal(),\n                entry.getKvno(),\n                entry.getTimestamp(),\n                key.getKeyType());\n      }\n    }\n    println(\"keytab entry count: %d\", entrySize);\n\n    endln();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
      "extendedDetails": {}
    },
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12426. Add Entry point for Kerberos health check. Contributed by Steve Loughran.\n",
      "commitDate": "05/02/16 3:47 PM",
      "commitName": "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,16 @@\n+  private void dumpKeytab(File keytabFile) throws IOException {\n+    title(\"Examining keytab %s\", keytabFile);\n+    File kt \u003d keytabFile.getCanonicalFile();\n+    verifyFileIsValid(kt, CAT_KERBEROS, \"keytab\");\n+    List\u003cKeytabEntry\u003e entries \u003d Keytab.read(kt).getEntries();\n+    println(\"keytab entry count: %d\", entries.size());\n+    for (KeytabEntry entry : entries) {\n+      EncryptionKey key \u003d entry.getKey();\n+      println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n+          entry.getPrincipalName(),\n+          entry.getKeyVersion(),\n+          entry.getTimeStamp(),\n+          key.getKeyType());\n+    }\n+    endln();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpKeytab(File keytabFile) throws IOException {\n    title(\"Examining keytab %s\", keytabFile);\n    File kt \u003d keytabFile.getCanonicalFile();\n    verifyFileIsValid(kt, CAT_KERBEROS, \"keytab\");\n    List\u003cKeytabEntry\u003e entries \u003d Keytab.read(kt).getEntries();\n    println(\"keytab entry count: %d\", entries.size());\n    for (KeytabEntry entry : entries) {\n      EncryptionKey key \u003d entry.getKey();\n      println(\" %s: version\u003d%d expires\u003d%s encryption\u003d%s\",\n          entry.getPrincipalName(),\n          entry.getKeyVersion(),\n          entry.getTimeStamp(),\n          key.getKeyType());\n    }\n    endln();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java"
    }
  }
}