{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleCopyListing.java",
  "functionName": "doBuildListing",
  "functionId": "doBuildListing___pathToListingFile-Path__context-DistCpContext",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
  "functionStartLine": 204,
  "functionEndLine": 211,
  "numCommitsSeen": 51,
  "timeTaken": 2850,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "95f32015ad9273420299130a9f10acdbafe63556",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
    "9ea61e44153b938309841b1499488360e9abd176",
    "6f92ad9868b008eb523ae3279e05004de31a08ce",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ymultichange(Yparameterchange,Ybodychange)",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ybodychange",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ybodychange",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ybodychange",
    "95f32015ad9273420299130a9f10acdbafe63556": "Ymodifierchange",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": "Ybodychange",
    "9ea61e44153b938309841b1499488360e9abd176": "Ybodychange",
    "6f92ad9868b008eb523ae3279e05004de31a08ce": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n   protected void doBuildListing(Path pathToListingFile,\n-                                DistCpOptions options) throws IOException {\n-    if(options.shouldUseSnapshotDiff()) {\n-      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n-    }else {\n-      doBuildListing(getWriter(pathToListingFile), options);\n+                                DistCpContext context) throws IOException {\n+    if (context.shouldUseSnapshotDiff()) {\n+      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), context);\n+    } else {\n+      doBuildListing(getWriter(pathToListingFile), context);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void doBuildListing(Path pathToListingFile,\n                                DistCpContext context) throws IOException {\n    if (context.shouldUseSnapshotDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), context);\n    } else {\n      doBuildListing(getWriter(pathToListingFile), context);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[pathToListingFile-Path, options-DistCpOptions]",
            "newValue": "[pathToListingFile-Path, context-DistCpContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n   protected void doBuildListing(Path pathToListingFile,\n-                                DistCpOptions options) throws IOException {\n-    if(options.shouldUseSnapshotDiff()) {\n-      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n-    }else {\n-      doBuildListing(getWriter(pathToListingFile), options);\n+                                DistCpContext context) throws IOException {\n+    if (context.shouldUseSnapshotDiff()) {\n+      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), context);\n+    } else {\n+      doBuildListing(getWriter(pathToListingFile), context);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void doBuildListing(Path pathToListingFile,\n                                DistCpContext context) throws IOException {\n    if (context.shouldUseSnapshotDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), context);\n    } else {\n      doBuildListing(getWriter(pathToListingFile), context);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 10:47 PM",
      "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected void doBuildListing(Path pathToListingFile,\n                                 DistCpOptions options) throws IOException {\n-    if(options.shouldUseDiff()) {\n+    if(options.shouldUseSnapshotDiff()) {\n       doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n     }else {\n       doBuildListing(getWriter(pathToListingFile), options);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void doBuildListing(Path pathToListingFile,\n                                DistCpOptions options) throws IOException {\n    if(options.shouldUseSnapshotDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n    }else {\n      doBuildListing(getWriter(pathToListingFile), options);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 11:04 AM",
      "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected void doBuildListing(Path pathToListingFile,\n                                 DistCpOptions options) throws IOException {\n-    if(options.shouldUseSnapshotDiff()) {\n+    if(options.shouldUseDiff()) {\n       doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n     }else {\n       doBuildListing(getWriter(pathToListingFile), options);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void doBuildListing(Path pathToListingFile,\n                                DistCpOptions options) throws IOException {\n    if(options.shouldUseDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n    }else {\n      doBuildListing(getWriter(pathToListingFile), options);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "19/09/16 3:16 PM",
      "commitNameOld": "98bdb5139769eb55893971b43b9c23da9513a784",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 27.82,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected void doBuildListing(Path pathToListingFile,\n                                 DistCpOptions options) throws IOException {\n-    if(options.shouldUseDiff()) {\n+    if(options.shouldUseSnapshotDiff()) {\n       doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n     }else {\n       doBuildListing(getWriter(pathToListingFile), options);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void doBuildListing(Path pathToListingFile,\n                                DistCpOptions options) throws IOException {\n    if(options.shouldUseSnapshotDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n    }else {\n      doBuildListing(getWriter(pathToListingFile), options);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "95f32015ad9273420299130a9f10acdbafe63556": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-9630. DistCp minor refactoring and clean up. Contributed by Kai Zheng.\n\nChange-Id: I363c4ffcac32116ddcdc0a22fac3db92f14a0db0\n",
      "commitDate": "11/01/16 9:46 AM",
      "commitName": "95f32015ad9273420299130a9f10acdbafe63556",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "20/08/15 8:02 AM",
      "commitNameOld": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 144.11,
      "commitsBetweenForRepo": 960,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n-  public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n+  protected void doBuildListing(Path pathToListingFile,\n+                                DistCpOptions options) throws IOException {\n     if(options.shouldUseDiff()) {\n       doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n     }else {\n       doBuildListing(getWriter(pathToListingFile), options);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void doBuildListing(Path pathToListingFile,\n                                DistCpOptions options) throws IOException {\n    if(options.shouldUseDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n    }else {\n      doBuildListing(getWriter(pathToListingFile), options);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[protected]"
      }
    },
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8828. Utilize Snapshot diff report to build diff copy list in distcp. (Yufei Gu via Yongjun Zhang)\n",
      "commitDate": "20/08/15 8:02 AM",
      "commitName": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "18/05/15 1:24 PM",
      "commitNameOld": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 93.78,
      "commitsBetweenForRepo": 595,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,7 @@\n   public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n-    doBuildListing(getWriter(pathToListingFile), options);\n+    if(options.shouldUseDiff()) {\n+      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n+    }else {\n+      doBuildListing(getWriter(pathToListingFile), options);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n    if(options.shouldUseDiff()) {\n      doBuildListingWithSnapshotDiff(getWriter(pathToListingFile), options);\n    }else {\n      doBuildListing(getWriter(pathToListingFile), options);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "9ea61e44153b938309841b1499488360e9abd176": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10129. Distcp may succeed when it fails (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548175 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/13 7:47 AM",
      "commitName": "9ea61e44153b938309841b1499488360e9abd176",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "22/03/13 3:09 AM",
      "commitNameOld": "6f92ad9868b008eb523ae3279e05004de31a08ce",
      "commitAuthorOld": "Amareshwari Sri Ramadasu",
      "daysBetweenCommits": 258.24,
      "commitsBetweenForRepo": 1593,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,3 @@\n   public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n-\n-    SequenceFile.Writer fileListWriter \u003d null;\n-\n-    try {\n-      fileListWriter \u003d getWriter(pathToListingFile);\n-\n-      for (Path path: options.getSourcePaths()) {\n-        FileSystem sourceFS \u003d path.getFileSystem(getConf());\n-        path \u003d makeQualified(path);\n-\n-        FileStatus rootStatus \u003d sourceFS.getFileStatus(path);\n-        Path sourcePathRoot \u003d computeSourceRootPath(rootStatus, options);\n-        boolean localFile \u003d (rootStatus.getClass() !\u003d FileStatus.class);\n-\n-        FileStatus[] sourceFiles \u003d sourceFS.listStatus(path);\n-        if (sourceFiles !\u003d null \u0026\u0026 sourceFiles.length \u003e 0) {\n-          for (FileStatus sourceStatus: sourceFiles) {\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"Recording source-path: \" + sourceStatus.getPath() + \" for copy.\");\n-            }\n-            writeToFileListing(fileListWriter, sourceStatus, sourcePathRoot,\n-                localFile, options);\n-\n-            if (isDirectoryAndNotEmpty(sourceFS, sourceStatus)) {\n-              if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Traversing non-empty source dir: \" + sourceStatus.getPath());\n-              }\n-              traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot,\n-                  localFile, options);\n-            }\n-          }\n-        } else {\n-          writeToFileListing(fileListWriter, rootStatus, sourcePathRoot,\n-              localFile, options);\n-        }\n-      }\n-    } finally {\n-      IOUtils.closeStream(fileListWriter);\n-    }\n+    doBuildListing(getWriter(pathToListingFile), options);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n    doBuildListing(getWriter(pathToListingFile), options);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "6f92ad9868b008eb523ae3279e05004de31a08ce": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/13 3:09 AM",
      "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
      "commitAuthor": "Amareshwari Sri Ramadasu",
      "commitDateOld": "25/01/12 10:36 PM",
      "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 421.15,
      "commitsBetweenForRepo": 2459,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,41 @@\n   public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n \n     SequenceFile.Writer fileListWriter \u003d null;\n \n     try {\n       fileListWriter \u003d getWriter(pathToListingFile);\n \n       for (Path path: options.getSourcePaths()) {\n         FileSystem sourceFS \u003d path.getFileSystem(getConf());\n         path \u003d makeQualified(path);\n \n         FileStatus rootStatus \u003d sourceFS.getFileStatus(path);\n         Path sourcePathRoot \u003d computeSourceRootPath(rootStatus, options);\n         boolean localFile \u003d (rootStatus.getClass() !\u003d FileStatus.class);\n \n         FileStatus[] sourceFiles \u003d sourceFS.listStatus(path);\n         if (sourceFiles !\u003d null \u0026\u0026 sourceFiles.length \u003e 0) {\n           for (FileStatus sourceStatus: sourceFiles) {\n             if (LOG.isDebugEnabled()) {\n               LOG.debug(\"Recording source-path: \" + sourceStatus.getPath() + \" for copy.\");\n             }\n-            writeToFileListing(fileListWriter, sourceStatus, sourcePathRoot, localFile);\n+            writeToFileListing(fileListWriter, sourceStatus, sourcePathRoot,\n+                localFile, options);\n \n             if (isDirectoryAndNotEmpty(sourceFS, sourceStatus)) {\n               if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Traversing non-empty source dir: \" + sourceStatus.getPath());\n               }\n-              traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot, localFile);\n+              traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot,\n+                  localFile, options);\n             }\n           }\n         } else {\n-          writeToFileListing(fileListWriter, rootStatus, sourcePathRoot, localFile);\n+          writeToFileListing(fileListWriter, rootStatus, sourcePathRoot,\n+              localFile, options);\n         }\n       }\n     } finally {\n       IOUtils.closeStream(fileListWriter);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n\n    SequenceFile.Writer fileListWriter \u003d null;\n\n    try {\n      fileListWriter \u003d getWriter(pathToListingFile);\n\n      for (Path path: options.getSourcePaths()) {\n        FileSystem sourceFS \u003d path.getFileSystem(getConf());\n        path \u003d makeQualified(path);\n\n        FileStatus rootStatus \u003d sourceFS.getFileStatus(path);\n        Path sourcePathRoot \u003d computeSourceRootPath(rootStatus, options);\n        boolean localFile \u003d (rootStatus.getClass() !\u003d FileStatus.class);\n\n        FileStatus[] sourceFiles \u003d sourceFS.listStatus(path);\n        if (sourceFiles !\u003d null \u0026\u0026 sourceFiles.length \u003e 0) {\n          for (FileStatus sourceStatus: sourceFiles) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Recording source-path: \" + sourceStatus.getPath() + \" for copy.\");\n            }\n            writeToFileListing(fileListWriter, sourceStatus, sourcePathRoot,\n                localFile, options);\n\n            if (isDirectoryAndNotEmpty(sourceFS, sourceStatus)) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Traversing non-empty source dir: \" + sourceStatus.getPath());\n              }\n              traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot,\n                  localFile, options);\n            }\n          }\n        } else {\n          writeToFileListing(fileListWriter, rootStatus, sourcePathRoot,\n              localFile, options);\n        }\n      }\n    } finally {\n      IOUtils.closeStream(fileListWriter);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,38 @@\n+  public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n+\n+    SequenceFile.Writer fileListWriter \u003d null;\n+\n+    try {\n+      fileListWriter \u003d getWriter(pathToListingFile);\n+\n+      for (Path path: options.getSourcePaths()) {\n+        FileSystem sourceFS \u003d path.getFileSystem(getConf());\n+        path \u003d makeQualified(path);\n+\n+        FileStatus rootStatus \u003d sourceFS.getFileStatus(path);\n+        Path sourcePathRoot \u003d computeSourceRootPath(rootStatus, options);\n+        boolean localFile \u003d (rootStatus.getClass() !\u003d FileStatus.class);\n+\n+        FileStatus[] sourceFiles \u003d sourceFS.listStatus(path);\n+        if (sourceFiles !\u003d null \u0026\u0026 sourceFiles.length \u003e 0) {\n+          for (FileStatus sourceStatus: sourceFiles) {\n+            if (LOG.isDebugEnabled()) {\n+              LOG.debug(\"Recording source-path: \" + sourceStatus.getPath() + \" for copy.\");\n+            }\n+            writeToFileListing(fileListWriter, sourceStatus, sourcePathRoot, localFile);\n+\n+            if (isDirectoryAndNotEmpty(sourceFS, sourceStatus)) {\n+              if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Traversing non-empty source dir: \" + sourceStatus.getPath());\n+              }\n+              traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot, localFile);\n+            }\n+          }\n+        } else {\n+          writeToFileListing(fileListWriter, rootStatus, sourcePathRoot, localFile);\n+        }\n+      }\n+    } finally {\n+      IOUtils.closeStream(fileListWriter);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void doBuildListing(Path pathToListingFile, DistCpOptions options) throws IOException {\n\n    SequenceFile.Writer fileListWriter \u003d null;\n\n    try {\n      fileListWriter \u003d getWriter(pathToListingFile);\n\n      for (Path path: options.getSourcePaths()) {\n        FileSystem sourceFS \u003d path.getFileSystem(getConf());\n        path \u003d makeQualified(path);\n\n        FileStatus rootStatus \u003d sourceFS.getFileStatus(path);\n        Path sourcePathRoot \u003d computeSourceRootPath(rootStatus, options);\n        boolean localFile \u003d (rootStatus.getClass() !\u003d FileStatus.class);\n\n        FileStatus[] sourceFiles \u003d sourceFS.listStatus(path);\n        if (sourceFiles !\u003d null \u0026\u0026 sourceFiles.length \u003e 0) {\n          for (FileStatus sourceStatus: sourceFiles) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Recording source-path: \" + sourceStatus.getPath() + \" for copy.\");\n            }\n            writeToFileListing(fileListWriter, sourceStatus, sourcePathRoot, localFile);\n\n            if (isDirectoryAndNotEmpty(sourceFS, sourceStatus)) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Traversing non-empty source dir: \" + sourceStatus.getPath());\n              }\n              traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot, localFile);\n            }\n          }\n        } else {\n          writeToFileListing(fileListWriter, rootStatus, sourcePathRoot, localFile);\n        }\n      }\n    } finally {\n      IOUtils.closeStream(fileListWriter);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java"
    }
  }
}