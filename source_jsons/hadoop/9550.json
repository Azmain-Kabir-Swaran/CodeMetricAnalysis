{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReportCommand.java",
  "functionName": "execute",
  "functionId": "execute___cmd-CommandLine",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ReportCommand.java",
  "functionStartLine": 69,
  "functionEndLine": 100,
  "numCommitsSeen": 12,
  "timeTaken": 1181,
  "changeHistory": [
    "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
    "30bb1970cc27c1345871a35bcf1220e520c1804b",
    "8a93f45a80932a1ef62a6c20551e8cab95888fee",
    "35c5943b8ba394191405555cdfc5e6127053ee97",
    "b502102bb1a1f416f43dd1227886c57ccad70fcc"
  ],
  "changeHistoryShort": {
    "88625f5cd90766136a9ebd76a8d84b45a37e6c99": "Ybodychange",
    "30bb1970cc27c1345871a35bcf1220e520c1804b": "Ybodychange",
    "8a93f45a80932a1ef62a6c20551e8cab95888fee": "Ybodychange",
    "35c5943b8ba394191405555cdfc5e6127053ee97": "Ybodychange",
    "b502102bb1a1f416f43dd1227886c57ccad70fcc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "88625f5cd90766136a9ebd76a8d84b45a37e6c99": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15531. Use commons-text instead of commons-lang in some classes to fix deprecation warnings. Contributed by Takanobu Asanuma.\n",
      "commitDate": "13/07/18 8:42 AM",
      "commitName": "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "18/06/18 10:17 AM",
      "commitNameOld": "fba9d7cd746cd7b659d2fd9d2bfa23266be9009b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.93,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public void execute(CommandLine cmd) throws Exception {\n-    StrBuilder result \u003d new StrBuilder();\n+    TextStringBuilder result \u003d new TextStringBuilder();\n     String outputLine \u003d \"Processing report command\";\n     recordOutput(result, outputLine);\n \n     Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n     verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n     readClusterInfo(cmd);\n \n     final String nodeFormat \u003d\n         \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String nodeFormatWithoutSequence \u003d\n         \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String volumeFormat \u003d\n         \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n         + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n \n     if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n       /*\n        * Reporting volume information for specific DataNode(s)\n        */\n       handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n \n     } else { // handle TOP\n       /*\n        * Reporting volume information for top X DataNode(s)\n        */\n       handleTopReport(cmd, result, nodeFormat);\n     }\n \n     getPrintStream().println(result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    TextStringBuilder result \u003d new TextStringBuilder();\n    String outputLine \u003d \"Processing report command\";\n    recordOutput(result, outputLine);\n\n    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n    verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n    readClusterInfo(cmd);\n\n    final String nodeFormat \u003d\n        \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String nodeFormatWithoutSequence \u003d\n        \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String volumeFormat \u003d\n        \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n        + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n\n    if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n      /*\n       * Reporting volume information for specific DataNode(s)\n       */\n      handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n\n    } else { // handle TOP\n      /*\n       * Reporting volume information for top X DataNode(s)\n       */\n      handleTopReport(cmd, result, nodeFormat);\n    }\n\n    getPrintStream().println(result.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ReportCommand.java",
      "extendedDetails": {}
    },
    "30bb1970cc27c1345871a35bcf1220e520c1804b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10558. DiskBalancer: Print the full path to plan file. Contributed by Xiaobing Zhou.\n",
      "commitDate": "14/10/16 5:07 PM",
      "commitName": "30bb1970cc27c1345871a35bcf1220e520c1804b",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "12/09/16 3:45 PM",
      "commitNameOld": "8a93f45a80932a1ef62a6c20551e8cab95888fee",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 32.06,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public void execute(CommandLine cmd) throws Exception {\n     StrBuilder result \u003d new StrBuilder();\n     String outputLine \u003d \"Processing report command\";\n     recordOutput(result, outputLine);\n \n     Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n     verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n     readClusterInfo(cmd);\n \n     final String nodeFormat \u003d\n         \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String nodeFormatWithoutSequence \u003d\n         \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String volumeFormat \u003d\n         \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n         + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n \n     if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n       /*\n        * Reporting volume information for specific DataNode(s)\n        */\n       handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n \n     } else { // handle TOP\n       /*\n        * Reporting volume information for top X DataNode(s)\n        */\n       handleTopReport(cmd, result, nodeFormat);\n     }\n \n-    out.println(result.toString());\n+    getPrintStream().println(result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    StrBuilder result \u003d new StrBuilder();\n    String outputLine \u003d \"Processing report command\";\n    recordOutput(result, outputLine);\n\n    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n    verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n    readClusterInfo(cmd);\n\n    final String nodeFormat \u003d\n        \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String nodeFormatWithoutSequence \u003d\n        \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String volumeFormat \u003d\n        \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n        + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n\n    if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n      /*\n       * Reporting volume information for specific DataNode(s)\n       */\n      handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n\n    } else { // handle TOP\n      /*\n       * Reporting volume information for top X DataNode(s)\n       */\n      handleTopReport(cmd, result, nodeFormat);\n    }\n\n    getPrintStream().println(result.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ReportCommand.java",
      "extendedDetails": {}
    },
    "8a93f45a80932a1ef62a6c20551e8cab95888fee": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10821. DiskBalancer: Report command support with multiple nodes. Contributed by Yiqun Lin.\n",
      "commitDate": "12/09/16 3:45 PM",
      "commitName": "8a93f45a80932a1ef62a6c20551e8cab95888fee",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "08/09/16 7:26 PM",
      "commitNameOld": "35c5943b8ba394191405555cdfc5e6127053ee97",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 3.85,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public void execute(CommandLine cmd) throws Exception {\n     StrBuilder result \u003d new StrBuilder();\n     String outputLine \u003d \"Processing report command\";\n     recordOutput(result, outputLine);\n \n     Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n     verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n     readClusterInfo(cmd);\n \n     final String nodeFormat \u003d\n         \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String nodeFormatWithoutSequence \u003d\n         \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String volumeFormat \u003d\n         \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n         + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n \n     if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n       /*\n-       * Reporting volume information for a specific DataNode\n+       * Reporting volume information for specific DataNode(s)\n        */\n       handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n \n     } else { // handle TOP\n       /*\n        * Reporting volume information for top X DataNode(s)\n        */\n       handleTopReport(cmd, result, nodeFormat);\n     }\n \n     out.println(result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    StrBuilder result \u003d new StrBuilder();\n    String outputLine \u003d \"Processing report command\";\n    recordOutput(result, outputLine);\n\n    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n    verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n    readClusterInfo(cmd);\n\n    final String nodeFormat \u003d\n        \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String nodeFormatWithoutSequence \u003d\n        \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String volumeFormat \u003d\n        \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n        + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n\n    if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n      /*\n       * Reporting volume information for specific DataNode(s)\n       */\n      handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n\n    } else { // handle TOP\n      /*\n       * Reporting volume information for top X DataNode(s)\n       */\n      handleTopReport(cmd, result, nodeFormat);\n    }\n\n    out.println(result.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ReportCommand.java",
      "extendedDetails": {}
    },
    "35c5943b8ba394191405555cdfc5e6127053ee97": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10553. DiskBalancer: Rename Tools/DiskBalancer class to Tools/DiskBalancerCLI. Contributed by Manoj Govindassamy.\n",
      "commitDate": "08/09/16 7:26 PM",
      "commitName": "35c5943b8ba394191405555cdfc5e6127053ee97",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "15/08/16 9:47 AM",
      "commitNameOld": "9f29f423e426e2d42e650cbed88e46c1c29a2a63",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 24.4,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public void execute(CommandLine cmd) throws Exception {\n     StrBuilder result \u003d new StrBuilder();\n     String outputLine \u003d \"Processing report command\";\n     recordOutput(result, outputLine);\n \n-    Preconditions.checkState(cmd.hasOption(DiskBalancer.REPORT));\n-    verifyCommandOptions(DiskBalancer.REPORT, cmd);\n+    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n+    verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n     readClusterInfo(cmd);\n \n     final String nodeFormat \u003d\n         \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String nodeFormatWithoutSequence \u003d\n         \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n     final String volumeFormat \u003d\n         \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n         + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n \n-    if (cmd.hasOption(DiskBalancer.NODE)) {\n+    if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n       /*\n        * Reporting volume information for a specific DataNode\n        */\n       handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n \n     } else { // handle TOP\n       /*\n        * Reporting volume information for top X DataNode(s)\n        */\n       handleTopReport(cmd, result, nodeFormat);\n     }\n \n     out.println(result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    StrBuilder result \u003d new StrBuilder();\n    String outputLine \u003d \"Processing report command\";\n    recordOutput(result, outputLine);\n\n    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.REPORT));\n    verifyCommandOptions(DiskBalancerCLI.REPORT, cmd);\n    readClusterInfo(cmd);\n\n    final String nodeFormat \u003d\n        \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String nodeFormatWithoutSequence \u003d\n        \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String volumeFormat \u003d\n        \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n        + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n\n    if (cmd.hasOption(DiskBalancerCLI.NODE)) {\n      /*\n       * Reporting volume information for a specific DataNode\n       */\n      handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n\n    } else { // handle TOP\n      /*\n       * Reporting volume information for top X DataNode(s)\n       */\n      handleTopReport(cmd, result, nodeFormat);\n    }\n\n    out.println(result.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ReportCommand.java",
      "extendedDetails": {}
    },
    "b502102bb1a1f416f43dd1227886c57ccad70fcc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9461. DiskBalancer: Add Report Command. Contributed by Xiaobing Zhou.\n",
      "commitDate": "23/06/16 6:21 PM",
      "commitName": "b502102bb1a1f416f43dd1227886c57ccad70fcc",
      "commitAuthor": "Anu Engineer",
      "diff": "@@ -0,0 +1,32 @@\n+  public void execute(CommandLine cmd) throws Exception {\n+    StrBuilder result \u003d new StrBuilder();\n+    String outputLine \u003d \"Processing report command\";\n+    recordOutput(result, outputLine);\n+\n+    Preconditions.checkState(cmd.hasOption(DiskBalancer.REPORT));\n+    verifyCommandOptions(DiskBalancer.REPORT, cmd);\n+    readClusterInfo(cmd);\n+\n+    final String nodeFormat \u003d\n+        \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n+    final String nodeFormatWithoutSequence \u003d\n+        \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n+    final String volumeFormat \u003d\n+        \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n+        + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n+\n+    if (cmd.hasOption(DiskBalancer.NODE)) {\n+      /*\n+       * Reporting volume information for a specific DataNode\n+       */\n+      handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n+\n+    } else { // handle TOP\n+      /*\n+       * Reporting volume information for top X DataNode(s)\n+       */\n+      handleTopReport(cmd, result, nodeFormat);\n+    }\n+\n+    out.println(result.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    StrBuilder result \u003d new StrBuilder();\n    String outputLine \u003d \"Processing report command\";\n    recordOutput(result, outputLine);\n\n    Preconditions.checkState(cmd.hasOption(DiskBalancer.REPORT));\n    verifyCommandOptions(DiskBalancer.REPORT, cmd);\n    readClusterInfo(cmd);\n\n    final String nodeFormat \u003d\n        \"%d/%d %s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String nodeFormatWithoutSequence \u003d\n        \"%s[%s:%d] - \u003c%s\u003e: %d volumes with node data density %.2f.\";\n    final String volumeFormat \u003d\n        \"[%s: volume-%s] - %.2f used: %d/%d, %.2f free: %d/%d, \"\n        + \"isFailed: %s, isReadOnly: %s, isSkip: %s, isTransient: %s.\";\n\n    if (cmd.hasOption(DiskBalancer.NODE)) {\n      /*\n       * Reporting volume information for a specific DataNode\n       */\n      handleNodeReport(cmd, result, nodeFormatWithoutSequence, volumeFormat);\n\n    } else { // handle TOP\n      /*\n       * Reporting volume information for top X DataNode(s)\n       */\n      handleTopReport(cmd, result, nodeFormat);\n    }\n\n    out.println(result.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ReportCommand.java"
    }
  }
}