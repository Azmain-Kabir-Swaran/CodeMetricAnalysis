{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "actionCreate",
  "functionId": "actionCreate___service-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 551,
  "functionEndLine": 567,
  "numCommitsSeen": 56,
  "timeTaken": 4547,
  "changeHistory": [
    "27d60a16342fd39973d43b61008f54a8815a6237",
    "17f387e3c2123010a4b2ea5f3db631d15bacab35",
    "d30d57828fddaa8667de49af879cde999907c7f6",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "27d60a16342fd39973d43b61008f54a8815a6237": "Ybodychange",
    "17f387e3c2123010a4b2ea5f3db631d15bacab35": "Ybodychange",
    "d30d57828fddaa8667de49af879cde999907c7f6": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "27d60a16342fd39973d43b61008f54a8815a6237": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8018.  Added support for initiating yarn service upgrade.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/03/18 3:46 PM",
      "commitName": "27d60a16342fd39973d43b61008f54a8815a6237",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/02/18 5:48 PM",
      "commitNameOld": "17f387e3c2123010a4b2ea5f3db631d15bacab35",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 25.87,
      "commitsBetweenForRepo": 316,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public ApplicationId actionCreate(Service service)\n       throws IOException, YarnException {\n     String serviceName \u003d service.getName();\n     ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n     verifyNoLiveAppInRM(serviceName, \"create\");\n-    Path appDir \u003d checkAppNotExistOnHdfs(service);\n+    Path appDir \u003d checkAppNotExistOnHdfs(service, false);\n \n     // Write the definition first and then submit - AM will read the definition\n-    createDirAndPersistApp(appDir, service);\n+    ServiceApiUtil.createDirAndPersistApp(fs, appDir, service);\n     ApplicationId appId \u003d submitApp(service);\n     cachedAppInfo.put(serviceName, new AppInfo(appId, service\n         .getKerberosPrincipal().getPrincipalName()));\n     service.setId(appId.toString());\n     // update app definition with appId\n-    persistAppDef(appDir, service);\n+    ServiceApiUtil.writeAppDefinition(fs, appDir, service);\n     return appId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationId actionCreate(Service service)\n      throws IOException, YarnException {\n    String serviceName \u003d service.getName();\n    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n    verifyNoLiveAppInRM(serviceName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(service, false);\n\n    // Write the definition first and then submit - AM will read the definition\n    ServiceApiUtil.createDirAndPersistApp(fs, appDir, service);\n    ApplicationId appId \u003d submitApp(service);\n    cachedAppInfo.put(serviceName, new AppInfo(appId, service\n        .getKerberosPrincipal().getPrincipalName()));\n    service.setId(appId.toString());\n    // update app definition with appId\n    ServiceApiUtil.writeAppDefinition(fs, appDir, service);\n    return appId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "17f387e3c2123010a4b2ea5f3db631d15bacab35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7985.  Removed duplicate service name validation in Yarn Service.\n            Contributed by Chandni Singh\n",
      "commitDate": "28/02/18 5:48 PM",
      "commitName": "17f387e3c2123010a4b2ea5f3db631d15bacab35",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/02/18 3:01 PM",
      "commitNameOld": "315f48e791790ce56d4f9ed220180aaa00bbc5fa",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public ApplicationId actionCreate(Service service)\n       throws IOException, YarnException {\n     String serviceName \u003d service.getName();\n-    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n     ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n     verifyNoLiveAppInRM(serviceName, \"create\");\n     Path appDir \u003d checkAppNotExistOnHdfs(service);\n \n     // Write the definition first and then submit - AM will read the definition\n     createDirAndPersistApp(appDir, service);\n     ApplicationId appId \u003d submitApp(service);\n     cachedAppInfo.put(serviceName, new AppInfo(appId, service\n         .getKerberosPrincipal().getPrincipalName()));\n     service.setId(appId.toString());\n     // update app definition with appId\n     persistAppDef(appDir, service);\n     return appId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationId actionCreate(Service service)\n      throws IOException, YarnException {\n    String serviceName \u003d service.getName();\n    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n    verifyNoLiveAppInRM(serviceName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(service);\n\n    // Write the definition first and then submit - AM will read the definition\n    createDirAndPersistApp(appDir, service);\n    ApplicationId appId \u003d submitApp(service);\n    cachedAppInfo.put(serviceName, new AppInfo(appId, service\n        .getKerberosPrincipal().getPrincipalName()));\n    service.setId(appId.toString());\n    // update app definition with appId\n    persistAppDef(appDir, service);\n    return appId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/11/17 10:53 AM",
      "commitNameOld": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 18.05,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public ApplicationId actionCreate(Service service)\n       throws IOException, YarnException {\n     String serviceName \u003d service.getName();\n     ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n     ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n     verifyNoLiveAppInRM(serviceName, \"create\");\n     Path appDir \u003d checkAppNotExistOnHdfs(service);\n \n     // Write the definition first and then submit - AM will read the definition\n     createDirAndPersistApp(appDir, service);\n     ApplicationId appId \u003d submitApp(service);\n-    cachedAppIds.put(serviceName, appId);\n+    cachedAppInfo.put(serviceName, new AppInfo(appId, service\n+        .getKerberosPrincipal().getPrincipalName()));\n     service.setId(appId.toString());\n     // update app definition with appId\n     persistAppDef(appDir, service);\n     return appId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationId actionCreate(Service service)\n      throws IOException, YarnException {\n    String serviceName \u003d service.getName();\n    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n    verifyNoLiveAppInRM(serviceName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(service);\n\n    // Write the definition first and then submit - AM will read the definition\n    createDirAndPersistApp(appDir, service);\n    ApplicationId appId \u003d submitApp(service);\n    cachedAppInfo.put(serviceName, new AppInfo(appId, service\n        .getKerberosPrincipal().getPrincipalName()));\n    service.setId(appId.toString());\n    // update app definition with appId\n    persistAppDef(appDir, service);\n    return appId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public ApplicationId actionCreate(Application application)\n+  public ApplicationId actionCreate(Service service)\n       throws IOException, YarnException {\n-    String appName \u003d application.getName();\n-    validateClusterName(appName);\n-    ServiceApiUtil.validateAndResolveApplication(application, fs, getConfig());\n-    verifyNoLiveAppInRM(appName, \"create\");\n-    Path appDir \u003d checkAppNotExistOnHdfs(application);\n+    String serviceName \u003d service.getName();\n+    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n+    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n+    verifyNoLiveAppInRM(serviceName, \"create\");\n+    Path appDir \u003d checkAppNotExistOnHdfs(service);\n \n     // Write the definition first and then submit - AM will read the definition\n-    createDirAndPersistApp(appDir, application);\n-    ApplicationId appId \u003d submitApp(application);\n-    cachedAppIds.put(appName, appId);\n-    application.setId(appId.toString());\n+    createDirAndPersistApp(appDir, service);\n+    ApplicationId appId \u003d submitApp(service);\n+    cachedAppIds.put(serviceName, appId);\n+    service.setId(appId.toString());\n     // update app definition with appId\n-    persistAppDef(appDir, application);\n+    persistAppDef(appDir, service);\n     return appId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationId actionCreate(Service service)\n      throws IOException, YarnException {\n    String serviceName \u003d service.getName();\n    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n    verifyNoLiveAppInRM(serviceName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(service);\n\n    // Write the definition first and then submit - AM will read the definition\n    createDirAndPersistApp(appDir, service);\n    ApplicationId appId \u003d submitApp(service);\n    cachedAppIds.put(serviceName, appId);\n    service.setId(appId.toString());\n    // update app definition with appId\n    persistAppDef(appDir, service);\n    return appId;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public ApplicationId actionCreate(Application application)\n+  public ApplicationId actionCreate(Service service)\n       throws IOException, YarnException {\n-    String appName \u003d application.getName();\n-    validateClusterName(appName);\n-    ServiceApiUtil.validateAndResolveApplication(application, fs, getConfig());\n-    verifyNoLiveAppInRM(appName, \"create\");\n-    Path appDir \u003d checkAppNotExistOnHdfs(application);\n+    String serviceName \u003d service.getName();\n+    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n+    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n+    verifyNoLiveAppInRM(serviceName, \"create\");\n+    Path appDir \u003d checkAppNotExistOnHdfs(service);\n \n     // Write the definition first and then submit - AM will read the definition\n-    createDirAndPersistApp(appDir, application);\n-    ApplicationId appId \u003d submitApp(application);\n-    cachedAppIds.put(appName, appId);\n-    application.setId(appId.toString());\n+    createDirAndPersistApp(appDir, service);\n+    ApplicationId appId \u003d submitApp(service);\n+    cachedAppIds.put(serviceName, appId);\n+    service.setId(appId.toString());\n     // update app definition with appId\n-    persistAppDef(appDir, application);\n+    persistAppDef(appDir, service);\n     return appId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationId actionCreate(Service service)\n      throws IOException, YarnException {\n    String serviceName \u003d service.getName();\n    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n    verifyNoLiveAppInRM(serviceName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(service);\n\n    // Write the definition first and then submit - AM will read the definition\n    createDirAndPersistApp(appDir, service);\n    ApplicationId appId \u003d submitApp(service);\n    cachedAppIds.put(serviceName, appId);\n    service.setId(appId.toString());\n    // update app definition with appId\n    persistAppDef(appDir, service);\n    return appId;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public ApplicationId actionCreate(Application application)\n+  public ApplicationId actionCreate(Service service)\n       throws IOException, YarnException {\n-    String appName \u003d application.getName();\n-    validateClusterName(appName);\n-    ServiceApiUtil.validateAndResolveApplication(application, fs, getConfig());\n-    verifyNoLiveAppInRM(appName, \"create\");\n-    Path appDir \u003d checkAppNotExistOnHdfs(application);\n+    String serviceName \u003d service.getName();\n+    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n+    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n+    verifyNoLiveAppInRM(serviceName, \"create\");\n+    Path appDir \u003d checkAppNotExistOnHdfs(service);\n \n     // Write the definition first and then submit - AM will read the definition\n-    createDirAndPersistApp(appDir, application);\n-    ApplicationId appId \u003d submitApp(application);\n-    cachedAppIds.put(appName, appId);\n-    application.setId(appId.toString());\n+    createDirAndPersistApp(appDir, service);\n+    ApplicationId appId \u003d submitApp(service);\n+    cachedAppIds.put(serviceName, appId);\n+    service.setId(appId.toString());\n     // update app definition with appId\n-    persistAppDef(appDir, application);\n+    persistAppDef(appDir, service);\n     return appId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationId actionCreate(Service service)\n      throws IOException, YarnException {\n    String serviceName \u003d service.getName();\n    ServiceApiUtil.validateNameFormat(serviceName, getConfig());\n    ServiceApiUtil.validateAndResolveService(service, fs, getConfig());\n    verifyNoLiveAppInRM(serviceName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(service);\n\n    // Write the definition first and then submit - AM will read the definition\n    createDirAndPersistApp(appDir, service);\n    ApplicationId appId \u003d submitApp(service);\n    cachedAppIds.put(serviceName, appId);\n    service.setId(appId.toString());\n    // update app definition with appId\n    persistAppDef(appDir, service);\n    return appId;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[application-Application]",
            "newValue": "[service-Service]"
          }
        }
      ]
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,17 @@\n+  public ApplicationId actionCreate(Application application)\n+      throws IOException, YarnException {\n+    String appName \u003d application.getName();\n+    validateClusterName(appName);\n+    ServiceApiUtil.validateAndResolveApplication(application, fs, getConfig());\n+    verifyNoLiveAppInRM(appName, \"create\");\n+    Path appDir \u003d checkAppNotExistOnHdfs(application);\n+\n+    // Write the definition first and then submit - AM will read the definition\n+    createDirAndPersistApp(appDir, application);\n+    ApplicationId appId \u003d submitApp(application);\n+    cachedAppIds.put(appName, appId);\n+    application.setId(appId.toString());\n+    // update app definition with appId\n+    persistAppDef(appDir, application);\n+    return appId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationId actionCreate(Application application)\n      throws IOException, YarnException {\n    String appName \u003d application.getName();\n    validateClusterName(appName);\n    ServiceApiUtil.validateAndResolveApplication(application, fs, getConfig());\n    verifyNoLiveAppInRM(appName, \"create\");\n    Path appDir \u003d checkAppNotExistOnHdfs(application);\n\n    // Write the definition first and then submit - AM will read the definition\n    createDirAndPersistApp(appDir, application);\n    ApplicationId appId \u003d submitApp(application);\n    cachedAppIds.put(appName, appId);\n    application.setId(appId.toString());\n    // update app definition with appId\n    persistAppDef(appDir, application);\n    return appId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}