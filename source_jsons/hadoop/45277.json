{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "updateBlacklist",
  "functionId": "updateBlacklist___blacklistAdditions-List__String____blacklistRemovals-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 990,
  "functionEndLine": 1016,
  "numCommitsSeen": 52,
  "timeTaken": 1596,
  "changeHistory": [
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574",
    "bafd302208fbbbf1f2dccfc969a71d862cc8ce67"
  ],
  "changeHistoryShort": {
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574": "Ybodychange",
    "bafd302208fbbbf1f2dccfc969a71d862cc8ce67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1366. Changed AMRMClient to re-register with RM and send outstanding requests back to RM on work-preserving RM restart. Contributed by Rohith\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609254 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/14 11:25 AM",
      "commitName": "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/03/14 3:22 PM",
      "commitNameOld": "92317e3459b502f33a3575c247f05d64e5d39a00",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 113.84,
      "commitsBetweenForRepo": 699,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   public synchronized void updateBlacklist(List\u003cString\u003e blacklistAdditions,\n       List\u003cString\u003e blacklistRemovals) {\n     \n     if (blacklistAdditions !\u003d null) {\n       this.blacklistAdditions.addAll(blacklistAdditions);\n+      this.blacklistedNodes.addAll(blacklistAdditions);\n       // if some resources are also in blacklistRemovals updated before, we \n       // should remove them here.\n       this.blacklistRemovals.removeAll(blacklistAdditions);\n     }\n     \n     if (blacklistRemovals !\u003d null) {\n       this.blacklistRemovals.addAll(blacklistRemovals);\n+      this.blacklistedNodes.removeAll(blacklistRemovals);\n       // if some resources are in blacklistAdditions before, we should remove\n       // them here.\n       this.blacklistAdditions.removeAll(blacklistRemovals);\n     }\n     \n     if (blacklistAdditions !\u003d null \u0026\u0026 blacklistRemovals !\u003d null\n         \u0026\u0026 blacklistAdditions.removeAll(blacklistRemovals)) {\n       // we allow resources to appear in addition list and removal list in the\n       // same invocation of updateBlacklist(), but should get a warn here.\n       LOG.warn(\"The same resources appear in both blacklistAdditions and \" +\n           \"blacklistRemovals in updateBlacklist.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateBlacklist(List\u003cString\u003e blacklistAdditions,\n      List\u003cString\u003e blacklistRemovals) {\n    \n    if (blacklistAdditions !\u003d null) {\n      this.blacklistAdditions.addAll(blacklistAdditions);\n      this.blacklistedNodes.addAll(blacklistAdditions);\n      // if some resources are also in blacklistRemovals updated before, we \n      // should remove them here.\n      this.blacklistRemovals.removeAll(blacklistAdditions);\n    }\n    \n    if (blacklistRemovals !\u003d null) {\n      this.blacklistRemovals.addAll(blacklistRemovals);\n      this.blacklistedNodes.removeAll(blacklistRemovals);\n      // if some resources are in blacklistAdditions before, we should remove\n      // them here.\n      this.blacklistAdditions.removeAll(blacklistRemovals);\n    }\n    \n    if (blacklistAdditions !\u003d null \u0026\u0026 blacklistRemovals !\u003d null\n        \u0026\u0026 blacklistAdditions.removeAll(blacklistRemovals)) {\n      // we allow resources to appear in addition list and removal list in the\n      // same invocation of updateBlacklist(), but should get a warn here.\n      LOG.warn(\"The same resources appear in both blacklistAdditions and \" +\n          \"blacklistRemovals in updateBlacklist.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "bafd302208fbbbf1f2dccfc969a71d862cc8ce67": {
      "type": "Yintroduced",
      "commitMessage": "YARN-771. AMRMClient support for resource blacklisting (Junping Du via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/08/13 3:58 PM",
      "commitName": "bafd302208fbbbf1f2dccfc969a71d862cc8ce67",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,25 @@\n+  public synchronized void updateBlacklist(List\u003cString\u003e blacklistAdditions,\n+      List\u003cString\u003e blacklistRemovals) {\n+    \n+    if (blacklistAdditions !\u003d null) {\n+      this.blacklistAdditions.addAll(blacklistAdditions);\n+      // if some resources are also in blacklistRemovals updated before, we \n+      // should remove them here.\n+      this.blacklistRemovals.removeAll(blacklistAdditions);\n+    }\n+    \n+    if (blacklistRemovals !\u003d null) {\n+      this.blacklistRemovals.addAll(blacklistRemovals);\n+      // if some resources are in blacklistAdditions before, we should remove\n+      // them here.\n+      this.blacklistAdditions.removeAll(blacklistRemovals);\n+    }\n+    \n+    if (blacklistAdditions !\u003d null \u0026\u0026 blacklistRemovals !\u003d null\n+        \u0026\u0026 blacklistAdditions.removeAll(blacklistRemovals)) {\n+      // we allow resources to appear in addition list and removal list in the\n+      // same invocation of updateBlacklist(), but should get a warn here.\n+      LOG.warn(\"The same resources appear in both blacklistAdditions and \" +\n+          \"blacklistRemovals in updateBlacklist.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateBlacklist(List\u003cString\u003e blacklistAdditions,\n      List\u003cString\u003e blacklistRemovals) {\n    \n    if (blacklistAdditions !\u003d null) {\n      this.blacklistAdditions.addAll(blacklistAdditions);\n      // if some resources are also in blacklistRemovals updated before, we \n      // should remove them here.\n      this.blacklistRemovals.removeAll(blacklistAdditions);\n    }\n    \n    if (blacklistRemovals !\u003d null) {\n      this.blacklistRemovals.addAll(blacklistRemovals);\n      // if some resources are in blacklistAdditions before, we should remove\n      // them here.\n      this.blacklistAdditions.removeAll(blacklistRemovals);\n    }\n    \n    if (blacklistAdditions !\u003d null \u0026\u0026 blacklistRemovals !\u003d null\n        \u0026\u0026 blacklistAdditions.removeAll(blacklistRemovals)) {\n      // we allow resources to appear in addition list and removal list in the\n      // same invocation of updateBlacklist(), but should get a warn here.\n      LOG.warn(\"The same resources appear in both blacklistAdditions and \" +\n          \"blacklistRemovals in updateBlacklist.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
    }
  }
}