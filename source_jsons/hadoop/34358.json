{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalResourcesTrackerImpl.java",
  "functionName": "recoverResource",
  "functionId": "recoverResource___req-LocalResourceRequest__event-ResourceRecoveredEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java",
  "functionStartLine": 217,
  "functionEndLine": 235,
  "numCommitsSeen": 16,
  "timeTaken": 1776,
  "changeHistory": [
    "66598697a6e777615334ebde5ba7738135da83ae"
  ],
  "changeHistoryShort": {
    "66598697a6e777615334ebde5ba7738135da83ae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,19 @@\n+  private LocalizedResource recoverResource(LocalResourceRequest req,\n+      ResourceRecoveredEvent event) {\n+    // unique number for a resource is the directory of the resource\n+    Path localDir \u003d event.getLocalPath().getParent();\n+    long rsrcId \u003d Long.parseLong(localDir.getName());\n+\n+    // update ID generator to avoid conflicts with existing resources\n+    while (true) {\n+      long currentRsrcId \u003d uniqueNumberGenerator.get();\n+      long nextRsrcId \u003d Math.max(currentRsrcId, rsrcId);\n+      if (uniqueNumberGenerator.compareAndSet(currentRsrcId, nextRsrcId)) {\n+        break;\n+      }\n+    }\n+\n+    incrementFileCountForLocalCacheDirectory(localDir.getParent());\n+\n+    return new LocalizedResource(req, dispatcher);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private LocalizedResource recoverResource(LocalResourceRequest req,\n      ResourceRecoveredEvent event) {\n    // unique number for a resource is the directory of the resource\n    Path localDir \u003d event.getLocalPath().getParent();\n    long rsrcId \u003d Long.parseLong(localDir.getName());\n\n    // update ID generator to avoid conflicts with existing resources\n    while (true) {\n      long currentRsrcId \u003d uniqueNumberGenerator.get();\n      long nextRsrcId \u003d Math.max(currentRsrcId, rsrcId);\n      if (uniqueNumberGenerator.compareAndSet(currentRsrcId, nextRsrcId)) {\n        break;\n      }\n    }\n\n    incrementFileCountForLocalCacheDirectory(localDir.getParent());\n\n    return new LocalizedResource(req, dispatcher);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java"
    }
  }
}