{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationIndexedFileController.java",
  "functionName": "getCurrentRemoteLogFile",
  "functionId": "getCurrentRemoteLogFile___fc-FileContext(modifiers-final)__parent-Path(modifiers-final)__nodeId-String(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java",
  "functionStartLine": 1219,
  "functionEndLine": 1237,
  "numCommitsSeen": 18,
  "timeTaken": 1158,
  "changeHistory": [
    "280080fad01304c85a9ede4d4f7b707eb36c0155"
  ],
  "changeHistoryShort": {
    "280080fad01304c85a9ede4d4f7b707eb36c0155": "Yintroduced"
  },
  "changeHistoryDetails": {
    "280080fad01304c85a9ede4d4f7b707eb36c0155": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7259. Add size-based rolling policy to LogAggregationIndexedFileController. (xgong via wangda)\n\nChange-Id: Ifaf82c0aee6b73b9b6ebf103aa72e131e3942f31\n",
      "commitDate": "02/10/17 3:30 PM",
      "commitName": "280080fad01304c85a9ede4d4f7b707eb36c0155",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,19 @@\n+  private Path getCurrentRemoteLogFile(final FileContext fc,\n+      final Path parent, final String nodeId) throws IOException {\n+    RemoteIterator\u003cFileStatus\u003e files \u003d fc.listStatus(parent);\n+    long maxTime \u003d 0L;\n+    Path returnPath \u003d null;\n+    while(files.hasNext()) {\n+      FileStatus candidate \u003d files.next();\n+      String fileName \u003d candidate.getPath().getName();\n+      if (fileName.contains(LogAggregationUtils.getNodeString(nodeId))\n+          \u0026\u0026 !fileName.endsWith(LogAggregationUtils.TMP_FILE_SUFFIX) \u0026\u0026\n+          !fileName.endsWith(CHECK_SUM_FILE_SUFFIX)) {\n+        if (candidate.getModificationTime() \u003e maxTime) {\n+          maxTime \u003d candidate.getModificationTime();\n+          returnPath \u003d candidate.getPath();\n+        }\n+      }\n+    }\n+    return returnPath;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Path getCurrentRemoteLogFile(final FileContext fc,\n      final Path parent, final String nodeId) throws IOException {\n    RemoteIterator\u003cFileStatus\u003e files \u003d fc.listStatus(parent);\n    long maxTime \u003d 0L;\n    Path returnPath \u003d null;\n    while(files.hasNext()) {\n      FileStatus candidate \u003d files.next();\n      String fileName \u003d candidate.getPath().getName();\n      if (fileName.contains(LogAggregationUtils.getNodeString(nodeId))\n          \u0026\u0026 !fileName.endsWith(LogAggregationUtils.TMP_FILE_SUFFIX) \u0026\u0026\n          !fileName.endsWith(CHECK_SUM_FILE_SUFFIX)) {\n        if (candidate.getModificationTime() \u003e maxTime) {\n          maxTime \u003d candidate.getModificationTime();\n          returnPath \u003d candidate.getPath();\n        }\n      }\n    }\n    return returnPath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java"
    }
  }
}