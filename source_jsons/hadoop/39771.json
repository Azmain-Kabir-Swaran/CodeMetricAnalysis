{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UsersManager.java",
  "functionName": "updateUsageRatio",
  "functionId": "updateUsageRatio___partition-String__clusterResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
  "functionStartLine": 822,
  "functionEndLine": 839,
  "numCommitsSeen": 147,
  "timeTaken": 5347,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "444b2ea7afebf9f6c3d356154b71abfd0ea95b23"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "444b2ea7afebf9f6c3d356154b71abfd0ea95b23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void updateUsageRatio(String partition, Resource clusterResource) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n           clusterResource);\n       float consumed \u003d 0;\n       User user;\n       for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n         user \u003d entry.getValue();\n         consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n             resourceByLabel, partition);\n       }\n \n       qUsageRatios.setUsageRatio(partition, consumed);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateUsageRatio(String partition, Resource clusterResource) {\n    writeLock.lock();\n    try {\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n          clusterResource);\n      float consumed \u003d 0;\n      User user;\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        user \u003d entry.getValue();\n        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n            resourceByLabel, partition);\n      }\n\n      qUsageRatios.setUsageRatio(partition, consumed);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-    public float updateUsageRatio(\n-        ResourceCalculator resourceCalculator,\n-        Resource resource, String nodePartition) {\n-      try {\n-        writeLock.lock();\n-        float delta;\n-        float newRatio \u003d Resources.ratio(resourceCalculator,\n-            getUsed(nodePartition), resource);\n-        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n-        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n-        return delta;\n-      } finally {\n-        writeLock.unlock();\n+  public void updateUsageRatio(String partition, Resource clusterResource) {\n+    try {\n+      writeLock.lock();\n+      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n+          clusterResource);\n+      float consumed \u003d 0;\n+      User user;\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n+        user \u003d entry.getValue();\n+        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n+            resourceByLabel, partition);\n       }\n-    }\n\\ No newline at end of file\n+\n+      qUsageRatios.setUsageRatio(partition, consumed);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateUsageRatio(String partition, Resource clusterResource) {\n    try {\n      writeLock.lock();\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n          clusterResource);\n      float consumed \u003d 0;\n      User user;\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        user \u003d entry.getValue();\n        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n            resourceByLabel, partition);\n      }\n\n      qUsageRatios.setUsageRatio(partition, consumed);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
            "oldMethodName": "updateUsageRatio",
            "newMethodName": "updateUsageRatio"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-    public float updateUsageRatio(\n-        ResourceCalculator resourceCalculator,\n-        Resource resource, String nodePartition) {\n-      try {\n-        writeLock.lock();\n-        float delta;\n-        float newRatio \u003d Resources.ratio(resourceCalculator,\n-            getUsed(nodePartition), resource);\n-        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n-        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n-        return delta;\n-      } finally {\n-        writeLock.unlock();\n+  public void updateUsageRatio(String partition, Resource clusterResource) {\n+    try {\n+      writeLock.lock();\n+      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n+          clusterResource);\n+      float consumed \u003d 0;\n+      User user;\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n+        user \u003d entry.getValue();\n+        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n+            resourceByLabel, partition);\n       }\n-    }\n\\ No newline at end of file\n+\n+      qUsageRatios.setUsageRatio(partition, consumed);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateUsageRatio(String partition, Resource clusterResource) {\n    try {\n      writeLock.lock();\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n          clusterResource);\n      float consumed \u003d 0;\n      User user;\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        user \u003d entry.getValue();\n        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n            resourceByLabel, partition);\n      }\n\n      qUsageRatios.setUsageRatio(partition, consumed);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {
            "oldValue": "float",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-    public float updateUsageRatio(\n-        ResourceCalculator resourceCalculator,\n-        Resource resource, String nodePartition) {\n-      try {\n-        writeLock.lock();\n-        float delta;\n-        float newRatio \u003d Resources.ratio(resourceCalculator,\n-            getUsed(nodePartition), resource);\n-        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n-        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n-        return delta;\n-      } finally {\n-        writeLock.unlock();\n+  public void updateUsageRatio(String partition, Resource clusterResource) {\n+    try {\n+      writeLock.lock();\n+      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n+          clusterResource);\n+      float consumed \u003d 0;\n+      User user;\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n+        user \u003d entry.getValue();\n+        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n+            resourceByLabel, partition);\n       }\n-    }\n\\ No newline at end of file\n+\n+      qUsageRatios.setUsageRatio(partition, consumed);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateUsageRatio(String partition, Resource clusterResource) {\n    try {\n      writeLock.lock();\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n          clusterResource);\n      float consumed \u003d 0;\n      User user;\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        user \u003d entry.getValue();\n        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n            resourceByLabel, partition);\n      }\n\n      qUsageRatios.setUsageRatio(partition, consumed);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-    public float updateUsageRatio(\n-        ResourceCalculator resourceCalculator,\n-        Resource resource, String nodePartition) {\n-      try {\n-        writeLock.lock();\n-        float delta;\n-        float newRatio \u003d Resources.ratio(resourceCalculator,\n-            getUsed(nodePartition), resource);\n-        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n-        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n-        return delta;\n-      } finally {\n-        writeLock.unlock();\n+  public void updateUsageRatio(String partition, Resource clusterResource) {\n+    try {\n+      writeLock.lock();\n+      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n+          clusterResource);\n+      float consumed \u003d 0;\n+      User user;\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n+        user \u003d entry.getValue();\n+        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n+            resourceByLabel, partition);\n       }\n-    }\n\\ No newline at end of file\n+\n+      qUsageRatios.setUsageRatio(partition, consumed);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateUsageRatio(String partition, Resource clusterResource) {\n    try {\n      writeLock.lock();\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(partition,\n          clusterResource);\n      float consumed \u003d 0;\n      User user;\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        user \u003d entry.getValue();\n        consumed +\u003d user.setAndUpdateUsageRatio(resourceCalculator,\n            resourceByLabel, partition);\n      }\n\n      qUsageRatios.setUsageRatio(partition, consumed);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {
            "oldValue": "[resourceCalculator-ResourceCalculator, resource-Resource, nodePartition-String]",
            "newValue": "[partition-String, clusterResource-Resource]"
          }
        }
      ]
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-    public synchronized float updateUsageRatio(\n+    public float updateUsageRatio(\n         ResourceCalculator resourceCalculator,\n         Resource resource, String nodePartition) {\n-      float delta;\n-      float newRatio \u003d\n-          Resources.ratio(resourceCalculator, getUsed(nodePartition), resource);\n-      delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n-      userUsageRatios.setUsageRatio(nodePartition, newRatio);\n-      return delta;\n+      try {\n+        writeLock.lock();\n+        float delta;\n+        float newRatio \u003d Resources.ratio(resourceCalculator,\n+            getUsed(nodePartition), resource);\n+        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n+        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n+        return delta;\n+      } finally {\n+        writeLock.unlock();\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public float updateUsageRatio(\n        ResourceCalculator resourceCalculator,\n        Resource resource, String nodePartition) {\n      try {\n        writeLock.lock();\n        float delta;\n        float newRatio \u003d Resources.ratio(resourceCalculator,\n            getUsed(nodePartition), resource);\n        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n        return delta;\n      } finally {\n        writeLock.unlock();\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-    public synchronized float updateUsageRatio(\n+    public float updateUsageRatio(\n         ResourceCalculator resourceCalculator,\n         Resource resource, String nodePartition) {\n-      float delta;\n-      float newRatio \u003d\n-          Resources.ratio(resourceCalculator, getUsed(nodePartition), resource);\n-      delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n-      userUsageRatios.setUsageRatio(nodePartition, newRatio);\n-      return delta;\n+      try {\n+        writeLock.lock();\n+        float delta;\n+        float newRatio \u003d Resources.ratio(resourceCalculator,\n+            getUsed(nodePartition), resource);\n+        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n+        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n+        return delta;\n+      } finally {\n+        writeLock.unlock();\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public float updateUsageRatio(\n        ResourceCalculator resourceCalculator,\n        Resource resource, String nodePartition) {\n      try {\n        writeLock.lock();\n        float delta;\n        float newRatio \u003d Resources.ratio(resourceCalculator,\n            getUsed(nodePartition), resource);\n        delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n        userUsageRatios.setUsageRatio(nodePartition, newRatio);\n        return delta;\n      } finally {\n        writeLock.unlock();\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "444b2ea7afebf9f6c3d356154b71abfd0ea95b23": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3388. Allocation in LeafQueue could get stuck because DRF calculator isn\u0027t well supported when computing user-limit. (Nathan Roberts via wangda)\n",
      "commitDate": "19/08/16 4:28 PM",
      "commitName": "444b2ea7afebf9f6c3d356154b71abfd0ea95b23",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,10 @@\n+    public synchronized float updateUsageRatio(\n+        ResourceCalculator resourceCalculator,\n+        Resource resource, String nodePartition) {\n+      float delta;\n+      float newRatio \u003d\n+          Resources.ratio(resourceCalculator, getUsed(nodePartition), resource);\n+      delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n+      userUsageRatios.setUsageRatio(nodePartition, newRatio);\n+      return delta;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized float updateUsageRatio(\n        ResourceCalculator resourceCalculator,\n        Resource resource, String nodePartition) {\n      float delta;\n      float newRatio \u003d\n          Resources.ratio(resourceCalculator, getUsed(nodePartition), resource);\n      delta \u003d newRatio - userUsageRatios.getUsageRatio(nodePartition);\n      userUsageRatios.setUsageRatio(nodePartition, newRatio);\n      return delta;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}