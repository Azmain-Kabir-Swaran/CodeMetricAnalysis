{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TempQueuePerPartition.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
  "functionStartLine": 257,
  "functionEndLine": 270,
  "numCommitsSeen": 41,
  "timeTaken": 3759,
  "changeHistory": [
    "034b312d9f19024d2eabd377210d17d4080ef70e",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
    "60e4116bf1d00afed91010e57357fe54057e4e39",
    "4b130821995a3cfe20c71e38e0f63294085c0491",
    "45b42676f9333ed4fa05355ccb4e1f91a9556525",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "034b312d9f19024d2eabd377210d17d4080ef70e": "Ybodychange",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Ybodychange",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": "Ybodychange",
    "60e4116bf1d00afed91010e57357fe54057e4e39": "Ymultichange(Ymovefromfile,Ybodychange)",
    "4b130821995a3cfe20c71e38e0f63294085c0491": "Ybodychange",
    "45b42676f9333ed4fa05355ccb4e1f91a9556525": "Ybodychange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "034b312d9f19024d2eabd377210d17d4080ef70e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7411. Inter-Queue preemption\u0027s computeFixpointAllocation need to handle absolute resources while computing normalizedGuarantee. (Sunil G via wangda)\n\nChange-Id: I41b1d7558c20fc4eb2050d40134175a2ef6330cb\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "034b312d9f19024d2eabd377210d17d4080ef70e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/12/17 6:56 PM",
      "commitNameOld": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\" NAME: \" + queueName).append(\" CUR: \").append(current)\n         .append(\" PEN: \").append(pending).append(\" RESERVED: \").append(reserved)\n         .append(\" GAR: \").append(getGuaranteed()).append(\" NORM: \")\n-        .append(normalizedGuarantee).append(\" IDEAL_ASSIGNED: \")\n-        .append(idealAssigned).append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n+        .append(Arrays.toString(normalizedGuarantee))\n+        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n+        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n         .append(\" ACTUAL_PREEMPT: \").append(getActuallyToBePreempted())\n         .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n         .append(\" PREEMPTABLE: \").append(preemptableExtra).append(\"\\n\");\n \n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\" NAME: \" + queueName).append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending).append(\" RESERVED: \").append(reserved)\n        .append(\" GAR: \").append(getGuaranteed()).append(\" NORM: \")\n        .append(Arrays.toString(normalizedGuarantee))\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(getActuallyToBePreempted())\n        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n        .append(\" PREEMPTABLE: \").append(preemptableExtra).append(\"\\n\");\n\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 155.27,
      "commitsBetweenForRepo": 1196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,13 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n-    sb.append(\" NAME: \" + queueName)\n-        .append(\" CUR: \").append(current)\n-        .append(\" PEN: \").append(pending)\n-        .append(\" RESERVED: \").append(reserved)\n-        .append(\" GAR: \").append(getGuaranteed())\n-        .append(\" NORM: \").append(normalizedGuarantee)\n-        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n-        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n-        .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n+    sb.append(\" NAME: \" + queueName).append(\" CUR: \").append(current)\n+        .append(\" PEN: \").append(pending).append(\" RESERVED: \").append(reserved)\n+        .append(\" GAR: \").append(getGuaranteed()).append(\" NORM: \")\n+        .append(normalizedGuarantee).append(\" IDEAL_ASSIGNED: \")\n+        .append(idealAssigned).append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n+        .append(\" ACTUAL_PREEMPT: \").append(getActuallyToBePreempted())\n         .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n-        .append(\" PREEMPTABLE: \").append(preemptableExtra)\n-        .append(\"\\n\");\n+        .append(\" PREEMPTABLE: \").append(preemptableExtra).append(\"\\n\");\n \n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\" NAME: \" + queueName).append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending).append(\" RESERVED: \").append(reserved)\n        .append(\" GAR: \").append(getGuaranteed()).append(\" NORM: \")\n        .append(normalizedGuarantee).append(\" IDEAL_ASSIGNED: \")\n        .append(idealAssigned).append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(getActuallyToBePreempted())\n        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n        .append(\" PREEMPTABLE: \").append(preemptableExtra).append(\"\\n\");\n\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4390. Do surgical preemption based on reserved container in CapacityScheduler. Contributed by Wangda Tan\n",
      "commitDate": "05/05/16 12:56 PM",
      "commitName": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/03/16 12:43 PM",
      "commitNameOld": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 36.01,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\" NAME: \" + queueName)\n         .append(\" CUR: \").append(current)\n         .append(\" PEN: \").append(pending)\n-        .append(\" GAR: \").append(guaranteed)\n+        .append(\" RESERVED: \").append(reserved)\n+        .append(\" GAR: \").append(getGuaranteed())\n         .append(\" NORM: \").append(normalizedGuarantee)\n         .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n         .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n         .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n         .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n         .append(\" PREEMPTABLE: \").append(preemptableExtra)\n         .append(\"\\n\");\n \n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\" NAME: \" + queueName)\n        .append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending)\n        .append(\" RESERVED: \").append(reserved)\n        .append(\" GAR: \").append(getGuaranteed())\n        .append(\" NORM: \").append(normalizedGuarantee)\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n        .append(\" PREEMPTABLE: \").append(preemptableExtra)\n        .append(\"\\n\");\n\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "60e4116bf1d00afed91010e57357fe54057e4e39": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
      "commitDate": "30/03/16 12:43 PM",
      "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
          "commitDate": "30/03/16 12:43 PM",
          "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/03/16 11:22 PM",
          "commitNameOld": "09d63d5a192b5d6b172f94ff6c94da348fd49ea6",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    public String toString() {\n-      StringBuilder sb \u003d new StringBuilder();\n-      sb.append(\" NAME: \" + queueName)\n+  public String toString() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(\" NAME: \" + queueName)\n         .append(\" CUR: \").append(current)\n         .append(\" PEN: \").append(pending)\n         .append(\" GAR: \").append(guaranteed)\n         .append(\" NORM: \").append(normalizedGuarantee)\n         .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n         .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n-        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted)\n+        .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n         .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n         .append(\" PREEMPTABLE: \").append(preemptableExtra)\n         .append(\"\\n\");\n \n-      return sb.toString();\n-    }\n\\ No newline at end of file\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\" NAME: \" + queueName)\n        .append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending)\n        .append(\" GAR: \").append(guaranteed)\n        .append(\" NORM: \").append(normalizedGuarantee)\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n        .append(\" PREEMPTABLE: \").append(preemptableExtra)\n        .append(\"\\n\");\n\n    return sb.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
            "oldMethodName": "toString",
            "newMethodName": "toString"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
          "commitDate": "30/03/16 12:43 PM",
          "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/03/16 11:22 PM",
          "commitNameOld": "09d63d5a192b5d6b172f94ff6c94da348fd49ea6",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    public String toString() {\n-      StringBuilder sb \u003d new StringBuilder();\n-      sb.append(\" NAME: \" + queueName)\n+  public String toString() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(\" NAME: \" + queueName)\n         .append(\" CUR: \").append(current)\n         .append(\" PEN: \").append(pending)\n         .append(\" GAR: \").append(guaranteed)\n         .append(\" NORM: \").append(normalizedGuarantee)\n         .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n         .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n-        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted)\n+        .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n         .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n         .append(\" PREEMPTABLE: \").append(preemptableExtra)\n         .append(\"\\n\");\n \n-      return sb.toString();\n-    }\n\\ No newline at end of file\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\" NAME: \" + queueName)\n        .append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending)\n        .append(\" GAR: \").append(guaranteed)\n        .append(\" NORM: \").append(normalizedGuarantee)\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(actuallyToBePreempted)\n        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n        .append(\" PREEMPTABLE: \").append(preemptableExtra)\n        .append(\"\\n\");\n\n    return sb.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
          "extendedDetails": {}
        }
      ]
    },
    "4b130821995a3cfe20c71e38e0f63294085c0491": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2056. Disable preemption at Queue level. Contributed by Eric Payne\n",
      "commitDate": "05/12/14 1:06 PM",
      "commitName": "4b130821995a3cfe20c71e38e0f63294085c0491",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "12/09/14 10:33 AM",
      "commitNameOld": "3122daa80261b466e309e88d88d1e2c030525e3f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 84.15,
      "commitsBetweenForRepo": 775,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     public String toString() {\n       StringBuilder sb \u003d new StringBuilder();\n       sb.append(\" NAME: \" + queueName)\n         .append(\" CUR: \").append(current)\n         .append(\" PEN: \").append(pending)\n         .append(\" GAR: \").append(guaranteed)\n         .append(\" NORM: \").append(normalizedGuarantee)\n         .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n         .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n         .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted)\n+        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n+        .append(\" PREEMPTABLE: \").append(preemptableExtra)\n         .append(\"\\n\");\n \n       return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(\" NAME: \" + queueName)\n        .append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending)\n        .append(\" GAR: \").append(guaranteed)\n        .append(\" NORM: \").append(normalizedGuarantee)\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted)\n        .append(\" UNTOUCHABLE: \").append(untouchableExtra)\n        .append(\" PREEMPTABLE: \").append(preemptableExtra)\n        .append(\"\\n\");\n\n      return sb.toString();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "45b42676f9333ed4fa05355ccb4e1f91a9556525": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1957. Consider the max capacity of the queue when computing the ideal\ncapacity for preemption. Contributed by Carlo Curino\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594414 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 4:15 PM",
      "commitName": "45b42676f9333ed4fa05355ccb4e1f91a9556525",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "10/07/13 6:20 PM",
      "commitNameOld": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 306.91,
      "commitsBetweenForRepo": 2071,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n     public String toString() {\n       StringBuilder sb \u003d new StringBuilder();\n-      sb.append(\"CUR: \").append(current)\n+      sb.append(\" NAME: \" + queueName)\n+        .append(\" CUR: \").append(current)\n         .append(\" PEN: \").append(pending)\n         .append(\" GAR: \").append(guaranteed)\n         .append(\" NORM: \").append(normalizedGuarantee)\n         .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n         .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n-        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted);\n+        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted)\n+        .append(\"\\n\");\n \n       return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(\" NAME: \" + queueName)\n        .append(\" CUR: \").append(current)\n        .append(\" PEN: \").append(pending)\n        .append(\" GAR: \").append(guaranteed)\n        .append(\" NORM: \").append(normalizedGuarantee)\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted)\n        .append(\"\\n\");\n\n      return sb.toString();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,12 @@\n+    public String toString() {\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(\"CUR: \").append(current)\n+        .append(\" PEN: \").append(pending)\n+        .append(\" GAR: \").append(guaranteed)\n+        .append(\" NORM: \").append(normalizedGuarantee)\n+        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n+        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n+        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted);\n+\n+      return sb.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(\"CUR: \").append(current)\n        .append(\" PEN: \").append(pending)\n        .append(\" GAR: \").append(guaranteed)\n        .append(\" NORM: \").append(normalizedGuarantee)\n        .append(\" IDEAL_ASSIGNED: \").append(idealAssigned)\n        .append(\" IDEAL_PREEMPT: \").append(toBePreempted)\n        .append(\" ACTUAL_PREEMPT: \").append(actuallyPreempted);\n\n      return sb.toString();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java"
    }
  }
}