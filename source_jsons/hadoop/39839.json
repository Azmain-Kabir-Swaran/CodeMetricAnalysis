{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileBasedCSConfigurationProvider.java",
  "functionName": "loadConfiguration",
  "functionId": "loadConfiguration___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/FileBasedCSConfigurationProvider.java",
  "functionStartLine": 51,
  "functionEndLine": 66,
  "numCommitsSeen": 1,
  "timeTaken": 1099,
  "changeHistory": [
    "ef59cbe08aabe9844159cb4192d6345e4e3caab2"
  ],
  "changeHistoryShort": {
    "ef59cbe08aabe9844159cb4192d6345e4e3caab2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ef59cbe08aabe9844159cb4192d6345e4e3caab2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5951. Changes to allow CapacityScheduler to use configuration store\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ef59cbe08aabe9844159cb4192d6345e4e3caab2",
      "commitAuthor": "Jonathan Hung",
      "diff": "@@ -0,0 +1,16 @@\n+  public CapacitySchedulerConfiguration loadConfiguration(Configuration conf)\n+      throws IOException {\n+    try {\n+      InputStream csInputStream \u003d\n+          this.rmContext.getConfigurationProvider()\n+              .getConfigurationInputStream(conf,\n+                  YarnConfiguration.CS_CONFIGURATION_FILE);\n+      if (csInputStream !\u003d null) {\n+        conf.addResource(csInputStream);\n+        return new CapacitySchedulerConfiguration(conf, false);\n+      }\n+      return new CapacitySchedulerConfiguration(conf, true);\n+    } catch (Exception e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public CapacitySchedulerConfiguration loadConfiguration(Configuration conf)\n      throws IOException {\n    try {\n      InputStream csInputStream \u003d\n          this.rmContext.getConfigurationProvider()\n              .getConfigurationInputStream(conf,\n                  YarnConfiguration.CS_CONFIGURATION_FILE);\n      if (csInputStream !\u003d null) {\n        conf.addResource(csInputStream);\n        return new CapacitySchedulerConfiguration(conf, false);\n      }\n      return new CapacitySchedulerConfiguration(conf, true);\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/FileBasedCSConfigurationProvider.java"
    }
  }
}