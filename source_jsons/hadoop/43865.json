{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceTimelinePublisher.java",
  "functionName": "componentInstanceBecomeReady",
  "functionId": "componentInstanceBecomeReady___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
  "functionStartLine": 228,
  "functionEndLine": 239,
  "numCommitsSeen": 16,
  "timeTaken": 3517,
  "changeHistory": [
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2"
  ],
  "changeHistoryShort": {
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": "Ymultichange(Yrename,Ybodychange)",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "541b64c7985db425c5ce8bd5f71a2d5980809708",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,12 @@\n-  public void componentInstanceUpdated(Container container) {\n+  public void componentInstanceBecomeReady(Container container) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n-\n-    // create info keys\n-    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n-    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n-        container.getHostname());\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n-        container.getState().toString());\n-    entity.addInfo(entityInfos);\n-\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003c\u003e();\n+    entityInfo.put(ServiceTimelineMetricsConstants.STATE, READY);\n+    entity.addInfo(entityInfo);\n     TimelineEvent updateEvent \u003d new TimelineEvent();\n-    updateEvent\n-        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n+    updateEvent.setId(ServiceTimelineEvent.COMPONENT_INSTANCE_BECOME_READY\n+        .toString());\n     updateEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(updateEvent);\n-\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceBecomeReady(Container container) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003c\u003e();\n    entityInfo.put(ServiceTimelineMetricsConstants.STATE, READY);\n    entity.addInfo(entityInfo);\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent.setId(ServiceTimelineEvent.COMPONENT_INSTANCE_BECOME_READY\n        .toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "componentInstanceUpdated",
            "newValue": "componentInstanceBecomeReady"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "541b64c7985db425c5ce8bd5f71a2d5980809708",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,12 @@\n-  public void componentInstanceUpdated(Container container) {\n+  public void componentInstanceBecomeReady(Container container) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n-\n-    // create info keys\n-    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n-    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n-        container.getHostname());\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n-        container.getState().toString());\n-    entity.addInfo(entityInfos);\n-\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003c\u003e();\n+    entityInfo.put(ServiceTimelineMetricsConstants.STATE, READY);\n+    entity.addInfo(entityInfo);\n     TimelineEvent updateEvent \u003d new TimelineEvent();\n-    updateEvent\n-        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n+    updateEvent.setId(ServiceTimelineEvent.COMPONENT_INSTANCE_BECOME_READY\n+        .toString());\n     updateEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(updateEvent);\n-\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceBecomeReady(Container container) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003c\u003e();\n    entityInfo.put(ServiceTimelineMetricsConstants.STATE, READY);\n    entity.addInfo(entityInfo);\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent.setId(ServiceTimelineEvent.COMPONENT_INSTANCE_BECOME_READY\n        .toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void componentInstanceUpdated(Container container) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n        container.getHostname());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entity.addInfo(entityInfos);\n\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,20 @@\n-  public void componentInstanceUpdated(Container container,\n-      String componentName) {\n+  public void componentInstanceUpdated(Container container) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.IP, container.getIp());\n-    entityInfos.put(SliderTimelineMetricsConstants.HOSTNAME,\n+    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n+    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n         container.getHostname());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n         container.getState().toString());\n     entity.addInfo(entityInfos);\n \n     TimelineEvent updateEvent \u003d new TimelineEvent();\n     updateEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n     updateEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(updateEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceUpdated(Container container) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n        container.getHostname());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entity.addInfo(entityInfos);\n\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,20 @@\n-  public void componentInstanceUpdated(Container container,\n-      String componentName) {\n+  public void componentInstanceUpdated(Container container) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.IP, container.getIp());\n-    entityInfos.put(SliderTimelineMetricsConstants.HOSTNAME,\n+    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n+    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n         container.getHostname());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n         container.getState().toString());\n     entity.addInfo(entityInfos);\n \n     TimelineEvent updateEvent \u003d new TimelineEvent();\n     updateEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n     updateEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(updateEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceUpdated(Container container) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n        container.getHostname());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entity.addInfo(entityInfos);\n\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,20 @@\n-  public void componentInstanceUpdated(Container container,\n-      String componentName) {\n+  public void componentInstanceUpdated(Container container) {\n     TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n \n     // create info keys\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.IP, container.getIp());\n-    entityInfos.put(SliderTimelineMetricsConstants.HOSTNAME,\n+    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n+    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n         container.getHostname());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n         container.getState().toString());\n     entity.addInfo(entityInfos);\n \n     TimelineEvent updateEvent \u003d new TimelineEvent();\n     updateEvent\n-        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n+        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n     updateEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(updateEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void componentInstanceUpdated(Container container) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.IP, container.getIp());\n    entityInfos.put(ServiceTimelineMetricsConstants.HOSTNAME,\n        container.getHostname());\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entity.addInfo(entityInfos);\n\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent\n        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[container-Container, componentName-String]",
            "newValue": "[container-Container]"
          }
        }
      ]
    },
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6395. Integrate service app master to write data into ATSv2. Contributed by Rohith Sharma K S\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f4216b7bba511cc79439e7dab9f0282d831a16b2",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,21 @@\n+  public void componentInstanceUpdated(Container container,\n+      String componentName) {\n+    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n+\n+    // create info keys\n+    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfos.put(SliderTimelineMetricsConstants.IP, container.getIp());\n+    entityInfos.put(SliderTimelineMetricsConstants.HOSTNAME,\n+        container.getHostname());\n+    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+        container.getState().toString());\n+    entity.addInfo(entityInfos);\n+\n+    TimelineEvent updateEvent \u003d new TimelineEvent();\n+    updateEvent\n+        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n+    updateEvent.setTimestamp(System.currentTimeMillis());\n+    entity.addEvent(updateEvent);\n+\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void componentInstanceUpdated(Container container,\n      String componentName) {\n    TimelineEntity entity \u003d createComponentInstanceEntity(container.getId());\n\n    // create info keys\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(SliderTimelineMetricsConstants.IP, container.getIp());\n    entityInfos.put(SliderTimelineMetricsConstants.HOSTNAME,\n        container.getHostname());\n    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n        container.getState().toString());\n    entity.addInfo(entityInfos);\n\n    TimelineEvent updateEvent \u003d new TimelineEvent();\n    updateEvent\n        .setId(SliderTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());\n    updateEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(updateEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java"
    }
  }
}