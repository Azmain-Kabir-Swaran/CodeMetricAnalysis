{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProviderUtils.java",
  "functionName": "unnestUri",
  "functionId": "unnestUri___nestedUri-URI",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java",
  "functionStartLine": 79,
  "functionEndLine": 100,
  "numCommitsSeen": 17,
  "timeTaken": 1882,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "7634d404b750eafa135a37fa275325d0398255fb",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1",
    "77306291643838ed7b57b99d6497553314a525f2"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "7634d404b750eafa135a37fa275325d0398255fb": "Ybodychange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Ymovefromfile",
    "77306291643838ed7b57b99d6497553314a525f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 542.6,
      "commitsBetweenForRepo": 4698,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public static Path unnestUri(URI nestedUri) {\n     StringBuilder result \u003d new StringBuilder();\n     String authority \u003d nestedUri.getAuthority();\n     if (authority !\u003d null) {\n       String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n-      result.append(parts[0]);\n-      result.append(\"://\");\n+      result.append(parts[0])\n+          .append(\"://\");\n       if (parts.length \u003d\u003d 2) {\n         result.append(parts[1]);\n       }\n     }\n     result.append(nestedUri.getPath());\n     if (nestedUri.getQuery() !\u003d null) {\n       result.append(\"?\");\n       result.append(nestedUri.getQuery());\n     }\n     if (nestedUri.getFragment() !\u003d null) {\n       result.append(\"#\");\n       result.append(nestedUri.getFragment());\n     }\n     return new Path(result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path unnestUri(URI nestedUri) {\n    StringBuilder result \u003d new StringBuilder();\n    String authority \u003d nestedUri.getAuthority();\n    if (authority !\u003d null) {\n      String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n      result.append(parts[0])\n          .append(\"://\");\n      if (parts.length \u003d\u003d 2) {\n        result.append(parts[1]);\n      }\n    }\n    result.append(nestedUri.getPath());\n    if (nestedUri.getQuery() !\u003d null) {\n      result.append(\"?\");\n      result.append(nestedUri.getQuery());\n    }\n    if (nestedUri.getFragment() !\u003d null) {\n      result.append(\"#\");\n      result.append(nestedUri.getFragment());\n    }\n    return new Path(result.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java",
      "extendedDetails": {}
    },
    "7634d404b750eafa135a37fa275325d0398255fb": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12846. Credential Provider Recursive Dependencies. Contributed by Larry McCay.\n",
      "commitDate": "28/02/16 11:22 AM",
      "commitName": "7634d404b750eafa135a37fa275325d0398255fb",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "05/06/15 1:11 PM",
      "commitNameOld": "2dbc40e6086026ef02747223982aa68f2d328ade",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 267.97,
      "commitsBetweenForRepo": 1806,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n   public static Path unnestUri(URI nestedUri) {\n-    String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n-    StringBuilder result \u003d new StringBuilder(parts[0]);\n-    result.append(\"://\");\n-    if (parts.length \u003d\u003d 2) {\n-      result.append(parts[1]);\n+    StringBuilder result \u003d new StringBuilder();\n+    String authority \u003d nestedUri.getAuthority();\n+    if (authority !\u003d null) {\n+      String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n+      result.append(parts[0]);\n+      result.append(\"://\");\n+      if (parts.length \u003d\u003d 2) {\n+        result.append(parts[1]);\n+      }\n     }\n     result.append(nestedUri.getPath());\n     if (nestedUri.getQuery() !\u003d null) {\n       result.append(\"?\");\n       result.append(nestedUri.getQuery());\n     }\n     if (nestedUri.getFragment() !\u003d null) {\n       result.append(\"#\");\n       result.append(nestedUri.getFragment());\n     }\n     return new Path(result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path unnestUri(URI nestedUri) {\n    StringBuilder result \u003d new StringBuilder();\n    String authority \u003d nestedUri.getAuthority();\n    if (authority !\u003d null) {\n      String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n      result.append(parts[0]);\n      result.append(\"://\");\n      if (parts.length \u003d\u003d 2) {\n        result.append(parts[1]);\n      }\n    }\n    result.append(nestedUri.getPath());\n    if (nestedUri.getQuery() !\u003d null) {\n      result.append(\"?\");\n      result.append(nestedUri.getQuery());\n    }\n    if (nestedUri.getFragment() !\u003d null) {\n      result.append(\"#\");\n      result.append(nestedUri.getFragment());\n    }\n    return new Path(result.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java",
      "extendedDetails": {}
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "18/06/14 2:27 AM",
      "commitNameOld": "1adec79c7bcdb53128cffc6a3c289fa6e86a53b1",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Path unnestUri(URI nestedUri) {\n    String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n    StringBuilder result \u003d new StringBuilder(parts[0]);\n    result.append(\"://\");\n    if (parts.length \u003d\u003d 2) {\n      result.append(parts[1]);\n    }\n    result.append(nestedUri.getPath());\n    if (nestedUri.getQuery() !\u003d null) {\n      result.append(\"?\");\n      result.append(nestedUri.getQuery());\n    }\n    if (nestedUri.getFragment() !\u003d null) {\n      result.append(\"#\");\n      result.append(nestedUri.getFragment());\n    }\n    return new Path(result.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java",
        "oldMethodName": "unnestUri",
        "newMethodName": "unnestUri"
      }
    },
    "77306291643838ed7b57b99d6497553314a525f2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10141. Create KeyProvider API to separate encryption key storage\nfrom the applications. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552462 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/13 4:25 PM",
      "commitName": "77306291643838ed7b57b99d6497553314a525f2",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,18 @@\n+  public static Path unnestUri(URI nestedUri) {\n+    String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n+    StringBuilder result \u003d new StringBuilder(parts[0]);\n+    result.append(\"://\");\n+    if (parts.length \u003d\u003d 2) {\n+      result.append(parts[1]);\n+    }\n+    result.append(nestedUri.getPath());\n+    if (nestedUri.getQuery() !\u003d null) {\n+      result.append(\"?\");\n+      result.append(nestedUri.getQuery());\n+    }\n+    if (nestedUri.getFragment() !\u003d null) {\n+      result.append(\"#\");\n+      result.append(nestedUri.getFragment());\n+    }\n+    return new Path(result.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path unnestUri(URI nestedUri) {\n    String[] parts \u003d nestedUri.getAuthority().split(\"@\", 2);\n    StringBuilder result \u003d new StringBuilder(parts[0]);\n    result.append(\"://\");\n    if (parts.length \u003d\u003d 2) {\n      result.append(parts[1]);\n    }\n    result.append(nestedUri.getPath());\n    if (nestedUri.getQuery() !\u003d null) {\n      result.append(\"?\");\n      result.append(nestedUri.getQuery());\n    }\n    if (nestedUri.getFragment() !\u003d null) {\n      result.append(\"#\");\n      result.append(nestedUri.getFragment());\n    }\n    return new Path(result.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProvider.java"
    }
  }
}