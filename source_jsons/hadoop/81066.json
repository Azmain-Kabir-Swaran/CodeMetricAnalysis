{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "handleEndProperty",
  "functionId": "handleEndProperty",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 3317,
  "functionEndLine": 3348,
  "numCommitsSeen": 132,
  "timeTaken": 1199,
  "changeHistory": [
    "f51da9c4d1423c2ac92eb4f40e973264e7e968cc"
  ],
  "changeHistoryShort": {
    "f51da9c4d1423c2ac92eb4f40e973264e7e968cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f51da9c4d1423c2ac92eb4f40e973264e7e968cc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15554. Improve JIT performance for Configuration parsing. Contributed by Todd Lipcon.\n",
      "commitDate": "02/07/18 9:31 AM",
      "commitName": "f51da9c4d1423c2ac92eb4f40e973264e7e968cc",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,32 @@\n+    void handleEndProperty() {\n+      if (confName \u003d\u003d null || (!fallbackAllowed \u0026\u0026 fallbackEntered)) {\n+        return;\n+      }\n+      String[] confSourceArray;\n+      if (confSource.isEmpty()) {\n+        confSourceArray \u003d nameSingletonArray;\n+      } else {\n+        confSource.add(name);\n+        confSourceArray \u003d confSource.toArray(new String[confSource.size()]);\n+      }\n+\n+      // Read tags and put them in propertyTagsMap\n+      if (confTag !\u003d null) {\n+        readTagFromConfig(confTag, confName, confValue, confSourceArray);\n+      }\n+\n+      DeprecatedKeyInfo keyInfo \u003d\n+          deprecations.getDeprecatedKeyMap().get(confName);\n+\n+      if (keyInfo !\u003d null) {\n+        keyInfo.clearAccessed();\n+        for (String key : keyInfo.newKeys) {\n+          // update new keys with deprecated key\u0027s value\n+          results.add(new ParsedItem(\n+              name, key, confValue, confFinal, confSourceArray));\n+        }\n+      } else {\n+        results.add(new ParsedItem(name, confName, confValue, confFinal,\n+            confSourceArray));\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void handleEndProperty() {\n      if (confName \u003d\u003d null || (!fallbackAllowed \u0026\u0026 fallbackEntered)) {\n        return;\n      }\n      String[] confSourceArray;\n      if (confSource.isEmpty()) {\n        confSourceArray \u003d nameSingletonArray;\n      } else {\n        confSource.add(name);\n        confSourceArray \u003d confSource.toArray(new String[confSource.size()]);\n      }\n\n      // Read tags and put them in propertyTagsMap\n      if (confTag !\u003d null) {\n        readTagFromConfig(confTag, confName, confValue, confSourceArray);\n      }\n\n      DeprecatedKeyInfo keyInfo \u003d\n          deprecations.getDeprecatedKeyMap().get(confName);\n\n      if (keyInfo !\u003d null) {\n        keyInfo.clearAccessed();\n        for (String key : keyInfo.newKeys) {\n          // update new keys with deprecated key\u0027s value\n          results.add(new ParsedItem(\n              name, key, confValue, confFinal, confSourceArray));\n        }\n      } else {\n        results.add(new ParsedItem(name, confName, confValue, confFinal,\n            confSourceArray));\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}