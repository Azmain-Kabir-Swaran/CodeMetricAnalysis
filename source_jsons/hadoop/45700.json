{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationIndexedFileController.java",
  "functionName": "postWrite",
  "functionId": "postWrite___record-LogAggregationFileControllerContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java",
  "functionStartLine": 425,
  "functionEndLine": 439,
  "numCommitsSeen": 18,
  "timeTaken": 1875,
  "changeHistory": [
    "280080fad01304c85a9ede4d4f7b707eb36c0155",
    "c92c1d521eadfd8a4cd8205cc6aee74816f353f4",
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc"
  ],
  "changeHistoryShort": {
    "280080fad01304c85a9ede4d4f7b707eb36c0155": "Ybodychange",
    "c92c1d521eadfd8a4cd8205cc6aee74816f353f4": "Ybodychange",
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "280080fad01304c85a9ede4d4f7b707eb36c0155": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7259. Add size-based rolling policy to LogAggregationIndexedFileController. (xgong via wangda)\n\nChange-Id: Ifaf82c0aee6b73b9b6ebf103aa72e131e3942f31\n",
      "commitDate": "02/10/17 3:30 PM",
      "commitName": "280080fad01304c85a9ede4d4f7b707eb36c0155",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "13/09/17 10:16 PM",
      "commitNameOld": "c92c1d521eadfd8a4cd8205cc6aee74816f353f4",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 18.72,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public void postWrite(LogAggregationFileControllerContext record)\n       throws Exception {\n     // always aggregate the previous logsMeta, and append them together\n     // at the end of the file\n     indexedLogsMeta.addLogMeta(logsMetaInThisCycle);\n     byte[] b \u003d SerializationUtils.serialize(indexedLogsMeta);\n     this.fsDataOStream.write(b);\n     int length \u003d b.length;\n     this.fsDataOStream.writeInt(length);\n-    byte[] separator \u003d this.uuid.getBytes(Charset.forName(\"UTF-8\"));\n-    this.fsDataOStream.write(separator);\n+    this.fsDataOStream.write(uuid);\n     if (logAggregationSuccessfullyInThisCyCle \u0026\u0026\n         record.isLogAggregationInRolling()) {\n       deleteFileWithRetries(fc, ugi, remoteLogCheckSumFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void postWrite(LogAggregationFileControllerContext record)\n      throws Exception {\n    // always aggregate the previous logsMeta, and append them together\n    // at the end of the file\n    indexedLogsMeta.addLogMeta(logsMetaInThisCycle);\n    byte[] b \u003d SerializationUtils.serialize(indexedLogsMeta);\n    this.fsDataOStream.write(b);\n    int length \u003d b.length;\n    this.fsDataOStream.writeInt(length);\n    this.fsDataOStream.write(uuid);\n    if (logAggregationSuccessfullyInThisCyCle \u0026\u0026\n        record.isLogAggregationInRolling()) {\n      deleteFileWithRetries(fc, ugi, remoteLogCheckSumFile);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java",
      "extendedDetails": {}
    },
    "c92c1d521eadfd8a4cd8205cc6aee74816f353f4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7194. Log aggregation status is always Failed with the newly added log aggregation IndexedFileFormat. Contributed by Xuan Gong.\n",
      "commitDate": "13/09/17 10:16 PM",
      "commitName": "c92c1d521eadfd8a4cd8205cc6aee74816f353f4",
      "commitAuthor": "Junping Du",
      "commitDateOld": "08/09/17 3:16 PM",
      "commitNameOld": "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 5.29,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public void postWrite(LogAggregationFileControllerContext record)\n       throws Exception {\n     // always aggregate the previous logsMeta, and append them together\n     // at the end of the file\n     indexedLogsMeta.addLogMeta(logsMetaInThisCycle);\n     byte[] b \u003d SerializationUtils.serialize(indexedLogsMeta);\n     this.fsDataOStream.write(b);\n     int length \u003d b.length;\n     this.fsDataOStream.writeInt(length);\n     byte[] separator \u003d this.uuid.getBytes(Charset.forName(\"UTF-8\"));\n     this.fsDataOStream.write(separator);\n-    if (logAggregationSuccessfullyInThisCyCle) {\n+    if (logAggregationSuccessfullyInThisCyCle \u0026\u0026\n+        record.isLogAggregationInRolling()) {\n       deleteFileWithRetries(fc, ugi, remoteLogCheckSumFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void postWrite(LogAggregationFileControllerContext record)\n      throws Exception {\n    // always aggregate the previous logsMeta, and append them together\n    // at the end of the file\n    indexedLogsMeta.addLogMeta(logsMetaInThisCycle);\n    byte[] b \u003d SerializationUtils.serialize(indexedLogsMeta);\n    this.fsDataOStream.write(b);\n    int length \u003d b.length;\n    this.fsDataOStream.writeInt(length);\n    byte[] separator \u003d this.uuid.getBytes(Charset.forName(\"UTF-8\"));\n    this.fsDataOStream.write(separator);\n    if (logAggregationSuccessfullyInThisCyCle \u0026\u0026\n        record.isLogAggregationInRolling()) {\n      deleteFileWithRetries(fc, ugi, remoteLogCheckSumFile);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java",
      "extendedDetails": {}
    },
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7072. Add a new log aggregation file format controller. Contributed by Xuan Gong.\n",
      "commitDate": "08/09/17 3:16 PM",
      "commitName": "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,15 @@\n+  public void postWrite(LogAggregationFileControllerContext record)\n+      throws Exception {\n+    // always aggregate the previous logsMeta, and append them together\n+    // at the end of the file\n+    indexedLogsMeta.addLogMeta(logsMetaInThisCycle);\n+    byte[] b \u003d SerializationUtils.serialize(indexedLogsMeta);\n+    this.fsDataOStream.write(b);\n+    int length \u003d b.length;\n+    this.fsDataOStream.writeInt(length);\n+    byte[] separator \u003d this.uuid.getBytes(Charset.forName(\"UTF-8\"));\n+    this.fsDataOStream.write(separator);\n+    if (logAggregationSuccessfullyInThisCyCle) {\n+      deleteFileWithRetries(fc, ugi, remoteLogCheckSumFile);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void postWrite(LogAggregationFileControllerContext record)\n      throws Exception {\n    // always aggregate the previous logsMeta, and append them together\n    // at the end of the file\n    indexedLogsMeta.addLogMeta(logsMetaInThisCycle);\n    byte[] b \u003d SerializationUtils.serialize(indexedLogsMeta);\n    this.fsDataOStream.write(b);\n    int length \u003d b.length;\n    this.fsDataOStream.writeInt(length);\n    byte[] separator \u003d this.uuid.getBytes(Charset.forName(\"UTF-8\"));\n    this.fsDataOStream.write(separator);\n    if (logAggregationSuccessfullyInThisCyCle) {\n      deleteFileWithRetries(fc, ugi, remoteLogCheckSumFile);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java"
    }
  }
}