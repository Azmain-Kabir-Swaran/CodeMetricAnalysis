{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___proto-BlockStoragePolicyProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 1069,
  "functionEndLine": 1083,
  "numCommitsSeen": 226,
  "timeTaken": 5471,
  "changeHistory": [
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "073bbd805c6680f47bbfcc6e8efd708ad729bca4"
  ],
  "changeHistoryShort": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymovefromfile",
    "073bbd805c6680f47bbfcc6e8efd708ad729bca4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/09/15 5:51 PM",
      "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static BlockStoragePolicy convert(BlockStoragePolicyProto proto) {\n    List\u003cStorageTypeProto\u003e cList \u003d proto.getCreationPolicy()\n        .getStorageTypesList();\n    StorageType[] creationTypes \u003d convertStorageTypes(cList, cList.size());\n    List\u003cStorageTypeProto\u003e cfList \u003d proto.hasCreationFallbackPolicy() ? proto\n        .getCreationFallbackPolicy().getStorageTypesList() : null;\n    StorageType[] creationFallbackTypes \u003d cfList \u003d\u003d null ? StorageType\n        .EMPTY_ARRAY : convertStorageTypes(cfList, cfList.size());\n    List\u003cStorageTypeProto\u003e rfList \u003d proto.hasReplicationFallbackPolicy() ?\n        proto.getReplicationFallbackPolicy().getStorageTypesList() : null;\n    StorageType[] replicationFallbackTypes \u003d rfList \u003d\u003d null ? StorageType\n        .EMPTY_ARRAY : convertStorageTypes(rfList, rfList.size());\n    return new BlockStoragePolicy((byte) proto.getPolicyId(), proto.getName(),\n        creationTypes, creationFallbackTypes, replicationFallbackTypes);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
        "oldMethodName": "convert",
        "newMethodName": "convert"
      }
    },
    "073bbd805c6680f47bbfcc6e8efd708ad729bca4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7081. Add new DistributedFileSystem API for getting all the existing storage policies. Contributed by Jing Zhao.\n",
      "commitDate": "24/09/14 10:05 AM",
      "commitName": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,15 @@\n+  public static BlockStoragePolicy convert(BlockStoragePolicyProto proto) {\n+    List\u003cStorageTypeProto\u003e cList \u003d proto.getCreationPolicy()\n+        .getStorageTypesList();\n+    StorageType[] creationTypes \u003d convertStorageTypes(cList, cList.size());\n+    List\u003cStorageTypeProto\u003e cfList \u003d proto.hasCreationFallbackPolicy() ? proto\n+        .getCreationFallbackPolicy().getStorageTypesList() : null;\n+    StorageType[] creationFallbackTypes \u003d cfList \u003d\u003d null ? StorageType\n+        .EMPTY_ARRAY : convertStorageTypes(cfList, cfList.size());\n+    List\u003cStorageTypeProto\u003e rfList \u003d proto.hasReplicationFallbackPolicy() ?\n+        proto.getReplicationFallbackPolicy().getStorageTypesList() : null;\n+    StorageType[] replicationFallbackTypes \u003d rfList \u003d\u003d null ? StorageType\n+        .EMPTY_ARRAY : convertStorageTypes(rfList, rfList.size());\n+    return new BlockStoragePolicy((byte) proto.getPolicyId(), proto.getName(),\n+        creationTypes, creationFallbackTypes, replicationFallbackTypes);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicy convert(BlockStoragePolicyProto proto) {\n    List\u003cStorageTypeProto\u003e cList \u003d proto.getCreationPolicy()\n        .getStorageTypesList();\n    StorageType[] creationTypes \u003d convertStorageTypes(cList, cList.size());\n    List\u003cStorageTypeProto\u003e cfList \u003d proto.hasCreationFallbackPolicy() ? proto\n        .getCreationFallbackPolicy().getStorageTypesList() : null;\n    StorageType[] creationFallbackTypes \u003d cfList \u003d\u003d null ? StorageType\n        .EMPTY_ARRAY : convertStorageTypes(cfList, cfList.size());\n    List\u003cStorageTypeProto\u003e rfList \u003d proto.hasReplicationFallbackPolicy() ?\n        proto.getReplicationFallbackPolicy().getStorageTypesList() : null;\n    StorageType[] replicationFallbackTypes \u003d rfList \u003d\u003d null ? StorageType\n        .EMPTY_ARRAY : convertStorageTypes(rfList, rfList.size());\n    return new BlockStoragePolicy((byte) proto.getPolicyId(), proto.getName(),\n        creationTypes, creationFallbackTypes, replicationFallbackTypes);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}