{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MaxRunningAppsEnforcer.java",
  "functionName": "gatherPossiblyRunnableAppLists",
  "functionId": "gatherPossiblyRunnableAppLists___queue-FSQueue__appLists-List__List__FSAppAttempt____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
  "functionStartLine": 305,
  "functionEndLine": 317,
  "numCommitsSeen": 15,
  "timeTaken": 2311,
  "changeHistory": [
    "f6ea9be5473ab66798b0536317d2f32c5348eb57",
    "24ee9e3431d27811530ffa01d8d241133fd643fe",
    "486e718fc1f5befd231494e2ec06bb360484f191",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
    "61b6ed73f8a5a75951c7b355c673459874eef7c3"
  ],
  "changeHistoryShort": {
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": "Ybodychange",
    "24ee9e3431d27811530ffa01d8d241133fd643fe": "Ybodychange",
    "486e718fc1f5befd231494e2ec06bb360484f191": "Yparameterchange",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": "Ybodychange",
    "61b6ed73f8a5a75951c7b355c673459874eef7c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5264. Store all queue-specific information in FSQueue. (Yufei Gu via kasha)\n",
      "commitDate": "02/09/16 2:56 PM",
      "commitName": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "04/03/15 6:06 PM",
      "commitNameOld": "22426a1c9f4bd616558089b6862fd34ab42d19a7",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 547.83,
      "commitsBetweenForRepo": 4165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n   private void gatherPossiblyRunnableAppLists(FSQueue queue,\n       List\u003cList\u003cFSAppAttempt\u003e\u003e appLists) {\n-    if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n-        .getQueueMaxApps(queue.getName())) {\n+    if (queue.getNumRunnableApps() \u003c queue.getMaxRunningApps()) {\n       if (queue instanceof FSLeafQueue) {\n         appLists.add(\n             ((FSLeafQueue)queue).getCopyOfNonRunnableAppSchedulables());\n       } else {\n         for (FSQueue child : queue.getChildQueues()) {\n           gatherPossiblyRunnableAppLists(child, appLists);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void gatherPossiblyRunnableAppLists(FSQueue queue,\n      List\u003cList\u003cFSAppAttempt\u003e\u003e appLists) {\n    if (queue.getNumRunnableApps() \u003c queue.getMaxRunningApps()) {\n      if (queue instanceof FSLeafQueue) {\n        appLists.add(\n            ((FSLeafQueue)queue).getCopyOfNonRunnableAppSchedulables());\n      } else {\n        for (FSQueue child : queue.getChildQueues()) {\n          gatherPossiblyRunnableAppLists(child, appLists);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
      "extendedDetails": {}
    },
    "24ee9e3431d27811530ffa01d8d241133fd643fe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2975. FSLeafQueue app lists are accessed without required locks. (kasha)\n",
      "commitDate": "20/12/14 12:17 PM",
      "commitName": "24ee9e3431d27811530ffa01d8d241133fd643fe",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "12/08/14 2:43 PM",
      "commitNameOld": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 129.94,
      "commitsBetweenForRepo": 1206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   private void gatherPossiblyRunnableAppLists(FSQueue queue,\n       List\u003cList\u003cFSAppAttempt\u003e\u003e appLists) {\n     if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n         .getQueueMaxApps(queue.getName())) {\n       if (queue instanceof FSLeafQueue) {\n-        appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n+        appLists.add(\n+            ((FSLeafQueue)queue).getCopyOfNonRunnableAppSchedulables());\n       } else {\n         for (FSQueue child : queue.getChildQueues()) {\n           gatherPossiblyRunnableAppLists(child, appLists);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void gatherPossiblyRunnableAppLists(FSQueue queue,\n      List\u003cList\u003cFSAppAttempt\u003e\u003e appLists) {\n    if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n        .getQueueMaxApps(queue.getName())) {\n      if (queue instanceof FSLeafQueue) {\n        appLists.add(\n            ((FSLeafQueue)queue).getCopyOfNonRunnableAppSchedulables());\n      } else {\n        for (FSQueue child : queue.getChildQueues()) {\n          gatherPossiblyRunnableAppLists(child, appLists);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
      "extendedDetails": {}
    },
    "486e718fc1f5befd231494e2ec06bb360484f191": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:43 PM",
      "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "05/02/14 10:09 AM",
      "commitNameOld": "e6eccf20defcaf84a9566482371c7be196779c0d",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 188.15,
      "commitsBetweenForRepo": 1328,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void gatherPossiblyRunnableAppLists(FSQueue queue,\n-      List\u003cList\u003cAppSchedulable\u003e\u003e appLists) {\n+      List\u003cList\u003cFSAppAttempt\u003e\u003e appLists) {\n     if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n         .getQueueMaxApps(queue.getName())) {\n       if (queue instanceof FSLeafQueue) {\n         appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n       } else {\n         for (FSQueue child : queue.getChildQueues()) {\n           gatherPossiblyRunnableAppLists(child, appLists);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void gatherPossiblyRunnableAppLists(FSQueue queue,\n      List\u003cList\u003cFSAppAttempt\u003e\u003e appLists) {\n    if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n        .getQueueMaxApps(queue.getName())) {\n      if (queue instanceof FSLeafQueue) {\n        appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n      } else {\n        for (FSQueue child : queue.getChildQueues()) {\n          gatherPossiblyRunnableAppLists(child, appLists);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
      "extendedDetails": {
        "oldValue": "[queue-FSQueue, appLists-List\u003cList\u003cAppSchedulable\u003e\u003e]",
        "newValue": "[queue-FSQueue, appLists-List\u003cList\u003cFSAppAttempt\u003e\u003e]"
      }
    },
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 7:26 PM",
      "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "29/11/13 11:08 AM",
      "commitNameOld": "61b6ed73f8a5a75951c7b355c673459874eef7c3",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 5.35,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   private void gatherPossiblyRunnableAppLists(FSQueue queue,\n       List\u003cList\u003cAppSchedulable\u003e\u003e appLists) {\n-    if (queue.getNumRunnableApps() \u003c queueMgr.getQueueMaxApps(queue.getName())) {\n+    if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n+        .getQueueMaxApps(queue.getName())) {\n       if (queue instanceof FSLeafQueue) {\n         appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n       } else {\n         for (FSQueue child : queue.getChildQueues()) {\n           gatherPossiblyRunnableAppLists(child, appLists);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void gatherPossiblyRunnableAppLists(FSQueue queue,\n      List\u003cList\u003cAppSchedulable\u003e\u003e appLists) {\n    if (queue.getNumRunnableApps() \u003c scheduler.getAllocationConfiguration()\n        .getQueueMaxApps(queue.getName())) {\n      if (queue instanceof FSLeafQueue) {\n        appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n      } else {\n        for (FSQueue child : queue.getChildQueues()) {\n          gatherPossiblyRunnableAppLists(child, appLists);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
      "extendedDetails": {}
    },
    "61b6ed73f8a5a75951c7b355c673459874eef7c3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1241: Include missing files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546625 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/13 11:08 AM",
      "commitName": "61b6ed73f8a5a75951c7b355c673459874eef7c3",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,12 @@\n+  private void gatherPossiblyRunnableAppLists(FSQueue queue,\n+      List\u003cList\u003cAppSchedulable\u003e\u003e appLists) {\n+    if (queue.getNumRunnableApps() \u003c queueMgr.getQueueMaxApps(queue.getName())) {\n+      if (queue instanceof FSLeafQueue) {\n+        appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n+      } else {\n+        for (FSQueue child : queue.getChildQueues()) {\n+          gatherPossiblyRunnableAppLists(child, appLists);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void gatherPossiblyRunnableAppLists(FSQueue queue,\n      List\u003cList\u003cAppSchedulable\u003e\u003e appLists) {\n    if (queue.getNumRunnableApps() \u003c queueMgr.getQueueMaxApps(queue.getName())) {\n      if (queue instanceof FSLeafQueue) {\n        appLists.add(((FSLeafQueue)queue).getNonRunnableAppSchedulables());\n      } else {\n        for (FSQueue child : queue.getChildQueues()) {\n          gatherPossiblyRunnableAppLists(child, appLists);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java"
    }
  }
}