{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "callAppend",
  "functionId": "callAppend___src-String__flag-EnumSetWritable__CreateFlag__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 1369,
  "functionEndLine": 1389,
  "numCommitsSeen": 97,
  "timeTaken": 3685,
  "changeHistory": [
    "bd909ed9f2d853f614f04a50e2230a7932732776"
  ],
  "changeHistoryShort": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
      "commitDate": "25/01/16 6:32 PM",
      "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,21 @@\n+  private LastBlockWithStatus callAppend(String src,\n+      EnumSetWritable\u003cCreateFlag\u003e flag) throws IOException {\n+    final long startTime \u003d Time.monotonicNow();\n+    for(;;) {\n+      try {\n+        return namenode.append(src, clientName, flag);\n+      } catch(RemoteException re) {\n+        if (Time.monotonicNow() - startTime \u003e 5000\n+            || !RetriableException.class.getName().equals(\n+                re.getClassName())) {\n+          throw re;\n+        }\n+\n+        try { // sleep and retry\n+          Thread.sleep(500);\n+        } catch (InterruptedException e) {\n+          throw DFSUtilClient.toInterruptedIOException(\"callAppend\", e);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private LastBlockWithStatus callAppend(String src,\n      EnumSetWritable\u003cCreateFlag\u003e flag) throws IOException {\n    final long startTime \u003d Time.monotonicNow();\n    for(;;) {\n      try {\n        return namenode.append(src, clientName, flag);\n      } catch(RemoteException re) {\n        if (Time.monotonicNow() - startTime \u003e 5000\n            || !RetriableException.class.getName().equals(\n                re.getClassName())) {\n          throw re;\n        }\n\n        try { // sleep and retry\n          Thread.sleep(500);\n        } catch (InterruptedException e) {\n          throw DFSUtilClient.toInterruptedIOException(\"callAppend\", e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}