{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CountersBlock.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
  "functionStartLine": 60,
  "functionEndLine": 150,
  "numCommitsSeen": 10,
  "timeTaken": 7762,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "ba3c80a5ca8fefae9d0e67232f9973e1a0458f58",
    "1b6f0582fb2561483915132b6fb543d541ca7013",
    "7e3d0168453b1c9193f593ff1560f199848b559e",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
    "c2fe4a7e83775589481210383f62faa2dcb00ecc",
    "34e6de8f856648b4d74997410d9cc8da4010d7c9",
    "71886657f89f64b289c6f426bd9f557ed0e53590",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "ba3c80a5ca8fefae9d0e67232f9973e1a0458f58": "Ybodychange",
    "1b6f0582fb2561483915132b6fb543d541ca7013": "Ybodychange",
    "7e3d0168453b1c9193f593ff1560f199848b559e": "Ybodychange",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": "Ybodychange",
    "c2fe4a7e83775589481210383f62faa2dcb00ecc": "Ybodychange",
    "34e6de8f856648b4d74997410d9cc8da4010d7c9": "Ybodychange",
    "71886657f89f64b289c6f426bd9f557ed0e53590": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "12/02/15 11:11 PM",
      "commitNameOld": "ba3c80a5ca8fefae9d0e67232f9973e1a0458f58",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 895.71,
      "commitsBetweenForRepo": 6233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,91 +1,91 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n-        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n+        p().__(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\")).__();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n-        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n+        p().__(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\")).__();\n       return;\n     }\n     \n     if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n-        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n+        p().__(\"Sorry it looks like \", type, \" has no counters.\").__();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n-            th(\".ui-state-default\", \"Counters\")._()._().\n+            th(\".ui-state-default\", \"Counters\").__().__().\n         tbody();\n     for (CounterGroup g : total) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n-            _(fixGroupDisplayName(g.getDisplayName()))._().\n+          __(fixGroupDisplayName(g.getDisplayName())).__().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").$id(job.getID()+\".\"+g.getName()).\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n-            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n+            th(map \u003d\u003d null ? \"Value\" : \"Total\").__().__().\n         tbody();\n       for (Counter counter : g) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr();\n           if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n-            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n-            _();\n+            groupRow.td().$title(counter.getName()).__(counter.getDisplayName()).\n+                __();\n           } else {\n             groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n-            _();\n+                __();\n           }\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.format(\"%,d\", mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.format(\"%,d\", rc.getValue()));\n         }\n-        groupRow.td(String.format(\"%,d\", counter.getValue()))._();\n+        groupRow.td(String.format(\"%,d\", counter.getValue())).__();\n       }\n-      group._()._()._()._();\n+      group.__().__().__().__();\n     }\n-    tbody._()._()._();\n+    tbody.__().__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p().__(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\")).__();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p().__(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\")).__();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p().__(\"Sorry it looks like \", type, \" has no counters.\").__();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\").__().__().\n        tbody();\n    for (CounterGroup g : total) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n          __(fixGroupDisplayName(g.getDisplayName())).__().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").$id(job.getID()+\".\"+g.getName()).\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\").__().__().\n        tbody();\n      for (Counter counter : g) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName()).__(counter.getDisplayName()).\n                __();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n                __();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.format(\"%,d\", mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.format(\"%,d\", rc.getValue()));\n        }\n        groupRow.td(String.format(\"%,d\", counter.getValue())).__();\n      }\n      group.__().__().__().__();\n    }\n    tbody.__().__().__();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "ba3c80a5ca8fefae9d0e67232f9973e1a0458f58": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6255. Fix JobCounter\u0027s format to use grouping separator. Contributed by Ryu Kobayashi.\n",
      "commitDate": "12/02/15 11:11 PM",
      "commitName": "ba3c80a5ca8fefae9d0e67232f9973e1a0458f58",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "14/03/13 9:56 AM",
      "commitNameOld": "1b6f0582fb2561483915132b6fb543d541ca7013",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 700.59,
      "commitsBetweenForRepo": 5079,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,91 +1,91 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n     \n     if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n         p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n     for (CounterGroup g : total) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").$id(job.getID()+\".\"+g.getName()).\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n       for (Counter counter : g) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr();\n           if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n             groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n             _();\n           } else {\n             groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n             _();\n           }\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n           groupRow.\n-            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n-            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n+            td(mc \u003d\u003d null ? \"0\" : String.format(\"%,d\", mc.getValue())).\n+            td(rc \u003d\u003d null ? \"0\" : String.format(\"%,d\", rc.getValue()));\n         }\n-        groupRow.td(String.valueOf(counter.getValue()))._();\n+        groupRow.td(String.format(\"%,d\", counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").$id(job.getID()+\".\"+g.getName()).\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n            _();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.format(\"%,d\", mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.format(\"%,d\", rc.getValue()));\n        }\n        groupRow.td(String.format(\"%,d\", counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "1b6f0582fb2561483915132b6fb543d541ca7013": {
      "type": "Ybodychange",
      "commitMessage": "YARN-237. Refreshing the RM page forgets how many rows I had in my Datatables (jian he via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1456536 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/13 9:56 AM",
      "commitName": "1b6f0582fb2561483915132b6fb543d541ca7013",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "16/05/12 7:08 AM",
      "commitNameOld": "7e3d0168453b1c9193f593ff1560f199848b559e",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 302.12,
      "commitsBetweenForRepo": 1534,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,91 +1,91 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n     \n     if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n         p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n     for (CounterGroup g : total) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n-            table(\".dt-counters\").\n+            table(\".dt-counters\").$id(job.getID()+\".\"+g.getName()).\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n       for (Counter counter : g) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr();\n           if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n             groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n             _();\n           } else {\n             groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n             _();\n           }\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n         }\n         groupRow.td(String.valueOf(counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").$id(job.getID()+\".\"+g.getName()).\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n            _();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "7e3d0168453b1c9193f593ff1560f199848b559e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4102. job counters not available in Jobhistory webui for killed jobs (Bhallamudi Venkata Siva Kamesh via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/12 7:08 AM",
      "commitName": "7e3d0168453b1c9193f593ff1560f199848b559e",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "09/01/12 1:04 PM",
      "commitNameOld": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 127.71,
      "commitsBetweenForRepo": 964,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,91 +1,91 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n     \n-    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null) {\n+    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n         p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n     for (CounterGroup g : total) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n       for (Counter counter : g) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr();\n           if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n             groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n             _();\n           } else {\n             groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n             _();\n           }\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n         }\n         groupRow.td(String.valueOf(counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null || total.countCounters() \u003d\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n            _();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3511. Removed a multitude of cloned/duplicate counters in the AM thereby reducing the AM heap size and preventing full GCs. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/12 1:04 PM",
      "commitName": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/12/11 5:51 PM",
      "commitNameOld": "c2fe4a7e83775589481210383f62faa2dcb00ecc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 24.8,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,92 +1,91 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n     \n-    if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n-        total.getAllCounterGroups().size() \u003c\u003d 0) {\n+    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n         p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n-    for (CounterGroup g : total.getAllCounterGroups().values()) {\n-      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n-      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n+    for (CounterGroup g : total) {\n+      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n+      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n-      for (Counter counter : g.getAllCounters().values()) {\n+      for (Counter counter : g) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr();\n           if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n             groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n             _();\n           } else {\n             groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n             _();\n           }\n         if (map !\u003d null) {\n-          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n-          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n+          Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n+          Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n         }\n         groupRow.td(String.valueOf(counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getGroupNames() \u003d\u003d null) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n            _();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.findCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.findCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "c2fe4a7e83775589481210383f62faa2dcb00ecc": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3487. Fixed JobHistory web-UI to display links to single task\u0027s counters\u0027 page. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/12/11 5:51 PM",
      "commitName": "c2fe4a7e83775589481210383f62faa2dcb00ecc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/10/11 10:08 PM",
      "commitNameOld": "34e6de8f856648b4d74997410d9cc8da4010d7c9",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 48.86,
      "commitsBetweenForRepo": 306,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,92 +1,92 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n     \n     if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n         total.getAllCounterGroups().size() \u003c\u003d 0) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n         p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n     for (CounterGroup g : total.getAllCounterGroups().values()) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n       for (Counter counter : g.getAllCounters().values()) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr();\n-          if (mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n+          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n             groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n             _();\n           } else {\n             groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n             _();\n           }\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n         }\n         groupRow.td(String.valueOf(counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n        total.getAllCounterGroups().size() \u003c\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total.getAllCounterGroups().values()) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g.getAllCounters().values()) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (task \u003d\u003d null \u0026\u0026 mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n            _();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "34e6de8f856648b4d74997410d9cc8da4010d7c9": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3258. Fixed AM \u0026 JobHistory web-ui to display counters properly. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190160 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 10:08 PM",
      "commitName": "34e6de8f856648b4d74997410d9cc8da4010d7c9",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/09/11 1:08 AM",
      "commitNameOld": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 28.87,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,92 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n     \n     if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n         total.getAllCounterGroups().size() \u003c\u003d 0) {\n       String type \u003d $(TASK_ID);\n       if(type \u003d\u003d null || type.isEmpty()) {\n         type \u003d $(JOB_ID, \"the job\");\n       }\n       html.\n         p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n       return;\n     }\n     \n     String urlBase;\n     String urlId;\n     if(task !\u003d null) {\n       urlBase \u003d \"singletaskcounter\";\n       urlId \u003d MRApps.toString(task.getID());\n     } else {\n       urlBase \u003d \"singlejobcounter\";\n       urlId \u003d MRApps.toString(job.getID());\n     }\n     \n     \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n     for (CounterGroup g : total.getAllCounterGroups().values()) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n           th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").\n               thead().\n                 tr().th(\".name\", \"Name\");\n \n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n       for (Counter counter : g.getAllCounters().values()) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n-          tr().\n-            td().$title(counter.getName()).\n+          tr();\n+          if (mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n+            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n+            _();\n+          } else {\n+            groupRow.td().$title(counter.getName()).\n               a(url(urlBase,urlId,g.getName(), \n                   counter.getName()), counter.getDisplayName()).\n             _();\n+          }\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n         }\n         groupRow.td(String.valueOf(counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n        total.getAllCounterGroups().size() \u003c\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total.getAllCounterGroups().values()) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g.getAllCounters().values()) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr();\n          if (mg \u003d\u003d null \u0026\u0026 rg \u003d\u003d null) {\n            groupRow.td().$title(counter.getName())._(counter.getDisplayName()).\n            _();\n          } else {\n            groupRow.td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n          }\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "71886657f89f64b289c6f426bd9f557ed0e53590": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3001. Added task-specific counters to AppMaster and JobHistory web-UIs. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 1:08 AM",
      "commitName": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 35.33,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,61 +1,87 @@\n   @Override protected void render(Block html) {\n     if (job \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n       return;\n     }\n     if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n       html.\n         p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n       return;\n     }\n+    \n+    if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n+        total.getAllCounterGroups().size() \u003c\u003d 0) {\n+      String type \u003d $(TASK_ID);\n+      if(type \u003d\u003d null || type.isEmpty()) {\n+        type \u003d $(JOB_ID, \"the job\");\n+      }\n+      html.\n+        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n+      return;\n+    }\n+    \n+    String urlBase;\n+    String urlId;\n+    if(task !\u003d null) {\n+      urlBase \u003d \"singletaskcounter\";\n+      urlId \u003d MRApps.toString(task.getID());\n+    } else {\n+      urlBase \u003d \"singlejobcounter\";\n+      urlId \u003d MRApps.toString(job.getID());\n+    }\n+    \n+    \n     int numGroups \u003d 0;\n     TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n       div(_INFO_WRAP).\n       table(\"#counters\").\n         thead().\n           tr().\n             th(\".group.ui-state-default\", \"Counter Group\").\n             th(\".ui-state-default\", \"Counters\")._()._().\n         tbody();\n     for (CounterGroup g : total.getAllCounterGroups().values()) {\n       CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n       CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n       ++numGroups;\n       // This is mostly for demonstration :) Typically we\u0027d introduced\n       // a CounterGroup block to reduce the verbosity. OTOH, this\n       // serves as an indicator of where we\u0027re in the tag hierarchy.\n       TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n         tr().\n-          th().$title(g.getName()).\n+          th().$title(g.getName()).$class(\"ui-state-default\").\n             _(fixGroupDisplayName(g.getDisplayName()))._().\n           td().$class(C_TABLE).\n             table(\".dt-counters\").\n               thead().\n                 tr().th(\".name\", \"Name\");\n+\n       if (map !\u003d null) {\n         groupHeadRow.th(\"Map\").th(\"Reduce\");\n       }\n       // Ditto\n       TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n             th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n         tbody();\n       for (Counter counter : g.getAllCounters().values()) {\n         // Ditto\n         TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n           tr().\n             td().$title(counter.getName()).\n-              _(counter.getDisplayName())._();\n+              a(url(urlBase,urlId,g.getName(), \n+                  counter.getName()), counter.getDisplayName()).\n+            _();\n         if (map !\u003d null) {\n           Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n           Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n           groupRow.\n             td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n             td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n         }\n         groupRow.td(String.valueOf(counter.getValue()))._();\n       }\n       group._()._()._()._();\n     }\n     tbody._()._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    \n    if(total \u003d\u003d null || total.getAllCounterGroups() \u003d\u003d null || \n        total.getAllCounterGroups().size() \u003c\u003d 0) {\n      String type \u003d $(TASK_ID);\n      if(type \u003d\u003d null || type.isEmpty()) {\n        type \u003d $(JOB_ID, \"the job\");\n      }\n      html.\n        p()._(\"Sorry it looks like \",type,\" has no counters.\")._();\n      return;\n    }\n    \n    String urlBase;\n    String urlId;\n    if(task !\u003d null) {\n      urlBase \u003d \"singletaskcounter\";\n      urlId \u003d MRApps.toString(task.getID());\n    } else {\n      urlBase \u003d \"singlejobcounter\";\n      urlId \u003d MRApps.toString(job.getID());\n    }\n    \n    \n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total.getAllCounterGroups().values()) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).$class(\"ui-state-default\").\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g.getAllCounters().values()) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr().\n            td().$title(counter.getName()).\n              a(url(urlBase,urlId,g.getName(), \n                  counter.getName()), counter.getDisplayName()).\n            _();\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total.getAllCounterGroups().values()) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g.getAllCounters().values()) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr().\n            td().$title(counter.getName()).\n              _(counter.getDisplayName())._();\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,61 @@\n+  @Override protected void render(Block html) {\n+    if (job \u003d\u003d null) {\n+      html.\n+        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n+      return;\n+    }\n+    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n+      html.\n+        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n+      return;\n+    }\n+    int numGroups \u003d 0;\n+    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n+      div(_INFO_WRAP).\n+      table(\"#counters\").\n+        thead().\n+          tr().\n+            th(\".group.ui-state-default\", \"Counter Group\").\n+            th(\".ui-state-default\", \"Counters\")._()._().\n+        tbody();\n+    for (CounterGroup g : total.getAllCounterGroups().values()) {\n+      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n+      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n+      ++numGroups;\n+      // This is mostly for demonstration :) Typically we\u0027d introduced\n+      // a CounterGroup block to reduce the verbosity. OTOH, this\n+      // serves as an indicator of where we\u0027re in the tag hierarchy.\n+      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n+        tr().\n+          th().$title(g.getName()).\n+            _(fixGroupDisplayName(g.getDisplayName()))._().\n+          td().$class(C_TABLE).\n+            table(\".dt-counters\").\n+              thead().\n+                tr().th(\".name\", \"Name\");\n+      if (map !\u003d null) {\n+        groupHeadRow.th(\"Map\").th(\"Reduce\");\n+      }\n+      // Ditto\n+      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n+            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n+        tbody();\n+      for (Counter counter : g.getAllCounters().values()) {\n+        // Ditto\n+        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n+          tr().\n+            td().$title(counter.getName()).\n+              _(counter.getDisplayName())._();\n+        if (map !\u003d null) {\n+          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n+          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n+          groupRow.\n+            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n+            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n+        }\n+        groupRow.td(String.valueOf(counter.getValue()))._();\n+      }\n+      group._()._()._()._();\n+    }\n+    tbody._()._()._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (job \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(JOB_ID, \"job\"))._();\n      return;\n    }\n    if (!$(TASK_ID).isEmpty() \u0026\u0026 task \u003d\u003d null) {\n      html.\n        p()._(\"Sorry, no counters for nonexistent\", $(TASK_ID, \"task\"))._();\n      return;\n    }\n    int numGroups \u003d 0;\n    TBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e tbody \u003d html.\n      div(_INFO_WRAP).\n      table(\"#counters\").\n        thead().\n          tr().\n            th(\".group.ui-state-default\", \"Counter Group\").\n            th(\".ui-state-default\", \"Counters\")._()._().\n        tbody();\n    for (CounterGroup g : total.getAllCounterGroups().values()) {\n      CounterGroup mg \u003d map \u003d\u003d null ? null : map.getCounterGroup(g.getName());\n      CounterGroup rg \u003d reduce \u003d\u003d null ? null : reduce.getCounterGroup(g.getName());\n      ++numGroups;\n      // This is mostly for demonstration :) Typically we\u0027d introduced\n      // a CounterGroup block to reduce the verbosity. OTOH, this\n      // serves as an indicator of where we\u0027re in the tag hierarchy.\n      TR\u003cTHEAD\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupHeadRow \u003d tbody.\n        tr().\n          th().$title(g.getName()).\n            _(fixGroupDisplayName(g.getDisplayName()))._().\n          td().$class(C_TABLE).\n            table(\".dt-counters\").\n              thead().\n                tr().th(\".name\", \"Name\");\n      if (map !\u003d null) {\n        groupHeadRow.th(\"Map\").th(\"Reduce\");\n      }\n      // Ditto\n      TBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e group \u003d groupHeadRow.\n            th(map \u003d\u003d null ? \"Value\" : \"Total\")._()._().\n        tbody();\n      for (Counter counter : g.getAllCounters().values()) {\n        // Ditto\n        TR\u003cTBODY\u003cTABLE\u003cTD\u003cTR\u003cTBODY\u003cTABLE\u003cDIV\u003cHamlet\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e groupRow \u003d group.\n          tr().\n            td().$title(counter.getName()).\n              _(counter.getDisplayName())._();\n        if (map !\u003d null) {\n          Counter mc \u003d mg \u003d\u003d null ? null : mg.getCounter(counter.getName());\n          Counter rc \u003d rg \u003d\u003d null ? null : rg.getCounter(counter.getName());\n          groupRow.\n            td(mc \u003d\u003d null ? \"0\" : String.valueOf(mc.getValue())).\n            td(rc \u003d\u003d null ? \"0\" : String.valueOf(rc.getValue()));\n        }\n        groupRow.td(String.valueOf(counter.getValue()))._();\n      }\n      group._()._()._()._();\n    }\n    tbody._()._()._();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java"
    }
  }
}