{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocatedFileStatusFetcher.java",
  "functionName": "call",
  "functionId": "call",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/LocatedFileStatusFetcher.java",
  "functionStartLine": 338,
  "functionEndLine": 353,
  "numCommitsSeen": 6,
  "timeTaken": 1203,
  "changeHistory": [
    "1921e94292f0820985a0cfbf8922a2a1a67fe921",
    "396c6c63a26b098fd0221e830f79be13b7e97432"
  ],
  "changeHistoryShort": {
    "1921e94292f0820985a0cfbf8922a2a1a67fe921": "Ybodychange",
    "396c6c63a26b098fd0221e830f79be13b7e97432": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1921e94292f0820985a0cfbf8922a2a1a67fe921": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16458. LocatedFileStatusFetcher.getFileStatuses failing intermittently with S3\n\nContributed by Steve Loughran.\n\nIncludes\n-S3A glob scans don\u0027t bother trying to resolve symlinks\n-stack traces don\u0027t get lost in getFileStatuses() when exceptions are wrapped\n-debug level logging of what is up in Globber\n-Contains HADOOP-13373. Add S3A implementation of FSMainOperationsBaseTest.\n-ITestRestrictedReadAccess tests incomplete read access to files.\n\nThis adds a builder API for constructing globbers which other stores can use\nso that they too can skip symlink resolution when not needed.\n\nChange-Id: I23bcdb2783d6bd77cf168fdc165b1b4b334d91c7\n",
      "commitDate": "01/10/19 10:11 AM",
      "commitName": "1921e94292f0820985a0cfbf8922a2a1a67fe921",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "03/04/19 11:59 AM",
      "commitNameOld": "d7979079ea8c6514858b77a78f0119cffc178086",
      "commitAuthorOld": "Gabor Bota",
      "daysBetweenCommits": 180.92,
      "commitsBetweenForRepo": 1399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n     public Result call() throws Exception {\n       Result result \u003d new Result();\n       FileSystem fs \u003d path.getFileSystem(conf);\n       result.fs \u003d fs;\n+      LOG.debug(\"ProcessInitialInputPathCallable path {}\", path);\n       FileStatus[] matches \u003d fs.globStatus(path, inputFilter);\n       if (matches \u003d\u003d null) {\n         result.addError(new IOException(\"Input path does not exist: \" + path));\n       } else if (matches.length \u003d\u003d 0) {\n         result.addError(new IOException(\"Input Pattern \" + path\n             + \" matches 0 files\"));\n       } else {\n         result.matchedFileStatuses \u003d matches;\n       }\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Result call() throws Exception {\n      Result result \u003d new Result();\n      FileSystem fs \u003d path.getFileSystem(conf);\n      result.fs \u003d fs;\n      LOG.debug(\"ProcessInitialInputPathCallable path {}\", path);\n      FileStatus[] matches \u003d fs.globStatus(path, inputFilter);\n      if (matches \u003d\u003d null) {\n        result.addError(new IOException(\"Input path does not exist: \" + path));\n      } else if (matches.length \u003d\u003d 0) {\n        result.addError(new IOException(\"Input Pattern \" + path\n            + \" matches 0 files\"));\n      } else {\n        result.matchedFileStatuses \u003d matches;\n      }\n      return result;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/LocatedFileStatusFetcher.java",
      "extendedDetails": {}
    },
    "396c6c63a26b098fd0221e830f79be13b7e97432": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2349. Modified FileInputFormat to be able to issue file and block location calls in parallel. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579515 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/03/14 7:46 PM",
      "commitName": "396c6c63a26b098fd0221e830f79be13b7e97432",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+    public Result call() throws Exception {\n+      Result result \u003d new Result();\n+      FileSystem fs \u003d path.getFileSystem(conf);\n+      result.fs \u003d fs;\n+      FileStatus[] matches \u003d fs.globStatus(path, inputFilter);\n+      if (matches \u003d\u003d null) {\n+        result.addError(new IOException(\"Input path does not exist: \" + path));\n+      } else if (matches.length \u003d\u003d 0) {\n+        result.addError(new IOException(\"Input Pattern \" + path\n+            + \" matches 0 files\"));\n+      } else {\n+        result.matchedFileStatuses \u003d matches;\n+      }\n+      return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public Result call() throws Exception {\n      Result result \u003d new Result();\n      FileSystem fs \u003d path.getFileSystem(conf);\n      result.fs \u003d fs;\n      FileStatus[] matches \u003d fs.globStatus(path, inputFilter);\n      if (matches \u003d\u003d null) {\n        result.addError(new IOException(\"Input path does not exist: \" + path));\n      } else if (matches.length \u003d\u003d 0) {\n        result.addError(new IOException(\"Input Pattern \" + path\n            + \" matches 0 files\"));\n      } else {\n        result.matchedFileStatuses \u003d matches;\n      }\n      return result;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/LocatedFileStatusFetcher.java"
    }
  }
}