{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CryptoCodec.java",
  "functionName": "getCodecClasses",
  "functionId": "getCodecClasses___conf-Configuration__cipherSuite-CipherSuite",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
  "functionStartLine": 105,
  "functionEndLine": 136,
  "numCommitsSeen": 23,
  "timeTaken": 1581,
  "changeHistory": [
    "387f271c81f7b3bf53bddc5368d5f4486530c2e1",
    "a0ccf83dfd6bff81944d6855652eae7f7f7b0ba9",
    "10db613389718d8df519493b958ecd97fca8686d",
    "b52b80d7bdcad00b95619544fa869af56746ebf0",
    "beb0c19cde5db554c4a665cce0a16188070c6a7b"
  ],
  "changeHistoryShort": {
    "387f271c81f7b3bf53bddc5368d5f4486530c2e1": "Ybodychange",
    "a0ccf83dfd6bff81944d6855652eae7f7f7b0ba9": "Ybodychange",
    "10db613389718d8df519493b958ecd97fca8686d": "Ybodychange",
    "b52b80d7bdcad00b95619544fa869af56746ebf0": "Ymultichange(Yparameterchange,Ybodychange)",
    "beb0c19cde5db554c4a665cce0a16188070c6a7b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "387f271c81f7b3bf53bddc5368d5f4486530c2e1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11711. Provide a default value for AES/CTR/NoPadding CryptoCodec classes.\n",
      "commitDate": "12/03/15 9:40 PM",
      "commitName": "387f271c81f7b3bf53bddc5368d5f4486530c2e1",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "25/09/14 6:40 PM",
      "commitNameOld": "e96ce6f3e3e549202ce3c48d4733ba34098870ad",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 168.13,
      "commitsBetweenForRepo": 1355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,32 @@\n   private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n       Configuration conf, CipherSuite cipherSuite) {\n     List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n     String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n         cipherSuite.getConfigSuffix();\n-    String codecString \u003d conf.get(configName);\n+    String codecString;\n+    if (configName.equals(CommonConfigurationKeysPublic\n+        .HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_AES_CTR_NOPADDING_KEY)) {\n+      codecString \u003d conf.get(configName, CommonConfigurationKeysPublic\n+          .HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_AES_CTR_NOPADDING_DEFAULT);\n+    } else {\n+      codecString \u003d conf.get(configName);\n+    }\n     if (codecString \u003d\u003d null) {\n       PerformanceAdvisory.LOG.debug(\n           \"No crypto codec classes with cipher suite configured.\");\n       return null;\n     }\n     for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n         split(codecString)) {\n       try {\n         Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n         result.add(cls.asSubclass(CryptoCodec.class));\n       } catch (ClassCastException e) {\n         PerformanceAdvisory.LOG.debug(\"Class {} is not a CryptoCodec.\", c);\n       } catch (ClassNotFoundException e) {\n         PerformanceAdvisory.LOG.debug(\"Crypto codec {} not found.\", c);\n       }\n     }\n     \n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n      Configuration conf, CipherSuite cipherSuite) {\n    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n        cipherSuite.getConfigSuffix();\n    String codecString;\n    if (configName.equals(CommonConfigurationKeysPublic\n        .HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_AES_CTR_NOPADDING_KEY)) {\n      codecString \u003d conf.get(configName, CommonConfigurationKeysPublic\n          .HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_AES_CTR_NOPADDING_DEFAULT);\n    } else {\n      codecString \u003d conf.get(configName);\n    }\n    if (codecString \u003d\u003d null) {\n      PerformanceAdvisory.LOG.debug(\n          \"No crypto codec classes with cipher suite configured.\");\n      return null;\n    }\n    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n        split(codecString)) {\n      try {\n        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n        result.add(cls.asSubclass(CryptoCodec.class));\n      } catch (ClassCastException e) {\n        PerformanceAdvisory.LOG.debug(\"Class {} is not a CryptoCodec.\", c);\n      } catch (ClassNotFoundException e) {\n        PerformanceAdvisory.LOG.debug(\"Crypto codec {} not found.\", c);\n      }\n    }\n    \n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
      "extendedDetails": {}
    },
    "a0ccf83dfd6bff81944d6855652eae7f7f7b0ba9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6954. With crypto, no native lib systems are too verbose. Contributed by Charles Lamb.\n",
      "commitDate": "02/09/14 2:22 PM",
      "commitName": "a0ccf83dfd6bff81944d6855652eae7f7f7b0ba9",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/08/14 2:56 AM",
      "commitNameOld": "10db613389718d8df519493b958ecd97fca8686d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 29.48,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n       Configuration conf, CipherSuite cipherSuite) {\n     List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n     String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n         cipherSuite.getConfigSuffix();\n     String codecString \u003d conf.get(configName);\n     if (codecString \u003d\u003d null) {\n-      LOG.warn(\"No crypto codec classes with cipher suite configured.\");\n+      PerformanceAdvisory.LOG.debug(\n+          \"No crypto codec classes with cipher suite configured.\");\n       return null;\n     }\n     for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n         split(codecString)) {\n       try {\n         Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n         result.add(cls.asSubclass(CryptoCodec.class));\n       } catch (ClassCastException e) {\n-        LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n+        PerformanceAdvisory.LOG.debug(\"Class {} is not a CryptoCodec.\", c);\n       } catch (ClassNotFoundException e) {\n-        LOG.warn(\"Crypto codec \" + c + \" not found.\");\n+        PerformanceAdvisory.LOG.debug(\"Crypto codec {} not found.\", c);\n       }\n     }\n     \n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n      Configuration conf, CipherSuite cipherSuite) {\n    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n        cipherSuite.getConfigSuffix();\n    String codecString \u003d conf.get(configName);\n    if (codecString \u003d\u003d null) {\n      PerformanceAdvisory.LOG.debug(\n          \"No crypto codec classes with cipher suite configured.\");\n      return null;\n    }\n    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n        split(codecString)) {\n      try {\n        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n        result.add(cls.asSubclass(CryptoCodec.class));\n      } catch (ClassCastException e) {\n        PerformanceAdvisory.LOG.debug(\"Class {} is not a CryptoCodec.\", c);\n      } catch (ClassNotFoundException e) {\n        PerformanceAdvisory.LOG.debug(\"Crypto codec {} not found.\", c);\n      }\n    }\n    \n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
      "extendedDetails": {}
    },
    "10db613389718d8df519493b958ecd97fca8686d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10886. CryptoCodec#getCodecclasses throws NPE when configurations not loaded. Contributed by Uma Maheswara Rao G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1615523 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/08/14 2:56 AM",
      "commitName": "10db613389718d8df519493b958ecd97fca8686d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "22/07/14 1:38 AM",
      "commitNameOld": "b52b80d7bdcad00b95619544fa869af56746ebf0",
      "commitAuthorOld": "Yi Liu",
      "daysBetweenCommits": 13.05,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n       Configuration conf, CipherSuite cipherSuite) {\n     List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n     String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n         cipherSuite.getConfigSuffix();\n     String codecString \u003d conf.get(configName);\n+    if (codecString \u003d\u003d null) {\n+      LOG.warn(\"No crypto codec classes with cipher suite configured.\");\n+      return null;\n+    }\n     for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n         split(codecString)) {\n       try {\n         Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n         result.add(cls.asSubclass(CryptoCodec.class));\n       } catch (ClassCastException e) {\n         LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n       } catch (ClassNotFoundException e) {\n         LOG.warn(\"Crypto codec \" + c + \" not found.\");\n       }\n     }\n     \n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n      Configuration conf, CipherSuite cipherSuite) {\n    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n        cipherSuite.getConfigSuffix();\n    String codecString \u003d conf.get(configName);\n    if (codecString \u003d\u003d null) {\n      LOG.warn(\"No crypto codec classes with cipher suite configured.\");\n      return null;\n    }\n    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n        split(codecString)) {\n      try {\n        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n        result.add(cls.asSubclass(CryptoCodec.class));\n      } catch (ClassCastException e) {\n        LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n      } catch (ClassNotFoundException e) {\n        LOG.warn(\"Crypto codec \" + c + \" not found.\");\n      }\n    }\n    \n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
      "extendedDetails": {}
    },
    "b52b80d7bdcad00b95619544fa869af56746ebf0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10853. Refactor get instance of CryptoCodec and support create via algorithm/mode/padding. (yliu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612513 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/14 1:38 AM",
      "commitName": "b52b80d7bdcad00b95619544fa869af56746ebf0",
      "commitAuthor": "Yi Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10853. Refactor get instance of CryptoCodec and support create via algorithm/mode/padding. (yliu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612513 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/07/14 1:38 AM",
          "commitName": "b52b80d7bdcad00b95619544fa869af56746ebf0",
          "commitAuthor": "Yi Liu",
          "commitDateOld": "15/07/14 5:36 PM",
          "commitNameOld": "beb0c19cde5db554c4a665cce0a16188070c6a7b",
          "commitAuthorOld": "Yi Liu",
          "daysBetweenCommits": 6.33,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n   private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n-      Configuration conf) {\n+      Configuration conf, CipherSuite cipherSuite) {\n     List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n-    String codecString \u003d conf.get(HADOOP_SECURITY_CRYPTO_CODEC_CLASS_KEY,\n-        HADOOP_SECURITY_CRYPTO_CODEC_CLASS_DEFAULT);\n+    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n+        cipherSuite.getConfigSuffix();\n+    String codecString \u003d conf.get(configName);\n     for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n         split(codecString)) {\n       try {\n         Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n         result.add(cls.asSubclass(CryptoCodec.class));\n       } catch (ClassCastException e) {\n         LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n       } catch (ClassNotFoundException e) {\n         LOG.warn(\"Crypto codec \" + c + \" not found.\");\n       }\n     }\n     \n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n      Configuration conf, CipherSuite cipherSuite) {\n    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n        cipherSuite.getConfigSuffix();\n    String codecString \u003d conf.get(configName);\n    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n        split(codecString)) {\n      try {\n        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n        result.add(cls.asSubclass(CryptoCodec.class));\n      } catch (ClassCastException e) {\n        LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n      } catch (ClassNotFoundException e) {\n        LOG.warn(\"Crypto codec \" + c + \" not found.\");\n      }\n    }\n    \n    return result;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[conf-Configuration, cipherSuite-CipherSuite]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10853. Refactor get instance of CryptoCodec and support create via algorithm/mode/padding. (yliu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612513 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/07/14 1:38 AM",
          "commitName": "b52b80d7bdcad00b95619544fa869af56746ebf0",
          "commitAuthor": "Yi Liu",
          "commitDateOld": "15/07/14 5:36 PM",
          "commitNameOld": "beb0c19cde5db554c4a665cce0a16188070c6a7b",
          "commitAuthorOld": "Yi Liu",
          "daysBetweenCommits": 6.33,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n   private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n-      Configuration conf) {\n+      Configuration conf, CipherSuite cipherSuite) {\n     List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n-    String codecString \u003d conf.get(HADOOP_SECURITY_CRYPTO_CODEC_CLASS_KEY,\n-        HADOOP_SECURITY_CRYPTO_CODEC_CLASS_DEFAULT);\n+    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n+        cipherSuite.getConfigSuffix();\n+    String codecString \u003d conf.get(configName);\n     for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n         split(codecString)) {\n       try {\n         Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n         result.add(cls.asSubclass(CryptoCodec.class));\n       } catch (ClassCastException e) {\n         LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n       } catch (ClassNotFoundException e) {\n         LOG.warn(\"Crypto codec \" + c + \" not found.\");\n       }\n     }\n     \n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n      Configuration conf, CipherSuite cipherSuite) {\n    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n    String configName \u003d HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX + \n        cipherSuite.getConfigSuffix();\n    String codecString \u003d conf.get(configName);\n    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n        split(codecString)) {\n      try {\n        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n        result.add(cls.asSubclass(CryptoCodec.class));\n      } catch (ClassCastException e) {\n        LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n      } catch (ClassNotFoundException e) {\n        LOG.warn(\"Crypto codec \" + c + \" not found.\");\n      }\n    }\n    \n    return result;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java",
          "extendedDetails": {}
        }
      ]
    },
    "beb0c19cde5db554c4a665cce0a16188070c6a7b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10735. Fall back AesCtrCryptoCodec implementation from OpenSSL to JCE if non native support. (yliu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1610887 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 5:36 PM",
      "commitName": "beb0c19cde5db554c4a665cce0a16188070c6a7b",
      "commitAuthor": "Yi Liu",
      "diff": "@@ -0,0 +1,19 @@\n+  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n+      Configuration conf) {\n+    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n+    String codecString \u003d conf.get(HADOOP_SECURITY_CRYPTO_CODEC_CLASS_KEY,\n+        HADOOP_SECURITY_CRYPTO_CODEC_CLASS_DEFAULT);\n+    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n+        split(codecString)) {\n+      try {\n+        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n+        result.add(cls.asSubclass(CryptoCodec.class));\n+      } catch (ClassCastException e) {\n+        LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n+      } catch (ClassNotFoundException e) {\n+        LOG.warn(\"Crypto codec \" + c + \" not found.\");\n+      }\n+    }\n+    \n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cClass\u003c? extends CryptoCodec\u003e\u003e getCodecClasses(\n      Configuration conf) {\n    List\u003cClass\u003c? extends CryptoCodec\u003e\u003e result \u003d Lists.newArrayList();\n    String codecString \u003d conf.get(HADOOP_SECURITY_CRYPTO_CODEC_CLASS_KEY,\n        HADOOP_SECURITY_CRYPTO_CODEC_CLASS_DEFAULT);\n    for (String c : Splitter.on(\u0027,\u0027).trimResults().omitEmptyStrings().\n        split(codecString)) {\n      try {\n        Class\u003c?\u003e cls \u003d conf.getClassByName(c);\n        result.add(cls.asSubclass(CryptoCodec.class));\n      } catch (ClassCastException e) {\n        LOG.warn(\"Class \" + c + \" is not a CryptoCodec.\");\n      } catch (ClassNotFoundException e) {\n        LOG.warn(\"Crypto codec \" + c + \" not found.\");\n      }\n    }\n    \n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/CryptoCodec.java"
    }
  }
}