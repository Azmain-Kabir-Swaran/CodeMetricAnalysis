{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenerateDistCacheData.java",
  "functionName": "map",
  "functionId": "map___key-LongWritable__value-BytesWritable__context-Context",
  "sourceFilePath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
  "functionStartLine": 155,
  "functionEndLine": 172,
  "numCommitsSeen": 7,
  "timeTaken": 4471,
  "changeHistory": [
    "c4cba6165a3afbf4f1f8ff6b7f11286772d70d6f",
    "8df9a8e6d22976e3f3e5890200bd41e768864c5b",
    "dcf84707ab50662add112bd6b01c0bfd63374853",
    "170ff8d81c77ae44ae08909b1911fe6930701104",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "c4cba6165a3afbf4f1f8ff6b7f11286772d70d6f": "Ybodychange",
    "8df9a8e6d22976e3f3e5890200bd41e768864c5b": "Ybodychange",
    "dcf84707ab50662add112bd6b01c0bfd63374853": "Yfilerename",
    "170ff8d81c77ae44ae08909b1911fe6930701104": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c4cba6165a3afbf4f1f8ff6b7f11286772d70d6f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11465. Fix findbugs warnings in hadoop-gridmix. (Contributed by Varun Saxena)\n",
      "commitDate": "12/01/15 9:22 PM",
      "commitName": "c4cba6165a3afbf4f1f8ff6b7f11286772d70d6f",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "25/06/13 12:20 PM",
      "commitNameOld": "8df9a8e6d22976e3f3e5890200bd41e768864c5b",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 566.42,
      "commitsBetweenForRepo": 4103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n     public void map(LongWritable key, BytesWritable value, Context context)\n         throws IOException, InterruptedException {\n \n-      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n+      String fileName \u003d new String(value.getBytes(), 0,\n+          value.getLength(), charsetUTF8);\n       Path path \u003d new Path(fileName);\n \n       FSDataOutputStream dos \u003d\n           FileSystem.create(fs, path, new FsPermission(GRIDMIX_DISTCACHE_FILE_PERM));\n \n       int size \u003d 0;\n       for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n         r.nextBytes(val.getBytes());\n         size \u003d (int)Math.min(val.getLength(), bytes);\n         dos.write(val.getBytes(), 0, size);// Write to distCache file\n       }\n       dos.close();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0,\n          value.getLength(), charsetUTF8);\n      Path path \u003d new Path(fileName);\n\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission(GRIDMIX_DISTCACHE_FILE_PERM));\n\n      int size \u003d 0;\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n        r.nextBytes(val.getBytes());\n        size \u003d (int)Math.min(val.getLength(), bytes);\n        dos.write(val.getBytes(), 0, size);// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
      "extendedDetails": {}
    },
    "8df9a8e6d22976e3f3e5890200bd41e768864c5b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9656. Gridmix unit tests fail on Windows and Linux. Contributed by Chuan Liu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496597 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/06/13 12:20 PM",
      "commitName": "8df9a8e6d22976e3f3e5890200bd41e768864c5b",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "17/05/12 8:06 AM",
      "commitNameOld": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 404.18,
      "commitsBetweenForRepo": 2299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,17 @@\n     public void map(LongWritable key, BytesWritable value, Context context)\n         throws IOException, InterruptedException {\n \n       String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n       Path path \u003d new Path(fileName);\n \n-      /**\n-       * Create distributed cache file with the permissions 0755.\n-       * Since the private distributed cache directory doesn\u0027t have execute\n-       * permission for others, it is OK to set read permission for others for\n-       * the files under that directory and still they will become \u0027private\u0027\n-       * distributed cache files on the simulated cluster.\n-       */\n       FSDataOutputStream dos \u003d\n-          FileSystem.create(fs, path, new FsPermission((short)0755));\n+          FileSystem.create(fs, path, new FsPermission(GRIDMIX_DISTCACHE_FILE_PERM));\n \n       int size \u003d 0;\n       for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n         r.nextBytes(val.getBytes());\n         size \u003d (int)Math.min(val.getLength(), bytes);\n         dos.write(val.getBytes(), 0, size);// Write to distCache file\n       }\n       dos.close();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n      Path path \u003d new Path(fileName);\n\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission(GRIDMIX_DISTCACHE_FILE_PERM));\n\n      int size \u003d 0;\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n        r.nextBytes(val.getBytes());\n        size \u003d (int)Math.min(val.getLength(), bytes);\n        dos.write(val.getBytes(), 0, size);// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
      "extendedDetails": {}
    },
    "dcf84707ab50662add112bd6b01c0bfd63374853": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3543. Mavenize Gridmix. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/12 8:06 AM",
      "commitName": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/05/12 7:20 AM",
      "commitNameOld": "e1f09365ca0bee093f849fcf2e546dd6e2c0a965",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n      Path path \u003d new Path(fileName);\n\n      /**\n       * Create distributed cache file with the permissions 0755.\n       * Since the private distributed cache directory doesn\u0027t have execute\n       * permission for others, it is OK to set read permission for others for\n       * the files under that directory and still they will become \u0027private\u0027\n       * distributed cache files on the simulated cluster.\n       */\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission((short)0755));\n\n      int size \u003d 0;\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n        r.nextBytes(val.getBytes());\n        size \u003d (int)Math.min(val.getLength(), bytes);\n        dos.write(val.getBytes(), 0, size);// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
        "newPath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java"
      }
    },
    "170ff8d81c77ae44ae08909b1911fe6930701104": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4087. [Gridmix] GenerateDistCacheData job of Gridmix can become slow in some cases (ravigummadi)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1307740 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/03/12 1:24 AM",
      "commitName": "170ff8d81c77ae44ae08909b1911fe6930701104",
      "commitAuthor": "Ravi Gummadi",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 219.34,
      "commitsBetweenForRepo": 1545,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     public void map(LongWritable key, BytesWritable value, Context context)\n         throws IOException, InterruptedException {\n \n       String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n       Path path \u003d new Path(fileName);\n \n       /**\n        * Create distributed cache file with the permissions 0755.\n        * Since the private distributed cache directory doesn\u0027t have execute\n        * permission for others, it is OK to set read permission for others for\n        * the files under that directory and still they will become \u0027private\u0027\n        * distributed cache files on the simulated cluster.\n        */\n       FSDataOutputStream dos \u003d\n           FileSystem.create(fs, path, new FsPermission((short)0755));\n \n-      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d val.getLength()) {\n+      int size \u003d 0;\n+      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n         r.nextBytes(val.getBytes());\n-        val.setSize((int)Math.min(val.getLength(), bytes));\n-        dos.write(val.getBytes(), 0, val.getLength());// Write to distCache file\n+        size \u003d (int)Math.min(val.getLength(), bytes);\n+        dos.write(val.getBytes(), 0, size);// Write to distCache file\n       }\n       dos.close();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n      Path path \u003d new Path(fileName);\n\n      /**\n       * Create distributed cache file with the permissions 0755.\n       * Since the private distributed cache directory doesn\u0027t have execute\n       * permission for others, it is OK to set read permission for others for\n       * the files under that directory and still they will become \u0027private\u0027\n       * distributed cache files on the simulated cluster.\n       */\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission((short)0755));\n\n      int size \u003d 0;\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d size) {\n        r.nextBytes(val.getBytes());\n        size \u003d (int)Math.min(val.getLength(), bytes);\n        dos.write(val.getBytes(), 0, size);// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n      Path path \u003d new Path(fileName);\n\n      /**\n       * Create distributed cache file with the permissions 0755.\n       * Since the private distributed cache directory doesn\u0027t have execute\n       * permission for others, it is OK to set read permission for others for\n       * the files under that directory and still they will become \u0027private\u0027\n       * distributed cache files on the simulated cluster.\n       */\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission((short)0755));\n\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d val.getLength()) {\n        r.nextBytes(val.getBytes());\n        val.setSize((int)Math.min(val.getLength(), bytes));\n        dos.write(val.getBytes(), 0, val.getLength());// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n      Path path \u003d new Path(fileName);\n\n      /**\n       * Create distributed cache file with the permissions 0755.\n       * Since the private distributed cache directory doesn\u0027t have execute\n       * permission for others, it is OK to set read permission for others for\n       * the files under that directory and still they will become \u0027private\u0027\n       * distributed cache files on the simulated cluster.\n       */\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission((short)0755));\n\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d val.getLength()) {\n        r.nextBytes(val.getBytes());\n        val.setSize((int)Math.min(val.getLength(), bytes));\n        dos.write(val.getBytes(), 0, val.getLength());// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java",
        "newPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,23 @@\n+    public void map(LongWritable key, BytesWritable value, Context context)\n+        throws IOException, InterruptedException {\n+\n+      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n+      Path path \u003d new Path(fileName);\n+\n+      /**\n+       * Create distributed cache file with the permissions 0755.\n+       * Since the private distributed cache directory doesn\u0027t have execute\n+       * permission for others, it is OK to set read permission for others for\n+       * the files under that directory and still they will become \u0027private\u0027\n+       * distributed cache files on the simulated cluster.\n+       */\n+      FSDataOutputStream dos \u003d\n+          FileSystem.create(fs, path, new FsPermission((short)0755));\n+\n+      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d val.getLength()) {\n+        r.nextBytes(val.getBytes());\n+        val.setSize((int)Math.min(val.getLength(), bytes));\n+        dos.write(val.getBytes(), 0, val.getLength());// Write to distCache file\n+      }\n+      dos.close();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void map(LongWritable key, BytesWritable value, Context context)\n        throws IOException, InterruptedException {\n\n      String fileName \u003d new String(value.getBytes(), 0, value.getLength());\n      Path path \u003d new Path(fileName);\n\n      /**\n       * Create distributed cache file with the permissions 0755.\n       * Since the private distributed cache directory doesn\u0027t have execute\n       * permission for others, it is OK to set read permission for others for\n       * the files under that directory and still they will become \u0027private\u0027\n       * distributed cache files on the simulated cluster.\n       */\n      FSDataOutputStream dos \u003d\n          FileSystem.create(fs, path, new FsPermission((short)0755));\n\n      for (long bytes \u003d key.get(); bytes \u003e 0; bytes -\u003d val.getLength()) {\n        r.nextBytes(val.getBytes());\n        val.setSize((int)Math.min(val.getLength(), bytes));\n        dos.write(val.getBytes(), 0, val.getLength());// Write to distCache file\n      }\n      dos.close();\n    }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GenerateDistCacheData.java"
    }
  }
}