{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "replaceLabelsOnNode",
  "functionId": "replaceLabelsOnNode___newLabelsForNode-Map__NodeId,Set__String______hsr-HttpServletRequest__operation-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1298,
  "functionEndLine": 1325,
  "numCommitsSeen": 140,
  "timeTaken": 5638,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "2750fb900fc9c468570d051cb19e3a379a898c38",
    "db9304788187c700647c4d84caeb3b5ad6d868d8",
    "db1b674b50ddecf2774f4092d677c412722bdcb1",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "2750fb900fc9c468570d051cb19e3a379a898c38": "Ybodychange",
    "db9304788187c700647c4d84caeb3b5ad6d868d8": "Ybodychange",
    "db1b674b50ddecf2774f4092d677c412722bdcb1": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange,Yparametermetachange)",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   private Response replaceLabelsOnNode(\n       Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n       String operation) throws IOException {\n-    init();\n \n     NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(\"replaceLabelsOnNode\",\n         isCentralizedNodeLabelConfiguration);\n \n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n           + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n \n     if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n       String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n           + \" for post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n     try {\n       rm.getRMContext().getNodeLabelManager()\n           .replaceLabelsOnNode(newLabelsForNode);\n     } catch (IOException e) {\n       throw new BadRequestException(e);\n     }\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n\n    NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(\"replaceLabelsOnNode\",\n        isCentralizedNodeLabelConfiguration);\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n          + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n          + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n    try {\n      rm.getRMContext().getNodeLabelManager()\n          .replaceLabelsOnNode(newLabelsForNode);\n    } catch (IOException e) {\n      throw new BadRequestException(e);\n    }\n\n    return Response.status(Status.OK).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "2750fb900fc9c468570d051cb19e3a379a898c38": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4926. Change nodelabel rest API invalid reponse status to 400. Contributed by Bibin A Chundatt\n",
      "commitDate": "08/05/16 10:19 AM",
      "commitName": "2750fb900fc9c468570d051cb19e3a379a898c38",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "06/05/16 3:30 PM",
      "commitNameOld": "23248f63aab74a19dba38d348f2b231c8360770a",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n   private Response replaceLabelsOnNode(\n       Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n       String operation) throws IOException {\n     init();\n \n     NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(\n         \"replaceLabelsOnNode\", isCentralizedNodeLabelConfiguration);\n \n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d\n           \"Unable to obtain user name, user not authenticated for\"\n               + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n \n     if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n       String msg \u003d\n           \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n               + \" for post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n-\n-    rm.getRMContext().getNodeLabelManager()\n-        .replaceLabelsOnNode(newLabelsForNode);\n+    try {\n+      rm.getRMContext().getNodeLabelManager()\n+          .replaceLabelsOnNode(newLabelsForNode);\n+    } catch (IOException e) {\n+      throw new BadRequestException(e);\n+    }\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(\n        \"replaceLabelsOnNode\", isCentralizedNodeLabelConfiguration);\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n    try {\n      rm.getRMContext().getNodeLabelManager()\n          .replaceLabelsOnNode(newLabelsForNode);\n    } catch (IOException e) {\n      throw new BadRequestException(e);\n    }\n\n    return Response.status(Status.OK).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "db9304788187c700647c4d84caeb3b5ad6d868d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3964. Support NodeLabelsProvider at Resource Manager side.\nContributed by Dian Fu.\n",
      "commitDate": "10/10/15 10:51 PM",
      "commitName": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "04/09/15 2:01 AM",
      "commitNameOld": "40d222e862063dc6c474cc6e8de0dce6c4395012",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 36.87,
      "commitsBetweenForRepo": 259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   private Response replaceLabelsOnNode(\n       Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n       String operation) throws IOException {\n     init();\n \n-    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n+    NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(\n+        \"replaceLabelsOnNode\", isCentralizedNodeLabelConfiguration);\n \n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d\n           \"Unable to obtain user name, user not authenticated for\"\n               + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n \n     if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n       String msg \u003d\n           \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n               + \" for post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n \n     rm.getRMContext().getNodeLabelManager()\n         .replaceLabelsOnNode(newLabelsForNode);\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(\n        \"replaceLabelsOnNode\", isCentralizedNodeLabelConfiguration);\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    rm.getRMContext().getNodeLabelManager()\n        .replaceLabelsOnNode(newLabelsForNode);\n\n    return Response.status(Status.OK).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "db1b674b50ddecf2774f4092d677c412722bdcb1": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
      "commitDate": "27/04/15 4:24 PM",
      "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/04/15 4:24 PM",
          "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.21,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  public Response replaceLabelsOnNodes(\n-    final NodeToLabelsInfo newNodeToLabels,\n-    @Context HttpServletRequest hsr) \n-    throws IOException {\n+  private Response replaceLabelsOnNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n+      String operation) throws IOException {\n     init();\n-    \n+\n+    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n+\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n-        + \" post to .../replace-node-to-labels\";\n+      String msg \u003d\n+          \"Unable to obtain user name, user not authenticated for\"\n+              + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n-    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n-      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n-        + \" for post to .../replace-node-to-labels \";\n-      throw new AuthorizationException(msg);\n-    }\n-    \n-    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n-      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n \n-    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n-      newNodeToLabels.getNodeToLabels().entrySet()) {\n-     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n-       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d\n+          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+              + \" for post to ...\" + operation;\n+      throw new AuthorizationException(msg);\n     }\n-    \n-    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n+\n+    rm.getRMContext().getNodeLabelManager()\n+        .replaceLabelsOnNode(newLabelsForNode);\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    rm.getRMContext().getNodeLabelManager()\n        .replaceLabelsOnNode(newLabelsForNode);\n\n    return Response.status(Status.OK).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "replaceLabelsOnNodes",
            "newValue": "replaceLabelsOnNode"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/04/15 4:24 PM",
          "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.21,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  public Response replaceLabelsOnNodes(\n-    final NodeToLabelsInfo newNodeToLabels,\n-    @Context HttpServletRequest hsr) \n-    throws IOException {\n+  private Response replaceLabelsOnNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n+      String operation) throws IOException {\n     init();\n-    \n+\n+    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n+\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n-        + \" post to .../replace-node-to-labels\";\n+      String msg \u003d\n+          \"Unable to obtain user name, user not authenticated for\"\n+              + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n-    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n-      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n-        + \" for post to .../replace-node-to-labels \";\n-      throw new AuthorizationException(msg);\n-    }\n-    \n-    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n-      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n \n-    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n-      newNodeToLabels.getNodeToLabels().entrySet()) {\n-     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n-       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d\n+          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+              + \" for post to ...\" + operation;\n+      throw new AuthorizationException(msg);\n     }\n-    \n-    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n+\n+    rm.getRMContext().getNodeLabelManager()\n+        .replaceLabelsOnNode(newLabelsForNode);\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    rm.getRMContext().getNodeLabelManager()\n        .replaceLabelsOnNode(newLabelsForNode);\n\n    return Response.status(Status.OK).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[newNodeToLabels-NodeToLabelsInfo(modifiers-final), hsr-HttpServletRequest(annotations-@Context)]",
            "newValue": "[newLabelsForNode-Map\u003cNodeId,Set\u003cString\u003e\u003e, hsr-HttpServletRequest, operation-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/04/15 4:24 PM",
          "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.21,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  public Response replaceLabelsOnNodes(\n-    final NodeToLabelsInfo newNodeToLabels,\n-    @Context HttpServletRequest hsr) \n-    throws IOException {\n+  private Response replaceLabelsOnNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n+      String operation) throws IOException {\n     init();\n-    \n+\n+    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n+\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n-        + \" post to .../replace-node-to-labels\";\n+      String msg \u003d\n+          \"Unable to obtain user name, user not authenticated for\"\n+              + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n-    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n-      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n-        + \" for post to .../replace-node-to-labels \";\n-      throw new AuthorizationException(msg);\n-    }\n-    \n-    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n-      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n \n-    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n-      newNodeToLabels.getNodeToLabels().entrySet()) {\n-     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n-       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d\n+          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+              + \" for post to ...\" + operation;\n+      throw new AuthorizationException(msg);\n     }\n-    \n-    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n+\n+    rm.getRMContext().getNodeLabelManager()\n+        .replaceLabelsOnNode(newLabelsForNode);\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    rm.getRMContext().getNodeLabelManager()\n        .replaceLabelsOnNode(newLabelsForNode);\n\n    return Response.status(Status.OK).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/04/15 4:24 PM",
          "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.21,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  public Response replaceLabelsOnNodes(\n-    final NodeToLabelsInfo newNodeToLabels,\n-    @Context HttpServletRequest hsr) \n-    throws IOException {\n+  private Response replaceLabelsOnNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n+      String operation) throws IOException {\n     init();\n-    \n+\n+    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n+\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n-        + \" post to .../replace-node-to-labels\";\n+      String msg \u003d\n+          \"Unable to obtain user name, user not authenticated for\"\n+              + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n-    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n-      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n-        + \" for post to .../replace-node-to-labels \";\n-      throw new AuthorizationException(msg);\n-    }\n-    \n-    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n-      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n \n-    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n-      newNodeToLabels.getNodeToLabels().entrySet()) {\n-     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n-       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d\n+          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+              + \" for post to ...\" + operation;\n+      throw new AuthorizationException(msg);\n     }\n-    \n-    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n+\n+    rm.getRMContext().getNodeLabelManager()\n+        .replaceLabelsOnNode(newLabelsForNode);\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    rm.getRMContext().getNodeLabelManager()\n        .replaceLabelsOnNode(newLabelsForNode);\n\n    return Response.status(Status.OK).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/04/15 4:24 PM",
          "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.21,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  public Response replaceLabelsOnNodes(\n-    final NodeToLabelsInfo newNodeToLabels,\n-    @Context HttpServletRequest hsr) \n-    throws IOException {\n+  private Response replaceLabelsOnNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n+      String operation) throws IOException {\n     init();\n-    \n+\n+    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n+\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n-        + \" post to .../replace-node-to-labels\";\n+      String msg \u003d\n+          \"Unable to obtain user name, user not authenticated for\"\n+              + \" post to ...\" + operation;\n       throw new AuthorizationException(msg);\n     }\n-    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n-      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n-        + \" for post to .../replace-node-to-labels \";\n-      throw new AuthorizationException(msg);\n-    }\n-    \n-    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n-      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n \n-    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n-      newNodeToLabels.getNodeToLabels().entrySet()) {\n-     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n-       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d\n+          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+              + \" for post to ...\" + operation;\n+      throw new AuthorizationException(msg);\n     }\n-    \n-    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n+\n+    rm.getRMContext().getNodeLabelManager()\n+        .replaceLabelsOnNode(newLabelsForNode);\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response replaceLabelsOnNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode, HttpServletRequest hsr,\n      String operation) throws IOException {\n    init();\n\n    checkAndThrowIfDistributedNodeLabelConfEnabled(\"replaceLabelsOnNode\");\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d\n          \"Unable to obtain user name, user not authenticated for\"\n              + \" post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d\n          \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n              + \" for post to ...\" + operation;\n      throw new AuthorizationException(msg);\n    }\n\n    rm.getRMContext().getNodeLabelManager()\n        .replaceLabelsOnNode(newLabelsForNode);\n\n    return Response.status(Status.OK).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[newNodeToLabels-NodeToLabelsInfo(modifiers-final), hsr-HttpServletRequest(annotations-@Context)]",
            "newValue": "[newLabelsForNode-Map\u003cNodeId,Set\u003cString\u003e\u003e, hsr-HttpServletRequest, operation-String]"
          }
        }
      ]
    },
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2505. Supported get/add/remove/change labels in RM REST API. Contributed by Craig Welch.\n",
      "commitDate": "07/11/14 8:35 PM",
      "commitName": "9a4e0d343e9e891c10ef6682e7b2231a59e69ade",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,31 @@\n+  public Response replaceLabelsOnNodes(\n+    final NodeToLabelsInfo newNodeToLabels,\n+    @Context HttpServletRequest hsr) \n+    throws IOException {\n+    init();\n+    \n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    if (callerUGI \u003d\u003d null) {\n+      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n+        + \" post to .../replace-node-to-labels\";\n+      throw new AuthorizationException(msg);\n+    }\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+        + \" for post to .../replace-node-to-labels \";\n+      throw new AuthorizationException(msg);\n+    }\n+    \n+    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n+      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n+\n+    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n+      newNodeToLabels.getNodeToLabels().entrySet()) {\n+     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n+       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n+    }\n+    \n+    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n+\n+    return Response.status(Status.OK).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response replaceLabelsOnNodes(\n    final NodeToLabelsInfo newNodeToLabels,\n    @Context HttpServletRequest hsr) \n    throws IOException {\n    init();\n    \n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n        + \" post to .../replace-node-to-labels\";\n      throw new AuthorizationException(msg);\n    }\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n        + \" for post to .../replace-node-to-labels \";\n      throw new AuthorizationException(msg);\n    }\n    \n    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d \n      new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n\n    for (Map.Entry\u003cString, NodeLabelsInfo\u003e nitle : \n      newNodeToLabels.getNodeToLabels().entrySet()) {\n     nodeIdToLabels.put(ConverterUtils.toNodeIdWithDefaultPort(nitle.getKey()),\n       new HashSet\u003cString\u003e(nitle.getValue().getNodeLabels()));\n    }\n    \n    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(nodeIdToLabels);\n\n    return Response.status(Status.OK).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}