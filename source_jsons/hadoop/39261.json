{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "shouldSkipNodeSchedule",
  "functionId": "shouldSkipNodeSchedule___node-FiCaSchedulerNode__cs-CapacityScheduler__printVerboseLog-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 504,
  "functionEndLine": 518,
  "numCommitsSeen": 239,
  "timeTaken": 2740,
  "changeHistory": [
    "e9c72d04beddfe0252d2e81123a9fe66bdf04078"
  ],
  "changeHistoryShort": {
    "e9c72d04beddfe0252d2e81123a9fe66bdf04078": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e9c72d04beddfe0252d2e81123a9fe66bdf04078": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7790. Improve Capacity Scheduler Async Scheduling to better handle node failures. Contributed by Wangda Tan.\n",
      "commitDate": "29/01/18 7:14 AM",
      "commitName": "e9c72d04beddfe0252d2e81123a9fe66bdf04078",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,15 @@\n+  private static boolean shouldSkipNodeSchedule(FiCaSchedulerNode node,\n+      CapacityScheduler cs, boolean printVerboseLog) {\n+    // Skip node which missed 2 heartbeats since the node might be dead and\n+    // we should not continue allocate containers on that.\n+    long timeElapsedFromLastHeartbeat \u003d\n+        Time.monotonicNow() - node.getLastHeartbeatMonotonicTime();\n+    if (timeElapsedFromLastHeartbeat \u003e cs.nmHeartbeatInterval * 2) {\n+      if (printVerboseLog \u0026\u0026 LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skip scheduling on node because it haven\u0027t heartbeated for \"\n+            + timeElapsedFromLastHeartbeat / 1000.0f + \" secs\");\n+      }\n+      return true;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean shouldSkipNodeSchedule(FiCaSchedulerNode node,\n      CapacityScheduler cs, boolean printVerboseLog) {\n    // Skip node which missed 2 heartbeats since the node might be dead and\n    // we should not continue allocate containers on that.\n    long timeElapsedFromLastHeartbeat \u003d\n        Time.monotonicNow() - node.getLastHeartbeatMonotonicTime();\n    if (timeElapsedFromLastHeartbeat \u003e cs.nmHeartbeatInterval * 2) {\n      if (printVerboseLog \u0026\u0026 LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip scheduling on node because it haven\u0027t heartbeated for \"\n            + timeElapsedFromLastHeartbeat / 1000.0f + \" secs\");\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}