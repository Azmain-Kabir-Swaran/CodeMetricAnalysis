{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryClientService.java",
  "functionName": "initializeWebApp",
  "functionId": "initializeWebApp___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
  "functionStartLine": 156,
  "functionEndLine": 180,
  "numCommitsSeen": 38,
  "timeTaken": 9120,
  "changeHistory": [
    "7f3e1e0c07c33e08f9a2c06bd4573638ba11ca47",
    "13cea0412c11ce9ef7e475198a24e71788cf0b2f",
    "22fcd819f0c445be661e644ed67221f867013af8",
    "e51a8c10560e5db5cf01fd530af48825cb51c9ea",
    "e52f67e3897a67a0b6d29e557a31cfa881738821",
    "1152e23ed03e8831a3167a729503aad3cbcb4ee7",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "5adba5597ce071c2e84d0c9834e1d9e5e76f9bdb",
    "e86036662c139cd7e67e69a0215471b1ec724a05",
    "48414b08277b86cdbc34ae36d7c4d204fd838294",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "5f6adcf396b78934d7da2bba0d052038ff962f26",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "7f3e1e0c07c33e08f9a2c06bd4573638ba11ca47": "Ybodychange",
    "13cea0412c11ce9ef7e475198a24e71788cf0b2f": "Ymultichange(Yexceptionschange,Ybodychange)",
    "22fcd819f0c445be661e644ed67221f867013af8": "Ybodychange",
    "e51a8c10560e5db5cf01fd530af48825cb51c9ea": "Ybodychange",
    "e52f67e3897a67a0b6d29e557a31cfa881738821": "Ybodychange",
    "1152e23ed03e8831a3167a729503aad3cbcb4ee7": "Ymodifierchange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ybodychange",
    "5adba5597ce071c2e84d0c9834e1d9e5e76f9bdb": "Ybodychange",
    "e86036662c139cd7e67e69a0215471b1ec724a05": "Ybodychange",
    "48414b08277b86cdbc34ae36d7c4d204fd838294": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "5f6adcf396b78934d7da2bba0d052038ff962f26": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f3e1e0c07c33e08f9a2c06bd4573638ba11ca47": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7260. Cross origin request support for Job history server web UI. Contributed by Adam Antal\n",
      "commitDate": "29/01/20 5:42 AM",
      "commitName": "7f3e1e0c07c33e08f9a2c06bd4573638ba11ca47",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "14/01/20 2:00 AM",
      "commitNameOld": "13cea0412c11ce9ef7e475198a24e71788cf0b2f",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 15.15,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   protected void initializeWebApp(Configuration conf) throws IOException {\n     webApp \u003d new HsWebApp(history);\n+\n+    setupFilters(conf);\n+\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n     ApplicationClientProtocol appClientProtocol \u003d\n         ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n         .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n         .withAppClientProtocol(appClientProtocol)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n     String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n         connectHost + \":\" + webApp.getListenerAddress().getPort());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeWebApp(Configuration conf) throws IOException {\n    webApp \u003d new HsWebApp(history);\n\n    setupFilters(conf);\n\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    ApplicationClientProtocol appClientProtocol \u003d\n        ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n        .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n        .withAppClientProtocol(appClientProtocol)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        connectHost + \":\" + webApp.getListenerAddress().getPort());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "13cea0412c11ce9ef7e475198a24e71788cf0b2f": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-10028. Integrate the new abstract log servlet to the JobHistory server. Contributed by Adam Antal\n",
      "commitDate": "14/01/20 2:00 AM",
      "commitName": "13cea0412c11ce9ef7e475198a24e71788cf0b2f",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-10028. Integrate the new abstract log servlet to the JobHistory server. Contributed by Adam Antal\n",
          "commitDate": "14/01/20 2:00 AM",
          "commitName": "13cea0412c11ce9ef7e475198a24e71788cf0b2f",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "08/11/17 2:21 AM",
          "commitNameOld": "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 796.99,
          "commitsBetweenForRepo": 6156,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  protected void initializeWebApp(Configuration conf) {\n+  protected void initializeWebApp(Configuration conf) throws IOException {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n+    ApplicationClientProtocol appClientProtocol \u003d\n+        ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n         .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n+        .withAppClientProtocol(appClientProtocol)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n     String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n         connectHost + \":\" + webApp.getListenerAddress().getPort());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void initializeWebApp(Configuration conf) throws IOException {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    ApplicationClientProtocol appClientProtocol \u003d\n        ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n        .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n        .withAppClientProtocol(appClientProtocol)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        connectHost + \":\" + webApp.getListenerAddress().getPort());\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10028. Integrate the new abstract log servlet to the JobHistory server. Contributed by Adam Antal\n",
          "commitDate": "14/01/20 2:00 AM",
          "commitName": "13cea0412c11ce9ef7e475198a24e71788cf0b2f",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "08/11/17 2:21 AM",
          "commitNameOld": "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 796.99,
          "commitsBetweenForRepo": 6156,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  protected void initializeWebApp(Configuration conf) {\n+  protected void initializeWebApp(Configuration conf) throws IOException {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n+    ApplicationClientProtocol appClientProtocol \u003d\n+        ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n         .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n+        .withAppClientProtocol(appClientProtocol)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n     String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n         connectHost + \":\" + webApp.getListenerAddress().getPort());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void initializeWebApp(Configuration conf) throws IOException {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    ApplicationClientProtocol appClientProtocol \u003d\n        ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n        .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n        .withAppClientProtocol(appClientProtocol)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        connectHost + \":\" + webApp.getListenerAddress().getPort());\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {}
        }
      ]
    },
    "22fcd819f0c445be661e644ed67221f867013af8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5076. YARN web interfaces lack XFS protection. Contributed by Jonathan Maron.\n(cherry picked from commit 2703ec68712279494d67b0d76b7ac10e7a1628be)\n",
      "commitDate": "19/05/16 2:15 PM",
      "commitName": "22fcd819f0c445be661e644ed67221f867013af8",
      "commitAuthor": "Junping Du",
      "commitDateOld": "07/03/16 1:56 AM",
      "commitNameOld": "e51a8c10560e5db5cf01fd530af48825cb51c9ea",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 73.47,
      "commitsBetweenForRepo": 464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   protected void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n+        .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n     String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n         connectHost + \":\" + webApp.getListenerAddress().getPort());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n        .withXFSProtection(JHAdminConfig.MR_HISTORY_XFS_PREFIX)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        connectHost + \":\" + webApp.getListenerAddress().getPort());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "e51a8c10560e5db5cf01fd530af48825cb51c9ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4737. Add CSRF filter support in YARN. Contributed by Jonathan Maron.\n",
      "commitDate": "07/03/16 1:56 AM",
      "commitName": "e51a8c10560e5db5cf01fd530af48825cb51c9ea",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "01/12/14 2:39 PM",
      "commitNameOld": "0c588904f8b68cad219d2bd8e33081d5cae656e5",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 461.47,
      "commitsBetweenForRepo": 3599,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   protected void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n+        .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n     String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n         connectHost + \":\" + webApp.getListenerAddress().getPort());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .withCSRFProtection(JHAdminConfig.MR_HISTORY_CSRF_PREFIX)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        connectHost + \":\" + webApp.getListenerAddress().getPort());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "e52f67e3897a67a0b6d29e557a31cfa881738821": {
      "type": "Ybodychange",
      "commitMessage": "    YARN-1994. Expose YARN/MR endpoints on multiple interfaces. Contributed by Craig Welch, Milan Potocnik,and Arpit Agarwal\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1614981 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 1:06 PM",
      "commitName": "e52f67e3897a67a0b6d29e557a31cfa881738821",
      "commitAuthor": "Xuan Gong",
      "commitDateOld": "08/05/14 2:22 PM",
      "commitNameOld": "e2c18809d313f73fe476f6fa9e2753cb7d46947a",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 83.95,
      "commitsBetweenForRepo": 541,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   protected void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n+    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n-        NetUtils.getHostPortString(webApp.getListenerAddress()));\n+        connectHost + \":\" + webApp.getListenerAddress().getPort());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    String connectHost \u003d MRWebAppUtil.getJHSWebappURLWithoutScheme(conf).split(\":\")[0];\n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        connectHost + \":\" + webApp.getListenerAddress().getPort());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "1152e23ed03e8831a3167a729503aad3cbcb4ee7": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1463. Tests should avoid starting http-server where possible or creates spnego keytab/principals (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/12/13 10:55 PM",
      "commitName": "1152e23ed03e8831a3167a729503aad3cbcb4ee7",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "01/10/13 3:52 PM",
      "commitNameOld": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 87.34,
      "commitsBetweenForRepo": 549,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  private void initializeWebApp(Configuration conf) {\n+  protected void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     \n     MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n         NetUtils.getHostPortString(webApp.getListenerAddress()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        NetUtils.getHostPortString(webApp.getListenerAddress()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/08/13 3:59 PM",
      "commitNameOld": "5adba5597ce071c2e84d0c9834e1d9e5e76f9bdb",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 36.0,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n-    InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n-        JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n-        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n-        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n+    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n             JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n-    conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n-                           webApp.getListenerAddress());\n+    \n+    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n+        NetUtils.getHostPortString(webApp.getListenerAddress()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d MRWebAppUtil.getJHSWebBindAddress(conf);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    \n    MRWebAppUtil.setJHSWebappURLWithoutScheme(conf,\n        NetUtils.getHostPortString(webApp.getListenerAddress()));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "5adba5597ce071c2e84d0c9834e1d9e5e76f9bdb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1085. Addendum patch to address issues with the earlier patch.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/08/13 3:59 PM",
      "commitName": "5adba5597ce071c2e84d0c9834e1d9e5e76f9bdb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/08/13 7:47 PM",
      "commitNameOld": "e86036662c139cd7e67e69a0215471b1ec724a05",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.84,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n         JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n     // NOTE: there should be a .at(InetSocketAddress)\n     WebApps\n         .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n         .with(conf)\n         .withHttpSpnegoKeytabKey(\n-            YarnConfiguration.JHS_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n+            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n         .withHttpSpnegoPrincipalKey(\n-            YarnConfiguration.JHS_WEBAPP_SPNEGO_USER_NAME_KEY)\n+            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n         .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n                            webApp.getListenerAddress());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n        JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            JHAdminConfig.MR_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n                           webApp.getListenerAddress());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "e86036662c139cd7e67e69a0215471b1ec724a05": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1085. Modified YARN and MR2 web-apps to do HTTP authentication in secure setup with kerberos. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517101 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/13 7:47 PM",
      "commitName": "e86036662c139cd7e67e69a0215471b1ec724a05",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 67.84,
      "commitsBetweenForRepo": 409,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n         JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n     // NOTE: there should be a .at(InetSocketAddress)\n-    WebApps.$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n-        .with(conf).at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n+    WebApps\n+        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n+        .with(conf)\n+        .withHttpSpnegoKeytabKey(\n+            YarnConfiguration.JHS_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n+        .withHttpSpnegoPrincipalKey(\n+            YarnConfiguration.JHS_WEBAPP_SPNEGO_USER_NAME_KEY)\n+        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n     conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n                            webApp.getListenerAddress());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n        JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps\n        .$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf)\n        .withHttpSpnegoKeytabKey(\n            YarnConfiguration.JHS_WEBAPP_SPNEGO_KEYTAB_FILE_KEY)\n        .withHttpSpnegoPrincipalKey(\n            YarnConfiguration.JHS_WEBAPP_SPNEGO_USER_NAME_KEY)\n        .at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n                           webApp.getListenerAddress());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "48414b08277b86cdbc34ae36d7c4d204fd838294": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4163. consistently set the bind address (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1333579 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/12 11:35 AM",
      "commitName": "48414b08277b86cdbc34ae36d7c4d204fd838294",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "19/04/12 1:33 PM",
      "commitNameOld": "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 13.92,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,12 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n-    String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n-        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n-    WebApps.$for(\"jobhistory\", HistoryClientService.class, this, \"ws\").with(conf).at(bindAddress).start(webApp);\n+    InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n+        JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n+        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n+        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n+    // NOTE: there should be a .at(InetSocketAddress)\n+    WebApps.$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n+        .with(conf).at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n+    conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n+                           webApp.getListenerAddress());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    InetSocketAddress bindAddress \u003d conf.getSocketAddr(\n        JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT);\n    // NOTE: there should be a .at(InetSocketAddress)\n    WebApps.$for(\"jobhistory\", HistoryClientService.class, this, \"ws\")\n        .with(conf).at(NetUtils.getHostPortString(bindAddress)).start(webApp);\n    conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n                           webApp.getListenerAddress());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/10/11 11:45 PM",
      "commitNameOld": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 46.68,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n-    WebApps.$for(\"jobhistory\", this).with(conf).at(bindAddress).start(webApp); \n+    WebApps.$for(\"jobhistory\", HistoryClientService.class, this, \"ws\").with(conf).at(bindAddress).start(webApp);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    WebApps.$for(\"jobhistory\", HistoryClientService.class, this, \"ws\").with(conf).at(bindAddress).start(webApp);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/10/11 11:07 PM",
      "commitNameOld": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n-    WebApps.$for(\"jobhistory\", this).at(bindAddress).start(webApp); \n+    WebApps.$for(\"jobhistory\", this).with(conf).at(bindAddress).start(webApp); \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    WebApps.$for(\"jobhistory\", this).with(conf).at(bindAddress).start(webApp); \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "5f6adcf396b78934d7da2bba0d052038ff962f26": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3021. Change base urls for RM web-ui. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176681 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 6:23 PM",
      "commitName": "5f6adcf396b78934d7da2bba0d052038ff962f26",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 18.98,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n     String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n         JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n-    WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n+    WebApps.$for(\"jobhistory\", this).at(bindAddress).start(webApp); \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    WebApps.$for(\"jobhistory\", this).at(bindAddress).start(webApp); \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 1:59 PM",
      "commitNameOld": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private void initializeWebApp(Configuration conf) {\n     webApp \u003d new HsWebApp(history);\n-    String bindAddress \u003d conf.get(JHConfig.HS_WEBAPP_BIND_ADDRESS,\n-        JHConfig.DEFAULT_HS_WEBAPP_BIND_ADDRESS);\n+    String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n+        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n     WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    String bindAddress \u003d conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n        JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2677. Fixed 404 for some links from HistoryServer. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166901 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 1:59 PM",
      "commitName": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 14.86,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private void initializeWebApp(Configuration conf) {\n-    webApp \u003d new HSWebApp(history);\n+    webApp \u003d new HsWebApp(history);\n     String bindAddress \u003d conf.get(JHConfig.HS_WEBAPP_BIND_ADDRESS,\n         JHConfig.DEFAULT_HS_WEBAPP_BIND_ADDRESS);\n     WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HsWebApp(history);\n    String bindAddress \u003d conf.get(JHConfig.HS_WEBAPP_BIND_ADDRESS,\n        JHConfig.DEFAULT_HS_WEBAPP_BIND_ADDRESS);\n    WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HSWebApp(history);\n    String bindAddress \u003d conf.get(JHConfig.HS_WEBAPP_BIND_ADDRESS,\n        JHConfig.DEFAULT_HS_WEBAPP_BIND_ADDRESS);\n    WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,6 @@\n+  private void initializeWebApp(Configuration conf) {\n+    webApp \u003d new HSWebApp(history);\n+    String bindAddress \u003d conf.get(JHConfig.HS_WEBAPP_BIND_ADDRESS,\n+        JHConfig.DEFAULT_HS_WEBAPP_BIND_ADDRESS);\n+    WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeWebApp(Configuration conf) {\n    webApp \u003d new HSWebApp(history);\n    String bindAddress \u003d conf.get(JHConfig.HS_WEBAPP_BIND_ADDRESS,\n        JHConfig.DEFAULT_HS_WEBAPP_BIND_ADDRESS);\n    WebApps.$for(\"yarn\", this).at(bindAddress).start(webApp); \n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java"
    }
  }
}