{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CopyCommitter.java",
  "functionName": "commitData",
  "functionId": "commitData___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
  "functionStartLine": 580,
  "functionEndLine": 606,
  "numCommitsSeen": 23,
  "timeTaken": 649,
  "changeHistory": [
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,27 @@\n+  private void commitData(Configuration conf) throws IOException {\n+\n+    Path workDir \u003d new Path(conf.get(DistCpConstants.CONF_LABEL_TARGET_WORK_PATH));\n+    Path finalDir \u003d new Path(conf.get(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH));\n+    FileSystem targetFS \u003d workDir.getFileSystem(conf);\n+\n+    LOG.info(\"Atomic commit enabled. Moving \" + workDir + \" to \" + finalDir);\n+    if (targetFS.exists(finalDir) \u0026\u0026 targetFS.exists(workDir)) {\n+      LOG.error(\"Pre-existing final-path found at: \" + finalDir);\n+      throw new IOException(\"Target-path can\u0027t be committed to because it \" +\n+          \"exists at \" + finalDir + \". Copied data is in temp-dir: \" + workDir + \". \");\n+    }\n+\n+    boolean result \u003d targetFS.rename(workDir, finalDir);\n+    if (!result) {\n+      LOG.warn(\"Rename failed. Perhaps data already moved. Verifying...\");\n+      result \u003d targetFS.exists(finalDir) \u0026\u0026 !targetFS.exists(workDir);\n+    }\n+    if (result) {\n+      LOG.info(\"Data committed successfully to \" + finalDir);\n+      taskAttemptContext.setStatus(\"Data committed successfully to \" + finalDir);\n+    } else {\n+      LOG.error(\"Unable to commit data to \" + finalDir);\n+      throw new IOException(\"Atomic commit failed. Temporary data in \" + workDir +\n+        \", Unable to move to \" + finalDir);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void commitData(Configuration conf) throws IOException {\n\n    Path workDir \u003d new Path(conf.get(DistCpConstants.CONF_LABEL_TARGET_WORK_PATH));\n    Path finalDir \u003d new Path(conf.get(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH));\n    FileSystem targetFS \u003d workDir.getFileSystem(conf);\n\n    LOG.info(\"Atomic commit enabled. Moving \" + workDir + \" to \" + finalDir);\n    if (targetFS.exists(finalDir) \u0026\u0026 targetFS.exists(workDir)) {\n      LOG.error(\"Pre-existing final-path found at: \" + finalDir);\n      throw new IOException(\"Target-path can\u0027t be committed to because it \" +\n          \"exists at \" + finalDir + \". Copied data is in temp-dir: \" + workDir + \". \");\n    }\n\n    boolean result \u003d targetFS.rename(workDir, finalDir);\n    if (!result) {\n      LOG.warn(\"Rename failed. Perhaps data already moved. Verifying...\");\n      result \u003d targetFS.exists(finalDir) \u0026\u0026 !targetFS.exists(workDir);\n    }\n    if (result) {\n      LOG.info(\"Data committed successfully to \" + finalDir);\n      taskAttemptContext.setStatus(\"Data committed successfully to \" + finalDir);\n    } else {\n      LOG.error(\"Unable to commit data to \" + finalDir);\n      throw new IOException(\"Atomic commit failed. Temporary data in \" + workDir +\n        \", Unable to move to \" + finalDir);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java"
    }
  }
}