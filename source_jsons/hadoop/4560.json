{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelper.java",
  "functionName": "convertBlockECReconstructionInfo",
  "functionId": "convertBlockECReconstructionInfo___blockEcReconstructionInfoProto-BlockECReconstructionInfoProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
  "functionStartLine": 1019,
  "functionEndLine": 1049,
  "numCommitsSeen": 371,
  "timeTaken": 3264,
  "changeHistory": [
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
    "70d6f201260086a3f12beaa317fede2a99639fef"
  ],
  "changeHistoryShort": {
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "70d6f201260086a3f12beaa317fede2a99639fef": "Ybodychange"
  },
  "changeHistoryDetails": {
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
      "commitDate": "02/02/16 12:32 PM",
      "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
      "commitAuthor": "zhezhang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  public static BlockECRecoveryInfo convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfoProto blockEcRecoveryInfoProto) {\n-    ExtendedBlockProto blockProto \u003d blockEcRecoveryInfoProto.getBlock();\n+  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n+      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n+    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n     ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n \n-    DatanodeInfosProto sourceDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getSourceDnInfos();\n     DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n \n-    DatanodeInfosProto targetDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getTargetDnInfos();\n     DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n \n-    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d blockEcRecoveryInfoProto\n-        .getTargetStorageUuids();\n+    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n+        blockEcReconstructionInfoProto.getTargetStorageUuids();\n     String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n \n-    StorageTypesProto targetStorageTypesProto \u003d blockEcRecoveryInfoProto\n+    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n         .getTargetStorageTypes();\n     StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n         targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n             .getStorageTypesList().size());\n \n-    byte[] liveBlkIndices \u003d blockEcRecoveryInfoProto.getLiveBlockIndices()\n+    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n         .toByteArray();\n     ErasureCodingPolicy ecPolicy \u003d\n         PBHelperClient.convertErasureCodingPolicy(\n-            blockEcRecoveryInfoProto.getEcPolicy());\n-    return new BlockECRecoveryInfo(block, sourceDnInfos, targetDnInfos,\n+            blockEcReconstructionInfoProto.getEcPolicy());\n+    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n         targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n    ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n\n    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getSourceDnInfos();\n    DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n\n    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getTargetDnInfos();\n    DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n\n    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n        blockEcReconstructionInfoProto.getTargetStorageUuids();\n    String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n\n    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n        .getTargetStorageTypes();\n    StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n        targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n            .getStorageTypesList().size());\n\n    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n        .toByteArray();\n    ErasureCodingPolicy ecPolicy \u003d\n        PBHelperClient.convertErasureCodingPolicy(\n            blockEcReconstructionInfoProto.getEcPolicy());\n    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n        targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "convertBlockECRecoveryInfo",
            "newValue": "convertBlockECReconstructionInfo"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  public static BlockECRecoveryInfo convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfoProto blockEcRecoveryInfoProto) {\n-    ExtendedBlockProto blockProto \u003d blockEcRecoveryInfoProto.getBlock();\n+  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n+      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n+    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n     ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n \n-    DatanodeInfosProto sourceDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getSourceDnInfos();\n     DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n \n-    DatanodeInfosProto targetDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getTargetDnInfos();\n     DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n \n-    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d blockEcRecoveryInfoProto\n-        .getTargetStorageUuids();\n+    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n+        blockEcReconstructionInfoProto.getTargetStorageUuids();\n     String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n \n-    StorageTypesProto targetStorageTypesProto \u003d blockEcRecoveryInfoProto\n+    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n         .getTargetStorageTypes();\n     StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n         targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n             .getStorageTypesList().size());\n \n-    byte[] liveBlkIndices \u003d blockEcRecoveryInfoProto.getLiveBlockIndices()\n+    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n         .toByteArray();\n     ErasureCodingPolicy ecPolicy \u003d\n         PBHelperClient.convertErasureCodingPolicy(\n-            blockEcRecoveryInfoProto.getEcPolicy());\n-    return new BlockECRecoveryInfo(block, sourceDnInfos, targetDnInfos,\n+            blockEcReconstructionInfoProto.getEcPolicy());\n+    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n         targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n    ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n\n    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getSourceDnInfos();\n    DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n\n    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getTargetDnInfos();\n    DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n\n    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n        blockEcReconstructionInfoProto.getTargetStorageUuids();\n    String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n\n    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n        .getTargetStorageTypes();\n    StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n        targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n            .getStorageTypesList().size());\n\n    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n        .toByteArray();\n    ErasureCodingPolicy ecPolicy \u003d\n        PBHelperClient.convertErasureCodingPolicy(\n            blockEcReconstructionInfoProto.getEcPolicy());\n    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n        targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[blockEcRecoveryInfoProto-BlockECRecoveryInfoProto]",
            "newValue": "[blockEcReconstructionInfoProto-BlockECReconstructionInfoProto]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  public static BlockECRecoveryInfo convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfoProto blockEcRecoveryInfoProto) {\n-    ExtendedBlockProto blockProto \u003d blockEcRecoveryInfoProto.getBlock();\n+  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n+      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n+    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n     ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n \n-    DatanodeInfosProto sourceDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getSourceDnInfos();\n     DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n \n-    DatanodeInfosProto targetDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getTargetDnInfos();\n     DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n \n-    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d blockEcRecoveryInfoProto\n-        .getTargetStorageUuids();\n+    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n+        blockEcReconstructionInfoProto.getTargetStorageUuids();\n     String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n \n-    StorageTypesProto targetStorageTypesProto \u003d blockEcRecoveryInfoProto\n+    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n         .getTargetStorageTypes();\n     StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n         targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n             .getStorageTypesList().size());\n \n-    byte[] liveBlkIndices \u003d blockEcRecoveryInfoProto.getLiveBlockIndices()\n+    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n         .toByteArray();\n     ErasureCodingPolicy ecPolicy \u003d\n         PBHelperClient.convertErasureCodingPolicy(\n-            blockEcRecoveryInfoProto.getEcPolicy());\n-    return new BlockECRecoveryInfo(block, sourceDnInfos, targetDnInfos,\n+            blockEcReconstructionInfoProto.getEcPolicy());\n+    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n         targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n    ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n\n    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getSourceDnInfos();\n    DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n\n    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getTargetDnInfos();\n    DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n\n    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n        blockEcReconstructionInfoProto.getTargetStorageUuids();\n    String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n\n    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n        .getTargetStorageTypes();\n    StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n        targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n            .getStorageTypesList().size());\n\n    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n        .toByteArray();\n    ErasureCodingPolicy ecPolicy \u003d\n        PBHelperClient.convertErasureCodingPolicy(\n            blockEcReconstructionInfoProto.getEcPolicy());\n    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n        targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "BlockECRecoveryInfo",
            "newValue": "BlockECReconstructionInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  public static BlockECRecoveryInfo convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfoProto blockEcRecoveryInfoProto) {\n-    ExtendedBlockProto blockProto \u003d blockEcRecoveryInfoProto.getBlock();\n+  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n+      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n+    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n     ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n \n-    DatanodeInfosProto sourceDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getSourceDnInfos();\n     DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n \n-    DatanodeInfosProto targetDnInfosProto \u003d blockEcRecoveryInfoProto\n+    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n         .getTargetDnInfos();\n     DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n \n-    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d blockEcRecoveryInfoProto\n-        .getTargetStorageUuids();\n+    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n+        blockEcReconstructionInfoProto.getTargetStorageUuids();\n     String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n \n-    StorageTypesProto targetStorageTypesProto \u003d blockEcRecoveryInfoProto\n+    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n         .getTargetStorageTypes();\n     StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n         targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n             .getStorageTypesList().size());\n \n-    byte[] liveBlkIndices \u003d blockEcRecoveryInfoProto.getLiveBlockIndices()\n+    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n         .toByteArray();\n     ErasureCodingPolicy ecPolicy \u003d\n         PBHelperClient.convertErasureCodingPolicy(\n-            blockEcRecoveryInfoProto.getEcPolicy());\n-    return new BlockECRecoveryInfo(block, sourceDnInfos, targetDnInfos,\n+            blockEcReconstructionInfoProto.getEcPolicy());\n+    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n         targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfo convertBlockECReconstructionInfo(\n      BlockECReconstructionInfoProto blockEcReconstructionInfoProto) {\n    ExtendedBlockProto blockProto \u003d blockEcReconstructionInfoProto.getBlock();\n    ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n\n    DatanodeInfosProto sourceDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getSourceDnInfos();\n    DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n\n    DatanodeInfosProto targetDnInfosProto \u003d blockEcReconstructionInfoProto\n        .getTargetDnInfos();\n    DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n\n    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d\n        blockEcReconstructionInfoProto.getTargetStorageUuids();\n    String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n\n    StorageTypesProto targetStorageTypesProto \u003d blockEcReconstructionInfoProto\n        .getTargetStorageTypes();\n    StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n        targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n            .getStorageTypesList().size());\n\n    byte[] liveBlkIndices \u003d blockEcReconstructionInfoProto.getLiveBlockIndices()\n        .toByteArray();\n    ErasureCodingPolicy ecPolicy \u003d\n        PBHelperClient.convertErasureCodingPolicy(\n            blockEcReconstructionInfoProto.getEcPolicy());\n    return new BlockECReconstructionInfo(block, sourceDnInfos, targetDnInfos,\n        targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "70d6f201260086a3f12beaa317fede2a99639fef": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9575. Use byte array for internal block indices in a striped block.  Contributed by jing9\n",
      "commitDate": "21/12/15 10:47 PM",
      "commitName": "70d6f201260086a3f12beaa317fede2a99639fef",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "18/12/15 3:57 PM",
      "commitNameOld": "61ab0440f7eaff0f631cbae0378403912f88d7ad",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 3.28,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,31 @@\n   public static BlockECRecoveryInfo convertBlockECRecoveryInfo(\n       BlockECRecoveryInfoProto blockEcRecoveryInfoProto) {\n     ExtendedBlockProto blockProto \u003d blockEcRecoveryInfoProto.getBlock();\n     ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n \n     DatanodeInfosProto sourceDnInfosProto \u003d blockEcRecoveryInfoProto\n         .getSourceDnInfos();\n     DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n \n     DatanodeInfosProto targetDnInfosProto \u003d blockEcRecoveryInfoProto\n         .getTargetDnInfos();\n     DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n \n     HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d blockEcRecoveryInfoProto\n         .getTargetStorageUuids();\n     String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n \n     StorageTypesProto targetStorageTypesProto \u003d blockEcRecoveryInfoProto\n         .getTargetStorageTypes();\n     StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n         targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n             .getStorageTypesList().size());\n \n-    List\u003cInteger\u003e liveBlockIndicesList \u003d blockEcRecoveryInfoProto\n-        .getLiveBlockIndicesList();\n-    short[] liveBlkIndices \u003d new short[liveBlockIndicesList.size()];\n-    for (int i \u003d 0; i \u003c liveBlockIndicesList.size(); i++) {\n-      liveBlkIndices[i] \u003d liveBlockIndicesList.get(i).shortValue();\n-    }\n-\n+    byte[] liveBlkIndices \u003d blockEcRecoveryInfoProto.getLiveBlockIndices()\n+        .toByteArray();\n     ErasureCodingPolicy ecPolicy \u003d\n         PBHelperClient.convertErasureCodingPolicy(\n             blockEcRecoveryInfoProto.getEcPolicy());\n-\n     return new BlockECRecoveryInfo(block, sourceDnInfos, targetDnInfos,\n         targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockECRecoveryInfo convertBlockECRecoveryInfo(\n      BlockECRecoveryInfoProto blockEcRecoveryInfoProto) {\n    ExtendedBlockProto blockProto \u003d blockEcRecoveryInfoProto.getBlock();\n    ExtendedBlock block \u003d PBHelperClient.convert(blockProto);\n\n    DatanodeInfosProto sourceDnInfosProto \u003d blockEcRecoveryInfoProto\n        .getSourceDnInfos();\n    DatanodeInfo[] sourceDnInfos \u003d PBHelperClient.convert(sourceDnInfosProto);\n\n    DatanodeInfosProto targetDnInfosProto \u003d blockEcRecoveryInfoProto\n        .getTargetDnInfos();\n    DatanodeInfo[] targetDnInfos \u003d PBHelperClient.convert(targetDnInfosProto);\n\n    HdfsProtos.StorageUuidsProto targetStorageUuidsProto \u003d blockEcRecoveryInfoProto\n        .getTargetStorageUuids();\n    String[] targetStorageUuids \u003d convert(targetStorageUuidsProto);\n\n    StorageTypesProto targetStorageTypesProto \u003d blockEcRecoveryInfoProto\n        .getTargetStorageTypes();\n    StorageType[] convertStorageTypes \u003d PBHelperClient.convertStorageTypes(\n        targetStorageTypesProto.getStorageTypesList(), targetStorageTypesProto\n            .getStorageTypesList().size());\n\n    byte[] liveBlkIndices \u003d blockEcRecoveryInfoProto.getLiveBlockIndices()\n        .toByteArray();\n    ErasureCodingPolicy ecPolicy \u003d\n        PBHelperClient.convertErasureCodingPolicy(\n            blockEcRecoveryInfoProto.getEcPolicy());\n    return new BlockECRecoveryInfo(block, sourceDnInfos, targetDnInfos,\n        targetStorageUuids, convertStorageTypes, liveBlkIndices, ecPolicy);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    }
  }
}