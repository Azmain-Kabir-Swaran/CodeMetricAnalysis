{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ErasureCodingWork.java",
  "functionName": "hasAllInternalBlocks",
  "functionId": "hasAllInternalBlocks",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ErasureCodingWork.java",
  "functionStartLine": 73,
  "functionEndLine": 97,
  "numCommitsSeen": 13,
  "timeTaken": 1464,
  "changeHistory": [
    "02009c3bb762393540cdf92cfd9c840807272903",
    "e54cc2931262bf49682a8323da9811976218c03b"
  ],
  "changeHistoryShort": {
    "02009c3bb762393540cdf92cfd9c840807272903": "Ybodychange",
    "e54cc2931262bf49682a8323da9811976218c03b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "02009c3bb762393540cdf92cfd9c840807272903": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14768. EC : Busy DN replica should be consider in live replica check. Contributed by guojh.\n",
      "commitDate": "01/11/19 9:45 AM",
      "commitName": "02009c3bb762393540cdf92cfd9c840807272903",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "19/10/19 5:40 PM",
      "commitNameOld": "447f46d9628db54e77f88e2d109587cc7dfd6154",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 12.67,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   private boolean hasAllInternalBlocks() {\n     final BlockInfoStriped block \u003d (BlockInfoStriped) getBlock();\n-    if (getSrcNodes().length \u003c block.getRealTotalBlockNum()) {\n+    if (liveBlockIndicies.length\n+        + liveBusyBlockIndicies.length \u003c block.getRealTotalBlockNum()) {\n       return false;\n     }\n     BitSet bitSet \u003d new BitSet(block.getTotalBlockNum());\n     for (byte index : liveBlockIndicies) {\n       bitSet.set(index);\n     }\n+    for (byte busyIndex: liveBusyBlockIndicies) {\n+      bitSet.set(busyIndex);\n+    }\n     for (int i \u003d 0; i \u003c block.getRealDataBlockNum(); i++) {\n       if (!bitSet.get(i)) {\n         return false;\n       }\n     }\n     for (int i \u003d block.getDataBlockNum(); i \u003c block.getTotalBlockNum(); i++) {\n       if (!bitSet.get(i)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean hasAllInternalBlocks() {\n    final BlockInfoStriped block \u003d (BlockInfoStriped) getBlock();\n    if (liveBlockIndicies.length\n        + liveBusyBlockIndicies.length \u003c block.getRealTotalBlockNum()) {\n      return false;\n    }\n    BitSet bitSet \u003d new BitSet(block.getTotalBlockNum());\n    for (byte index : liveBlockIndicies) {\n      bitSet.set(index);\n    }\n    for (byte busyIndex: liveBusyBlockIndicies) {\n      bitSet.set(busyIndex);\n    }\n    for (int i \u003d 0; i \u003c block.getRealDataBlockNum(); i++) {\n      if (!bitSet.get(i)) {\n        return false;\n      }\n    }\n    for (int i \u003d block.getDataBlockNum(); i \u003c block.getTotalBlockNum(); i++) {\n      if (!bitSet.get(i)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ErasureCodingWork.java",
      "extendedDetails": {}
    },
    "e54cc2931262bf49682a8323da9811976218c03b": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9818. Correctly handle EC reconstruction work caused by not enough racks. Contributed by Jing Zhao.\n",
      "commitDate": "19/02/16 7:02 PM",
      "commitName": "e54cc2931262bf49682a8323da9811976218c03b",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,21 @@\n+  private boolean hasAllInternalBlocks() {\n+    final BlockInfoStriped block \u003d (BlockInfoStriped) getBlock();\n+    if (getSrcNodes().length \u003c block.getRealTotalBlockNum()) {\n+      return false;\n+    }\n+    BitSet bitSet \u003d new BitSet(block.getTotalBlockNum());\n+    for (byte index : liveBlockIndicies) {\n+      bitSet.set(index);\n+    }\n+    for (int i \u003d 0; i \u003c block.getRealDataBlockNum(); i++) {\n+      if (!bitSet.get(i)) {\n+        return false;\n+      }\n+    }\n+    for (int i \u003d block.getDataBlockNum(); i \u003c block.getTotalBlockNum(); i++) {\n+      if (!bitSet.get(i)) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean hasAllInternalBlocks() {\n    final BlockInfoStriped block \u003d (BlockInfoStriped) getBlock();\n    if (getSrcNodes().length \u003c block.getRealTotalBlockNum()) {\n      return false;\n    }\n    BitSet bitSet \u003d new BitSet(block.getTotalBlockNum());\n    for (byte index : liveBlockIndicies) {\n      bitSet.set(index);\n    }\n    for (int i \u003d 0; i \u003c block.getRealDataBlockNum(); i++) {\n      if (!bitSet.get(i)) {\n        return false;\n      }\n    }\n    for (int i \u003d block.getDataBlockNum(); i \u003c block.getTotalBlockNum(); i++) {\n      if (!bitSet.get(i)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ErasureCodingWork.java"
    }
  }
}