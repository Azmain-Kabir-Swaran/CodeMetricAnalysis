{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Bzip2Compressor.java",
  "functionName": "needsInput",
  "functionId": "needsInput",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/Bzip2Compressor.java",
  "functionStartLine": 158,
  "functionEndLine": 180,
  "numCommitsSeen": 5,
  "timeTaken": 692,
  "changeHistory": [
    "85470f0a33a3fb29ca80e9531a1a45f6b7b16721"
  ],
  "changeHistoryShort": {
    "85470f0a33a3fb29ca80e9531a1a45f6b7b16721": "Yintroduced"
  },
  "changeHistoryDetails": {
    "85470f0a33a3fb29ca80e9531a1a45f6b7b16721": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8462. Native-code implementation of bzip2 codec. Contributed by Govind Kamat\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453608 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 3:10 PM",
      "commitName": "85470f0a33a3fb29ca80e9531a1a45f6b7b16721",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,23 @@\n+  public synchronized boolean needsInput() {\n+    // Compressed data still available?\n+    if (compressedDirectBuf.remaining() \u003e 0) {\n+      return false;\n+    }\n+\n+    // Uncompressed data available in either the direct buffer or user buffer?\n+    if (keepUncompressedBuf \u0026\u0026 uncompressedDirectBufLen \u003e 0)\n+      return false;\n+    \n+    if (uncompressedDirectBuf.remaining() \u003e 0) {\n+      // Check if we have consumed all data in the user buffer.\n+      if (userBufLen \u003c\u003d 0) {\n+        return true;\n+      } else {\n+        // Copy enough data from userBuf to uncompressedDirectBuf.\n+        setInputFromSavedData();\n+        return uncompressedDirectBuf.remaining() \u003e 0;\n+      }\n+    }\n+    \n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean needsInput() {\n    // Compressed data still available?\n    if (compressedDirectBuf.remaining() \u003e 0) {\n      return false;\n    }\n\n    // Uncompressed data available in either the direct buffer or user buffer?\n    if (keepUncompressedBuf \u0026\u0026 uncompressedDirectBufLen \u003e 0)\n      return false;\n    \n    if (uncompressedDirectBuf.remaining() \u003e 0) {\n      // Check if we have consumed all data in the user buffer.\n      if (userBufLen \u003c\u003d 0) {\n        return true;\n      } else {\n        // Copy enough data from userBuf to uncompressedDirectBuf.\n        setInputFromSavedData();\n        return uncompressedDirectBuf.remaining() \u003e 0;\n      }\n    }\n    \n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/Bzip2Compressor.java"
    }
  }
}