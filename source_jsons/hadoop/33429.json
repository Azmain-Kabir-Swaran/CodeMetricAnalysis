{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultLinuxContainerRuntime.java",
  "functionName": "execContainer",
  "functionId": "execContainer___ctx-ContainerExecContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DefaultLinuxContainerRuntime.java",
  "functionStartLine": 217,
  "functionEndLine": 238,
  "numCommitsSeen": 43,
  "timeTaken": 2709,
  "changeHistory": [
    "72e7c6a489858ea48e94dc015752de620f8d6da1",
    "1f9c4f32e842529be5980e395587f135452372bb"
  ],
  "changeHistoryShort": {
    "72e7c6a489858ea48e94dc015752de620f8d6da1": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f9c4f32e842529be5980e395587f135452372bb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "72e7c6a489858ea48e94dc015752de620f8d6da1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8962. Add ability to use interactive shell with normal yarn container. Contributed by Eric Yang\n",
      "commitDate": "12/12/18 6:18 PM",
      "commitName": "72e7c6a489858ea48e94dc015752de620f8d6da1",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8962. Add ability to use interactive shell with normal yarn container. Contributed by Eric Yang\n",
          "commitDate": "12/12/18 6:18 PM",
          "commitName": "72e7c6a489858ea48e94dc015752de620f8d6da1",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "12/11/18 10:42 AM",
          "commitNameOld": "1f9c4f32e842529be5980e395587f135452372bb",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 30.32,
          "commitsBetweenForRepo": 207,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,22 @@\n-  public IOStreamPair execContainer(ContainerExecContext containerExecContext)\n+  public IOStreamPair execContainer(ContainerExecContext ctx)\n       throws ContainerExecutionException {\n-    throw new ContainerExecutionException(\"Unsupported operation.\");\n+    IOStreamPair output;\n+    try {\n+      PrivilegedOperation privOp \u003d new PrivilegedOperation(\n+          PrivilegedOperation.OperationType.EXEC_CONTAINER);\n+      String commandFile \u003d writeCommandToTempFile(ctx);\n+      privOp.appendArgs(commandFile);\n+      privOp.disableFailureLogging();\n+      output \u003d\n+          privilegedOperationExecutor.executePrivilegedInteractiveOperation(\n+              null, privOp);\n+    } catch (PrivilegedOperationException e) {\n+      throw new ContainerExecutionException(\n+          \"Execute container interactive shell failed\", e.getExitCode(),\n+          e.getOutput(), e.getErrorOutput());\n+    } catch (InterruptedException ie) {\n+      LOG.warn(\"InterruptedException executing command: \", ie);\n+      throw new ContainerExecutionException(ie.getMessage());\n+    }\n+    return output;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public IOStreamPair execContainer(ContainerExecContext ctx)\n      throws ContainerExecutionException {\n    IOStreamPair output;\n    try {\n      PrivilegedOperation privOp \u003d new PrivilegedOperation(\n          PrivilegedOperation.OperationType.EXEC_CONTAINER);\n      String commandFile \u003d writeCommandToTempFile(ctx);\n      privOp.appendArgs(commandFile);\n      privOp.disableFailureLogging();\n      output \u003d\n          privilegedOperationExecutor.executePrivilegedInteractiveOperation(\n              null, privOp);\n    } catch (PrivilegedOperationException e) {\n      throw new ContainerExecutionException(\n          \"Execute container interactive shell failed\", e.getExitCode(),\n          e.getOutput(), e.getErrorOutput());\n    } catch (InterruptedException ie) {\n      LOG.warn(\"InterruptedException executing command: \", ie);\n      throw new ContainerExecutionException(ie.getMessage());\n    }\n    return output;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DefaultLinuxContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "[containerExecContext-ContainerExecContext]",
            "newValue": "[ctx-ContainerExecContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8962. Add ability to use interactive shell with normal yarn container. Contributed by Eric Yang\n",
          "commitDate": "12/12/18 6:18 PM",
          "commitName": "72e7c6a489858ea48e94dc015752de620f8d6da1",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "12/11/18 10:42 AM",
          "commitNameOld": "1f9c4f32e842529be5980e395587f135452372bb",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 30.32,
          "commitsBetweenForRepo": 207,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,22 @@\n-  public IOStreamPair execContainer(ContainerExecContext containerExecContext)\n+  public IOStreamPair execContainer(ContainerExecContext ctx)\n       throws ContainerExecutionException {\n-    throw new ContainerExecutionException(\"Unsupported operation.\");\n+    IOStreamPair output;\n+    try {\n+      PrivilegedOperation privOp \u003d new PrivilegedOperation(\n+          PrivilegedOperation.OperationType.EXEC_CONTAINER);\n+      String commandFile \u003d writeCommandToTempFile(ctx);\n+      privOp.appendArgs(commandFile);\n+      privOp.disableFailureLogging();\n+      output \u003d\n+          privilegedOperationExecutor.executePrivilegedInteractiveOperation(\n+              null, privOp);\n+    } catch (PrivilegedOperationException e) {\n+      throw new ContainerExecutionException(\n+          \"Execute container interactive shell failed\", e.getExitCode(),\n+          e.getOutput(), e.getErrorOutput());\n+    } catch (InterruptedException ie) {\n+      LOG.warn(\"InterruptedException executing command: \", ie);\n+      throw new ContainerExecutionException(ie.getMessage());\n+    }\n+    return output;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public IOStreamPair execContainer(ContainerExecContext ctx)\n      throws ContainerExecutionException {\n    IOStreamPair output;\n    try {\n      PrivilegedOperation privOp \u003d new PrivilegedOperation(\n          PrivilegedOperation.OperationType.EXEC_CONTAINER);\n      String commandFile \u003d writeCommandToTempFile(ctx);\n      privOp.appendArgs(commandFile);\n      privOp.disableFailureLogging();\n      output \u003d\n          privilegedOperationExecutor.executePrivilegedInteractiveOperation(\n              null, privOp);\n    } catch (PrivilegedOperationException e) {\n      throw new ContainerExecutionException(\n          \"Execute container interactive shell failed\", e.getExitCode(),\n          e.getOutput(), e.getErrorOutput());\n    } catch (InterruptedException ie) {\n      LOG.warn(\"InterruptedException executing command: \", ie);\n      throw new ContainerExecutionException(ie.getMessage());\n    }\n    return output;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DefaultLinuxContainerRuntime.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f9c4f32e842529be5980e395587f135452372bb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8776. Implement Container Exec feature in LinuxContainerExecutor. Contributed by Eric Yang\n",
      "commitDate": "12/11/18 10:42 AM",
      "commitName": "1f9c4f32e842529be5980e395587f135452372bb",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,4 @@\n+  public IOStreamPair execContainer(ContainerExecContext containerExecContext)\n+      throws ContainerExecutionException {\n+    throw new ContainerExecutionException(\"Unsupported operation.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public IOStreamPair execContainer(ContainerExecContext containerExecContext)\n      throws ContainerExecutionException {\n    throw new ContainerExecutionException(\"Unsupported operation.\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DefaultLinuxContainerRuntime.java"
    }
  }
}