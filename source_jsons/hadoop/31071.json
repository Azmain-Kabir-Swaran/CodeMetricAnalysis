{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptorREST.java",
  "functionName": "init",
  "functionId": "init___user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
  "functionStartLine": 134,
  "functionEndLine": 163,
  "numCommitsSeen": 20,
  "timeTaken": 2442,
  "changeHistory": [
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
    "cc8893edc0b7960e958723c81062986c12f06ade",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d"
  ],
  "changeHistoryShort": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ybodychange",
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4": "Ybodychange",
    "cc8893edc0b7960e958723c81062986c12f06ade": "Ybodychange",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,30 @@\n   public void init(String user) {\n     federationFacade \u003d FederationStateStoreFacade.getInstance();\n-    rand \u003d new Random(System.currentTimeMillis());\n+    rand \u003d new Random();\n \n     final Configuration conf \u003d this.getConf();\n \n     try {\n-      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n-          this.federationFacade.getSubClusterResolver(), null);\n+      SubClusterResolver subClusterResolver \u003d\n+          this.federationFacade.getSubClusterResolver();\n+      policyFacade \u003d new RouterPolicyFacade(\n+          conf, federationFacade, subClusterResolver, null);\n     } catch (FederationPolicyInitializationException e) {\n-      LOG.error(e.getMessage());\n+      throw new YarnRuntimeException(e);\n     }\n \n-    numSubmitRetries \u003d\n-        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n-            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n+    numSubmitRetries \u003d conf.getInt(\n+        YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n+        YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n \n-    interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n+    interceptors \u003d new HashMap\u003c\u003e();\n     routerMetrics \u003d RouterMetrics.getMetrics();\n-    threadpool \u003d HadoopExecutors.newCachedThreadPool(new ThreadFactoryBuilder()\n-        .setNameFormat(\"FederationInterceptorREST #%d\").build());\n+    threadpool \u003d HadoopExecutors.newCachedThreadPool(\n+        new ThreadFactoryBuilder()\n+            .setNameFormat(\"FederationInterceptorREST #%d\")\n+            .build());\n \n-    returnPartialReport \u003d\n-        conf.getBoolean(YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n-            YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n+    returnPartialReport \u003d conf.getBoolean(\n+        YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n+        YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String user) {\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random();\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      SubClusterResolver subClusterResolver \u003d\n          this.federationFacade.getSubClusterResolver();\n      policyFacade \u003d new RouterPolicyFacade(\n          conf, federationFacade, subClusterResolver, null);\n    } catch (FederationPolicyInitializationException e) {\n      throw new YarnRuntimeException(e);\n    }\n\n    numSubmitRetries \u003d conf.getInt(\n        YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n        YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    interceptors \u003d new HashMap\u003c\u003e();\n    routerMetrics \u003d RouterMetrics.getMetrics();\n    threadpool \u003d HadoopExecutors.newCachedThreadPool(\n        new ThreadFactoryBuilder()\n            .setNameFormat(\"FederationInterceptorREST #%d\")\n            .build());\n\n    returnPartialReport \u003d conf.getBoolean(\n        YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n        YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "bac4e8cca8b54405f5e37b90e545b93bbadee0f4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7095. Federation: routing getNode/getNodes/getMetrics REST invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n",
      "commitDate": "31/08/17 3:05 PM",
      "commitName": "bac4e8cca8b54405f5e37b90e545b93bbadee0f4",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "29/08/17 2:53 PM",
      "commitNameOld": "cc8893edc0b7960e958723c81062986c12f06ade",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 2.01,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void init(String user) {\n     federationFacade \u003d FederationStateStoreFacade.getInstance();\n     rand \u003d new Random(System.currentTimeMillis());\n \n     final Configuration conf \u003d this.getConf();\n \n     try {\n       policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n           this.federationFacade.getSubClusterResolver(), null);\n     } catch (FederationPolicyInitializationException e) {\n       LOG.error(e.getMessage());\n     }\n \n     numSubmitRetries \u003d\n         conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n             YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n \n     interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n     routerMetrics \u003d RouterMetrics.getMetrics();\n-    threadpool \u003d Executors.newCachedThreadPool();\n+    threadpool \u003d HadoopExecutors.newCachedThreadPool(new ThreadFactoryBuilder()\n+        .setNameFormat(\"FederationInterceptorREST #%d\").build());\n \n     returnPartialReport \u003d\n         conf.getBoolean(YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n             YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String user) {\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n    routerMetrics \u003d RouterMetrics.getMetrics();\n    threadpool \u003d HadoopExecutors.newCachedThreadPool(new ThreadFactoryBuilder()\n        .setNameFormat(\"FederationInterceptorREST #%d\").build());\n\n    returnPartialReport \u003d\n        conf.getBoolean(YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n            YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "cc8893edc0b7960e958723c81062986c12f06ade": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7010. Federation: routing REST invocations transparently to multiple RMs (part 2 - getApps). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "29/08/17 2:53 PM",
      "commitName": "cc8893edc0b7960e958723c81062986c12f06ade",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "21/08/17 10:50 PM",
      "commitNameOld": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 7.67,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   public void init(String user) {\n     federationFacade \u003d FederationStateStoreFacade.getInstance();\n     rand \u003d new Random(System.currentTimeMillis());\n \n     final Configuration conf \u003d this.getConf();\n \n     try {\n       policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n           this.federationFacade.getSubClusterResolver(), null);\n     } catch (FederationPolicyInitializationException e) {\n       LOG.error(e.getMessage());\n     }\n \n     numSubmitRetries \u003d\n         conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n             YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n \n     interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n     routerMetrics \u003d RouterMetrics.getMetrics();\n+    threadpool \u003d Executors.newCachedThreadPool();\n+\n+    returnPartialReport \u003d\n+        conf.getBoolean(YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n+            YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String user) {\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n    routerMetrics \u003d RouterMetrics.getMetrics();\n    threadpool \u003d Executors.newCachedThreadPool();\n\n    returnPartialReport \u003d\n        conf.getBoolean(YarnConfiguration.ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED,\n            YarnConfiguration.DEFAULT_ROUTER_WEBAPP_PARTIAL_RESULTS_ENABLED);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "11/08/17 3:58 PM",
      "commitNameOld": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 10.29,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public void init(String user) {\n     federationFacade \u003d FederationStateStoreFacade.getInstance();\n     rand \u003d new Random(System.currentTimeMillis());\n \n     final Configuration conf \u003d this.getConf();\n \n     try {\n       policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n           this.federationFacade.getSubClusterResolver(), null);\n     } catch (FederationPolicyInitializationException e) {\n       LOG.error(e.getMessage());\n     }\n \n     numSubmitRetries \u003d\n         conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n             YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n \n     interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n+    routerMetrics \u003d RouterMetrics.getMetrics();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String user) {\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n    routerMetrics \u003d RouterMetrics.getMetrics();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6896. Federation: routing REST invocations transparently to multiple RMs (part 1 - basic execution). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "11/08/17 3:58 PM",
      "commitName": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,19 @@\n+  public void init(String user) {\n+    federationFacade \u003d FederationStateStoreFacade.getInstance();\n+    rand \u003d new Random(System.currentTimeMillis());\n+\n+    final Configuration conf \u003d this.getConf();\n+\n+    try {\n+      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n+          this.federationFacade.getSubClusterResolver(), null);\n+    } catch (FederationPolicyInitializationException e) {\n+      LOG.error(e.getMessage());\n+    }\n+\n+    numSubmitRetries \u003d\n+        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n+            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n+\n+    interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String user) {\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    interceptors \u003d new HashMap\u003cSubClusterId, DefaultRequestInterceptorREST\u003e();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java"
    }
  }
}