{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SwiftNativeFileSystemStore.java",
  "functionName": "getObjectMetadata",
  "functionId": "getObjectMetadata___path-Path__newest-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystemStore.java",
  "functionStartLine": 212,
  "functionEndLine": 255,
  "numCommitsSeen": 11,
  "timeTaken": 706,
  "changeHistory": [
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,44 @@\n+  public SwiftFileStatus getObjectMetadata(Path path, boolean newest)\n+    throws IOException, FileNotFoundException {\n+\n+    SwiftObjectPath objectPath \u003d toObjectPath(path);\n+    final Header[] headers \u003d stat(objectPath, newest);\n+    //no headers is treated as a missing file\n+    if (headers.length \u003d\u003d 0) {\n+      throw new FileNotFoundException(\"Not Found \" + path.toUri());\n+    }\n+\n+    boolean isDir \u003d false;\n+    long length \u003d 0;\n+    long lastModified \u003d 0 ;\n+    for (Header header : headers) {\n+      String headerName \u003d header.getName();\n+      if (headerName.equals(SwiftProtocolConstants.X_CONTAINER_OBJECT_COUNT) ||\n+              headerName.equals(SwiftProtocolConstants.X_CONTAINER_BYTES_USED)) {\n+        length \u003d 0;\n+        isDir \u003d true;\n+      }\n+      if (SwiftProtocolConstants.HEADER_CONTENT_LENGTH.equals(headerName)) {\n+        length \u003d Long.parseLong(header.getValue());\n+      }\n+      if (SwiftProtocolConstants.HEADER_LAST_MODIFIED.equals(headerName)) {\n+        final SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(PATTERN);\n+        try {\n+          lastModified \u003d simpleDateFormat.parse(header.getValue()).getTime();\n+        } catch (ParseException e) {\n+          throw new SwiftException(\"Failed to parse \" + header.toString(), e);\n+        }\n+      }\n+    }\n+    if (lastModified \u003d\u003d 0) {\n+      lastModified \u003d System.currentTimeMillis();\n+    }\n+\n+    Path correctSwiftPath \u003d getCorrectSwiftPath(path);\n+    return new SwiftFileStatus(length,\n+                               isDir,\n+                               1,\n+                               getBlocksize(),\n+                               lastModified,\n+                               correctSwiftPath);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public SwiftFileStatus getObjectMetadata(Path path, boolean newest)\n    throws IOException, FileNotFoundException {\n\n    SwiftObjectPath objectPath \u003d toObjectPath(path);\n    final Header[] headers \u003d stat(objectPath, newest);\n    //no headers is treated as a missing file\n    if (headers.length \u003d\u003d 0) {\n      throw new FileNotFoundException(\"Not Found \" + path.toUri());\n    }\n\n    boolean isDir \u003d false;\n    long length \u003d 0;\n    long lastModified \u003d 0 ;\n    for (Header header : headers) {\n      String headerName \u003d header.getName();\n      if (headerName.equals(SwiftProtocolConstants.X_CONTAINER_OBJECT_COUNT) ||\n              headerName.equals(SwiftProtocolConstants.X_CONTAINER_BYTES_USED)) {\n        length \u003d 0;\n        isDir \u003d true;\n      }\n      if (SwiftProtocolConstants.HEADER_CONTENT_LENGTH.equals(headerName)) {\n        length \u003d Long.parseLong(header.getValue());\n      }\n      if (SwiftProtocolConstants.HEADER_LAST_MODIFIED.equals(headerName)) {\n        final SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(PATTERN);\n        try {\n          lastModified \u003d simpleDateFormat.parse(header.getValue()).getTime();\n        } catch (ParseException e) {\n          throw new SwiftException(\"Failed to parse \" + header.toString(), e);\n        }\n      }\n    }\n    if (lastModified \u003d\u003d 0) {\n      lastModified \u003d System.currentTimeMillis();\n    }\n\n    Path correctSwiftPath \u003d getCorrectSwiftPath(path);\n    return new SwiftFileStatus(length,\n                               isDir,\n                               1,\n                               getBlocksize(),\n                               lastModified,\n                               correctSwiftPath);\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystemStore.java"
    }
  }
}