{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExceptionHandler.java",
  "functionName": "toResponse",
  "functionId": "toResponse___e-Exception",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
  "functionStartLine": 72,
  "functionEndLine": 119,
  "numCommitsSeen": 8,
  "timeTaken": 2038,
  "changeHistory": [
    "55a1defa503120bdceae52d45331e263a3934a63",
    "004d0854b7964d4f748f6e91b2d54a84928843f7",
    "09a156fcce2bc1be4081717bf7ef7d290e80d818",
    "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce",
    "5904e00b4f7991014d57616fb613d647d4b5e58e",
    "61d0b7530c8978c095ab6f62d9d38e168bd829c6"
  ],
  "changeHistoryShort": {
    "55a1defa503120bdceae52d45331e263a3934a63": "Ybodychange",
    "004d0854b7964d4f748f6e91b2d54a84928843f7": "Ybodychange",
    "09a156fcce2bc1be4081717bf7ef7d290e80d818": "Ybodychange",
    "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce": "Ybodychange",
    "5904e00b4f7991014d57616fb613d647d4b5e58e": "Ymultichange(Ybodychange,Yparametermetachange)",
    "61d0b7530c8978c095ab6f62d9d38e168bd829c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "55a1defa503120bdceae52d45331e263a3934a63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6475. WebHdfs clients fail without retry because incorrect handling of StandbyException. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605217 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 4:07 PM",
      "commitName": "55a1defa503120bdceae52d45331e263a3934a63",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "31/03/14 12:25 AM",
      "commitNameOld": "004d0854b7964d4f748f6e91b2d54a84928843f7",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 85.65,
      "commitsBetweenForRepo": 513,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,48 @@\n   public Response toResponse(Exception e) {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"GOT EXCEPITION\", e);\n     }\n \n     //clear content type\n     response.setContentType(null);\n \n     //Convert exception\n     if (e instanceof ParamException) {\n       final ParamException paramexception \u003d (ParamException)e;\n       e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n           + paramexception.getParameterName() + \"\\\": \"\n           + e.getCause().getMessage(), e);\n     }\n     if (e instanceof ContainerException) {\n       e \u003d toCause(e);\n     }\n     if (e instanceof RemoteException) {\n       e \u003d ((RemoteException)e).unwrapRemoteException();\n     }\n \n+    if (e instanceof SecurityException) {\n+      e \u003d toCause(e);\n+    }\n+    \n     //Map response status\n     final Response.Status s;\n     if (e instanceof SecurityException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof AuthorizationException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof FileNotFoundException) {\n       s \u003d Response.Status.NOT_FOUND;\n     } else if (e instanceof IOException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof UnsupportedOperationException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else if (e instanceof IllegalArgumentException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else {\n       LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n       s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n     }\n  \n     final String js \u003d JsonUtil.toJsonString(e);\n     return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response toResponse(Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    //clear content type\n    response.setContentType(null);\n\n    //Convert exception\n    if (e instanceof ParamException) {\n      final ParamException paramexception \u003d (ParamException)e;\n      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n          + paramexception.getParameterName() + \"\\\": \"\n          + e.getCause().getMessage(), e);\n    }\n    if (e instanceof ContainerException) {\n      e \u003d toCause(e);\n    }\n    if (e instanceof RemoteException) {\n      e \u003d ((RemoteException)e).unwrapRemoteException();\n    }\n\n    if (e instanceof SecurityException) {\n      e \u003d toCause(e);\n    }\n    \n    //Map response status\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof AuthorizationException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else if (e instanceof IllegalArgumentException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
      "extendedDetails": {}
    },
    "004d0854b7964d4f748f6e91b2d54a84928843f7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4564. Ensure webhdfs returns correct HTTP response codes for denied operations. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1583241 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/03/14 12:25 AM",
      "commitName": "004d0854b7964d4f748f6e91b2d54a84928843f7",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/11/11 8:19 PM",
      "commitNameOld": "09a156fcce2bc1be4081717bf7ef7d290e80d818",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 871.13,
      "commitsBetweenForRepo": 5511,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   public Response toResponse(Exception e) {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"GOT EXCEPITION\", e);\n     }\n \n     //clear content type\n     response.setContentType(null);\n \n     //Convert exception\n     if (e instanceof ParamException) {\n       final ParamException paramexception \u003d (ParamException)e;\n       e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n           + paramexception.getParameterName() + \"\\\": \"\n           + e.getCause().getMessage(), e);\n     }\n     if (e instanceof ContainerException) {\n       e \u003d toCause(e);\n     }\n     if (e instanceof RemoteException) {\n       e \u003d ((RemoteException)e).unwrapRemoteException();\n     }\n \n     //Map response status\n     final Response.Status s;\n     if (e instanceof SecurityException) {\n-      s \u003d Response.Status.UNAUTHORIZED;\n+      s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof AuthorizationException) {\n-      s \u003d Response.Status.UNAUTHORIZED;\n+      s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof FileNotFoundException) {\n       s \u003d Response.Status.NOT_FOUND;\n     } else if (e instanceof IOException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof UnsupportedOperationException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else if (e instanceof IllegalArgumentException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else {\n       LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n       s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n     }\n  \n     final String js \u003d JsonUtil.toJsonString(e);\n     return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response toResponse(Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    //clear content type\n    response.setContentType(null);\n\n    //Convert exception\n    if (e instanceof ParamException) {\n      final ParamException paramexception \u003d (ParamException)e;\n      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n          + paramexception.getParameterName() + \"\\\": \"\n          + e.getCause().getMessage(), e);\n    }\n    if (e instanceof ContainerException) {\n      e \u003d toCause(e);\n    }\n    if (e instanceof RemoteException) {\n      e \u003d ((RemoteException)e).unwrapRemoteException();\n    }\n\n    //Map response status\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof AuthorizationException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else if (e instanceof IllegalArgumentException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
      "extendedDetails": {}
    },
    "09a156fcce2bc1be4081717bf7ef7d290e80d818": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2539. Support doAs and GETHOMEDIRECTORY in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1200731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/11 8:19 PM",
      "commitName": "09a156fcce2bc1be4081717bf7ef7d290e80d818",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "19/10/11 2:38 PM",
      "commitNameOld": "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 22.28,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,44 @@\n   public Response toResponse(Exception e) {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"GOT EXCEPITION\", e);\n     }\n \n     //clear content type\n     response.setContentType(null);\n \n     //Convert exception\n     if (e instanceof ParamException) {\n       final ParamException paramexception \u003d (ParamException)e;\n       e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n           + paramexception.getParameterName() + \"\\\": \"\n           + e.getCause().getMessage(), e);\n-    } \n+    }\n+    if (e instanceof ContainerException) {\n+      e \u003d toCause(e);\n+    }\n+    if (e instanceof RemoteException) {\n+      e \u003d ((RemoteException)e).unwrapRemoteException();\n+    }\n \n     //Map response status\n     final Response.Status s;\n     if (e instanceof SecurityException) {\n       s \u003d Response.Status.UNAUTHORIZED;\n+    } else if (e instanceof AuthorizationException) {\n+      s \u003d Response.Status.UNAUTHORIZED;\n     } else if (e instanceof FileNotFoundException) {\n       s \u003d Response.Status.NOT_FOUND;\n     } else if (e instanceof IOException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof UnsupportedOperationException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else if (e instanceof IllegalArgumentException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else {\n       LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n       s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n     }\n  \n     final String js \u003d JsonUtil.toJsonString(e);\n     return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response toResponse(Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    //clear content type\n    response.setContentType(null);\n\n    //Convert exception\n    if (e instanceof ParamException) {\n      final ParamException paramexception \u003d (ParamException)e;\n      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n          + paramexception.getParameterName() + \"\\\": \"\n          + e.getCause().getMessage(), e);\n    }\n    if (e instanceof ContainerException) {\n      e \u003d toCause(e);\n    }\n    if (e instanceof RemoteException) {\n      e \u003d ((RemoteException)e).unwrapRemoteException();\n    }\n\n    //Map response status\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.UNAUTHORIZED;\n    } else if (e instanceof AuthorizationException) {\n      s \u003d Response.Status.UNAUTHORIZED;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else if (e instanceof IllegalArgumentException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
      "extendedDetails": {}
    },
    "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2453. Fix http response code for partial content in webhdfs, added getDefaultBlockSize() and getDefaultReplication() in WebHdfsFileSystem and cleared content type in ExceptionHandler. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186508 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/10/11 2:38 PM",
      "commitName": "0bd8f0bd40bb6a497dfa7ebf823a52d67624e8ce",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "13/10/11 2:06 PM",
      "commitNameOld": "5904e00b4f7991014d57616fb613d647d4b5e58e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 6.02,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n   public Response toResponse(Exception e) {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"GOT EXCEPITION\", e);\n     }\n \n+    //clear content type\n+    response.setContentType(null);\n+\n     //Convert exception\n     if (e instanceof ParamException) {\n       final ParamException paramexception \u003d (ParamException)e;\n       e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n           + paramexception.getParameterName() + \"\\\": \"\n           + e.getCause().getMessage(), e);\n     } \n \n     //Map response status\n     final Response.Status s;\n     if (e instanceof SecurityException) {\n       s \u003d Response.Status.UNAUTHORIZED;\n     } else if (e instanceof FileNotFoundException) {\n       s \u003d Response.Status.NOT_FOUND;\n     } else if (e instanceof IOException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof UnsupportedOperationException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else if (e instanceof IllegalArgumentException) {\n       s \u003d Response.Status.BAD_REQUEST;\n     } else {\n       LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n       s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n     }\n  \n     final String js \u003d JsonUtil.toJsonString(e);\n     return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response toResponse(Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    //clear content type\n    response.setContentType(null);\n\n    //Convert exception\n    if (e instanceof ParamException) {\n      final ParamException paramexception \u003d (ParamException)e;\n      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n          + paramexception.getParameterName() + \"\\\": \"\n          + e.getCause().getMessage(), e);\n    } \n\n    //Map response status\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.UNAUTHORIZED;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else if (e instanceof IllegalArgumentException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
      "extendedDetails": {}
    },
    "5904e00b4f7991014d57616fb613d647d4b5e58e": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-2428. Convert com.sun.jersey.api.ParamException$QueryParamException to IllegalArgumentException and response it http BAD_REQUEST in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183098 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/10/11 2:06 PM",
      "commitName": "5904e00b4f7991014d57616fb613d647d4b5e58e",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2428. Convert com.sun.jersey.api.ParamException$QueryParamException to IllegalArgumentException and response it http BAD_REQUEST in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183098 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/10/11 2:06 PM",
          "commitName": "5904e00b4f7991014d57616fb613d647d4b5e58e",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "10/09/11 6:41 PM",
          "commitNameOld": "61d0b7530c8978c095ab6f62d9d38e168bd829c6",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 32.81,
          "commitsBetweenForRepo": 237,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,33 @@\n-  public Response toResponse(final Exception e) {\n+  public Response toResponse(Exception e) {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"GOT EXCEPITION\", e);\n     }\n \n+    //Convert exception\n+    if (e instanceof ParamException) {\n+      final ParamException paramexception \u003d (ParamException)e;\n+      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n+          + paramexception.getParameterName() + \"\\\": \"\n+          + e.getCause().getMessage(), e);\n+    } \n+\n+    //Map response status\n     final Response.Status s;\n     if (e instanceof SecurityException) {\n       s \u003d Response.Status.UNAUTHORIZED;\n     } else if (e instanceof FileNotFoundException) {\n       s \u003d Response.Status.NOT_FOUND;\n     } else if (e instanceof IOException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof UnsupportedOperationException) {\n       s \u003d Response.Status.BAD_REQUEST;\n+    } else if (e instanceof IllegalArgumentException) {\n+      s \u003d Response.Status.BAD_REQUEST;\n     } else {\n+      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n       s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n     }\n  \n     final String js \u003d JsonUtil.toJsonString(e);\n     return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response toResponse(Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    //Convert exception\n    if (e instanceof ParamException) {\n      final ParamException paramexception \u003d (ParamException)e;\n      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n          + paramexception.getParameterName() + \"\\\": \"\n          + e.getCause().getMessage(), e);\n    } \n\n    //Map response status\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.UNAUTHORIZED;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else if (e instanceof IllegalArgumentException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-2428. Convert com.sun.jersey.api.ParamException$QueryParamException to IllegalArgumentException and response it http BAD_REQUEST in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183098 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/10/11 2:06 PM",
          "commitName": "5904e00b4f7991014d57616fb613d647d4b5e58e",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "10/09/11 6:41 PM",
          "commitNameOld": "61d0b7530c8978c095ab6f62d9d38e168bd829c6",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 32.81,
          "commitsBetweenForRepo": 237,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,33 @@\n-  public Response toResponse(final Exception e) {\n+  public Response toResponse(Exception e) {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"GOT EXCEPITION\", e);\n     }\n \n+    //Convert exception\n+    if (e instanceof ParamException) {\n+      final ParamException paramexception \u003d (ParamException)e;\n+      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n+          + paramexception.getParameterName() + \"\\\": \"\n+          + e.getCause().getMessage(), e);\n+    } \n+\n+    //Map response status\n     final Response.Status s;\n     if (e instanceof SecurityException) {\n       s \u003d Response.Status.UNAUTHORIZED;\n     } else if (e instanceof FileNotFoundException) {\n       s \u003d Response.Status.NOT_FOUND;\n     } else if (e instanceof IOException) {\n       s \u003d Response.Status.FORBIDDEN;\n     } else if (e instanceof UnsupportedOperationException) {\n       s \u003d Response.Status.BAD_REQUEST;\n+    } else if (e instanceof IllegalArgumentException) {\n+      s \u003d Response.Status.BAD_REQUEST;\n     } else {\n+      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n       s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n     }\n  \n     final String js \u003d JsonUtil.toJsonString(e);\n     return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response toResponse(Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    //Convert exception\n    if (e instanceof ParamException) {\n      final ParamException paramexception \u003d (ParamException)e;\n      e \u003d new IllegalArgumentException(\"Invalid value for webhdfs parameter \\\"\"\n          + paramexception.getParameterName() + \"\\\": \"\n          + e.getCause().getMessage(), e);\n    } \n\n    //Map response status\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.UNAUTHORIZED;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else if (e instanceof IllegalArgumentException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      LOG.warn(\"INTERNAL_SERVER_ERROR\", e);\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java",
          "extendedDetails": {
            "oldValue": "[e-Exception(modifiers-final)]",
            "newValue": "[e-Exception]"
          }
        }
      ]
    },
    "61d0b7530c8978c095ab6f62d9d38e168bd829c6": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2284. Add a new FileSystem, webhdfs://, for supporting write Http access to HDFS.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167662 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/11 6:41 PM",
      "commitName": "61d0b7530c8978c095ab6f62d9d38e168bd829c6",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,21 @@\n+  public Response toResponse(final Exception e) {\n+    if (LOG.isTraceEnabled()) {\n+      LOG.trace(\"GOT EXCEPITION\", e);\n+    }\n+\n+    final Response.Status s;\n+    if (e instanceof SecurityException) {\n+      s \u003d Response.Status.UNAUTHORIZED;\n+    } else if (e instanceof FileNotFoundException) {\n+      s \u003d Response.Status.NOT_FOUND;\n+    } else if (e instanceof IOException) {\n+      s \u003d Response.Status.FORBIDDEN;\n+    } else if (e instanceof UnsupportedOperationException) {\n+      s \u003d Response.Status.BAD_REQUEST;\n+    } else {\n+      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n+    }\n+ \n+    final String js \u003d JsonUtil.toJsonString(e);\n+    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response toResponse(final Exception e) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"GOT EXCEPITION\", e);\n    }\n\n    final Response.Status s;\n    if (e instanceof SecurityException) {\n      s \u003d Response.Status.UNAUTHORIZED;\n    } else if (e instanceof FileNotFoundException) {\n      s \u003d Response.Status.NOT_FOUND;\n    } else if (e instanceof IOException) {\n      s \u003d Response.Status.FORBIDDEN;\n    } else if (e instanceof UnsupportedOperationException) {\n      s \u003d Response.Status.BAD_REQUEST;\n    } else {\n      s \u003d Response.Status.INTERNAL_SERVER_ERROR;\n    }\n \n    final String js \u003d JsonUtil.toJsonString(e);\n    return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java"
    }
  }
}