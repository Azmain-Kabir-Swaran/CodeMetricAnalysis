{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyService.java",
  "functionName": "stopApplication",
  "functionId": "stopApplication___applicationId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
  "functionStartLine": 545,
  "functionEndLine": 582,
  "numCommitsSeen": 17,
  "timeTaken": 1932,
  "changeHistory": [
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
    "749e5c09b9990590c282ea944e24735b795351fc",
    "d6eed5acca222a281401c1d524824f0460ea7826",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": "Ybodychange",
    "749e5c09b9990590c282ea944e24735b795351fc": "Ybodychange",
    "d6eed5acca222a281401c1d524824f0460ea7826": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6127. Add support for work preserving NM restart when AMRMProxy is enabled. (Botong Huang via asuresh).\n",
      "commitDate": "22/06/17 11:27 AM",
      "commitName": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "08/05/17 4:55 PM",
      "commitNameOld": "749e5c09b9990590c282ea944e24735b795351fc",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 44.77,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,38 @@\n   protected void stopApplication(ApplicationId applicationId) {\n     Preconditions.checkArgument(applicationId !\u003d null,\n         \"applicationId is null\");\n     RequestInterceptorChainWrapper pipeline \u003d\n         this.applPipelineMap.remove(applicationId);\n \n     if (pipeline \u003d\u003d null) {\n       LOG.info(\n           \"No interceptor pipeline for application {},\"\n               + \" likely because its AM is not run in this node.\",\n           applicationId);\n     } else {\n       // Remove the appAttempt in AMRMTokenSecretManager\n       this.secretManager\n           .applicationMasterFinished(pipeline.getApplicationAttemptId());\n \n       LOG.info(\"Stopping the request processing pipeline for application: \"\n           + applicationId);\n       try {\n         pipeline.getRootInterceptor().shutdown();\n       } catch (Throwable ex) {\n         LOG.warn(\n             \"Failed to shutdown the request processing pipeline for app:\"\n                 + applicationId, ex);\n       }\n+\n+      // Remove the app context from NMSS after the interceptors are shutdown\n+      if (this.nmContext.getNMStateStore() !\u003d null) {\n+        try {\n+          this.nmContext.getNMStateStore()\n+              .removeAMRMProxyAppContext(pipeline.getApplicationAttemptId());\n+        } catch (IOException e) {\n+          LOG.error(\"Error removing AMRMProxy application context for \"\n+              + applicationId, e);\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void stopApplication(ApplicationId applicationId) {\n    Preconditions.checkArgument(applicationId !\u003d null,\n        \"applicationId is null\");\n    RequestInterceptorChainWrapper pipeline \u003d\n        this.applPipelineMap.remove(applicationId);\n\n    if (pipeline \u003d\u003d null) {\n      LOG.info(\n          \"No interceptor pipeline for application {},\"\n              + \" likely because its AM is not run in this node.\",\n          applicationId);\n    } else {\n      // Remove the appAttempt in AMRMTokenSecretManager\n      this.secretManager\n          .applicationMasterFinished(pipeline.getApplicationAttemptId());\n\n      LOG.info(\"Stopping the request processing pipeline for application: \"\n          + applicationId);\n      try {\n        pipeline.getRootInterceptor().shutdown();\n      } catch (Throwable ex) {\n        LOG.warn(\n            \"Failed to shutdown the request processing pipeline for app:\"\n                + applicationId, ex);\n      }\n\n      // Remove the app context from NMSS after the interceptors are shutdown\n      if (this.nmContext.getNMStateStore() !\u003d null) {\n        try {\n          this.nmContext.getNMStateStore()\n              .removeAMRMProxyAppContext(pipeline.getApplicationAttemptId());\n        } catch (IOException e) {\n          LOG.error(\"Error removing AMRMProxy application context for \"\n              + applicationId, e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "749e5c09b9990590c282ea944e24735b795351fc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6281. Cleanup when AMRMProxy fails to initialize a new interceptor chain. (Botong Huang via Subru)\n\n(cherry picked from commit 57a9afbd45b7ef8e6021cc58f96bd0074bf1389d)\n",
      "commitDate": "08/05/17 4:55 PM",
      "commitName": "749e5c09b9990590c282ea944e24735b795351fc",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "08/05/17 4:41 PM",
      "commitNameOld": "cd9ff27ffc9369820d0c39200a11bf00e6a767c8",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   protected void stopApplication(ApplicationId applicationId) {\n     Preconditions.checkArgument(applicationId !\u003d null,\n         \"applicationId is null\");\n     RequestInterceptorChainWrapper pipeline \u003d\n         this.applPipelineMap.remove(applicationId);\n \n     if (pipeline \u003d\u003d null) {\n-      LOG.info(\"Request to stop an application that does not exist. Id:\"\n-          + applicationId);\n+      LOG.info(\n+          \"No interceptor pipeline for application {},\"\n+              + \" likely because its AM is not run in this node.\",\n+          applicationId);\n     } else {\n       // Remove the appAttempt in AMRMTokenSecretManager\n       this.secretManager\n           .applicationMasterFinished(pipeline.getApplicationAttemptId());\n \n       LOG.info(\"Stopping the request processing pipeline for application: \"\n           + applicationId);\n       try {\n         pipeline.getRootInterceptor().shutdown();\n       } catch (Throwable ex) {\n         LOG.warn(\n             \"Failed to shutdown the request processing pipeline for app:\"\n                 + applicationId, ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void stopApplication(ApplicationId applicationId) {\n    Preconditions.checkArgument(applicationId !\u003d null,\n        \"applicationId is null\");\n    RequestInterceptorChainWrapper pipeline \u003d\n        this.applPipelineMap.remove(applicationId);\n\n    if (pipeline \u003d\u003d null) {\n      LOG.info(\n          \"No interceptor pipeline for application {},\"\n              + \" likely because its AM is not run in this node.\",\n          applicationId);\n    } else {\n      // Remove the appAttempt in AMRMTokenSecretManager\n      this.secretManager\n          .applicationMasterFinished(pipeline.getApplicationAttemptId());\n\n      LOG.info(\"Stopping the request processing pipeline for application: \"\n          + applicationId);\n      try {\n        pipeline.getRootInterceptor().shutdown();\n      } catch (Throwable ex) {\n        LOG.warn(\n            \"Failed to shutdown the request processing pipeline for app:\"\n                + applicationId, ex);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "d6eed5acca222a281401c1d524824f0460ea7826": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6565. Fix memory leak and finish app trigger in AMRMProxy. (Botong Huang via Subru).\n",
      "commitDate": "05/05/17 4:27 PM",
      "commitName": "d6eed5acca222a281401c1d524824f0460ea7826",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "17/01/17 2:48 PM",
      "commitNameOld": "4d1f3d9020b8a8bf1d2a81e4d6ad20418ed9bcc2",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 108.03,
      "commitsBetweenForRepo": 608,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   protected void stopApplication(ApplicationId applicationId) {\n     Preconditions.checkArgument(applicationId !\u003d null,\n         \"applicationId is null\");\n     RequestInterceptorChainWrapper pipeline \u003d\n         this.applPipelineMap.remove(applicationId);\n \n     if (pipeline \u003d\u003d null) {\n       LOG.info(\"Request to stop an application that does not exist. Id:\"\n           + applicationId);\n     } else {\n+      // Remove the appAttempt in AMRMTokenSecretManager\n+      this.secretManager\n+          .applicationMasterFinished(pipeline.getApplicationAttemptId());\n+\n       LOG.info(\"Stopping the request processing pipeline for application: \"\n           + applicationId);\n       try {\n         pipeline.getRootInterceptor().shutdown();\n       } catch (Throwable ex) {\n         LOG.warn(\n             \"Failed to shutdown the request processing pipeline for app:\"\n                 + applicationId, ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void stopApplication(ApplicationId applicationId) {\n    Preconditions.checkArgument(applicationId !\u003d null,\n        \"applicationId is null\");\n    RequestInterceptorChainWrapper pipeline \u003d\n        this.applPipelineMap.remove(applicationId);\n\n    if (pipeline \u003d\u003d null) {\n      LOG.info(\"Request to stop an application that does not exist. Id:\"\n          + applicationId);\n    } else {\n      // Remove the appAttempt in AMRMTokenSecretManager\n      this.secretManager\n          .applicationMasterFinished(pipeline.getApplicationAttemptId());\n\n      LOG.info(\"Stopping the request processing pipeline for application: \"\n          + applicationId);\n      try {\n        pipeline.getRootInterceptor().shutdown();\n      } catch (Throwable ex) {\n        LOG.warn(\n            \"Failed to shutdown the request processing pipeline for app:\"\n                + applicationId, ex);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,21 @@\n+  protected void stopApplication(ApplicationId applicationId) {\n+    Preconditions.checkArgument(applicationId !\u003d null,\n+        \"applicationId is null\");\n+    RequestInterceptorChainWrapper pipeline \u003d\n+        this.applPipelineMap.remove(applicationId);\n+\n+    if (pipeline \u003d\u003d null) {\n+      LOG.info(\"Request to stop an application that does not exist. Id:\"\n+          + applicationId);\n+    } else {\n+      LOG.info(\"Stopping the request processing pipeline for application: \"\n+          + applicationId);\n+      try {\n+        pipeline.getRootInterceptor().shutdown();\n+      } catch (Throwable ex) {\n+        LOG.warn(\n+            \"Failed to shutdown the request processing pipeline for app:\"\n+                + applicationId, ex);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void stopApplication(ApplicationId applicationId) {\n    Preconditions.checkArgument(applicationId !\u003d null,\n        \"applicationId is null\");\n    RequestInterceptorChainWrapper pipeline \u003d\n        this.applPipelineMap.remove(applicationId);\n\n    if (pipeline \u003d\u003d null) {\n      LOG.info(\"Request to stop an application that does not exist. Id:\"\n          + applicationId);\n    } else {\n      LOG.info(\"Stopping the request processing pipeline for application: \"\n          + applicationId);\n      try {\n        pipeline.getRootInterceptor().shutdown();\n      } catch (Throwable ex) {\n        LOG.warn(\n            \"Failed to shutdown the request processing pipeline for app:\"\n                + applicationId, ex);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java"
    }
  }
}