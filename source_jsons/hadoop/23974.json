{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleHandler.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
  "functionStartLine": 538,
  "functionEndLine": 575,
  "numCommitsSeen": 78,
  "timeTaken": 8957,
  "changeHistory": [
    "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64",
    "723facfa408f469891e67084bdafa18841a0cf64",
    "ee9b80acf84718b952cbb82380cd0a4dbe22dc79",
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4",
    "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd",
    "0928502029ef141759008997335ea2cd836a7154",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925",
    "f114dad5ef9b72875e245803cee150ad12ff59de",
    "ade0f0560f729e50382c6992f713f29e2dd5b270",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1"
  ],
  "changeHistoryShort": {
    "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64": "Ybodychange",
    "723facfa408f469891e67084bdafa18841a0cf64": "Ybodychange",
    "ee9b80acf84718b952cbb82380cd0a4dbe22dc79": "Ybodychange",
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4": "Ybodychange",
    "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": "Ybodychange",
    "f114dad5ef9b72875e245803cee150ad12ff59de": "Ybodychange",
    "ade0f0560f729e50382c6992f713f29e2dd5b270": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename"
  },
  "changeHistoryDetails": {
    "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6850. Shuffle Handler keep-alive connections are closed from the server side. Contributed by Jonathan Eagles\n",
      "commitDate": "30/03/17 8:57 AM",
      "commitName": "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "25/01/17 2:32 PM",
      "commitNameOld": "a7463b6c88f698950a2f326030261001aa51b35e",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 63.73,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n     secretManager \u003d new JobTokenSecretManager();\n     recoverState(conf);\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n+    // Timer is shared across entire factory and must be released separately\n+    timer \u003d new HashedWheelTimer();\n     try {\n-      pipelineFact \u003d new HttpPipelineFactory(conf);\n+      pipelineFact \u003d new HttpPipelineFactory(conf, timer);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setOption(\"backlog\", conf.getInt(SHUFFLE_LISTEN_QUEUE_SIZE,\n         DEFAULT_SHUFFLE_LISTEN_QUEUE_SIZE));\n     bootstrap.setOption(\"child.keepAlive\", true);\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n     connectionKeepAliveEnabled \u003d\n         conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n     connectionKeepAliveTimeOut \u003d\n         Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n     mapOutputMetaInfoCacheSize \u003d\n         Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n           DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n    secretManager \u003d new JobTokenSecretManager();\n    recoverState(conf);\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    // Timer is shared across entire factory and must be released separately\n    timer \u003d new HashedWheelTimer();\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf, timer);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setOption(\"backlog\", conf.getInt(SHUFFLE_LISTEN_QUEUE_SIZE,\n        DEFAULT_SHUFFLE_LISTEN_QUEUE_SIZE));\n    bootstrap.setOption(\"child.keepAlive\", true);\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n    connectionKeepAliveEnabled \u003d\n        conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n    connectionKeepAliveTimeOut \u003d\n        Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n    mapOutputMetaInfoCacheSize \u003d\n        Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n          DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "723facfa408f469891e67084bdafa18841a0cf64": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6763. Shuffle server listen queue is too small (Jason Lowe via Varun Saxena)\n",
      "commitDate": "19/08/16 3:28 PM",
      "commitName": "723facfa408f469891e67084bdafa18841a0cf64",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "20/07/16 8:38 PM",
      "commitNameOld": "521f34317a2f94ea7e60f3d59db335cef3358e5b",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 29.78,
      "commitsBetweenForRepo": 214,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n     secretManager \u003d new JobTokenSecretManager();\n     recoverState(conf);\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n+    bootstrap.setOption(\"backlog\", conf.getInt(SHUFFLE_LISTEN_QUEUE_SIZE,\n+        DEFAULT_SHUFFLE_LISTEN_QUEUE_SIZE));\n     bootstrap.setOption(\"child.keepAlive\", true);\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n     connectionKeepAliveEnabled \u003d\n         conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n     connectionKeepAliveTimeOut \u003d\n         Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n     mapOutputMetaInfoCacheSize \u003d\n         Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n           DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n    secretManager \u003d new JobTokenSecretManager();\n    recoverState(conf);\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setOption(\"backlog\", conf.getInt(SHUFFLE_LISTEN_QUEUE_SIZE,\n        DEFAULT_SHUFFLE_LISTEN_QUEUE_SIZE));\n    bootstrap.setOption(\"child.keepAlive\", true);\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n    connectionKeepAliveEnabled \u003d\n        conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n    connectionKeepAliveTimeOut \u003d\n        Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n    mapOutputMetaInfoCacheSize \u003d\n        Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n          DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "ee9b80acf84718b952cbb82380cd0a4dbe22dc79": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6518. Set SO_KEEPALIVE on shuffle connections. Contributed by Chang Li\n",
      "commitDate": "21/10/15 2:44 PM",
      "commitName": "ee9b80acf84718b952cbb82380cd0a4dbe22dc79",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "10/09/15 9:00 AM",
      "commitNameOld": "8e615588d5216394d0251a9c97bd706537856c6d",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 41.24,
      "commitsBetweenForRepo": 316,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n     secretManager \u003d new JobTokenSecretManager();\n     recoverState(conf);\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n+    bootstrap.setOption(\"child.keepAlive\", true);\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n     connectionKeepAliveEnabled \u003d\n         conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n     connectionKeepAliveTimeOut \u003d\n         Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n     mapOutputMetaInfoCacheSize \u003d\n         Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n           DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n    secretManager \u003d new JobTokenSecretManager();\n    recoverState(conf);\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setOption(\"child.keepAlive\", true);\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n    connectionKeepAliveEnabled \u003d\n        conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n    connectionKeepAliveTimeOut \u003d\n        Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n    mapOutputMetaInfoCacheSize \u003d\n        Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n          DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5652. NM Recovery. ShuffleHandler should handle NM restarts. (Jason Lowe via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 12:10 PM",
      "commitName": "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "24/03/14 11:57 AM",
      "commitNameOld": "a90a5c24525bf6b92c49f7476b6de286338018c0",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 50.01,
      "commitsBetweenForRepo": 305,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,33 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n+    userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n+    secretManager \u003d new JobTokenSecretManager();\n+    recoverState(conf);\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n     connectionKeepAliveEnabled \u003d\n         conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n     connectionKeepAliveTimeOut \u003d\n         Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n           DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n     mapOutputMetaInfoCacheSize \u003d\n         Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n           DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    userRsrc \u003d new ConcurrentHashMap\u003cString,String\u003e();\n    secretManager \u003d new JobTokenSecretManager();\n    recoverState(conf);\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n    connectionKeepAliveEnabled \u003d\n        conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n    connectionKeepAliveTimeOut \u003d\n        Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n    mapOutputMetaInfoCacheSize \u003d\n        Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n          DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5787. Added the ability to keep alive shuffle connections in the MapReduce shuffle-handler. Contributed by Rajesh Balamohan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580062 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 2:43 PM",
      "commitName": "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/02/14 5:24 PM",
      "commitNameOld": "ae29d9ee0419bce28530da5ef1c6fe36a6d50ad0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 24.85,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,30 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n+    connectionKeepAliveEnabled \u003d\n+        conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n+          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n+    connectionKeepAliveTimeOut \u003d\n+        Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n+          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n+    mapOutputMetaInfoCacheSize \u003d\n+        Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n+          DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n    connectionKeepAliveEnabled \u003d\n        conf.getBoolean(SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_ENABLED);\n    connectionKeepAliveTimeOut \u003d\n        Math.max(1, conf.getInt(SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT,\n          DEFAULT_SHUFFLE_CONNECTION_KEEP_ALIVE_TIME_OUT));\n    mapOutputMetaInfoCacheSize \u003d\n        Math.max(1, conf.getInt(SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE,\n          DEFAULT_SHUFFLE_MAPOUTPUT_META_INFO_CACHE_SIZE));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n-    super.start();\n+    super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {
            "oldValue": "start",
            "newValue": "serviceStart"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n-    super.start();\n+    super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n-    super.start();\n+    super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     try {\n       pipelineFact \u003d new HttpPipelineFactory(conf);\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n-    super.start();\n+    super.serviceStart();\n \n     sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                     DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.serviceStart();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4417. add support for encrypted shuffle (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365979 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:23 AM",
      "commitName": "9d16c9354b0c05edb30d23003dcdec4cc44ed925",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "09/01/12 6:15 PM",
      "commitNameOld": "849c68c7b5f80064de3692d766444c2f8864f47a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 198.46,
      "commitsBetweenForRepo": 1336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n   public synchronized void start() {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n-    HttpPipelineFactory pipelineFact \u003d new HttpPipelineFactory(conf);\n+    try {\n+      pipelineFact \u003d new HttpPipelineFactory(conf);\n+    } catch (Exception ex) {\n+      throw new RuntimeException(ex);\n+    }\n     bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n     accepted.add(ch);\n     port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n     conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n     pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.start();\n+\n+    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n+                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    try {\n      pipelineFact \u003d new HttpPipelineFactory(conf);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.start();\n\n    sslFileBufferSize \u003d conf.getInt(SUFFLE_SSL_FILE_BUFFER_SIZE_KEY,\n                                    DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "f114dad5ef9b72875e245803cee150ad12ff59de": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2986. Fixed MiniYARNCluster to support multiple NodeManagers. Contributed by Anupam Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 5:42 AM",
      "commitName": "f114dad5ef9b72875e245803cee150ad12ff59de",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/10/11 12:27 PM",
      "commitNameOld": "68328ae92632afc9cdd6e75b7a8d832723ddbe3b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 10.72,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,14 @@\n   public synchronized void start() {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n-    bootstrap.setPipelineFactory(new HttpPipelineFactory(conf));\n+    HttpPipelineFactory pipelineFact \u003d new HttpPipelineFactory(conf);\n+    bootstrap.setPipelineFactory(pipelineFact);\n     port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n-    accepted.add(bootstrap.bind(new InetSocketAddress(port)));\n+    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n+    accepted.add(ch);\n+    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n+    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n+    pipelineFact.SHUFFLE.setPort(port);\n     LOG.info(getName() + \" listening on port \" + port);\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    HttpPipelineFactory pipelineFact \u003d new HttpPipelineFactory(conf);\n    bootstrap.setPipelineFactory(pipelineFact);\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    Channel ch \u003d bootstrap.bind(new InetSocketAddress(port));\n    accepted.add(ch);\n    port \u003d ((InetSocketAddress)ch.getLocalAddress()).getPort();\n    conf.set(SHUFFLE_PORT_CONFIG_KEY, Integer.toString(port));\n    pipelineFact.SHUFFLE.setPort(port);\n    LOG.info(getName() + \" listening on port \" + port);\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "ade0f0560f729e50382c6992f713f29e2dd5b270": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163585 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 4:38 AM",
      "commitName": "ade0f0560f729e50382c6992f713f29e2dd5b270",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 6.48,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public synchronized void start() {\n     Configuration conf \u003d getConfig();\n     ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n     bootstrap.setPipelineFactory(new HttpPipelineFactory(conf));\n-    port \u003d conf.getInt(\"mapreduce.shuffle.port\", 8080);\n+    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n     accepted.add(bootstrap.bind(new InetSocketAddress(port)));\n     LOG.info(getName() + \" listening on port \" + port);\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void start() {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    bootstrap.setPipelineFactory(new HttpPipelineFactory(conf));\n    port \u003d conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);\n    accepted.add(bootstrap.bind(new InetSocketAddress(port)));\n    LOG.info(getName() + \" listening on port \" + port);\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void start() {\n    Configuration conf \u003d getConfig();\n    ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n    bootstrap.setPipelineFactory(new HttpPipelineFactory(conf));\n    port \u003d conf.getInt(\"mapreduce.shuffle.port\", 8080);\n    accepted.add(bootstrap.bind(new InetSocketAddress(port)));\n    LOG.info(getName() + \" listening on port \" + port);\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
      }
    }
  }
}