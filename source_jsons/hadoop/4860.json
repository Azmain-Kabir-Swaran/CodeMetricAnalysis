{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectorySnapshottableFeature.java",
  "functionName": "iterator",
  "functionId": "iterator",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
  "functionStartLine": 589,
  "functionEndLine": 623,
  "numCommitsSeen": 83,
  "timeTaken": 2630,
  "changeHistory": [
    "76a621ffd2d66bf012a554f4400091a92a5b473e",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "d42d0860cb670c8284bb298029cd6f8f59db9510",
    "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
    "b9f965de120b5278ac84a7e98aecb32aafde4c16",
    "f84000900afa8b6274eb227992134f24dbf5c2b4"
  ],
  "changeHistoryShort": {
    "76a621ffd2d66bf012a554f4400091a92a5b473e": "Yfilerename",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ybodychange",
    "d42d0860cb670c8284bb298029cd6f8f59db9510": "Ymultichange(Yreturntypechange,Ybodychange)",
    "6f4fe09687f9d13e3e552eaaa012399a5bf246d3": "Ybodychange",
    "b9f965de120b5278ac84a7e98aecb32aafde4c16": "Ymultichange(Yreturntypechange,Ybodychange)",
    "f84000900afa8b6274eb227992134f24dbf5c2b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76a621ffd2d66bf012a554f4400091a92a5b473e": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 5:08 PM",
      "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "07/07/14 1:14 PM",
      "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n         public Iterator\u003cSnapshotAndINode\u003e iterator() {\n           return new Iterator\u003cSnapshotAndINode\u003e() {\n             final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n             private DirectoryDiff next \u003d findNext();\n-  \n+\n             private DirectoryDiff findNext() {\n               for(; i.hasNext(); ) {\n                 final DirectoryDiff diff \u003d i.next();\n                 if (diff.isSnapshotRoot()) {\n                   return diff;\n                 }\n               }\n               return null;\n             }\n \n             @Override\n             public boolean hasNext() {\n               return next !\u003d null;\n             }\n-  \n+\n             @Override\n             public SnapshotAndINode next() {\n               final SnapshotAndINode pair \u003d new SnapshotAndINode(next\n                   .getSnapshotId(), getSnapshotById(next.getSnapshotId())\n                   .getRoot());\n               next \u003d findNext();\n               return pair;\n             }\n-  \n+\n             @Override\n             public void remove() {\n               throw new UnsupportedOperationException();\n             }\n           };\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Iterator\u003cSnapshotAndINode\u003e iterator() {\n          return new Iterator\u003cSnapshotAndINode\u003e() {\n            final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n            private DirectoryDiff next \u003d findNext();\n\n            private DirectoryDiff findNext() {\n              for(; i.hasNext(); ) {\n                final DirectoryDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n\n            @Override\n            public SnapshotAndINode next() {\n              final SnapshotAndINode pair \u003d new SnapshotAndINode(next\n                  .getSnapshotId(), getSnapshotById(next.getSnapshotId())\n                  .getRoot());\n              next \u003d findNext();\n              return pair;\n            }\n\n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java"
      }
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "14/12/13 2:13 AM",
      "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 24.44,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n         public Iterator\u003cSnapshotAndINode\u003e iterator() {\n           return new Iterator\u003cSnapshotAndINode\u003e() {\n             final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n             private DirectoryDiff next \u003d findNext();\n   \n             private DirectoryDiff findNext() {\n               for(; i.hasNext(); ) {\n                 final DirectoryDiff diff \u003d i.next();\n                 if (diff.isSnapshotRoot()) {\n                   return diff;\n                 }\n               }\n               return null;\n             }\n \n             @Override\n             public boolean hasNext() {\n               return next !\u003d null;\n             }\n   \n             @Override\n             public SnapshotAndINode next() {\n-              final Snapshot s \u003d next.snapshot;\n-              final SnapshotAndINode pair \u003d new SnapshotAndINode(s);\n+              final SnapshotAndINode pair \u003d new SnapshotAndINode(next\n+                  .getSnapshotId(), getSnapshotById(next.getSnapshotId())\n+                  .getRoot());\n               next \u003d findNext();\n               return pair;\n             }\n   \n             @Override\n             public void remove() {\n               throw new UnsupportedOperationException();\n             }\n           };\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Iterator\u003cSnapshotAndINode\u003e iterator() {\n          return new Iterator\u003cSnapshotAndINode\u003e() {\n            final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n            private DirectoryDiff next \u003d findNext();\n  \n            private DirectoryDiff findNext() {\n              for(; i.hasNext(); ) {\n                final DirectoryDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n  \n            @Override\n            public SnapshotAndINode next() {\n              final SnapshotAndINode pair \u003d new SnapshotAndINode(next\n                  .getSnapshotId(), getSnapshotById(next.getSnapshotId())\n                  .getRoot());\n              next \u003d findNext();\n              return pair;\n            }\n  \n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "d42d0860cb670c8284bb298029cd6f8f59db9510": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4500. Refactor snapshot INode methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446355 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/13 2:00 PM",
      "commitName": "d42d0860cb670c8284bb298029cd6f8f59db9510",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4500. Refactor snapshot INode methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446355 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/02/13 2:00 PM",
          "commitName": "d42d0860cb670c8284bb298029cd6f8f59db9510",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "13/02/13 4:43 PM",
          "commitNameOld": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,34 @@\n-        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n-          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n+        public Iterator\u003cSnapshotAndINode\u003e iterator() {\n+          return new Iterator\u003cSnapshotAndINode\u003e() {\n             final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n             private DirectoryDiff next \u003d findNext();\n   \n             private DirectoryDiff findNext() {\n               for(; i.hasNext(); ) {\n                 final DirectoryDiff diff \u003d i.next();\n                 if (diff.isSnapshotRoot()) {\n                   return diff;\n                 }\n               }\n               return null;\n             }\n \n             @Override\n             public boolean hasNext() {\n               return next !\u003d null;\n             }\n   \n             @Override\n-            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n+            public SnapshotAndINode next() {\n               final Snapshot s \u003d next.snapshot;\n-              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n-                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n+              final SnapshotAndINode pair \u003d new SnapshotAndINode(s);\n               next \u003d findNext();\n               return pair;\n             }\n   \n             @Override\n             public void remove() {\n               throw new UnsupportedOperationException();\n             }\n           };\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Iterator\u003cSnapshotAndINode\u003e iterator() {\n          return new Iterator\u003cSnapshotAndINode\u003e() {\n            final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n            private DirectoryDiff next \u003d findNext();\n  \n            private DirectoryDiff findNext() {\n              for(; i.hasNext(); ) {\n                final DirectoryDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n  \n            @Override\n            public SnapshotAndINode next() {\n              final Snapshot s \u003d next.snapshot;\n              final SnapshotAndINode pair \u003d new SnapshotAndINode(s);\n              next \u003d findNext();\n              return pair;\n            }\n  \n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cPair\u003c? extends INode,Snapshot\u003e\u003e",
            "newValue": "Iterator\u003cSnapshotAndINode\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4500. Refactor snapshot INode methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446355 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/02/13 2:00 PM",
          "commitName": "d42d0860cb670c8284bb298029cd6f8f59db9510",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "13/02/13 4:43 PM",
          "commitNameOld": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,34 @@\n-        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n-          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n+        public Iterator\u003cSnapshotAndINode\u003e iterator() {\n+          return new Iterator\u003cSnapshotAndINode\u003e() {\n             final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n             private DirectoryDiff next \u003d findNext();\n   \n             private DirectoryDiff findNext() {\n               for(; i.hasNext(); ) {\n                 final DirectoryDiff diff \u003d i.next();\n                 if (diff.isSnapshotRoot()) {\n                   return diff;\n                 }\n               }\n               return null;\n             }\n \n             @Override\n             public boolean hasNext() {\n               return next !\u003d null;\n             }\n   \n             @Override\n-            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n+            public SnapshotAndINode next() {\n               final Snapshot s \u003d next.snapshot;\n-              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n-                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n+              final SnapshotAndINode pair \u003d new SnapshotAndINode(s);\n               next \u003d findNext();\n               return pair;\n             }\n   \n             @Override\n             public void remove() {\n               throw new UnsupportedOperationException();\n             }\n           };\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Iterator\u003cSnapshotAndINode\u003e iterator() {\n          return new Iterator\u003cSnapshotAndINode\u003e() {\n            final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n            private DirectoryDiff next \u003d findNext();\n  \n            private DirectoryDiff findNext() {\n              for(; i.hasNext(); ) {\n                final DirectoryDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n  \n            @Override\n            public SnapshotAndINode next() {\n              final Snapshot s \u003d next.snapshot;\n              final SnapshotAndINode pair \u003d new SnapshotAndINode(s);\n              next \u003d findNext();\n              return pair;\n            }\n  \n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
          "extendedDetails": {}
        }
      ]
    },
    "6f4fe09687f9d13e3e552eaaa012399a5bf246d3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4447. Refactor INodeDirectoryWithSnapshot for supporting general INode diff lists.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1440216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/01/13 3:25 PM",
      "commitName": "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "29/01/13 1:31 PM",
      "commitNameOld": "66ea187228c899cadf23d10c7032c8efe1aa0df4",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n         public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n           return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n-            final Iterator\u003cSnapshotDiff\u003e i \u003d getSnapshotDiffs().iterator();\n-            private SnapshotDiff next \u003d findNext();\n+            final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n+            private DirectoryDiff next \u003d findNext();\n   \n-            private SnapshotDiff findNext() {\n+            private DirectoryDiff findNext() {\n               for(; i.hasNext(); ) {\n-                final SnapshotDiff diff \u003d i.next();\n+                final DirectoryDiff diff \u003d i.next();\n                 if (diff.isSnapshotRoot()) {\n                   return diff;\n                 }\n               }\n               return null;\n             }\n \n             @Override\n             public boolean hasNext() {\n               return next !\u003d null;\n             }\n   \n             @Override\n             public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n               final Snapshot s \u003d next.snapshot;\n               final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n                   new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n               next \u003d findNext();\n               return pair;\n             }\n   \n             @Override\n             public void remove() {\n               throw new UnsupportedOperationException();\n             }\n           };\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n            final Iterator\u003cDirectoryDiff\u003e i \u003d getDiffs().iterator();\n            private DirectoryDiff next \u003d findNext();\n  \n            private DirectoryDiff findNext() {\n              for(; i.hasNext(); ) {\n                final DirectoryDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n  \n            @Override\n            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n              final Snapshot s \u003d next.snapshot;\n              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n              next \u003d findNext();\n              return pair;\n            }\n  \n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "b9f965de120b5278ac84a7e98aecb32aafde4c16": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4103. Support O(1) snapshot creation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1424782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/12 5:30 PM",
      "commitName": "b9f965de120b5278ac84a7e98aecb32aafde4c16",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4103. Support O(1) snapshot creation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1424782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/12/12 5:30 PM",
          "commitName": "b9f965de120b5278ac84a7e98aecb32aafde4c16",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/12/12 7:40 PM",
          "commitNameOld": "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,35 @@\n-      public Iterator\u003cINodeDirectoryWithSnapshot\u003e iterator() {\n-        return new Iterator\u003cINodeDirectoryWithSnapshot\u003e() {\n-          final Iterator\u003cSnapshot\u003e i \u003d snapshots.iterator();\n+        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n+          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n+            final Iterator\u003cSnapshotDiff\u003e i \u003d getSnapshotDiffs().iterator();\n+            private SnapshotDiff next \u003d findNext();\n+  \n+            private SnapshotDiff findNext() {\n+              for(; i.hasNext(); ) {\n+                final SnapshotDiff diff \u003d i.next();\n+                if (diff.isSnapshotRoot()) {\n+                  return diff;\n+                }\n+              }\n+              return null;\n+            }\n \n-          @Override\n-          public boolean hasNext() {\n-            return i.hasNext();\n-          }\n-\n-          @Override\n-          public INodeDirectoryWithSnapshot next() {\n-            return i.next().getRoot();\n-          }\n-\n-          @Override\n-          public void remove() {\n-            throw new UnsupportedOperationException();\n-          }\n-        };\n-      }\n\\ No newline at end of file\n+            @Override\n+            public boolean hasNext() {\n+              return next !\u003d null;\n+            }\n+  \n+            @Override\n+            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n+              final Snapshot s \u003d next.snapshot;\n+              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n+                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n+              next \u003d findNext();\n+              return pair;\n+            }\n+  \n+            @Override\n+            public void remove() {\n+              throw new UnsupportedOperationException();\n+            }\n+          };\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n            final Iterator\u003cSnapshotDiff\u003e i \u003d getSnapshotDiffs().iterator();\n            private SnapshotDiff next \u003d findNext();\n  \n            private SnapshotDiff findNext() {\n              for(; i.hasNext(); ) {\n                final SnapshotDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n  \n            @Override\n            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n              final Snapshot s \u003d next.snapshot;\n              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n              next \u003d findNext();\n              return pair;\n            }\n  \n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cINodeDirectoryWithSnapshot\u003e",
            "newValue": "Iterator\u003cPair\u003c? extends INode,Snapshot\u003e\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4103. Support O(1) snapshot creation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1424782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/12/12 5:30 PM",
          "commitName": "b9f965de120b5278ac84a7e98aecb32aafde4c16",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/12/12 7:40 PM",
          "commitNameOld": "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,35 @@\n-      public Iterator\u003cINodeDirectoryWithSnapshot\u003e iterator() {\n-        return new Iterator\u003cINodeDirectoryWithSnapshot\u003e() {\n-          final Iterator\u003cSnapshot\u003e i \u003d snapshots.iterator();\n+        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n+          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n+            final Iterator\u003cSnapshotDiff\u003e i \u003d getSnapshotDiffs().iterator();\n+            private SnapshotDiff next \u003d findNext();\n+  \n+            private SnapshotDiff findNext() {\n+              for(; i.hasNext(); ) {\n+                final SnapshotDiff diff \u003d i.next();\n+                if (diff.isSnapshotRoot()) {\n+                  return diff;\n+                }\n+              }\n+              return null;\n+            }\n \n-          @Override\n-          public boolean hasNext() {\n-            return i.hasNext();\n-          }\n-\n-          @Override\n-          public INodeDirectoryWithSnapshot next() {\n-            return i.next().getRoot();\n-          }\n-\n-          @Override\n-          public void remove() {\n-            throw new UnsupportedOperationException();\n-          }\n-        };\n-      }\n\\ No newline at end of file\n+            @Override\n+            public boolean hasNext() {\n+              return next !\u003d null;\n+            }\n+  \n+            @Override\n+            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n+              final Snapshot s \u003d next.snapshot;\n+              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n+                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n+              next \u003d findNext();\n+              return pair;\n+            }\n+  \n+            @Override\n+            public void remove() {\n+              throw new UnsupportedOperationException();\n+            }\n+          };\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        public Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e iterator() {\n          return new Iterator\u003cPair\u003c? extends INode, Snapshot\u003e\u003e() {\n            final Iterator\u003cSnapshotDiff\u003e i \u003d getSnapshotDiffs().iterator();\n            private SnapshotDiff next \u003d findNext();\n  \n            private SnapshotDiff findNext() {\n              for(; i.hasNext(); ) {\n                final SnapshotDiff diff \u003d i.next();\n                if (diff.isSnapshotRoot()) {\n                  return diff;\n                }\n              }\n              return null;\n            }\n\n            @Override\n            public boolean hasNext() {\n              return next !\u003d null;\n            }\n  \n            @Override\n            public Pair\u003cINodeDirectory, Snapshot\u003e next() {\n              final Snapshot s \u003d next.snapshot;\n              final Pair\u003cINodeDirectory, Snapshot\u003e pair \u003d\n                  new Pair\u003cINodeDirectory, Snapshot\u003e(s.getRoot(), s);\n              next \u003d findNext();\n              return pair;\n            }\n  \n            @Override\n            public void remove() {\n              throw new UnsupportedOperationException();\n            }\n          };\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
          "extendedDetails": {}
        }
      ]
    },
    "f84000900afa8b6274eb227992134f24dbf5c2b4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4149. Implement the disallowSnapshot(..) in FSNamesystem and add resetSnapshottable(..) to SnapshotManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1405683 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/11/12 4:40 PM",
      "commitName": "f84000900afa8b6274eb227992134f24dbf5c2b4",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,20 @@\n+      public Iterator\u003cINodeDirectoryWithSnapshot\u003e iterator() {\n+        return new Iterator\u003cINodeDirectoryWithSnapshot\u003e() {\n+          final Iterator\u003cSnapshot\u003e i \u003d snapshots.iterator();\n+\n+          @Override\n+          public boolean hasNext() {\n+            return i.hasNext();\n+          }\n+\n+          @Override\n+          public INodeDirectoryWithSnapshot next() {\n+            return i.next().getRoot();\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+          }\n+        };\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public Iterator\u003cINodeDirectoryWithSnapshot\u003e iterator() {\n        return new Iterator\u003cINodeDirectoryWithSnapshot\u003e() {\n          final Iterator\u003cSnapshot\u003e i \u003d snapshots.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return i.hasNext();\n          }\n\n          @Override\n          public INodeDirectoryWithSnapshot next() {\n            return i.next().getRoot();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java"
    }
  }
}