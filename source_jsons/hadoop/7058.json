{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPermissionChecker.java",
  "functionName": "checkTraverse",
  "functionId": "checkTraverse___pc-FSPermissionChecker__iip-INodesInPath__resolveLink-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
  "functionStartLine": 696,
  "functionEndLine": 715,
  "numCommitsSeen": 236,
  "timeTaken": 7715,
  "changeHistory": [
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
    "5ea6fd85c7aff6df28b87789f607bb57ee920639",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795"
  ],
  "changeHistoryShort": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": "Ymultichange(Yparameterchange,Ybodychange)",
    "5ea6fd85c7aff6df28b87789f607bb57ee920639": "Ymultichange(Yparameterchange,Ybodychange)",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": "Ymultichange(Yparameterchange,Ybodychange)",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ymultichange(Yparameterchange,Ybodychange)",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/08/16 7:12 AM",
          "commitNameOld": "2550371f66c49fe0e40aadaa68744311270084ce",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 66.34,
          "commitsBetweenForRepo": 421,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n-      throws AccessControlException {\n-    for (int i\u003d0; i \u003c\u003d last; i++) {\n-      INodeAttributes inode \u003d inodeAttrs[i];\n-      if (!inode.isDirectory()) {\n-        throw new AccessControlException(\n-            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n+  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n+      boolean resolveLink) throws AccessControlException,\n+          UnresolvedPathException, ParentNotDirectoryException {\n+    try {\n+      if (pc \u003d\u003d null || pc.isSuperUser()) {\n+        checkSimpleTraverse(iip);\n+      } else {\n+        pc.checkPermission(iip, false, null, null, null, null, false);\n       }\n-      if (!hasPermission(inode, FsAction.EXECUTE)) {\n-        throw new AccessControlException(toAccessControlString(\n-            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n-      }\n+    } catch (TraverseAccessControlException tace) {\n+      // unwrap the non-ACE (unresolved, parent not dir) exception\n+      // tunneled out of checker.\n+      tace.throwCause();\n+    }\n+    // maybe check that the last inode is a symlink\n+    if (resolveLink) {\n+      int last \u003d iip.length() - 1;\n+      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n      boolean resolveLink) throws AccessControlException,\n          UnresolvedPathException, ParentNotDirectoryException {\n    try {\n      if (pc \u003d\u003d null || pc.isSuperUser()) {\n        checkSimpleTraverse(iip);\n      } else {\n        pc.checkPermission(iip, false, null, null, null, null, false);\n      }\n    } catch (TraverseAccessControlException tace) {\n      // unwrap the non-ACE (unresolved, parent not dir) exception\n      // tunneled out of checker.\n      tace.throwCause();\n    }\n    // maybe check that the last inode is a symlink\n    if (resolveLink) {\n      int last \u003d iip.length() - 1;\n      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodeAttrs-INodeAttributes[], last-int]",
            "newValue": "[pc-FSPermissionChecker, iip-INodesInPath, resolveLink-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/08/16 7:12 AM",
          "commitNameOld": "2550371f66c49fe0e40aadaa68744311270084ce",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 66.34,
          "commitsBetweenForRepo": 421,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n-      throws AccessControlException {\n-    for (int i\u003d0; i \u003c\u003d last; i++) {\n-      INodeAttributes inode \u003d inodeAttrs[i];\n-      if (!inode.isDirectory()) {\n-        throw new AccessControlException(\n-            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n+  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n+      boolean resolveLink) throws AccessControlException,\n+          UnresolvedPathException, ParentNotDirectoryException {\n+    try {\n+      if (pc \u003d\u003d null || pc.isSuperUser()) {\n+        checkSimpleTraverse(iip);\n+      } else {\n+        pc.checkPermission(iip, false, null, null, null, null, false);\n       }\n-      if (!hasPermission(inode, FsAction.EXECUTE)) {\n-        throw new AccessControlException(toAccessControlString(\n-            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n-      }\n+    } catch (TraverseAccessControlException tace) {\n+      // unwrap the non-ACE (unresolved, parent not dir) exception\n+      // tunneled out of checker.\n+      tace.throwCause();\n+    }\n+    // maybe check that the last inode is a symlink\n+    if (resolveLink) {\n+      int last \u003d iip.length() - 1;\n+      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n      boolean resolveLink) throws AccessControlException,\n          UnresolvedPathException, ParentNotDirectoryException {\n    try {\n      if (pc \u003d\u003d null || pc.isSuperUser()) {\n        checkSimpleTraverse(iip);\n      } else {\n        pc.checkPermission(iip, false, null, null, null, null, false);\n      }\n    } catch (TraverseAccessControlException tace) {\n      // unwrap the non-ACE (unresolved, parent not dir) exception\n      // tunneled out of checker.\n      tace.throwCause();\n    }\n    // maybe check that the last inode is a symlink\n    if (resolveLink) {\n      int last \u003d iip.length() - 1;\n      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/08/16 7:12 AM",
          "commitNameOld": "2550371f66c49fe0e40aadaa68744311270084ce",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 66.34,
          "commitsBetweenForRepo": 421,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n-      throws AccessControlException {\n-    for (int i\u003d0; i \u003c\u003d last; i++) {\n-      INodeAttributes inode \u003d inodeAttrs[i];\n-      if (!inode.isDirectory()) {\n-        throw new AccessControlException(\n-            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n+  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n+      boolean resolveLink) throws AccessControlException,\n+          UnresolvedPathException, ParentNotDirectoryException {\n+    try {\n+      if (pc \u003d\u003d null || pc.isSuperUser()) {\n+        checkSimpleTraverse(iip);\n+      } else {\n+        pc.checkPermission(iip, false, null, null, null, null, false);\n       }\n-      if (!hasPermission(inode, FsAction.EXECUTE)) {\n-        throw new AccessControlException(toAccessControlString(\n-            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n-      }\n+    } catch (TraverseAccessControlException tace) {\n+      // unwrap the non-ACE (unresolved, parent not dir) exception\n+      // tunneled out of checker.\n+      tace.throwCause();\n+    }\n+    // maybe check that the last inode is a symlink\n+    if (resolveLink) {\n+      int last \u003d iip.length() - 1;\n+      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n      boolean resolveLink) throws AccessControlException,\n          UnresolvedPathException, ParentNotDirectoryException {\n    try {\n      if (pc \u003d\u003d null || pc.isSuperUser()) {\n        checkSimpleTraverse(iip);\n      } else {\n        pc.checkPermission(iip, false, null, null, null, null, false);\n      }\n    } catch (TraverseAccessControlException tace) {\n      // unwrap the non-ACE (unresolved, parent not dir) exception\n      // tunneled out of checker.\n      tace.throwCause();\n    }\n    // maybe check that the last inode is a symlink\n    if (resolveLink) {\n      int last \u003d iip.length() - 1;\n      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException]",
            "newValue": "[AccessControlException, UnresolvedPathException, ParentNotDirectoryException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/08/16 7:12 AM",
          "commitNameOld": "2550371f66c49fe0e40aadaa68744311270084ce",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 66.34,
          "commitsBetweenForRepo": 421,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n-      throws AccessControlException {\n-    for (int i\u003d0; i \u003c\u003d last; i++) {\n-      INodeAttributes inode \u003d inodeAttrs[i];\n-      if (!inode.isDirectory()) {\n-        throw new AccessControlException(\n-            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n+  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n+      boolean resolveLink) throws AccessControlException,\n+          UnresolvedPathException, ParentNotDirectoryException {\n+    try {\n+      if (pc \u003d\u003d null || pc.isSuperUser()) {\n+        checkSimpleTraverse(iip);\n+      } else {\n+        pc.checkPermission(iip, false, null, null, null, null, false);\n       }\n-      if (!hasPermission(inode, FsAction.EXECUTE)) {\n-        throw new AccessControlException(toAccessControlString(\n-            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n-      }\n+    } catch (TraverseAccessControlException tace) {\n+      // unwrap the non-ACE (unresolved, parent not dir) exception\n+      // tunneled out of checker.\n+      tace.throwCause();\n+    }\n+    // maybe check that the last inode is a symlink\n+    if (resolveLink) {\n+      int last \u003d iip.length() - 1;\n+      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkTraverse(FSPermissionChecker pc, INodesInPath iip,\n      boolean resolveLink) throws AccessControlException,\n          UnresolvedPathException, ParentNotDirectoryException {\n    try {\n      if (pc \u003d\u003d null || pc.isSuperUser()) {\n        checkSimpleTraverse(iip);\n      } else {\n        pc.checkPermission(iip, false, null, null, null, null, false);\n      }\n    } catch (TraverseAccessControlException tace) {\n      // unwrap the non-ACE (unresolved, parent not dir) exception\n      // tunneled out of checker.\n      tace.throwCause();\n    }\n    // maybe check that the last inode is a symlink\n    if (resolveLink) {\n      int last \u003d iip.length() - 1;\n      checkNotSymlink(iip.getINode(last), iip.getPathComponents(), last);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
      "commitDate": "04/08/16 2:14 PM",
      "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
          "commitDate": "04/08/16 2:14 PM",
          "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/05/16 10:02 AM",
          "commitNameOld": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 69.18,
          "commitsBetweenForRepo": 580,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,14 @@\n-  private void checkTraverse(INodeAttributes[] inodeAttrs, INode[] inodes,\n-      String path, int last) throws AccessControlException {\n-    int j \u003d 0;\n-    try {\n-      for (; j \u003c\u003d last; j++) {\n-        check(inodeAttrs[j], path, FsAction.EXECUTE);\n+  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n+      throws AccessControlException {\n+    for (int i\u003d0; i \u003c\u003d last; i++) {\n+      INodeAttributes inode \u003d inodeAttrs[i];\n+      if (!inode.isDirectory()) {\n+        throw new AccessControlException(\n+            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n       }\n-    } catch (AccessControlException e) {\n-      checkAncestorType(inodes, j, e);\n+      if (!hasPermission(inode, FsAction.EXECUTE)) {\n+        throw new AccessControlException(toAccessControlString(\n+            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n      throws AccessControlException {\n    for (int i\u003d0; i \u003c\u003d last; i++) {\n      INodeAttributes inode \u003d inodeAttrs[i];\n      if (!inode.isDirectory()) {\n        throw new AccessControlException(\n            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n      }\n      if (!hasPermission(inode, FsAction.EXECUTE)) {\n        throw new AccessControlException(toAccessControlString(\n            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodeAttrs-INodeAttributes[], inodes-INode[], path-String, last-int]",
            "newValue": "[inodeAttrs-INodeAttributes[], last-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
          "commitDate": "04/08/16 2:14 PM",
          "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/05/16 10:02 AM",
          "commitNameOld": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 69.18,
          "commitsBetweenForRepo": 580,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,14 @@\n-  private void checkTraverse(INodeAttributes[] inodeAttrs, INode[] inodes,\n-      String path, int last) throws AccessControlException {\n-    int j \u003d 0;\n-    try {\n-      for (; j \u003c\u003d last; j++) {\n-        check(inodeAttrs[j], path, FsAction.EXECUTE);\n+  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n+      throws AccessControlException {\n+    for (int i\u003d0; i \u003c\u003d last; i++) {\n+      INodeAttributes inode \u003d inodeAttrs[i];\n+      if (!inode.isDirectory()) {\n+        throw new AccessControlException(\n+            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n       }\n-    } catch (AccessControlException e) {\n-      checkAncestorType(inodes, j, e);\n+      if (!hasPermission(inode, FsAction.EXECUTE)) {\n+        throw new AccessControlException(toAccessControlString(\n+            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodeAttributes[] inodeAttrs, int last)\n      throws AccessControlException {\n    for (int i\u003d0; i \u003c\u003d last; i++) {\n      INodeAttributes inode \u003d inodeAttrs[i];\n      if (!inode.isDirectory()) {\n        throw new AccessControlException(\n            constructPath(inodeAttrs, i) + \" (is not a directory)\");\n      }\n      if (!hasPermission(inode, FsAction.EXECUTE)) {\n        throw new AccessControlException(toAccessControlString(\n            inode, constructPath(inodeAttrs, i), FsAction.EXECUTE));\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "5ea6fd85c7aff6df28b87789f607bb57ee920639": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10276. HDFS should not expose path info that user has no permission to see. (Yuanbo Liu via Yongjun Zhang)\n",
      "commitDate": "27/05/16 10:02 AM",
      "commitName": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10276. HDFS should not expose path info that user has no permission to see. (Yuanbo Liu via Yongjun Zhang)\n",
          "commitDate": "27/05/16 10:02 AM",
          "commitName": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "18/09/15 7:17 AM",
          "commitNameOld": "2ff6faf954eb0f1ab2b339d589edb30040087669",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 252.11,
          "commitsBetweenForRepo": 1699,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  private void checkTraverse(INodeAttributes[] inodes, String path, int last\n-      ) throws AccessControlException {\n-    for(int j \u003d 0; j \u003c\u003d last; j++) {\n-      check(inodes[j], path, FsAction.EXECUTE);\n+  private void checkTraverse(INodeAttributes[] inodeAttrs, INode[] inodes,\n+      String path, int last) throws AccessControlException {\n+    int j \u003d 0;\n+    try {\n+      for (; j \u003c\u003d last; j++) {\n+        check(inodeAttrs[j], path, FsAction.EXECUTE);\n+      }\n+    } catch (AccessControlException e) {\n+      checkAncestorType(inodes, j, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodeAttributes[] inodeAttrs, INode[] inodes,\n      String path, int last) throws AccessControlException {\n    int j \u003d 0;\n    try {\n      for (; j \u003c\u003d last; j++) {\n        check(inodeAttrs[j], path, FsAction.EXECUTE);\n      }\n    } catch (AccessControlException e) {\n      checkAncestorType(inodes, j, e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodes-INodeAttributes[], path-String, last-int]",
            "newValue": "[inodeAttrs-INodeAttributes[], inodes-INode[], path-String, last-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10276. HDFS should not expose path info that user has no permission to see. (Yuanbo Liu via Yongjun Zhang)\n",
          "commitDate": "27/05/16 10:02 AM",
          "commitName": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "18/09/15 7:17 AM",
          "commitNameOld": "2ff6faf954eb0f1ab2b339d589edb30040087669",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 252.11,
          "commitsBetweenForRepo": 1699,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  private void checkTraverse(INodeAttributes[] inodes, String path, int last\n-      ) throws AccessControlException {\n-    for(int j \u003d 0; j \u003c\u003d last; j++) {\n-      check(inodes[j], path, FsAction.EXECUTE);\n+  private void checkTraverse(INodeAttributes[] inodeAttrs, INode[] inodes,\n+      String path, int last) throws AccessControlException {\n+    int j \u003d 0;\n+    try {\n+      for (; j \u003c\u003d last; j++) {\n+        check(inodeAttrs[j], path, FsAction.EXECUTE);\n+      }\n+    } catch (AccessControlException e) {\n+      checkAncestorType(inodes, j, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodeAttributes[] inodeAttrs, INode[] inodes,\n      String path, int last) throws AccessControlException {\n    int j \u003d 0;\n    try {\n      for (; j \u003c\u003d last; j++) {\n        check(inodeAttrs[j], path, FsAction.EXECUTE);\n      }\n    } catch (AccessControlException e) {\n      checkAncestorType(inodes, j, e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
      "commitDate": "24/03/15 4:02 PM",
      "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
          "commitDate": "24/03/15 4:02 PM",
          "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "09/12/14 6:57 PM",
          "commitNameOld": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 104.84,
          "commitsBetweenForRepo": 828,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,6 @@\n-  private void checkTraverse(INodesInPath iip, int snapshotId)\n-      throws AccessControlException {\n-    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n-    for (int i \u003d 0; i \u003c inodes.size() - 1; i++) {\n-      INode inode \u003d inodes.get(i);\n-      if (inode \u003d\u003d null) {\n-        break;\n-      }\n-      check(inode, snapshotId, FsAction.EXECUTE);\n+  private void checkTraverse(INodeAttributes[] inodes, String path, int last\n+      ) throws AccessControlException {\n+    for(int j \u003d 0; j \u003c\u003d last; j++) {\n+      check(inodes[j], path, FsAction.EXECUTE);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodeAttributes[] inodes, String path, int last\n      ) throws AccessControlException {\n    for(int j \u003d 0; j \u003c\u003d last; j++) {\n      check(inodes[j], path, FsAction.EXECUTE);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[iip-INodesInPath, snapshotId-int]",
            "newValue": "[inodes-INodeAttributes[], path-String, last-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
          "commitDate": "24/03/15 4:02 PM",
          "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "09/12/14 6:57 PM",
          "commitNameOld": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 104.84,
          "commitsBetweenForRepo": 828,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,6 @@\n-  private void checkTraverse(INodesInPath iip, int snapshotId)\n-      throws AccessControlException {\n-    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n-    for (int i \u003d 0; i \u003c inodes.size() - 1; i++) {\n-      INode inode \u003d inodes.get(i);\n-      if (inode \u003d\u003d null) {\n-        break;\n-      }\n-      check(inode, snapshotId, FsAction.EXECUTE);\n+  private void checkTraverse(INodeAttributes[] inodes, String path, int last\n+      ) throws AccessControlException {\n+    for(int j \u003d 0; j \u003c\u003d last; j++) {\n+      check(inodes[j], path, FsAction.EXECUTE);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodeAttributes[] inodes, String path, int last\n      ) throws AccessControlException {\n    for(int j \u003d 0; j \u003c\u003d last; j++) {\n      check(inodes[j], path, FsAction.EXECUTE);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  private void checkTraverse(INode[] inodes, int last, int snapshotId\n-      ) throws AccessControlException {\n-    for(int j \u003d 0; j \u003c\u003d last; j++) {\n-      check(inodes[j], snapshotId, FsAction.EXECUTE);\n+  private void checkTraverse(INodesInPath iip, int snapshotId)\n+      throws AccessControlException {\n+    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n+    for (int i \u003d 0; i \u003c inodes.size() - 1; i++) {\n+      INode inode \u003d inodes.get(i);\n+      if (inode \u003d\u003d null) {\n+        break;\n+      }\n+      check(inode, snapshotId, FsAction.EXECUTE);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodesInPath iip, int snapshotId)\n      throws AccessControlException {\n    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n    for (int i \u003d 0; i \u003c inodes.size() - 1; i++) {\n      INode inode \u003d inodes.get(i);\n      if (inode \u003d\u003d null) {\n        break;\n      }\n      check(inode, snapshotId, FsAction.EXECUTE);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodes-INode[], last-int, snapshotId-int]",
            "newValue": "[iip-INodesInPath, snapshotId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
          "commitDate": "09/12/14 11:37 AM",
          "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 2:17 PM",
          "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 3.89,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  private void checkTraverse(INode[] inodes, int last, int snapshotId\n-      ) throws AccessControlException {\n-    for(int j \u003d 0; j \u003c\u003d last; j++) {\n-      check(inodes[j], snapshotId, FsAction.EXECUTE);\n+  private void checkTraverse(INodesInPath iip, int snapshotId)\n+      throws AccessControlException {\n+    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n+    for (int i \u003d 0; i \u003c inodes.size() - 1; i++) {\n+      INode inode \u003d inodes.get(i);\n+      if (inode \u003d\u003d null) {\n+        break;\n+      }\n+      check(inode, snapshotId, FsAction.EXECUTE);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INodesInPath iip, int snapshotId)\n      throws AccessControlException {\n    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n    for (int i \u003d 0; i \u003c inodes.size() - 1; i++) {\n      INode inode \u003d inodes.get(i);\n      if (inode \u003d\u003d null) {\n        break;\n      }\n      check(inode, snapshotId, FsAction.EXECUTE);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/11/13 3:52 PM",
          "commitNameOld": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 55.88,
          "commitsBetweenForRepo": 301,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  private void checkTraverse(INode[] inodes, int last, Snapshot snapshot\n+  private void checkTraverse(INode[] inodes, int last, int snapshotId\n       ) throws AccessControlException {\n     for(int j \u003d 0; j \u003c\u003d last; j++) {\n-      check(inodes[j], snapshot, FsAction.EXECUTE);\n+      check(inodes[j], snapshotId, FsAction.EXECUTE);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INode[] inodes, int last, int snapshotId\n      ) throws AccessControlException {\n    for(int j \u003d 0; j \u003c\u003d last; j++) {\n      check(inodes[j], snapshotId, FsAction.EXECUTE);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodes-INode[], last-int, snapshot-Snapshot]",
            "newValue": "[inodes-INode[], last-int, snapshotId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/11/13 3:52 PM",
          "commitNameOld": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 55.88,
          "commitsBetweenForRepo": 301,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  private void checkTraverse(INode[] inodes, int last, Snapshot snapshot\n+  private void checkTraverse(INode[] inodes, int last, int snapshotId\n       ) throws AccessControlException {\n     for(int j \u003d 0; j \u003c\u003d last; j++) {\n-      check(inodes[j], snapshot, FsAction.EXECUTE);\n+      check(inodes[j], snapshotId, FsAction.EXECUTE);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTraverse(INode[] inodes, int last, int snapshotId\n      ) throws AccessControlException {\n    for(int j \u003d 0; j \u003c\u003d last; j++) {\n      check(inodes[j], snapshotId, FsAction.EXECUTE);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}