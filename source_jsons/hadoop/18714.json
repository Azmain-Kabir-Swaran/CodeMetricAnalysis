{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TeraScheduler.java",
  "functionName": "pickBestSplits",
  "functionId": "pickBestSplits___host-Host",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraScheduler.java",
  "functionStartLine": 152,
  "functionEndLine": 190,
  "numCommitsSeen": 11,
  "timeTaken": 5274,
  "changeHistory": [
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void pickBestSplits(Host host) {\n    int tasksToPick \u003d Math.min(slotsPerHost, \n                               (int) Math.ceil((double) remainingSplits / \n                                               hosts.size()));\n    Split[] best \u003d new Split[tasksToPick];\n    for(Split cur: host.splits) {\n      LOG.debug(\"  examine: \" + cur.filename + \" \" + cur.locations.size());\n      int i \u003d 0;\n      while (i \u003c tasksToPick \u0026\u0026 best[i] !\u003d null \u0026\u0026 \n             best[i].locations.size() \u003c\u003d cur.locations.size()) {\n        i +\u003d 1;\n      }\n      if (i \u003c tasksToPick) {\n        for(int j \u003d tasksToPick - 1; j \u003e i; --j) {\n          best[j] \u003d best[j-1];\n        }\n        best[i] \u003d cur;\n      }\n    }\n    // for the chosen blocks, remove them from the other locations\n    for(int i\u003d0; i \u003c tasksToPick; ++i) {\n      if (best[i] !\u003d null) {\n        LOG.debug(\" best: \" + best[i].filename);\n        for (Host other: best[i].locations) {\n          other.splits.remove(best[i]);\n        }\n        best[i].locations.clear();\n        best[i].locations.add(host);\n        best[i].isAssigned \u003d true;\n        remainingSplits -\u003d 1;\n      }\n    }\n    // for the non-chosen blocks, remove this host\n    for(Split cur: host.splits) {\n      if (!cur.isAssigned) {\n        cur.locations.remove(host);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraScheduler.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void pickBestSplits(Host host) {\n    int tasksToPick \u003d Math.min(slotsPerHost, \n                               (int) Math.ceil((double) remainingSplits / \n                                               hosts.size()));\n    Split[] best \u003d new Split[tasksToPick];\n    for(Split cur: host.splits) {\n      LOG.debug(\"  examine: \" + cur.filename + \" \" + cur.locations.size());\n      int i \u003d 0;\n      while (i \u003c tasksToPick \u0026\u0026 best[i] !\u003d null \u0026\u0026 \n             best[i].locations.size() \u003c\u003d cur.locations.size()) {\n        i +\u003d 1;\n      }\n      if (i \u003c tasksToPick) {\n        for(int j \u003d tasksToPick - 1; j \u003e i; --j) {\n          best[j] \u003d best[j-1];\n        }\n        best[i] \u003d cur;\n      }\n    }\n    // for the chosen blocks, remove them from the other locations\n    for(int i\u003d0; i \u003c tasksToPick; ++i) {\n      if (best[i] !\u003d null) {\n        LOG.debug(\" best: \" + best[i].filename);\n        for (Host other: best[i].locations) {\n          other.splits.remove(best[i]);\n        }\n        best[i].locations.clear();\n        best[i].locations.add(host);\n        best[i].isAssigned \u003d true;\n        remainingSplits -\u003d 1;\n      }\n    }\n    // for the non-chosen blocks, remove this host\n    for(Split cur: host.splits) {\n      if (!cur.isAssigned) {\n        cur.locations.remove(host);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void pickBestSplits(Host host) {\n    int tasksToPick \u003d Math.min(slotsPerHost, \n                               (int) Math.ceil((double) remainingSplits / \n                                               hosts.size()));\n    Split[] best \u003d new Split[tasksToPick];\n    for(Split cur: host.splits) {\n      LOG.debug(\"  examine: \" + cur.filename + \" \" + cur.locations.size());\n      int i \u003d 0;\n      while (i \u003c tasksToPick \u0026\u0026 best[i] !\u003d null \u0026\u0026 \n             best[i].locations.size() \u003c\u003d cur.locations.size()) {\n        i +\u003d 1;\n      }\n      if (i \u003c tasksToPick) {\n        for(int j \u003d tasksToPick - 1; j \u003e i; --j) {\n          best[j] \u003d best[j-1];\n        }\n        best[i] \u003d cur;\n      }\n    }\n    // for the chosen blocks, remove them from the other locations\n    for(int i\u003d0; i \u003c tasksToPick; ++i) {\n      if (best[i] !\u003d null) {\n        LOG.debug(\" best: \" + best[i].filename);\n        for (Host other: best[i].locations) {\n          other.splits.remove(best[i]);\n        }\n        best[i].locations.clear();\n        best[i].locations.add(host);\n        best[i].isAssigned \u003d true;\n        remainingSplits -\u003d 1;\n      }\n    }\n    // for the non-chosen blocks, remove this host\n    for(Split cur: host.splits) {\n      if (!cur.isAssigned) {\n        cur.locations.remove(host);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,39 @@\n+  void pickBestSplits(Host host) {\n+    int tasksToPick \u003d Math.min(slotsPerHost, \n+                               (int) Math.ceil((double) remainingSplits / \n+                                               hosts.size()));\n+    Split[] best \u003d new Split[tasksToPick];\n+    for(Split cur: host.splits) {\n+      LOG.debug(\"  examine: \" + cur.filename + \" \" + cur.locations.size());\n+      int i \u003d 0;\n+      while (i \u003c tasksToPick \u0026\u0026 best[i] !\u003d null \u0026\u0026 \n+             best[i].locations.size() \u003c\u003d cur.locations.size()) {\n+        i +\u003d 1;\n+      }\n+      if (i \u003c tasksToPick) {\n+        for(int j \u003d tasksToPick - 1; j \u003e i; --j) {\n+          best[j] \u003d best[j-1];\n+        }\n+        best[i] \u003d cur;\n+      }\n+    }\n+    // for the chosen blocks, remove them from the other locations\n+    for(int i\u003d0; i \u003c tasksToPick; ++i) {\n+      if (best[i] !\u003d null) {\n+        LOG.debug(\" best: \" + best[i].filename);\n+        for (Host other: best[i].locations) {\n+          other.splits.remove(best[i]);\n+        }\n+        best[i].locations.clear();\n+        best[i].locations.add(host);\n+        best[i].isAssigned \u003d true;\n+        remainingSplits -\u003d 1;\n+      }\n+    }\n+    // for the non-chosen blocks, remove this host\n+    for(Split cur: host.splits) {\n+      if (!cur.isAssigned) {\n+        cur.locations.remove(host);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void pickBestSplits(Host host) {\n    int tasksToPick \u003d Math.min(slotsPerHost, \n                               (int) Math.ceil((double) remainingSplits / \n                                               hosts.size()));\n    Split[] best \u003d new Split[tasksToPick];\n    for(Split cur: host.splits) {\n      LOG.debug(\"  examine: \" + cur.filename + \" \" + cur.locations.size());\n      int i \u003d 0;\n      while (i \u003c tasksToPick \u0026\u0026 best[i] !\u003d null \u0026\u0026 \n             best[i].locations.size() \u003c\u003d cur.locations.size()) {\n        i +\u003d 1;\n      }\n      if (i \u003c tasksToPick) {\n        for(int j \u003d tasksToPick - 1; j \u003e i; --j) {\n          best[j] \u003d best[j-1];\n        }\n        best[i] \u003d cur;\n      }\n    }\n    // for the chosen blocks, remove them from the other locations\n    for(int i\u003d0; i \u003c tasksToPick; ++i) {\n      if (best[i] !\u003d null) {\n        LOG.debug(\" best: \" + best[i].filename);\n        for (Host other: best[i].locations) {\n          other.splits.remove(best[i]);\n        }\n        best[i].locations.clear();\n        best[i].locations.add(host);\n        best[i].isAssigned \u003d true;\n        remainingSplits -\u003d 1;\n      }\n    }\n    // for the non-chosen blocks, remove this host\n    for(Split cur: host.splits) {\n      if (!cur.isAssigned) {\n        cur.locations.remove(host);\n      }\n    }\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraScheduler.java"
    }
  }
}