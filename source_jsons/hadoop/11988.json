{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "recoverClose",
  "functionId": "recoverClose___b-ExtendedBlock__newGS-long__expectedBlockLen-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 1404,
  "functionEndLine": 1425,
  "numCommitsSeen": 230,
  "timeTaken": 15014,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "69afa26f19adad4c630a307c274130eb8b697141",
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "4bd7cbc29d142fc56324156333b9a8a7d7b68042",
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
    "d1d4e16690cc85f7f22fbead9cf596260819b561",
    "bf27b9ca574592ef603e126bacb9b6a37c9eb5c6",
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
    "01f37e42f050207b7659bf74e2484cf8bdae2d89",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "69afa26f19adad4c630a307c274130eb8b697141": "Ybodychange",
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ybodychange",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ybodychange",
    "4bd7cbc29d142fc56324156333b9a8a7d7b68042": "Ymodifierchange",
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b": "Ybodychange",
    "d1d4e16690cc85f7f22fbead9cf596260819b561": "Ymultichange(Yreturntypechange,Ybodychange)",
    "bf27b9ca574592ef603e126bacb9b6a37c9eb5c6": "Ymodifierchange",
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b": "Ymultichange(Yreturntypechange,Ybodychange)",
    "01f37e42f050207b7659bf74e2484cf8bdae2d89": "Ymultichange(Yreturntypechange,Ybodychange)",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     while (true) {\n       try {\n-        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+        try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n           // check replica\u0027s state\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           // bump the replica\u0027s GS\n           replicaInfo.bumpReplicaGS(newGS);\n           // finalize the replica if RBW\n           if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n             finalizeReplica(b.getBlockPoolId(), replicaInfo);\n           }\n           return replicaInfo;\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplicaInPipeline()\n             .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          replicaInfo.bumpReplicaGS(newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplicaInPipeline()\n            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "69afa26f19adad4c630a307c274130eb8b697141": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12157. Do fsyncDirectory(..) outside of FSDataset lock. Contributed by inayakumar B.\n",
      "commitDate": "09/08/17 7:03 AM",
      "commitName": "69afa26f19adad4c630a307c274130eb8b697141",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "01/08/17 6:34 PM",
      "commitNameOld": "6814324c332a7d780f3b844fd6f1c62db2f6c88e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 7.52,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     while (true) {\n       try {\n         try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n           // check replica\u0027s state\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           // bump the replica\u0027s GS\n           replicaInfo.bumpReplicaGS(newGS);\n           // finalize the replica if RBW\n           if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n-            finalizeReplica(b.getBlockPoolId(), replicaInfo, false);\n+            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n           }\n           return replicaInfo;\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplicaInPipeline()\n             .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          replicaInfo.bumpReplicaGS(newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplicaInPipeline()\n            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5042. Completed files lost after power failure. Contributed by Vinayakumar B.\n",
      "commitDate": "31/05/17 8:55 AM",
      "commitName": "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "25/05/17 11:05 AM",
      "commitNameOld": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 5.91,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     while (true) {\n       try {\n         try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n           // check replica\u0027s state\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           // bump the replica\u0027s GS\n           replicaInfo.bumpReplicaGS(newGS);\n           // finalize the replica if RBW\n           if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n-            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n+            finalizeReplica(b.getBlockPoolId(), replicaInfo, false);\n           }\n           return replicaInfo;\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplicaInPipeline()\n             .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          replicaInfo.bumpReplicaGS(newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo, false);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplicaInPipeline()\n            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "10/09/16 6:22 PM",
      "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     while (true) {\n       try {\n         try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n           // check replica\u0027s state\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           // bump the replica\u0027s GS\n-          bumpReplicaGS(replicaInfo, newGS);\n+          replicaInfo.bumpReplicaGS(newGS);\n           // finalize the replica if RBW\n           if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n             finalizeReplica(b.getBlockPoolId(), replicaInfo);\n           }\n           return replicaInfo;\n         }\n       } catch (MustStopExistingWriter e) {\n-        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n+        e.getReplicaInPipeline()\n+            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          replicaInfo.bumpReplicaGS(newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplicaInPipeline()\n            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/07/16 7:40 PM",
      "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 30.68,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     while (true) {\n       try {\n-        synchronized (this) {\n+        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n           // check replica\u0027s state\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           // bump the replica\u0027s GS\n           bumpReplicaGS(replicaInfo, newGS);\n           // finalize the replica if RBW\n           if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n             finalizeReplica(b.getBlockPoolId(), replicaInfo);\n           }\n           return replicaInfo;\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          bumpReplicaGS(replicaInfo, newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "4bd7cbc29d142fc56324156333b9a8a7d7b68042": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-10267. Extra \"synchronized\" on FsDatasetImpl#recoverAppend and FsDatasetImpl#recoverClose\n",
      "commitDate": "06/04/16 9:07 PM",
      "commitName": "4bd7cbc29d142fc56324156333b9a8a7d7b68042",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "04/04/16 6:02 PM",
      "commitNameOld": "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 2.13,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n+  public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     while (true) {\n       try {\n         synchronized (this) {\n           // check replica\u0027s state\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           // bump the replica\u0027s GS\n           bumpReplicaGS(replicaInfo, newGS);\n           // finalize the replica if RBW\n           if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n             finalizeReplica(b.getBlockPoolId(), replicaInfo);\n           }\n           return replicaInfo;\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        synchronized (this) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          bumpReplicaGS(replicaInfo, newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8496. Calling stopWriter() with FSDatasetImpl lock held may block other threads (cmccabe)\n",
      "commitDate": "04/04/16 6:02 PM",
      "commitName": "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "18/03/16 8:24 AM",
      "commitNameOld": "63c966a3fbeb675959fc4101e65de9f57aecd17d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 17.4,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,21 @@\n   public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n-    // check replica\u0027s state\n-    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n-    // bump the replica\u0027s GS\n-    bumpReplicaGS(replicaInfo, newGS);\n-    // finalize the replica if RBW\n-    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n-      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n+    while (true) {\n+      try {\n+        synchronized (this) {\n+          // check replica\u0027s state\n+          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n+          // bump the replica\u0027s GS\n+          bumpReplicaGS(replicaInfo, newGS);\n+          // finalize the replica if RBW\n+          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n+            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n+          }\n+          return replicaInfo;\n+        }\n+      } catch (MustStopExistingWriter e) {\n+        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n+      }\n     }\n-    return replicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    while (true) {\n      try {\n        synchronized (this) {\n          // check replica\u0027s state\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          // bump the replica\u0027s GS\n          bumpReplicaGS(replicaInfo, newGS);\n          // finalize the replica if RBW\n          if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n            finalizeReplica(b.getBlockPoolId(), replicaInfo);\n          }\n          return replicaInfo;\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "d1d4e16690cc85f7f22fbead9cf596260819b561": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-9710. DN can be configured to send block receipt IBRs in batches.\n",
      "commitDate": "26/02/16 3:32 PM",
      "commitName": "d1d4e16690cc85f7f22fbead9cf596260819b561",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9710. DN can be configured to send block receipt IBRs in batches.\n",
          "commitDate": "26/02/16 3:32 PM",
          "commitName": "d1d4e16690cc85f7f22fbead9cf596260819b561",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "21/02/16 7:59 PM",
          "commitNameOld": "342c9572bf6a623287f34c5cc0bc3be6038c191a",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 4.81,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public synchronized String recoverClose(ExtendedBlock b, long newGS,\n+  public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n-    return replicaInfo.getStorageUuid();\n+    return replicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "Replica"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9710. DN can be configured to send block receipt IBRs in batches.\n",
          "commitDate": "26/02/16 3:32 PM",
          "commitName": "d1d4e16690cc85f7f22fbead9cf596260819b561",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "21/02/16 7:59 PM",
          "commitNameOld": "342c9572bf6a623287f34c5cc0bc3be6038c191a",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 4.81,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public synchronized String recoverClose(ExtendedBlock b, long newGS,\n+  public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n-    return replicaInfo.getStorageUuid();\n+    return replicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf27b9ca574592ef603e126bacb9b6a37c9eb5c6": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-7065. Pipeline close recovery race can cause block corruption.\nContributed by Kihwal Lee.\n",
      "commitDate": "19/09/14 7:00 AM",
      "commitName": "bf27b9ca574592ef603e126bacb9b6a37c9eb5c6",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "19/09/14 6:50 AM",
      "commitNameOld": "f02d934fedf00f0ce43d6f3f9b06d89ccc6851a5",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  public String recoverClose(ExtendedBlock b, long newGS,\n+  public synchronized String recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n     return replicaInfo.getStorageUuid();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized String recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo.getStorageUuid();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, synchronized]"
      }
    },
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/11/13 12:07 PM",
      "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/11/13 12:07 PM",
          "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "11/11/13 5:16 PM",
          "commitNameOld": "ec5eebc450c54171ac783a20a030a637de1722de",
          "commitAuthorOld": "",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public Replica recoverClose(ExtendedBlock b, long newGS,\n+  public String recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n-    return replicaInfo;\n+    return replicaInfo.getStorageUuid();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo.getStorageUuid();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "Replica",
            "newValue": "String"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/11/13 12:07 PM",
          "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "11/11/13 5:16 PM",
          "commitNameOld": "ec5eebc450c54171ac783a20a030a637de1722de",
          "commitAuthorOld": "",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public Replica recoverClose(ExtendedBlock b, long newGS,\n+  public String recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n-    return replicaInfo;\n+    return replicaInfo.getStorageUuid();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo.getStorageUuid();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "01f37e42f050207b7659bf74e2484cf8bdae2d89": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-5390. Send one incremental block report per storage directory.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1534891 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/10/13 6:28 PM",
      "commitName": "01f37e42f050207b7659bf74e2484cf8bdae2d89",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-5390. Send one incremental block report per storage directory.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1534891 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/10/13 6:28 PM",
          "commitName": "01f37e42f050207b7659bf74e2484cf8bdae2d89",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/10/13 7:22 PM",
          "commitNameOld": "0ebab3a88a5f172a1180f4e88a91cf6194b273ca",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.96,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public void recoverClose(ExtendedBlock b, long newGS,\n+  public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n+    return replicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "Replica"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5390. Send one incremental block report per storage directory.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1534891 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/10/13 6:28 PM",
          "commitName": "01f37e42f050207b7659bf74e2484cf8bdae2d89",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/10/13 7:22 PM",
          "commitNameOld": "0ebab3a88a5f172a1180f4e88a91cf6194b273ca",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.96,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public void recoverClose(ExtendedBlock b, long newGS,\n+  public Replica recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n+    return replicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Replica recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n    return replicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n   public void recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n-    DataNode.LOG.info(\"Recover failed close \" + b);\n+    LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n-    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS,\n-        expectedBlockLen);\n+    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
            "oldMethodName": "recoverClose",
            "newMethodName": "recoverClose"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n   public void recoverClose(ExtendedBlock b, long newGS,\n       long expectedBlockLen) throws IOException {\n-    DataNode.LOG.info(\"Recover failed close \" + b);\n+    LOG.info(\"Recover failed close \" + b);\n     // check replica\u0027s state\n-    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS,\n-        expectedBlockLen);\n+    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n     // bump the replica\u0027s GS\n     bumpReplicaGS(replicaInfo, newGS);\n     // finalize the replica if RBW\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n       finalizeReplica(b.getBlockPoolId(), replicaInfo);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    DataNode.LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS,\n        expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    DataNode.LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS,\n        expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  public void recoverClose(ExtendedBlock b, long newGS,\n+      long expectedBlockLen) throws IOException {\n+    DataNode.LOG.info(\"Recover failed close \" + b);\n+    // check replica\u0027s state\n+    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS,\n+        expectedBlockLen);\n+    // bump the replica\u0027s GS\n+    bumpReplicaGS(replicaInfo, newGS);\n+    // finalize the replica if RBW\n+    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n+      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverClose(ExtendedBlock b, long newGS,\n      long expectedBlockLen) throws IOException {\n    DataNode.LOG.info(\"Recover failed close \" + b);\n    // check replica\u0027s state\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS,\n        expectedBlockLen);\n    // bump the replica\u0027s GS\n    bumpReplicaGS(replicaInfo, newGS);\n    // finalize the replica if RBW\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RBW) {\n      finalizeReplica(b.getBlockPoolId(), replicaInfo);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}