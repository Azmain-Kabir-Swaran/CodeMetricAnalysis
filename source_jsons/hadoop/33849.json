{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceHandlerModule.java",
  "functionName": "getTrafficControlBandwidthHandler",
  "functionId": "getTrafficControlBandwidthHandler___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
  "functionStartLine": 166,
  "functionEndLine": 187,
  "numCommitsSeen": 15,
  "timeTaken": 1617,
  "changeHistory": [
    "edcc3a95d5248883492f2960f4fd22e09612ee9c",
    "b2661765a5a48392a5691cee15904ed2de147b00",
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
    "a100be685cc4521e9949589948219231aa5d2733"
  ],
  "changeHistoryShort": {
    "edcc3a95d5248883492f2960f4fd22e09612ee9c": "Ybodychange",
    "b2661765a5a48392a5691cee15904ed2de147b00": "Ybodychange",
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4": "Ybodychange",
    "a100be685cc4521e9949589948219231aa5d2733": "Yintroduced"
  },
  "changeHistoryDetails": {
    "edcc3a95d5248883492f2960f4fd22e09612ee9c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7468. Provide means for container network policy control. (Xuan Gong via wangda)\n\nChange-Id: I73678c343f663412917758feef35d8308c216e76\n",
      "commitDate": "12/01/18 4:14 PM",
      "commitName": "edcc3a95d5248883492f2960f4fd22e09612ee9c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "11/10/17 11:14 AM",
      "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 93.25,
      "commitsBetweenForRepo": 620,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n       getTrafficControlBandwidthHandler(Configuration conf)\n         throws ResourceHandlerException {\n     if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n         YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n       if (trafficControlBandwidthHandler \u003d\u003d null) {\n         synchronized (OutboundBandwidthResourceHandler.class) {\n           if (trafficControlBandwidthHandler \u003d\u003d null) {\n-            LOG.debug(\"Creating new traffic control bandwidth handler\");\n+            LOG.info(\"Creating new traffic control bandwidth handler.\");\n             trafficControlBandwidthHandler \u003d new\n                 TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n                 .getInstance(conf), getInitializedCGroupsHandler(conf),\n                 new TrafficController(conf, PrivilegedOperationExecutor\n                     .getInstance(conf)));\n           }\n         }\n       }\n \n       return trafficControlBandwidthHandler;\n     } else {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTrafficControlBandwidthHandler(Configuration conf)\n        throws ResourceHandlerException {\n    if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n        YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n      if (trafficControlBandwidthHandler \u003d\u003d null) {\n        synchronized (OutboundBandwidthResourceHandler.class) {\n          if (trafficControlBandwidthHandler \u003d\u003d null) {\n            LOG.info(\"Creating new traffic control bandwidth handler.\");\n            trafficControlBandwidthHandler \u003d new\n                TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n                .getInstance(conf), getInitializedCGroupsHandler(conf),\n                new TrafficController(conf, PrivilegedOperationExecutor\n                    .getInstance(conf)));\n          }\n        }\n      }\n\n      return trafficControlBandwidthHandler;\n    } else {\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
      "extendedDetails": {}
    },
    "b2661765a5a48392a5691cee15904ed2de147b00": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4762. Fixed CgroupHandler\u0027s creation and usage to avoid NodeManagers crashing when LinuxContainerExecutor is enabled. (Sidharta Seethana via vinodkv)\n",
      "commitDate": "07/03/16 11:08 AM",
      "commitName": "b2661765a5a48392a5691cee15904ed2de147b00",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/01/16 4:19 PM",
      "commitNameOld": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
      "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "daysBetweenCommits": 41.78,
      "commitsBetweenForRepo": 286,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     getTrafficControlBandwidthHandler(Configuration conf)\n       throws ResourceHandlerException {\n     if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n         YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n       if (trafficControlBandwidthHandler \u003d\u003d null) {\n         synchronized (OutboundBandwidthResourceHandler.class) {\n           if (trafficControlBandwidthHandler \u003d\u003d null) {\n             LOG.debug(\"Creating new traffic control bandwidth handler\");\n             trafficControlBandwidthHandler \u003d new\n                 TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n-                .getInstance(conf), getCGroupsHandler(conf),\n+                .getInstance(conf), getInitializedCGroupsHandler(conf),\n                 new TrafficController(conf, PrivilegedOperationExecutor\n                     .getInstance(conf)));\n           }\n         }\n       }\n \n       return trafficControlBandwidthHandler;\n     } else {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "    getTrafficControlBandwidthHandler(Configuration conf)\n      throws ResourceHandlerException {\n    if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n        YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n      if (trafficControlBandwidthHandler \u003d\u003d null) {\n        synchronized (OutboundBandwidthResourceHandler.class) {\n          if (trafficControlBandwidthHandler \u003d\u003d null) {\n            LOG.debug(\"Creating new traffic control bandwidth handler\");\n            trafficControlBandwidthHandler \u003d new\n                TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n                .getInstance(conf), getInitializedCGroupsHandler(conf),\n                new TrafficController(conf, PrivilegedOperationExecutor\n                    .getInstance(conf)));\n          }\n        }\n      }\n\n      return trafficControlBandwidthHandler;\n    } else {\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
      "extendedDetails": {}
    },
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3542. Refactored existing CPU cgroups support to use the newer and integrated ResourceHandler mechanism, and also deprecated the old LCEResourceHandler inteface hierarchy. Contributed by Varun Vasudev.\n",
      "commitDate": "25/01/16 4:19 PM",
      "commitName": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "17/12/15 12:13 PM",
      "commitNameOld": "4e7d32c0db69882cde854ef581056142a997c005",
      "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "daysBetweenCommits": 39.17,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     getTrafficControlBandwidthHandler(Configuration conf)\n       throws ResourceHandlerException {\n     if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n         YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n       if (trafficControlBandwidthHandler \u003d\u003d null) {\n         synchronized (OutboundBandwidthResourceHandler.class) {\n           if (trafficControlBandwidthHandler \u003d\u003d null) {\n+            LOG.debug(\"Creating new traffic control bandwidth handler\");\n             trafficControlBandwidthHandler \u003d new\n                 TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n                 .getInstance(conf), getCGroupsHandler(conf),\n                 new TrafficController(conf, PrivilegedOperationExecutor\n                     .getInstance(conf)));\n           }\n         }\n       }\n \n       return trafficControlBandwidthHandler;\n     } else {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "    getTrafficControlBandwidthHandler(Configuration conf)\n      throws ResourceHandlerException {\n    if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n        YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n      if (trafficControlBandwidthHandler \u003d\u003d null) {\n        synchronized (OutboundBandwidthResourceHandler.class) {\n          if (trafficControlBandwidthHandler \u003d\u003d null) {\n            LOG.debug(\"Creating new traffic control bandwidth handler\");\n            trafficControlBandwidthHandler \u003d new\n                TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n                .getInstance(conf), getCGroupsHandler(conf),\n                new TrafficController(conf, PrivilegedOperationExecutor\n                    .getInstance(conf)));\n          }\n        }\n      }\n\n      return trafficControlBandwidthHandler;\n    } else {\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
      "extendedDetails": {}
    },
    "a100be685cc4521e9949589948219231aa5d2733": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3366. Enhanced NodeManager to support classifying/shaping outgoing network bandwidth traffic originating from YARN containers Contributed by Sidharta Seethana.\n",
      "commitDate": "22/04/15 5:26 PM",
      "commitName": "a100be685cc4521e9949589948219231aa5d2733",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+  getTrafficControlBandwidthHandler(Configuration conf)\n+      throws ResourceHandlerException {\n+    if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n+        YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n+      if (trafficControlBandwidthHandler \u003d\u003d null) {\n+        synchronized (OutboundBandwidthResourceHandler.class) {\n+          if (trafficControlBandwidthHandler \u003d\u003d null) {\n+            trafficControlBandwidthHandler \u003d new\n+                TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n+                .getInstance(conf), getCGroupsHandler(conf),\n+                new TrafficController(conf, PrivilegedOperationExecutor\n+                    .getInstance(conf)));\n+          }\n+        }\n+      }\n+\n+      return trafficControlBandwidthHandler;\n+    } else {\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  getTrafficControlBandwidthHandler(Configuration conf)\n      throws ResourceHandlerException {\n    if (conf.getBoolean(YarnConfiguration.NM_NETWORK_RESOURCE_ENABLED,\n        YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_ENABLED)) {\n      if (trafficControlBandwidthHandler \u003d\u003d null) {\n        synchronized (OutboundBandwidthResourceHandler.class) {\n          if (trafficControlBandwidthHandler \u003d\u003d null) {\n            trafficControlBandwidthHandler \u003d new\n                TrafficControlBandwidthHandlerImpl(PrivilegedOperationExecutor\n                .getInstance(conf), getCGroupsHandler(conf),\n                new TrafficController(conf, PrivilegedOperationExecutor\n                    .getInstance(conf)));\n          }\n        }\n      }\n\n      return trafficControlBandwidthHandler;\n    } else {\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java"
    }
  }
}