{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptImpl.java",
  "functionName": "getDiagnosticsLimitKCOrThrow",
  "functionId": "getDiagnosticsLimitKCOrThrow___configuration-Configuration(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
  "functionStartLine": 553,
  "functionEndLine": 581,
  "numCommitsSeen": 155,
  "timeTaken": 1663,
  "changeHistory": [
    "c7a36e613053ec8b111146004b887c2f13535469"
  ],
  "changeHistoryShort": {
    "c7a36e613053ec8b111146004b887c2f13535469": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7a36e613053ec8b111146004b887c2f13535469": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6125. The application attempt\u0027s diagnostic message should have a maximum size\n(Contributed by Andras Piros via Daniel Templeton)\n",
      "commitDate": "17/02/17 1:40 PM",
      "commitName": "c7a36e613053ec8b111146004b887c2f13535469",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,29 @@\n+  private int getDiagnosticsLimitKCOrThrow(final Configuration configuration) {\n+    try {\n+      final int diagnosticsLimitKC \u003d configuration.getInt(\n+          YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC,\n+          YarnConfiguration.DEFAULT_APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC);\n+\n+      if (diagnosticsLimitKC \u003c\u003d 0) {\n+        final String message \u003d\n+            String.format(DIAGNOSTIC_LIMIT_CONFIG_ERROR_MESSAGE,\n+                YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC,\n+                diagnosticsLimitKC);\n+        LOG.error(message);\n+\n+        throw new YarnRuntimeException(message);\n+      }\n+\n+      return diagnosticsLimitKC;\n+    } catch (final NumberFormatException ignored) {\n+      final String diagnosticsLimitKCString \u003d configuration\n+          .get(YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC);\n+      final String message \u003d\n+          String.format(DIAGNOSTIC_LIMIT_CONFIG_ERROR_MESSAGE,\n+              YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC,\n+              diagnosticsLimitKCString);\n+      LOG.error(message);\n+\n+      throw new YarnRuntimeException(message);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getDiagnosticsLimitKCOrThrow(final Configuration configuration) {\n    try {\n      final int diagnosticsLimitKC \u003d configuration.getInt(\n          YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC,\n          YarnConfiguration.DEFAULT_APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC);\n\n      if (diagnosticsLimitKC \u003c\u003d 0) {\n        final String message \u003d\n            String.format(DIAGNOSTIC_LIMIT_CONFIG_ERROR_MESSAGE,\n                YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC,\n                diagnosticsLimitKC);\n        LOG.error(message);\n\n        throw new YarnRuntimeException(message);\n      }\n\n      return diagnosticsLimitKC;\n    } catch (final NumberFormatException ignored) {\n      final String diagnosticsLimitKCString \u003d configuration\n          .get(YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC);\n      final String message \u003d\n          String.format(DIAGNOSTIC_LIMIT_CONFIG_ERROR_MESSAGE,\n              YarnConfiguration.APP_ATTEMPT_DIAGNOSTICS_LIMIT_KC,\n              diagnosticsLimitKCString);\n      LOG.error(message);\n\n      throw new YarnRuntimeException(message);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
    }
  }
}