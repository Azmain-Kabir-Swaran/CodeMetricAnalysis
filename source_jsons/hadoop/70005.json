{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystemStore.java",
  "functionName": "setFilesystemProperties",
  "functionId": "setFilesystemProperties___properties-Hashtable__String,String__(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
  "functionStartLine": 322,
  "functionEndLine": 345,
  "numCommitsSeen": 49,
  "timeTaken": 4340,
  "changeHistory": [
    "d1f5976c004292f35b0fc5efbc86273becc4a304",
    "b033c681e4fc3ee1a38caa807e130aee481d99d5",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "d1f5976c004292f35b0fc5efbc86273becc4a304": "Ybodychange",
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": "Ybodychange",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": "Ybodychange",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1f5976c004292f35b0fc5efbc86273becc4a304": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16699. Add verbose TRACE logging to ABFS.\n\nContributed by Sneha Vijayarajan,\n\nChange-Id: Ic616a10406e6e9f11616c9cc05d8630ebbedaf65\n",
      "commitDate": "07/01/20 10:05 AM",
      "commitName": "d1f5976c004292f35b0fc5efbc86273becc4a304",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "27/11/19 3:10 PM",
      "commitNameOld": "82ad9b549f9ae0867699042e0f5856577919a749",
      "commitAuthorOld": "Sneha Vijayarajan",
      "daysBetweenCommits": 40.79,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties)\n       throws AzureBlobFileSystemException {\n     if (properties \u003d\u003d null || properties.isEmpty()) {\n+      LOG.trace(\"setFilesystemProperties no properties present\");\n       return;\n     }\n \n     LOG.debug(\"setFilesystemProperties for filesystem: {} with properties: {}\",\n             client.getFileSystem(),\n             properties);\n \n     try (AbfsPerfInfo perfInfo \u003d startTracking(\"setFilesystemProperties\",\n             \"setFilesystemProperties\")) {\n       final String commaSeparatedProperties;\n       try {\n         commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n       } catch (CharacterCodingException ex) {\n         throw new InvalidAbfsRestOperationException(ex);\n       }\n \n       final AbfsRestOperation op \u003d client.setFilesystemProperties(commaSeparatedProperties);\n       perfInfo.registerResult(op.getResult()).registerSuccess(true);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties)\n      throws AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.isEmpty()) {\n      LOG.trace(\"setFilesystemProperties no properties present\");\n      return;\n    }\n\n    LOG.debug(\"setFilesystemProperties for filesystem: {} with properties: {}\",\n            client.getFileSystem(),\n            properties);\n\n    try (AbfsPerfInfo perfInfo \u003d startTracking(\"setFilesystemProperties\",\n            \"setFilesystemProperties\")) {\n      final String commaSeparatedProperties;\n      try {\n        commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n      } catch (CharacterCodingException ex) {\n        throw new InvalidAbfsRestOperationException(ex);\n      }\n\n      final AbfsRestOperation op \u003d client.setFilesystemProperties(commaSeparatedProperties);\n      perfInfo.registerResult(op.getResult()).registerSuccess(true);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16612. Track Azure Blob File System client-perceived latency\n\nContributed by Jeetesh Mangwani.\n\nThis add the ability to track the end-to-end performance of ADLS Gen 2 REST APIs by measuring latency in the Hadoop ABFS driver.\nThe latency information is sent back to the ADLS Gen 2 REST API endpoints in the subsequent requests.\n",
      "commitDate": "19/11/19 9:00 AM",
      "commitName": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthor": "Jeetesh Mangwani",
      "commitDateOld": "28/09/19 8:39 PM",
      "commitNameOld": "c0edc848a8e71b5e2a1586a589bbf2ac8685040d",
      "commitAuthorOld": "Sneha Vijayarajan",
      "daysBetweenCommits": 51.56,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties)\n       throws AzureBlobFileSystemException {\n     if (properties \u003d\u003d null || properties.isEmpty()) {\n       return;\n     }\n \n     LOG.debug(\"setFilesystemProperties for filesystem: {} with properties: {}\",\n             client.getFileSystem(),\n             properties);\n \n-    final String commaSeparatedProperties;\n-    try {\n-      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n-    } catch (CharacterCodingException ex) {\n-      throw new InvalidAbfsRestOperationException(ex);\n-    }\n+    try (AbfsPerfInfo perfInfo \u003d startTracking(\"setFilesystemProperties\",\n+            \"setFilesystemProperties\")) {\n+      final String commaSeparatedProperties;\n+      try {\n+        commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n+      } catch (CharacterCodingException ex) {\n+        throw new InvalidAbfsRestOperationException(ex);\n+      }\n \n-    client.setFilesystemProperties(commaSeparatedProperties);\n+      final AbfsRestOperation op \u003d client.setFilesystemProperties(commaSeparatedProperties);\n+      perfInfo.registerResult(op.getResult()).registerSuccess(true);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties)\n      throws AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.isEmpty()) {\n      return;\n    }\n\n    LOG.debug(\"setFilesystemProperties for filesystem: {} with properties: {}\",\n            client.getFileSystem(),\n            properties);\n\n    try (AbfsPerfInfo perfInfo \u003d startTracking(\"setFilesystemProperties\",\n            \"setFilesystemProperties\")) {\n      final String commaSeparatedProperties;\n      try {\n        commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n      } catch (CharacterCodingException ex) {\n        throw new InvalidAbfsRestOperationException(ex);\n      }\n\n      final AbfsRestOperation op \u003d client.setFilesystemProperties(commaSeparatedProperties);\n      perfInfo.registerResult(op.getResult()).registerSuccess(true);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15446. ABFS: tune imports \u0026 javadocs; stabilise tests.\nContributed by Steve Loughran and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n-    if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n+  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties)\n+      throws AzureBlobFileSystemException {\n+    if (properties \u003d\u003d null || properties.isEmpty()) {\n       return;\n     }\n \n-    this.LOG.debug(\n-            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n+    LOG.debug(\"setFilesystemProperties for filesystem: {} with properties: {}\",\n             client.getFileSystem(),\n             properties);\n \n     final String commaSeparatedProperties;\n     try {\n       commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n     } catch (CharacterCodingException ex) {\n       throw new InvalidAbfsRestOperationException(ex);\n     }\n \n     client.setFilesystemProperties(commaSeparatedProperties);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties)\n      throws AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.isEmpty()) {\n      return;\n    }\n\n    LOG.debug(\"setFilesystemProperties for filesystem: {} with properties: {}\",\n            client.getFileSystem(),\n            properties);\n\n    final String commaSeparatedProperties;\n    try {\n      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n    } catch (CharacterCodingException ex) {\n      throw new InvalidAbfsRestOperationException(ex);\n    }\n\n    client.setFilesystemProperties(commaSeparatedProperties);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  public void setFilesystemProperties(final AzureBlobFileSystem azureBlobFileSystem, final Hashtable\u003cString, String\u003e properties) throws\n-      AzureBlobFileSystemException {\n+  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n     if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n       return;\n     }\n \n-    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n-\n     this.LOG.debug(\n-        \"setFilesystemProperties for filesystem: {} with properties: {}\",\n-        client.getFileSystem(),\n-        properties);\n+            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n+            client.getFileSystem(),\n+            properties);\n \n     final String commaSeparatedProperties;\n     try {\n       commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n     } catch (CharacterCodingException ex) {\n       throw new InvalidAbfsRestOperationException(ex);\n     }\n+\n     client.setFilesystemProperties(commaSeparatedProperties);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n      return;\n    }\n\n    this.LOG.debug(\n            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n            client.getFileSystem(),\n            properties);\n\n    final String commaSeparatedProperties;\n    try {\n      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n    } catch (CharacterCodingException ex) {\n      throw new InvalidAbfsRestOperationException(ex);\n    }\n\n    client.setFilesystemProperties(commaSeparatedProperties);\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsHttpServiceImpl.java",
            "newPath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  public void setFilesystemProperties(final AzureBlobFileSystem azureBlobFileSystem, final Hashtable\u003cString, String\u003e properties) throws\n-      AzureBlobFileSystemException {\n+  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n     if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n       return;\n     }\n \n-    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n-\n     this.LOG.debug(\n-        \"setFilesystemProperties for filesystem: {} with properties: {}\",\n-        client.getFileSystem(),\n-        properties);\n+            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n+            client.getFileSystem(),\n+            properties);\n \n     final String commaSeparatedProperties;\n     try {\n       commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n     } catch (CharacterCodingException ex) {\n       throw new InvalidAbfsRestOperationException(ex);\n     }\n+\n     client.setFilesystemProperties(commaSeparatedProperties);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n      return;\n    }\n\n    this.LOG.debug(\n            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n            client.getFileSystem(),\n            properties);\n\n    final String commaSeparatedProperties;\n    try {\n      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n    } catch (CharacterCodingException ex) {\n      throw new InvalidAbfsRestOperationException(ex);\n    }\n\n    client.setFilesystemProperties(commaSeparatedProperties);\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  public void setFilesystemProperties(final AzureBlobFileSystem azureBlobFileSystem, final Hashtable\u003cString, String\u003e properties) throws\n-      AzureBlobFileSystemException {\n+  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n     if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n       return;\n     }\n \n-    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n-\n     this.LOG.debug(\n-        \"setFilesystemProperties for filesystem: {} with properties: {}\",\n-        client.getFileSystem(),\n-        properties);\n+            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n+            client.getFileSystem(),\n+            properties);\n \n     final String commaSeparatedProperties;\n     try {\n       commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n     } catch (CharacterCodingException ex) {\n       throw new InvalidAbfsRestOperationException(ex);\n     }\n+\n     client.setFilesystemProperties(commaSeparatedProperties);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setFilesystemProperties(final Hashtable\u003cString, String\u003e properties) throws AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n      return;\n    }\n\n    this.LOG.debug(\n            \"setFilesystemProperties for filesystem: {} with properties: {}\",\n            client.getFileSystem(),\n            properties);\n\n    final String commaSeparatedProperties;\n    try {\n      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n    } catch (CharacterCodingException ex) {\n      throw new InvalidAbfsRestOperationException(ex);\n    }\n\n    client.setFilesystemProperties(commaSeparatedProperties);\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {
            "oldValue": "[azureBlobFileSystem-AzureBlobFileSystem(modifiers-final), properties-Hashtable\u003cString,String\u003e(modifiers-final)]",
            "newValue": "[properties-Hashtable\u003cString,String\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,21 @@\n+  public void setFilesystemProperties(final AzureBlobFileSystem azureBlobFileSystem, final Hashtable\u003cString, String\u003e properties) throws\n+      AzureBlobFileSystemException {\n+    if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n+      return;\n+    }\n+\n+    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n+\n+    this.LOG.debug(\n+        \"setFilesystemProperties for filesystem: {} with properties: {}\",\n+        client.getFileSystem(),\n+        properties);\n+\n+    final String commaSeparatedProperties;\n+    try {\n+      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n+    } catch (CharacterCodingException ex) {\n+      throw new InvalidAbfsRestOperationException(ex);\n+    }\n+    client.setFilesystemProperties(commaSeparatedProperties);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setFilesystemProperties(final AzureBlobFileSystem azureBlobFileSystem, final Hashtable\u003cString, String\u003e properties) throws\n      AzureBlobFileSystemException {\n    if (properties \u003d\u003d null || properties.size() \u003d\u003d 0) {\n      return;\n    }\n\n    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n\n    this.LOG.debug(\n        \"setFilesystemProperties for filesystem: {} with properties: {}\",\n        client.getFileSystem(),\n        properties);\n\n    final String commaSeparatedProperties;\n    try {\n      commaSeparatedProperties \u003d convertXmsPropertiesToCommaSeparatedString(properties);\n    } catch (CharacterCodingException ex) {\n      throw new InvalidAbfsRestOperationException(ex);\n    }\n    client.setFilesystemProperties(commaSeparatedProperties);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsHttpServiceImpl.java"
    }
  }
}