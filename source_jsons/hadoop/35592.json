{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DynamicResourceConfiguration.java",
  "functionName": "getNodeResourceMap",
  "functionId": "getNodeResourceMap",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/resource/DynamicResourceConfiguration.java",
  "functionStartLine": 131,
  "functionEndLine": 148,
  "numCommitsSeen": 5,
  "timeTaken": 1524,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "28/03/16 11:12 AM",
      "commitNameOld": "524bc3c33aff301c1a8d60ed8e6a3b240e305045",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 78.16,
      "commitsBetweenForRepo": 510,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public Map\u003cNodeId, ResourceOption\u003e getNodeResourceMap() {\n     String[] nodes \u003d getNodes();\n     Map\u003cNodeId, ResourceOption\u003e resourceOptions\n       \u003d new HashMap\u003cNodeId, ResourceOption\u003e ();\n \n     for (String node : nodes) {\n-      NodeId nid \u003d ConverterUtils.toNodeId(node);\n+      NodeId nid \u003d NodeId.fromString(node);\n       int vcores \u003d getVcoresPerNode(node);\n       int memory \u003d getMemoryPerNode(node);\n       int overCommitTimeout \u003d getOverCommitTimeoutPerNode(node);\n       Resource resource \u003d Resources.createResource(memory, vcores);\n       ResourceOption resourceOption \u003d\n           ResourceOption.newInstance(resource, overCommitTimeout);\n       resourceOptions.put(nid, resourceOption);\n     }\n \n     return resourceOptions;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cNodeId, ResourceOption\u003e getNodeResourceMap() {\n    String[] nodes \u003d getNodes();\n    Map\u003cNodeId, ResourceOption\u003e resourceOptions\n      \u003d new HashMap\u003cNodeId, ResourceOption\u003e ();\n\n    for (String node : nodes) {\n      NodeId nid \u003d NodeId.fromString(node);\n      int vcores \u003d getVcoresPerNode(node);\n      int memory \u003d getMemoryPerNode(node);\n      int overCommitTimeout \u003d getOverCommitTimeoutPerNode(node);\n      Resource resource \u003d Resources.createResource(memory, vcores);\n      ResourceOption resourceOption \u003d\n          ResourceOption.newInstance(resource, overCommitTimeout);\n      resourceOptions.put(nid, resourceOption);\n    }\n\n    return resourceOptions;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/resource/DynamicResourceConfiguration.java",
      "extendedDetails": {}
    },
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-313. Add Admin API for supporting node resource configuration in command line. (Contributed by Inigo Goiri, Kenji Kikushima and Junping Du)\n",
      "commitDate": "15/09/15 7:56 AM",
      "commitName": "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,18 @@\n+  public Map\u003cNodeId, ResourceOption\u003e getNodeResourceMap() {\n+    String[] nodes \u003d getNodes();\n+    Map\u003cNodeId, ResourceOption\u003e resourceOptions\n+      \u003d new HashMap\u003cNodeId, ResourceOption\u003e ();\n+\n+    for (String node : nodes) {\n+      NodeId nid \u003d ConverterUtils.toNodeId(node);\n+      int vcores \u003d getVcoresPerNode(node);\n+      int memory \u003d getMemoryPerNode(node);\n+      int overCommitTimeout \u003d getOverCommitTimeoutPerNode(node);\n+      Resource resource \u003d Resources.createResource(memory, vcores);\n+      ResourceOption resourceOption \u003d\n+          ResourceOption.newInstance(resource, overCommitTimeout);\n+      resourceOptions.put(nid, resourceOption);\n+    }\n+\n+    return resourceOptions;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cNodeId, ResourceOption\u003e getNodeResourceMap() {\n    String[] nodes \u003d getNodes();\n    Map\u003cNodeId, ResourceOption\u003e resourceOptions\n      \u003d new HashMap\u003cNodeId, ResourceOption\u003e ();\n\n    for (String node : nodes) {\n      NodeId nid \u003d ConverterUtils.toNodeId(node);\n      int vcores \u003d getVcoresPerNode(node);\n      int memory \u003d getMemoryPerNode(node);\n      int overCommitTimeout \u003d getOverCommitTimeoutPerNode(node);\n      Resource resource \u003d Resources.createResource(memory, vcores);\n      ResourceOption resourceOption \u003d\n          ResourceOption.newInstance(resource, overCommitTimeout);\n      resourceOptions.put(nid, resourceOption);\n    }\n\n    return resourceOptions;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/resource/DynamicResourceConfiguration.java"
    }
  }
}