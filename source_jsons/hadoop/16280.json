{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConnectionManager.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
  "functionStartLine": 354,
  "functionEndLine": 393,
  "numCommitsSeen": 11,
  "timeTaken": 3104,
  "changeHistory": [
    "94a8dec168842cc17787526ee9a662f427a5dcea",
    "0ca7142c112c14004a6411df0f0d1bf3c4d17702",
    "6aa7aabff801905f55a18d117f927d0125057d78",
    "fa55eacd357f4c4524fb54598e989c5746921de2",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7"
  ],
  "changeHistoryShort": {
    "94a8dec168842cc17787526ee9a662f427a5dcea": "Ybodychange",
    "0ca7142c112c14004a6411df0f0d1bf3c4d17702": "Ybodychange",
    "6aa7aabff801905f55a18d117f927d0125057d78": "Ybodychange",
    "fa55eacd357f4c4524fb54598e989c5746921de2": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "94a8dec168842cc17787526ee9a662f427a5dcea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14114. RBF: MIN_ACTIVE_RATIO should be configurable. Contributed by Fei Hui.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "94a8dec168842cc17787526ee9a662f427a5dcea",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "0ca7142c112c14004a6411df0f0d1bf3c4d17702",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n     public void run() {\n       while (this.running) {\n         try {\n           ConnectionPool pool \u003d this.queue.take();\n           try {\n             int total \u003d pool.getNumConnections();\n             int active \u003d pool.getNumActiveConnections();\n+            float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n             if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n-                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n+                active \u003e\u003d poolMinActiveRatio * total) {\n               ConnectionContext conn \u003d pool.newConnection();\n               pool.addConnection(conn);\n             } else {\n               LOG.debug(\"Cannot add more than {} connections to {}\",\n                   pool.getMaxSize(), pool);\n             }\n           } catch (IOException e) {\n             LOG.error(\"Cannot create a new connection\", e);\n           }\n         } catch (InterruptedException e) {\n           LOG.error(\"The connection creator was interrupted\");\n           this.running \u003d false;\n         } catch (Throwable e) {\n           LOG.error(\"Fatal error caught by connection creator \", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (this.running) {\n        try {\n          ConnectionPool pool \u003d this.queue.take();\n          try {\n            int total \u003d pool.getNumConnections();\n            int active \u003d pool.getNumActiveConnections();\n            float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                active \u003e\u003d poolMinActiveRatio * total) {\n              ConnectionContext conn \u003d pool.newConnection();\n              pool.addConnection(conn);\n            } else {\n              LOG.debug(\"Cannot add more than {} connections to {}\",\n                  pool.getMaxSize(), pool);\n            }\n          } catch (IOException e) {\n            LOG.error(\"Cannot create a new connection\", e);\n          }\n        } catch (InterruptedException e) {\n          LOG.error(\"The connection creator was interrupted\");\n          this.running \u003d false;\n        } catch (Throwable e) {\n          LOG.error(\"Fatal error caught by connection creator \", e);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "0ca7142c112c14004a6411df0f0d1bf3c4d17702": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-14114. RBF: MIN_ACTIVE_RATIO should be configurable. Contributed by Fei Hui.\"\n\nThis reverts commit 7c0d6f65fde12ead91ed7c706521ad1d3dc995f8.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "0ca7142c112c14004a6411df0f0d1bf3c4d17702",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "6aa7aabff801905f55a18d117f927d0125057d78",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n     public void run() {\n       while (this.running) {\n         try {\n           ConnectionPool pool \u003d this.queue.take();\n           try {\n             int total \u003d pool.getNumConnections();\n             int active \u003d pool.getNumActiveConnections();\n-            float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n             if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n-                active \u003e\u003d poolMinActiveRatio * total) {\n+                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n               ConnectionContext conn \u003d pool.newConnection();\n               pool.addConnection(conn);\n             } else {\n               LOG.debug(\"Cannot add more than {} connections to {}\",\n                   pool.getMaxSize(), pool);\n             }\n           } catch (IOException e) {\n             LOG.error(\"Cannot create a new connection\", e);\n           }\n         } catch (InterruptedException e) {\n           LOG.error(\"The connection creator was interrupted\");\n           this.running \u003d false;\n         } catch (Throwable e) {\n           LOG.error(\"Fatal error caught by connection creator \", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (this.running) {\n        try {\n          ConnectionPool pool \u003d this.queue.take();\n          try {\n            int total \u003d pool.getNumConnections();\n            int active \u003d pool.getNumActiveConnections();\n            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n              ConnectionContext conn \u003d pool.newConnection();\n              pool.addConnection(conn);\n            } else {\n              LOG.debug(\"Cannot add more than {} connections to {}\",\n                  pool.getMaxSize(), pool);\n            }\n          } catch (IOException e) {\n            LOG.error(\"Cannot create a new connection\", e);\n          }\n        } catch (InterruptedException e) {\n          LOG.error(\"The connection creator was interrupted\");\n          this.running \u003d false;\n        } catch (Throwable e) {\n          LOG.error(\"Fatal error caught by connection creator \", e);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "6aa7aabff801905f55a18d117f927d0125057d78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14114. RBF: MIN_ACTIVE_RATIO should be configurable. Contributed by Fei Hui.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6aa7aabff801905f55a18d117f927d0125057d78",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "fa55eacd357f4c4524fb54598e989c5746921de2",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n     public void run() {\n       while (this.running) {\n         try {\n           ConnectionPool pool \u003d this.queue.take();\n           try {\n             int total \u003d pool.getNumConnections();\n             int active \u003d pool.getNumActiveConnections();\n+            float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n             if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n-                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n+                active \u003e\u003d poolMinActiveRatio * total) {\n               ConnectionContext conn \u003d pool.newConnection();\n               pool.addConnection(conn);\n             } else {\n               LOG.debug(\"Cannot add more than {} connections to {}\",\n                   pool.getMaxSize(), pool);\n             }\n           } catch (IOException e) {\n             LOG.error(\"Cannot create a new connection\", e);\n           }\n         } catch (InterruptedException e) {\n           LOG.error(\"The connection creator was interrupted\");\n           this.running \u003d false;\n         } catch (Throwable e) {\n           LOG.error(\"Fatal error caught by connection creator \", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (this.running) {\n        try {\n          ConnectionPool pool \u003d this.queue.take();\n          try {\n            int total \u003d pool.getNumConnections();\n            int active \u003d pool.getNumActiveConnections();\n            float poolMinActiveRatio \u003d pool.getMinActiveRatio();\n            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                active \u003e\u003d poolMinActiveRatio * total) {\n              ConnectionContext conn \u003d pool.newConnection();\n              pool.addConnection(conn);\n            } else {\n              LOG.debug(\"Cannot add more than {} connections to {}\",\n                  pool.getMaxSize(), pool);\n            }\n          } catch (IOException e) {\n            LOG.error(\"Cannot create a new connection\", e);\n          }\n        } catch (InterruptedException e) {\n          LOG.error(\"The connection creator was interrupted\");\n          this.running \u003d false;\n        } catch (Throwable e) {\n          LOG.error(\"Fatal error caught by connection creator \", e);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "fa55eacd357f4c4524fb54598e989c5746921de2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13834. RBF: Connection creator thread should catch Throwable. Contributed by CR Hota.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "fa55eacd357f4c4524fb54598e989c5746921de2",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "29/08/18 1:15 AM",
      "commitNameOld": "a0ebb6b39f2932d3ea2fb5e287f52b841e108428",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 299.35,
      "commitsBetweenForRepo": 2255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     public void run() {\n       while (this.running) {\n         try {\n           ConnectionPool pool \u003d this.queue.take();\n           try {\n             int total \u003d pool.getNumConnections();\n             int active \u003d pool.getNumActiveConnections();\n             if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                 active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n               ConnectionContext conn \u003d pool.newConnection();\n               pool.addConnection(conn);\n             } else {\n               LOG.debug(\"Cannot add more than {} connections to {}\",\n                   pool.getMaxSize(), pool);\n             }\n           } catch (IOException e) {\n             LOG.error(\"Cannot create a new connection\", e);\n           }\n         } catch (InterruptedException e) {\n           LOG.error(\"The connection creator was interrupted\");\n           this.running \u003d false;\n+        } catch (Throwable e) {\n+          LOG.error(\"Fatal error caught by connection creator \", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (this.running) {\n        try {\n          ConnectionPool pool \u003d this.queue.take();\n          try {\n            int total \u003d pool.getNumConnections();\n            int active \u003d pool.getNumActiveConnections();\n            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n              ConnectionContext conn \u003d pool.newConnection();\n              pool.addConnection(conn);\n            } else {\n              LOG.debug(\"Cannot add more than {} connections to {}\",\n                  pool.getMaxSize(), pool);\n            }\n          } catch (IOException e) {\n            LOG.error(\"Cannot create a new connection\", e);\n          }\n        } catch (InterruptedException e) {\n          LOG.error(\"The connection creator was interrupted\");\n          this.running \u003d false;\n        } catch (Throwable e) {\n          LOG.error(\"Fatal error caught by connection creator \", e);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      while (this.running) {\n        try {\n          ConnectionPool pool \u003d this.queue.take();\n          try {\n            int total \u003d pool.getNumConnections();\n            int active \u003d pool.getNumActiveConnections();\n            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n              ConnectionContext conn \u003d pool.newConnection();\n              pool.addConnection(conn);\n            } else {\n              LOG.debug(\"Cannot add more than {} connections to {}\",\n                  pool.getMaxSize(), pool);\n            }\n          } catch (IOException e) {\n            LOG.error(\"Cannot create a new connection\", e);\n          }\n        } catch (InterruptedException e) {\n          LOG.error(\"The connection creator was interrupted\");\n          this.running \u003d false;\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java"
      }
    },
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11546. Federation Router RPC server. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 8a9cdebebf26841a0f1e99fb08135f4597f2eba2)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "ca4f209b49e3aad6a80306f7342c9b6b560a79a7",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,24 @@\n+    public void run() {\n+      while (this.running) {\n+        try {\n+          ConnectionPool pool \u003d this.queue.take();\n+          try {\n+            int total \u003d pool.getNumConnections();\n+            int active \u003d pool.getNumActiveConnections();\n+            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n+                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n+              ConnectionContext conn \u003d pool.newConnection();\n+              pool.addConnection(conn);\n+            } else {\n+              LOG.debug(\"Cannot add more than {} connections to {}\",\n+                  pool.getMaxSize(), pool);\n+            }\n+          } catch (IOException e) {\n+            LOG.error(\"Cannot create a new connection\", e);\n+          }\n+        } catch (InterruptedException e) {\n+          LOG.error(\"The connection creator was interrupted\");\n+          this.running \u003d false;\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (this.running) {\n        try {\n          ConnectionPool pool \u003d this.queue.take();\n          try {\n            int total \u003d pool.getNumConnections();\n            int active \u003d pool.getNumActiveConnections();\n            if (pool.getNumConnections() \u003c pool.getMaxSize() \u0026\u0026\n                active \u003e\u003d MIN_ACTIVE_RATIO * total) {\n              ConnectionContext conn \u003d pool.newConnection();\n              pool.addConnection(conn);\n            } else {\n              LOG.debug(\"Cannot add more than {} connections to {}\",\n                  pool.getMaxSize(), pool);\n            }\n          } catch (IOException e) {\n            LOG.error(\"Cannot create a new connection\", e);\n          }\n        } catch (InterruptedException e) {\n          LOG.error(\"The connection creator was interrupted\");\n          this.running \u003d false;\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionManager.java"
    }
  }
}