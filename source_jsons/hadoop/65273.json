{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3ABlockOutputStream.java",
  "functionName": "uploadCurrentBlock",
  "functionId": "uploadCurrentBlock",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ABlockOutputStream.java",
  "functionStartLine": 310,
  "functionEndLine": 321,
  "numCommitsSeen": 10,
  "timeTaken": 1532,
  "changeHistory": [
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "621b43e254afaff708cd6fc4698b29628f6abc33",
    "6c348c56918973fd988b110e79231324a8befe12"
  ],
  "changeHistoryShort": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Ybodychange",
    "6c348c56918973fd988b110e79231324a8befe12": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "01/09/17 6:13 AM",
      "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 82.09,
      "commitsBetweenForRepo": 710,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,12 @@\n   private synchronized void uploadCurrentBlock() throws IOException {\n     Preconditions.checkState(hasActiveBlock(), \"No active block\");\n     LOG.debug(\"Writing block # {}\", blockCount);\n-    if (multiPartUpload \u003d\u003d null) {\n-      LOG.debug(\"Initiating Multipart upload\");\n-      multiPartUpload \u003d new MultiPartUpload();\n-    }\n+    initMultipartUpload();\n     try {\n       multiPartUpload.uploadBlockAsync(getActiveBlock());\n       bytesSubmitted +\u003d getActiveBlock().dataSize();\n     } finally {\n       // set the block to null, so the next write will create a new block.\n       clearActiveBlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void uploadCurrentBlock() throws IOException {\n    Preconditions.checkState(hasActiveBlock(), \"No active block\");\n    LOG.debug(\"Writing block # {}\", blockCount);\n    initMultipartUpload();\n    try {\n      multiPartUpload.uploadBlockAsync(getActiveBlock());\n      bytesSubmitted +\u003d getActiveBlock().dataSize();\n    } finally {\n      // set the block to null, so the next write will create a new block.\n      clearActiveBlock();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ABlockOutputStream.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "23/03/17 5:54 AM",
      "commitNameOld": "a5a4867f3b193a137a6260d539da7e21f02ffab3",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 162.01,
      "commitsBetweenForRepo": 999,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private synchronized void uploadCurrentBlock() throws IOException {\n     Preconditions.checkState(hasActiveBlock(), \"No active block\");\n     LOG.debug(\"Writing block # {}\", blockCount);\n     if (multiPartUpload \u003d\u003d null) {\n       LOG.debug(\"Initiating Multipart upload\");\n       multiPartUpload \u003d new MultiPartUpload();\n     }\n     try {\n       multiPartUpload.uploadBlockAsync(getActiveBlock());\n+      bytesSubmitted +\u003d getActiveBlock().dataSize();\n     } finally {\n       // set the block to null, so the next write will create a new block.\n       clearActiveBlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void uploadCurrentBlock() throws IOException {\n    Preconditions.checkState(hasActiveBlock(), \"No active block\");\n    LOG.debug(\"Writing block # {}\", blockCount);\n    if (multiPartUpload \u003d\u003d null) {\n      LOG.debug(\"Initiating Multipart upload\");\n      multiPartUpload \u003d new MultiPartUpload();\n    }\n    try {\n      multiPartUpload.uploadBlockAsync(getActiveBlock());\n      bytesSubmitted +\u003d getActiveBlock().dataSize();\n    } finally {\n      // set the block to null, so the next write will create a new block.\n      clearActiveBlock();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ABlockOutputStream.java",
      "extendedDetails": {}
    },
    "6c348c56918973fd988b110e79231324a8befe12": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13560. S3ABlockOutputStream to support huge (many GB) file writes. Contributed by Steve Loughran\n",
      "commitDate": "18/10/16 1:16 PM",
      "commitName": "6c348c56918973fd988b110e79231324a8befe12",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,14 @@\n+  private synchronized void uploadCurrentBlock() throws IOException {\n+    Preconditions.checkState(hasActiveBlock(), \"No active block\");\n+    LOG.debug(\"Writing block # {}\", blockCount);\n+    if (multiPartUpload \u003d\u003d null) {\n+      LOG.debug(\"Initiating Multipart upload\");\n+      multiPartUpload \u003d new MultiPartUpload();\n+    }\n+    try {\n+      multiPartUpload.uploadBlockAsync(getActiveBlock());\n+    } finally {\n+      // set the block to null, so the next write will create a new block.\n+      clearActiveBlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void uploadCurrentBlock() throws IOException {\n    Preconditions.checkState(hasActiveBlock(), \"No active block\");\n    LOG.debug(\"Writing block # {}\", blockCount);\n    if (multiPartUpload \u003d\u003d null) {\n      LOG.debug(\"Initiating Multipart upload\");\n      multiPartUpload \u003d new MultiPartUpload();\n    }\n    try {\n      multiPartUpload.uploadBlockAsync(getActiveBlock());\n    } finally {\n      // set the block to null, so the next write will create a new block.\n      clearActiveBlock();\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ABlockOutputStream.java"
    }
  }
}