{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AsyncCallHandler.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/AsyncCallHandler.java",
  "functionStartLine": 155,
  "functionEndLine": 168,
  "numCommitsSeen": 4,
  "timeTaken": 1223,
  "changeHistory": [
    "d328e667067743f723e332d92154da8e84e65742",
    "35f255b03b1bb5c94063ec1818af1d253ceee991"
  ],
  "changeHistoryShort": {
    "d328e667067743f723e332d92154da8e84e65742": "Ybodychange",
    "35f255b03b1bb5c94063ec1818af1d253ceee991": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d328e667067743f723e332d92154da8e84e65742": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
      "commitDate": "25/06/16 12:45 AM",
      "commitName": "d328e667067743f723e332d92154da8e84e65742",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "06/06/16 1:31 AM",
      "commitNameOld": "35f255b03b1bb5c94063ec1818af1d253ceee991",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 18.97,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n             public void run() {\n               for (; isRunning(this);) {\n+                final long waitTime \u003d checkCalls();\n+                tryStop(this);\n+\n                 try {\n-                  Thread.sleep(SLEEP_PERIOD);\n+                  synchronized (AsyncCallHandler.this) {\n+                    AsyncCallHandler.this.wait(waitTime);\n+                  }\n                 } catch (InterruptedException e) {\n                   kill(this);\n-                  return;\n                 }\n-\n-                checkCalls();\n-                tryStop(this);\n               }\n             }\n\\ No newline at end of file\n",
      "actualSource": "            public void run() {\n              for (; isRunning(this);) {\n                final long waitTime \u003d checkCalls();\n                tryStop(this);\n\n                try {\n                  synchronized (AsyncCallHandler.this) {\n                    AsyncCallHandler.this.wait(waitTime);\n                  }\n                } catch (InterruptedException e) {\n                  kill(this);\n                }\n              }\n            }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/AsyncCallHandler.java",
      "extendedDetails": {}
    },
    "35f255b03b1bb5c94063ec1818af1d253ceee991": {
      "type": "Yintroduced",
      "commitMessage": "Revert \"Revert \"HADOOP-13226 Support async call retry and failover.\"\"\n\nThis reverts commit 5360da8bd9f720384860f411bee081aef13b4bd4.\n",
      "commitDate": "06/06/16 1:31 AM",
      "commitName": "35f255b03b1bb5c94063ec1818af1d253ceee991",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,13 @@\n+            public void run() {\n+              for (; isRunning(this);) {\n+                try {\n+                  Thread.sleep(SLEEP_PERIOD);\n+                } catch (InterruptedException e) {\n+                  kill(this);\n+                  return;\n+                }\n+\n+                checkCalls();\n+                tryStop(this);\n+              }\n+            }\n\\ No newline at end of file\n",
      "actualSource": "            public void run() {\n              for (; isRunning(this);) {\n                try {\n                  Thread.sleep(SLEEP_PERIOD);\n                } catch (InterruptedException e) {\n                  kill(this);\n                  return;\n                }\n\n                checkCalls();\n                tryStop(this);\n              }\n            }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/AsyncCallHandler.java"
    }
  }
}