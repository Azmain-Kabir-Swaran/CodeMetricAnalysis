{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "scheduleNextLifeline",
  "functionId": "scheduleNextLifeline___baseTime-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 1191,
  "functionEndLine": 1195,
  "numCommitsSeen": 125,
  "timeTaken": 2120,
  "changeHistory": [
    "2759689d7d23001f007cb0dbe2521de90734dd5c"
  ],
  "changeHistoryShort": {
    "2759689d7d23001f007cb0dbe2521de90734dd5c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2759689d7d23001f007cb0dbe2521de90734dd5c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9239. DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness. Contributed by Chris Nauroth.\n",
      "commitDate": "04/03/16 3:29 PM",
      "commitName": "2759689d7d23001f007cb0dbe2521de90734dd5c",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,5 @@\n+    long scheduleNextLifeline(long baseTime) {\n+      // Numerical overflow is possible here and is okay.\n+      nextLifelineTime \u003d baseTime + lifelineIntervalMs;\n+      return nextLifelineTime;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    long scheduleNextLifeline(long baseTime) {\n      // Numerical overflow is possible here and is okay.\n      nextLifelineTime \u003d baseTime + lifelineIntervalMs;\n      return nextLifelineTime;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java"
    }
  }
}