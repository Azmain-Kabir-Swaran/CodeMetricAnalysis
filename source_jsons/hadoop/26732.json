{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskImpl.java",
  "functionName": "addAttempt",
  "functionId": "addAttempt___avataar-Avataar",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java",
  "functionStartLine": 619,
  "functionEndLine": 646,
  "numCommitsSeen": 44,
  "timeTaken": 1494,
  "changeHistory": [
    "6a1c41111edcdc58c846fc50e53554fbba230171"
  ],
  "changeHistoryShort": {
    "6a1c41111edcdc58c846fc50e53554fbba230171": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a1c41111edcdc58c846fc50e53554fbba230171": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5079. Changes job recovery to restore state directly from job history, instaed of simulating state machine events. Contributed by Jason Lowe and Robert Parker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1466767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/13 9:52 PM",
      "commitName": "6a1c41111edcdc58c846fc50e53554fbba230171",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,28 @@\n+  private TaskAttemptImpl addAttempt(Avataar avataar) {\n+    TaskAttemptImpl attempt \u003d createAttempt();\n+    attempt.setAvataar(avataar);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Created attempt \" + attempt.getID());\n+    }\n+    switch (attempts.size()) {\n+      case 0:\n+        attempts \u003d Collections.singletonMap(attempt.getID(),\n+            (TaskAttempt) attempt);\n+        break;\n+        \n+      case 1:\n+        Map\u003cTaskAttemptId, TaskAttempt\u003e newAttempts\n+            \u003d new LinkedHashMap\u003cTaskAttemptId, TaskAttempt\u003e(maxAttempts);\n+        newAttempts.putAll(attempts);\n+        attempts \u003d newAttempts;\n+        attempts.put(attempt.getID(), attempt);\n+        break;\n+\n+      default:\n+        attempts.put(attempt.getID(), attempt);\n+        break;\n+    }\n+\n+    ++nextAttemptNumber;\n+    return attempt;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskAttemptImpl addAttempt(Avataar avataar) {\n    TaskAttemptImpl attempt \u003d createAttempt();\n    attempt.setAvataar(avataar);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Created attempt \" + attempt.getID());\n    }\n    switch (attempts.size()) {\n      case 0:\n        attempts \u003d Collections.singletonMap(attempt.getID(),\n            (TaskAttempt) attempt);\n        break;\n        \n      case 1:\n        Map\u003cTaskAttemptId, TaskAttempt\u003e newAttempts\n            \u003d new LinkedHashMap\u003cTaskAttemptId, TaskAttempt\u003e(maxAttempts);\n        newAttempts.putAll(attempts);\n        attempts \u003d newAttempts;\n        attempts.put(attempt.getID(), attempt);\n        break;\n\n      default:\n        attempts.put(attempt.getID(), attempt);\n        break;\n    }\n\n    ++nextAttemptNumber;\n    return attempt;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java"
    }
  }
}