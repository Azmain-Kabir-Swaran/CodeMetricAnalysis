{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InotifyFSEditLogOpTranslator.java",
  "functionName": "translate",
  "functionId": "translate___op-FSEditLogOp",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
  "functionStartLine": 44,
  "functionEndLine": 189,
  "numCommitsSeen": 7,
  "timeTaken": 3490,
  "changeHistory": [
    "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313",
    "979c9ca2ca89e99dc7165abfa29c78d66de43d9a",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
    "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
    "75a326aaff8c92349701d9b3473c3070b8c2be44",
    "6104520369045dfaa4b543cbad21236ed322249b",
    "faa4455be512e070fa420084be8d1be5c72f3b08"
  ],
  "changeHistoryShort": {
    "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313": "Ybodychange",
    "979c9ca2ca89e99dc7165abfa29c78d66de43d9a": "Ybodychange",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Ybodychange",
    "6e13fc62e1f284f22fd0089f06ce281198bc7c2a": "Ybodychange",
    "75a326aaff8c92349701d9b3473c3070b8c2be44": "Ymultichange(Yreturntypechange,Ybodychange)",
    "6104520369045dfaa4b543cbad21236ed322249b": "Ybodychange",
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13956. iNotify should include information to identify a file as either replicated or erasure coded. Contributed by Hrishikesh Gadre.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "10/10/18 10:23 AM",
      "commitName": "bf3d591f0cb0fedeab5d89cc8d2270d3b9a70313",
      "commitAuthor": "Hrishikesh Gadre",
      "commitDateOld": "14/07/15 12:42 PM",
      "commitNameOld": "979c9ca2ca89e99dc7165abfa29c78d66de43d9a",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 1183.9,
      "commitsBetweenForRepo": 8744,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,144 +1,146 @@\n   public static EventBatch translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n         return new EventBatch(op.txid,\n             new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n             .overwrite(addOp.overwrite)\n             .defaultBlockSize(addOp.blockSize)\n+            .erasureCoded(addOp.erasureCodingPolicyId\n+                    !\u003d ErasureCodeConstants.REPLICATION_POLICY_ID)\n             .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n       } else { // append\n         return new EventBatch(op.txid,\n             new Event[]{new Event.AppendEvent.Builder()\n                 .path(addOp.path)\n                 .build()});\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n     case OP_APPEND:\n       FSEditLogOp.AppendOp appendOp \u003d (FSEditLogOp.AppendOp) op;\n       return new EventBatch(op.txid, new Event[] {new Event.AppendEvent\n           .Builder().path(appendOp.path).newBlock(appendOp.newBlock).build()});\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n           .replication(setRepOp.replication).build() });\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       events.add(new Event.AppendEvent.Builder()\n           .path(cdOp.trg)\n           .build());\n       for (String src : cdOp.srcs) {\n         events.add(new Event.UnlinkEvent.Builder()\n           .path(src)\n           .timestamp(cdOp.timestamp)\n           .build());\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n       return new EventBatch(op.txid, events.toArray(new Event[0]));\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.RenameEvent.Builder()\n               .srcPath(rnOpOld.src)\n               .dstPath(rnOpOld.dst)\n               .timestamp(rnOpOld.timestamp)\n               .build() });\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.RenameEvent.Builder()\n             .srcPath(rnOp.src)\n             .dstPath(rnOp.dst)\n             .timestamp(rnOp.timestamp)\n             .build() });\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.UnlinkEvent.Builder()\n             .path(delOp.path)\n             .timestamp(delOp.timestamp)\n             .build() });\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n           .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n           .perms(permOp.permissions).build() });\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n           .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n           .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n           .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n           .xAttrsRemoved(true).build() });\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n           .xAttrsRemoved(false).build() });\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n           .acls(saOp.aclEntries).build() });\n     case OP_TRUNCATE:\n       FSEditLogOp.TruncateOp tOp \u003d (FSEditLogOp.TruncateOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.TruncateEvent(tOp.src, tOp.newLength, tOp.timestamp) });\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatch translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new EventBatch(op.txid,\n            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .defaultBlockSize(addOp.blockSize)\n            .erasureCoded(addOp.erasureCodingPolicyId\n                    !\u003d ErasureCodeConstants.REPLICATION_POLICY_ID)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n      } else { // append\n        return new EventBatch(op.txid,\n            new Event[]{new Event.AppendEvent.Builder()\n                .path(addOp.path)\n                .build()});\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n    case OP_APPEND:\n      FSEditLogOp.AppendOp appendOp \u003d (FSEditLogOp.AppendOp) op;\n      return new EventBatch(op.txid, new Event[] {new Event.AppendEvent\n          .Builder().path(appendOp.path).newBlock(appendOp.newBlock).build()});\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() });\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent.Builder()\n          .path(cdOp.trg)\n          .build());\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent.Builder()\n          .path(src)\n          .timestamp(cdOp.timestamp)\n          .build());\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return new EventBatch(op.txid, events.toArray(new Event[0]));\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n              .srcPath(rnOpOld.src)\n              .dstPath(rnOpOld.dst)\n              .timestamp(rnOpOld.timestamp)\n              .build() });\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n            .srcPath(rnOp.src)\n            .dstPath(rnOp.dst)\n            .timestamp(rnOp.timestamp)\n            .build() });\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.UnlinkEvent.Builder()\n            .path(delOp.path)\n            .timestamp(delOp.timestamp)\n            .build() });\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() });\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() });\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() });\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() });\n    case OP_TRUNCATE:\n      FSEditLogOp.TruncateOp tOp \u003d (FSEditLogOp.TruncateOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.TruncateEvent(tOp.src, tOp.newLength, tOp.timestamp) });\n    default:\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
      "extendedDetails": {}
    },
    "979c9ca2ca89e99dc7165abfa29c78d66de43d9a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8742. Inotify: Support event for OP_TRUNCATE. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "14/07/15 12:42 PM",
      "commitName": "979c9ca2ca89e99dc7165abfa29c78d66de43d9a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "27/01/15 12:58 PM",
      "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 167.95,
      "commitsBetweenForRepo": 1477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,140 +1,144 @@\n   public static EventBatch translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n         return new EventBatch(op.txid,\n             new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n             .overwrite(addOp.overwrite)\n             .defaultBlockSize(addOp.blockSize)\n             .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n       } else { // append\n         return new EventBatch(op.txid,\n             new Event[]{new Event.AppendEvent.Builder()\n                 .path(addOp.path)\n                 .build()});\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n     case OP_APPEND:\n       FSEditLogOp.AppendOp appendOp \u003d (FSEditLogOp.AppendOp) op;\n       return new EventBatch(op.txid, new Event[] {new Event.AppendEvent\n           .Builder().path(appendOp.path).newBlock(appendOp.newBlock).build()});\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n           .replication(setRepOp.replication).build() });\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       events.add(new Event.AppendEvent.Builder()\n           .path(cdOp.trg)\n           .build());\n       for (String src : cdOp.srcs) {\n         events.add(new Event.UnlinkEvent.Builder()\n           .path(src)\n           .timestamp(cdOp.timestamp)\n           .build());\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n       return new EventBatch(op.txid, events.toArray(new Event[0]));\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.RenameEvent.Builder()\n               .srcPath(rnOpOld.src)\n               .dstPath(rnOpOld.dst)\n               .timestamp(rnOpOld.timestamp)\n               .build() });\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.RenameEvent.Builder()\n             .srcPath(rnOp.src)\n             .dstPath(rnOp.dst)\n             .timestamp(rnOp.timestamp)\n             .build() });\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.UnlinkEvent.Builder()\n             .path(delOp.path)\n             .timestamp(delOp.timestamp)\n             .build() });\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n           .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n           .perms(permOp.permissions).build() });\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n           .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n           .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n           .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n           .xAttrsRemoved(true).build() });\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n           .xAttrsRemoved(false).build() });\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n           .acls(saOp.aclEntries).build() });\n+    case OP_TRUNCATE:\n+      FSEditLogOp.TruncateOp tOp \u003d (FSEditLogOp.TruncateOp) op;\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.TruncateEvent(tOp.src, tOp.newLength, tOp.timestamp) });\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatch translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new EventBatch(op.txid,\n            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .defaultBlockSize(addOp.blockSize)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n      } else { // append\n        return new EventBatch(op.txid,\n            new Event[]{new Event.AppendEvent.Builder()\n                .path(addOp.path)\n                .build()});\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n    case OP_APPEND:\n      FSEditLogOp.AppendOp appendOp \u003d (FSEditLogOp.AppendOp) op;\n      return new EventBatch(op.txid, new Event[] {new Event.AppendEvent\n          .Builder().path(appendOp.path).newBlock(appendOp.newBlock).build()});\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() });\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent.Builder()\n          .path(cdOp.trg)\n          .build());\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent.Builder()\n          .path(src)\n          .timestamp(cdOp.timestamp)\n          .build());\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return new EventBatch(op.txid, events.toArray(new Event[0]));\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n              .srcPath(rnOpOld.src)\n              .dstPath(rnOpOld.dst)\n              .timestamp(rnOpOld.timestamp)\n              .build() });\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n            .srcPath(rnOp.src)\n            .dstPath(rnOp.dst)\n            .timestamp(rnOp.timestamp)\n            .build() });\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.UnlinkEvent.Builder()\n            .path(delOp.path)\n            .timestamp(delOp.timestamp)\n            .build() });\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() });\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() });\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() });\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() });\n    case OP_TRUNCATE:\n      FSEditLogOp.TruncateOp tOp \u003d (FSEditLogOp.TruncateOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.TruncateEvent(tOp.src, tOp.newLength, tOp.timestamp) });\n    default:\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
      "extendedDetails": {}
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "15/12/14 10:30 AM",
      "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 43.1,
      "commitsBetweenForRepo": 245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,136 +1,140 @@\n   public static EventBatch translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n         return new EventBatch(op.txid,\n             new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n             .overwrite(addOp.overwrite)\n             .defaultBlockSize(addOp.blockSize)\n             .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n       } else { // append\n         return new EventBatch(op.txid,\n             new Event[]{new Event.AppendEvent.Builder()\n                 .path(addOp.path)\n                 .build()});\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n+    case OP_APPEND:\n+      FSEditLogOp.AppendOp appendOp \u003d (FSEditLogOp.AppendOp) op;\n+      return new EventBatch(op.txid, new Event[] {new Event.AppendEvent\n+          .Builder().path(appendOp.path).newBlock(appendOp.newBlock).build()});\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n           .replication(setRepOp.replication).build() });\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       events.add(new Event.AppendEvent.Builder()\n           .path(cdOp.trg)\n           .build());\n       for (String src : cdOp.srcs) {\n         events.add(new Event.UnlinkEvent.Builder()\n           .path(src)\n           .timestamp(cdOp.timestamp)\n           .build());\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n       return new EventBatch(op.txid, events.toArray(new Event[0]));\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.RenameEvent.Builder()\n               .srcPath(rnOpOld.src)\n               .dstPath(rnOpOld.dst)\n               .timestamp(rnOpOld.timestamp)\n               .build() });\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.RenameEvent.Builder()\n             .srcPath(rnOp.src)\n             .dstPath(rnOp.dst)\n             .timestamp(rnOp.timestamp)\n             .build() });\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.UnlinkEvent.Builder()\n             .path(delOp.path)\n             .timestamp(delOp.timestamp)\n             .build() });\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n           .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n           .perms(permOp.permissions).build() });\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n           .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n           .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n           .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n           .xAttrsRemoved(true).build() });\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n           .xAttrsRemoved(false).build() });\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n           .acls(saOp.aclEntries).build() });\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatch translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new EventBatch(op.txid,\n            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .defaultBlockSize(addOp.blockSize)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n      } else { // append\n        return new EventBatch(op.txid,\n            new Event[]{new Event.AppendEvent.Builder()\n                .path(addOp.path)\n                .build()});\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n    case OP_APPEND:\n      FSEditLogOp.AppendOp appendOp \u003d (FSEditLogOp.AppendOp) op;\n      return new EventBatch(op.txid, new Event[] {new Event.AppendEvent\n          .Builder().path(appendOp.path).newBlock(appendOp.newBlock).build()});\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() });\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent.Builder()\n          .path(cdOp.trg)\n          .build());\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent.Builder()\n          .path(src)\n          .timestamp(cdOp.timestamp)\n          .build());\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return new EventBatch(op.txid, events.toArray(new Event[0]));\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n              .srcPath(rnOpOld.src)\n              .dstPath(rnOpOld.dst)\n              .timestamp(rnOpOld.timestamp)\n              .build() });\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n            .srcPath(rnOp.src)\n            .dstPath(rnOp.dst)\n            .timestamp(rnOp.timestamp)\n            .build() });\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.UnlinkEvent.Builder()\n            .path(delOp.path)\n            .timestamp(delOp.timestamp)\n            .build() });\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() });\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() });\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() });\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() });\n    default:\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
      "extendedDetails": {}
    },
    "6e13fc62e1f284f22fd0089f06ce281198bc7c2a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7513. HDFS inotify: add defaultBlockSize to CreateEvent (cmccabe)\n",
      "commitDate": "15/12/14 10:30 AM",
      "commitName": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/12/14 5:15 PM",
      "commitNameOld": "75a326aaff8c92349701d9b3473c3070b8c2be44",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 12.72,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,118 +1,136 @@\n   public static EventBatch translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n         return new EventBatch(op.txid,\n             new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n             .overwrite(addOp.overwrite)\n+            .defaultBlockSize(addOp.blockSize)\n             .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n-      } else {\n+      } else { // append\n         return new EventBatch(op.txid,\n-            new Event[] { new Event.AppendEvent(addOp.path) });\n+            new Event[]{new Event.AppendEvent.Builder()\n+                .path(addOp.path)\n+                .build()});\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n       return new EventBatch(op.txid, new Event[] {\n           new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n           .replication(setRepOp.replication).build() });\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n-      events.add(new Event.AppendEvent(cdOp.trg));\n+      events.add(new Event.AppendEvent.Builder()\n+          .path(cdOp.trg)\n+          .build());\n       for (String src : cdOp.srcs) {\n-        events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n+        events.add(new Event.UnlinkEvent.Builder()\n+          .path(src)\n+          .timestamp(cdOp.timestamp)\n+          .build());\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n       return new EventBatch(op.txid, events.toArray(new Event[0]));\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n       return new EventBatch(op.txid, new Event[] {\n-          new Event.RenameEvent(rnOpOld.src,\n-              rnOpOld.dst, rnOpOld.timestamp) });\n+          new Event.RenameEvent.Builder()\n+              .srcPath(rnOpOld.src)\n+              .dstPath(rnOpOld.dst)\n+              .timestamp(rnOpOld.timestamp)\n+              .build() });\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n       return new EventBatch(op.txid, new Event[] {\n-          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) });\n+          new Event.RenameEvent.Builder()\n+            .srcPath(rnOp.src)\n+            .dstPath(rnOp.dst)\n+            .timestamp(rnOp.timestamp)\n+            .build() });\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n       return new EventBatch(op.txid, new Event[] {\n-          new Event.UnlinkEvent(delOp.path, delOp.timestamp) });\n+          new Event.UnlinkEvent.Builder()\n+            .path(delOp.path)\n+            .timestamp(delOp.timestamp)\n+            .build() });\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n           .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n           .perms(permOp.permissions).build() });\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n           .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n           .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n           .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n           .xAttrsRemoved(true).build() });\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n           .xAttrsRemoved(false).build() });\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n       return new EventBatch(op.txid,\n         new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n           .acls(saOp.aclEntries).build() });\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static EventBatch translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new EventBatch(op.txid,\n            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .defaultBlockSize(addOp.blockSize)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n      } else { // append\n        return new EventBatch(op.txid,\n            new Event[]{new Event.AppendEvent.Builder()\n                .path(addOp.path)\n                .build()});\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() });\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent.Builder()\n          .path(cdOp.trg)\n          .build());\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent.Builder()\n          .path(src)\n          .timestamp(cdOp.timestamp)\n          .build());\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return new EventBatch(op.txid, events.toArray(new Event[0]));\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n              .srcPath(rnOpOld.src)\n              .dstPath(rnOpOld.dst)\n              .timestamp(rnOpOld.timestamp)\n              .build() });\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent.Builder()\n            .srcPath(rnOp.src)\n            .dstPath(rnOp.dst)\n            .timestamp(rnOp.timestamp)\n            .build() });\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.UnlinkEvent.Builder()\n            .path(delOp.path)\n            .timestamp(delOp.timestamp)\n            .build() });\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() });\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() });\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() });\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() });\n    default:\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
      "extendedDetails": {}
    },
    "75a326aaff8c92349701d9b3473c3070b8c2be44": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
      "commitDate": "02/12/14 5:15 PM",
      "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
          "commitDate": "02/12/14 5:15 PM",
          "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "04/09/14 6:54 PM",
          "commitNameOld": "6104520369045dfaa4b543cbad21236ed322249b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 88.97,
          "commitsBetweenForRepo": 843,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,105 +1,118 @@\n-  public static Event[] translate(FSEditLogOp op) {\n+  public static EventBatch translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n-        return new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n+        return new EventBatch(op.txid,\n+            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n             .overwrite(addOp.overwrite)\n-            .iNodeType(Event.CreateEvent.INodeType.FILE).build() };\n+            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n       } else {\n-        return new Event[] { new Event.AppendEvent(addOp.path) };\n+        return new EventBatch(op.txid,\n+            new Event[] { new Event.AppendEvent(addOp.path) });\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n-      return new Event[] {\n-          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n-          .replication(setRepOp.replication).build() };\n+          .replication(setRepOp.replication).build() });\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       events.add(new Event.AppendEvent(cdOp.trg));\n       for (String src : cdOp.srcs) {\n         events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n-      return events.toArray(new Event[0]);\n+      return new EventBatch(op.txid, events.toArray(new Event[0]));\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n-      return new Event[] {\n-          new Event.RenameEvent(rnOpOld.src, rnOpOld.dst, rnOpOld.timestamp) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.RenameEvent(rnOpOld.src,\n+              rnOpOld.dst, rnOpOld.timestamp) });\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n-      return new Event[] {\n-          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) });\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n-      return new Event[] { new Event.UnlinkEvent(delOp.path, delOp.timestamp) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.UnlinkEvent(delOp.path, delOp.timestamp) });\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n-      return new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n-          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() };\n+          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n-          .perms(permOp.permissions).build() };\n+          .perms(permOp.permissions).build() });\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n-          .ownerName(ownOp.username).groupName(ownOp.groupname).build() };\n+          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n-          .atime(timesOp.atime).mtime(timesOp.mtime).build() };\n+          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n-      return new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n-          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() };\n+          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n-          .xAttrsRemoved(true).build() };\n+          .xAttrsRemoved(true).build() });\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n-          .xAttrsRemoved(false).build() };\n+          .xAttrsRemoved(false).build() });\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n-          .acls(saOp.aclEntries).build() };\n+          .acls(saOp.aclEntries).build() });\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static EventBatch translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new EventBatch(op.txid,\n            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n      } else {\n        return new EventBatch(op.txid,\n            new Event[] { new Event.AppendEvent(addOp.path) });\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() });\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent(cdOp.trg));\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return new EventBatch(op.txid, events.toArray(new Event[0]));\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent(rnOpOld.src,\n              rnOpOld.dst, rnOpOld.timestamp) });\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) });\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.UnlinkEvent(delOp.path, delOp.timestamp) });\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() });\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() });\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() });\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() });\n    default:\n      return null;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
          "extendedDetails": {
            "oldValue": "Event[]",
            "newValue": "EventBatch"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
          "commitDate": "02/12/14 5:15 PM",
          "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "04/09/14 6:54 PM",
          "commitNameOld": "6104520369045dfaa4b543cbad21236ed322249b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 88.97,
          "commitsBetweenForRepo": 843,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,105 +1,118 @@\n-  public static Event[] translate(FSEditLogOp op) {\n+  public static EventBatch translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n-        return new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n+        return new EventBatch(op.txid,\n+            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n             .overwrite(addOp.overwrite)\n-            .iNodeType(Event.CreateEvent.INodeType.FILE).build() };\n+            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n       } else {\n-        return new Event[] { new Event.AppendEvent(addOp.path) };\n+        return new EventBatch(op.txid,\n+            new Event[] { new Event.AppendEvent(addOp.path) });\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n-      return new Event[] {\n-          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n-          .replication(setRepOp.replication).build() };\n+          .replication(setRepOp.replication).build() });\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       events.add(new Event.AppendEvent(cdOp.trg));\n       for (String src : cdOp.srcs) {\n         events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n-      return events.toArray(new Event[0]);\n+      return new EventBatch(op.txid, events.toArray(new Event[0]));\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n-      return new Event[] {\n-          new Event.RenameEvent(rnOpOld.src, rnOpOld.dst, rnOpOld.timestamp) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.RenameEvent(rnOpOld.src,\n+              rnOpOld.dst, rnOpOld.timestamp) });\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n-      return new Event[] {\n-          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) });\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n-      return new Event[] { new Event.UnlinkEvent(delOp.path, delOp.timestamp) };\n+      return new EventBatch(op.txid, new Event[] {\n+          new Event.UnlinkEvent(delOp.path, delOp.timestamp) });\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n-      return new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n-          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() };\n+          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n-          .perms(permOp.permissions).build() };\n+          .perms(permOp.permissions).build() });\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n-          .ownerName(ownOp.username).groupName(ownOp.groupname).build() };\n+          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n-          .atime(timesOp.atime).mtime(timesOp.mtime).build() };\n+          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n-      return new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n-          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() };\n+          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n-          .xAttrsRemoved(true).build() };\n+          .xAttrsRemoved(true).build() });\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n-          .xAttrsRemoved(false).build() };\n+          .xAttrsRemoved(false).build() });\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n-      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+      return new EventBatch(op.txid,\n+        new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n-          .acls(saOp.aclEntries).build() };\n+          .acls(saOp.aclEntries).build() });\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static EventBatch translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new EventBatch(op.txid,\n            new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() });\n      } else {\n        return new EventBatch(op.txid,\n            new Event[] { new Event.AppendEvent(addOp.path) });\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) });\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() });\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent(cdOp.trg));\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return new EventBatch(op.txid, events.toArray(new Event[0]));\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent(rnOpOld.src,\n              rnOpOld.dst, rnOpOld.timestamp) });\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) });\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new EventBatch(op.txid, new Event[] {\n          new Event.UnlinkEvent(delOp.path, delOp.timestamp) });\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() });\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() });\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() });\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() });\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() });\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() });\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() });\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new EventBatch(op.txid,\n        new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() });\n    default:\n      return null;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
          "extendedDetails": {}
        }
      ]
    },
    "6104520369045dfaa4b543cbad21236ed322249b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6886. Use single editlog record for creating file + overwrite. Contributed by Yi Liu.\n",
      "commitDate": "04/09/14 6:54 PM",
      "commitName": "6104520369045dfaa4b543cbad21236ed322249b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "02/09/14 2:02 PM",
      "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,104 +1,105 @@\n   public static Event[] translate(FSEditLogOp op) {\n     switch(op.opCode) {\n     case OP_ADD:\n       FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n       if (addOp.blocks.length \u003d\u003d 0) { // create\n         return new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n             .ctime(addOp.atime)\n             .replication(addOp.replication)\n             .ownerName(addOp.permissions.getUserName())\n             .groupName(addOp.permissions.getGroupName())\n             .perms(addOp.permissions.getPermission())\n+            .overwrite(addOp.overwrite)\n             .iNodeType(Event.CreateEvent.INodeType.FILE).build() };\n       } else {\n         return new Event[] { new Event.AppendEvent(addOp.path) };\n       }\n     case OP_CLOSE:\n       FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n       return new Event[] {\n           new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) };\n     case OP_SET_REPLICATION:\n       FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n           .path(setRepOp.path)\n           .replication(setRepOp.replication).build() };\n     case OP_CONCAT_DELETE:\n       FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n       List\u003cEvent\u003e events \u003d Lists.newArrayList();\n       events.add(new Event.AppendEvent(cdOp.trg));\n       for (String src : cdOp.srcs) {\n         events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n       }\n       events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n       return events.toArray(new Event[0]);\n     case OP_RENAME_OLD:\n       FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n       return new Event[] {\n           new Event.RenameEvent(rnOpOld.src, rnOpOld.dst, rnOpOld.timestamp) };\n     case OP_RENAME:\n       FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n       return new Event[] {\n           new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) };\n     case OP_DELETE:\n       FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n       return new Event[] { new Event.UnlinkEvent(delOp.path, delOp.timestamp) };\n     case OP_MKDIR:\n       FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n       return new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n           .ctime(mkOp.timestamp)\n           .ownerName(mkOp.permissions.getUserName())\n           .groupName(mkOp.permissions.getGroupName())\n           .perms(mkOp.permissions.getPermission())\n           .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() };\n     case OP_SET_PERMISSIONS:\n       FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n           .path(permOp.src)\n           .perms(permOp.permissions).build() };\n     case OP_SET_OWNER:\n       FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n           .path(ownOp.src)\n           .ownerName(ownOp.username).groupName(ownOp.groupname).build() };\n     case OP_TIMES:\n       FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n           .path(timesOp.path)\n           .atime(timesOp.atime).mtime(timesOp.mtime).build() };\n     case OP_SYMLINK:\n       FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n       return new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n           .ctime(symOp.atime)\n           .ownerName(symOp.permissionStatus.getUserName())\n           .groupName(symOp.permissionStatus.getGroupName())\n           .perms(symOp.permissionStatus.getPermission())\n           .symlinkTarget(symOp.value)\n           .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() };\n     case OP_REMOVE_XATTR:\n       FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(rxOp.src)\n           .xAttrs(rxOp.xAttrs)\n           .xAttrsRemoved(true).build() };\n     case OP_SET_XATTR:\n       FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n           .path(sxOp.src)\n           .xAttrs(sxOp.xAttrs)\n           .xAttrsRemoved(false).build() };\n     case OP_SET_ACL:\n       FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n       return new Event[] { new Event.MetadataUpdateEvent.Builder()\n           .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n           .path(saOp.src)\n           .acls(saOp.aclEntries).build() };\n     default:\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Event[] translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .overwrite(addOp.overwrite)\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() };\n      } else {\n        return new Event[] { new Event.AppendEvent(addOp.path) };\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) };\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() };\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent(cdOp.trg));\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return events.toArray(new Event[0]);\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new Event[] {\n          new Event.RenameEvent(rnOpOld.src, rnOpOld.dst, rnOpOld.timestamp) };\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new Event[] {\n          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) };\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new Event[] { new Event.UnlinkEvent(delOp.path, delOp.timestamp) };\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() };\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() };\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() };\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() };\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() };\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() };\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() };\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() };\n    default:\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java",
      "extendedDetails": {}
    },
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,104 @@\n+  public static Event[] translate(FSEditLogOp op) {\n+    switch(op.opCode) {\n+    case OP_ADD:\n+      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n+      if (addOp.blocks.length \u003d\u003d 0) { // create\n+        return new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n+            .ctime(addOp.atime)\n+            .replication(addOp.replication)\n+            .ownerName(addOp.permissions.getUserName())\n+            .groupName(addOp.permissions.getGroupName())\n+            .perms(addOp.permissions.getPermission())\n+            .iNodeType(Event.CreateEvent.INodeType.FILE).build() };\n+      } else {\n+        return new Event[] { new Event.AppendEvent(addOp.path) };\n+      }\n+    case OP_CLOSE:\n+      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n+      return new Event[] {\n+          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) };\n+    case OP_SET_REPLICATION:\n+      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n+          .path(setRepOp.path)\n+          .replication(setRepOp.replication).build() };\n+    case OP_CONCAT_DELETE:\n+      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n+      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n+      events.add(new Event.AppendEvent(cdOp.trg));\n+      for (String src : cdOp.srcs) {\n+        events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n+      }\n+      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n+      return events.toArray(new Event[0]);\n+    case OP_RENAME_OLD:\n+      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n+      return new Event[] {\n+          new Event.RenameEvent(rnOpOld.src, rnOpOld.dst, rnOpOld.timestamp) };\n+    case OP_RENAME:\n+      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n+      return new Event[] {\n+          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) };\n+    case OP_DELETE:\n+      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n+      return new Event[] { new Event.UnlinkEvent(delOp.path, delOp.timestamp) };\n+    case OP_MKDIR:\n+      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n+      return new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n+          .ctime(mkOp.timestamp)\n+          .ownerName(mkOp.permissions.getUserName())\n+          .groupName(mkOp.permissions.getGroupName())\n+          .perms(mkOp.permissions.getPermission())\n+          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() };\n+    case OP_SET_PERMISSIONS:\n+      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n+          .path(permOp.src)\n+          .perms(permOp.permissions).build() };\n+    case OP_SET_OWNER:\n+      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n+          .path(ownOp.src)\n+          .ownerName(ownOp.username).groupName(ownOp.groupname).build() };\n+    case OP_TIMES:\n+      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n+          .path(timesOp.path)\n+          .atime(timesOp.atime).mtime(timesOp.mtime).build() };\n+    case OP_SYMLINK:\n+      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n+      return new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n+          .ctime(symOp.atime)\n+          .ownerName(symOp.permissionStatus.getUserName())\n+          .groupName(symOp.permissionStatus.getGroupName())\n+          .perms(symOp.permissionStatus.getPermission())\n+          .symlinkTarget(symOp.value)\n+          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() };\n+    case OP_REMOVE_XATTR:\n+      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n+          .path(rxOp.src)\n+          .xAttrs(rxOp.xAttrs)\n+          .xAttrsRemoved(true).build() };\n+    case OP_SET_XATTR:\n+      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n+          .path(sxOp.src)\n+          .xAttrs(sxOp.xAttrs)\n+          .xAttrsRemoved(false).build() };\n+    case OP_SET_ACL:\n+      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n+      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n+          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n+          .path(saOp.src)\n+          .acls(saOp.aclEntries).build() };\n+    default:\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Event[] translate(FSEditLogOp op) {\n    switch(op.opCode) {\n    case OP_ADD:\n      FSEditLogOp.AddOp addOp \u003d (FSEditLogOp.AddOp) op;\n      if (addOp.blocks.length \u003d\u003d 0) { // create\n        return new Event[] { new Event.CreateEvent.Builder().path(addOp.path)\n            .ctime(addOp.atime)\n            .replication(addOp.replication)\n            .ownerName(addOp.permissions.getUserName())\n            .groupName(addOp.permissions.getGroupName())\n            .perms(addOp.permissions.getPermission())\n            .iNodeType(Event.CreateEvent.INodeType.FILE).build() };\n      } else {\n        return new Event[] { new Event.AppendEvent(addOp.path) };\n      }\n    case OP_CLOSE:\n      FSEditLogOp.CloseOp cOp \u003d (FSEditLogOp.CloseOp) op;\n      return new Event[] {\n          new Event.CloseEvent(cOp.path, getSize(cOp), cOp.mtime) };\n    case OP_SET_REPLICATION:\n      FSEditLogOp.SetReplicationOp setRepOp \u003d (FSEditLogOp.SetReplicationOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.REPLICATION)\n          .path(setRepOp.path)\n          .replication(setRepOp.replication).build() };\n    case OP_CONCAT_DELETE:\n      FSEditLogOp.ConcatDeleteOp cdOp \u003d (FSEditLogOp.ConcatDeleteOp) op;\n      List\u003cEvent\u003e events \u003d Lists.newArrayList();\n      events.add(new Event.AppendEvent(cdOp.trg));\n      for (String src : cdOp.srcs) {\n        events.add(new Event.UnlinkEvent(src, cdOp.timestamp));\n      }\n      events.add(new Event.CloseEvent(cdOp.trg, -1, cdOp.timestamp));\n      return events.toArray(new Event[0]);\n    case OP_RENAME_OLD:\n      FSEditLogOp.RenameOldOp rnOpOld \u003d (FSEditLogOp.RenameOldOp) op;\n      return new Event[] {\n          new Event.RenameEvent(rnOpOld.src, rnOpOld.dst, rnOpOld.timestamp) };\n    case OP_RENAME:\n      FSEditLogOp.RenameOp rnOp \u003d (FSEditLogOp.RenameOp) op;\n      return new Event[] {\n          new Event.RenameEvent(rnOp.src, rnOp.dst, rnOp.timestamp) };\n    case OP_DELETE:\n      FSEditLogOp.DeleteOp delOp \u003d (FSEditLogOp.DeleteOp) op;\n      return new Event[] { new Event.UnlinkEvent(delOp.path, delOp.timestamp) };\n    case OP_MKDIR:\n      FSEditLogOp.MkdirOp mkOp \u003d (FSEditLogOp.MkdirOp) op;\n      return new Event[] { new Event.CreateEvent.Builder().path(mkOp.path)\n          .ctime(mkOp.timestamp)\n          .ownerName(mkOp.permissions.getUserName())\n          .groupName(mkOp.permissions.getGroupName())\n          .perms(mkOp.permissions.getPermission())\n          .iNodeType(Event.CreateEvent.INodeType.DIRECTORY).build() };\n    case OP_SET_PERMISSIONS:\n      FSEditLogOp.SetPermissionsOp permOp \u003d (FSEditLogOp.SetPermissionsOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.PERMS)\n          .path(permOp.src)\n          .perms(permOp.permissions).build() };\n    case OP_SET_OWNER:\n      FSEditLogOp.SetOwnerOp ownOp \u003d (FSEditLogOp.SetOwnerOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.OWNER)\n          .path(ownOp.src)\n          .ownerName(ownOp.username).groupName(ownOp.groupname).build() };\n    case OP_TIMES:\n      FSEditLogOp.TimesOp timesOp \u003d (FSEditLogOp.TimesOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.TIMES)\n          .path(timesOp.path)\n          .atime(timesOp.atime).mtime(timesOp.mtime).build() };\n    case OP_SYMLINK:\n      FSEditLogOp.SymlinkOp symOp \u003d (FSEditLogOp.SymlinkOp) op;\n      return new Event[] { new Event.CreateEvent.Builder().path(symOp.path)\n          .ctime(symOp.atime)\n          .ownerName(symOp.permissionStatus.getUserName())\n          .groupName(symOp.permissionStatus.getGroupName())\n          .perms(symOp.permissionStatus.getPermission())\n          .symlinkTarget(symOp.value)\n          .iNodeType(Event.CreateEvent.INodeType.SYMLINK).build() };\n    case OP_REMOVE_XATTR:\n      FSEditLogOp.RemoveXAttrOp rxOp \u003d (FSEditLogOp.RemoveXAttrOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(rxOp.src)\n          .xAttrs(rxOp.xAttrs)\n          .xAttrsRemoved(true).build() };\n    case OP_SET_XATTR:\n      FSEditLogOp.SetXAttrOp sxOp \u003d (FSEditLogOp.SetXAttrOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.XATTRS)\n          .path(sxOp.src)\n          .xAttrs(sxOp.xAttrs)\n          .xAttrsRemoved(false).build() };\n    case OP_SET_ACL:\n      FSEditLogOp.SetAclOp saOp \u003d (FSEditLogOp.SetAclOp) op;\n      return new Event[] { new Event.MetadataUpdateEvent.Builder()\n          .metadataType(Event.MetadataUpdateEvent.MetadataType.ACLS)\n          .path(saOp.src)\n          .acls(saOp.aclEntries).build() };\n    default:\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/InotifyFSEditLogOpTranslator.java"
    }
  }
}