{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "cloneObjectMetadata",
  "functionId": "cloneObjectMetadata___source-ObjectMetadata",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 3799,
  "functionEndLine": 3854,
  "numCommitsSeen": 141,
  "timeTaken": 4194,
  "changeHistory": [
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
    "256c82fe2981748cd0befc5490d8118d139908f9"
  ],
  "changeHistoryShort": {
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944": "Ybodychange",
    "256c82fe2981748cd0befc5490d8118d139908f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
      "commitDate": "03/06/16 8:55 AM",
      "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "01/06/16 2:49 PM",
      "commitNameOld": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,56 @@\n   private ObjectMetadata cloneObjectMetadata(ObjectMetadata source) {\n     // This approach may be too brittle, especially if\n     // in future there are new attributes added to ObjectMetadata\n     // that we do not explicitly call to set here\n-    ObjectMetadata ret \u003d new ObjectMetadata();\n-\n-    // Non null attributes\n-    ret.setContentLength(source.getContentLength());\n+    ObjectMetadata ret \u003d newObjectMetadata(source.getContentLength());\n \n     // Possibly null attributes\n     // Allowing nulls to pass breaks it during later use\n     if (source.getCacheControl() !\u003d null) {\n       ret.setCacheControl(source.getCacheControl());\n     }\n     if (source.getContentDisposition() !\u003d null) {\n       ret.setContentDisposition(source.getContentDisposition());\n     }\n     if (source.getContentEncoding() !\u003d null) {\n       ret.setContentEncoding(source.getContentEncoding());\n     }\n     if (source.getContentMD5() !\u003d null) {\n       ret.setContentMD5(source.getContentMD5());\n     }\n     if (source.getContentType() !\u003d null) {\n       ret.setContentType(source.getContentType());\n     }\n     if (source.getExpirationTime() !\u003d null) {\n       ret.setExpirationTime(source.getExpirationTime());\n     }\n     if (source.getExpirationTimeRuleId() !\u003d null) {\n       ret.setExpirationTimeRuleId(source.getExpirationTimeRuleId());\n     }\n     if (source.getHttpExpiresDate() !\u003d null) {\n       ret.setHttpExpiresDate(source.getHttpExpiresDate());\n     }\n     if (source.getLastModified() !\u003d null) {\n       ret.setLastModified(source.getLastModified());\n     }\n     if (source.getOngoingRestore() !\u003d null) {\n       ret.setOngoingRestore(source.getOngoingRestore());\n     }\n     if (source.getRestoreExpirationTime() !\u003d null) {\n       ret.setRestoreExpirationTime(source.getRestoreExpirationTime());\n     }\n     if (source.getSSEAlgorithm() !\u003d null) {\n       ret.setSSEAlgorithm(source.getSSEAlgorithm());\n     }\n     if (source.getSSECustomerAlgorithm() !\u003d null) {\n       ret.setSSECustomerAlgorithm(source.getSSECustomerAlgorithm());\n     }\n     if (source.getSSECustomerKeyMd5() !\u003d null) {\n       ret.setSSECustomerKeyMd5(source.getSSECustomerKeyMd5());\n     }\n \n     for (Map.Entry\u003cString, String\u003e e : source.getUserMetadata().entrySet()) {\n       ret.addUserMetadata(e.getKey(), e.getValue());\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ObjectMetadata cloneObjectMetadata(ObjectMetadata source) {\n    // This approach may be too brittle, especially if\n    // in future there are new attributes added to ObjectMetadata\n    // that we do not explicitly call to set here\n    ObjectMetadata ret \u003d newObjectMetadata(source.getContentLength());\n\n    // Possibly null attributes\n    // Allowing nulls to pass breaks it during later use\n    if (source.getCacheControl() !\u003d null) {\n      ret.setCacheControl(source.getCacheControl());\n    }\n    if (source.getContentDisposition() !\u003d null) {\n      ret.setContentDisposition(source.getContentDisposition());\n    }\n    if (source.getContentEncoding() !\u003d null) {\n      ret.setContentEncoding(source.getContentEncoding());\n    }\n    if (source.getContentMD5() !\u003d null) {\n      ret.setContentMD5(source.getContentMD5());\n    }\n    if (source.getContentType() !\u003d null) {\n      ret.setContentType(source.getContentType());\n    }\n    if (source.getExpirationTime() !\u003d null) {\n      ret.setExpirationTime(source.getExpirationTime());\n    }\n    if (source.getExpirationTimeRuleId() !\u003d null) {\n      ret.setExpirationTimeRuleId(source.getExpirationTimeRuleId());\n    }\n    if (source.getHttpExpiresDate() !\u003d null) {\n      ret.setHttpExpiresDate(source.getHttpExpiresDate());\n    }\n    if (source.getLastModified() !\u003d null) {\n      ret.setLastModified(source.getLastModified());\n    }\n    if (source.getOngoingRestore() !\u003d null) {\n      ret.setOngoingRestore(source.getOngoingRestore());\n    }\n    if (source.getRestoreExpirationTime() !\u003d null) {\n      ret.setRestoreExpirationTime(source.getRestoreExpirationTime());\n    }\n    if (source.getSSEAlgorithm() !\u003d null) {\n      ret.setSSEAlgorithm(source.getSSEAlgorithm());\n    }\n    if (source.getSSECustomerAlgorithm() !\u003d null) {\n      ret.setSSECustomerAlgorithm(source.getSSECustomerAlgorithm());\n    }\n    if (source.getSSECustomerKeyMd5() !\u003d null) {\n      ret.setSSECustomerKeyMd5(source.getSSECustomerKeyMd5());\n    }\n\n    for (Map.Entry\u003cString, String\u003e e : source.getUserMetadata().entrySet()) {\n      ret.addUserMetadata(e.getKey(), e.getValue());\n    }\n    return ret;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "256c82fe2981748cd0befc5490d8118d139908f9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11687. Ignore x-* and response headers when copying an Amazon S3 object. Contributed by Aaron Peterson and harsh.\n",
      "commitDate": "01/04/16 1:48 AM",
      "commitName": "256c82fe2981748cd0befc5490d8118d139908f9",
      "commitAuthor": "Harsh J",
      "diff": "@@ -0,0 +1,59 @@\n+  private ObjectMetadata cloneObjectMetadata(ObjectMetadata source) {\n+    // This approach may be too brittle, especially if\n+    // in future there are new attributes added to ObjectMetadata\n+    // that we do not explicitly call to set here\n+    ObjectMetadata ret \u003d new ObjectMetadata();\n+\n+    // Non null attributes\n+    ret.setContentLength(source.getContentLength());\n+\n+    // Possibly null attributes\n+    // Allowing nulls to pass breaks it during later use\n+    if (source.getCacheControl() !\u003d null) {\n+      ret.setCacheControl(source.getCacheControl());\n+    }\n+    if (source.getContentDisposition() !\u003d null) {\n+      ret.setContentDisposition(source.getContentDisposition());\n+    }\n+    if (source.getContentEncoding() !\u003d null) {\n+      ret.setContentEncoding(source.getContentEncoding());\n+    }\n+    if (source.getContentMD5() !\u003d null) {\n+      ret.setContentMD5(source.getContentMD5());\n+    }\n+    if (source.getContentType() !\u003d null) {\n+      ret.setContentType(source.getContentType());\n+    }\n+    if (source.getExpirationTime() !\u003d null) {\n+      ret.setExpirationTime(source.getExpirationTime());\n+    }\n+    if (source.getExpirationTimeRuleId() !\u003d null) {\n+      ret.setExpirationTimeRuleId(source.getExpirationTimeRuleId());\n+    }\n+    if (source.getHttpExpiresDate() !\u003d null) {\n+      ret.setHttpExpiresDate(source.getHttpExpiresDate());\n+    }\n+    if (source.getLastModified() !\u003d null) {\n+      ret.setLastModified(source.getLastModified());\n+    }\n+    if (source.getOngoingRestore() !\u003d null) {\n+      ret.setOngoingRestore(source.getOngoingRestore());\n+    }\n+    if (source.getRestoreExpirationTime() !\u003d null) {\n+      ret.setRestoreExpirationTime(source.getRestoreExpirationTime());\n+    }\n+    if (source.getSSEAlgorithm() !\u003d null) {\n+      ret.setSSEAlgorithm(source.getSSEAlgorithm());\n+    }\n+    if (source.getSSECustomerAlgorithm() !\u003d null) {\n+      ret.setSSECustomerAlgorithm(source.getSSECustomerAlgorithm());\n+    }\n+    if (source.getSSECustomerKeyMd5() !\u003d null) {\n+      ret.setSSECustomerKeyMd5(source.getSSECustomerKeyMd5());\n+    }\n+\n+    for (Map.Entry\u003cString, String\u003e e : source.getUserMetadata().entrySet()) {\n+      ret.addUserMetadata(e.getKey(), e.getValue());\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ObjectMetadata cloneObjectMetadata(ObjectMetadata source) {\n    // This approach may be too brittle, especially if\n    // in future there are new attributes added to ObjectMetadata\n    // that we do not explicitly call to set here\n    ObjectMetadata ret \u003d new ObjectMetadata();\n\n    // Non null attributes\n    ret.setContentLength(source.getContentLength());\n\n    // Possibly null attributes\n    // Allowing nulls to pass breaks it during later use\n    if (source.getCacheControl() !\u003d null) {\n      ret.setCacheControl(source.getCacheControl());\n    }\n    if (source.getContentDisposition() !\u003d null) {\n      ret.setContentDisposition(source.getContentDisposition());\n    }\n    if (source.getContentEncoding() !\u003d null) {\n      ret.setContentEncoding(source.getContentEncoding());\n    }\n    if (source.getContentMD5() !\u003d null) {\n      ret.setContentMD5(source.getContentMD5());\n    }\n    if (source.getContentType() !\u003d null) {\n      ret.setContentType(source.getContentType());\n    }\n    if (source.getExpirationTime() !\u003d null) {\n      ret.setExpirationTime(source.getExpirationTime());\n    }\n    if (source.getExpirationTimeRuleId() !\u003d null) {\n      ret.setExpirationTimeRuleId(source.getExpirationTimeRuleId());\n    }\n    if (source.getHttpExpiresDate() !\u003d null) {\n      ret.setHttpExpiresDate(source.getHttpExpiresDate());\n    }\n    if (source.getLastModified() !\u003d null) {\n      ret.setLastModified(source.getLastModified());\n    }\n    if (source.getOngoingRestore() !\u003d null) {\n      ret.setOngoingRestore(source.getOngoingRestore());\n    }\n    if (source.getRestoreExpirationTime() !\u003d null) {\n      ret.setRestoreExpirationTime(source.getRestoreExpirationTime());\n    }\n    if (source.getSSEAlgorithm() !\u003d null) {\n      ret.setSSEAlgorithm(source.getSSEAlgorithm());\n    }\n    if (source.getSSECustomerAlgorithm() !\u003d null) {\n      ret.setSSECustomerAlgorithm(source.getSSECustomerAlgorithm());\n    }\n    if (source.getSSECustomerKeyMd5() !\u003d null) {\n      ret.setSSECustomerKeyMd5(source.getSSECustomerKeyMd5());\n    }\n\n    for (Map.Entry\u003cString, String\u003e e : source.getUserMetadata().entrySet()) {\n      ret.addUserMetadata(e.getKey(), e.getValue());\n    }\n    return ret;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}