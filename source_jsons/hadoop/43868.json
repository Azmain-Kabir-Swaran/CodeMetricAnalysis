{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceTimelinePublisher.java",
  "functionName": "populateTimelineEntity",
  "functionId": "populateTimelineEntity___iterator-Iterator__Entry__String,String______entityId-String__entityType-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
  "functionStartLine": 294,
  "functionEndLine": 315,
  "numCommitsSeen": 14,
  "timeTaken": 2555,
  "changeHistory": [
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2"
  ],
  "changeHistoryShort": {
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Yrename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yfilerename",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void populateTimelineEntity(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n      String entityId, String entityType) {\n    int configSize \u003d 0;\n    TimelineEntity entity \u003d createTimelineEntity(entityId, entityType);\n    while (iterator.hasNext()) {\n      Entry\u003cString, String\u003e entry \u003d iterator.next();\n      int size \u003d entry.getKey().length() + entry.getValue().length();\n      configSize +\u003d size;\n      // Configs are split into multiple entities if they exceed 100kb in size.\n      if (configSize \u003e ATS_CONFIG_PUBLISH_SIZE_BYTES) {\n        if (entity.getConfigs().size() \u003e 0) {\n          putEntity(entity);\n          entity \u003d createTimelineEntity(entityId, entityType);\n        }\n        configSize \u003d size;\n      }\n      entity.addConfig(entry.getKey(), entry.getValue());\n    }\n    if (configSize \u003e 0) {\n      putEntity(entity);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Yrename",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  private void publishConfigurations(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n+  private void populateTimelineEntity(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n       String entityId, String entityType) {\n     int configSize \u003d 0;\n     TimelineEntity entity \u003d createTimelineEntity(entityId, entityType);\n     while (iterator.hasNext()) {\n       Entry\u003cString, String\u003e entry \u003d iterator.next();\n       int size \u003d entry.getKey().length() + entry.getValue().length();\n       configSize +\u003d size;\n       // Configs are split into multiple entities if they exceed 100kb in size.\n       if (configSize \u003e ATS_CONFIG_PUBLISH_SIZE_BYTES) {\n         if (entity.getConfigs().size() \u003e 0) {\n           putEntity(entity);\n           entity \u003d createTimelineEntity(entityId, entityType);\n         }\n         configSize \u003d size;\n       }\n       entity.addConfig(entry.getKey(), entry.getValue());\n     }\n     if (configSize \u003e 0) {\n       putEntity(entity);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void populateTimelineEntity(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n      String entityId, String entityType) {\n    int configSize \u003d 0;\n    TimelineEntity entity \u003d createTimelineEntity(entityId, entityType);\n    while (iterator.hasNext()) {\n      Entry\u003cString, String\u003e entry \u003d iterator.next();\n      int size \u003d entry.getKey().length() + entry.getValue().length();\n      configSize +\u003d size;\n      // Configs are split into multiple entities if they exceed 100kb in size.\n      if (configSize \u003e ATS_CONFIG_PUBLISH_SIZE_BYTES) {\n        if (entity.getConfigs().size() \u003e 0) {\n          putEntity(entity);\n          entity \u003d createTimelineEntity(entityId, entityType);\n        }\n        configSize \u003d size;\n      }\n      entity.addConfig(entry.getKey(), entry.getValue());\n    }\n    if (configSize \u003e 0) {\n      putEntity(entity);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldValue": "publishConfigurations",
        "newValue": "populateTimelineEntity"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void publishConfigurations(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n      String entityId, String entityType) {\n    int configSize \u003d 0;\n    TimelineEntity entity \u003d createTimelineEntity(entityId, entityType);\n    while (iterator.hasNext()) {\n      Entry\u003cString, String\u003e entry \u003d iterator.next();\n      int size \u003d entry.getKey().length() + entry.getValue().length();\n      configSize +\u003d size;\n      // Configs are split into multiple entities if they exceed 100kb in size.\n      if (configSize \u003e ATS_CONFIG_PUBLISH_SIZE_BYTES) {\n        if (entity.getConfigs().size() \u003e 0) {\n          putEntity(entity);\n          entity \u003d createTimelineEntity(entityId, entityType);\n        }\n        configSize \u003d size;\n      }\n      entity.addConfig(entry.getKey(), entry.getValue());\n    }\n    if (configSize \u003e 0) {\n      putEntity(entity);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
      }
    },
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6395. Integrate service app master to write data into ATSv2. Contributed by Rohith Sharma K S\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f4216b7bba511cc79439e7dab9f0282d831a16b2",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,22 @@\n+  private void publishConfigurations(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n+      String entityId, String entityType) {\n+    int configSize \u003d 0;\n+    TimelineEntity entity \u003d createTimelineEntity(entityId, entityType);\n+    while (iterator.hasNext()) {\n+      Entry\u003cString, String\u003e entry \u003d iterator.next();\n+      int size \u003d entry.getKey().length() + entry.getValue().length();\n+      configSize +\u003d size;\n+      // Configs are split into multiple entities if they exceed 100kb in size.\n+      if (configSize \u003e ATS_CONFIG_PUBLISH_SIZE_BYTES) {\n+        if (entity.getConfigs().size() \u003e 0) {\n+          putEntity(entity);\n+          entity \u003d createTimelineEntity(entityId, entityType);\n+        }\n+        configSize \u003d size;\n+      }\n+      entity.addConfig(entry.getKey(), entry.getValue());\n+    }\n+    if (configSize \u003e 0) {\n+      putEntity(entity);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishConfigurations(Iterator\u003cEntry\u003cString, String\u003e\u003e iterator,\n      String entityId, String entityType) {\n    int configSize \u003d 0;\n    TimelineEntity entity \u003d createTimelineEntity(entityId, entityType);\n    while (iterator.hasNext()) {\n      Entry\u003cString, String\u003e entry \u003d iterator.next();\n      int size \u003d entry.getKey().length() + entry.getValue().length();\n      configSize +\u003d size;\n      // Configs are split into multiple entities if they exceed 100kb in size.\n      if (configSize \u003e ATS_CONFIG_PUBLISH_SIZE_BYTES) {\n        if (entity.getConfigs().size() \u003e 0) {\n          putEntity(entity);\n          entity \u003d createTimelineEntity(entityId, entityType);\n        }\n        configSize \u003d size;\n      }\n      entity.addConfig(entry.getKey(), entry.getValue());\n    }\n    if (configSize \u003e 0) {\n      putEntity(entity);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java"
    }
  }
}