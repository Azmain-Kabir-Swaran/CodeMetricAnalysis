{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StoragePolicySatisfier.java",
  "functionName": "addTarget",
  "functionId": "addTarget___node-DatanodeInfo__storageTypes-List__StorageType____maxSize2Move-List__Long__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
  "functionStartLine": 923,
  "functionEndLine": 937,
  "numCommitsSeen": 16,
  "timeTaken": 1235,
  "changeHistory": [
    "75ccc1396b677777cdc0d4992a4af3911f9f88c2"
  ],
  "changeHistoryShort": {
    "75ccc1396b677777cdc0d4992a4af3911f9f88c2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "75ccc1396b677777cdc0d4992a4af3911f9f88c2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13166: [SPS]: Implement caching mechanism to keep LIVE datanodes to minimize costly getLiveDatanodeStorageReport() calls. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "75ccc1396b677777cdc0d4992a4af3911f9f88c2",
      "commitAuthor": "Surendra Singh Lilhore",
      "diff": "@@ -0,0 +1,15 @@\n+    void addTarget(DatanodeInfo node, List\u003cStorageType\u003e storageTypes,\n+        List\u003cLong\u003e maxSize2Move) {\n+      DatanodeWithStorage nodeStorage \u003d new DatanodeWithStorage(node);\n+      targets.add(nodeStorage);\n+      for (int i \u003d 0; i \u003c storageTypes.size(); i++) {\n+        StorageType type \u003d storageTypes.get(i);\n+        List\u003cDatanodeWithStorage\u003e nodeStorages \u003d targetsMap.get(type);\n+        nodeStorage.addStorageType(type, maxSize2Move.get(i));\n+        if (nodeStorages \u003d\u003d null) {\n+          nodeStorages \u003d new LinkedList\u003c\u003e();\n+          targetsMap.put(type, nodeStorages);\n+        }\n+        nodeStorages.add(nodeStorage);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void addTarget(DatanodeInfo node, List\u003cStorageType\u003e storageTypes,\n        List\u003cLong\u003e maxSize2Move) {\n      DatanodeWithStorage nodeStorage \u003d new DatanodeWithStorage(node);\n      targets.add(nodeStorage);\n      for (int i \u003d 0; i \u003c storageTypes.size(); i++) {\n        StorageType type \u003d storageTypes.get(i);\n        List\u003cDatanodeWithStorage\u003e nodeStorages \u003d targetsMap.get(type);\n        nodeStorage.addStorageType(type, maxSize2Move.get(i));\n        if (nodeStorages \u003d\u003d null) {\n          nodeStorages \u003d new LinkedList\u003c\u003e();\n          targetsMap.put(type, nodeStorages);\n        }\n        nodeStorages.add(nodeStorage);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java"
    }
  }
}