{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReflectionUtils.java",
  "functionName": "copy",
  "functionId": "copy___conf-Configuration__src-T__dst-T",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
  "functionStartLine": 322,
  "functionEndLine": 336,
  "numCommitsSeen": 19,
  "timeTaken": 1170,
  "changeHistory": [
    "7dba7005b79994106321b0f86bc8f4ea51a3c185",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "750fb2dbc1c077c9ca7ce889332a597d4a65388f",
    "d6428581ff6ad7859d69b41318bd6fe4736d022d",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "7dba7005b79994106321b0f86bc8f4ea51a3c185": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "750fb2dbc1c077c9ca7ce889332a597d4a65388f": "Ybodychange",
    "d6428581ff6ad7859d69b41318bd6fe4736d022d": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7dba7005b79994106321b0f86bc8f4ea51a3c185": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11969. ThreadLocal initialization in several classes is not thread safe (Sean Busbey via Colin P. McCabe)\n",
      "commitDate": "26/05/15 12:15 PM",
      "commitName": "7dba7005b79994106321b0f86bc8f4ea51a3c185",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "11/12/14 4:42 PM",
      "commitNameOld": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 165.77,
      "commitsBetweenForRepo": 1409,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public static \u003cT\u003e T copy(Configuration conf, \n                                 T src, T dst) throws IOException {\n-    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n+    CopyInCopyOutBuffer buffer \u003d CLONE_BUFFERS.get();\n     buffer.outBuffer.reset();\n     SerializationFactory factory \u003d getFactory(conf);\n     Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n     Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n     serializer.open(buffer.outBuffer);\n     serializer.serialize(src);\n     buffer.moveData();\n     Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n     deserializer.open(buffer.inBuffer);\n     dst \u003d deserializer.deserialize(dst);\n     return dst;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d CLONE_BUFFERS.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/ReflectionUtils.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "common/src/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/ReflectionUtils.java",
        "newPath": "common/src/java/org/apache/hadoop/util/ReflectionUtils.java"
      }
    },
    "750fb2dbc1c077c9ca7ce889332a597d4a65388f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6698. Revert the io.serialization package to 0.20.2\u0027s api. Reverted HADOOP-6165, HADOOP-6443, HADOOP-6323, and HADOOP-6420.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@939412 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/10 11:09 AM",
      "commitName": "750fb2dbc1c077c9ca7ce889332a597d4a65388f",
      "commitAuthor": "Thomas White",
      "commitDateOld": "15/01/10 4:44 PM",
      "commitNameOld": "a90d3205d2a23945eaab8b756cfbeeb4377c3c04",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 103.73,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public static \u003cT\u003e T copy(Configuration conf, \n                                 T src, T dst) throws IOException {\n     CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n     buffer.outBuffer.reset();\n     SerializationFactory factory \u003d getFactory(conf);\n     Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n-    Map\u003cString, String\u003e metadata \u003d SerializationBase.getMetadataFromClass(cls);\n-    SerializerBase\u003cT\u003e serializer \u003d factory.getSerializer(metadata);\n+    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n     serializer.open(buffer.outBuffer);\n     serializer.serialize(src);\n     buffer.moveData();\n-    DeserializerBase\u003cT\u003e deserializer \u003d factory.getDeserializer(metadata);\n+    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n     deserializer.open(buffer.inBuffer);\n     dst \u003d deserializer.deserialize(dst);\n     return dst;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "src/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {}
    },
    "d6428581ff6ad7859d69b41318bd6fe4736d022d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6165. Add metadata to Serializations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@810756 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/09/09 6:36 PM",
      "commitName": "d6428581ff6ad7859d69b41318bd6fe4736d022d",
      "commitAuthor": "Thomas White",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 106.89,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public static \u003cT\u003e T copy(Configuration conf, \n                                 T src, T dst) throws IOException {\n     CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n     buffer.outBuffer.reset();\n     SerializationFactory factory \u003d getFactory(conf);\n     Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n-    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n+    Map\u003cString, String\u003e metadata \u003d SerializationBase.getMetadataFromClass(cls);\n+    SerializerBase\u003cT\u003e serializer \u003d factory.getSerializer(metadata);\n     serializer.open(buffer.outBuffer);\n     serializer.serialize(src);\n     buffer.moveData();\n-    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n+    DeserializerBase\u003cT\u003e deserializer \u003d factory.getDeserializer(metadata);\n     deserializer.open(buffer.inBuffer);\n     dst \u003d deserializer.deserialize(dst);\n     return dst;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Map\u003cString, String\u003e metadata \u003d SerializationBase.getMetadataFromClass(cls);\n    SerializerBase\u003cT\u003e serializer \u003d factory.getSerializer(metadata);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    DeserializerBase\u003cT\u003e deserializer \u003d factory.getDeserializer(metadata);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "src/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,15 @@\n+  public static \u003cT\u003e T copy(Configuration conf, \n+                                T src, T dst) throws IOException {\n+    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n+    buffer.outBuffer.reset();\n+    SerializationFactory factory \u003d getFactory(conf);\n+    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n+    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n+    serializer.open(buffer.outBuffer);\n+    serializer.serialize(src);\n+    buffer.moveData();\n+    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n+    deserializer.open(buffer.inBuffer);\n+    dst \u003d deserializer.deserialize(dst);\n+    return dst;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T copy(Configuration conf, \n                                T src, T dst) throws IOException {\n    CopyInCopyOutBuffer buffer \u003d cloneBuffers.get();\n    buffer.outBuffer.reset();\n    SerializationFactory factory \u003d getFactory(conf);\n    Class\u003cT\u003e cls \u003d (Class\u003cT\u003e) src.getClass();\n    Serializer\u003cT\u003e serializer \u003d factory.getSerializer(cls);\n    serializer.open(buffer.outBuffer);\n    serializer.serialize(src);\n    buffer.moveData();\n    Deserializer\u003cT\u003e deserializer \u003d factory.getDeserializer(cls);\n    deserializer.open(buffer.inBuffer);\n    dst \u003d deserializer.deserialize(dst);\n    return dst;\n  }",
      "path": "src/java/org/apache/hadoop/util/ReflectionUtils.java"
    }
  }
}