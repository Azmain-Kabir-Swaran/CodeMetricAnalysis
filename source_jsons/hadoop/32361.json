{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerExecutor.java",
  "functionName": "getProcessId",
  "functionId": "getProcessId___containerID-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
  "functionStartLine": 821,
  "functionEndLine": 835,
  "numCommitsSeen": 69,
  "timeTaken": 8613,
  "changeHistory": [
    "f7df55f4a89ed2d75d874b32209647ef4f448875",
    "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "2fe343f96348e894e6ed16c447c8c77ba1611d11",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": "Ybodychange",
    "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "2fe343f96348e894e6ed16c447c8c77ba1611d11": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.\n",
      "commitDate": "11/06/19 9:59 AM",
      "commitName": "f7df55f4a89ed2d75d874b32209647ef4f448875",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "25/03/19 12:53 PM",
      "commitNameOld": "3c45762a0bfb403e069a03e30d35dd11432ee8b0",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 77.88,
      "commitsBetweenForRepo": 486,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public String getProcessId(ContainerId containerID) {\n     String pid \u003d null;\n     Path pidFile \u003d pidFiles.get(containerID);\n \n     // If PID is null, this container hasn\u0027t launched yet.\n     if (pidFile !\u003d null) {\n       try {\n         pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n       } catch (IOException e) {\n-        LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n+        LOG.error(\"Got exception reading pid from pid-file {}\", pidFile, e);\n       }\n     }\n \n     return pid;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getProcessId(ContainerId containerID) {\n    String pid \u003d null;\n    Path pidFile \u003d pidFiles.get(containerID);\n\n    // If PID is null, this container hasn\u0027t launched yet.\n    if (pidFile !\u003d null) {\n      try {\n        pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n      } catch (IOException e) {\n        LOG.error(\"Got exception reading pid from pid-file {}\", pidFile, e);\n      }\n    }\n\n    return pid;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {}
    },
    "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5303. Clean up ContainerExecutor JavaDoc. Contributed by Daniel Templeton.\n",
      "commitDate": "14/07/16 6:58 AM",
      "commitName": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "20/06/16 9:56 AM",
      "commitNameOld": "5107a967fa2558deba11c33a326d4d2e5748f452",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 23.88,
      "commitsBetweenForRepo": 299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public String getProcessId(ContainerId containerID) {\n     String pid \u003d null;\n     Path pidFile \u003d pidFiles.get(containerID);\n-    if (pidFile \u003d\u003d null) {\n-      // This container isn\u0027t even launched yet.\n-      return pid;\n+\n+    // If PID is null, this container hasn\u0027t launched yet.\n+    if (pidFile !\u003d null) {\n+      try {\n+        pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n+      } catch (IOException e) {\n+        LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n+      }\n     }\n-    try {\n-      pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n-    } catch (IOException e) {\n-      LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n-    }\n+\n     return pid;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getProcessId(ContainerId containerID) {\n    String pid \u003d null;\n    Path pidFile \u003d pidFiles.get(containerID);\n\n    // If PID is null, this container hasn\u0027t launched yet.\n    if (pidFile !\u003d null) {\n      try {\n        pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n      } catch (IOException e) {\n        LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n      }\n    }\n\n    return pid;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getProcessId(ContainerId containerID) {\n    String pid \u003d null;\n    Path pidFile \u003d pidFiles.get(containerID);\n    if (pidFile \u003d\u003d null) {\n      // This container isn\u0027t even launched yet.\n      return pid;\n    }\n    try {\n      pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n    } catch (IOException e) {\n      LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n    }\n    return pid;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java"
      }
    },
    "2fe343f96348e894e6ed16c447c8c77ba1611d11": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3240. Fixed NodeManager to be able to forcefully cleanup its containers (process-trees) irrespective of whether the container succeeded, or killed. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189711 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 5:03 AM",
      "commitName": "2fe343f96348e894e6ed16c447c8c77ba1611d11",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/08/11 4:27 PM",
      "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 58.52,
      "commitsBetweenForRepo": 422,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,14 @@\n   public String getProcessId(ContainerId containerID) {\n     String pid \u003d null;\n-    ShellCommandExecutor shExec \u003d launchCommandObjs.get(containerID);\n-    if (shExec \u003d\u003d null) {\n+    Path pidFile \u003d pidFiles.get(containerID);\n+    if (pidFile \u003d\u003d null) {\n       // This container isn\u0027t even launched yet.\n       return pid;\n     }\n-    Process proc \u003d shExec.getProcess();\n-    if (proc \u003d\u003d null) {\n-      // This happens if the command is not yet started\n-      return pid;\n-    }\n     try {\n-      Field pidField \u003d proc.getClass().getDeclaredField(\"pid\");\n-      pidField.setAccessible(true);\n-      pid \u003d ((Integer) pidField.get(proc)).toString();\n-    } catch (SecurityException e) {\n-      // SecurityManager not expected with yarn. Ignore.\n-    } catch (NoSuchFieldException e) {\n-      // Yarn only on UNIX for now. Ignore.\n-    } catch (IllegalArgumentException e) {\n-      ;\n-    } catch (IllegalAccessException e) {\n-      ;\n+      pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n+    } catch (IOException e) {\n+      LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n     }\n     return pid;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getProcessId(ContainerId containerID) {\n    String pid \u003d null;\n    Path pidFile \u003d pidFiles.get(containerID);\n    if (pidFile \u003d\u003d null) {\n      // This container isn\u0027t even launched yet.\n      return pid;\n    }\n    try {\n      pid \u003d ProcessIdFileReader.getProcessId(pidFile);\n    } catch (IOException e) {\n      LOG.error(\"Got exception reading pid from pid-file \" + pidFile, e);\n    }\n    return pid;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getProcessId(ContainerId containerID) {\n    String pid \u003d null;\n    ShellCommandExecutor shExec \u003d launchCommandObjs.get(containerID);\n    if (shExec \u003d\u003d null) {\n      // This container isn\u0027t even launched yet.\n      return pid;\n    }\n    Process proc \u003d shExec.getProcess();\n    if (proc \u003d\u003d null) {\n      // This happens if the command is not yet started\n      return pid;\n    }\n    try {\n      Field pidField \u003d proc.getClass().getDeclaredField(\"pid\");\n      pidField.setAccessible(true);\n      pid \u003d ((Integer) pidField.get(proc)).toString();\n    } catch (SecurityException e) {\n      // SecurityManager not expected with yarn. Ignore.\n    } catch (NoSuchFieldException e) {\n      // Yarn only on UNIX for now. Ignore.\n    } catch (IllegalArgumentException e) {\n      ;\n    } catch (IllegalAccessException e) {\n      ;\n    }\n    return pid;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,27 @@\n+  public String getProcessId(ContainerId containerID) {\n+    String pid \u003d null;\n+    ShellCommandExecutor shExec \u003d launchCommandObjs.get(containerID);\n+    if (shExec \u003d\u003d null) {\n+      // This container isn\u0027t even launched yet.\n+      return pid;\n+    }\n+    Process proc \u003d shExec.getProcess();\n+    if (proc \u003d\u003d null) {\n+      // This happens if the command is not yet started\n+      return pid;\n+    }\n+    try {\n+      Field pidField \u003d proc.getClass().getDeclaredField(\"pid\");\n+      pidField.setAccessible(true);\n+      pid \u003d ((Integer) pidField.get(proc)).toString();\n+    } catch (SecurityException e) {\n+      // SecurityManager not expected with yarn. Ignore.\n+    } catch (NoSuchFieldException e) {\n+      // Yarn only on UNIX for now. Ignore.\n+    } catch (IllegalArgumentException e) {\n+      ;\n+    } catch (IllegalAccessException e) {\n+      ;\n+    }\n+    return pid;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getProcessId(ContainerId containerID) {\n    String pid \u003d null;\n    ShellCommandExecutor shExec \u003d launchCommandObjs.get(containerID);\n    if (shExec \u003d\u003d null) {\n      // This container isn\u0027t even launched yet.\n      return pid;\n    }\n    Process proc \u003d shExec.getProcess();\n    if (proc \u003d\u003d null) {\n      // This happens if the command is not yet started\n      return pid;\n    }\n    try {\n      Field pidField \u003d proc.getClass().getDeclaredField(\"pid\");\n      pidField.setAccessible(true);\n      pid \u003d ((Integer) pidField.get(proc)).toString();\n    } catch (SecurityException e) {\n      // SecurityManager not expected with yarn. Ignore.\n    } catch (NoSuchFieldException e) {\n      // Yarn only on UNIX for now. Ignore.\n    } catch (IllegalArgumentException e) {\n      ;\n    } catch (IllegalAccessException e) {\n      ;\n    }\n    return pid;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java"
    }
  }
}