{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientDistributedCacheManager.java",
  "functionName": "isPublic",
  "functionId": "isPublic___conf-Configuration__uri-URI__statCache-Map__URI,FileStatus__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
  "functionStartLine": 247,
  "functionEndLine": 263,
  "numCommitsSeen": 10,
  "timeTaken": 5837,
  "changeHistory": [
    "605b4b61364781fc99ed27035c793153a20d8f71",
    "107da29ff9b6efd02b21c96df60c58ac51590ebd",
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "605b4b61364781fc99ed27035c793153a20d8f71": "Ybodychange",
    "107da29ff9b6efd02b21c96df60c58ac51590ebd": "Ybodychange",
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "605b4b61364781fc99ed27035c793153a20d8f71": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6719. The list of -libjars archives should be replaced with a wildcard in the distributed cache to reduce the application footprint in the state store (Daniel Templeton via sjlee)\n",
      "commitDate": "21/06/16 11:25 AM",
      "commitName": "605b4b61364781fc99ed27035c793153a20d8f71",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "03/06/15 1:19 PM",
      "commitNameOld": "107da29ff9b6efd02b21c96df60c58ac51590ebd",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 383.92,
      "commitsBetweenForRepo": 2549,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,17 @@\n   static boolean isPublic(Configuration conf, URI uri,\n       Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n+    boolean isPublic \u003d true;\n     FileSystem fs \u003d FileSystem.get(uri, conf);\n     Path current \u003d new Path(uri.getPath());\n     current \u003d fs.makeQualified(current);\n-    //the leaf level file should be readable by others\n-    if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n-      return false;\n+\n+    // If we\u0027re looking at a wildcarded path, we only need to check that the\n+    // ancestors allow execution.  Otherwise, look for read permissions in\n+    // addition to the ancestors\u0027 permissions.\n+    if (!current.getName().equals(DistributedCache.WILDCARD)) {\n+      isPublic \u003d checkPermissionOfOther(fs, current, FsAction.READ, statCache);\n     }\n-    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n+\n+    return isPublic \u0026\u0026\n+        ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isPublic(Configuration conf, URI uri,\n      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    boolean isPublic \u003d true;\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    current \u003d fs.makeQualified(current);\n\n    // If we\u0027re looking at a wildcarded path, we only need to check that the\n    // ancestors allow execution.  Otherwise, look for read permissions in\n    // addition to the ancestors\u0027 permissions.\n    if (!current.getName().equals(DistributedCache.WILDCARD)) {\n      isPublic \u003d checkPermissionOfOther(fs, current, FsAction.READ, statCache);\n    }\n\n    return isPublic \u0026\u0026\n        ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {}
    },
    "107da29ff9b6efd02b21c96df60c58ac51590ebd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6374. Distributed Cache File visibility should check permission of full path. Contributed by Chang Li\n",
      "commitDate": "03/06/15 1:19 PM",
      "commitName": "107da29ff9b6efd02b21c96df60c58ac51590ebd",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "09/01/13 4:50 PM",
      "commitNameOld": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 874.81,
      "commitsBetweenForRepo": 6436,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   static boolean isPublic(Configuration conf, URI uri,\n       Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     FileSystem fs \u003d FileSystem.get(uri, conf);\n     Path current \u003d new Path(uri.getPath());\n+    current \u003d fs.makeQualified(current);\n     //the leaf level file should be readable by others\n     if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n       return false;\n     }\n     return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isPublic(Configuration conf, URI uri,\n      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {}
    },
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 4:50 PM",
      "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/01/13 4:50 PM",
          "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 504.02,
          "commitsBetweenForRepo": 3157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-  static boolean isPublic(Configuration conf, URI uri) throws IOException {\n+  static boolean isPublic(Configuration conf, URI uri,\n+      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     FileSystem fs \u003d FileSystem.get(uri, conf);\n     Path current \u003d new Path(uri.getPath());\n     //the leaf level file should be readable by others\n-    if (!checkPermissionOfOther(fs, current, FsAction.READ)) {\n+    if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n       return false;\n     }\n-    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isPublic(Configuration conf, URI uri,\n      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    //the leaf level file should be readable by others\n    if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, uri-URI]",
            "newValue": "[conf-Configuration, uri-URI, statCache-Map\u003cURI,FileStatus\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/01/13 4:50 PM",
          "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 504.02,
          "commitsBetweenForRepo": 3157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-  static boolean isPublic(Configuration conf, URI uri) throws IOException {\n+  static boolean isPublic(Configuration conf, URI uri,\n+      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     FileSystem fs \u003d FileSystem.get(uri, conf);\n     Path current \u003d new Path(uri.getPath());\n     //the leaf level file should be readable by others\n-    if (!checkPermissionOfOther(fs, current, FsAction.READ)) {\n+    if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n       return false;\n     }\n-    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isPublic(Configuration conf, URI uri,\n      Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    //the leaf level file should be readable by others\n    if (!checkPermissionOfOther(fs, current, FsAction.READ, statCache)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static boolean isPublic(Configuration conf, URI uri) throws IOException {\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    //the leaf level file should be readable by others\n    if (!checkPermissionOfOther(fs, current, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static boolean isPublic(Configuration conf, URI uri) throws IOException {\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    //the leaf level file should be readable by others\n    if (!checkPermissionOfOther(fs, current, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent());\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+  static boolean isPublic(Configuration conf, URI uri) throws IOException {\n+    FileSystem fs \u003d FileSystem.get(uri, conf);\n+    Path current \u003d new Path(uri.getPath());\n+    //the leaf level file should be readable by others\n+    if (!checkPermissionOfOther(fs, current, FsAction.READ)) {\n+      return false;\n+    }\n+    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isPublic(Configuration conf, URI uri) throws IOException {\n    FileSystem fs \u003d FileSystem.get(uri, conf);\n    Path current \u003d new Path(uri.getPath());\n    //the leaf level file should be readable by others\n    if (!checkPermissionOfOther(fs, current, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent());\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
    }
  }
}